/*
 * Tencent is pleased to support the open source community by making Blueking Container Service available.
 * Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
 * Licensed under the MIT License (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * http://opensource.org/licenses/MIT
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language governing permissions and
 * limitations under the License.
 */

// gen-lint is a program for auto generate .golangci.yml for mod
package main

import (
	"fmt"
	"path"
	"regexp"
	"strings"

	"github.com/bitfield/script"
)

var testMod = []string{
	"bcs-webconsole",
	"bcs-bscp",
	"bcs-monitor",
}

func matchTestMod(line string) bool {
	for _, m := range testMod {
		if strings.Contains(line, m) {
			return true
		}
	}
	return false
}

func main() {
	mods, err := script.FindFiles("./").Match("go.mod").String()
	if err != nil {
		panic(err)
	}
	re := regexp.MustCompile(`module\s+(.*)`)
	for _, line := range strings.Split(mods, "\n") {
		line = strings.TrimSpace(line)
		if line == "" {
			continue
		}
		if !matchTestMod(line) {
			continue
		}
		v, err := script.File(line).String()
		if err != nil {
			continue
		}
		match := re.FindStringSubmatch(v)
		if len(match) <= 1 {
			continue
		}
		module := match[1]
		d := path.Dir(line)
		_, err = script.File("./.golangci.yml").
			Replace("# - gci", "- gci").
			Replace("# goimports", "goimports").
			Replace("#   local-prefixes: github.com/Tencent/bk-bcs", fmt.Sprintf("  local-prefixes: %s", module)).
			Replace("# gci", "gci").
			Replace("#   sections", "  sections").
			Replace("#     - standard", "    - standard").
			Replace("#     - default", "    - default").
			Replace("#     - prefix(github.com/Tencent/bk-bcs)", fmt.Sprintf("    - prefix(%s)", module)).
			Replace("run:", "# Code generated by scripts/gen-lint. DO NOT EDIT.\n\nrun:").
			WriteFile(path.Join(d, "./.golangci.yml"))
		if err != nil {
			panic(err)
		}
		fmt.Printf("generate .golangci.yml to %s done.\n", d)
	}
}
