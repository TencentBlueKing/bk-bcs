#!/bin/bash
#######################################
# Tencent is pleased to support the open source community by making Blueking Container Service available.
# Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
# Licensed under the MIT License (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
# http://opensource.org/licenses/MIT
# Unless required by applicable law or agreed to in writing, software distributed under
# the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the License for the specific language governing permissions and
# limitations under the License.
#######################################

set -euo pipefail

# install yq
SELF_DIR=$(dirname "$(readlink -f "$0")")
ROOT_DIR="${SELF_DIR}/.."
readonly SELF_DIR ROOT_DIR

safe_source() {
  local source_file=$1
  if [[ -f ${source_file} ]]; then
    #shellcheck source=/dev/null
    source "${source_file}"
  else
    echo "[ERROR]: FAIL to source, missing ${source_file}"
    exit 1
  fi
}

_curl_yq() {
  local bin_path name ver file url
  bin_path=${ROOT_DIR}/version-${K8S_VER}/bin-tools/
  mkdir -p "$bin_path"

  name="yq"
  ver=$(awk '/version: \"'"${K8S_VER}"'\"/{f=1;next} f && /'"${name}"':/{gsub("\"","",$2);print $2;exit}' "${ROOT_DIR}"/env/offline-manifest.yaml)
  file="${name}-${ver}.xz"
  url=${REPO_URL:-}/${file}
  if curl -sSfL "${url}" -o "${bin_path}/${file}" -m "360"; then
    utils::log "INFO" "Downloaded ${url}"
  else
    utils::log "ERROR" "fail to download ${url}"
  fi
  _offline_yq
}

_offline_yq() {
  local bin_path tar_name
  bin_path=${ROOT_DIR}/version-${K8S_VER}/bin-tools/
  tar_name=$(find "$bin_path" -iname "yq-*.xz" -type f | head -1)

  unxz -dc "${tar_name}" >/tmp/yq
  chmod +x /tmp/yq
  mv /tmp/yq /usr/local/bin/yq
}

main() {
  local source_files
  source_files=("${ROOT_DIR}/functions/utils.sh" "${ROOT_DIR}/env/bcs.env")
  for file in "${source_files[@]}"; do
    safe_source "$file"
  done
  yq_ver=$(awk '/yq/{gsub("\"","",$2);print $2;exit}' \
    "${ROOT_DIR}"/env/offline-manifest.yaml)

  if ! command -v yq >/dev/null; then
    if [[ -n ${BCS_OFFLINE:-} ]]; then
      _offline_yq
    else
      _curl_yq "$yq_ver"
    fi
  fi
  utils::log "OK" "installed $(yq -V)"
  "$ROOT_DIR"/k8s/operate_completion yq
}

main
