#!/bin/bash

#######################################
# Tencent is pleased to support the open source community by making Blueking Container Service available.
# Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
# Licensed under the MIT License (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
# http://opensource.org/licenses/MIT
# Unless required by applicable law or agreed to in writing, software distributed under
# the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the License for the specific language governing permissions and
# limitations under the License.
#######################################

set -euo pipefail
trap "utils::on_ERR;" ERR
HELM_VER=${HELM_VER:-"3.7.2"}

SELF_DIR=$(dirname "$(readlink -f "$0")")
ROOT_DIR="${SELF_DIR}/.."

safe_source() {
  local source_file=$1
  if [[ -f ${source_file} ]]; then
    #shellcheck source=/dev/null
    source "${source_file}"
  else
    echo "[ERROR]: FAIL to source, missing ${source_file}"
    exit 1
  fi
}

source_files=("${ROOT_DIR}/functions/utils.sh" "${ROOT_DIR}/env/bcs.env")
for file in "${source_files[@]}"; do
  safe_source "$file"
done

if ! helm version --short /dev/null | grep -qoE "^v${HELM_VER}"; then
  helm_image=${BK_PUBLIC_REPO:-"docker.io"}/alpine/helm:3.7.2
  utils::log "DEBUG" "helm image url: ${helm_image}"

  if [[ -n ${BCS_OFFLINE:-} ]]; then
    # ToDo helm image offline install
    true
  fi

  case "${CRI_TYPE,,}" in
    "docker")
      if ! command -v docker &>/dev/null; then
        utils::log "ERROR" "docker client: docker is not found"
      fi
      docker run -v /usr/bin:/tmp --rm --entrypoint /bin/cp "${helm_image}" \
        -f /usr/bin/helm /tmp/ || utils::log "ERROR" "pull helm image failed"
      ;;
    "containerd")
      if ! command -v ctr &>/dev/null; then
        utils::log "ERROR" "containerd client: ctr is not found"
      fi
      if ctr i pull --hosts-dir "/etc/containerd/certs.d" "${helm_image}"; then
        if ! ctr run --rm --mount type=bind,src=/usr/bin,dst=/tmp,options=rbind:rw \
          "${helm_image}" helm-copy."$(date +%s)" /bin/cp -f /usr/bin/helm /tmp/; then
          utils::log "ERROR" "containerd fail to run ${helm_image}"
        fi
      else
        utils::log "ERROR" "pull helm image failed"
      fi
      ;;
    *)
      # ToDo: Unified standard error code
      export ERR_CODE=1
      utils::log "FATAL" "unkown CRI_TYPE: $CRI_TYPE"
      ;;
  esac
fi
utils::log "OK" "helm: $(helm version --short) install!"

"${ROOT_DIR}"/k8s/operate_completion helm
