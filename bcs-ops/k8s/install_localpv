#!/bin/bash

#######################################
# Tencent is pleased to support the open source community by making Blueking Container Service available.
# Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
# Licensed under the MIT License (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
# http://opensource.org/licenses/MIT
# Unless required by applicable law or agreed to in writing, software distributed under
# the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the License for the specific language governing permissions and
# limitations under the License.
#######################################

set -euo pipefail

#######################################
# install localpv chart
# Arguments:
# $1: mount_dir, default /mnt/blueking
#######################################

VERSION="v2.4.0"
PROGRAM="$(basename "$0")"

SELF_DIR=$(dirname "$(readlink -f "$0")")
ROOT_DIR="${SELF_DIR}/.."

readonly VERSION PROGRAM SELF_DIR ROOT_DIR

usage_and_exit() {
  cat <<EOF
Usage:
    $PROGRAM
      [ -h --help -?  show usage ]
      [ -v -V --version show script version]
EOF
  exit "$1"
}

version() {
  echo "$PROGRAM version $VERSION"
}

safe_source() {
  local source_file=$1
  if [[ -f ${source_file} ]]; then
    #shellcheck source=/dev/null
    source "${source_file}"
  else
    echo "[ERROR]: FAIL to source, missing ${source_file}"
    exit 1
  fi
}

install_localpv() {
  local namespace="bk-system" mount_path="$1"
  kubectl get ns "$namespace" || kubectl create ns $namespace

  # ToDo helm chart offline install
  if [[ -n ${BCS_OFFLINE:-} ]]; then
    true
  else
    [[ -n ${BKREPO_URL:-} ]] || utils::log "FAIL" "missing bkrepo url ${BKREPO_URL}"
    if ! k8s::safe_add_helmrepo blueking "${BKREPO_URL}"; then
      utils::log "WARNING" "something wrong with helm, skip install localpv"
      return 1
    fi

    utils::log "INFO" "installing localpv"
    cat <<EOF | helm upgrade --install provisioner blueking/provisioner -n $namespace --version ${VERSION} --debug -f - || utils::log "FATAL" "helm upgrade localpv failed"
daemonset:
  image: ${BK_PUBLIC_REPO}/k8s.gcr.io/sig-storage/local-volume-provisioner:${VERSION}
classes:
- name: local-storage
  hostDir: $mount_path
  volumeMode: Filesystem
  storageClass:
    # create and set storage class as default
    isDefaultClass: true
    reclaimPolicy: Delete
EOF
  fi
  kubectl -n $namespace get daemonset -l app.kubernetes.io/instance=localpv --output name \
    | xargs -I{} kubectl -n $namespace rollout status --timeout=600s {}
  utils::log "OK" "localpv installed"
}

main() {
  local source_files
  source_files=("${ROOT_DIR}/functions/utils.sh" "${ROOT_DIR}/functions/k8s.sh" "${ROOT_DIR}/env/bcs.env")
  for file in "${source_files[@]}"; do
    safe_source "$file"
  done
  install_localpv "$1"
}
main "${1:-/mnt/blueking}"
