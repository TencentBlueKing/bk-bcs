#!/bin/bash

#######################################
# Tencent is pleased to support the open source community by making Blueking Container Service available.
# Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
# Licensed under the MIT License (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
# http://opensource.org/licenses/MIT
# Unless required by applicable law or agreed to in writing, software distributed under
# the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the License for the specific language governing permissions and
# limitations under the License.
#######################################

set -euo pipefail

# install k8s bin tool: kubeadm\kubelet\kubectl
SELF_DIR=$(dirname "$(readlink -f "$0")")
ROOT_DIR="${SELF_DIR}/.."
readonly SELF_DIR ROOT_DIR

add_yum_repo() {
  local repo_url basearch
  basearch="$(uname -m)"
  if [[ -z ${MIRROR_URL:-} ]]; then
    repo_url="https://packages.cloud.google.com/yum/repos/kubernetes-el7-${basearch}"
  else
    repo_url="${MIRROR_URL}/kubernetes/yum/repos/kubernetes-el7-${basearch}"
  fi
  utils::log "DEBUG" "kubernete yum repo url: ${repo_url}"

  cat >"$ROOT_DIR/kubernetes.repo" <<EOF
[kubernetes]
name=Kubernetes
baseurl=${repo_url}
enabled=1
gpgcheck=0
EOF
  yum install -y -q yum-utils
  yum-config-manager --add-repo "$ROOT_DIR/kubernetes.repo"
  yum clean all
  yum makecache fast
}

#######################################
# check file and source
# Arguments:
# $1: source_file
# Return:
# if file exists, source return 0; else exit 1
#######################################
safe_source() {
  local source_file=$1
  if [[ -f ${source_file} ]]; then
    #shellcheck source=/dev/null
    source "${source_file}"
  else
    echo "[ERROR]: FAIL to source, missing ${source_file}"
    exit 1
  fi
}

main() {
  local source_file
  source_files=("${ROOT_DIR}/functions/utils.sh" "${ROOT_DIR}/env/bcs.env")
  for file in "${source_files[@]}"; do
    safe_source "$file"
  done

  if [[ -n ${BCS_OFFLINE:-} ]]; then
    true
  fi

  add_yum_repo

  local pkg_pat pkg_ver
  pkg_pat="${K8S_VER:-}"
  pkg_ver="$(yum list kubeadm --showduplicates \
    | awk '/'"$pkg_pat"'/{last=$2} END{sub(/.*:/,"",last);print last}')"
  [[ -n $pkg_ver ]] \
    || utils::log "ERROR" "${K8S_VER:-} not found amongst yum list results"
  yum install -y "kubeadm-${pkg_ver}" "kubelet-${pkg_ver}" "kubectl-${pkg_ver}"

  utils::log "INFO" "check kubeadm status"
  if kubeadm version -o short; then
    utils::log "OK" "kubeadm install success"
  else
    utils::log "ERROR" "Did kubeadm get installed?"
  fi
  "${ROOT_DIR}"/k8s/operate_completion kubeadm

  utils::log "INFO" "check kubelet status"
  if kubelet --version; then
    utils::log "OK" "kubeadm install success"
    systemctl enable --now kubelet
  else
    utils::log "ERROR" "Did kubelet get installed?"
  fi

  utils::log "INFO" "check kubectl status"
  if kubectl version --client --short; then
    utils::log "OK" "kubelet install success"
  else
    utils::log "ERROR" "Did kubectl get installed?"
  fi
  "${ROOT_DIR}"/k8s/operate_completion kubectl

  return 0
}

main
