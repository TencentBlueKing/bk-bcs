// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bcsproject.proto

package bcsproject

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Project struct {
	CreateTime           string   `protobuf:"bytes,1,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string   `protobuf:"bytes,2,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	Creator              string   `protobuf:"bytes,3,opt,name=creator,proto3" json:"creator,omitempty"`
	Updater              string   `protobuf:"bytes,4,opt,name=updater,proto3" json:"updater,omitempty"`
	Managers             string   `protobuf:"bytes,5,opt,name=managers,proto3" json:"managers,omitempty"`
	ProjectID            string   `protobuf:"bytes,6,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Name                 string   `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	ProjectCode          string   `protobuf:"bytes,8,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	UseBKRes             bool     `protobuf:"varint,9,opt,name=useBKRes,proto3" json:"useBKRes,omitempty"`
	Description          string   `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	IsOffline            bool     `protobuf:"varint,11,opt,name=isOffline,proto3" json:"isOffline,omitempty"`
	Kind                 string   `protobuf:"bytes,12,opt,name=kind,proto3" json:"kind,omitempty"`
	BusinessID           string   `protobuf:"bytes,13,opt,name=businessID,proto3" json:"businessID,omitempty"`
	IsSecret             bool     `protobuf:"varint,14,opt,name=isSecret,proto3" json:"isSecret,omitempty"`
	ProjectType          uint32   `protobuf:"varint,15,opt,name=projectType,proto3" json:"projectType,omitempty"`
	DeployType           uint32   `protobuf:"varint,16,opt,name=deployType,proto3" json:"deployType,omitempty"`
	BGID                 string   `protobuf:"bytes,17,opt,name=BGID,proto3" json:"BGID,omitempty"`
	BGName               string   `protobuf:"bytes,18,opt,name=BGName,proto3" json:"BGName,omitempty"`
	DeptID               string   `protobuf:"bytes,19,opt,name=deptID,proto3" json:"deptID,omitempty"`
	DeptName             string   `protobuf:"bytes,20,opt,name=deptName,proto3" json:"deptName,omitempty"`
	CenterID             string   `protobuf:"bytes,21,opt,name=centerID,proto3" json:"centerID,omitempty"`
	CenterName           string   `protobuf:"bytes,22,opt,name=centerName,proto3" json:"centerName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()    {}
func (*Project) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{0}
}

func (m *Project) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Project.Unmarshal(m, b)
}
func (m *Project) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Project.Marshal(b, m, deterministic)
}
func (m *Project) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Project.Merge(m, src)
}
func (m *Project) XXX_Size() int {
	return xxx_messageInfo_Project.Size(m)
}
func (m *Project) XXX_DiscardUnknown() {
	xxx_messageInfo_Project.DiscardUnknown(m)
}

var xxx_messageInfo_Project proto.InternalMessageInfo

func (m *Project) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *Project) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *Project) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Project) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *Project) GetManagers() string {
	if m != nil {
		return m.Managers
	}
	return ""
}

func (m *Project) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *Project) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Project) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *Project) GetUseBKRes() bool {
	if m != nil {
		return m.UseBKRes
	}
	return false
}

func (m *Project) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Project) GetIsOffline() bool {
	if m != nil {
		return m.IsOffline
	}
	return false
}

func (m *Project) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Project) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *Project) GetIsSecret() bool {
	if m != nil {
		return m.IsSecret
	}
	return false
}

func (m *Project) GetProjectType() uint32 {
	if m != nil {
		return m.ProjectType
	}
	return 0
}

func (m *Project) GetDeployType() uint32 {
	if m != nil {
		return m.DeployType
	}
	return 0
}

func (m *Project) GetBGID() string {
	if m != nil {
		return m.BGID
	}
	return ""
}

func (m *Project) GetBGName() string {
	if m != nil {
		return m.BGName
	}
	return ""
}

func (m *Project) GetDeptID() string {
	if m != nil {
		return m.DeptID
	}
	return ""
}

func (m *Project) GetDeptName() string {
	if m != nil {
		return m.DeptName
	}
	return ""
}

func (m *Project) GetCenterID() string {
	if m != nil {
		return m.CenterID
	}
	return ""
}

func (m *Project) GetCenterName() string {
	if m != nil {
		return m.CenterName
	}
	return ""
}

type CreateProjectRequest struct {
	CreateTime           string   `protobuf:"bytes,1,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Creator              string   `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	ProjectID            string   `protobuf:"bytes,3,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	ProjectCode          string   `protobuf:"bytes,5,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	UseBKRes             bool     `protobuf:"varint,6,opt,name=useBKRes,proto3" json:"useBKRes,omitempty"`
	Description          string   `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	IsOffline            bool     `protobuf:"varint,8,opt,name=isOffline,proto3" json:"isOffline,omitempty"`
	Kind                 string   `protobuf:"bytes,9,opt,name=kind,proto3" json:"kind,omitempty"`
	BusinessID           string   `protobuf:"bytes,10,opt,name=businessID,proto3" json:"businessID,omitempty"`
	IsSecret             bool     `protobuf:"varint,11,opt,name=isSecret,proto3" json:"isSecret,omitempty"`
	ProjectType          uint32   `protobuf:"varint,12,opt,name=projectType,proto3" json:"projectType,omitempty"`
	DeployType           uint32   `protobuf:"varint,13,opt,name=deployType,proto3" json:"deployType,omitempty"`
	BGID                 string   `protobuf:"bytes,14,opt,name=BGID,proto3" json:"BGID,omitempty"`
	BGName               string   `protobuf:"bytes,15,opt,name=BGName,proto3" json:"BGName,omitempty"`
	DeptID               string   `protobuf:"bytes,16,opt,name=deptID,proto3" json:"deptID,omitempty"`
	DeptName             string   `protobuf:"bytes,17,opt,name=deptName,proto3" json:"deptName,omitempty"`
	CenterID             string   `protobuf:"bytes,18,opt,name=centerID,proto3" json:"centerID,omitempty"`
	CenterName           string   `protobuf:"bytes,19,opt,name=centerName,proto3" json:"centerName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateProjectRequest) Reset()         { *m = CreateProjectRequest{} }
func (m *CreateProjectRequest) String() string { return proto.CompactTextString(m) }
func (*CreateProjectRequest) ProtoMessage()    {}
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{1}
}

func (m *CreateProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProjectRequest.Unmarshal(m, b)
}
func (m *CreateProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProjectRequest.Marshal(b, m, deterministic)
}
func (m *CreateProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProjectRequest.Merge(m, src)
}
func (m *CreateProjectRequest) XXX_Size() int {
	return xxx_messageInfo_CreateProjectRequest.Size(m)
}
func (m *CreateProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProjectRequest proto.InternalMessageInfo

func (m *CreateProjectRequest) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *CreateProjectRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CreateProjectRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *CreateProjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateProjectRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *CreateProjectRequest) GetUseBKRes() bool {
	if m != nil {
		return m.UseBKRes
	}
	return false
}

func (m *CreateProjectRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateProjectRequest) GetIsOffline() bool {
	if m != nil {
		return m.IsOffline
	}
	return false
}

func (m *CreateProjectRequest) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *CreateProjectRequest) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *CreateProjectRequest) GetIsSecret() bool {
	if m != nil {
		return m.IsSecret
	}
	return false
}

func (m *CreateProjectRequest) GetProjectType() uint32 {
	if m != nil {
		return m.ProjectType
	}
	return 0
}

func (m *CreateProjectRequest) GetDeployType() uint32 {
	if m != nil {
		return m.DeployType
	}
	return 0
}

func (m *CreateProjectRequest) GetBGID() string {
	if m != nil {
		return m.BGID
	}
	return ""
}

func (m *CreateProjectRequest) GetBGName() string {
	if m != nil {
		return m.BGName
	}
	return ""
}

func (m *CreateProjectRequest) GetDeptID() string {
	if m != nil {
		return m.DeptID
	}
	return ""
}

func (m *CreateProjectRequest) GetDeptName() string {
	if m != nil {
		return m.DeptName
	}
	return ""
}

func (m *CreateProjectRequest) GetCenterID() string {
	if m != nil {
		return m.CenterID
	}
	return ""
}

func (m *CreateProjectRequest) GetCenterName() string {
	if m != nil {
		return m.CenterName
	}
	return ""
}

type GetProjectRequest struct {
	ProjectIDOrCode      string   `protobuf:"bytes,1,opt,name=projectIDOrCode,proto3" json:"projectIDOrCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProjectRequest) Reset()         { *m = GetProjectRequest{} }
func (m *GetProjectRequest) String() string { return proto.CompactTextString(m) }
func (*GetProjectRequest) ProtoMessage()    {}
func (*GetProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{2}
}

func (m *GetProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectRequest.Unmarshal(m, b)
}
func (m *GetProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectRequest.Marshal(b, m, deterministic)
}
func (m *GetProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectRequest.Merge(m, src)
}
func (m *GetProjectRequest) XXX_Size() int {
	return xxx_messageInfo_GetProjectRequest.Size(m)
}
func (m *GetProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectRequest proto.InternalMessageInfo

func (m *GetProjectRequest) GetProjectIDOrCode() string {
	if m != nil {
		return m.ProjectIDOrCode
	}
	return ""
}

type UpdateProjectRequest struct {
	ProjectID            string              `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Name                 string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Updater              string              `protobuf:"bytes,3,opt,name=updater,proto3" json:"updater,omitempty"`
	UseBKRes             *wrappers.BoolValue `protobuf:"bytes,4,opt,name=useBKRes,proto3" json:"useBKRes,omitempty"`
	Description          string              `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	IsOffline            *wrappers.BoolValue `protobuf:"bytes,6,opt,name=isOffline,proto3" json:"isOffline,omitempty"`
	Kind                 string              `protobuf:"bytes,7,opt,name=kind,proto3" json:"kind,omitempty"`
	BusinessID           string              `protobuf:"bytes,8,opt,name=businessID,proto3" json:"businessID,omitempty"`
	IsSecret             *wrappers.BoolValue `protobuf:"bytes,9,opt,name=isSecret,proto3" json:"isSecret,omitempty"`
	DeployType           uint32              `protobuf:"varint,10,opt,name=deployType,proto3" json:"deployType,omitempty"`
	ProjectType          uint32              `protobuf:"varint,11,opt,name=projectType,proto3" json:"projectType,omitempty"`
	BGID                 string              `protobuf:"bytes,12,opt,name=BGID,proto3" json:"BGID,omitempty"`
	BGName               string              `protobuf:"bytes,13,opt,name=BGName,proto3" json:"BGName,omitempty"`
	DeptID               string              `protobuf:"bytes,14,opt,name=deptID,proto3" json:"deptID,omitempty"`
	DeptName             string              `protobuf:"bytes,15,opt,name=deptName,proto3" json:"deptName,omitempty"`
	CenterID             string              `protobuf:"bytes,16,opt,name=centerID,proto3" json:"centerID,omitempty"`
	CenterName           string              `protobuf:"bytes,17,opt,name=centerName,proto3" json:"centerName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *UpdateProjectRequest) Reset()         { *m = UpdateProjectRequest{} }
func (m *UpdateProjectRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateProjectRequest) ProtoMessage()    {}
func (*UpdateProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{3}
}

func (m *UpdateProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProjectRequest.Unmarshal(m, b)
}
func (m *UpdateProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProjectRequest.Marshal(b, m, deterministic)
}
func (m *UpdateProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProjectRequest.Merge(m, src)
}
func (m *UpdateProjectRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateProjectRequest.Size(m)
}
func (m *UpdateProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProjectRequest proto.InternalMessageInfo

func (m *UpdateProjectRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *UpdateProjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateProjectRequest) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *UpdateProjectRequest) GetUseBKRes() *wrappers.BoolValue {
	if m != nil {
		return m.UseBKRes
	}
	return nil
}

func (m *UpdateProjectRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdateProjectRequest) GetIsOffline() *wrappers.BoolValue {
	if m != nil {
		return m.IsOffline
	}
	return nil
}

func (m *UpdateProjectRequest) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *UpdateProjectRequest) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *UpdateProjectRequest) GetIsSecret() *wrappers.BoolValue {
	if m != nil {
		return m.IsSecret
	}
	return nil
}

func (m *UpdateProjectRequest) GetDeployType() uint32 {
	if m != nil {
		return m.DeployType
	}
	return 0
}

func (m *UpdateProjectRequest) GetProjectType() uint32 {
	if m != nil {
		return m.ProjectType
	}
	return 0
}

func (m *UpdateProjectRequest) GetBGID() string {
	if m != nil {
		return m.BGID
	}
	return ""
}

func (m *UpdateProjectRequest) GetBGName() string {
	if m != nil {
		return m.BGName
	}
	return ""
}

func (m *UpdateProjectRequest) GetDeptID() string {
	if m != nil {
		return m.DeptID
	}
	return ""
}

func (m *UpdateProjectRequest) GetDeptName() string {
	if m != nil {
		return m.DeptName
	}
	return ""
}

func (m *UpdateProjectRequest) GetCenterID() string {
	if m != nil {
		return m.CenterID
	}
	return ""
}

func (m *UpdateProjectRequest) GetCenterName() string {
	if m != nil {
		return m.CenterName
	}
	return ""
}

type DeleteProjectRequest struct {
	ProjectID            string   `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteProjectRequest) Reset()         { *m = DeleteProjectRequest{} }
func (m *DeleteProjectRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteProjectRequest) ProtoMessage()    {}
func (*DeleteProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{4}
}

func (m *DeleteProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteProjectRequest.Unmarshal(m, b)
}
func (m *DeleteProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteProjectRequest.Marshal(b, m, deterministic)
}
func (m *DeleteProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteProjectRequest.Merge(m, src)
}
func (m *DeleteProjectRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteProjectRequest.Size(m)
}
func (m *DeleteProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteProjectRequest proto.InternalMessageInfo

func (m *DeleteProjectRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

type ProjectResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *Project `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestID            string   `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProjectResponse) Reset()         { *m = ProjectResponse{} }
func (m *ProjectResponse) String() string { return proto.CompactTextString(m) }
func (*ProjectResponse) ProtoMessage()    {}
func (*ProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{5}
}

func (m *ProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectResponse.Unmarshal(m, b)
}
func (m *ProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectResponse.Marshal(b, m, deterministic)
}
func (m *ProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectResponse.Merge(m, src)
}
func (m *ProjectResponse) XXX_Size() int {
	return xxx_messageInfo_ProjectResponse.Size(m)
}
func (m *ProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectResponse proto.InternalMessageInfo

func (m *ProjectResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ProjectResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ProjectResponse) GetData() *Project {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ProjectResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type ListProjectsRequest struct {
	ProjectIDs           string   `protobuf:"bytes,1,opt,name=projectIDs,proto3" json:"projectIDs,omitempty"`
	Names                string   `protobuf:"bytes,2,opt,name=names,proto3" json:"names,omitempty"`
	ProjectCode          string   `protobuf:"bytes,3,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	SearchName           string   `protobuf:"bytes,4,opt,name=searchName,proto3" json:"searchName,omitempty"`
	Kind                 string   `protobuf:"bytes,5,opt,name=kind,proto3" json:"kind,omitempty"`
	Offset               int64    `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int64    `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	All                  bool     `protobuf:"varint,8,opt,name=all,proto3" json:"all,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListProjectsRequest) Reset()         { *m = ListProjectsRequest{} }
func (m *ListProjectsRequest) String() string { return proto.CompactTextString(m) }
func (*ListProjectsRequest) ProtoMessage()    {}
func (*ListProjectsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{6}
}

func (m *ListProjectsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectsRequest.Unmarshal(m, b)
}
func (m *ListProjectsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectsRequest.Marshal(b, m, deterministic)
}
func (m *ListProjectsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectsRequest.Merge(m, src)
}
func (m *ListProjectsRequest) XXX_Size() int {
	return xxx_messageInfo_ListProjectsRequest.Size(m)
}
func (m *ListProjectsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectsRequest proto.InternalMessageInfo

func (m *ListProjectsRequest) GetProjectIDs() string {
	if m != nil {
		return m.ProjectIDs
	}
	return ""
}

func (m *ListProjectsRequest) GetNames() string {
	if m != nil {
		return m.Names
	}
	return ""
}

func (m *ListProjectsRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *ListProjectsRequest) GetSearchName() string {
	if m != nil {
		return m.SearchName
	}
	return ""
}

func (m *ListProjectsRequest) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *ListProjectsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListProjectsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListProjectsRequest) GetAll() bool {
	if m != nil {
		return m.All
	}
	return false
}

type ListProjectData struct {
	Total                uint32     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Results              []*Project `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListProjectData) Reset()         { *m = ListProjectData{} }
func (m *ListProjectData) String() string { return proto.CompactTextString(m) }
func (*ListProjectData) ProtoMessage()    {}
func (*ListProjectData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{7}
}

func (m *ListProjectData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectData.Unmarshal(m, b)
}
func (m *ListProjectData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectData.Marshal(b, m, deterministic)
}
func (m *ListProjectData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectData.Merge(m, src)
}
func (m *ListProjectData) XXX_Size() int {
	return xxx_messageInfo_ListProjectData.Size(m)
}
func (m *ListProjectData) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectData.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectData proto.InternalMessageInfo

func (m *ListProjectData) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListProjectData) GetResults() []*Project {
	if m != nil {
		return m.Results
	}
	return nil
}

type ListProjectsResponse struct {
	Code                 uint32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *ListProjectData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestID            string           `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListProjectsResponse) Reset()         { *m = ListProjectsResponse{} }
func (m *ListProjectsResponse) String() string { return proto.CompactTextString(m) }
func (*ListProjectsResponse) ProtoMessage()    {}
func (*ListProjectsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{8}
}

func (m *ListProjectsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectsResponse.Unmarshal(m, b)
}
func (m *ListProjectsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectsResponse.Marshal(b, m, deterministic)
}
func (m *ListProjectsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectsResponse.Merge(m, src)
}
func (m *ListProjectsResponse) XXX_Size() int {
	return xxx_messageInfo_ListProjectsResponse.Size(m)
}
func (m *ListProjectsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectsResponse proto.InternalMessageInfo

func (m *ListProjectsResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListProjectsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListProjectsResponse) GetData() *ListProjectData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListProjectsResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

func init() {
	proto.RegisterType((*Project)(nil), "bcsproject.Project")
	proto.RegisterType((*CreateProjectRequest)(nil), "bcsproject.CreateProjectRequest")
	proto.RegisterType((*GetProjectRequest)(nil), "bcsproject.GetProjectRequest")
	proto.RegisterType((*UpdateProjectRequest)(nil), "bcsproject.UpdateProjectRequest")
	proto.RegisterType((*DeleteProjectRequest)(nil), "bcsproject.DeleteProjectRequest")
	proto.RegisterType((*ProjectResponse)(nil), "bcsproject.ProjectResponse")
	proto.RegisterType((*ListProjectsRequest)(nil), "bcsproject.ListProjectsRequest")
	proto.RegisterType((*ListProjectData)(nil), "bcsproject.ListProjectData")
	proto.RegisterType((*ListProjectsResponse)(nil), "bcsproject.ListProjectsResponse")
}

func init() { proto.RegisterFile("bcsproject.proto", fileDescriptor_0e6fb1d9dcd095e1) }

var fileDescriptor_0e6fb1d9dcd095e1 = []byte{
	// 2647 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x9a, 0xdf, 0x77, 0x13, 0xc7,
	0xf5, 0xc0, 0x23, 0xff, 0x10, 0xf6, 0xd8, 0xc6, 0x66, 0x70, 0x82, 0xbe, 0x4a, 0xf8, 0x66, 0xab,
	0x84, 0xd4, 0x59, 0x64, 0xcb, 0x5e, 0x48, 0x42, 0x94, 0xa4, 0xcd, 0xca, 0x4a, 0xa9, 0x42, 0x48,
	0xe8, 0x9a, 0x42, 0x9b, 0xb4, 0xcd, 0x91, 0xe5, 0xb5, 0xab, 0x20, 0x4b, 0xaa, 0x56, 0x26, 0xa5,
	0x3d, 0x39, 0xb5, 0x43, 0x6c, 0x13, 0x7e, 0x54, 0xce, 0xc6, 0x60, 0x30, 0x10, 0x50, 0x6b, 0x88,
	0x48, 0xb0, 0x65, 0x48, 0x20, 0x42, 0x82, 0xe8, 0xa5, 0x7d, 0xeb, 0x53, 0xfa, 0x2f, 0xec, 0x2f,
	0x9d, 0xd3, 0x73, 0xfa, 0xce, 0x53, 0xcf, 0xce, 0xec, 0x4a, 0x23, 0x23, 0x11, 0x12, 0xe4, 0x24,
	0x4f, 0x68, 0xef, 0xce, 0xbd, 0x73, 0xef, 0x9d, 0x9d, 0xfb, 0xb9, 0x33, 0x06, 0x74, 0x0c, 0x06,
	0x84, 0x68, 0x2c, 0xf2, 0x16, 0x1f, 0x88, 0xf7, 0x44, 0x63, 0x91, 0x78, 0x04, 0x82, 0x92, 0xc4,
	0xfe, 0xc8, 0x48, 0x24, 0x32, 0x12, 0xe2, 0x5d, 0xfe, 0x68, 0xd0, 0xe5, 0x0f, 0x87, 0x23, 0x71,
	0x7f, 0x3c, 0x18, 0x09, 0x0b, 0x78, 0xa4, 0xfd, 0xff, 0x8d, 0xb7, 0xe8, 0x69, 0x70, 0x6c, 0xd8,
	0xf5, 0x76, 0xcc, 0x1f, 0x8d, 0xf2, 0x31, 0xf3, 0xbd, 0x13, 0xfd, 0x13, 0xe8, 0x1e, 0xe1, 0xc3,
	0xdd, 0xc2, 0xdb, 0xfe, 0x91, 0x11, 0x3e, 0xe6, 0x8a, 0x44, 0x91, 0x85, 0x0a, 0xd6, 0x36, 0xec,
	0xf7, 0x87, 0x82, 0x43, 0xfe, 0x38, 0xef, 0x32, 0x7f, 0xe0, 0x17, 0x8e, 0x7f, 0xb4, 0x83, 0x35,
	0xbb, 0xb0, 0x43, 0xf0, 0x05, 0x00, 0x02, 0x31, 0xde, 0x1f, 0xe7, 0x77, 0x07, 0x47, 0x79, 0x9b,
	0x85, 0xb2, 0x74, 0x35, 0x7b, 0x36, 0x8a, 0xac, 0x9d, 0x26, 0xc4, 0x4c, 0xab, 0x7c, 0xe8, 0xb4,
	0x9c, 0xcb, 0x2a, 0x73, 0xd7, 0x0b, 0x73, 0x9f, 0x73, 0xc4, 0x1b, 0x5d, 0x7d, 0x2c, 0x3a, 0x64,
	0xaa, 0xd7, 0x11, 0xea, 0x25, 0x31, 0xd3, 0xaa, 0x9c, 0xfe, 0x5c, 0x39, 0xb1, 0x6c, 0xaa, 0x97,
	0xde, 0xc0, 0x67, 0xc0, 0x1a, 0x64, 0x2c, 0x12, 0xb3, 0xd5, 0x97, 0x74, 0x4d, 0x19, 0xd3, 0x5e,
	0x48, 0xde, 0x50, 0x4f, 0x2f, 0xe1, 0xd9, 0xb5, 0xf1, 0x49, 0xce, 0x7c, 0xa3, 0x2b, 0x62, 0x33,
	0x31, 0x5b, 0x03, 0xa1, 0x68, 0xc8, 0x4c, 0x45, 0x3c, 0x2f, 0x52, 0x34, 0xde, 0xc0, 0xdf, 0x80,
	0xa6, 0x51, 0x7f, 0xd8, 0x3f, 0xc2, 0xc7, 0x04, 0x5b, 0x23, 0xd2, 0x7c, 0x51, 0x64, 0x5f, 0xa0,
	0x8b, 0x42, 0xa6, 0x0f, 0xab, 0xaa, 0x4b, 0x49, 0x75, 0x66, 0x4a, 0xca, 0x66, 0xe5, 0x0f, 0x4e,
	0xfe, 0xf7, 0xe6, 0xd1, 0x42, 0xee, 0xa4, 0xb6, 0xb4, 0x20, 0x65, 0xb2, 0x45, 0x5f, 0x36, 0x97,
	0x8c, 0x17, 0x95, 0xe1, 0x3e, 0xd0, 0x6c, 0xac, 0xb4, 0xcf, 0x6b, 0xb3, 0x22, 0xf3, 0x3b, 0x45,
	0xf6, 0x65, 0xba, 0x24, 0x65, 0x5e, 0xc0, 0xf6, 0x7d, 0x5e, 0x27, 0x25, 0x4f, 0xa6, 0xe4, 0x2b,
	0xe3, 0xf2, 0x6c, 0x5a, 0xca, 0x8c, 0x3b, 0xa9, 0xc2, 0xf1, 0xbc, 0x9c, 0xbd, 0x28, 0x65, 0xb2,
	0x5b, 0x18, 0xe9, 0xd6, 0x31, 0x79, 0x71, 0x4e, 0xbd, 0x7c, 0x51, 0xca, 0x5c, 0x75, 0x52, 0xda,
	0xf4, 0x27, 0xf2, 0xe1, 0x94, 0x3a, 0x7b, 0x4e, 0x39, 0x34, 0xc3, 0x95, 0x2c, 0xc1, 0x9d, 0xa0,
	0x21, 0xec, 0x1f, 0xe5, 0x6d, 0x6b, 0xd0, 0x3c, 0xcf, 0x8a, 0xec, 0xd3, 0x34, 0x12, 0x30, 0x3d,
	0x78, 0x0a, 0x29, 0xb3, 0xa8, 0x9c, 0x98, 0x96, 0x67, 0x8e, 0xa9, 0x1f, 0x2f, 0x97, 0xcc, 0x1f,
	0xd3, 0x0e, 0xde, 0xd2, 0xae, 0x4f, 0x6a, 0xf9, 0xe9, 0xa7, 0xb7, 0xe2, 0x49, 0x38, 0xa4, 0x05,
	0xff, 0x08, 0x5a, 0x0c, 0xdb, 0xfd, 0x91, 0x21, 0xde, 0xd6, 0x84, 0xac, 0xee, 0x11, 0xd9, 0x01,
	0x9a, 0x94, 0x33, 0x5e, 0x23, 0x3f, 0x37, 0x4f, 0xa8, 0xe7, 0x27, 0xba, 0xb4, 0x23, 0x57, 0x94,
	0x13, 0xd3, 0xea, 0xcd, 0x4b, 0xf2, 0xd4, 0xa9, 0x27, 0xab, 0x45, 0x54, 0x9a, 0x72, 0x0b, 0x63,
	0x4c, 0x49, 0x9a, 0x84, 0xfb, 0x41, 0xd3, 0x98, 0xc0, 0x7b, 0x76, 0x70, 0xbc, 0x60, 0x6b, 0xa6,
	0x2c, 0x5d, 0x4d, 0x9e, 0xd7, 0x45, 0x76, 0x2f, 0x5d, 0x14, 0x32, 0x3b, 0x94, 0x93, 0x69, 0x79,
	0xe6, 0xa2, 0x74, 0x2b, 0xaf, 0xce, 0xa6, 0xb4, 0x0f, 0xcf, 0x16, 0xae, 0x66, 0x94, 0xc4, 0x8c,
	0xf4, 0xe5, 0x69, 0x75, 0xfe, 0x3d, 0xed, 0xda, 0x7b, 0x4a, 0x76, 0x46, 0xb9, 0x72, 0xde, 0x49,
	0x49, 0x99, 0x9c, 0x76, 0x71, 0x42, 0x9d, 0x4d, 0x49, 0xd9, 0xbf, 0x62, 0xb1, 0xb6, 0x94, 0xd4,
	0x3e, 0xbf, 0xe1, 0xa4, 0xf0, 0xf2, 0x0d, 0xfb, 0x43, 0x02, 0xcf, 0x15, 0xcd, 0xc2, 0xd7, 0x41,
	0xcb, 0x10, 0x2f, 0x04, 0x62, 0x41, 0xb4, 0x85, 0x6c, 0x00, 0x45, 0xbc, 0x4d, 0x64, 0x9f, 0xa2,
	0x49, 0x39, 0xf3, 0x84, 0xf1, 0x31, 0x25, 0x12, 0x5a, 0x7e, 0xd9, 0x49, 0xc9, 0xcb, 0xb7, 0x0a,
	0xd3, 0x89, 0xc2, 0xa9, 0x19, 0xf9, 0xd0, 0x75, 0xf9, 0x4c, 0xaa, 0xaf, 0xb7, 0xd7, 0x8c, 0x89,
	0x50, 0x82, 0x03, 0xa0, 0x39, 0x28, 0xbc, 0x36, 0x3c, 0x1c, 0x0a, 0x86, 0x79, 0x5b, 0x0b, 0x0a,
	0xea, 0x29, 0x91, 0x65, 0xe8, 0x92, 0x94, 0xd9, 0x64, 0xd8, 0x45, 0xb1, 0xc9, 0x5f, 0x5c, 0x55,
	0x73, 0x09, 0x29, 0x73, 0x44, 0xcd, 0xe6, 0xcb, 0xfd, 0x2d, 0x69, 0xc0, 0x97, 0x40, 0xc3, 0xbe,
	0x60, 0x78, 0xc8, 0xd6, 0x8a, 0x3c, 0xed, 0x13, 0xd9, 0x1e, 0x1a, 0x09, 0x4c, 0x17, 0xa5, 0xcc,
	0x62, 0xe1, 0xf4, 0x94, 0xfa, 0xe5, 0x82, 0x7a, 0x25, 0x27, 0x7f, 0x74, 0xc4, 0x49, 0xc9, 0x89,
	0x74, 0x61, 0xfc, 0xfd, 0x7d, 0xdb, 0x04, 0xd7, 0x28, 0x2f, 0x44, 0x04, 0x0e, 0x8d, 0x86, 0x6f,
	0x00, 0x30, 0x38, 0x26, 0x04, 0xc3, 0xbc, 0x20, 0xf8, 0xbc, 0xb6, 0x36, 0x64, 0xec, 0x39, 0x91,
	0xdd, 0x46, 0x13, 0x62, 0x86, 0x36, 0xd6, 0x39, 0xf7, 0x81, 0xbc, 0x34, 0xaf, 0xe7, 0x19, 0xa5,
	0xbd, 0x7f, 0xa7, 0xd7, 0x23, 0x65, 0x16, 0xa5, 0xcc, 0xbc, 0x7c, 0x38, 0xe9, 0xf3, 0x4a, 0xf9,
	0xa4, 0x32, 0x91, 0xe6, 0x08, 0x3d, 0xb8, 0x0b, 0x34, 0x05, 0x85, 0x01, 0x3e, 0x10, 0xe3, 0xe3,
	0xb6, 0xb5, 0x28, 0xee, 0xad, 0x22, 0xdb, 0x47, 0x17, 0x85, 0xcc, 0x26, 0x63, 0x31, 0x33, 0x59,
	0x29, 0x7f, 0x56, 0x4e, 0x4f, 0xe1, 0x79, 0xcc, 0x98, 0xa5, 0x4c, 0xd6, 0x58, 0x26, 0x53, 0x01,
	0x9e, 0xb4, 0x14, 0xbf, 0xcc, 0xdd, 0x07, 0xa2, 0xbc, 0xad, 0x9d, 0xb2, 0x74, 0xb5, 0x79, 0xf6,
	0x8b, 0xac, 0x40, 0x37, 0xc4, 0x0f, 0x44, 0x79, 0x66, 0x9f, 0xe1, 0xaa, 0x11, 0xb4, 0x94, 0x3f,
	0xab, 0x1e, 0x3f, 0x25, 0x2f, 0xce, 0x29, 0x4b, 0xd7, 0x08, 0xb3, 0xbd, 0x66, 0x3a, 0xa8, 0x3e,
	0xb7, 0xf2, 0xfe, 0x11, 0x25, 0x93, 0x71, 0x52, 0x8c, 0x5b, 0xfd, 0x34, 0x8d, 0x7e, 0x6d, 0x71,
	0x17, 0x92, 0xd7, 0xd0, 0xaf, 0xad, 0x6e, 0xf9, 0xc6, 0x67, 0x72, 0x62, 0x59, 0xca, 0x7e, 0x2c,
	0x7f, 0x38, 0xe1, 0xa4, 0x9e, 0x72, 0x2b, 0xb3, 0x69, 0x45, 0xfc, 0x00, 0x3f, 0x73, 0xa4, 0x2b,
	0x30, 0x0e, 0xc0, 0x10, 0x1f, 0x0d, 0x45, 0x0e, 0x20, 0xc7, 0x3a, 0x90, 0x63, 0xbb, 0x45, 0xf6,
	0x17, 0x34, 0x21, 0x66, 0xfa, 0x71, 0xb6, 0x0a, 0x07, 0x53, 0xea, 0xad, 0xab, 0x95, 0x9d, 0xec,
	0x73, 0xab, 0xef, 0x5f, 0x52, 0x67, 0xa6, 0x94, 0x33, 0x59, 0x3c, 0x4c, 0x77, 0x4d, 0x5e, 0xba,
	0x21, 0x9f, 0x4a, 0xe1, 0x67, 0x8e, 0x30, 0x08, 0xbd, 0xa0, 0xc1, 0xb3, 0xdd, 0xe7, 0xb5, 0xad,
	0x43, 0x2b, 0xd7, 0x2b, 0xb2, 0xdd, 0x74, 0xc3, 0xe0, 0x88, 0xcf, 0xcb, 0x6c, 0x92, 0xb2, 0x47,
	0xa4, 0xcc, 0xbc, 0xfa, 0xe5, 0x82, 0x5e, 0x5e, 0xaa, 0xe5, 0x81, 0x43, 0xda, 0x70, 0x17, 0xb0,
	0x7a, 0xb6, 0xbf, 0xaa, 0x17, 0x10, 0x58, 0xfa, 0xf0, 0xad, 0x83, 0x23, 0xba, 0x88, 0xd9, 0x5c,
	0xb4, 0x64, 0xd6, 0x8f, 0x2a, 0xd6, 0xd4, 0x4b, 0x59, 0xce, 0xb0, 0x03, 0xb7, 0x03, 0xeb, 0x10,
	0x1f, 0xd5, 0x4b, 0xdf, 0x7a, 0x64, 0xd1, 0x25, 0xb2, 0x4e, 0xda, 0x10, 0x31, 0x8e, 0xc2, 0xc1,
	0x54, 0x61, 0x2e, 0x75, 0x57, 0xc7, 0x8c, 0xb1, 0x70, 0x00, 0x34, 0xe9, 0xbf, 0x90, 0x73, 0x9d,
	0xc8, 0xd4, 0x33, 0x22, 0xbb, 0x95, 0x2e, 0x0a, 0x99, 0x2e, 0x6c, 0xec, 0x1e, 0x7c, 0x2b, 0xea,
	0xc0, 0x9d, 0xa0, 0x29, 0xc0, 0x87, 0xe3, 0x7c, 0xcc, 0xe7, 0xb5, 0x3d, 0x58, 0xda, 0x40, 0x45,
	0x21, 0xe3, 0x90, 0x32, 0x8b, 0x72, 0xfe, 0xe0, 0x5d, 0x3d, 0x2c, 0x8e, 0x86, 0xbf, 0x06, 0x00,
	0xff, 0x46, 0x5e, 0x3e, 0x54, 0xaa, 0xc1, 0x84, 0x98, 0xe9, 0xc2, 0x26, 0xef, 0xc1, 0x4f, 0x42,
	0xcb, 0xbd, 0x49, 0x64, 0x1d, 0x80, 0xa2, 0x4d, 0x46, 0x33, 0x0f, 0x1a, 0xdf, 0xf7, 0xfc, 0x7b,
	0xf2, 0xb9, 0xac, 0x72, 0xe6, 0x32, 0xde, 0x75, 0x8e, 0x7f, 0xae, 0x05, 0x9d, 0xfd, 0x08, 0xc5,
	0xc6, 0x40, 0x8e, 0xff, 0xc3, 0x18, 0x2f, 0xdc, 0x37, 0xd3, 0x09, 0x28, 0xd7, 0x7d, 0x23, 0x28,
	0x97, 0xd1, 0xaf, 0x7e, 0x95, 0xe9, 0xb7, 0xc7, 0xa0, 0x1f, 0xc6, 0xbf, 0xe7, 0x5b, 0xd3, 0xef,
	0xb6, 0xc7, 0x1a, 0x6b, 0xe8, 0xa8, 0xb3, 0xbd, 0x68, 0x60, 0x70, 0xc2, 0x52, 0xce, 0x41, 0xdc,
	0x24, 0xbc, 0x59, 0x5b, 0x0e, 0xde, 0x39, 0x79, 0x55, 0x20, 0x5a, 0xbf, 0x3f, 0x20, 0xae, 0x59,
	0x35, 0x20, 0x36, 0xd5, 0x08, 0x88, 0xbf, 0x32, 0x80, 0xd8, 0x8c, 0x3c, 0xf5, 0x7e, 0x63, 0x20,
	0xde, 0xf6, 0x74, 0xc4, 0xd6, 0x72, 0x0f, 0x70, 0xf5, 0xfb, 0xb6, 0x09, 0x5c, 0x63, 0x75, 0x46,
	0x82, 0xd5, 0x63, 0x64, 0xcb, 0xaa, 0x30, 0xb2, 0xf5, 0x87, 0xc3, 0xc8, 0xbf, 0x94, 0x31, 0xb2,
	0x0d, 0x39, 0xf6, 0xe6, 0x6a, 0x30, 0xf2, 0xb6, 0xa7, 0x89, 0xb6, 0xf6, 0x3e, 0xd0, 0x6b, 0xe9,
	0xad, 0xab, 0x88, 0xcb, 0xb5, 0x35, 0xc2, 0x65, 0x7b, 0xcd, 0x71, 0xd9, 0x51, 0x3b, 0x5c, 0xae,
	0x5b, 0x0d, 0x5c, 0xc2, 0x5a, 0xe3, 0x72, 0x7d, 0x2d, 0x71, 0xf9, 0x13, 0x91, 0x7d, 0x0e, 0x3c,
	0x4b, 0x57, 0x64, 0xa1, 0x89, 0x39, 0xfc, 0xf5, 0x7f, 0x65, 0x41, 0x35, 0xfe, 0x2b, 0x0b, 0x59,
	0x6d, 0x1d, 0x57, 0x2d, 0x60, 0xdd, 0x76, 0x3e, 0xbe, 0x02, 0xa2, 0x7b, 0x41, 0x7b, 0x11, 0x36,
	0xaf, 0xc5, 0x10, 0x0a, 0x30, 0x49, 0xbb, 0x45, 0x96, 0xa6, 0x57, 0xbe, 0x63, 0x36, 0x98, 0x60,
	0x53, 0x0e, 0x9d, 0x20, 0x61, 0xc0, 0xad, 0x1c, 0xe9, 0xf6, 0x8a, 0x2c, 0x0b, 0x7e, 0x4a, 0xdf,
	0x39, 0x25, 0x63, 0x53, 0xce, 0x5d, 0xd0, 0xd2, 0x7f, 0x53, 0x8e, 0x4e, 0xcb, 0x4b, 0xf3, 0x46,
	0x01, 0x43, 0xc5, 0xe3, 0x2b, 0xcb, 0x4a, 0x2b, 0x8e, 0x44, 0x1b, 0xe8, 0xfc, 0x25, 0x3a, 0xd3,
	0xae, 0xf0, 0xfb, 0x35, 0x12, 0xc2, 0x16, 0x73, 0xe1, 0x1e, 0x24, 0x21, 0xdc, 0x64, 0xfa, 0x7a,
	0xdb, 0xf3, 0x50, 0xac, 0x93, 0x69, 0xff, 0xdd, 0x1b, 0xbd, 0xdd, 0xcf, 0xfa, 0xbb, 0xff, 0xc4,
	0x76, 0xbf, 0xde, 0xfd, 0xdb, 0xcd, 0x8f, 0x9f, 0xb4, 0x50, 0x24, 0x68, 0x77, 0x1b, 0xa0, 0xad,
	0x33, 0x4f, 0xcb, 0xdf, 0x1a, 0xb4, 0x0d, 0xb1, 0x12, 0x66, 0xfb, 0x4a, 0x07, 0x78, 0xdc, 0x29,
	0x6c, 0x10, 0xd9, 0xce, 0xd2, 0x01, 0xbe, 0xb9, 0xc2, 0xd1, 0x5d, 0xb4, 0x10, 0x58, 0xd4, 0xb1,
	0xdf, 0xc2, 0xd8, 0x7b, 0xf0, 0x8d, 0x49, 0x8f, 0x79, 0x63, 0xd2, 0xe3, 0x89, 0x44, 0x42, 0x7b,
	0xfc, 0xa1, 0x31, 0xfe, 0x3b, 0x42, 0xe6, 0xcf, 0xca, 0x91, 0x89, 0xbb, 0x85, 0xc7, 0x45, 0xf6,
	0x47, 0xe5, 0xc8, 0x84, 0xe6, 0xad, 0xc2, 0xb8, 0x76, 0x71, 0x02, 0x83, 0xb3, 0x1c, 0x8f, 0x11,
	0x12, 0x8f, 0xd6, 0xaf, 0x0d, 0xee, 0xfe, 0xd1, 0x39, 0x68, 0xa0, 0x13, 0x43, 0xfe, 0x55, 0x91,
	0xdd, 0x61, 0xa0, 0xb3, 0xff, 0xde, 0xd0, 0xe9, 0xa4, 0x94, 0x33, 0x9f, 0x28, 0x67, 0x2f, 0x68,
	0xe9, 0x0b, 0x78, 0x87, 0xca, 0x89, 0xb4, 0x76, 0xf0, 0x96, 0x9c, 0x3d, 0x27, 0xdf, 0x3c, 0x58,
	0x11, 0xa2, 0x4d, 0xb5, 0x85, 0x68, 0x88, 0x80, 0x68, 0xf3, 0xd7, 0x26, 0xec, 0x7e, 0x01, 0x5b,
	0x7e, 0xd2, 0x03, 0xdf, 0xd1, 0x49, 0x6f, 0x25, 0xd6, 0x5b, 0x7e, 0x38, 0x58, 0x37, 0xa9, 0xda,
	0x5a, 0x23, 0xaa, 0xb6, 0xd5, 0x9c, 0xaa, 0x6b, 0x6b, 0x47, 0xd5, 0xf6, 0xd5, 0xa0, 0x6a, 0x47,
	0xad, 0xa9, 0xba, 0xae, 0x96, 0x54, 0xd5, 0xf3, 0x06, 0x68, 0xba, 0x22, 0x64, 0x18, 0x88, 0xcb,
	0x33, 0xfe, 0xf8, 0xb4, 0xf4, 0x17, 0xca, 0x95, 0x77, 0x1d, 0x1f, 0x59, 0x40, 0xa7, 0x97, 0x0f,
	0xf1, 0xab, 0x4e, 0x24, 0xb7, 0x5e, 0xfc, 0x40, 0x2f, 0x5d, 0x71, 0x36, 0x1d, 0xf8, 0xe7, 0x0b,
	0xa7, 0x16, 0x4c, 0xe0, 0x97, 0xd4, 0x1c, 0xc7, 0xea, 0x40, 0x7b, 0x71, 0xb0, 0x10, 0x8d, 0x84,
	0x05, 0x1e, 0xf6, 0x80, 0x86, 0x80, 0x89, 0xf6, 0x36, 0x8f, 0x5d, 0x64, 0x37, 0xd0, 0x48, 0xc0,
	0xb4, 0x6b, 0xf9, 0x59, 0xf9, 0xf4, 0x47, 0x85, 0xd9, 0x53, 0x5a, 0x3a, 0xad, 0x9e, 0x9f, 0xe0,
	0x90, 0x18, 0xba, 0xc1, 0x9a, 0x51, 0x5e, 0x10, 0xfc, 0x23, 0x26, 0x0f, 0x29, 0x91, 0xdd, 0x48,
	0x9b, 0x32, 0x06, 0x92, 0x5a, 0x46, 0xcd, 0x32, 0x5f, 0xea, 0x20, 0x1d, 0xf2, 0xc7, 0xfd, 0x88,
	0x77, 0x2d, 0xcc, 0xfa, 0x1e, 0xe2, 0x0f, 0x05, 0x86, 0x5b, 0x9e, 0xcd, 0x22, 0xdb, 0x45, 0xa3,
	0x51, 0x0c, 0x85, 0x4d, 0x69, 0xe9, 0x8b, 0x6a, 0x6e, 0x0a, 0x9b, 0x42, 0xbb, 0x58, 0xca, 0x5d,
	0x30, 0x56, 0x0b, 0x8d, 0x83, 0xdb, 0x40, 0x73, 0x0c, 0x87, 0xee, 0xf3, 0x1a, 0x87, 0x61, 0x14,
	0x06, 0x30, 0xa4, 0x54, 0x70, 0x88, 0x69, 0xc6, 0x4b, 0x44, 0xf9, 0xbc, 0x5c, 0x69, 0xb0, 0xe3,
	0x53, 0x2b, 0x58, 0xff, 0x4a, 0x50, 0x30, 0xbb, 0x10, 0xc1, 0x5c, 0xaf, 0x3d, 0x00, 0x14, 0x93,
	0x26, 0x18, 0x0b, 0xf6, 0xb4, 0xc8, 0x6e, 0xa1, 0x09, 0xb1, 0x09, 0x1c, 0x74, 0x90, 0x5f, 0x98,
	0x97, 0x32, 0x9f, 0x48, 0xb9, 0x0b, 0xf2, 0xb1, 0xc3, 0xda, 0xc7, 0x62, 0x61, 0x7c, 0x4e, 0x4e,
	0x7c, 0x21, 0x1f, 0x9a, 0x2a, 0xcc, 0xcf, 0x72, 0x84, 0x0a, 0x1c, 0x05, 0x8d, 0x3a, 0xfa, 0x05,
	0x23, 0x73, 0x7b, 0x45, 0x76, 0x37, 0x8d, 0x25, 0xcc, 0x8e, 0x6f, 0xd6, 0x4a, 0xdc, 0x7d, 0x4e,
	0x6c, 0x73, 0xe5, 0x7d, 0x76, 0xfd, 0x6a, 0xdc, 0x67, 0x17, 0xaf, 0xd0, 0xcb, 0x8e, 0xef, 0x21,
	0x00, 0x04, 0xde, 0x1f, 0x0b, 0xfc, 0xfe, 0xd5, 0xd2, 0x05, 0xc5, 0x2b, 0x22, 0xeb, 0xa3, 0x09,
	0x31, 0xf3, 0x5c, 0xc5, 0x90, 0xc7, 0xe7, 0xb5, 0xfc, 0xb4, 0xb2, 0xb8, 0x80, 0xb7, 0xa7, 0x92,
	0x4a, 0xaa, 0x9f, 0x1d, 0xc6, 0x5d, 0x21, 0xd9, 0x0f, 0x72, 0x84, 0xa1, 0xe2, 0xa5, 0x70, 0xe3,
	0x3d, 0x5f, 0x0a, 0x4f, 0x4e, 0x68, 0x4b, 0x99, 0x95, 0x97, 0xc2, 0x1e, 0x60, 0x8d, 0x0c, 0x0f,
	0x0b, 0x7c, 0x1c, 0x75, 0x1f, 0xf5, 0x1e, 0x5a, 0x64, 0x7f, 0x4c, 0x1b, 0x22, 0x66, 0xa3, 0x9e,
	0xda, 0xe4, 0x35, 0xe5, 0xf8, 0xb2, 0x72, 0x6c, 0xc9, 0x49, 0x69, 0xc9, 0x94, 0xba, 0x90, 0x55,
	0x2f, 0x5f, 0x96, 0xa7, 0xcf, 0x17, 0x92, 0xd7, 0x38, 0x63, 0x18, 0x7c, 0x1e, 0x34, 0x86, 0x82,
	0xa3, 0xc1, 0x38, 0x6a, 0x2a, 0xea, 0x3d, 0x4f, 0x88, 0xec, 0x63, 0x34, 0x96, 0x30, 0xf6, 0x72,
	0x0b, 0x4a, 0x3a, 0x81, 0x9f, 0x0a, 0xd3, 0x09, 0x0e, 0x0f, 0x81, 0x5b, 0x41, 0xbd, 0x3f, 0x14,
	0x32, 0xee, 0x06, 0x1c, 0x22, 0xfb, 0x28, 0xad, 0x3f, 0x33, 0x36, 0x3c, 0x1b, 0xce, 0x82, 0x3c,
	0x99, 0x2a, 0x4c, 0x27, 0xb0, 0x15, 0x4e, 0x7f, 0xed, 0x1e, 0x16, 0xd9, 0x00, 0xf0, 0xd3, 0x95,
	0xbe, 0x64, 0xe6, 0x65, 0x23, 0x9f, 0xb8, 0xad, 0x3e, 0x9b, 0x94, 0x72, 0xd7, 0xc9, 0x64, 0xca,
	0x87, 0xe6, 0xb4, 0x64, 0xca, 0x49, 0xe9, 0x90, 0x3b, 0x3a, 0x41, 0x3a, 0xa8, 0x37, 0xf1, 0xe3,
	0x93, 0xe4, 0x64, 0xfa, 0x29, 0xa1, 0x9d, 0x98, 0xc3, 0xab, 0xef, 0xbd, 0x2e, 0xd0, 0x18, 0x8f,
	0xc4, 0xfd, 0x21, 0xa3, 0x7c, 0x40, 0x91, 0x6d, 0xa7, 0xb1, 0x84, 0xb1, 0x2a, 0xe3, 0x39, 0x14,
	0x1b, 0x7a, 0x84, 0x3e, 0xb0, 0x26, 0xc6, 0x0b, 0x63, 0xa1, 0xb8, 0xfe, 0xf5, 0xd7, 0x57, 0xdb,
	0xfe, 0x68, 0xe3, 0x9a, 0x03, 0x99, 0x56, 0xa3, 0xa7, 0xc3, 0xc1, 0x9a, 0x62, 0xb7, 0xbe, 0x30,
	0x60, 0x13, 0xbd, 0xd2, 0x19, 0xb3, 0xc5, 0xc4, 0x41, 0x19, 0x4e, 0x5f, 0xaa, 0x03, 0x9d, 0xe5,
	0x89, 0xf9, 0x1e, 0xea, 0xde, 0xbe, 0xb2, 0xba, 0xf7, 0x30, 0x19, 0xf8, 0x8a, 0x18, 0x3c, 0x6e,
	0x91, 0x7d, 0xc6, 0xa8, 0x7f, 0x2e, 0xc3, 0x24, 0xf1, 0xd9, 0x3b, 0x29, 0xf9, 0xe8, 0xa4, 0x3c,
	0xf3, 0x29, 0x4e, 0xad, 0x9c, 0x38, 0x4c, 0x46, 0x7c, 0xbf, 0xe5, 0x90, 0xf9, 0x8f, 0x15, 0x00,
	0x4f, 0xff, 0x80, 0xf9, 0x87, 0xd1, 0x39, 0x0b, 0x68, 0x2b, 0x3b, 0x51, 0x42, 0x8a, 0xf4, 0xbc,
	0xd2, 0x61, 0xd3, 0xfe, 0x70, 0x85, 0x45, 0x35, 0x53, 0xee, 0xd8, 0x2e, 0xb2, 0x0e, 0x58, 0x76,
	0x1c, 0xb5, 0x43, 0xf2, 0x09, 0xc7, 0xf8, 0xee, 0xbf, 0xa5, 0x0f, 0xeb, 0x1e, 0x71, 0x6c, 0x70,
	0x95, 0x2c, 0xb9, 0xf6, 0xf7, 0xb9, 0x8c, 0x9f, 0x82, 0xdb, 0x42, 0xc3, 0xbc, 0x05, 0x80, 0xd2,
	0xe1, 0x11, 0x6e, 0x24, 0x27, 0xbd, 0xe3, 0x50, 0x79, 0x77, 0x9f, 0xc6, 0x44, 0x96, 0x85, 0xad,
	0xe4, 0x9e, 0xb0, 0xf7, 0xe1, 0x3d, 0x53, 0xe5, 0x38, 0xeb, 0xa4, 0xee, 0xac, 0x46, 0xc8, 0xe5,
	0xcd, 0xf0, 0xc9, 0x2a, 0x2e, 0xbb, 0xfe, 0xbc, 0xe2, 0xec, 0xfa, 0x0e, 0xfc, 0xbb, 0x05, 0xb4,
	0x95, 0xf5, 0x15, 0xe5, 0xb9, 0xad, 0xd4, 0x72, 0xdc, 0x3d, 0x8e, 0x01, 0x94, 0x5b, 0xb2, 0x29,
	0xb1, 0x97, 0xb5, 0x28, 0x84, 0xa3, 0x5d, 0xf6, 0xc7, 0xbe, 0xde, 0xd1, 0x77, 0xf4, 0x3c, 0x1f,
	0xb5, 0x80, 0xb6, 0xb2, 0x16, 0xa3, 0xdc, 0xcb, 0x4a, 0xdd, 0xc7, 0xdd, 0xbd, 0x7c, 0x5e, 0x64,
	0xd7, 0xda, 0xcb, 0xfa, 0x13, 0xe4, 0xd1, 0x26, 0xfa, 0x5e, 0x3c, 0x82, 0xff, 0xb2, 0x80, 0x56,
	0x72, 0x2f, 0xc3, 0x47, 0xab, 0xec, 0x24, 0xb3, 0xfc, 0xd9, 0xa9, 0xea, 0x03, 0x0c, 0x8f, 0x0e,
	0x88, 0xec, 0x5e, 0x08, 0xef, 0xac, 0x89, 0x76, 0x96, 0xac, 0x9c, 0x72, 0xe2, 0x5d, 0xe5, 0xf8,
	0xb2, 0xfe, 0x98, 0x5b, 0xa8, 0x5e, 0x39, 0x65, 0xf1, 0x28, 0x59, 0x30, 0x51, 0x68, 0xff, 0x07,
	0xab, 0x7d, 0xc8, 0x9e, 0x9f, 0x8b, 0xec, 0x4b, 0xf0, 0x11, 0xb0, 0xde, 0xd3, 0x3f, 0x40, 0x19,
	0x7e, 0x51, 0xec, 0x2e, 0x1f, 0xe5, 0x8d, 0x04, 0x98, 0xc6, 0xde, 0x9e, 0xde, 0x9e, 0x3e, 0xda,
	0x62, 0x61, 0x3a, 0xfc, 0xd1, 0x68, 0x28, 0x18, 0x40, 0xff, 0xaf, 0xc1, 0xf5, 0x96, 0x10, 0x09,
	0xbb, 0xef, 0x90, 0x0c, 0x5a, 0xd1, 0x71, 0x6f, 0xcb, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x2b,
	0x1b, 0xcd, 0x87, 0x7a, 0x21, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BCSProjectClient is the client API for BCSProject service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BCSProjectClient interface {
	CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error)
	GetProject(ctx context.Context, in *GetProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error)
	UpdateProject(ctx context.Context, in *UpdateProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error)
	DeleteProject(ctx context.Context, in *DeleteProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error)
	ListProjects(ctx context.Context, in *ListProjectsRequest, opts ...grpc.CallOption) (*ListProjectsResponse, error)
}

type bCSProjectClient struct {
	cc *grpc.ClientConn
}

func NewBCSProjectClient(cc *grpc.ClientConn) BCSProjectClient {
	return &bCSProjectClient{cc}
}

func (c *bCSProjectClient) CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error) {
	out := new(ProjectResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.BCSProject/CreateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bCSProjectClient) GetProject(ctx context.Context, in *GetProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error) {
	out := new(ProjectResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.BCSProject/GetProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bCSProjectClient) UpdateProject(ctx context.Context, in *UpdateProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error) {
	out := new(ProjectResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.BCSProject/UpdateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bCSProjectClient) DeleteProject(ctx context.Context, in *DeleteProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error) {
	out := new(ProjectResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.BCSProject/DeleteProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bCSProjectClient) ListProjects(ctx context.Context, in *ListProjectsRequest, opts ...grpc.CallOption) (*ListProjectsResponse, error) {
	out := new(ListProjectsResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.BCSProject/ListProjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BCSProjectServer is the server API for BCSProject service.
type BCSProjectServer interface {
	CreateProject(context.Context, *CreateProjectRequest) (*ProjectResponse, error)
	GetProject(context.Context, *GetProjectRequest) (*ProjectResponse, error)
	UpdateProject(context.Context, *UpdateProjectRequest) (*ProjectResponse, error)
	DeleteProject(context.Context, *DeleteProjectRequest) (*ProjectResponse, error)
	ListProjects(context.Context, *ListProjectsRequest) (*ListProjectsResponse, error)
}

// UnimplementedBCSProjectServer can be embedded to have forward compatible implementations.
type UnimplementedBCSProjectServer struct {
}

func (*UnimplementedBCSProjectServer) CreateProject(ctx context.Context, req *CreateProjectRequest) (*ProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProject not implemented")
}
func (*UnimplementedBCSProjectServer) GetProject(ctx context.Context, req *GetProjectRequest) (*ProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProject not implemented")
}
func (*UnimplementedBCSProjectServer) UpdateProject(ctx context.Context, req *UpdateProjectRequest) (*ProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProject not implemented")
}
func (*UnimplementedBCSProjectServer) DeleteProject(ctx context.Context, req *DeleteProjectRequest) (*ProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProject not implemented")
}
func (*UnimplementedBCSProjectServer) ListProjects(ctx context.Context, req *ListProjectsRequest) (*ListProjectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProjects not implemented")
}

func RegisterBCSProjectServer(s *grpc.Server, srv BCSProjectServer) {
	s.RegisterService(&_BCSProject_serviceDesc, srv)
}

func _BCSProject_CreateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BCSProjectServer).CreateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.BCSProject/CreateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BCSProjectServer).CreateProject(ctx, req.(*CreateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BCSProject_GetProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BCSProjectServer).GetProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.BCSProject/GetProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BCSProjectServer).GetProject(ctx, req.(*GetProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BCSProject_UpdateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BCSProjectServer).UpdateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.BCSProject/UpdateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BCSProjectServer).UpdateProject(ctx, req.(*UpdateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BCSProject_DeleteProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BCSProjectServer).DeleteProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.BCSProject/DeleteProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BCSProjectServer).DeleteProject(ctx, req.(*DeleteProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BCSProject_ListProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProjectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BCSProjectServer).ListProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.BCSProject/ListProjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BCSProjectServer).ListProjects(ctx, req.(*ListProjectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BCSProject_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bcsproject.BCSProject",
	HandlerType: (*BCSProjectServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateProject",
			Handler:    _BCSProject_CreateProject_Handler,
		},
		{
			MethodName: "GetProject",
			Handler:    _BCSProject_GetProject_Handler,
		},
		{
			MethodName: "UpdateProject",
			Handler:    _BCSProject_UpdateProject_Handler,
		},
		{
			MethodName: "DeleteProject",
			Handler:    _BCSProject_DeleteProject_Handler,
		},
		{
			MethodName: "ListProjects",
			Handler:    _BCSProject_ListProjects_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bcsproject.proto",
}
