{
  "swagger": "2.0",
  "info": {
    "title": "Mesh Manager API Doc",
    "version": "0.1.0"
  },
  "tags": [
    {
      "name": "MeshManager"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/meshmanager/v1/mesh/istio/install": {
      "post": {
        "summary": "===== Istio 相关 =====\n安装istio",
        "operationId": "MeshManager_InstallIstio",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/meshmanagerInstallIstioResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/meshmanagerInstallIstioRequest"
            }
          }
        ],
        "tags": [
          "MeshManager"
        ]
      }
    },
    "/meshmanager/v1/mesh/istio/list": {
      "get": {
        "summary": "获取istio列表",
        "operationId": "MeshManager_ListIstio",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/meshmanagerListIstioResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectID",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meshID",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meshName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "MeshManager"
        ]
      }
    },
    "/meshmanager/v1/mesh/istio/version": {
      "get": {
        "summary": "===== 版本管理相关 =====\n获取当前开放的istio版本",
        "operationId": "MeshManager_ListIstioVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/meshmanagerListIstioVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MeshManager"
        ]
      }
    },
    "/meshmanager/v1/mesh/istio/{meshID}": {
      "delete": {
        "summary": "删除istio",
        "operationId": "MeshManager_DeleteIstio",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/meshmanagerDeleteIstioResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "meshID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "MeshManager"
        ]
      },
      "put": {
        "summary": "更新istio配置",
        "operationId": "MeshManager_UpdateIstio",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/meshmanagerUpdateIstioResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "meshID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "meshName": {
                  "type": "string"
                },
                "chartVersion": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "primaryClusters": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "remoteClusters": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "differentNetwork": {
                  "type": "boolean"
                },
                "sidecarResourceConfig": {
                  "$ref": "#/definitions/meshmanagerResourceConfig"
                },
                "highAvailability": {
                  "$ref": "#/definitions/meshmanagerHighAvailability"
                },
                "logCollectorConfig": {
                  "$ref": "#/definitions/meshmanagerLogCollectorConfig"
                },
                "tracingConfig": {
                  "$ref": "#/definitions/meshmanagerTracingConfig"
                },
                "featureConfigs": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/meshmanagerFeatureConfig"
                  }
                }
              },
              "description": "更新istio请求",
              "title": "UpdateIstioRequest"
            }
          }
        ],
        "tags": [
          "MeshManager"
        ]
      }
    }
  },
  "definitions": {
    "meshmanagerDedicatedNode": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "nodeLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "专属调度标签"
    },
    "meshmanagerDeleteIstioResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "requestID": {
          "type": "string"
        },
        "webAnnotations": {
          "$ref": "#/definitions/meshmanagerWebAnnotations"
        }
      },
      "description": "删除网格响应",
      "title": "DeleteIstioResponse",
      "required": [
        "code",
        "message",
        "requestID",
        "webAnnotations"
      ]
    },
    "meshmanagerFeatureConfig": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "defaultValue": {
          "type": "string"
        },
        "availableValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supportVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "功能特性配置"
    },
    "meshmanagerHighAvailability": {
      "type": "object",
      "properties": {
        "autoscaleEnabled": {
          "type": "boolean"
        },
        "autoscaleMin": {
          "type": "integer",
          "format": "int32"
        },
        "autoscaleMax": {
          "type": "integer",
          "format": "int32"
        },
        "replicaCount": {
          "type": "integer",
          "format": "int32"
        },
        "targetCPUAverageUtilizationPercent": {
          "type": "integer",
          "format": "int32"
        },
        "resourceConfig": {
          "$ref": "#/definitions/meshmanagerResourceConfig"
        },
        "dedicatedNode": {
          "$ref": "#/definitions/meshmanagerDedicatedNode"
        }
      },
      "title": "高可用配置，hpa，副本数设置等"
    },
    "meshmanagerInstallIstioRequest": {
      "type": "object",
      "properties": {
        "projectID": {
          "type": "string"
        },
        "projectCode": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "controlPlaneMode": {
          "type": "string"
        },
        "clusterMode": {
          "type": "string"
        },
        "primaryClusters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "remoteClusters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "differentNetwork": {
          "type": "boolean"
        },
        "sidecarResourceConfig": {
          "$ref": "#/definitions/meshmanagerResourceConfig"
        },
        "highAvailability": {
          "$ref": "#/definitions/meshmanagerHighAvailability"
        },
        "observabilityConfig": {
          "$ref": "#/definitions/meshmanagerObservabilityConfig",
          "title": "可观测性配置"
        },
        "featureConfigs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/meshmanagerFeatureConfig"
          }
        }
      },
      "title": "===== Mesh 管理相关消息 =====\n安装istio请求"
    },
    "meshmanagerInstallIstioResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64",
          "description": "返回错误码",
          "title": "code"
        },
        "message": {
          "type": "string",
          "description": "返回错误信息",
          "title": "message"
        },
        "requestID": {
          "type": "string",
          "description": "请求 ID",
          "title": "request id"
        },
        "webAnnotations": {
          "$ref": "#/definitions/meshmanagerWebAnnotations",
          "description": "权限信息",
          "title": "web_annotations"
        },
        "meshID": {
          "type": "string",
          "description": "meshID",
          "title": "meshID"
        }
      },
      "description": "安装istio响应",
      "title": "InstallIstioResponse",
      "required": [
        "code",
        "message",
        "requestID",
        "webAnnotations",
        "data"
      ]
    },
    "meshmanagerIstioListItem": {
      "type": "object",
      "properties": {
        "meshID": {
          "type": "string"
        },
        "meshName": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "statusMessage": {
          "type": "string"
        },
        "chartVersion": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "int64"
        },
        "updateTime": {
          "type": "string",
          "format": "int64"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "projectID": {
          "type": "string",
          "title": "保持跟 InstallIstioRequest 一致"
        },
        "projectCode": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "controlPlaneMode": {
          "type": "string"
        },
        "clusterMode": {
          "type": "string"
        },
        "primaryClusters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "remoteClusters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "differentNetwork": {
          "type": "boolean"
        },
        "sidecarResourceConfig": {
          "$ref": "#/definitions/meshmanagerResourceConfig"
        },
        "highAvailability": {
          "$ref": "#/definitions/meshmanagerHighAvailability"
        },
        "observabilityConfig": {
          "$ref": "#/definitions/meshmanagerObservabilityConfig",
          "title": "可观测性配置"
        },
        "featureConfigs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/meshmanagerFeatureConfig"
          }
        }
      },
      "description": "istio列表项",
      "title": "IstioListItem"
    },
    "meshmanagerIstioVersion": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "chartVersion": {
          "type": "string"
        },
        "kubeVersion": {
          "type": "string"
        }
      },
      "title": "istio版本信息"
    },
    "meshmanagerIstioVersionAndFeatures": {
      "type": "object",
      "properties": {
        "istioVersions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/meshmanagerIstioVersion"
          },
          "description": "istio版本列表",
          "title": "istioVersions"
        },
        "featureConfigs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/meshmanagerFeatureConfig"
          },
          "description": "功能列表(注意版本)",
          "title": "featureConfigs"
        }
      },
      "title": "获取istio版本列表响应"
    },
    "meshmanagerListIstioData": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/meshmanagerIstioListItem"
          }
        }
      },
      "title": "istio列表响应"
    },
    "meshmanagerListIstioResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "requestID": {
          "type": "string"
        },
        "webAnnotations": {
          "$ref": "#/definitions/meshmanagerWebAnnotations"
        },
        "data": {
          "$ref": "#/definitions/meshmanagerListIstioData"
        }
      },
      "description": "获取istio网格列表响应",
      "title": "ListIstioResponse",
      "required": [
        "code",
        "message",
        "requestID",
        "webAnnotations",
        "data"
      ]
    },
    "meshmanagerListIstioVersionResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64",
          "description": "返回错误码",
          "title": "code"
        },
        "message": {
          "type": "string",
          "description": "返回错误信息",
          "title": "message"
        },
        "requestID": {
          "type": "string",
          "description": "请求 ID",
          "title": "request id"
        },
        "webAnnotations": {
          "$ref": "#/definitions/meshmanagerWebAnnotations",
          "description": "权限信息",
          "title": "web_annotations"
        },
        "data": {
          "$ref": "#/definitions/meshmanagerIstioVersionAndFeatures",
          "description": "响应数据",
          "title": "data"
        }
      },
      "description": "获取istio版本列表响应",
      "title": "ListIstioVersionResponse",
      "required": [
        "code",
        "message",
        "requestID",
        "webAnnotations",
        "data"
      ]
    },
    "meshmanagerLogCollectorConfig": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "accessLogEncoding": {
          "type": "string"
        },
        "accessLogFormat": {
          "type": "string"
        }
      },
      "title": "日志采集配置"
    },
    "meshmanagerMetricsConfig": {
      "type": "object",
      "properties": {
        "controlPlaneMetricsEnabled": {
          "type": "boolean",
          "title": "控制面指标"
        },
        "dataPlaneMetricsEnabled": {
          "type": "boolean",
          "title": "数据面指标"
        }
      },
      "title": "指标采集配置"
    },
    "meshmanagerObservabilityConfig": {
      "type": "object",
      "properties": {
        "metricsConfig": {
          "$ref": "#/definitions/meshmanagerMetricsConfig"
        },
        "logCollectorConfig": {
          "$ref": "#/definitions/meshmanagerLogCollectorConfig"
        },
        "tracingConfig": {
          "$ref": "#/definitions/meshmanagerTracingConfig"
        }
      },
      "title": "可观测性配置"
    },
    "meshmanagerResourceConfig": {
      "type": "object",
      "properties": {
        "cpuRequest": {
          "type": "string"
        },
        "cpuLimit": {
          "type": "string"
        },
        "memoryRequest": {
          "type": "string"
        },
        "memoryLimit": {
          "type": "string"
        }
      },
      "title": "resource配置"
    },
    "meshmanagerTracingConfig": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "traceSamplingPercent": {
          "type": "integer",
          "format": "int32"
        },
        "endpoint": {
          "type": "string"
        },
        "bkToken": {
          "type": "string"
        }
      },
      "title": "tracing配置"
    },
    "meshmanagerUpdateIstioResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "requestID": {
          "type": "string"
        },
        "webAnnotations": {
          "$ref": "#/definitions/meshmanagerWebAnnotations"
        }
      },
      "description": "更新网格响应",
      "title": "UpdateIstioResponse",
      "required": [
        "code",
        "message",
        "requestID",
        "webAnnotations"
      ]
    },
    "meshmanagerWebAnnotations": {
      "type": "object",
      "properties": {
        "perms": {
          "type": "object",
          "description": "权限信息",
          "title": "perms"
        }
      },
      "title": "WebAnnotations 权限信息"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
