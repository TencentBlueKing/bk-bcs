syntax = "proto3";
package meshmanager;

option go_package = "./;meshmanager";

import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "validate/validate.proto";
import "google/protobuf/struct.proto";

// OpenAPI 配置
option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info : {title : "Mesh Manager API Doc" version : "0.1.0"};
base_path : "/bcsapi/v4" security_definitions : {
security: {
key:
  "ApiKeyAuth";
value: {
type:
  TYPE_API_KEY;
in:
  IN_HEADER;
name:
  "Authorization";
};
}
};
security : {
security_requirement: {
key:
  "ApiKeyAuth";
value: {};
}
};
schemes : HTTPS consumes : "application/json" produces : "application/json"
}
;

// ===== 通用消息定义 =====

// WebAnnotations 权限信息
message WebAnnotations {
  google.protobuf.Struct perms = 1
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "perms",
        description : "权限信息"
      } ];
}

// NamespaceScopedAction 命名空间域资源操作类型
enum NamespaceScopedAction {
  // 创建命名空间域资源
  NAMESPACE_SCOPED_ACTION_CREATE = 0;
  // 更新命名空间域资源  
  NAMESPACE_SCOPED_ACTION_UPDATE = 1;
  // 查看命名空间域资源
  NAMESPACE_SCOPED_ACTION_VIEW = 2;
  // 删除命名空间域资源
  NAMESPACE_SCOPED_ACTION_DELETE = 3;
}

// ===== 服务定义 =====

service MeshManager {
  // ===== 版本管理相关 =====

  // 获取当前开放的istio版本和配置信息
  rpc ListIstioConfig(ListIstioConfigRequest)
      returns (ListIstioConfigResponse) {
    option (google.api.http) = {
      get : "/meshmanager/v1/mesh/istio/config"
    };
  }

  // ===== Istio 管理相关 =====

  // 安装istio
  rpc InstallIstio(IstioInstallRequest) returns (InstallIstioResponse) {
    option (google.api.http) = {
      post : "/meshmanager/v1/mesh/istio/install"
      body : "*"
    };
  }

  // 获取istio列表
  rpc ListIstio(ListIstioRequest) returns (ListIstioResponse) {
    option (google.api.http) = {
      get : "/meshmanager/v1/mesh/istio/list"
    };
  }

  // 更新istio配置
  rpc UpdateIstio(IstioUpdateRequest) returns (UpdateIstioResponse) {
    option (google.api.http) = {
      put : "/meshmanager/v1/mesh/istio/{meshID}"
      body : "*"
    };
  }

  // 删除istio
  rpc DeleteIstio(DeleteIstioRequest) returns (DeleteIstioResponse) {
    option (google.api.http) = {
      delete : "/meshmanager/v1/mesh/istio/{meshID}"
    };
  }

  // 获取istio详情
  rpc GetIstioDetail(GetIstioDetailRequest) returns (GetIstioDetailResponse) {
    option (google.api.http) = {
      get : "/meshmanager/v1/mesh/istio/detail/{meshID}"
    };
  }

  // 获取项目下的集群信息
  rpc GetClusterInfo(GetClusterInfoRequest) returns (GetClusterInfoResponse) {
    option (google.api.http) = {
      get : "/meshmanager/v1/mesh/clusters"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "获取项目下的集群信息"
      summary : "获取项目下的集群信息"
    };
  }
}

// ===== 版本管理相关消息 =====

// 获取当前开放的istio版本请求
message ListIstioConfigRequest {}

// 获取当前开放的istio版本响应
message ListIstioConfigResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListIstioConfigResponse"
      description : "获取istio版本列表响应"
      required : [ "code", "message", "requestID", "web_annotations", "data" ]
    }
  };

  uint32 code = 1 [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) =
                        {title : "code", description : "返回错误码"} ];
  string message = 2
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "message",
        description : "返回错误信息"
      } ];
  string requestID = 3
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "request id",
        description : "请求 ID"
      } ];
  WebAnnotations web_annotations = 4 [
    (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title : "web_annotations",
      description : "权限信息"
    },
    json_name = "web_annotations"
  ];
  IstioConfigData data = 5 [
    json_name = "data",
    (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title : "data"
      description : "响应数据"
    }
  ];
}

// istio版本和功能特性
message IstioConfigData {
  repeated IstioVersion istioVersions = 1
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "istioVersions"
        description : "istio版本列表"
      } ];
  ResourceConfig sidecarResourceConfig = 20
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "sidecarResourceConfig",
        description : "sidecar资源配置"
      } ];
  HighAvailability highAvailability = 21
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "highAvailability",
        description : "高可用配置"
      } ];
  ObservabilityConfig observabilityConfig = 22
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "observabilityConfig",
        description : "可观测性配置"
      } ];
  map<string, FeatureConfig> featureConfigs = 2
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "featureConfigs"
        description : "功能列表(注意版本)"
      } ];
}

// istio版本信息
message IstioVersion {
  string name = 1 [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) =
                        {title : "name", description : "版本名称"} ];
  string version = 2
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "version",
        description : "istio版本号"
      } ];
  string chartVersion = 3
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "chartVersion",
        description : "对应chart版本"
      } ];
  string kubeVersion = 4
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "kubeVersion",
        description : "支持的Kubernetes版本，semver格式"
      } ];
}

// 功能特性配置
message FeatureConfig {
  string name = 1 [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) =
                        {title : "name", description : "特性名称"} ];
  string description = 2
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "description",
        description : "特性描述"
      } ];
  string value = 3 [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) =
                         {title : "value", description : "特性值"} ];
  string defaultValue = 4
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "defaultValue",
        description : "默认值"
      } ];
  repeated string availableValues = 5
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "availableValues",
        description : "可选值"
      } ];
  repeated string supportVersions = 6
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "supportVersions",
        description : "支持的istio版本"
      } ];
}

// ===== Istio 管理相关消息 =====

// istio配置信息
message IstioInstallRequest {
  string projectCode = 1
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "projectCode",
        description : "项目编码"
      } ];
  google.protobuf.StringValue name = 2
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "name",
        description : "网格名称"
      } ];
  google.protobuf.StringValue version = 3
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "version",
        description : "使用的版本，例如 1.18"
      } ];
  google.protobuf.StringValue controlPlaneMode = 4
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "controlPlaneMode",
        description : "安装模式["
                      "independent：独立控制面（默认）；hosting：托管控制面]"
      } ];
  google.protobuf.StringValue clusterMode = 5
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "clusterMode",
        description : "多集群集群模式["
                      "primaryRemote：主从架构（默认）；multiPrimary：多主架构]"
      } ];
  google.protobuf.StringValue description = 6
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "description",
        description : "文字描述"
      } ];
  repeated string primaryClusters = 7
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "primaryClusters",
        description : "主集群列表，使用BCS集群ID"
      } ];
  repeated RemoteCluster remoteClusters = 8
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "remoteClusters",
        description : "远程/从集群列表,多集群模式下填写"
      } ];
  google.protobuf.BoolValue differentNetwork = 9
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "differentNetwork",
        description : "网络是否已打通：关乎是否默认安装egress "
                      "gateway，true：已打通（默认），false：未打通，暂不支持"
      } ];
  ResourceConfig sidecarResourceConfig = 10
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "sidecarResourceConfig",
        description : "sidecar资源配置"
      } ];
  HighAvailability highAvailability = 11
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "highAvailability",
        description : "高可用配置"
      } ];
  ObservabilityConfig observabilityConfig = 12
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "observabilityConfig",
        description : "可观测性配置"
      } ];
  map<string, FeatureConfig> featureConfigs = 13
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "featureConfigs",
        description : "功能特性[跟随版本关联的特性]"
      } ];
  google.protobuf.BoolValue multiClusterEnabled = 14
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "multiClusterEnabled", 
        description : "是否开启多集群"
      } ];
  google.protobuf.StringValue clbID = 15
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "clbID",
        description : "东西向网关clbID"
      } ];
  google.protobuf.StringValue revision = 16
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "revision",
        description : "istio revision"
      } ];
}

message IstioUpdateRequest {
  string meshID = 1
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "meshID",
        description : "网格ID"
      } ];
  string projectCode = 2
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "projectCode",
        description : "项目编码"
      } ];
  google.protobuf.StringValue name = 3
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "name",
        description : "网格名称"
      } ];
  google.protobuf.StringValue controlPlaneMode = 4
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "controlPlaneMode",
        description : "安装模式["
                      "independent：独立控制面（默认）；hosting：托管控制面]"
      } ];
  google.protobuf.StringValue clusterMode = 5
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "clusterMode",
        description : "多集群集群模式["
                      "primaryRemote：主从架构（默认）；multiPrimary：多主架构]"
      } ];
  google.protobuf.StringValue description = 6
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "description",
        description : "文字描述"
      } ];
  repeated RemoteCluster remoteClusters = 7
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "remoteClusters",
        description : "远程/从集群列表,多集群模式下填写"
      } ];
  google.protobuf.BoolValue differentNetwork = 8
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "differentNetwork",
        description : "网络是否已打通：关乎是否默认安装egress "
                      "gateway，true：已打通（默认），false：未打通，暂不支持"
      } ];
  ResourceConfig sidecarResourceConfig = 9
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "sidecarResourceConfig",
        description : "sidecar资源配置"
      } ];
  HighAvailability highAvailability = 10
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "highAvailability",
        description : "高可用配置"
      } ];
  ObservabilityConfig observabilityConfig = 11
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "observabilityConfig",
        description : "可观测性配置"
      } ];
  map<string, FeatureConfig> featureConfigs = 12
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "featureConfigs",
        description : "功能特性[跟随版本关联的特性]"
      } ];
  google.protobuf.BoolValue multiClusterEnabled = 13
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "multiClusterEnabled", 
        description : "是否开启多集群"
      } ];
  google.protobuf.StringValue clbID = 14
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "clbID",
        description : "东西向网关clbID"
      } ];
  google.protobuf.StringValue revision = 15
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "revision",
        description : "istio revision"
      } ];
}

// ===== 配置相关消息 =====

// 可观测性配置
message ObservabilityConfig {
  MetricsConfig metricsConfig = 1
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "metricsConfig",
        description : "指标采集配置，用于控制Istio服务网格的Prometheus监控功能，包括控制面和数据面的指标采集"
                      "该配置不写入values.yaml，而是用于控制是否部署ServiceMonitor和PodMonitor资源"
      } ];
  LogCollectorConfig logCollectorConfig = 2
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "logCollectorConfig",
        description : "日志采集配置"
      } ];
  TracingConfig tracingConfig = 3
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "tracingConfig",
        description : "全量路追踪配置"
      } ];
}

// 高可用配置，hpa，副本数设置等
message HighAvailability {
  google.protobuf.BoolValue autoscaleEnabled = 1
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "autoscaleEnabled",
        description : "是否开启hpa"
      } ];
  google.protobuf.Int32Value autoscaleMin = 2
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "autoscaleMin",
        description : "hpa最小副本数"
      } ];
  google.protobuf.Int32Value autoscaleMax = 3
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "autoscaleMax",
        description : "hpa最大副本数"
      } ];
  google.protobuf.Int32Value replicaCount = 4
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "replicaCount",
        description : "副本数"
      } ];
  google.protobuf.Int32Value targetCPUAverageUtilizationPercent = 5
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "targetCPUAverageUtilizationPercent",
        description : "目标cpu平均使用率 0-100"
      } ];
  ResourceConfig resourceConfig = 6
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "resourceConfig",
        description : "resource配置"
      } ];
  DedicatedNode dedicatedNode = 7
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "dedicatedNode",
        description : "专属节点（专用节点标签），默认会加上容忍"
      } ];
}

// 专属调度标签
message DedicatedNode {
  google.protobuf.BoolValue enabled = 1
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "enabled",
        description : "是否启用"
      } ];
  map<string, string> nodeLabels = 2
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "nodeLabels",
        description : "节点标签"
      } ];
}

// resource配置
message ResourceConfig {
  google.protobuf.StringValue cpuRequest = 1
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "cpuRequest",
        description : "CPU请求"
      } ];
  google.protobuf.StringValue cpuLimit = 2
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "cpuLimit",
        description : "CPU限制"
      } ];
  google.protobuf.StringValue memoryRequest = 3
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "memoryRequest",
        description : "内存请求"
      } ];
  google.protobuf.StringValue memoryLimit = 4
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "memoryLimit",
        description : "内存限制"
      } ];
}

// 日志采集配置
message LogCollectorConfig {
  google.protobuf.BoolValue enabled = 1
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "enabled",
        description : "是否启用"
      } ];
  google.protobuf.StringValue accessLogEncoding = 2
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "accessLogEncoding",
        description : "日志编码 [text, json]"
      } ];
  google.protobuf.StringValue accessLogFormat = 3
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "accessLogFormat",
        description : "日志格式"
      } ];
}

// tracing配置
message TracingConfig {
  google.protobuf.BoolValue enabled = 1
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "enabled",
        description : "是否启用"
      } ];
  google.protobuf.Int32Value traceSamplingPercent = 2
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "traceSamplingPercent",
        description : "采样率,百分比"
      } ];
  google.protobuf.StringValue endpoint = 3
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "endpoint",
        description : "上报地址"
      } ];
  google.protobuf.StringValue bkToken = 4
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "bkToken",
        description : "蓝鲸token"
      } ];
}

// 指标采集配置
message MetricsConfig {
  google.protobuf.BoolValue metricsEnabled = 1
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "metricsEnabled",
        description : "指标采集总开关"
      } ];
  google.protobuf.BoolValue controlPlaneMetricsEnabled = 2
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "controlPlaneMetricsEnabled",
        description : "控制面指标采集开关，启用时会部署ServiceMonitor监控istiod等控制面组件的指标，包括pilot、galley、citadel等组件的性能指标"
      } ];
  google.protobuf.BoolValue dataPlaneMetricsEnabled = 3
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "dataPlaneMetricsEnabled",
        description : "数据面指标采集开关，启用时会部署PodMonitor监控sidecar等数据面组件的指标，包括proxy、应用容器的网络流量、延迟等指标"
      } ];
}

// 从集群信息
message RemoteCluster {
  string clusterID = 1
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "clusterID",
        description : "集群ID"
      } ];
  string clusterName = 2
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "clusterName",
        description : "集群名称"
      } ];
  string region = 3
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "region",
        description : "集群所属区域"
      } ];
  int64 joinTime = 4
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "joinTime",
        description : "纳入服务网格管理时间"
      } ];
  string status = 5
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "status",
        description : "集群状态["
                      "running：运行中；installing：安装中；install-failed：安装失败"
      } ];
}

// ===== 响应消息 =====

// 安装istio响应
message InstallIstioResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "InstallIstioResponse"
      description : "安装istio响应"
      required : [ "code", "message", "requestID", "web_annotations", "data" ]
    }
  };

  uint32 code = 1 [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) =
                        {title : "code", description : "返回错误码"} ];
  string message = 2
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "message",
        description : "返回错误信息"
      } ];
  string requestID = 3
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "request id",
        description : "请求 ID"
      } ];
  WebAnnotations web_annotations = 4 [
    (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title : "web_annotations",
      description : "权限信息"
    },
    json_name = "web_annotations"
  ];
  string meshID = 5
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "meshID",
        description : "网格ID"
      } ];
}

// 获取istio列表请求
message ListIstioRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {title : "ListIstioRequest" description : "获取istio列表请求"}
  };

  string projectCode = 1 [
    (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title : "projectCode",
      description : "项目编码"
    },
    (validate.rules).string = {min_len : 1, max_len : 32}
  ];
  string meshID = 2
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "meshID",
        description : "网格ID，可选过滤条件"
      } ];
  string name = 3
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "name",
        description : "网格名称，可选过滤条件"
      } ];
  string status = 4
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "status",
        description : "网格状态，可选过滤条件["
                      "running：运行中；installing：安装中；installed：安装完成"
                      "install-failed：安装失败；uninstalling：卸载中；uninstalling："
                      "卸载完成；uninstalled"
                      "uninstalling-failed：卸载失败；updating：配置更新中；update-"
                      "update-failed：配置更新失败]"
      } ];
  string version = 5
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "version",
        description : "istio版本，可选过滤条件"
      } ];
  string clusterID = 6
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "clusterID",
        description : "集群ID，可选过滤条件，支持主集群和远程集群的模糊匹配"
      } ];
  int32 page = 7 [
    (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title : "page",
      description : "页码"
    },
    (validate.rules).int32 = {gt : 0, lte : 10000}
  ];
  int32 pageSize = 8 [
    (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title : "pageSize",
      description : "每页数量"
    },
    (validate.rules).int32 = {gt : 0, lte : 100}
  ];
}

// 获取istio列表响应
message ListIstioResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListIstioResponse"
      description : "获取istio网格列表响应"
      required : [ "code", "message", "requestID", "web_annotations", "data" ]
    }
  };

  uint32 code = 1;                    // 返回错误码
  string message = 2;                 // 返回错误信息
  string requestID = 3;               // 请求ID
  WebAnnotations web_annotations = 4 [json_name = "web_annotations"]; // 权限信息
  ListIstioData data = 5;             // 响应数据
}

// istio列表数据
message ListIstioData {
  int32 total = 1 [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) =
                        {title : "total", description : "总数"} ];
  repeated IstioListItem items = 2
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "items",
        description : "列表项"
      } ];
}

// istio列表项
message IstioListItem {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {title : "IstioListItem" description : "istio列表项"}
  };

  // 系统字段
  string meshID = 1
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "meshID",
        description : "网格ID"
      } ];
  string status = 2
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "status",
        description : "状态["
                      "running：运行中；installing：安装中；installed：安装完成"
                      "；failed：安装失败；uninstalling：卸载中；uninstalled："
                      "卸载完成；uninstalling-"
                      "failed：卸载失败；updating：配置更新中；update-"
                      "failed：配置更新失败]"
      } ];
  string statusMessage = 3
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "statusMessage",
        description : "状态消息，状态为failed时，会返回失败原因"
      } ];
  string chartVersion = 4
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "chartVersion",
        description : "chart版本"
      } ];
  int64 createTime = 5
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "createTime",
        description : "创建时间"
      } ];
  string projectCode = 6
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "projectCode",
        description : "项目编码"
      } ];
  string name = 7
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "name",
        description : "名称"
      } ];
  string version = 8
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "version",
        description : "使用的版本"
      } ];
  repeated string primaryClusters = 9
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "primaryClusters",
        description : "主集群列表"
      } ];
  repeated RemoteCluster remoteClusters = 10
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "remoteClusters",
        description : "远程集群列表"
      } ];
  string monitoringLink = 11
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "monitoringLink",
        description : "监测链接"
      } ];

}

// istio详情信息
message IstioDetailInfo {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {title : "IstioListItem" description : "istio列表项"}
  };

  // 系统字段
  string meshID = 1
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "meshID",
        description : "网格ID"
      } ];
  string status = 2
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "status",
        description : "状态["
                      "running：运行中；installing：安装中；installed：安装完成"
                      "；failed：安装失败；uninstalling：卸载中；uninstalled："
                      "卸载完成；uninstalling-"
                      "failed：卸载失败；updating：配置更新中；update-"
                      "failed：配置更新失败]"
      } ];
  string statusMessage = 3
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "statusMessage",
        description : "状态消息，状态为failed时，会返回失败原因"
      } ];
  string networkID = 4
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "networkID",
        description : "网络ID"
      } ];
  string chartVersion = 5
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "chartVersion",
        description : "chart版本"
      } ];
  int64 createTime = 6
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "createTime",
        description : "创建时间"
      } ];
  int64 updateTime = 7
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "updateTime",
        description : "更新时间"
      } ];
  string createBy = 8
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "createBy",
        description : "创建者"
      } ];
  string updateBy = 9
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "updateBy",
        description : "更新者"
      } ];
  string projectCode = 10
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "projectCode",
        description : "项目编码"
      } ];
  string name = 11 [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) =
                         {title : "name", description : "名称"} ];
  string description = 12
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "description",
        description : "描述"
      } ];
  string version = 13
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "version",
        description : "使用的版本"
      } ];
  string controlPlaneMode = 14
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "controlPlaneMode",
        description : "安装模式["
                      "independent：独立控制面（默认）；hosting：托管控制面]"
      } ];
  string clusterMode = 15
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "clusterMode",
        description : "多集群集群模式,"
                      "primaryRemote：主从架构（默认）；multiPrimary：多主架构]"
      } ];
  repeated string primaryClusters = 16
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "primaryClusters",
        description : "主集群列表"
      } ];
  repeated RemoteCluster remoteClusters = 17
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "remoteClusters",
        description : "远程集群列表"
      } ];
  bool differentNetwork = 18
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "differentNetwork",
        description : "网络是否一致：关乎是否默认安装egress gateway"
      } ];
  ResourceConfig sidecarResourceConfig = 19
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "sidecarResourceConfig",
        description : "sidecar资源配置"
      } ];
  HighAvailability highAvailability = 20
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "highAvailability",
        description : "高可用配置"
      } ];
  ObservabilityConfig observabilityConfig = 21
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "observabilityConfig",
        description : "可观测性配置"
      } ];
  map<string, FeatureConfig> featureConfigs = 22
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "featureConfigs",
        description : "功能特性[跟随版本关联的特性]"
      } ];
  google.protobuf.BoolValue multiClusterEnabled = 24
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "multiClusterEnabled", 
        description : "是否开启多集群"
      } ];
  google.protobuf.StringValue clbID = 25
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "clbID",
        description : "东西向网关clbID"
      } ];
  string revision = 26
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "revision",
        description : "版本"
      } ];
}

// 更新istio响应
message UpdateIstioResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "UpdateIstioResponse"
      description : "更新网格响应"
      required : [ "code", "message", "requestID", "web_annotations" ]
    }
  };

  uint32 code = 1;                    // 返回错误码
  string message = 2;                 // 返回错误信息
  string requestID = 3;               // 请求ID
  WebAnnotations web_annotations = 4 [json_name = "web_annotations"]; // 权限信息
}

// 删除istio请求
message DeleteIstioRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {title : "DeleteIstioRequest" description : "删除istio请求"}
  };

  string meshID = 1 [
    (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title : "meshID",
      description : "网格ID"
    },
    (validate.rules).string = {min_len : 1}
  ];
  string projectCode = 2 [
    (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title : "projectCode",
      description : "项目编码"
    },
    (validate.rules).string = {min_len : 1, max_len : 32}
  ];
}

// 删除istio响应
message DeleteIstioResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "DeleteIstioResponse"
      description : "删除网格响应"
      required : [ "code", "message", "requestID", "web_annotations" ]
    }
  };

  uint32 code = 1;                    // 返回错误码
  string message = 2;                 // 返回错误信息
  string requestID = 3;               // 请求ID
  WebAnnotations web_annotations = 4 [json_name = "web_annotations"]; // 权限信息
}

// 获取istio详情请求
message GetIstioDetailRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "GetIstioDetailRequest"
      description : "获取istio详情请求"
    }
  };

  string projectCode = 1 [
    (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title : "projectCode",
      description : "项目编码"
    },
    (validate.rules).string = {min_len : 1, max_len : 32}
  ];
  string meshID = 2 [
    (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title : "meshID",
      description : "网格ID"
    },
    (validate.rules).string = {min_len : 1}
  ];
}

// 获取istio详情响应
message GetIstioDetailResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "GetIstioDetailResponse"
      description : "获取istio详情响应"
      required : [ "code", "message", "requestID", "web_annotations", "data" ]
    }
  };

  uint32 code = 1;                    // 返回错误码
  string message = 2;                 // 返回错误信息
  string requestID = 3;               // 请求ID
  WebAnnotations web_annotations = 4 [json_name = "web_annotations"]; // 权限信息
  IstioDetailInfo data = 5;           // 详情数据
}

// 获取项目下的集群信息请求
message GetClusterInfoRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "GetClusterInfoRequest"
      description : "获取项目下的集群信息请求"
    }
  };

  string projectCode = 1 [
    (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title : "projectCode",
      description : "项目编码"
    },
    (validate.rules).string = {min_len : 1, max_len : 32}
  ];
}

// 获取项目下的集群信息响应
message GetClusterInfoResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "GetClusterInfoResponse"
      description : "获取项目下的集群信息响应"
      required : [ "code", "message", "requestID", "data" ]
    }
  };

  uint32 code = 1;                    // 返回错误码
  string message = 2;                 // 返回错误信息
  string requestID = 3;               // 请求ID
  ClusterInfoData data = 4;  // 响应数据
}

// 集群信息数据
message ClusterInfoData {
  repeated ClusterInfo clusters = 1
      [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "clusters",
        description : "集群信息"
      } ];
}

// 集群信息
message ClusterInfo {
  string clusterID = 1 [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "clusterID",
    description : "集群ID"
  } ];
  string clusterName = 2 [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "clusterName",
    description : "集群名称"
  } ];
  string clusterType = 3 [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "clusterType",
    description : "集群类型"
  } ];
  bool isShared = 4 [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "isShared",
    description : "是否为共享集群"
  } ];
  bool isInstalled = 5 [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "isInstalled",
    description : "是否已安装istio"
  } ];
  string status = 6 [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "status",
    description : "集群状态"
  } ];
  string version = 7 [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "version",
    description : "集群版本"
  } ];
  string region = 8 [ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "region",
    description : "集群所属区域"
  } ];
}