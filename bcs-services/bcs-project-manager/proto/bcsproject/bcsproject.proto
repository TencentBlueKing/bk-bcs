// Tencent is pleased to support the open source community by making Blueking Container Service available.
// Copyright (C) 2022 THL A29 Limited, a Tencent company. All rights reserved.
// Licensed under the MIT License (the "License"); you may not use this file except
// in compliance with the License. You may obtain a copy of the License at
//
// http://opensource.org/licenses/MIT
//
// Unless required by applicable law or agreed to in writing, software distributed under,
// the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
// either express or implied. See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package bcsproject;

option go_package = "./;bcsproject";

import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "validate/validate.proto";
import "google/protobuf/struct.proto";


option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info : {
    title : "Bcs Project Manager API Doc" 
    version : "0.0.1"
  };
  base_path: "/bcsapi/v4"
  security_definitions: {
    security: {
      key: "ApiKeyAuth";
      value: {
        type: TYPE_API_KEY;
        in: IN_HEADER;
        name: "Authorization";
      };
    }
  };
  security: {
    security_requirement: {
      key: "ApiKeyAuth";
      value: {};
    }
  }
  schemes : HTTP 
  consumes : "application/json" 
  produces : "application/json"
};

service BCSProject {
  rpc CreateProject(CreateProjectRequest) returns (ProjectResponse) {
    option (google.api.http) = {
      post : "/bcsproject/v1/projects"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "创建项目信息"
      summary : "创建项目"
    };
  }

  rpc GetProject(GetProjectRequest) returns (ProjectResponse) {
    option (google.api.http) = {
      get : "/bcsproject/v1/projects/{projectIDOrCode}"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "通过项目ID或英文缩写, 查询项目信息"
      summary : "查询项目"
    };
  }
  
  rpc UpdateProject(UpdateProjectRequest) returns (ProjectResponse) {
    option (google.api.http) = {
      put : "/bcsproject/v1/projects/{projectID}"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "更新项目信息"
      summary : "更新项目"
    };
  }

  rpc DeleteProject(DeleteProjectRequest) returns (ProjectResponse) {
    option (google.api.http) = {
      delete : "/bcsproject/v1/projects/{projectID}"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "删除项目"
    };
  }

  rpc ListProjects(ListProjectsRequest) returns (ListProjectsResponse){
    option (google.api.http) = {
      get : "/bcsproject/v1/projects"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "通过查询参数过滤项目列表, 支持分页和全量数据"
      summary : "查询项目列表"
    };
  }

  rpc ListAuthorizedProjects(ListAuthorizedProjReq) returns (ListAuthorizedProjResp){
    option (google.api.http) = {
      get : "/bcsproject/v1/authorized_projects"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "查询用户有权限的项目列表"
      summary : "查询有权限项目列表"
    };
  }

  rpc ListProjectsForIAM(ListProjectsForIAMReq) returns (ListProjectsForIAMResp){
    option (google.api.http) = {
      get : "/bcsproject/v1/projects_for_iam"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "查询开启容器服务的项目列表用于IAM授权"
      summary : "查询开启容器服务的项目列表用于IAM授权"
    };
  }

  rpc GetProjectActive(GetProjectActiveRequest) returns (GetProjectActiveResponse) {
    option (google.api.http) = {
      get : "/bcsproject/v1/projects/{projectIDOrCode}/active"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "查询项目是否活跃"
      summary : "查询项目是否活跃"
    };
  }
}

message Project {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "Project"
      description : "项目的基本信息"
    }
  };

  string createTime = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "createTime",
    description: "创建时间"
  }];
  string updateTime = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "updateTime",
    description: "更新时间"
  }];
  string creator = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "creator",
    description: "项目创建者"
  }];
  string updater = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "updater",
    description: "项目更新者"
  }];
  string managers = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "managers",
    description: "项目管理人员，默认为创建者+更新者"
  }];
  string projectID = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectID",
    description: "项目ID, 全局唯一, 长度为32位字符串, 自动生成"
  }];
  string name = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "name",
    description: "项目中文名称, 长度不能超过64字符"
  }];
  string projectCode = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode",
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过32字符"
  }];
  
  bool useBKRes = 9[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "useBKRes",
    description: "是否使用蓝鲸提供的资源池, 主要用于资源计费, 默认false"
  }];
  string description = 10[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "description",
    description: "项目描述, 尽量限制在100字符"
  }];
  bool isOffline = 11[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "isOffline",
    description: "项目是否已经下线, 默认false"
  }];
  string kind = 12[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "kind",
    description: "项目中集群类型, 可选k8s/mesos"
  }];
  string businessID = 13[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "businessID",
    description: "项目绑定的蓝鲸CMDB中业务ID信息"
  }];
  string businessName = 14[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "businessName", 
    description: "项目绑定的蓝鲸CMDB中业务名称"
  }];
}

message CreateProjectRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "CreateProjectRequest"
      description : "创建项目"
      required : [
        "name",
        "projectCode"
      ]
    }
  };

  string createTime = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "createTime", 
    description: "创建时间"
  }];
  string creator = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "creator", 
    description: "项目创建者"
  }];
  string projectID = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectID", 
    description: "项目ID, 全局唯一, 长度为32位字符串, 自动生成"
  }];
  string name = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title: "name", 
      description: "项目中文名称, 长度不能超过64字符"
  }, (validate.rules).string = {min_len: 2, max_len: 64}];
  string projectCode = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }, (validate.rules).string = {min_len: 2, max_len: 64}];

  bool useBKRes = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "useBKRes", 
    description: "是否使用蓝鲸提供的资源池, 主要用于资源计费, 默认false"
  }];
  string description = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "description", 
    description: "项目描述, 尽量限制在100字符"
  }];
  bool isOffline = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "isOffline", 
    description: "项目是否已经下线, 默认false"
  }];
  string kind = 9[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "kind", 
    description: "项目中集群类型, 可选k8s/mesos"
  }, (validate.rules).string = {in: ["", "k8s", "mesos"]}];
  string businessID = 10[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "businessID", 
    description: "项目绑定的蓝鲸CMDB中业务ID信息"
  }];
  bool isSecret = 11[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "isSecret", 
    description: "是否为保密项目, 默认为false"
  }];
  uint32 projectType = 12[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "type", 
    description: "项目类型, 保留字段, 默认为0, 可选 1:手游, 2:端游, 3:页游, 4:平台产品, 5:支撑产品"
  }];
  uint32 deployType = 13[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "deployType", 
    description: "业务部署类型, 保留字段, 1:物理机部署, 2:容器部署"
  }, (validate.rules).uint32 = {in: [0, 1, 2]}];
  string BGID = 14[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "bgID",
    description: "事业群ID, 保留字段, 默认为0"
  }];
  string BGName = 15[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "bgName", 
    description: "事业群名称, 保留字段, 默认为空"
  }];
  string deptID = 16[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "deptID", 
    description: "部门ID, 保留字段, 默认为0"
  }];
  string deptName = 17[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "deptName", 
    description: "部门名称, 保留字段, 默认为空"
  }];
  string centerID = 18[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "centerID", 
    description: "中心ID, 保留字段, 默认为0"
  }];
  string centerName = 19[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "centerName", 
    description: "中心名称, 保留字段, 默认为空"
  }];
}

message GetProjectRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "GetProjectRequest"
      description : "查询指定项目信息"
      required : [
        "projectIDOrCode"
      ]
    }
  };

  string projectIDOrCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectIDOrCode", 
    description: "项目ID或英文缩写"
  }];
}

message UpdateProjectRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "UpdateProjectRequest"
      description : "更新项目请求"
    }
  };

  string projectID = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectID", 
    description: "项目ID"
  }, (validate.rules).string = {len: 32, pattern: "^[0-9a-zA-Z-]+$"}];
  string name = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "name", 
    description: "项目中文名称, 长度不能超过64字符"
  }, (validate.rules).string = {max_len: 64}];
  string updater = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "updater", 
    description: "更新者"
  }];
  google.protobuf.BoolValue useBKRes = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "useBKRes", 
    description: "是否使用蓝鲸提供的资源池, 主要用于资源计费, 默认false"
  }];
  string description = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "description", 
    description: "项目简要描述"
  }];
  google.protobuf.BoolValue isOffline = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "isOffline", 
    description: "项目是否已经下线, 默认false"
  }];
  string kind = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "kind", 
    description: "项目中集群类型, 可选k8s/mesos, 未来该字段可能废弃"
  }];
  string businessID = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "businessID", 
    description: "项目绑定的蓝鲸CMDB中业务ID信息"
  }];
  string managers = 9[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "managers", 
    description: "项目管理员"
  }];
  string creator = 19[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "creator", 
    description: "创建人"
  }];
}

message DeleteProjectRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "DeleteProjectRequest"
      description : "删除项目"
      required : [
        "projectID"
      ]
    }
  };

  string projectID = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectID", 
    description: "项目ID"
  }, (validate.rules).string = {len: 32, pattern: "^[0-9a-zA-Z-]+$"}];
}

message ProjectResponse{
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  Project data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回详细信息, 可以为空"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
  Perms web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "web_annotations",
    description : "项目更多信息，主要是权限相关"
  }, json_name = "web_annotations"];
}

message ListProjectsRequest{
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListProjectsRequest"
      description : "通过查询条件查询项目列表, 支持分页数据或者全量数据"
    }
  };

  string projectIDs = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectIDs", 
    description: "项目ID, 多个以半角逗号分隔"
  }];
  string names = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "names", 
    description: "项目中文名称, 长度不能超过64字符, 多个以半角逗号分隔"
  }];
  string projectCode = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string searchName = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "searchName", 
    description: "项目中文名称, 通过此字段模糊查询项目信息"
  }];
  string kind = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "kind", 
    description: "项目中集群类型, 允许k8s/mesos"
  }];
  int64 offset = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "offset", 
    description: "分页数据, 表示第几页"
  }];
  int64 limit = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "limit", 
    description: "分页数据, 每页数量"
  }];
  bool all = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "all", 
    description: "表示查询全量数据"
  }];
  string businessID = 9[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "businessID", 
    description: "业务ID"
  }];
}

message ListProjectData{
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListProjectData"
      description : "项目列表数据"
    }
  };

  uint32 total = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "total", 
    description: "总量"
  }];
  repeated Project results = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "results", 
    description: "项目数据"
  }];
}

message ListProjectsResponse{
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  ListProjectData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回项目信息, 包含总量及项目列表"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
  Perms web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "web_annotations",
    description : "项目更多信息，主要是权限相关"
  }, json_name = "web_annotations"];
}

message Perms {
  google.protobuf.Struct perms = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "perms",
    description : "用户针对项目的权限"
  }];
}

message ListAuthorizedProjReq{
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListAuthorizedProjReq"
      description : "查询用户有权限的项目"
    }
  };

  bool all = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "all", 
    description: "表示查询所有项目并且携带权限信息"
  }];
  string kind = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "kind", 
    description: "按kind过滤项目"
  }];
  string searchKey = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "businessID", 
    description: "仅在all为true时生效, 表示通过项目名称/项目英文名模糊查询或项目ID/业务ID精确查询"
  }];
  int64 offset = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "offset", 
    description: "分页数据, 表示偏移量，仅在 all 为 true 时生效"
  }];
  int64 limit = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "limit", 
    description: "分页数据, 表示每页数量，仅在 all 为 true 时生效"
  }];
}

message ListAuthorizedProjResp{
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  ListProjectData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回项目信息, 包含总量及项目列表"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
  Perms web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "web_annotations",
    description : "项目更多信息，主要是权限相关"
  }, json_name = "web_annotations"];
}

message ListProjectsForIAMReq{
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListProjectsForIAMReq"
      description : "查询开启容器服务的项目列表用于IAM授权"
    }
  };
}

message ListProjectsForIAMResp{
  message Project {
    string name = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title: "name",
      description: "项目中文名称, 长度不能超过64字符"
    }];
    string projectID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title: "projectID",
      description: "项目ID, 全局唯一, 长度为32位字符串, 自动生成"
    }];
    string projectCode = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title: "projectCode",
      description: "项目编码(英文缩写), 全局唯一, 长度不能超过32字符"
    }];
    string businessID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title: "businessID",
      description: "项目绑定的蓝鲸CMDB中业务ID信息"
    }];
    string managers = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title: "managers",
      description: "项目管理人员，默认为创建者+更新者"
    }];
    int32 bkmSpaceBizID = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title: "bkmSpaceBizID",
      description: "项目绑定的蓝鲸监控的空间业务ID"
    }];
    string bkmSpaceName = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title: "bkmSpaceName",
      description: "项目绑定的蓝鲸监控的空间名称"
    }];
  }
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  repeated Project data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回项目信息, 包含总量及项目列表"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
}

message GetProjectActiveRequest{
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "GetProjectActiveRequest"
      description : "查询项目是否活跃"
    }
  };
  string projectIDOrCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "projectIDOrCode",
    description: "项目ID或项目英文名"
  }];
}

message GetProjectActiveResponse{
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  ProjectActiveData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回项目活跃信息"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
}

message ProjectActiveData {
  bool isActive = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "isActive",
    description: "是否活跃"
  }];
}

service Business {
  rpc GetBusiness(GetBusinessRequest) returns (GetBusinessResponse) {
    option (google.api.http) = {
      get : "/bcsproject/v1/projects/{projectCode}/business"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "查询项目业务信息"
      summary : "查询项目业务信息"
    };
  }

  rpc ListBusiness(ListBusinessRequest) returns (ListBusinessResponse) {
    option (google.api.http) = {
      get : "/bcsproject/v1/business"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "查询业务列表"
      summary : "查询业务列表"
    };
  }

  rpc GetBusinessTopology(GetBusinessTopologyRequest) returns (GetBusinessTopologyResponse) {
    option (google.api.http) = {
      get : "/bcsproject/v1/projects/{projectCode}/business/topology"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "查询业务拓扑列表"
      summary : "查询业务拓扑列表"
    };
  }
}


message GetBusinessRequest{
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "GetBusinessRequest"
      description : "查询项目业务信息"
    }
  };
  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "projectCode",
    description: "项目英文名"
  }];
}

message GetBusinessResponse{
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  BusinessData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回业务信息"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
  Perms web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "web_annotations",
    description : "更多信息，主要是权限相关"
  }, json_name = "web_annotations"];
}

message ListBusinessRequest{
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListBusinessRequest"
      description : "查询业务列表"
    }
  };

  bool useBCS = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "useBCS",
    description: "业务是否开启BCS容器服务"
  }];
}

message ListBusinessResponse{
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  repeated BusinessData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回可用业务列表"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
  Perms web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "web_annotations",
    description : "更多信息，主要是权限相关"
  }, json_name = "web_annotations"];
}

message GetBusinessTopologyRequest{
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListBusinessRequest"
      description : "查询业务列表"
    }
  };
  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "projectCode",
    description: "项目英文名"
  }];
}

message GetBusinessTopologyResponse{
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  repeated TopologyData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回可用业务列表"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
  Perms web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "web_annotations",
    description : "更多信息，主要是权限相关"
  }, json_name = "web_annotations"];
}

message BusinessData {
  string businessID = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "businessID",
    description: "业务ID"
  }];
  string name = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "name",
    description: "业务名称"
  }];
  repeated string maintainer = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "maintainer",
    description: "业务运维人员"
  }];
}

message TopologyData {
  uint32 bk_inst_id = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "bk_inst_id",
    description: "业务ID"
  }];
  string bk_inst_name = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "bk_inst_name",
    description: "业务名称"
  }];
  string bk_obj_id = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "bk_obj_id",
    description: "bk_obj_id"
  }];
  string bk_obj_name = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "bk_obj_name",
    description: "bk_obj_name"
  }];
  uint32 default = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "default",
    description: "default"
  }];
  repeated TopologyData child =6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "child",
    description: "child"
  }];
}

service Namespace {
  rpc CreateNamespace(CreateNamespaceRequest) returns (CreateNamespaceResponse) {
    option (google.api.http) = {
      post : "/bcsproject/v1/projects/{projectCode}/clusters/{clusterID}/namespaces"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "创建命名空间"
      summary : "创建命名空间"
    };
  }
  rpc CreateNamespaceCallback(NamespaceCallbackRequest) returns (NamespaceCallbackResponse) {
    option (google.api.http) = {
      post : "/bcsproject/v1/projects/{projectCode}/clusters/{clusterID}/namespaces/{namespace}/callback/create"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "创建命名空间itsm回调"
      summary : "创建命名空间itsm回调"
    };
  }
  rpc UpdateNamespace(UpdateNamespaceRequest) returns (UpdateNamespaceResponse) {
    option (google.api.http) = {
      put : "/bcsproject/v1/projects/{projectCode}/clusters/{clusterID}/namespaces/{namespace}"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "更新命名空间"
      summary : "更新命名空间"
    };
  }
  rpc UpdateNamespaceCallback(NamespaceCallbackRequest) returns (NamespaceCallbackResponse) {
    option (google.api.http) = {
      post : "/bcsproject/v1/projects/{projectCode}/clusters/{clusterID}/namespaces/{namespace}/callback/update"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "更新命名空间 ITSM 回调"
      summary : "更新命名空间 ITSM 回调"
    };
  }
  rpc GetNamespace(GetNamespaceRequest) returns (GetNamespaceResponse) {
    option (google.api.http) = {
      get : "/bcsproject/v1/projects/{projectCode}/clusters/{clusterID}/namespaces/{namespace}"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "获取单个命名空间"
      summary : "获取单个命名空间"
    };
  }
  rpc ListNamespaces(ListNamespacesRequest) returns (ListNamespacesResponse) {
    option (google.api.http) = {
      get : "/bcsproject/v1/projects/{projectCode}/clusters/{clusterID}/namespaces"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "获取集群下所有命名空间"
      summary : "获取集群下所有命名空间"
    };
  }
  rpc DeleteNamespace(DeleteNamespaceRequest) returns (DeleteNamespaceResponse) {
    option (google.api.http) = {
      delete : "/bcsproject/v1/projects/{projectCode}/clusters/{clusterID}/namespaces/{namespace}"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "删除命名空间"
      summary : "删除命名空间"
    };
  }
  rpc DeleteNamespaceCallback(NamespaceCallbackRequest) returns (NamespaceCallbackResponse) {
    option (google.api.http) = {
      post : "/bcsproject/v1/projects/{projectCode}/clusters/{clusterID}/namespaces/{namespace}/callback/delete"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "删除命名空间 ITSM 回调"
      summary : "删除命名空间 ITSM 回调"
    };
  }
  rpc SyncNamespace(SyncNamespaceRequest) returns (SyncNamespaceResponse) {
    option (google.api.http) = {
      post : "/bcsproject/v1/projects/{projectCode}/clusters/{clusterID}/namespaces/sync"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "同步命名空间"
      summary : "同步命名空间"
    };
  }
  rpc WithdrawNamespace(WithdrawNamespaceRequest) returns (WithdrawNamespaceResponse) {
    option (google.api.http) = {
      post : "/bcsproject/v1/projects/{projectCode}/clusters/{clusterID}/namespaces/{namespace}/withdraw"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "撤回命名空间审批"
      summary : "撤回命名空间审批"
    };
  }
  rpc ListNativeNamespaces(ListNativeNamespacesRequest) returns (ListNativeNamespacesResponse) {
    option (google.api.http) = {
      get : "/bcsproject/v1/projects/{projectIDOrCode}/clusters/{clusterID}/native/namespaces"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "获取原生命名空间列表"
      summary : "获取原生命名空间列表"
    };
  }
  rpc ListNativeNamespacesContent(ListNativeNamespacesContentRequest) returns (google.protobuf.Struct) {
    option (google.api.http) = {
      get : "/bcsproject/v1/projects/{projectIDOrCode}/clusters/{clusterID}/api/v1/namespaces"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "获取原生命名空间内容"
      summary : "获取原生命名空间内容"
    };
  }
}

message SyncNamespaceRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "CreateNamespaceRequest"
      description : "创建命名空间请求"
      required : [
        "projectCode",
        "clusterID"
      ]
    }
  };

  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "集群ID"
  }];
}

message SyncNamespaceResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  string data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回详细信息, 可以为空"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
}

message WithdrawNamespaceRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "CreateNamespaceRequest"
      description : "创建命名空间请求"
      required : [
        "projectCode",
        "clusterID",
        "namespace"
      ]
    }
  };

  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "集群ID"
  }];
  string namespace = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "namespace", 
    description: "命名空间名称"
  }];
}

message WithdrawNamespaceResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  string data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回详细信息, 可以为空"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
}

message CreateNamespaceRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "CreateNamespaceRequest"
      description : "创建命名空间请求"
      required : [
        "projectCode",
        "clusterID",
        "name"
      ]
    }
  };

  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "集群ID"
  }];
  string name = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "name", 
    description: "命名空间名称, 长度不能超过63字符,只能包含小写字母、数字，以及 '-',必须以字母开头，不能以 '-' 结尾"
    // https://github.com/kubernetes/kubernetes/blob/434bfd82814af038ad94d62ebe59b133fcb50506/staging/src/k8s.io/apimachinery/pkg/util/validation/validation.go#L188
  }, (validate.rules).string = {max_len: 63, pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"}];
  ResourceQuota quota = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quota", 
    description: "命名空间配额"
  }];
  repeated Label labels = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "labels", 
    description: "命名空间标签"
  }];
  repeated Annotation annotations = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "annotations", 
    description: "命名空间注解"
  }];
  repeated VariableValue variables = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "variables", 
    description: "命名空间变量列表"
  }];
}

message CreateNamespaceResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  NamespaceData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回详细信息, 可以为空"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
  Perms web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "web_annotations",
    description : "更多信息，主要是权限相关"
  }, json_name = "web_annotations"];
}

message NamespaceCallbackRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "NamespaceCallbackRequest"
      description : "命名空间itsm回调"
      required : [
        "projectCode",
        "clusterID",
        "namespace"
      ]
    }
  };

  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "集群ID"
  }];
  string namespace = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "namespace", 
    description: "命名空间名称, 长度不能超过63字符,只能包含小写字母、数字，以及 '-',必须以字母开头，不能以 '-' 结尾"
    // https://github.com/kubernetes/kubernetes/blob/434bfd82814af038ad94d62ebe59b133fcb50506/staging/src/k8s.io/apimachinery/pkg/util/validation/validation.go#L188
  }, (validate.rules).string = {max_len: 63, pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"}];
  string title = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "title", 
    description: "ITSM 单据标题"
  }];
  string currentStatus = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "currentStatus", 
    description: "ITSM 单据状态"
  }];
  string sn = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "sn", 
    description: "ITSM 单号"
  }];
  string ticketUrl = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "ticket_url", 
    description: "ITSM 单据链接"
  }];
  bool approveResult = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "approve_result", 
    description: "单据审批结果"
  }];
  bool applyInCluster = 9[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "applyInCluster", 
    description: "是否下发到集群"
  }];
}

message NamespaceCallbackResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  string data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回详细信息, 可以为空"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
  bool result = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "result",
    description : "回调结果"
  }];
}

message UpdateNamespaceRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "UpdateNamespaceRequest"
      description : "更新命名空间配额请求"
      required : [
        "projectCode",
        "clusterID",
        "namespace"
      ]
    }
  };

  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "集群ID"
  }];
  string namespace = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "namespace", 
    description: "命名空间名称, 长度不能超过63字符,只能包含小写字母、数字，以及 '-',必须以字母开头，不能以 '-' 结尾"
    // https://github.com/kubernetes/kubernetes/blob/434bfd82814af038ad94d62ebe59b133fcb50506/staging/src/k8s.io/apimachinery/pkg/util/validation/validation.go#L188
  }, (validate.rules).string = {max_len: 63, pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"}];
  repeated Label labels = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "labels", 
    description: "命名空间标签"
  }];
  repeated Annotation annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "annotations", 
    description: "命名空间注解"
  }];
  ResourceQuota quota = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quota", 
    description: "命名空间配额"
  }];
}

message UpdateNamespaceResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  string requestID = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
  Perms web_annotations = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "web_annotations",
    description : "更多信息，主要是权限相关"
  }, json_name = "web_annotations"];
}

message GetNamespaceRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "GetNamespaceRequest"
      description : "获取单个命名空间请求"
      required : [
        "projectCode",
        "clusterID",
        "namespace"
      ]
    }
  };

  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "clusterID", 
    description: "集群ID"
  }];
  string namespace = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "namespace", 
    description: "命名空间名称"
  }];
}

message GetNamespaceResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  NamespaceData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回详细信息, 可以为空"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
  Perms web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "web_annotations",
    description : "更多信息，主要是权限相关"
  }, json_name = "web_annotations"];
}

message ListNamespacesRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListNamespacesRequest"
      description : "获取命名空间列表请求"
      required : [
        "projectCode",
        "clusterID"
      ]
    }
  };

  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "clusterID", 
    description: "集群ID"
  }];
}

message ListNamespacesResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  repeated NamespaceData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回详细信息, 可以为空"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
  Perms web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "web_annotations",
    description : "项目更多信息，主要是权限相关"
  }, json_name = "web_annotations"];
}

message ListNativeNamespacesRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListNativeNamespacesRequest"
      description : "获取原生命名空间列表请求"
      required : [
        "projectIDOrCode",
        "clusterID"
      ]
    }
  };

  string projectIDOrCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectIDOrCode", 
    description: "项目ID或项目英文名, 为 '-' 则不校验项目信息"
  }];
  string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "clusterID", 
    description: "集群ID"
  }];
}

message ListNativeNamespacesResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  repeated NativeNamespaceData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回详细信息, 可以为空"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
  Perms web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "web_annotations",
    description : "项目更多信息，主要是权限相关"
  }, json_name = "web_annotations"];
}

message ListNativeNamespacesContentRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListNativeNamespacesContentRequest"
      description : "获取原生命名空间内容"
      required : [
        "projectIDOrCode",
        "clusterID"
      ]
    }
  };

  string projectIDOrCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectIDOrCode", 
    description: "项目ID或项目英文名, 为 '-' 则不校验项目信息"
  }];
  string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "clusterID", 
    description: "集群ID"
  }];
}

message DeleteNamespaceRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "DeleteNamespaceRequest"
      description : "删除命名空间请求"
      required : [
        "projectCode",
        "clusterID",
        "namespace"
      ]
    }
  };

  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "集群ID"
  }];
  string namespace = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "namespace", 
    description: "命名空间名称"
    // https://github.com/kubernetes/kubernetes/blob/434bfd82814af038ad94d62ebe59b133fcb50506/staging/src/k8s.io/apimachinery/pkg/util/validation/validation.go#L188
  }, (validate.rules).string = {max_len: 63, pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"}];
}

message DeleteNamespaceResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  string data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "data",
    description: "data"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
  Perms perms = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "perms",
    description : "无权限相关信息"
  }];
}

message NamespaceData {
  string uid = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "uid", 
    description: "uid"
  }];
  string name = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "name", 
    description: "命名空间名称"
  }];
  string status = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "status", 
    description: "命名空间状态"
  }];
  string createTime = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "createTime", 
    description: "创建时间"
  }];
  ResourceQuota quota = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quota", 
    description: "命名空间可用配额"
  }];
  ResourceQuota used = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "used", 
    description: "命名空间已用配额"
  }];
  float cpuUseRate = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "cpuUseRate", 
    description: "CPU使用率"
  }];
  float memoryUseRate = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "memoryUseRate", 
    description: "命名空使用率"
  }];
  repeated Label labels = 9[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "labels", 
    description: "命名空间标签"
  }];
  repeated Annotation annotations = 10[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "annotations", 
    description: "命名空间注解"
  }];
  repeated VariableValue variables = 11[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "variables", 
    description: "命名空间变量"
  }];
  string itsmTicketSN = 12[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "itsmTicketSN", 
    description: "itsm 单号"
  }];
  string itsmTicketStatus = 13[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "itsmTicketStatus", 
    description: "itsm 单据状态"
  }];
  string itsmTicketURL = 14[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "itsmTicketURL", 
    description: "itsm 单据 URL"
  }];
  string itsmTicketType = 15[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "itsmTicketType", 
    description: "itsm 单据类型: create, update, delete"
  }];
  repeated string managers = 16[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "managers", 
    description: "命名空间管理员"
  }];
}

message NativeNamespaceData {
  string uid = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "uid", 
    description: "uid"
  }];
  string name = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "name", 
    description: "命名空间名称"
  }];
  string status = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "status", 
    description: "命名空间状态"
  }];
  string createTime = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "createTime", 
    description: "创建时间"
  }];
  string projectID = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectID", 
    description: "项目ID"
  }];
  string projectCode = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目英文名"
  }];
}

message Label {
  string key = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "key", 
    description: "key"
  }];
  string value = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "value", 
    description: "value"
  }];
}

message Annotation {
  string key = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "key", 
    description: "key"
  }];
  string value = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "value", 
    description: "value"
  }];
}

message ResourceQuota {
  string cpuRequests = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "requests.cpu", 
    description: "requests.cpu"
  }];
  string memoryRequests = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "requests.memory", 
    description: "requests.memory"
  }];
  string cpuLimits = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "limits.cpu", 
    description: "limits.cpu"
  }];
  string memoryLimits = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "limits.memory", 
    description: "limits.cpu"
  }];
}

service Variable {
  rpc CreateVariable(CreateVariableRequest) returns (CreateVariableResponse) {
    option (google.api.http) = {
      post : "/bcsproject/v1/projects/{projectCode}/variables"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "创建变量"
      summary : "创建变量"
    };
  }
  rpc UpdateVariable(UpdateVariableRequest) returns (UpdateVariableResponse) {
    option (google.api.http) = {
      put : "/bcsproject/v1/projects/{projectCode}/variables/{variableID}"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "更新变量"
      summary : "更新变量"
    };
  }
  rpc ListVariableDefinitions(ListVariableDefinitionsRequest) returns (ListVariableDefinitionsResponse) {
    option (google.api.http) = {
      get : "/bcsproject/v1/projects/{projectCode}/variables"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "获取项目下所有变量定义"
      summary : "获取项目下所有变量定义"
    };
  }
  rpc DeleteVariableDefinitions(DeleteVariableDefinitionsRequest) returns (DeleteVariableDefinitionsResponse) {
    option (google.api.http) = {
      delete : "/bcsproject/v1/projects/{projectCode}/variables"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "批量删除变量定义"
      summary : "批量删除变量定义"
    };
  }
  rpc ListClustersVariables(ListClustersVariablesRequest) returns (ListClustersVariablesResponse) {
    option (google.api.http) = {
      get : "/bcsproject/v1/projects/{projectCode}/variables/{variableID}/cluster"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "获取所有集群的变量值"
      summary : "获取所有集群的变量值"
    };
  }
  rpc ListNamespacesVariables(ListNamespacesVariablesRequest) returns (ListNamespacesVariablesResponse) {
    option (google.api.http) = {
      get : "/bcsproject/v1/projects/{projectCode}/variables/{variableID}/namespace"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "获取项目所有命名空间的变量值"
      summary : "获取项目所有命名空间的变量值"
    };
  }
  rpc UpdateClustersVariables(UpdateClustersVariablesRequest) returns (UpdateClustersVariablesResponse) {
    option (google.api.http) = {
      put : "/bcsproject/v1/projects/{projectCode}/variables/{variableID}/cluster"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "更新所有集群的变量值"
      summary : "更新所有集群的变量值"
    };
  }
  rpc UpdateNamespacesVariables(UpdateNamespacesVariablesRequest) returns (UpdateNamespacesVariablesResponse) {
    option (google.api.http) = {
      put : "/bcsproject/v1/projects/{projectCode}/variables/{variableID}/namespace"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "更新项目所有命名空间的变量值"
      summary : "更新项目所有命名空间的变量值"
    };
  }
  rpc ListClusterVariables(ListClusterVariablesRequest) returns (ListClusterVariablesResponse) {
    option (google.api.http) = {
      get : "/bcsproject/v1/projects/{projectCode}/clusters/{clusterID}/variables"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "获取集群的所有变量值"
      summary : "获取集群的所有变量值"
    };
  }
  rpc ListNamespaceVariables(ListNamespaceVariablesRequest) returns (ListNamespaceVariablesResponse) {
    option (google.api.http) = {
      get : "/bcsproject/v1/projects/{projectCode}/clusters/{clusterID}/namespaces/{namespace}/variables"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "获取命名空间的所有变量值"
      summary : "获取命名空间的所有变量值"
    };
  }
  rpc UpdateClusterVariables(UpdateClusterVariablesRequest) returns (UpdateClusterVariablesResponse) {
    option (google.api.http) = {
      put : "/bcsproject/v1/projects/{projectCode}/clusters/{clusterID}/variables"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "更新集群的所有变量值"
      summary : "更新集群的所有变量值"
    };
  }
  rpc UpdateNamespaceVariables(UpdateNamespaceVariablesRequest) returns (UpdateNamespaceVariablesResponse) {
    option (google.api.http) = {
      put : "/bcsproject/v1/projects/{projectCode}/clusters/{clusterID}/namespaces/{namespace}/variables"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "更新命名空间的所有变量值"
      summary : "更新命名空间的所有变量值"
    };
  }
  rpc ImportVariables(ImportVariablesRequest) returns (ImportVariablesResponse) {
    option (google.api.http) = {
      post : "/bcsproject/v1/projects/{projectCode}/variables/import"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "从文件中导入变量"
      summary : "从文件中导入变量"
    };
  }
  rpc RenderVariables(RenderVariablesRequest) returns (RenderVariablesResponse) {
    option (google.api.http) = {
      get : "/bcsproject/v1/projects/{projectCode}/clusters/{clusterID}/namespaces/{namespace}/variables/render"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "渲染变量在特定集群, 命名空间下的值"
      summary : "渲染变量在特定集群, 命名空间下的值"
    };
  }
}


message CreateVariableRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "CreateVariableRequest"
      description : "创建变量请求"
      required : [
        "projectCode",
        "name",
        "key"
      ]
    }
  };

  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string name = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "name", 
    description: "变量名称, 长度不能超过32字符"
  }, (validate.rules).string = {max_len: 32}];
  string key = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "key", 
    description: "变量 key，项目内唯一，长度不能超过64字符"
  }, (validate.rules).string = {max_len: 64, pattern: "^[a-zA-Z][a-zA-Z0-9_]*$"}];
  string scope = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title: "name", 
      description: "变量作用域，取值范围：global, cluster, namespace"
  }, (validate.rules).string = {in: ["global", "cluster", "namespace"]}];
  string default = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "default", 
    description: "变量默认值"
  }];
  string desc = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "desc", 
    description: "变量说明与描述, 限制在100字符以内"
  }];
}

message CreateVariableResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  CreateVariableData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回变量定义列表信息, 包含总量及变量定义列表"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
}

message UpdateVariableRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "UpdateVariableRequest"
      description : "更新变量请求"
      required : [
        "projectCode",
        "variableID"
      ]
    }
  };

  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string variableID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "variableID", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string name = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "name", 
    description: "变量名称, 长度不能超过32字符"
  }, (validate.rules).string = {max_len: 32}];
  string key = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "key", 
    description: "变量 key, 项目内唯一, 长度不能超过64字符"
  }, (validate.rules).string = {max_len: 64, pattern: "^[a-zA-Z][a-zA-Z0-9_]*$"}];
  string scope = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title: "scope", 
      description: "变量作用域, 取值范围: global, cluster, namespace"
  }, (validate.rules).string = {in: ["global", "cluster", "namespace"]}];
  string default = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "default", 
    description: "变量默认值"
  }];
  string desc = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "desc", 
    description: "变量说明与描述, 限制在100字符以内"
  }];
}

message UpdateVariableResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  UpdateVariableData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回变量定义列表信息, 包含总量及变量定义列表"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
}

message ListVariableDefinitionsRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListVariableDefinitionRequest"
      description : "获取项目下所有变量定义请求"
      required : [
        "projectCode"
      ]
    }
  };

  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string scope = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title: "scope", 
      description: "变量作用域, 取值范围: global, cluster, namespace"
  }];
  string searchKey = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "searchKey", 
    description: "变量key, 通过此字段模糊查询项目变量"
  }];
  int64 offset = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "offset", 
    description: "分页数据, 表示第几页"
  }];
  int64 limit = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "limit", 
    description: "分页数据, 每页数量"
  }];
  bool all = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "all", 
    description: "是否查询全量数据"
  }];
}

message ListVariableDefinitionsResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  ListVariableDefinitionData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回变量定义列表信息, 包含总量及变量定义列表"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
}

message DeleteVariableDefinitionsRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "DeleteVariableDefinitionsRequest"
      description : "删除变量定义请求"
      required : [
        "projectCode"
        "idList"
      ]
    }
  };
  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string idList = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "idList", 
    description: "变量定义 id 列表, 以半角逗号、分号或空格作为分隔"
  }];
}

message DeleteVariableDefinitionsResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  DeleteVariableDefinitionsData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "data", 
    description: "批量删除变量定义数据"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
}

message ListClustersVariablesRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListClustersVariablesRequest"
      description : "获取项目下集群变量值请求"
      required : [
        "projectCode",
        "variableID"
      ]
    }
  };
  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }, (validate.rules).string = {min_len: 2, max_len: 64}];
  string variableID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "variableID", 
    description: "变量 id"
  }, (validate.rules).string = {max_len: 32, pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"}];
}

message ListClustersVariablesResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  ListVariableValuesData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回变量信息"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
}

message ListNamespacesVariablesRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListNamespacesVariablesRequest"
      description : "获取项目下命名空间变量值请求"
      required : [
        "projectCode",
        "variableID"
      ]
    }
  };
  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string variableID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "variableID", 
    description: "变量 id"
  }, (validate.rules).string = {max_len: 32, pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"}];
}

message ListNamespacesVariablesResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  ListVariableValuesData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回命名空间列表信息"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
}

message UpdateClustersVariablesRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "UpdateClustersVariablesRequest"
      description : "更新项目下集群变量值请求"
      required : [
        "projectCode",
        "variableID"
      ]
    }
  };
  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string variableID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "variableID", 
    description: "变量 id"
  }, (validate.rules).string = {max_len: 32, pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"}];
  repeated VariableValue data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "集群变量值"
  }];
}

message UpdateClustersVariablesResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  string requestID = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
}

message UpdateNamespacesVariablesRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "UpdateNamespacesVariablesRequest"
      description : "更新项目下命名空间变量值请求"
      required : [
        "projectCode",
        "variableID"
      ]
    }
  };

  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string variableID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "variableID", 
    description: "变量 id"
  }, (validate.rules).string = {max_len: 32, pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"}];
  repeated VariableValue data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "命名空间变量值"
  }];
}

message UpdateNamespacesVariablesResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  string requestID = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
}

message ListClusterVariablesRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListClusterVariablesRequest"
      description : "获取集群所有变量值请求"
      required : [
        "projectCode",
        "clusterID"
      ]
    }
  };
  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }, (validate.rules).string = {min_len: 2, max_len: 64}];
  string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "clusterID", 
    description: "集群 id"
  }];
}

message ListClusterVariablesResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  ListVariableValuesData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回变量信息"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
}

message ListNamespaceVariablesRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListNamespaceVariablesRequest"
      description : "获取命名空间所有变量值请求"
      required : [
        "projectCode",
        "clusterID",
        "namespace"
      ]
    }
  };
  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "clusterID", 
    description: "集群 id"
  }];
  string namespace = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "namespace", 
    description: "命名空间名称"
  }];
}

message ListNamespaceVariablesResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  ListVariableValuesData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回命名空间列表信息"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
}

message UpdateClusterVariablesRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "UpdateClusterVariablesRequest"
      description : "更新集群所有变量值请求"
      required : [
        "projectCode",
        "clusterID"
      ]
    }
  };
  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "clusterID", 
    description: "集群 id"
  }, (validate.rules).string = {max_len: 32, pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"}];
  repeated VariableValue data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "集群变量值"
  }];
}

message UpdateClusterVariablesResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  string requestID = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
}

message UpdateNamespaceVariablesRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "UpdateNamespaceVariablesRequest"
      description : "更新命名空间所有变量值请求"
      required : [
        "projectCode",
        "variableID"
      ]
    }
  };

  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "clusterID", 
    description: "集群 id"
  }];
  string namespace = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "namespace", 
    description: "命名空间名称"
  }];
  repeated VariableValue data = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "命名空间变量值"
  }];
}

message UpdateNamespaceVariablesResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  string requestID = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
}

message ImportVariablesRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ImportVariablesRequest"
      description : "从文件导入变量请求"
      required : [
        "projectCode"
      ]
    }
  };

  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  repeated ImportVariableData data = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "变量列表"
  }];
}

message ImportVariablesResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  string requestID = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
}

message RenderVariablesRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "RenderVariablesRequest"
      description : "渲染变量请求"
      required : [
        "projectCode"
        "clusterID"
        "namespace"
        "keyList"
      ]
    }
  };

  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "clusterID", 
    description: "集群 id"
  }];
  string namespace = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "namespace", 
    description: "命名空间名称"
  }];
  string keyList = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "keyList", 
    description: "变量 key 列表, 以半角逗号、分号或空格作为分隔"
  }];
}

message RenderVariablesResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  repeated VariableValue data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "results", 
    description: "变量数据"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
}

message VariableDefinition {
  string id = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "id", 
    description: "变量定义ID"
  }];
  string key = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "key", 
    description: "变量 key"
  }];
  string name = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "name", 
    description: "变量名称"
  }];
  string default = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "default", 
    description: "变量默认键值对"
  }];
  string defaultValue = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "default", 
    description: "变量默认值"
  }];
  string scope = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "scope", 
    description: "变量作用域, 取值范围: global, cluster, namespace"
  }];
  string scopeName = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "scopeName", 
    description: "变量作用域名称, 取值范围: 全局变量, 集群变量, 明明空间变量"
  }];
  string category = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "category", 
    description: "类型, 取值范围: sys/custom"
  }];
  string categoryName = 9[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "categoryName", 
    description: "类型名称, 取值范围: 系统内置/自定义"
  }];
  string desc = 10[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "desc", 
    description: "变量说明与描述, 限制在100字符以内"
  }];
  string created = 11[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "created", 
    description: "创建时间, 格式: yyyy-MM-dd hh:mm:ss"
  }];
  string updated = 12[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "updated", 
    description: "修改时间, 格式: yyyy-MM-dd hh:mm:ss"
  }];
  string creator = 13[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "creator", 
    description: "创建人"
  }];
  string updater = 14[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "updater", 
    description: "修改人"
  }];
}

message VariableValue {
  string id = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "id", 
    description: "变量ID"
  }];
  string key = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "key", 
    description: "变量key"
  }];
  string name = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "name", 
    description: "变量名称"
  }];
  string clusterID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "clusterID", 
    description: "集群ID"
  }];
  string clusterName = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "clusterName", 
    description: "集群名称"
  }];
  string namespace = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "namespace", 
    description: "命名空间"
  }];
  string value = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "value", 
    description: "变量的值"
  }];
  string scope = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "scope", 
    description: "变量作用域"
  }];
}

message CreateVariableData {
  string id = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "id", 
    description: "变量 id"
  }];
  string projectCode = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string name = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "name", 
    description: "变量名称, 长度不能超过32字符"
  }];
  string key = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "key", 
    description: "变量 key, 项目内唯一, 长度不能超过64字符"
  }];
  string scope = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title: "name", 
      description: "变量作用域, 取值范围: global, cluster, namespace"
  }];
  string default = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "default", 
    description: "变量默认值"
  }];
  string desc = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "desc", 
    description: "变量说明与描述, 限制在100字符以内"
  }];
  string category = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "category", 
    description: "变量类型, 取值范围: sys, custom"
  }];
}

message UpdateVariableData {
  string id = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "id",
    description: "变量 id"
  }];
  string projectCode = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string name = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "name", 
    description: "变量名称, 长度不能超过32字符"
  }];
  string key = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "key", 
    description: "变量 key, 项目内唯一, 长度不能超过64字符"
  }];
  string scope = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title: "name", 
      description: "变量作用域, 取值范围: global, cluster, namespace"
  }];
  string default = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "default", 
    description: "变量默认值"
  }];
  string desc = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "desc", 
    description: "变量说明与描述, 限制在100字符以内"
  }];
  string category = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "category", 
    description: "变量类型, 取值范围: sys, custom"
  }];
}

message ListVariableDefinitionData {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListVariableDefinitionData"
      description : "项目列表数据"
    }
  };

  uint32 total = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "total", 
    description: "总量"
  }];
  repeated VariableDefinition results = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "results", 
    description: "变量定义数据"
  }];
}

message DeleteVariableDefinitionsData {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "DeleteVariableDefinitionsData"
      description : "批量删除变量定义数据"
    }
  };

  uint32 total = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "total", 
    description: "删除数量"
  }];
}

message ListVariableValuesData {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListVariableValuesData"
      description : "集群变量列表数据"
    }
  };

  uint32 total = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "total", 
    description: "总量"
  }];
  repeated VariableValue results = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "results", 
    description: "集群变量数据"
  }];
}

message ImportVariableData {
  string name = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "name", 
    description: "变量名称, 长度不能超过32字符"
  }, (validate.rules).string = {max_len: 32}];
  string key = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "key", 
    description: "变量 key，项目内唯一，长度不能超过64字符"
  }, (validate.rules).string = {max_len: 64, pattern: "^[a-zA-Z][a-zA-Z0-9_]*$"}];
  string scope = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title: "name", 
      description: "变量作用域，取值范围：global, cluster, namespace"
  }];
  string value = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "value", 
    description: "变量默认值"
  }];
  string desc = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "desc", 
    description: "变量说明与描述, 限制在100字符以内"
  }];
  repeated ImportVariableVarData vars = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "vars", 
    description: "变量值列表"
  }];

}

message ImportVariableVarData {
  string clusterID = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "clusterID", 
    description: "集群ID"
  }];
  string namespace = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "namespace", 
    description: "命名空间"
  }];
  string value = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "value", 
    description: "变量值"
  }];
}

service Healthz {
  rpc Healthz(HealthzRequest) returns (HealthzResponse) {
    option (google.api.http) = {
      get: "/bcsproject/v1/healthz"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description: "探针API, 用于readiness探测"
    };
	}
  rpc Ping(PingRequest) returns (PingResponse) {
    option (google.api.http) = {
      get: "/bcsproject/v1/ping"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description: "探针API, 用于liveness探测"
    };
  }
}

message HealthzRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: {
      title: "HealthzRequest",
      description: "Healthz API"
    }
  };
}

message HealthzResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  HealthzData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回服务状态, 包含服务整体状态和 mongo 状态"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
}

message HealthzData {
  string status = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "status",
    description: "服务整体状态"
  }];
  string mongoStatus = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "mongo status",
    description: "服务依赖的 mongo 状态"
  }];
}

message PingRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: {
      title: "PingRequest",
      description: "Ping API request"
    }
  };
}

message PingResponse {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
      title: "PingResp",
      description: "Ping API 响应"
    }
  };

  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  string data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回服务状态, 包含服务整体状态和 mongo 状态"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
}

// BCSProjectQuota 项目维度的额度/容量管理(共享集群、CA整机额度、算力集群额度)
service BCSProjectQuota {

  // CreateProjectQuota 申请项目资源额度
  rpc CreateProjectQuota(CreateProjectQuotaRequest) returns (ProjectQuotaResponse) {
    option (google.api.http) = {
      post : "/bcsproject/v1/projectQuotas"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "创建项目配额信息"
      summary : "创建项目配额信息"
    };
  }

  rpc GetProjectQuota(GetProjectQuotaRequest) returns (ProjectQuotaResponse) {
    option (google.api.http) = {
      get : "/bcsproject/v1/projectQuotas/{quotaId}"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "通过quotaID查询项目quota信息"
      summary : "查询项目quota资源信息"
    };
  }

  rpc UpdateProjectQuota(UpdateProjectQuotaRequest) returns (ProjectQuotaResponse) {
    option (google.api.http) = {
      put : "/bcsproject/v1/projectQuotas/{quotaId}"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "更新项目quota信息"
      summary : "更新项目资源quota"
    };
  }

  rpc ScaleUpProjectQuota(ScaleUpProjectQuotaRequest) returns (ScaleUpProjectQuotaResponse) {
    option (google.api.http) = {
      put : "/bcsproject/v1/projectQuotas/{quotaId}/scaleup"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "扩容项目quota"
      summary : "扩容项目资源quota"
    };
  }

  rpc ScaleDownProjectQuota(ScaleDownProjectQuotaRequest) returns (ScaleDownProjectQuotaResponse) {
    option (google.api.http) = {
      put : "/bcsproject/v1/projectQuotas/{quotaId}/scaledown"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "缩容项目quota"
      summary : "缩容项目资源quota"
    };
  }

  // DeleteProjectQuota 退回资源额度
  rpc DeleteProjectQuota(DeleteProjectQuotaRequest) returns (ProjectQuotaResponse) {
    option (google.api.http) = {
      delete : "/bcsproject/v1/projectQuotas/{quotaId}"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "删除项目资源quota"
    };
  }

  rpc ListProjectQuotas(ListProjectQuotasRequest) returns (ListProjectQuotasResponse){
    option (google.api.http) = {
      get : "/bcsproject/v1/projectQuotas"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "通过查询参数过滤项目quota列表, 支持分页和全量数据"
      summary : "查询项目资源quota列表"
    };
  }

  rpc GetProjectQuotasUsage(GetProjectQuotasUsageReq) returns (GetProjectQuotasUsageResp){
    option (google.api.http) = {
      get : "/bcsproject/v1/projectQuotas/{quotaId}/usage"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "查询用户项目quota的使用情况, 包括配额和已使用资源"
      summary : "查询项目配额使用情况"
    };
  }
}

message ProjectQuota {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ProjectQuota"
      description : "项目配额信息(支持不同类型)"
    }
  };
  string quotaId = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quotaId",
    description: "资源配额ID"
  }];
  string quotaName = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quotaName",
    description: "配额中文名称, 长度不能超过64字符"
  }];
  string projectID = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectID",
    description: "项目ID, 全局唯一, 长度为32位字符串, 自动生成"
  }];
  string projectCode = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode",
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过32字符"
  }];
  string clusterId = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "clusterId",
    description: "集群ID"
  }];
  string clusterName = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "clusterName",
    description: "集群名称"
  }];
  string nameSpace = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "nameSpace",
    description: "集群名称空间维度的额度管理"
  }];
  string businessID = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "businessID",
    description: "项目绑定的蓝鲸CMDB中业务ID信息"
  }];
  string businessName = 9[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "businessName",
    description: "项目绑定的蓝鲸CMDB中业务名称"
  }];
  string description = 10[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "description",
    description: "项目配额描述"
  }];
  bool isDeleted = 11[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "isDeleted",
    description: "项目下该资源配额是否已下线(默认软删),同类型同种类资源仅不允许重复申请,可更改配额"
  }];
  string quotaType = 12[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quotaType",
    description: "资源类型(目前支持CA整机资源、共享集群维度资源)"
  }];
  QuotaResource quota = 13[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quota",
    description: "不同资源类型的具体配置资源quota"
  }];
  string status = 14[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "status",
    description: "资源quota的状态(申请中、审批中、已申请)"
  }];
  string message = 15[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "message",
    description: "不同状态中的具体原因(审批不通过、资源不足等原因)"
  }];
  string createTime = 16[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "createTime",
    description: "创建时间"
  }];
  string updateTime = 17[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "updateTime",
    description: "更新时间"
  }];
  string creator = 18[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "creator",
    description: "项目创建者"
  }];
  string updater = 19[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "updater",
    description: "项目更新者"
  }];
  string provider = 20[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "provider",
    description: "云底层资源提供方"
  }];
  repeated NodeGroup nodeGroups = 21[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "nodeGroups",
    description: "相关nodeGroups"
  }];
}

message NodeGroup {
  string clusterId = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "clusterId",
    description: "集群ID"
  }];
  string nodeGroupId = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "nodeGroupId",
    description: "节点池ID"
  }];
  uint32 quotaNum = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quotaNum",
    description: "机型申请的配额"
  }];
  uint32 quotaUsed = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quotaUsed",
    description: "机型已使用的配额"
  }];
}

message QuotaResource {
  InstanceTypeConfig zoneResources = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "zoneResources",
    description: "机型所在可用区资源配置"
  }];
  DeviceInfo cpu = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "cpu",
    description: "共享集群资源下该项目的cpu额度"
  }];
  DeviceInfo mem = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "mem",
    description: "共享集群资源下该项目的mem额度"
  }];
  DeviceInfo gpu = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "gpu",
    description: "共享集群资源下该项目的gpu额度"
  }];
}

message QuotaStrategy {
  google.protobuf.Int64Value expectTime = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "expectTime",
    description: "quota期望生效时间, 时间戳。若为nil 或者为空则标识审批通过后立即执行"
  }];
  bool IsUrgencyResource = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "isUrgencyResource",
    description: "该quota额度是否为紧急资源,若为紧急资源，计费方式有所不同"
  }];
}

// InstanceTypeConfig 整机资源配置
message InstanceTypeConfig {
  string region = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "region",
    description: "地域"
  }];
  string instanceType = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "instanceType",
    description: "机型"
  }];
  uint32 cpu = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "cpu",
    description: "机型cpu信息，与机型instanceType互斥，比instanceType优先级高"
  }];
  uint32 mem = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "mem",
    description: "机型mem信息，与机型instanceType互斥，比instanceType优先级高"
  }];
  uint32 gpu = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "gpu",
    description: "机型gpu信息，与机型instanceType互斥，比instanceType优先级高，可以会为0"
  }];
  string zoneId = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "zoneId",
    description: "可用区Id"
  }];
  string zoneName = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "zoneName",
    description: "可用区名称"
  }];
  uint32 quotaNum = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quotaNum",
    description: "机型申请的配额"
  }];
  uint32 quotaUsed = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quotaUsed",
    description: "机型已使用的配额"
  }];
  DataDisk systemDisk = 10[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "systemDisk",
    description: "系统盘信息，BCS默认设置为高性能云盘，大小为50G"
  }];
  repeated DataDisk dataDisks = 11[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "dataDisks",
    description: "数据盘信息，无默认设置则不购买"
  }];
}

// DataDisk 数据盘定义
message DataDisk {
  string diskType = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "diskType",
    description: "数据盘类型，LOCAL_BASIC（默认）,LOCAL_SSD,CLOUD_BASE,CLOUD_SSD,CLOUD_PREMIUM(高性能云硬盘)"
  }];
  string diskSize = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "diskSize",
    description: "数据盘大小，10G起跳，默认为0，为0时不购买"
  }];
}

// DeviceInfo device data (cpu/mem/gpu)
message DeviceInfo {
  string deviceType = 1;
  string deviceQuota = 2;
  map<string, string> attributes = 3;
}

message CreateProjectQuotaRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "CreateProjectQuotaRequest"
      description : "创建项目维度的quota资源配额"
      required : [
        "name",
        "projectCode"
      ]
    }
  };

  string quotaName = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quotaName",
    description: "配额中文名称, 长度不能超过64字符"
  }, (validate.rules).string = {min_len : 1, max_len : 10240}];
  string projectID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectID",
    description: "项目ID, 全局唯一, 长度为32位字符串, 自动生成"
  }];
  string projectCode = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode",
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过32字符"
  }];
  string clusterId = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "clusterId",
    description: "集群ID"
  }];
  string clusterName = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "clusterName",
    description: "集群名称"
  }];
  string nameSpace = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "nameSpace",
    description: "集群名称空间维度的额度管理"
  }];
  string businessID = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "businessID",
    description: "项目绑定的蓝鲸CMDB中业务ID信息"
  }];
  string businessName = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "businessName",
    description: "项目绑定的蓝鲸CMDB中业务名称"
  }];
  string description = 9[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "description",
    description: "项目配额描述"
  }];
  string quotaType = 10[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quotaType",
    description: "资源类型(目前支持CA整机资源、共享集群维度资源)"
  }];
  string provider = 11 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "provider",
    description: "quota资源的供应商, 不同provider支持多种类型的quota"
  }];
  QuotaResource quota = 12[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quota",
    description: "不同资源类型的具体配置资源quota"
  }];
  map<string, string> labels = 13[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "labels",
    description: "资源quota的标签配置"
  }];
}

message GetProjectQuotaRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "GetProjectQuotaRequest"
      description : "查询指定项目quota信息"
      required : [
        "quotaId"
      ]
    }
  };

  string quotaId = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quotaId",
    description: "项目quotaID"
  }];
}

message UpdateProjectQuotaRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "UpdateProjectQuotaRequest"
      description : "更新项目quota请求"
    }
  };

  string quotaId = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quotaId",
    description: "资源quotaId"
  }, (validate.rules).string = {len: 32, pattern: "^[0-9a-zA-Z-]+$"}];
  string name = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "name",
    description: "项目中文名称, 长度不能超过64字符"
  }, (validate.rules).string = {max_len: 64}];
  QuotaResource quota = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quota",
    description: "更新资源quota"
  }];
  string updater = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "updater",
    description: "更新者"
  }];
}

message DeleteProjectQuotaRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "DeleteProjectQuotaRequest"
      description : "删除项目资源quota"
      required : [
        "quotaId"
      ]
    }
  };

  string quotaId = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quotaId",
    description: "项目资源quotaId"
  }, (validate.rules).string = {max_len: 128, pattern: "^[0-9a-zA-Z-]+$"}];
}

message ProjectQuotaResponse{
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code",
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  ProjectQuota data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data",
    description: "返回详细信息, 可以为空"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
  google.protobuf.Struct task = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "task",
    description: "异步任务task详情信息"
  }];
  Perms web_annotations = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "web_annotations",
    description : "项目更多信息，主要是权限相关"
  }, json_name = "web_annotations"];
}

message ListProjectQuotasRequest{
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListProjectQuotasRequest"
      description : "通过查询条件查询项目维度的资源quota列表"
    }
  };

  string quotaId = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quotaId",
    description: "配额Id"
  }];
  string quotaName = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quotaName",
    description: "配额中文名称"
  }];
  string projectID = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectID",
    description: "项目ID, 全局唯一, 长度为32位字符串, 自动生成"
  }];
  string projectCode = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode",
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过32字符"
  }];
  string businessID = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "businessID",
    description: "项目绑定的蓝鲸CMDB中业务ID信息"
  }];
  string quotaType = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quotaType",
    description: "资源类型(目前支持CA整机资源、共享集群维度资源)"
  }];
  string provider = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "provider",
    description: "云底层资源提供方"
  }];
}

message ListProjectQuotasData{
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListProjectQuotasData"
      description : "项目资源quota数据"
    }
  };

  uint32 total = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "total",
    description: "总量"
  }];
  repeated ProjectQuota results = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "results",
    description: "项目资源quota数据"
  }];
}

message ListProjectQuotasResponse{
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code",
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  ListProjectQuotasData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data",
    description: "返回项目quota信息, 包含总量及项目quota列表"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
  Perms web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "web_annotations",
    description : "项目更多信息，主要是权限相关"
  }, json_name = "web_annotations"];
}

message GetProjectQuotasUsageReq {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "GetProjectQuotasUsageReq"
      description : "查询指定项目quota使用情况"
      required : [
        "quotaId"
      ]
    }
  };

  string quotaId = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quotaId",
    description: "项目quotaId"
  }];
}

message GetProjectQuotasUsageResp {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code",
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  GetProjectQuotasUsageData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data",
    description: "返回项目quota资源使用情况"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
  Perms web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "web_annotations",
    description : "项目更多信息，主要是权限相关"
  }, json_name = "web_annotations"];
}

message ZoneResourceUsage {
  string zone = 1;
  uint32 quota = 2;
  uint32 used = 3;
}

message GetProjectQuotasUsageData {
  ProjectQuota quota = 1;
  string region = 2;
  string instanceType = 3;
  ZoneResourceUsage quotaUsage = 4;
  uint32 cpu = 5;
  uint32 mem = 6;
  uint32 gpu = 7;
}

message ScaleUpProjectQuotaRequest{
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ScaleUpProjectQuotaRequest"
      description : "根据不同的资源类型增量扩容项目维度的资源quota"
    }
  };

  string quotaId = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quotaId",
    description: "配额Id"
  }];
  QuotaResource quota = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quota",
    description: "扩容的资源容量,增量容量扩容"
  }];
  string updater = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "updater",
    description: "操作人"
  }];
}

message ScaleUpProjectQuotaResponse{
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code",
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  google.protobuf.Struct task = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "task",
    description: "异步任务task详情信息"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
  Perms web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "web_annotations",
    description : "项目更多信息，主要是权限相关"
  }, json_name = "web_annotations"];
}

message ScaleDownProjectQuotaRequest{
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ScaleDownProjectQuotaRequest"
      description : "缩容项目维度的资源quota"
    }
  };

  string quotaId = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quotaId",
    description: "配额Id"
  }];
  QuotaResource quota = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "quota",
    description: "缩容的资源容量"
  }];
  string updater = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "updater",
    description: "操作人"
  }];
}

message ScaleDownProjectQuotaResponse{
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code",
    description: "返回错误码"
  }];
  string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  google.protobuf.Struct task = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "task",
    description: "异步任务task详情信息"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
  Perms web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "web_annotations",
    description : "项目更多信息，主要是权限相关"
  }, json_name = "web_annotations"];
}
