// Tencent is pleased to support the open source community by making Blueking Container Service available.
// Copyright (C) 2022 THL A29 Limited, a Tencent company. All rights reserved.
// Licensed under the MIT License (the "License"); you may not use this file except
// in compliance with the License. You may obtain a copy of the License at
//
// http://opensource.org/licenses/MIT
//
// Unless required by applicable law or agreed to in writing, software distributed under,
// the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
// either express or implied. See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package bcsproject;

import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "validate/validate.proto";
import "google/protobuf/struct.proto";


option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info : {
    title : "BCS Project API Doc" 
    version : "0.0.1"
  };
  schemes : HTTP 
  consumes : "application/json" 
  produces : "application/json"
};

service BCSProject {
  rpc CreateProject(CreateProjectRequest) returns (ProjectResponse) {
    option (google.api.http) = {
      post : "/bcsproject/v1/projects"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "创建项目信息"
      summary : "创建项目"
    };
  }

  rpc GetProject(GetProjectRequest) returns (ProjectResponse) {
    option (google.api.http) = {
      get : "/bcsproject/v1/projects/{projectIDOrCode}"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "通过项目ID或英文缩写, 查询项目信息"
      summary : "查询项目"
    };
  }
  
  rpc UpdateProject(UpdateProjectRequest) returns (ProjectResponse) {
    option (google.api.http) = {
      put : "/bcsproject/v1/projects/{projectID}"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "更新项目信息"
      summary : "更新项目"
    };
  }

  rpc DeleteProject(DeleteProjectRequest) returns (ProjectResponse) {
    option (google.api.http) = {
      delete : "/bcsproject/v1/projects/{projectID}"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "删除项目"
    };
  }

  rpc ListProjects(ListProjectsRequest) returns (ListProjectsResponse){
    option (google.api.http) = {
      get : "/bcsproject/v1/projects"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "通过查询参数过滤项目列表, 支持分页和全量数据"
      summary : "查询项目列表"
    };
  }

  rpc ListAuthorizedProjects(ListAuthorizedProjReq) returns (ListAuthorizedProjResp){
    option (google.api.http) = {
      get : "/bcsproject/v1/authorized_projects"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "查询用户有权限的项目列表"
      summary : "查询有权限项目列表"
    };
  }
}

message Project {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "Project"
      description : "项目的基本信息"
    }
  };

  string createTime = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "createTime",
    description: "创建时间"
  }];
  string updateTime = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "updateTime",
    description: "更新时间"
  }];
  string creator = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "creator",
    description: "项目创建者"
  }];
  string updater = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "updater",
    description: "项目更新者"
  }];
  string managers = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "managers",
    description: "项目管理人员，默认为创建者+更新者"
  }];
  string projectID = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectID",
    description: "项目ID, 全局唯一, 长度为32位字符串, 自动生成"
  }];
  string name = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "name",
    description: "项目中文名称, 长度不能超过64字符"
  }];
  string projectCode = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode",
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过32字符"
  }];
  
  bool useBKRes = 9[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "useBKRes",
    description: "是否使用蓝鲸提供的资源池, 主要用于资源计费, 默认false"
  }];
  string description = 10[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "description",
    description: "项目描述, 尽量限制在100字符"
  }];
  bool isOffline = 11[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "isOffline",
    description: "项目是否已经下线, 默认false"
  }];
  string kind = 12[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "kind",
    description: "项目中集群类型, 可选k8s/mesos"
  }];
  string businessID = 13[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "businessID",
    description: "项目绑定的蓝鲸CMDB中业务ID信息"
  }];
  bool isSecret = 14[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "isSecret",
    description: "是否为保密项目, 默认为false"
  }];
  uint32 projectType = 15[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "type",
    description: "项目类型, 保留字段, 默认为0, 可选 1:手游, 2:端游, 3:页游, 4:平台产品, 5:支撑产品"
  }];
  uint32 deployType = 16[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "deployType",
    description: "业务部署类型, 保留字段, 1:物理机部署, 2:容器部署"
  }];
  string BGID = 17[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "bgID",
    description: "事业群ID, 保留字段, 默认为0"
  }];
  string BGName = 18[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "bgName",
    description: "事业群名称, 保留字段, 默认为空"
  }];
  string deptID = 19[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "deptID", 
    description: "部门ID, 保留字段, 默认为0"
  }];
  string deptName = 20[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "deptName", 
    description: "部门名称, 保留字段, 默认为空"
  }];
  string centerID = 21[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "centerID", 
    description: "中心ID, 保留字段, 默认为0"
  }];
  string centerName = 22[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "centerName", 
    description: "中心名称, 保留字段, 默认为空"
  }];
}

message CreateProjectRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "CreateProjectRequest"
      description : "创建项目"
      required : [
        "name",
        "projectCode"
      ]
    }
  };

  string createTime = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "createTime", 
    description: "创建时间"
  }];
  string creator = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "creator", 
    description: "项目创建者"
  }];
  string projectID = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectID", 
    description: "项目ID, 全局唯一, 长度为32位字符串, 自动生成"
  }];
  string name = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title: "name", 
      description: "项目中文名称, 长度不能超过64字符"
  }, (validate.rules).string = {min_len: 2, max_len: 64}];
  string projectCode = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }, (validate.rules).string = {min_len: 2, max_len: 64}];

  bool useBKRes = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "useBKRes", 
    description: "是否使用蓝鲸提供的资源池, 主要用于资源计费, 默认false"
  }];
  string description = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "description", 
    description: "项目描述, 尽量限制在100字符"
  }];
  bool isOffline = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "isOffline", 
    description: "项目是否已经下线, 默认false"
  }];
  string kind = 9[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "kind", 
    description: "项目中集群类型, 可选k8s/mesos"
  }, (validate.rules).string = {in: ["", "k8s", "mesos"]}];
  string businessID = 10[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "businessID", 
    description: "项目绑定的蓝鲸CMDB中业务ID信息"
  }];
  bool isSecret = 11[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "isSecret", 
    description: "是否为保密项目, 默认为false"
  }];
  uint32 projectType = 12[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "type", 
    description: "项目类型, 保留字段, 默认为0, 可选 1:手游, 2:端游, 3:页游, 4:平台产品, 5:支撑产品"
  }];
  uint32 deployType = 13[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "deployType", 
    description: "业务部署类型, 保留字段, 1:物理机部署, 2:容器部署"
  }, (validate.rules).uint32 = {in: [0, 1, 2]}];
  string BGID = 14[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "bgID",
    description: "事业群ID, 保留字段, 默认为0"
  }];
  string BGName = 15[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "bgName", 
    description: "事业群名称, 保留字段, 默认为空"
  }];
  string deptID = 16[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "deptID", 
    description: "部门ID, 保留字段, 默认为0"
  }];
  string deptName = 17[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "deptName", 
    description: "部门名称, 保留字段, 默认为空"
  }];
  string centerID = 18[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "centerID", 
    description: "中心ID, 保留字段, 默认为0"
  }];
  string centerName = 19[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "centerName", 
    description: "中心名称, 保留字段, 默认为空"
  }];
}

message GetProjectRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "GetProjectRequest"
      description : "查询指定项目信息"
      required : [
        "projectIDOrCode"
      ]
    }
  };

  string projectIDOrCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectIDOrCode", 
    description: "项目ID或英文缩写"
  }];
}

message UpdateProjectRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "UpdateProjectRequest"
      description : "更新项目请求"
    }
  };

  string projectID = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectID", 
    description: "项目ID"
  }, (validate.rules).string = {len: 32, pattern: "^[0-9a-zA-Z-]+$"}];
  string name = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "name", 
    description: "项目中文名称, 长度不能超过64字符"
  }, (validate.rules).string = {max_len: 64}];
  string updater = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "updater", 
    description: "更新者"
  }];
  google.protobuf.BoolValue useBKRes = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "useBKRes", 
    description: "是否使用蓝鲸提供的资源池, 主要用于资源计费, 默认false"
  }];
  string description = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "description", 
    description: "项目简要描述"
  }];
  google.protobuf.BoolValue isOffline = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "isOffline", 
    description: "项目是否已经下线, 默认false"
  }];
  string kind = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "kind", 
    description: "项目中集群类型, 可选k8s/mesos, 未来该字段可能废弃"
  }];
  string businessID = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "businessID", 
    description: "项目绑定的蓝鲸CMDB中业务ID信息"
  }];
  google.protobuf.BoolValue isSecret = 9[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "isSecret", 
    description: "是否为保密项目, 默认为false"
  }];
  uint32 deployType = 10[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "deployType", 
    description: "业务部署类型, 保留字段, 1:物理机部署, 2:容器部署"
  }];
  uint32 projectType = 11[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "type", 
    description: "项目类型, 保留字段, 默认为0, 可选 1:手游, 2:端游, 3:页游, 4:平台产品, 5:支撑产品"
  }];
  string BGID = 12[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "bgID",
    description: "事业群ID, 保留字段, 默认为0"
  }];
  string BGName = 13[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "bgName", 
    description: "事业群名称, 保留字段, 默认为空"
  }];
  string deptID = 14[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "deptID", 
    description: "部门ID, 保留字段, 默认为0"
  }];
  string deptName = 15[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "deptName", 
    description: "部门名称, 保留字段, 默认为空"
  }];
  string centerID = 16[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "centerID", 
    description: "中心ID, 保留字段, 默认为0"
  }];
  string centerName = 17[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "centerName", 
    description: "中心名称, 保留字段, 默认为空"
  }];
}

message DeleteProjectRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "DeleteProjectRequest"
      description : "删除项目"
      required : [
        "projectID"
      ]
    }
  };

  string projectID = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectID", 
    description: "项目ID"
  }, (validate.rules).string = {len: 32, pattern: "^[0-9a-zA-Z-]+$"}];
}

message ProjectResponse{
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  Project data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回详细信息, 可以为空"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
  Perms webAnnotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "webAnnotations",
    description : "项目更多信息，主要是权限相关"
  }];
}

message ListProjectsRequest{
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListProjectsRequest"
      description : "通过查询条件查询项目列表, 支持分页数据或者全量数据"
    }
  };

  string projectIDs = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectIDs", 
    description: "项目ID, 多个以半角逗号分隔"
  }];
  string names = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "names", 
    description: "项目中文名称, 长度不能超过64字符, 多个以半角逗号分隔"
  }];
  string projectCode = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string searchName = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "searchName", 
    description: "项目中文名称, 通过此字段模糊查询项目信息"
  }];
  string kind = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "kind", 
    description: "项目中集群类型, 允许k8s/mesos"
  }];
  int64 offset = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "offset", 
    description: "分页数据, 表示第几页"
  }];
  int64 limit = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "limit", 
    description: "分页数据, 每页数量"
  }];
  bool all = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "all", 
    description: "表示查询全量数据"
  }];
}

message ListProjectData{
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListProjectData"
      description : "项目列表数据"
    }
  };

  uint32 total = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "total", 
    description: "总量"
  }];
  repeated Project results = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "results", 
    description: "项目数据"
  }];
}

message ListProjectsResponse{
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  ListProjectData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回项目信息, 包含总量及项目列表"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
  Perms webAnnotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "webAnnotations",
    description : "项目更多信息，主要是权限相关"
  }];
}

message Perms {
  google.protobuf.Struct perms = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "perms",
    description : "用户针对项目的权限"
  }];
}

message ListAuthorizedProjReq{
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListAuthorizedProjReq"
      description : "查询用户有权限的项目"
    }
  };
}

message ListAuthorizedProjResp{
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  ListProjectData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回项目信息, 包含总量及项目列表"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
}

service Variable {
  rpc CreateVariable(CreateVariableRequest) returns (CreateVariableResponse) {
    option (google.api.http) = {
      post : "/bcsproject/v1/project/{projectCode}/variable"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "创建变量"
      summary : "创建变量"
    };
  }
  rpc UpdateVariable(UpdateVariableRequest) returns (UpdateVariableResponse) {
    option (google.api.http) = {
      put : "/bcsproject/v1/project/{projectCode}/variable/{variableID}"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "更新变量"
      summary : "更新变量"
    };
  }
  rpc ListVariableDefinitions(ListVariableDefinitionsRequest) returns (ListVariableDefinitionsResponse) {
    option (google.api.http) = {
      get : "/bcsproject/v1/project/{projectCode}/variable/definitions"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "获取项目下所有变量定义"
      summary : "获取项目下所有变量定义"
    };
  }
  rpc ListClusterVariables(ListClusterVariablesRequest) returns (ListClusterVariablesResponse) {
    option (google.api.http) = {
      get : "/bcsproject/v1/project/{projectCode}/variables/{variableID}/cluster"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "获取所有集群的变量值"
      summary : "获取所有集群的变量值"
    };
  }
  rpc ListNamespaceVariables(ListNamespaceVariablesRequest) returns (ListNamespaceVariablesResponse) {
    option (google.api.http) = {
      get : "/bcsproject/v1/project/{projectCode}/variables/{variableID}/namespace"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "获取项目所有命名空间的变量值"
      summary : "获取项目所有命名空间的变量值"
    };
  }
}


message CreateVariableRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "CreateVariableRequest"
      description : "创建变量请求"
      required : [
        "projectCode",
        "name",
        "key"
      ]
    }
  };

  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string name = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "name", 
    description: "变量名称, 长度不能超过32字符"
  }, (validate.rules).string = {max_len: 32}];
  string key = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "key", 
    description: "变量 key，项目内唯一，长度不能超过64字符"
  }, (validate.rules).string = {max_len: 64, pattern: "^[a-zA-Z][a-zA-Z0-9_]*$"}];
  string scope = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title: "name", 
      description: "变量作用域，取值范围：global, cluster, namespace"
  }, (validate.rules).string = {in: ["global", "cluster", "namespace"]}];
  string default = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "default", 
    description: "变量默认值"
  }];
  string desc = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "desc", 
    description: "变量说明与描述, 限制在100字符以内"
  }];
}

message CreateVariableResponse {
  string id = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "id", 
    description: "变量 id"
  }];
  string projectCode = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string name = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "name", 
    description: "变量名称, 长度不能超过32字符"
  }];
  string key = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "key", 
    description: "变量 key, 项目内唯一, 长度不能超过64字符"
  }];
  string scope = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title: "name", 
      description: "变量作用域, 取值范围: global, cluster, namespace"
  }];
  string default = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "default", 
    description: "变量默认值"
  }];
  string desc = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "desc", 
    description: "变量说明与描述, 限制在100字符以内"
  }];
  string category = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "category", 
    description: "变量类型, 取值范围: sys, custom"
  }];
}

message UpdateVariableRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "UpdateVariableRequest"
      description : "更新变量请求"
      required : [
        "projectCode",
        "variableID"
      ]
    }
  };

  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string variableID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string name = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "name", 
    description: "变量名称, 长度不能超过32字符"
  }, (validate.rules).string = {max_len: 32}];
  string key = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "key", 
    description: "变量 key, 项目内唯一, 长度不能超过64字符"
  }, (validate.rules).string = {max_len: 64, pattern: "^[a-zA-Z][a-zA-Z0-9_]*$"}];
  string scope = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title: "name", 
      description: "变量作用域, 取值范围: global, cluster, namespace"
  }, (validate.rules).string = {in: ["global", "cluster", "namespace"]}];
  string default = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "default", 
    description: "变量默认值"
  }];
  string desc = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "desc", 
    description: "变量说明与描述, 限制在100字符以内"
  }];
}

message UpdateVariableResponse {
  string id = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "id",
    description: "变量 id"
  }];
  string projectCode = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string name = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "name", 
    description: "变量名称, 长度不能超过32字符"
  }];
  string key = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "key", 
    description: "变量 key, 项目内唯一, 长度不能超过64字符"
  }];
  string scope = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title: "name", 
      description: "变量作用域, 取值范围: global, cluster, namespace"
  }];
  string default = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "default", 
    description: "变量默认值"
  }];
  string desc = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "desc", 
    description: "变量说明与描述, 限制在100字符以内"
  }];
  string category = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "category", 
    description: "变量类型, 取值范围: sys, custom"
  }];
}

message ListVariableDefinitionsRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListVariableDefinitionRequest"
      description : "获取项目下所有变量定义请求"
      required : [
        "projectCode"
      ]
    }
  };

  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string scope = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      title: "scope", 
      description: "变量作用域, 取值范围: global, cluster, namespace"
  }];
  string searchKey = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "searchKey", 
    description: "变量key, 通过此字段模糊查询项目变量"
  }];
  int64 offset = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "offset", 
    description: "分页数据, 表示第几页"
  }];
  int64 limit = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "limit", 
    description: "分页数据, 每页数量"
  }];
  bool all = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "all", 
    description: "是否查询全量数据"
  }];
}

message ListVariableDefinitionsResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  ListVariableDefinitionData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回变量定义列表信息, 包含总量及变量定义列表"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
}

message ListClusterVariablesRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListClusterVariablesRequest"
      description : "获取项目下集群变量值请求"
      required : [
        "projectCode",
        "variableID"
      ]
    }
  };
  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }, (validate.rules).string = {min_len: 2, max_len: 64}];
  string variableID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "variableID", 
    description: "变量 id"
  }, (validate.rules).string = {max_len: 32, pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"}];
}

message ListClusterVariablesResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  ListClusterVariablesData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回集群列表信息"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
}

message ListNamespaceVariablesRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListNamespaceVariablesRequest"
      description : "获取项目下命名空间变量值请求"
      required : [
        "projectCode",
        "variableID"
      ]
    }
  };
  string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "projectCode", 
    description: "项目编码(英文缩写), 全局唯一, 长度不能超过64字符"
  }];
  string variableID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "variableID", 
    description: "变量 id"
  }, (validate.rules).string = {max_len: 32, pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"}];
}

message ListNamespaceVariablesResponse {
  uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "code", 
    description: "返回错误码"
  }];
  string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title : "message",
    description: "返回错误信息"
  }];
  ListNamespaceVariablesData data = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "data", 
    description: "返回命名空间列表信息"
  }];
  string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "request id",
    description: "请求 ID"
  }];
}

message VariableDefinition {
  string id = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "id", 
    description: "变量定义ID"
  }];
  string key = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "key", 
    description: "变量 key"
  }];
  string name = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "name", 
    description: "变量名称"
  }];
  string default = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "default", 
    description: "变量默认键值对"
  }];
  string defaultValue = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "default", 
    description: "变量默认值"
  }];
  string scope = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "scope", 
    description: "变量作用域, 取值范围: global, cluster, namespace"
  }];
  string scopeName = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "scopeName", 
    description: "变量作用域名称, 取值范围: 全局变量, 集群变量, 明明空间变量"
  }];
  string category = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "category", 
    description: "类型, 取值范围: sys/custom"
  }];
  string categoryName = 9[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "categoryName", 
    description: "类型名称, 取值范围: 系统内置/自定义"
  }];
  string desc = 10[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "desc", 
    description: "变量说明与描述, 限制在100字符以内"
  }];
  string created = 11[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "created", 
    description: "创建时间, 格式: yyyy-MM-dd hh:mm:ss"
  }];
  string updated = 12[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "updated", 
    description: "修改时间, 格式: yyyy-MM-dd hh:mm:ss"
  }];
  string creator = 13[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "creator", 
    description: "创建人"
  }];
  string updater = 14[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "updater", 
    description: "修改人"
  }];
}

message ClusterVariable {
  string clusterID = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "clusterID", 
    description: "集群ID"
  }];
  string clusterName = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "clusterName", 
    description: "集群名称"
  }];
  string value = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "value", 
    description: "变量在该集群的值"
  }];
}

message NamespaceVariable {
  string clusterID = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "clusterID", 
    description: "集群ID"
  }];
  string clusterName = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "clusterName", 
    description: "集群名称"
  }];
  string namespace = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "namespace", 
    description: "命名空间"
  }];
  string value = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "value", 
    description: "变量在该命名空间的值"
  }];
}

message ListVariableDefinitionData {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListVariableDefinitionData"
      description : "项目列表数据"
    }
  };

  uint32 total = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "total", 
    description: "总量"
  }];
  repeated VariableDefinition results = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "results", 
    description: "变量定义数据"
  }];
}

message ListClusterVariablesData {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListClusterVariablesData"
      description : "集群变量列表数据"
    }
  };

  uint32 total = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "total", 
    description: "总量"
  }];
  repeated ClusterVariable results = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "results", 
    description: "集群变量数据"
  }];
}

message ListNamespaceVariablesData {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "ListNamespaceVariablesData"
      description : "集群变量列表数据"
    }
  };

  uint32 total = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "total", 
    description: "总量"
  }];
  repeated NamespaceVariable results = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "results", 
    description: "集群变量数据"
  }];
}

service Healthz {
  rpc Healthz(HealthzRequest) returns (HealthzResponse) {
    option (google.api.http) = {
      get: "/bcsproject/v1/healthz"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description: "探针API, 用于readiness探测"
    };
	}
  rpc Ping(PingRequest) returns (PingResponse) {
    option (google.api.http) = {
      get: "/bcsproject/v1/ping"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description: "探针API, 用于liveness探测"
    };
  }
}

message HealthzRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: {
      title: "HealthzRequest",
      description: "Healthz API"
    }
  };
}

message HealthzResponse {
  string status = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "status",
    description: "服务整体状态"
  }];
  string mongoStatus = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "mongo status",
    description: "服务依赖的 mongo 状态"
  }];
}

message PingRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: {
      title: "PingRequest",
      description: "Ping API request"
    }
  };
}

message PingResponse {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
      title: "PingResp",
      description: "Ping API 响应"
    }
  };

  string ret = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title: "Ret",
    description: "成功返回 Pong"
  }];
}
