// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bcsproject.proto

package bcsproject

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Project struct {
	CreateTime           string   `protobuf:"bytes,1,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string   `protobuf:"bytes,2,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	Creator              string   `protobuf:"bytes,3,opt,name=creator,proto3" json:"creator,omitempty"`
	Updater              string   `protobuf:"bytes,4,opt,name=updater,proto3" json:"updater,omitempty"`
	Managers             string   `protobuf:"bytes,5,opt,name=managers,proto3" json:"managers,omitempty"`
	ProjectID            string   `protobuf:"bytes,6,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Name                 string   `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	ProjectCode          string   `protobuf:"bytes,8,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	UseBKRes             bool     `protobuf:"varint,9,opt,name=useBKRes,proto3" json:"useBKRes,omitempty"`
	Description          string   `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	IsOffline            bool     `protobuf:"varint,11,opt,name=isOffline,proto3" json:"isOffline,omitempty"`
	Kind                 string   `protobuf:"bytes,12,opt,name=kind,proto3" json:"kind,omitempty"`
	BusinessID           string   `protobuf:"bytes,13,opt,name=businessID,proto3" json:"businessID,omitempty"`
	IsSecret             bool     `protobuf:"varint,14,opt,name=isSecret,proto3" json:"isSecret,omitempty"`
	ProjectType          uint32   `protobuf:"varint,15,opt,name=projectType,proto3" json:"projectType,omitempty"`
	DeployType           uint32   `protobuf:"varint,16,opt,name=deployType,proto3" json:"deployType,omitempty"`
	BGID                 string   `protobuf:"bytes,17,opt,name=BGID,proto3" json:"BGID,omitempty"`
	BGName               string   `protobuf:"bytes,18,opt,name=BGName,proto3" json:"BGName,omitempty"`
	DeptID               string   `protobuf:"bytes,19,opt,name=deptID,proto3" json:"deptID,omitempty"`
	DeptName             string   `protobuf:"bytes,20,opt,name=deptName,proto3" json:"deptName,omitempty"`
	CenterID             string   `protobuf:"bytes,21,opt,name=centerID,proto3" json:"centerID,omitempty"`
	CenterName           string   `protobuf:"bytes,22,opt,name=centerName,proto3" json:"centerName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()    {}
func (*Project) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{0}
}

func (m *Project) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Project.Unmarshal(m, b)
}
func (m *Project) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Project.Marshal(b, m, deterministic)
}
func (m *Project) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Project.Merge(m, src)
}
func (m *Project) XXX_Size() int {
	return xxx_messageInfo_Project.Size(m)
}
func (m *Project) XXX_DiscardUnknown() {
	xxx_messageInfo_Project.DiscardUnknown(m)
}

var xxx_messageInfo_Project proto.InternalMessageInfo

func (m *Project) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *Project) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *Project) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Project) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *Project) GetManagers() string {
	if m != nil {
		return m.Managers
	}
	return ""
}

func (m *Project) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *Project) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Project) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *Project) GetUseBKRes() bool {
	if m != nil {
		return m.UseBKRes
	}
	return false
}

func (m *Project) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Project) GetIsOffline() bool {
	if m != nil {
		return m.IsOffline
	}
	return false
}

func (m *Project) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Project) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *Project) GetIsSecret() bool {
	if m != nil {
		return m.IsSecret
	}
	return false
}

func (m *Project) GetProjectType() uint32 {
	if m != nil {
		return m.ProjectType
	}
	return 0
}

func (m *Project) GetDeployType() uint32 {
	if m != nil {
		return m.DeployType
	}
	return 0
}

func (m *Project) GetBGID() string {
	if m != nil {
		return m.BGID
	}
	return ""
}

func (m *Project) GetBGName() string {
	if m != nil {
		return m.BGName
	}
	return ""
}

func (m *Project) GetDeptID() string {
	if m != nil {
		return m.DeptID
	}
	return ""
}

func (m *Project) GetDeptName() string {
	if m != nil {
		return m.DeptName
	}
	return ""
}

func (m *Project) GetCenterID() string {
	if m != nil {
		return m.CenterID
	}
	return ""
}

func (m *Project) GetCenterName() string {
	if m != nil {
		return m.CenterName
	}
	return ""
}

type CreateProjectRequest struct {
	CreateTime           string   `protobuf:"bytes,1,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Creator              string   `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	ProjectID            string   `protobuf:"bytes,3,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	ProjectCode          string   `protobuf:"bytes,5,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	UseBKRes             bool     `protobuf:"varint,6,opt,name=useBKRes,proto3" json:"useBKRes,omitempty"`
	Description          string   `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	IsOffline            bool     `protobuf:"varint,8,opt,name=isOffline,proto3" json:"isOffline,omitempty"`
	Kind                 string   `protobuf:"bytes,9,opt,name=kind,proto3" json:"kind,omitempty"`
	BusinessID           string   `protobuf:"bytes,10,opt,name=businessID,proto3" json:"businessID,omitempty"`
	IsSecret             bool     `protobuf:"varint,11,opt,name=isSecret,proto3" json:"isSecret,omitempty"`
	ProjectType          uint32   `protobuf:"varint,12,opt,name=projectType,proto3" json:"projectType,omitempty"`
	DeployType           uint32   `protobuf:"varint,13,opt,name=deployType,proto3" json:"deployType,omitempty"`
	BGID                 string   `protobuf:"bytes,14,opt,name=BGID,proto3" json:"BGID,omitempty"`
	BGName               string   `protobuf:"bytes,15,opt,name=BGName,proto3" json:"BGName,omitempty"`
	DeptID               string   `protobuf:"bytes,16,opt,name=deptID,proto3" json:"deptID,omitempty"`
	DeptName             string   `protobuf:"bytes,17,opt,name=deptName,proto3" json:"deptName,omitempty"`
	CenterID             string   `protobuf:"bytes,18,opt,name=centerID,proto3" json:"centerID,omitempty"`
	CenterName           string   `protobuf:"bytes,19,opt,name=centerName,proto3" json:"centerName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateProjectRequest) Reset()         { *m = CreateProjectRequest{} }
func (m *CreateProjectRequest) String() string { return proto.CompactTextString(m) }
func (*CreateProjectRequest) ProtoMessage()    {}
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{1}
}

func (m *CreateProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProjectRequest.Unmarshal(m, b)
}
func (m *CreateProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProjectRequest.Marshal(b, m, deterministic)
}
func (m *CreateProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProjectRequest.Merge(m, src)
}
func (m *CreateProjectRequest) XXX_Size() int {
	return xxx_messageInfo_CreateProjectRequest.Size(m)
}
func (m *CreateProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProjectRequest proto.InternalMessageInfo

func (m *CreateProjectRequest) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *CreateProjectRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CreateProjectRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *CreateProjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateProjectRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *CreateProjectRequest) GetUseBKRes() bool {
	if m != nil {
		return m.UseBKRes
	}
	return false
}

func (m *CreateProjectRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateProjectRequest) GetIsOffline() bool {
	if m != nil {
		return m.IsOffline
	}
	return false
}

func (m *CreateProjectRequest) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *CreateProjectRequest) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *CreateProjectRequest) GetIsSecret() bool {
	if m != nil {
		return m.IsSecret
	}
	return false
}

func (m *CreateProjectRequest) GetProjectType() uint32 {
	if m != nil {
		return m.ProjectType
	}
	return 0
}

func (m *CreateProjectRequest) GetDeployType() uint32 {
	if m != nil {
		return m.DeployType
	}
	return 0
}

func (m *CreateProjectRequest) GetBGID() string {
	if m != nil {
		return m.BGID
	}
	return ""
}

func (m *CreateProjectRequest) GetBGName() string {
	if m != nil {
		return m.BGName
	}
	return ""
}

func (m *CreateProjectRequest) GetDeptID() string {
	if m != nil {
		return m.DeptID
	}
	return ""
}

func (m *CreateProjectRequest) GetDeptName() string {
	if m != nil {
		return m.DeptName
	}
	return ""
}

func (m *CreateProjectRequest) GetCenterID() string {
	if m != nil {
		return m.CenterID
	}
	return ""
}

func (m *CreateProjectRequest) GetCenterName() string {
	if m != nil {
		return m.CenterName
	}
	return ""
}

type GetProjectRequest struct {
	ProjectIDOrCode      string   `protobuf:"bytes,1,opt,name=projectIDOrCode,proto3" json:"projectIDOrCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProjectRequest) Reset()         { *m = GetProjectRequest{} }
func (m *GetProjectRequest) String() string { return proto.CompactTextString(m) }
func (*GetProjectRequest) ProtoMessage()    {}
func (*GetProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{2}
}

func (m *GetProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectRequest.Unmarshal(m, b)
}
func (m *GetProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectRequest.Marshal(b, m, deterministic)
}
func (m *GetProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectRequest.Merge(m, src)
}
func (m *GetProjectRequest) XXX_Size() int {
	return xxx_messageInfo_GetProjectRequest.Size(m)
}
func (m *GetProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectRequest proto.InternalMessageInfo

func (m *GetProjectRequest) GetProjectIDOrCode() string {
	if m != nil {
		return m.ProjectIDOrCode
	}
	return ""
}

type UpdateProjectRequest struct {
	ProjectID            string              `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Name                 string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Updater              string              `protobuf:"bytes,3,opt,name=updater,proto3" json:"updater,omitempty"`
	UseBKRes             *wrappers.BoolValue `protobuf:"bytes,4,opt,name=useBKRes,proto3" json:"useBKRes,omitempty"`
	Description          string              `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	IsOffline            *wrappers.BoolValue `protobuf:"bytes,6,opt,name=isOffline,proto3" json:"isOffline,omitempty"`
	Kind                 string              `protobuf:"bytes,7,opt,name=kind,proto3" json:"kind,omitempty"`
	BusinessID           string              `protobuf:"bytes,8,opt,name=businessID,proto3" json:"businessID,omitempty"`
	IsSecret             *wrappers.BoolValue `protobuf:"bytes,9,opt,name=isSecret,proto3" json:"isSecret,omitempty"`
	DeployType           uint32              `protobuf:"varint,10,opt,name=deployType,proto3" json:"deployType,omitempty"`
	ProjectType          uint32              `protobuf:"varint,11,opt,name=projectType,proto3" json:"projectType,omitempty"`
	BGID                 string              `protobuf:"bytes,12,opt,name=BGID,proto3" json:"BGID,omitempty"`
	BGName               string              `protobuf:"bytes,13,opt,name=BGName,proto3" json:"BGName,omitempty"`
	DeptID               string              `protobuf:"bytes,14,opt,name=deptID,proto3" json:"deptID,omitempty"`
	DeptName             string              `protobuf:"bytes,15,opt,name=deptName,proto3" json:"deptName,omitempty"`
	CenterID             string              `protobuf:"bytes,16,opt,name=centerID,proto3" json:"centerID,omitempty"`
	CenterName           string              `protobuf:"bytes,17,opt,name=centerName,proto3" json:"centerName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *UpdateProjectRequest) Reset()         { *m = UpdateProjectRequest{} }
func (m *UpdateProjectRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateProjectRequest) ProtoMessage()    {}
func (*UpdateProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{3}
}

func (m *UpdateProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProjectRequest.Unmarshal(m, b)
}
func (m *UpdateProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProjectRequest.Marshal(b, m, deterministic)
}
func (m *UpdateProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProjectRequest.Merge(m, src)
}
func (m *UpdateProjectRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateProjectRequest.Size(m)
}
func (m *UpdateProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProjectRequest proto.InternalMessageInfo

func (m *UpdateProjectRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *UpdateProjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateProjectRequest) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *UpdateProjectRequest) GetUseBKRes() *wrappers.BoolValue {
	if m != nil {
		return m.UseBKRes
	}
	return nil
}

func (m *UpdateProjectRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdateProjectRequest) GetIsOffline() *wrappers.BoolValue {
	if m != nil {
		return m.IsOffline
	}
	return nil
}

func (m *UpdateProjectRequest) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *UpdateProjectRequest) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *UpdateProjectRequest) GetIsSecret() *wrappers.BoolValue {
	if m != nil {
		return m.IsSecret
	}
	return nil
}

func (m *UpdateProjectRequest) GetDeployType() uint32 {
	if m != nil {
		return m.DeployType
	}
	return 0
}

func (m *UpdateProjectRequest) GetProjectType() uint32 {
	if m != nil {
		return m.ProjectType
	}
	return 0
}

func (m *UpdateProjectRequest) GetBGID() string {
	if m != nil {
		return m.BGID
	}
	return ""
}

func (m *UpdateProjectRequest) GetBGName() string {
	if m != nil {
		return m.BGName
	}
	return ""
}

func (m *UpdateProjectRequest) GetDeptID() string {
	if m != nil {
		return m.DeptID
	}
	return ""
}

func (m *UpdateProjectRequest) GetDeptName() string {
	if m != nil {
		return m.DeptName
	}
	return ""
}

func (m *UpdateProjectRequest) GetCenterID() string {
	if m != nil {
		return m.CenterID
	}
	return ""
}

func (m *UpdateProjectRequest) GetCenterName() string {
	if m != nil {
		return m.CenterName
	}
	return ""
}

type DeleteProjectRequest struct {
	ProjectID            string   `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteProjectRequest) Reset()         { *m = DeleteProjectRequest{} }
func (m *DeleteProjectRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteProjectRequest) ProtoMessage()    {}
func (*DeleteProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{4}
}

func (m *DeleteProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteProjectRequest.Unmarshal(m, b)
}
func (m *DeleteProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteProjectRequest.Marshal(b, m, deterministic)
}
func (m *DeleteProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteProjectRequest.Merge(m, src)
}
func (m *DeleteProjectRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteProjectRequest.Size(m)
}
func (m *DeleteProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteProjectRequest proto.InternalMessageInfo

func (m *DeleteProjectRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

type ProjectResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *Project `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestID            string   `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	WebAnnotations       *Perms   `protobuf:"bytes,5,opt,name=webAnnotations,proto3" json:"webAnnotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProjectResponse) Reset()         { *m = ProjectResponse{} }
func (m *ProjectResponse) String() string { return proto.CompactTextString(m) }
func (*ProjectResponse) ProtoMessage()    {}
func (*ProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{5}
}

func (m *ProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectResponse.Unmarshal(m, b)
}
func (m *ProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectResponse.Marshal(b, m, deterministic)
}
func (m *ProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectResponse.Merge(m, src)
}
func (m *ProjectResponse) XXX_Size() int {
	return xxx_messageInfo_ProjectResponse.Size(m)
}
func (m *ProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectResponse proto.InternalMessageInfo

func (m *ProjectResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ProjectResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ProjectResponse) GetData() *Project {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ProjectResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

func (m *ProjectResponse) GetWebAnnotations() *Perms {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type ListProjectsRequest struct {
	ProjectIDs           string   `protobuf:"bytes,1,opt,name=projectIDs,proto3" json:"projectIDs,omitempty"`
	Names                string   `protobuf:"bytes,2,opt,name=names,proto3" json:"names,omitempty"`
	ProjectCode          string   `protobuf:"bytes,3,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	SearchName           string   `protobuf:"bytes,4,opt,name=searchName,proto3" json:"searchName,omitempty"`
	Kind                 string   `protobuf:"bytes,5,opt,name=kind,proto3" json:"kind,omitempty"`
	Offset               int64    `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int64    `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	All                  bool     `protobuf:"varint,8,opt,name=all,proto3" json:"all,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListProjectsRequest) Reset()         { *m = ListProjectsRequest{} }
func (m *ListProjectsRequest) String() string { return proto.CompactTextString(m) }
func (*ListProjectsRequest) ProtoMessage()    {}
func (*ListProjectsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{6}
}

func (m *ListProjectsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectsRequest.Unmarshal(m, b)
}
func (m *ListProjectsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectsRequest.Marshal(b, m, deterministic)
}
func (m *ListProjectsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectsRequest.Merge(m, src)
}
func (m *ListProjectsRequest) XXX_Size() int {
	return xxx_messageInfo_ListProjectsRequest.Size(m)
}
func (m *ListProjectsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectsRequest proto.InternalMessageInfo

func (m *ListProjectsRequest) GetProjectIDs() string {
	if m != nil {
		return m.ProjectIDs
	}
	return ""
}

func (m *ListProjectsRequest) GetNames() string {
	if m != nil {
		return m.Names
	}
	return ""
}

func (m *ListProjectsRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *ListProjectsRequest) GetSearchName() string {
	if m != nil {
		return m.SearchName
	}
	return ""
}

func (m *ListProjectsRequest) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *ListProjectsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListProjectsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListProjectsRequest) GetAll() bool {
	if m != nil {
		return m.All
	}
	return false
}

type ListProjectData struct {
	Total                uint32     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Results              []*Project `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListProjectData) Reset()         { *m = ListProjectData{} }
func (m *ListProjectData) String() string { return proto.CompactTextString(m) }
func (*ListProjectData) ProtoMessage()    {}
func (*ListProjectData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{7}
}

func (m *ListProjectData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectData.Unmarshal(m, b)
}
func (m *ListProjectData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectData.Marshal(b, m, deterministic)
}
func (m *ListProjectData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectData.Merge(m, src)
}
func (m *ListProjectData) XXX_Size() int {
	return xxx_messageInfo_ListProjectData.Size(m)
}
func (m *ListProjectData) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectData.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectData proto.InternalMessageInfo

func (m *ListProjectData) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListProjectData) GetResults() []*Project {
	if m != nil {
		return m.Results
	}
	return nil
}

type ListProjectsResponse struct {
	Code                 uint32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *ListProjectData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestID            string           `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	WebAnnotations       *Perms           `protobuf:"bytes,5,opt,name=webAnnotations,proto3" json:"webAnnotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListProjectsResponse) Reset()         { *m = ListProjectsResponse{} }
func (m *ListProjectsResponse) String() string { return proto.CompactTextString(m) }
func (*ListProjectsResponse) ProtoMessage()    {}
func (*ListProjectsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{8}
}

func (m *ListProjectsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectsResponse.Unmarshal(m, b)
}
func (m *ListProjectsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectsResponse.Marshal(b, m, deterministic)
}
func (m *ListProjectsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectsResponse.Merge(m, src)
}
func (m *ListProjectsResponse) XXX_Size() int {
	return xxx_messageInfo_ListProjectsResponse.Size(m)
}
func (m *ListProjectsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectsResponse proto.InternalMessageInfo

func (m *ListProjectsResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListProjectsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListProjectsResponse) GetData() *ListProjectData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListProjectsResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

func (m *ListProjectsResponse) GetWebAnnotations() *Perms {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type Perms struct {
	Perms                *_struct.Struct `protobuf:"bytes,1,opt,name=perms,proto3" json:"perms,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Perms) Reset()         { *m = Perms{} }
func (m *Perms) String() string { return proto.CompactTextString(m) }
func (*Perms) ProtoMessage()    {}
func (*Perms) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{9}
}

func (m *Perms) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Perms.Unmarshal(m, b)
}
func (m *Perms) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Perms.Marshal(b, m, deterministic)
}
func (m *Perms) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Perms.Merge(m, src)
}
func (m *Perms) XXX_Size() int {
	return xxx_messageInfo_Perms.Size(m)
}
func (m *Perms) XXX_DiscardUnknown() {
	xxx_messageInfo_Perms.DiscardUnknown(m)
}

var xxx_messageInfo_Perms proto.InternalMessageInfo

func (m *Perms) GetPerms() *_struct.Struct {
	if m != nil {
		return m.Perms
	}
	return nil
}

type ListAuthorizedProjReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAuthorizedProjReq) Reset()         { *m = ListAuthorizedProjReq{} }
func (m *ListAuthorizedProjReq) String() string { return proto.CompactTextString(m) }
func (*ListAuthorizedProjReq) ProtoMessage()    {}
func (*ListAuthorizedProjReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{10}
}

func (m *ListAuthorizedProjReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAuthorizedProjReq.Unmarshal(m, b)
}
func (m *ListAuthorizedProjReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAuthorizedProjReq.Marshal(b, m, deterministic)
}
func (m *ListAuthorizedProjReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAuthorizedProjReq.Merge(m, src)
}
func (m *ListAuthorizedProjReq) XXX_Size() int {
	return xxx_messageInfo_ListAuthorizedProjReq.Size(m)
}
func (m *ListAuthorizedProjReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAuthorizedProjReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListAuthorizedProjReq proto.InternalMessageInfo

type ListAuthorizedProjResp struct {
	Code                 uint32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *ListProjectData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestID            string           `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListAuthorizedProjResp) Reset()         { *m = ListAuthorizedProjResp{} }
func (m *ListAuthorizedProjResp) String() string { return proto.CompactTextString(m) }
func (*ListAuthorizedProjResp) ProtoMessage()    {}
func (*ListAuthorizedProjResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{11}
}

func (m *ListAuthorizedProjResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAuthorizedProjResp.Unmarshal(m, b)
}
func (m *ListAuthorizedProjResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAuthorizedProjResp.Marshal(b, m, deterministic)
}
func (m *ListAuthorizedProjResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAuthorizedProjResp.Merge(m, src)
}
func (m *ListAuthorizedProjResp) XXX_Size() int {
	return xxx_messageInfo_ListAuthorizedProjResp.Size(m)
}
func (m *ListAuthorizedProjResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAuthorizedProjResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListAuthorizedProjResp proto.InternalMessageInfo

func (m *ListAuthorizedProjResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListAuthorizedProjResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListAuthorizedProjResp) GetData() *ListProjectData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListAuthorizedProjResp) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type CreateVariableRequest struct {
	ProjectCode          string   `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Key                  string   `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Scope                string   `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	Default              string   `protobuf:"bytes,5,opt,name=default,proto3" json:"default,omitempty"`
	Desc                 string   `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVariableRequest) Reset()         { *m = CreateVariableRequest{} }
func (m *CreateVariableRequest) String() string { return proto.CompactTextString(m) }
func (*CreateVariableRequest) ProtoMessage()    {}
func (*CreateVariableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{12}
}

func (m *CreateVariableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVariableRequest.Unmarshal(m, b)
}
func (m *CreateVariableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVariableRequest.Marshal(b, m, deterministic)
}
func (m *CreateVariableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVariableRequest.Merge(m, src)
}
func (m *CreateVariableRequest) XXX_Size() int {
	return xxx_messageInfo_CreateVariableRequest.Size(m)
}
func (m *CreateVariableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVariableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVariableRequest proto.InternalMessageInfo

func (m *CreateVariableRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *CreateVariableRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateVariableRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *CreateVariableRequest) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *CreateVariableRequest) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *CreateVariableRequest) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type CreateVariableResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectCode          string   `protobuf:"bytes,2,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Key                  string   `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Scope                string   `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
	Default              string   `protobuf:"bytes,6,opt,name=default,proto3" json:"default,omitempty"`
	Desc                 string   `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"`
	Category             string   `protobuf:"bytes,8,opt,name=category,proto3" json:"category,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVariableResponse) Reset()         { *m = CreateVariableResponse{} }
func (m *CreateVariableResponse) String() string { return proto.CompactTextString(m) }
func (*CreateVariableResponse) ProtoMessage()    {}
func (*CreateVariableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{13}
}

func (m *CreateVariableResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVariableResponse.Unmarshal(m, b)
}
func (m *CreateVariableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVariableResponse.Marshal(b, m, deterministic)
}
func (m *CreateVariableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVariableResponse.Merge(m, src)
}
func (m *CreateVariableResponse) XXX_Size() int {
	return xxx_messageInfo_CreateVariableResponse.Size(m)
}
func (m *CreateVariableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVariableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVariableResponse proto.InternalMessageInfo

func (m *CreateVariableResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateVariableResponse) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *CreateVariableResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateVariableResponse) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *CreateVariableResponse) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *CreateVariableResponse) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *CreateVariableResponse) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *CreateVariableResponse) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

type UpdateVariableRequest struct {
	ProjectCode          string   `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	VariableID           string   `protobuf:"bytes,2,opt,name=variableID,proto3" json:"variableID,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Key                  string   `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Scope                string   `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
	Default              string   `protobuf:"bytes,6,opt,name=default,proto3" json:"default,omitempty"`
	Desc                 string   `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateVariableRequest) Reset()         { *m = UpdateVariableRequest{} }
func (m *UpdateVariableRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateVariableRequest) ProtoMessage()    {}
func (*UpdateVariableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{14}
}

func (m *UpdateVariableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateVariableRequest.Unmarshal(m, b)
}
func (m *UpdateVariableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateVariableRequest.Marshal(b, m, deterministic)
}
func (m *UpdateVariableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateVariableRequest.Merge(m, src)
}
func (m *UpdateVariableRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateVariableRequest.Size(m)
}
func (m *UpdateVariableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateVariableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateVariableRequest proto.InternalMessageInfo

func (m *UpdateVariableRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *UpdateVariableRequest) GetVariableID() string {
	if m != nil {
		return m.VariableID
	}
	return ""
}

func (m *UpdateVariableRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateVariableRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *UpdateVariableRequest) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *UpdateVariableRequest) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *UpdateVariableRequest) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type UpdateVariableResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectCode          string   `protobuf:"bytes,2,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Key                  string   `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Scope                string   `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
	Default              string   `protobuf:"bytes,6,opt,name=default,proto3" json:"default,omitempty"`
	Desc                 string   `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"`
	Category             string   `protobuf:"bytes,8,opt,name=category,proto3" json:"category,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateVariableResponse) Reset()         { *m = UpdateVariableResponse{} }
func (m *UpdateVariableResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateVariableResponse) ProtoMessage()    {}
func (*UpdateVariableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{15}
}

func (m *UpdateVariableResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateVariableResponse.Unmarshal(m, b)
}
func (m *UpdateVariableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateVariableResponse.Marshal(b, m, deterministic)
}
func (m *UpdateVariableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateVariableResponse.Merge(m, src)
}
func (m *UpdateVariableResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateVariableResponse.Size(m)
}
func (m *UpdateVariableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateVariableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateVariableResponse proto.InternalMessageInfo

func (m *UpdateVariableResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateVariableResponse) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *UpdateVariableResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateVariableResponse) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *UpdateVariableResponse) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *UpdateVariableResponse) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *UpdateVariableResponse) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *UpdateVariableResponse) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

type ListVariableDefinitionsRequest struct {
	ProjectCode          string   `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	Scope                string   `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	SearchKey            string   `protobuf:"bytes,3,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
	Offset               int64    `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int64    `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	All                  bool     `protobuf:"varint,6,opt,name=all,proto3" json:"all,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListVariableDefinitionsRequest) Reset()         { *m = ListVariableDefinitionsRequest{} }
func (m *ListVariableDefinitionsRequest) String() string { return proto.CompactTextString(m) }
func (*ListVariableDefinitionsRequest) ProtoMessage()    {}
func (*ListVariableDefinitionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{16}
}

func (m *ListVariableDefinitionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVariableDefinitionsRequest.Unmarshal(m, b)
}
func (m *ListVariableDefinitionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVariableDefinitionsRequest.Marshal(b, m, deterministic)
}
func (m *ListVariableDefinitionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVariableDefinitionsRequest.Merge(m, src)
}
func (m *ListVariableDefinitionsRequest) XXX_Size() int {
	return xxx_messageInfo_ListVariableDefinitionsRequest.Size(m)
}
func (m *ListVariableDefinitionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVariableDefinitionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListVariableDefinitionsRequest proto.InternalMessageInfo

func (m *ListVariableDefinitionsRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *ListVariableDefinitionsRequest) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *ListVariableDefinitionsRequest) GetSearchKey() string {
	if m != nil {
		return m.SearchKey
	}
	return ""
}

func (m *ListVariableDefinitionsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListVariableDefinitionsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListVariableDefinitionsRequest) GetAll() bool {
	if m != nil {
		return m.All
	}
	return false
}

type ListVariableDefinitionsResponse struct {
	Code                 uint32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *ListVariableDefinitionData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestID            string                      `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ListVariableDefinitionsResponse) Reset()         { *m = ListVariableDefinitionsResponse{} }
func (m *ListVariableDefinitionsResponse) String() string { return proto.CompactTextString(m) }
func (*ListVariableDefinitionsResponse) ProtoMessage()    {}
func (*ListVariableDefinitionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{17}
}

func (m *ListVariableDefinitionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVariableDefinitionsResponse.Unmarshal(m, b)
}
func (m *ListVariableDefinitionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVariableDefinitionsResponse.Marshal(b, m, deterministic)
}
func (m *ListVariableDefinitionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVariableDefinitionsResponse.Merge(m, src)
}
func (m *ListVariableDefinitionsResponse) XXX_Size() int {
	return xxx_messageInfo_ListVariableDefinitionsResponse.Size(m)
}
func (m *ListVariableDefinitionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVariableDefinitionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListVariableDefinitionsResponse proto.InternalMessageInfo

func (m *ListVariableDefinitionsResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListVariableDefinitionsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListVariableDefinitionsResponse) GetData() *ListVariableDefinitionData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListVariableDefinitionsResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type ListClusterVariablesRequest struct {
	ProjectCode          string   `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	VariableID           string   `protobuf:"bytes,2,opt,name=variableID,proto3" json:"variableID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListClusterVariablesRequest) Reset()         { *m = ListClusterVariablesRequest{} }
func (m *ListClusterVariablesRequest) String() string { return proto.CompactTextString(m) }
func (*ListClusterVariablesRequest) ProtoMessage()    {}
func (*ListClusterVariablesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{18}
}

func (m *ListClusterVariablesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClusterVariablesRequest.Unmarshal(m, b)
}
func (m *ListClusterVariablesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClusterVariablesRequest.Marshal(b, m, deterministic)
}
func (m *ListClusterVariablesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClusterVariablesRequest.Merge(m, src)
}
func (m *ListClusterVariablesRequest) XXX_Size() int {
	return xxx_messageInfo_ListClusterVariablesRequest.Size(m)
}
func (m *ListClusterVariablesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClusterVariablesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListClusterVariablesRequest proto.InternalMessageInfo

func (m *ListClusterVariablesRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *ListClusterVariablesRequest) GetVariableID() string {
	if m != nil {
		return m.VariableID
	}
	return ""
}

type ListClusterVariablesResponse struct {
	Code                 uint32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *ListClusterVariablesData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestID            string                    `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ListClusterVariablesResponse) Reset()         { *m = ListClusterVariablesResponse{} }
func (m *ListClusterVariablesResponse) String() string { return proto.CompactTextString(m) }
func (*ListClusterVariablesResponse) ProtoMessage()    {}
func (*ListClusterVariablesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{19}
}

func (m *ListClusterVariablesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClusterVariablesResponse.Unmarshal(m, b)
}
func (m *ListClusterVariablesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClusterVariablesResponse.Marshal(b, m, deterministic)
}
func (m *ListClusterVariablesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClusterVariablesResponse.Merge(m, src)
}
func (m *ListClusterVariablesResponse) XXX_Size() int {
	return xxx_messageInfo_ListClusterVariablesResponse.Size(m)
}
func (m *ListClusterVariablesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClusterVariablesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListClusterVariablesResponse proto.InternalMessageInfo

func (m *ListClusterVariablesResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListClusterVariablesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListClusterVariablesResponse) GetData() *ListClusterVariablesData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListClusterVariablesResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type ListNamespaceVariablesRequest struct {
	ProjectCode          string   `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	VariableID           string   `protobuf:"bytes,2,opt,name=variableID,proto3" json:"variableID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNamespaceVariablesRequest) Reset()         { *m = ListNamespaceVariablesRequest{} }
func (m *ListNamespaceVariablesRequest) String() string { return proto.CompactTextString(m) }
func (*ListNamespaceVariablesRequest) ProtoMessage()    {}
func (*ListNamespaceVariablesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{20}
}

func (m *ListNamespaceVariablesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNamespaceVariablesRequest.Unmarshal(m, b)
}
func (m *ListNamespaceVariablesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNamespaceVariablesRequest.Marshal(b, m, deterministic)
}
func (m *ListNamespaceVariablesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNamespaceVariablesRequest.Merge(m, src)
}
func (m *ListNamespaceVariablesRequest) XXX_Size() int {
	return xxx_messageInfo_ListNamespaceVariablesRequest.Size(m)
}
func (m *ListNamespaceVariablesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNamespaceVariablesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNamespaceVariablesRequest proto.InternalMessageInfo

func (m *ListNamespaceVariablesRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *ListNamespaceVariablesRequest) GetVariableID() string {
	if m != nil {
		return m.VariableID
	}
	return ""
}

type ListNamespaceVariablesResponse struct {
	Code                 uint32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *ListNamespaceVariablesData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestID            string                      `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ListNamespaceVariablesResponse) Reset()         { *m = ListNamespaceVariablesResponse{} }
func (m *ListNamespaceVariablesResponse) String() string { return proto.CompactTextString(m) }
func (*ListNamespaceVariablesResponse) ProtoMessage()    {}
func (*ListNamespaceVariablesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{21}
}

func (m *ListNamespaceVariablesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNamespaceVariablesResponse.Unmarshal(m, b)
}
func (m *ListNamespaceVariablesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNamespaceVariablesResponse.Marshal(b, m, deterministic)
}
func (m *ListNamespaceVariablesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNamespaceVariablesResponse.Merge(m, src)
}
func (m *ListNamespaceVariablesResponse) XXX_Size() int {
	return xxx_messageInfo_ListNamespaceVariablesResponse.Size(m)
}
func (m *ListNamespaceVariablesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNamespaceVariablesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNamespaceVariablesResponse proto.InternalMessageInfo

func (m *ListNamespaceVariablesResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListNamespaceVariablesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListNamespaceVariablesResponse) GetData() *ListNamespaceVariablesData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListNamespaceVariablesResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type VariableDefinition struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Default              string   `protobuf:"bytes,4,opt,name=default,proto3" json:"default,omitempty"`
	DefaultValue         string   `protobuf:"bytes,5,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	Scope                string   `protobuf:"bytes,6,opt,name=scope,proto3" json:"scope,omitempty"`
	ScopeName            string   `protobuf:"bytes,7,opt,name=scopeName,proto3" json:"scopeName,omitempty"`
	Category             string   `protobuf:"bytes,8,opt,name=category,proto3" json:"category,omitempty"`
	CategoryName         string   `protobuf:"bytes,9,opt,name=categoryName,proto3" json:"categoryName,omitempty"`
	Desc                 string   `protobuf:"bytes,10,opt,name=desc,proto3" json:"desc,omitempty"`
	Created              string   `protobuf:"bytes,11,opt,name=created,proto3" json:"created,omitempty"`
	Updated              string   `protobuf:"bytes,12,opt,name=updated,proto3" json:"updated,omitempty"`
	Creator              string   `protobuf:"bytes,13,opt,name=creator,proto3" json:"creator,omitempty"`
	Updater              string   `protobuf:"bytes,14,opt,name=updater,proto3" json:"updater,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VariableDefinition) Reset()         { *m = VariableDefinition{} }
func (m *VariableDefinition) String() string { return proto.CompactTextString(m) }
func (*VariableDefinition) ProtoMessage()    {}
func (*VariableDefinition) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{22}
}

func (m *VariableDefinition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VariableDefinition.Unmarshal(m, b)
}
func (m *VariableDefinition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VariableDefinition.Marshal(b, m, deterministic)
}
func (m *VariableDefinition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VariableDefinition.Merge(m, src)
}
func (m *VariableDefinition) XXX_Size() int {
	return xxx_messageInfo_VariableDefinition.Size(m)
}
func (m *VariableDefinition) XXX_DiscardUnknown() {
	xxx_messageInfo_VariableDefinition.DiscardUnknown(m)
}

var xxx_messageInfo_VariableDefinition proto.InternalMessageInfo

func (m *VariableDefinition) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *VariableDefinition) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *VariableDefinition) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VariableDefinition) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *VariableDefinition) GetDefaultValue() string {
	if m != nil {
		return m.DefaultValue
	}
	return ""
}

func (m *VariableDefinition) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *VariableDefinition) GetScopeName() string {
	if m != nil {
		return m.ScopeName
	}
	return ""
}

func (m *VariableDefinition) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *VariableDefinition) GetCategoryName() string {
	if m != nil {
		return m.CategoryName
	}
	return ""
}

func (m *VariableDefinition) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *VariableDefinition) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *VariableDefinition) GetUpdated() string {
	if m != nil {
		return m.Updated
	}
	return ""
}

func (m *VariableDefinition) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *VariableDefinition) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

type ClusterVariable struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ClusterName          string   `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Value                string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterVariable) Reset()         { *m = ClusterVariable{} }
func (m *ClusterVariable) String() string { return proto.CompactTextString(m) }
func (*ClusterVariable) ProtoMessage()    {}
func (*ClusterVariable) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{23}
}

func (m *ClusterVariable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterVariable.Unmarshal(m, b)
}
func (m *ClusterVariable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterVariable.Marshal(b, m, deterministic)
}
func (m *ClusterVariable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterVariable.Merge(m, src)
}
func (m *ClusterVariable) XXX_Size() int {
	return xxx_messageInfo_ClusterVariable.Size(m)
}
func (m *ClusterVariable) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterVariable.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterVariable proto.InternalMessageInfo

func (m *ClusterVariable) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ClusterVariable) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *ClusterVariable) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type NamespaceVariable struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ClusterName          string   `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Namespace            string   `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Value                string   `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NamespaceVariable) Reset()         { *m = NamespaceVariable{} }
func (m *NamespaceVariable) String() string { return proto.CompactTextString(m) }
func (*NamespaceVariable) ProtoMessage()    {}
func (*NamespaceVariable) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{24}
}

func (m *NamespaceVariable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NamespaceVariable.Unmarshal(m, b)
}
func (m *NamespaceVariable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NamespaceVariable.Marshal(b, m, deterministic)
}
func (m *NamespaceVariable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NamespaceVariable.Merge(m, src)
}
func (m *NamespaceVariable) XXX_Size() int {
	return xxx_messageInfo_NamespaceVariable.Size(m)
}
func (m *NamespaceVariable) XXX_DiscardUnknown() {
	xxx_messageInfo_NamespaceVariable.DiscardUnknown(m)
}

var xxx_messageInfo_NamespaceVariable proto.InternalMessageInfo

func (m *NamespaceVariable) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *NamespaceVariable) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *NamespaceVariable) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *NamespaceVariable) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ListVariableDefinitionData struct {
	Total                uint32                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Results              []*VariableDefinition `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ListVariableDefinitionData) Reset()         { *m = ListVariableDefinitionData{} }
func (m *ListVariableDefinitionData) String() string { return proto.CompactTextString(m) }
func (*ListVariableDefinitionData) ProtoMessage()    {}
func (*ListVariableDefinitionData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{25}
}

func (m *ListVariableDefinitionData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVariableDefinitionData.Unmarshal(m, b)
}
func (m *ListVariableDefinitionData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVariableDefinitionData.Marshal(b, m, deterministic)
}
func (m *ListVariableDefinitionData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVariableDefinitionData.Merge(m, src)
}
func (m *ListVariableDefinitionData) XXX_Size() int {
	return xxx_messageInfo_ListVariableDefinitionData.Size(m)
}
func (m *ListVariableDefinitionData) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVariableDefinitionData.DiscardUnknown(m)
}

var xxx_messageInfo_ListVariableDefinitionData proto.InternalMessageInfo

func (m *ListVariableDefinitionData) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListVariableDefinitionData) GetResults() []*VariableDefinition {
	if m != nil {
		return m.Results
	}
	return nil
}

type ListClusterVariablesData struct {
	Total                uint32             `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Results              []*ClusterVariable `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ListClusterVariablesData) Reset()         { *m = ListClusterVariablesData{} }
func (m *ListClusterVariablesData) String() string { return proto.CompactTextString(m) }
func (*ListClusterVariablesData) ProtoMessage()    {}
func (*ListClusterVariablesData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{26}
}

func (m *ListClusterVariablesData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClusterVariablesData.Unmarshal(m, b)
}
func (m *ListClusterVariablesData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClusterVariablesData.Marshal(b, m, deterministic)
}
func (m *ListClusterVariablesData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClusterVariablesData.Merge(m, src)
}
func (m *ListClusterVariablesData) XXX_Size() int {
	return xxx_messageInfo_ListClusterVariablesData.Size(m)
}
func (m *ListClusterVariablesData) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClusterVariablesData.DiscardUnknown(m)
}

var xxx_messageInfo_ListClusterVariablesData proto.InternalMessageInfo

func (m *ListClusterVariablesData) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListClusterVariablesData) GetResults() []*ClusterVariable {
	if m != nil {
		return m.Results
	}
	return nil
}

type ListNamespaceVariablesData struct {
	Total                uint32               `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Results              []*NamespaceVariable `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListNamespaceVariablesData) Reset()         { *m = ListNamespaceVariablesData{} }
func (m *ListNamespaceVariablesData) String() string { return proto.CompactTextString(m) }
func (*ListNamespaceVariablesData) ProtoMessage()    {}
func (*ListNamespaceVariablesData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{27}
}

func (m *ListNamespaceVariablesData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNamespaceVariablesData.Unmarshal(m, b)
}
func (m *ListNamespaceVariablesData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNamespaceVariablesData.Marshal(b, m, deterministic)
}
func (m *ListNamespaceVariablesData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNamespaceVariablesData.Merge(m, src)
}
func (m *ListNamespaceVariablesData) XXX_Size() int {
	return xxx_messageInfo_ListNamespaceVariablesData.Size(m)
}
func (m *ListNamespaceVariablesData) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNamespaceVariablesData.DiscardUnknown(m)
}

var xxx_messageInfo_ListNamespaceVariablesData proto.InternalMessageInfo

func (m *ListNamespaceVariablesData) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListNamespaceVariablesData) GetResults() []*NamespaceVariable {
	if m != nil {
		return m.Results
	}
	return nil
}

type HealthzRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthzRequest) Reset()         { *m = HealthzRequest{} }
func (m *HealthzRequest) String() string { return proto.CompactTextString(m) }
func (*HealthzRequest) ProtoMessage()    {}
func (*HealthzRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{28}
}

func (m *HealthzRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthzRequest.Unmarshal(m, b)
}
func (m *HealthzRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthzRequest.Marshal(b, m, deterministic)
}
func (m *HealthzRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthzRequest.Merge(m, src)
}
func (m *HealthzRequest) XXX_Size() int {
	return xxx_messageInfo_HealthzRequest.Size(m)
}
func (m *HealthzRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthzRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HealthzRequest proto.InternalMessageInfo

type HealthzResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	MongoStatus          string   `protobuf:"bytes,2,opt,name=mongoStatus,proto3" json:"mongoStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthzResponse) Reset()         { *m = HealthzResponse{} }
func (m *HealthzResponse) String() string { return proto.CompactTextString(m) }
func (*HealthzResponse) ProtoMessage()    {}
func (*HealthzResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{29}
}

func (m *HealthzResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthzResponse.Unmarshal(m, b)
}
func (m *HealthzResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthzResponse.Marshal(b, m, deterministic)
}
func (m *HealthzResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthzResponse.Merge(m, src)
}
func (m *HealthzResponse) XXX_Size() int {
	return xxx_messageInfo_HealthzResponse.Size(m)
}
func (m *HealthzResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthzResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HealthzResponse proto.InternalMessageInfo

func (m *HealthzResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *HealthzResponse) GetMongoStatus() string {
	if m != nil {
		return m.MongoStatus
	}
	return ""
}

type PingRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingRequest) Reset()         { *m = PingRequest{} }
func (m *PingRequest) String() string { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()    {}
func (*PingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{30}
}

func (m *PingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingRequest.Unmarshal(m, b)
}
func (m *PingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingRequest.Marshal(b, m, deterministic)
}
func (m *PingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingRequest.Merge(m, src)
}
func (m *PingRequest) XXX_Size() int {
	return xxx_messageInfo_PingRequest.Size(m)
}
func (m *PingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PingRequest proto.InternalMessageInfo

type PingResponse struct {
	Ret                  string   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingResponse) Reset()         { *m = PingResponse{} }
func (m *PingResponse) String() string { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()    {}
func (*PingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{31}
}

func (m *PingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingResponse.Unmarshal(m, b)
}
func (m *PingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingResponse.Marshal(b, m, deterministic)
}
func (m *PingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingResponse.Merge(m, src)
}
func (m *PingResponse) XXX_Size() int {
	return xxx_messageInfo_PingResponse.Size(m)
}
func (m *PingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PingResponse proto.InternalMessageInfo

func (m *PingResponse) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

func init() {
	proto.RegisterType((*Project)(nil), "bcsproject.Project")
	proto.RegisterType((*CreateProjectRequest)(nil), "bcsproject.CreateProjectRequest")
	proto.RegisterType((*GetProjectRequest)(nil), "bcsproject.GetProjectRequest")
	proto.RegisterType((*UpdateProjectRequest)(nil), "bcsproject.UpdateProjectRequest")
	proto.RegisterType((*DeleteProjectRequest)(nil), "bcsproject.DeleteProjectRequest")
	proto.RegisterType((*ProjectResponse)(nil), "bcsproject.ProjectResponse")
	proto.RegisterType((*ListProjectsRequest)(nil), "bcsproject.ListProjectsRequest")
	proto.RegisterType((*ListProjectData)(nil), "bcsproject.ListProjectData")
	proto.RegisterType((*ListProjectsResponse)(nil), "bcsproject.ListProjectsResponse")
	proto.RegisterType((*Perms)(nil), "bcsproject.Perms")
	proto.RegisterType((*ListAuthorizedProjReq)(nil), "bcsproject.ListAuthorizedProjReq")
	proto.RegisterType((*ListAuthorizedProjResp)(nil), "bcsproject.ListAuthorizedProjResp")
	proto.RegisterType((*CreateVariableRequest)(nil), "bcsproject.CreateVariableRequest")
	proto.RegisterType((*CreateVariableResponse)(nil), "bcsproject.CreateVariableResponse")
	proto.RegisterType((*UpdateVariableRequest)(nil), "bcsproject.UpdateVariableRequest")
	proto.RegisterType((*UpdateVariableResponse)(nil), "bcsproject.UpdateVariableResponse")
	proto.RegisterType((*ListVariableDefinitionsRequest)(nil), "bcsproject.ListVariableDefinitionsRequest")
	proto.RegisterType((*ListVariableDefinitionsResponse)(nil), "bcsproject.ListVariableDefinitionsResponse")
	proto.RegisterType((*ListClusterVariablesRequest)(nil), "bcsproject.ListClusterVariablesRequest")
	proto.RegisterType((*ListClusterVariablesResponse)(nil), "bcsproject.ListClusterVariablesResponse")
	proto.RegisterType((*ListNamespaceVariablesRequest)(nil), "bcsproject.ListNamespaceVariablesRequest")
	proto.RegisterType((*ListNamespaceVariablesResponse)(nil), "bcsproject.ListNamespaceVariablesResponse")
	proto.RegisterType((*VariableDefinition)(nil), "bcsproject.VariableDefinition")
	proto.RegisterType((*ClusterVariable)(nil), "bcsproject.ClusterVariable")
	proto.RegisterType((*NamespaceVariable)(nil), "bcsproject.NamespaceVariable")
	proto.RegisterType((*ListVariableDefinitionData)(nil), "bcsproject.ListVariableDefinitionData")
	proto.RegisterType((*ListClusterVariablesData)(nil), "bcsproject.ListClusterVariablesData")
	proto.RegisterType((*ListNamespaceVariablesData)(nil), "bcsproject.ListNamespaceVariablesData")
	proto.RegisterType((*HealthzRequest)(nil), "bcsproject.HealthzRequest")
	proto.RegisterType((*HealthzResponse)(nil), "bcsproject.HealthzResponse")
	proto.RegisterType((*PingRequest)(nil), "bcsproject.PingRequest")
	proto.RegisterType((*PingResponse)(nil), "bcsproject.PingResponse")
}

func init() { proto.RegisterFile("bcsproject.proto", fileDescriptor_0e6fb1d9dcd095e1) }

var fileDescriptor_0e6fb1d9dcd095e1 = []byte{
	// 4841 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5b, 0x5d, 0x74, 0x13, 0x47,
	0x96, 0x1e, 0xf9, 0x0f, 0xbb, 0x6c, 0x6c, 0x28, 0x20, 0x68, 0xc4, 0x5f, 0x47, 0x81, 0x60, 0x1a,
	0x19, 0xdb, 0x0d, 0xe1, 0x47, 0x24, 0x13, 0x5a, 0x76, 0x42, 0x3c, 0x0c, 0x84, 0xb4, 0x33, 0x90,
	0x21, 0x9b, 0x30, 0x42, 0x6a, 0x8c, 0x06, 0xd9, 0xf2, 0xa8, 0x65, 0xb2, 0x4e, 0x4e, 0xce, 0xda,
	0x01, 0x63, 0xf3, 0x6b, 0xa7, 0xe3, 0xf0, 0x63, 0x20, 0xe0, 0x0c, 0x10, 0xe7, 0x07, 0x9b, 0x24,
	0x90, 0x08, 0xd9, 0x8e, 0xf7, 0x61, 0xf7, 0xec, 0xcb, 0xbe, 0x6c, 0xf6, 0x65, 0xf7, 0x65, 0x1f,
	0xf6, 0xa8, 0x5b, 0xd2, 0xcb, 0xe6, 0x9d, 0x97, 0xdd, 0xd3, 0x55, 0xd5, 0xea, 0xea, 0x96, 0x64,
	0x63, 0xb0, 0xe3, 0xec, 0x39, 0x79, 0xb2, 0xfa, 0x76, 0xd5, 0xad, 0x7b, 0x6f, 0xdf, 0xba, 0xdf,
	0xad, 0x5b, 0xd7, 0x60, 0xc1, 0x21, 0x9f, 0xd4, 0x1a, 0x0e, 0xfd, 0x45, 0xf4, 0x45, 0x36, 0xb4,
	0x86, 0x43, 0x91, 0x10, 0x04, 0x06, 0xc5, 0xb1, 0xbc, 0x29, 0x14, 0x6a, 0x0a, 0x8a, 0xd5, 0xde,
	0xd6, 0x40, 0xb5, 0xb7, 0xa5, 0x25, 0x14, 0xf1, 0x46, 0x02, 0xa1, 0x16, 0x09, 0x8f, 0x74, 0xac,
	0x24, 0x6f, 0xd1, 0xd3, 0xa1, 0xb6, 0xc3, 0xd5, 0xef, 0x84, 0xbd, 0xad, 0xad, 0x62, 0x58, 0x7f,
	0xef, 0x42, 0x7f, 0x7c, 0x55, 0x4d, 0x62, 0x4b, 0x95, 0xf4, 0x8e, 0xb7, 0xa9, 0x49, 0x0c, 0x57,
	0x87, 0x5a, 0x11, 0x87, 0x2c, 0xdc, 0x96, 0x1e, 0xf3, 0x06, 0x03, 0x7e, 0x6f, 0x44, 0xac, 0xd6,
	0x7f, 0x90, 0x17, 0xcb, 0xad, 0xcb, 0x48, 0x91, 0x70, 0x9b, 0x2e, 0xae, 0xf3, 0x9f, 0x2a, 0xc0,
	0xbc, 0xbd, 0x58, 0x5c, 0xf8, 0x02, 0x00, 0xbe, 0xb0, 0xe8, 0x8d, 0x88, 0xaf, 0x07, 0x9a, 0x45,
	0xbb, 0x8d, 0xb1, 0x55, 0x96, 0x78, 0x56, 0xc8, 0xbc, 0x83, 0xa5, 0xc8, 0x5c, 0x99, 0xd2, 0x73,
	0x45, 0x19, 0x8d, 0xa9, 0x17, 0xbf, 0x4b, 0x5d, 0xbc, 0x27, 0x50, 0x6f, 0xb4, 0xe9, 0x6d, 0xad,
	0x7e, 0x7d, 0x7a, 0x1e, 0x35, 0xdd, 0x20, 0x73, 0x65, 0xea, 0x95, 0x7b, 0xea, 0x85, 0xbb, 0xfa,
	0x74, 0xe3, 0x0d, 0xdc, 0x02, 0xe6, 0x21, 0x66, 0xa1, 0xb0, 0x3d, 0xdf, 0x98, 0xab, 0xd3, 0xb8,
	0x8a, 0xd4, 0xe0, 0x83, 0xc4, 0x95, 0x61, 0xbc, 0x7a, 0xb2, 0xa3, 0x4b, 0xd0, 0xdf, 0x68, 0x13,
	0x31, 0x9b, 0xb0, 0xbd, 0x80, 0x9a, 0x48, 0x68, 0xfa, 0x44, 0xbc, 0x2e, 0x9a, 0x48, 0xde, 0xc0,
	0xbf, 0x03, 0xc5, 0xcd, 0xde, 0x16, 0x6f, 0x93, 0x18, 0x96, 0xec, 0x85, 0x68, 0xe6, 0x0e, 0x99,
	0x7f, 0x81, 0x4d, 0x13, 0xb9, 0x5a, 0x3c, 0x35, 0x31, 0x3c, 0x98, 0xe8, 0x3b, 0x19, 0x8f, 0xc5,
	0x94, 0x0f, 0x2f, 0xfd, 0x34, 0x76, 0x36, 0x35, 0x7a, 0x29, 0x39, 0x7c, 0x33, 0x1e, 0x8d, 0xa5,
	0x65, 0x59, 0x6f, 0x30, 0x4f, 0x4f, 0x86, 0x47, 0x41, 0x09, 0xf1, 0x83, 0x86, 0x7a, 0x7b, 0x11,
	0x62, 0xbf, 0x5b, 0xe6, 0x7f, 0xcf, 0x1a, 0x54, 0xee, 0x05, 0xcc, 0xbf, 0xa1, 0xde, 0xc5, 0x28,
	0x5d, 0x43, 0xca, 0xd7, 0x1d, 0x4a, 0xff, 0x48, 0x3c, 0xda, 0xe1, 0x62, 0x52, 0x1f, 0x4f, 0x28,
	0xb1, 0xdb, 0xf1, 0x68, 0x6c, 0x23, 0x17, 0x1f, 0x3f, 0xa7, 0xdc, 0xb9, 0x98, 0xf8, 0xea, 0x76,
	0x3c, 0xfa, 0x8d, 0x8b, 0x49, 0x76, 0x7f, 0xa1, 0x9c, 0x1e, 0x4a, 0xf4, 0x5f, 0x57, 0x7b, 0xfa,
	0x04, 0x83, 0x13, 0xdc, 0x0d, 0x0a, 0x5a, 0xbc, 0xcd, 0xa2, 0x7d, 0x1e, 0x5a, 0x67, 0x9b, 0xcc,
	0x6f, 0x66, 0x11, 0x81, 0xdb, 0x80, 0x97, 0x88, 0x47, 0xef, 0xa8, 0x17, 0xba, 0x95, 0xbe, 0x73,
	0x89, 0xcf, 0xee, 0x1a, 0xec, 0xcf, 0x25, 0x8f, 0x8f, 0x27, 0xbf, 0xeb, 0x4a, 0x4e, 0x74, 0x6f,
	0xde, 0x84, 0x17, 0x11, 0xd0, 0x2c, 0xf8, 0xf7, 0xa0, 0x94, 0xf0, 0xae, 0x0b, 0xf9, 0x45, 0x7b,
	0x31, 0xe2, 0xba, 0x4f, 0xe6, 0x1b, 0x59, 0x9a, 0xce, 0xd5, 0x13, 0xfb, 0x8c, 0x5d, 0x48, 0xdc,
	0xe8, 0xac, 0x4c, 0x9e, 0xf9, 0x5a, 0xbd, 0xd0, 0x9d, 0x18, 0xfb, 0x5c, 0x39, 0x79, 0x79, 0x5d,
	0x2e, 0x8d, 0x8c, 0x25, 0x37, 0x72, 0x64, 0x49, 0x9a, 0x25, 0x3c, 0x06, 0x8a, 0xdb, 0x24, 0xd1,
	0xb3, 0x4b, 0x10, 0x25, 0x7b, 0x09, 0x63, 0xab, 0x2c, 0xf6, 0x1c, 0x90, 0xf9, 0xfd, 0x6c, 0x9a,
	0xc8, 0xed, 0x52, 0x2f, 0x8d, 0x28, 0x7d, 0xb7, 0xe3, 0xe3, 0x13, 0x89, 0xfe, 0xa1, 0xe4, 0x47,
	0xd7, 0x52, 0xdf, 0x44, 0xd5, 0xde, 0xbe, 0xf8, 0x0f, 0x57, 0x12, 0x03, 0x27, 0x92, 0xf7, 0x4f,
	0xa8, 0xb1, 0x3e, 0xf5, 0xeb, 0x1b, 0x2e, 0x26, 0x1e, 0x1d, 0x4d, 0xde, 0xee, 0x4c, 0xf4, 0x0f,
	0xc5, 0x63, 0xe7, 0x31, 0x39, 0x39, 0x3c, 0x98, 0xbc, 0xf7, 0xc0, 0xc5, 0xe0, 0xcf, 0x77, 0xd8,
	0x1b, 0x94, 0x44, 0x21, 0xcd, 0x16, 0x1e, 0x00, 0xa5, 0x7e, 0x51, 0xf2, 0x85, 0x03, 0x68, 0x83,
	0xd9, 0x01, 0xd2, 0x78, 0xab, 0xcc, 0x3f, 0xc7, 0xd2, 0x74, 0xee, 0x59, 0xe2, 0x4c, 0xbd, 0xbd,
	0xc9, 0x89, 0xbb, 0x2e, 0x46, 0xb9, 0x3b, 0x9e, 0xea, 0xee, 0x4d, 0x5d, 0xee, 0x53, 0x7a, 0xbe,
	0x53, 0xae, 0x0e, 0xd5, 0xd6, 0xd4, 0xe8, 0x3a, 0x51, 0x93, 0x60, 0x23, 0x28, 0x09, 0x48, 0xaf,
	0x1e, 0x3e, 0x1c, 0x0c, 0xb4, 0x88, 0xf6, 0x52, 0xa4, 0xd4, 0x73, 0x32, 0xcf, 0xb1, 0x06, 0x95,
	0x5b, 0x43, 0xf8, 0x22, 0xdd, 0x94, 0xef, 0xbf, 0x49, 0x8c, 0xf6, 0xc6, 0xa3, 0x67, 0x12, 0xb1,
	0x09, 0xb3, 0xbc, 0xc6, 0x0c, 0xf8, 0x12, 0x28, 0x38, 0x1a, 0x68, 0xf1, 0xdb, 0xcb, 0x90, 0xa4,
	0xb5, 0x32, 0xbf, 0x81, 0x45, 0x04, 0x5d, 0xc4, 0x78, 0xf4, 0x4e, 0xea, 0xca, 0xc9, 0xc4, 0x0f,
	0x37, 0x13, 0x5f, 0x8f, 0x2a, 0x9f, 0x9c, 0x71, 0x31, 0x4a, 0xef, 0x48, 0xaa, 0xe3, 0xd4, 0xd1,
	0xad, 0x52, 0x75, 0xb3, 0x28, 0x85, 0x24, 0x01, 0x8d, 0x86, 0x6f, 0x02, 0x70, 0xa8, 0x4d, 0x0a,
	0xb4, 0x88, 0x92, 0xd4, 0x50, 0x6f, 0x9f, 0x8f, 0x98, 0x6d, 0x97, 0xf9, 0xad, 0x2c, 0x45, 0xe6,
	0x58, 0xf2, 0x9d, 0x47, 0x3f, 0x54, 0x86, 0x07, 0x34, 0x3b, 0x23, 0xb3, 0xd7, 0xed, 0xae, 0xf7,
	0xc4, 0xa3, 0x77, 0xe2, 0xd1, 0x01, 0xe5, 0xf4, 0x60, 0x43, 0x7d, 0x7c, 0x62, 0x50, 0xed, 0x1c,
	0x11, 0xa8, 0x79, 0x70, 0x2f, 0x28, 0x0e, 0x48, 0x8d, 0xa2, 0x2f, 0x2c, 0x46, 0xec, 0xe5, 0x48,
	0xef, 0x4d, 0x32, 0x5f, 0xcb, 0xa6, 0x89, 0xdc, 0x1a, 0xf2, 0x31, 0xa3, 0xb1, 0xf8, 0xc4, 0x35,
	0x65, 0xe4, 0x24, 0x5e, 0x47, 0xd7, 0x39, 0x1e, 0x8d, 0x91, 0xcf, 0xa4, 0x4f, 0x80, 0x97, 0x6c,
	0x69, 0xcf, 0x7c, 0xbd, 0xbd, 0x55, 0xb4, 0x57, 0x30, 0xb6, 0xca, 0xf9, 0x9e, 0x63, 0x32, 0x2f,
	0xb1, 0x05, 0x91, 0xf6, 0x56, 0x91, 0x3b, 0x4a, 0x44, 0x25, 0x4a, 0xc7, 0x27, 0xae, 0x25, 0x3e,
	0xbe, 0xac, 0xdc, 0xb9, 0xa8, 0x0e, 0xdf, 0xa7, 0xd8, 0xd6, 0xe8, 0xe6, 0x60, 0x6a, 0xdd, 0xea,
	0xa9, 0x33, 0x6a, 0x34, 0xea, 0x62, 0x38, 0x77, 0xe2, 0xcb, 0x11, 0xf4, 0x6b, 0xa3, 0x3b, 0x35,
	0x78, 0x1f, 0xfd, 0xda, 0xe4, 0x56, 0x1e, 0x7c, 0xab, 0xf4, 0xde, 0x8d, 0xc7, 0x3e, 0x53, 0x3e,
	0xea, 0x74, 0x31, 0xcf, 0xb9, 0xd5, 0xfe, 0x11, 0x55, 0xfe, 0x10, 0x3f, 0x0b, 0xb4, 0x28, 0x30,
	0x02, 0x80, 0x5f, 0x6c, 0x0d, 0x86, 0xda, 0x91, 0x60, 0x0b, 0x90, 0x60, 0xaf, 0xcb, 0xfc, 0x6b,
	0x2c, 0x45, 0xe6, 0xea, 0xb0, 0xb5, 0x52, 0xc7, 0x87, 0x12, 0xe3, 0xdf, 0x64, 0x17, 0xb2, 0xd6,
	0x9d, 0x38, 0xf5, 0x79, 0xa2, 0xef, 0xa4, 0x7a, 0x35, 0x86, 0x87, 0x69, 0xa2, 0x29, 0xc3, 0x0f,
	0x94, 0xcb, 0x43, 0xf8, 0x59, 0xa0, 0x18, 0xc2, 0x7a, 0x50, 0xe0, 0xd9, 0xd9, 0x50, 0x6f, 0x5f,
	0x88, 0xbe, 0x5c, 0x8d, 0xcc, 0x57, 0xb1, 0x05, 0x87, 0x9a, 0x1a, 0xea, 0xb9, 0x35, 0xf1, 0xd8,
	0x99, 0x78, 0x74, 0x20, 0xf1, 0xc3, 0x4d, 0x2d, 0xbc, 0xe4, 0xb2, 0x83, 0x80, 0x66, 0xc3, 0xbd,
	0xa0, 0xc8, 0xb3, 0x73, 0x8f, 0x16, 0x40, 0xa0, 0xe1, 0xf8, 0x45, 0x87, 0x9a, 0x34, 0x12, 0xb7,
	0x3e, 0xcd, 0x49, 0x8f, 0x1f, 0x39, 0xb8, 0x25, 0x3e, 0x8f, 0x09, 0x84, 0x0f, 0xdc, 0x09, 0x8a,
	0xfc, 0x62, 0xab, 0x16, 0xfa, 0x16, 0x21, 0x8e, 0xd5, 0x32, 0xef, 0x62, 0x09, 0x89, 0x73, 0xa6,
	0x8e, 0x0f, 0xa5, 0x2e, 0x0e, 0x4d, 0x2a, 0x18, 0x19, 0x0b, 0x1b, 0x41, 0xb1, 0xf6, 0x0b, 0x09,
	0xb7, 0x18, 0xb1, 0xda, 0x22, 0xf3, 0x9b, 0xd8, 0x34, 0x91, 0xab, 0xc4, 0xcc, 0x1e, 0x41, 0xb6,
	0xf4, 0x1c, 0xb8, 0x1b, 0x14, 0xfb, 0xc4, 0x96, 0x88, 0x18, 0x6e, 0xa8, 0xb7, 0x2f, 0x31, 0x36,
	0x50, 0x9a, 0xc8, 0x39, 0xe3, 0xd1, 0x3b, 0xca, 0xc4, 0xf1, 0x49, 0x25, 0x4c, 0x8f, 0x86, 0x7f,
	0x02, 0x00, 0xff, 0x46, 0x52, 0x3e, 0x65, 0xc4, 0x60, 0x8a, 0xcc, 0x55, 0x62, 0x96, 0x8f, 0x20,
	0x27, 0x35, 0xcb, 0xbd, 0x46, 0xe6, 0x9d, 0x80, 0x61, 0x75, 0x8c, 0xe6, 0x96, 0x10, 0xff, 0x1e,
	0x38, 0xa1, 0x5c, 0x8f, 0xa9, 0x57, 0xbf, 0xc2, 0xbb, 0xce, 0xf9, 0xcf, 0xe5, 0x60, 0x71, 0x1d,
	0x82, 0x62, 0x32, 0x50, 0x10, 0xff, 0xda, 0x26, 0x4a, 0x4f, 0x8c, 0xe9, 0x14, 0x28, 0xe7, 0x4d,
	0x0b, 0x94, 0x4d, 0xe8, 0x97, 0x3f, 0xcb, 0xe8, 0xb7, 0x8f, 0xa0, 0x1f, 0x86, 0x7f, 0xcf, 0x63,
	0xa3, 0xdf, 0x43, 0x4f, 0x51, 0xb8, 0x60, 0x41, 0x9e, 0x7d, 0x07, 0x81, 0xc1, 0x4e, 0x9b, 0x19,
	0x07, 0x71, 0x92, 0x70, 0x70, 0x66, 0x71, 0x30, 0x73, 0xf1, 0x9c, 0x80, 0x58, 0x34, 0x77, 0x80,
	0x38, 0x6f, 0xd6, 0x00, 0xb1, 0x78, 0x86, 0x00, 0xf1, 0x0d, 0x02, 0x88, 0x25, 0x48, 0xd2, 0xfa,
	0x69, 0x03, 0xe2, 0x43, 0xcf, 0x82, 0x70, 0xb9, 0xf0, 0x1b, 0x21, 0xff, 0xe8, 0x56, 0x49, 0x28,
	0xcc, 0x8d, 0x91, 0x60, 0xf6, 0x30, 0xb2, 0x74, 0x56, 0x30, 0xb2, 0xec, 0x97, 0x83, 0x91, 0xff,
	0x60, 0xc2, 0xc8, 0xf9, 0x48, 0xb0, 0x83, 0xb3, 0x81, 0x91, 0x0f, 0x3d, 0xc5, 0x6c, 0x51, 0xcd,
	0x6f, 0x6a, 0x6c, 0x35, 0x79, 0x59, 0xe1, 0xb2, 0x7c, 0x86, 0xe0, 0xb2, 0x62, 0xc6, 0xe1, 0x72,
	0xc1, 0xcc, 0xc1, 0xe5, 0xc2, 0xd9, 0x80, 0x4b, 0x38, 0xd3, 0x70, 0xb9, 0x68, 0x26, 0xe1, 0xf2,
	0x77, 0x32, 0xbf, 0x1d, 0x6c, 0x63, 0xb3, 0x62, 0xa1, 0x0e, 0x73, 0xd8, 0xfb, 0x7f, 0xb4, 0xa1,
	0x18, 0xff, 0xa3, 0x8d, 0x8e, 0xb6, 0xce, 0x6f, 0x6c, 0x60, 0xe1, 0x4e, 0x31, 0x62, 0x01, 0xd1,
	0xfd, 0xa0, 0x22, 0x0d, 0x36, 0xaf, 0x86, 0x11, 0x14, 0x60, 0x24, 0xad, 0x92, 0x79, 0x96, 0xb5,
	0xbe, 0xe3, 0x96, 0xea, 0xc0, 0xa6, 0xf6, 0x5c, 0xa0, 0xc1, 0x40, 0xb0, 0x8e, 0x74, 0xd7, 0xcb,
	0x3c, 0x0f, 0x5e, 0x64, 0x33, 0x97, 0xe4, 0xec, 0xea, 0xf5, 0x5b, 0xc9, 0x91, 0x4f, 0xd5, 0xb3,
	0xdd, 0xca, 0xf0, 0x00, 0x09, 0x60, 0x28, 0x78, 0xfc, 0x68, 0xb3, 0x72, 0x71, 0xf6, 0xce, 0x07,
	0x8b, 0xff, 0x88, 0xce, 0xb4, 0x16, 0xb9, 0x5f, 0xa5, 0x41, 0xd8, 0xa6, 0x7f, 0xb8, 0x25, 0x34,
	0x08, 0x17, 0xeb, 0xb2, 0x3e, 0xf4, 0x3c, 0x15, 0x5e, 0xcc, 0x55, 0xbc, 0xfd, 0x66, 0x4d, 0xd5,
	0x36, 0x6f, 0xd5, 0xbb, 0x7c, 0xd5, 0x81, 0xaa, 0xb7, 0xd6, 0xaf, 0xbe, 0x64, 0x63, 0x68, 0xa0,
	0x7d, 0x9d, 0x00, 0x6d, 0x9e, 0x7e, 0x5a, 0x7e, 0x6c, 0xa0, 0x2d, 0x08, 0x1b, 0x30, 0x5b, 0x6b,
	0x1c, 0xe0, 0x71, 0xa6, 0xb0, 0x54, 0xe6, 0x17, 0x1b, 0x07, 0xf8, 0x92, 0x2c, 0x47, 0x77, 0xd9,
	0x46, 0xc1, 0xa2, 0x06, 0xfb, 0xa5, 0x9c, 0x63, 0x03, 0x2e, 0x74, 0x6c, 0xd0, 0x0b, 0x1d, 0x1b,
	0x3c, 0xa1, 0x50, 0x70, 0x9f, 0x37, 0xd8, 0x26, 0xfe, 0x4c, 0x90, 0xf9, 0xb2, 0x19, 0x32, 0x71,
	0xb6, 0xb0, 0x5a, 0xe6, 0x9f, 0x36, 0x43, 0x26, 0xd4, 0xab, 0x0a, 0x1d, 0xc9, 0xdb, 0x9d, 0x18,
	0x38, 0xcd, 0xf0, 0x18, 0xa2, 0xe1, 0xb1, 0x68, 0x4a, 0xe5, 0x9e, 0x1c, 0x3a, 0x0f, 0x11, 0xe8,
	0xc4, 0x20, 0xbf, 0x47, 0xe6, 0x77, 0x11, 0xe8, 0xac, 0x7b, 0x34, 0xe8, 0x74, 0x31, 0xea, 0xd5,
	0x2f, 0xd4, 0x6b, 0xb7, 0x92, 0x23, 0xb7, 0xf0, 0x0e, 0x55, 0x7a, 0x47, 0x92, 0xc7, 0xc7, 0x95,
	0xd8, 0x75, 0x65, 0xec, 0x78, 0x56, 0x10, 0x2d, 0x9e, 0x59, 0x10, 0x0d, 0x52, 0x20, 0x5a, 0x32,
	0xa5, 0xc1, 0x9e, 0x14, 0x60, 0xcd, 0x27, 0x3d, 0xf0, 0x33, 0x9d, 0xf4, 0xac, 0xb0, 0x5e, 0xfa,
	0xcb, 0x81, 0x75, 0x1d, 0x55, 0xcb, 0x66, 0x08, 0x55, 0xe7, 0xcf, 0x38, 0xaa, 0x96, 0xcf, 0x1c,
	0xaa, 0x56, 0xcc, 0x06, 0xaa, 0x2e, 0x98, 0x69, 0x54, 0x5d, 0x38, 0x93, 0xa8, 0xaa, 0xd9, 0x0d,
	0xb0, 0x6c, 0x56, 0x90, 0xe1, 0x20, 0x0e, 0xcf, 0xd8, 0xf9, 0x92, 0x23, 0xdf, 0xab, 0x5f, 0x7f,
	0xe0, 0xfc, 0xc4, 0x06, 0x16, 0xd7, 0x8b, 0x41, 0x71, 0xd6, 0x11, 0xc9, 0xad, 0x05, 0x3f, 0x50,
	0xc3, 0x66, 0x5d, 0x4d, 0x03, 0xfc, 0x1b, 0xa9, 0xcb, 0x37, 0x75, 0xc0, 0x37, 0xa6, 0x39, 0x4f,
	0xe5, 0x83, 0x8a, 0xf4, 0x60, 0xa9, 0x35, 0xd4, 0x22, 0x89, 0x70, 0x03, 0x28, 0xf0, 0xe9, 0xd0,
	0x3e, 0xdf, 0xe3, 0x90, 0xf9, 0xa5, 0x2c, 0x22, 0x70, 0x15, 0xc9, 0x89, 0x7e, 0xe5, 0xca, 0x27,
	0xa9, 0xfe, 0xcb, 0xc9, 0x91, 0x91, 0xc4, 0x8d, 0x4e, 0x01, 0x91, 0xa1, 0x1b, 0xcc, 0x6b, 0x16,
	0x25, 0xc9, 0xdb, 0xa4, 0xe3, 0x21, 0x23, 0xf3, 0x2b, 0x58, 0x9d, 0xc6, 0x41, 0x7a, 0x16, 0x89,
	0x59, 0xfa, 0x4b, 0x0d, 0x48, 0xfd, 0xde, 0x88, 0x17, 0xe1, 0x5d, 0x29, 0xb7, 0x68, 0x03, 0x75,
	0x8d, 0x40, 0xc4, 0xf2, 0xac, 0x97, 0xf9, 0x4a, 0x16, 0x8d, 0xe2, 0x18, 0xcc, 0x2a, 0x39, 0x72,
	0x3b, 0x31, 0x7a, 0x12, 0xb3, 0x42, 0xbb, 0x38, 0x3e, 0x7a, 0x8b, 0x7c, 0x2d, 0x34, 0x0e, 0x6e,
	0x05, 0x25, 0x61, 0xac, 0x7a, 0x43, 0x3d, 0x39, 0x0c, 0x23, 0x35, 0x00, 0xa1, 0x32, 0x01, 0x3f,
	0x57, 0x82, 0x3f, 0x11, 0xd3, 0x50, 0x2f, 0x18, 0x83, 0xe1, 0xbb, 0xa0, 0xfc, 0x1d, 0xf1, 0x10,
	0x6f, 0xdc, 0x2a, 0x20, 0xf4, 0x2a, 0xe5, 0x16, 0x9a, 0x24, 0x13, 0xc3, 0xcd, 0x92, 0xe7, 0x45,
	0x99, 0x7f, 0x9e, 0xb5, 0x8c, 0xd6, 0x03, 0xb7, 0x7a, 0xe5, 0x9e, 0x72, 0x73, 0x00, 0x4b, 0xf8,
	0xd3, 0xd8, 0x59, 0x0c, 0xa0, 0xea, 0xa5, 0x11, 0xf5, 0xda, 0xf1, 0xd4, 0xe5, 0xbe, 0xc4, 0x95,
	0xa8, 0xd2, 0xf5, 0xad, 0x60, 0x99, 0xeb, 0xfc, 0xb2, 0x08, 0x2c, 0xfa, 0x43, 0x40, 0xd2, 0x33,
	0x20, 0x49, 0xf7, 0x95, 0x7d, 0x00, 0xa4, 0x3f, 0x98, 0x44, 0x9c, 0x65, 0xb3, 0xcc, 0x6f, 0x64,
	0x29, 0xb2, 0x0e, 0x76, 0xa8, 0x88, 0x70, 0x73, 0x20, 0x1e, 0xfd, 0x22, 0x3e, 0x7a, 0x4b, 0x39,
	0x77, 0x3a, 0xf9, 0x99, 0x9c, 0xea, 0xb8, 0xa8, 0xf4, 0x7e, 0xaf, 0xf4, 0x9c, 0x4c, 0x0d, 0xf4,
	0x0b, 0xd4, 0x14, 0xd8, 0x0c, 0x0a, 0xb5, 0xb4, 0x43, 0x22, 0x5f, 0x6d, 0xbf, 0xcc, 0xbf, 0xce,
	0x62, 0x0a, 0xb7, 0x6b, 0x7a, 0x69, 0xcc, 0xe4, 0x6b, 0x62, 0x9e, 0xd6, 0x5a, 0x7a, 0xfe, 0x6c,
	0xd4, 0xd2, 0xd3, 0xe5, 0x7b, 0x53, 0xe9, 0x20, 0x08, 0x80, 0x24, 0x7a, 0xc3, 0xbe, 0x23, 0x7b,
	0x8c, 0xe2, 0xc8, 0x1f, 0x64, 0xbe, 0x81, 0xa5, 0xc8, 0xdc, 0xf6, 0xac, 0x2a, 0x77, 0x0c, 0x24,
	0x27, 0xba, 0xd5, 0x3b, 0x37, 0x71, 0x68, 0x50, 0x87, 0x06, 0x13, 0xdf, 0x9e, 0xc6, 0x19, 0x29,
	0x9d, 0x8b, 0x0a, 0x14, 0xa3, 0x74, 0x41, 0xba, 0xf0, 0x91, 0x0b, 0xd2, 0x5d, 0x9d, 0xc9, 0xe1,
	0xa8, 0xb5, 0x20, 0xed, 0x01, 0x45, 0xa1, 0xc3, 0x87, 0x25, 0x31, 0x82, 0x32, 0x9f, 0x7c, 0x0f,
	0x2b, 0xf3, 0x6b, 0x59, 0x42, 0xe2, 0x56, 0x68, 0xa6, 0x1d, 0xbc, 0xaf, 0x7e, 0x7c, 0x57, 0x3d,
	0x37, 0xec, 0x62, 0x92, 0x83, 0x43, 0x89, 0x9b, 0xb1, 0xc4, 0x57, 0x5f, 0x29, 0xdd, 0x37, 0x52,
	0x83, 0xf7, 0x05, 0x32, 0x0c, 0x3e, 0x0f, 0x0a, 0x83, 0x81, 0xe6, 0x40, 0x04, 0x25, 0x34, 0xf9,
	0x9e, 0x67, 0x65, 0xfe, 0x19, 0x16, 0x53, 0x38, 0x87, 0x99, 0x83, 0x3a, 0xd2, 0x8b, 0x9f, 0x52,
	0xdd, 0xbd, 0x02, 0x1e, 0x02, 0x37, 0x81, 0x7c, 0x6f, 0x30, 0x48, 0xea, 0x12, 0x4e, 0x99, 0x5f,
	0xc5, 0x6a, 0xcf, 0x9c, 0x1d, 0xaf, 0x86, 0xad, 0xa0, 0x74, 0x0d, 0xa5, 0xba, 0x7b, 0x31, 0x17,
	0x41, 0x7b, 0xed, 0x3e, 0x2c, 0xf3, 0x3e, 0xe0, 0x65, 0xb3, 0x79, 0x32, 0xf7, 0x7b, 0x62, 0x4f,
	0x9c, 0xd2, 0x5f, 0x1b, 0x8c, 0x8f, 0x7e, 0x47, 0x1b, 0x53, 0xe9, 0xb9, 0x98, 0x1c, 0x1c, 0x72,
	0x31, 0x1a, 0xc0, 0x9e, 0xed, 0xa4, 0x05, 0xd4, 0x0e, 0x10, 0x1d, 0x5d, 0xf4, 0x62, 0xda, 0x09,
	0xa5, 0x82, 0x5a, 0xa3, 0x5e, 0xdb, 0xf7, 0x95, 0xa0, 0x30, 0x12, 0x8a, 0x78, 0x83, 0x24, 0x74,
	0x41, 0x99, 0xaf, 0x60, 0x31, 0x85, 0x2b, 0x52, 0x3b, 0x46, 0x91, 0x6e, 0xe8, 0x11, 0x36, 0x80,
	0x79, 0x61, 0x51, 0x6a, 0x0b, 0x46, 0x34, 0xef, 0xcf, 0xcf, 0x15, 0x7a, 0x50, 0xd0, 0xd0, 0x07,
	0x72, 0x65, 0x64, 0x6f, 0x63, 0x65, 0x75, 0xb2, 0x5b, 0xfb, 0x30, 0x60, 0x0d, 0x6b, 0x15, 0x46,
	0x4f, 0x6f, 0xb1, 0x52, 0x44, 0xe8, 0x5b, 0xf9, 0x60, 0xb1, 0xd9, 0x30, 0x73, 0x10, 0x73, 0x8f,
	0x9a, 0x62, 0xee, 0x32, 0x5a, 0x71, 0x8b, 0x0e, 0x1e, 0xb7, 0xcc, 0x6f, 0x21, 0xb1, 0xb7, 0x9a,
	0xb0, 0xa4, 0xdc, 0xde, 0xc5, 0x28, 0x67, 0xbb, 0x94, 0xbe, 0x2f, 0xb1, 0x69, 0x95, 0xde, 0xd3,
	0xb4, 0xc6, 0xff, 0xaf, 0x43, 0xf1, 0x41, 0x50, 0x88, 0x38, 0xc3, 0x7d, 0xa0, 0xb0, 0x55, 0xfb,
	0x81, 0x3e, 0x4c, 0x29, 0xb7, 0x34, 0x23, 0x9b, 0x6e, 0x44, 0x97, 0xc8, 0x9e, 0xb5, 0x32, 0xbf,
	0x9a, 0xc5, 0x43, 0xb9, 0x65, 0x89, 0xfe, 0x21, 0xb5, 0xe7, 0xfb, 0x94, 0xdc, 0xa3, 0x8c, 0x3c,
	0x48, 0x97, 0xa9, 0xf1, 0x7a, 0x02, 0x1e, 0xe3, 0xfc, 0x23, 0x58, 0xa2, 0xd9, 0x9a, 0x6f, 0x8b,
	0x1c, 0x09, 0x85, 0x03, 0xef, 0x8a, 0x7e, 0xcd, 0xea, 0x82, 0xf8, 0x57, 0xf7, 0xf3, 0x32, 0xbf,
	0x0d, 0x6c, 0x61, 0xb3, 0xbf, 0xe5, 0x56, 0xe2, 0xed, 0x82, 0x17, 0x50, 0xaf, 0x9e, 0x22, 0x4a,
	0x0c, 0x9c, 0xc0, 0xcb, 0x38, 0xbf, 0xcc, 0x03, 0x4f, 0x65, 0x9b, 0x29, 0xb5, 0xfe, 0xea, 0x61,
	0x19, 0x1e, 0xe6, 0xbc, 0x53, 0x08, 0x96, 0xe0, 0x02, 0xc9, 0x3e, 0x6f, 0x38, 0xe0, 0x3d, 0x14,
	0x14, 0x75, 0xc8, 0xb5, 0x60, 0x95, 0xed, 0xe7, 0xc3, 0xaa, 0x3d, 0xa6, 0xca, 0x82, 0x5b, 0xe6,
	0x6b, 0x48, 0x65, 0xa1, 0x52, 0xe9, 0xbd, 0xa4, 0xd9, 0x20, 0x27, 0x18, 0xeb, 0xf7, 0xc8, 0xb8,
	0xa6, 0xc0, 0x90, 0x9a, 0x42, 0x1b, 0xc8, 0x3f, 0x2a, 0xb6, 0x13, 0xb4, 0xf5, 0xc9, 0xfc, 0x0e,
	0x56, 0x7b, 0xe6, 0xb6, 0x61, 0x6e, 0xcc, 0x51, 0xb1, 0xfd, 0xa7, 0xb1, 0xb3, 0xc4, 0xaa, 0x27,
	0xbb, 0xb0, 0xb4, 0x1a, 0x65, 0x92, 0x92, 0xc5, 0x8a, 0xf0, 0x32, 0xfb, 0x0e, 0x6e, 0xe9, 0xdb,
	0x6f, 0xe2, 0x64, 0xf4, 0x2d, 0xf2, 0xb7, 0xa6, 0x6a, 0xdb, 0xc1, 0xb7, 0xd8, 0xd5, 0x82, 0xc6,
	0x1f, 0xbe, 0x0f, 0x0a, 0x25, 0x5f, 0xa8, 0x55, 0x47, 0xdb, 0x26, 0x99, 0xaf, 0x23, 0x7a, 0x6c,
	0xc7, 0x2b, 0xc7, 0xc7, 0xaf, 0x26, 0xfa, 0x87, 0x94, 0xeb, 0xd7, 0x7f, 0x1a, 0x3b, 0xab, 0xf4,
	0x5e, 0x50, 0x3a, 0xc6, 0x92, 0x67, 0x8f, 0x2b, 0x57, 0xee, 0xfd, 0x34, 0x36, 0xd0, 0x14, 0x0c,
	0x1d, 0xf2, 0x06, 0x5d, 0x8c, 0x2f, 0xd8, 0x26, 0x45, 0xc4, 0xb0, 0x8b, 0x41, 0xf9, 0x43, 0xab,
	0xd7, 0x27, 0x3e, 0xf4, 0xac, 0x0c, 0x2f, 0x17, 0x8a, 0xf0, 0x00, 0x61, 0x1e, 0x19, 0x20, 0x94,
	0xa4, 0x07, 0x08, 0x78, 0x55, 0xb8, 0x05, 0xcc, 0xf3, 0x8b, 0x87, 0xbd, 0x6d, 0xc1, 0x08, 0x81,
	0x61, 0x7c, 0x5d, 0x43, 0x68, 0x5c, 0x05, 0x96, 0x01, 0xe7, 0xf9, 0x4a, 0xc7, 0x98, 0xa0, 0xbf,
	0xd1, 0xcc, 0xef, 0x17, 0x25, 0x1f, 0xe9, 0x53, 0x20, 0xce, 0x29, 0x4a, 0x3e, 0xae, 0x1a, 0x4f,
	0x49, 0x8e, 0xdc, 0x53, 0x2f, 0x9d, 0x8f, 0x47, 0xcf, 0xeb, 0x85, 0xfe, 0xcc, 0x12, 0xbf, 0x96,
	0x04, 0x9d, 0xec, 0x12, 0xd0, 0x34, 0xf7, 0x2e, 0x99, 0x7f, 0x05, 0xbc, 0xcc, 0x66, 0x77, 0x33,
	0x0e, 0xe2, 0x42, 0x9c, 0xce, 0x5a, 0x73, 0x51, 0x73, 0x1d, 0x2e, 0x5d, 0x9c, 0xd3, 0x8c, 0xea,
	0x3c, 0x57, 0x08, 0x9e, 0xb2, 0x32, 0x22, 0xf8, 0xe1, 0x04, 0x79, 0x01, 0x3f, 0xf1, 0x53, 0x04,
	0x7b, 0x79, 0x9a, 0xd7, 0x93, 0x8f, 0x1c, 0xf0, 0x0b, 0x79, 0x01, 0xbf, 0xd5, 0xa9, 0xf3, 0x7e,
	0x3e, 0xa7, 0xde, 0x49, 0x9c, 0x1a, 0x7b, 0xe1, 0xc6, 0xc7, 0x70, 0x6a, 0xe2, 0xcd, 0x8d, 0xd8,
	0x9b, 0xb1, 0x53, 0xf1, 0x32, 0xff, 0x3b, 0xec, 0xcd, 0x5b, 0x0c, 0x6f, 0x76, 0x31, 0x16, 0x67,
	0x9e, 0x54, 0x4a, 0xe4, 0xab, 0x07, 0x74, 0x5f, 0x2d, 0xd4, 0x6f, 0x4c, 0x78, 0x22, 0xde, 0x36,
	0x8b, 0xaf, 0x6a, 0x87, 0x0d, 0xc3, 0x55, 0xdd, 0x4c, 0x6e, 0x4f, 0xcd, 0xe2, 0x88, 0x45, 0x8f,
	0xe5, 0x88, 0xf3, 0x66, 0xc6, 0x11, 0xa1, 0x00, 0x8a, 0x7d, 0xde, 0x88, 0xd8, 0x14, 0x0a, 0xb7,
	0x93, 0xa2, 0x13, 0x3a, 0x42, 0xa4, 0x89, 0xdc, 0x5a, 0xcc, 0xd7, 0xa8, 0x6c, 0xd1, 0x8a, 0x4a,
	0xed, 0x92, 0x8b, 0xf1, 0xb5, 0x49, 0x91, 0x50, 0xb3, 0x90, 0x9e, 0xe2, 0x1c, 0x2c, 0x02, 0x4b,
	0xf0, 0x51, 0xf8, 0x97, 0x13, 0x3f, 0x8f, 0x01, 0x70, 0x8c, 0x08, 0xd3, 0x50, 0x3f, 0xcb, 0x3e,
	0x4e, 0xad, 0x94, 0x8e, 0xdb, 0xf9, 0x33, 0x14, 0xb7, 0x25, 0xda, 0xd3, 0xbd, 0x4f, 0xec, 0xe9,
	0x8f, 0x16, 0xb5, 0xdf, 0x33, 0xef, 0x04, 0x71, 0x26, 0x76, 0xc2, 0xe3, 0xc4, 0xec, 0x39, 0xdd,
	0x2a, 0xe9, 0x98, 0x9d, 0xd5, 0xb5, 0xf5, 0x32, 0xcf, 0x64, 0x31, 0x9b, 0xf2, 0x0b, 0x14, 0xb3,
	0xad, 0x8c, 0x7e, 0x8d, 0xd9, 0xbf, 0xc6, 0xec, 0xb9, 0x8a, 0xd9, 0xff, 0x53, 0x00, 0x56, 0x6a,
	0x39, 0xb8, 0xee, 0x8d, 0xf5, 0xe2, 0xe1, 0x40, 0x4b, 0x00, 0x9d, 0x7a, 0xe6, 0x3e, 0x78, 0xbf,
	0xa9, 0x7f, 0x55, 0xec, 0xe7, 0x2f, 0xc9, 0xbc, 0x87, 0xc5, 0x94, 0x19, 0xf8, 0xac, 0x7f, 0x06,
	0x25, 0xb8, 0x4a, 0xb3, 0x2b, 0x9d, 0x0f, 0x7b, 0x64, 0xfe, 0x45, 0xd6, 0xa0, 0x72, 0x1c, 0x5e,
	0x04, 0xbb, 0xe4, 0x54, 0xa5, 0x1f, 0x3c, 0x56, 0x30, 0xa6, 0x53, 0x25, 0x9b, 0x82, 0x27, 0x2f,
	0xd9, 0x14, 0x3e, 0x41, 0xc9, 0xa6, 0xc8, 0x5a, 0xb2, 0xc1, 0x37, 0x3b, 0xb9, 0x4a, 0x36, 0x6f,
	0xca, 0xfc, 0x1b, 0x60, 0x1f, 0xbb, 0x22, 0xbb, 0x5f, 0xe8, 0x81, 0x6f, 0x6d, 0xf2, 0xfc, 0xf7,
	0x4a, 0xef, 0x05, 0xbd, 0x88, 0x75, 0x46, 0x3d, 0xd5, 0xa1, 0x5e, 0x3d, 0x45, 0x82, 0xc1, 0xf0,
	0x40, 0xfc, 0xc1, 0xa9, 0x6c, 0xd1, 0xd0, 0xf9, 0x63, 0x1e, 0x58, 0x95, 0xd3, 0xe1, 0xe6, 0xa0,
	0xfa, 0xd1, 0x63, 0x33, 0x1d, 0x4e, 0x9f, 0xb5, 0x1e, 0x4e, 0x33, 0xe5, 0x44, 0xe7, 0x54, 0x54,
	0x2f, 0xc4, 0xe7, 0x54, 0x1e, 0xb3, 0xa7, 0x35, 0xc7, 0x07, 0xd2, 0x1c, 0x67, 0xd6, 0xcc, 0x81,
	0x4f, 0x7c, 0x72, 0xfd, 0xef, 0x3c, 0xb0, 0x4c, 0x13, 0xb6, 0x0e, 0x7b, 0xbb, 0x2e, 0x73, 0x7a,
	0x0b, 0x5b, 0x1b, 0xb6, 0x6c, 0x73, 0xd0, 0xb0, 0x75, 0x20, 0x4b, 0x26, 0xe6, 0x46, 0xea, 0x19,
	0x64, 0x0a, 0xee, 0x70, 0x86, 0xc2, 0x64, 0xcd, 0x50, 0xaa, 0xb4, 0x0c, 0x85, 0x9a, 0xe6, 0xf6,
	0xc9, 0xfc, 0x9f, 0xc1, 0xdb, 0xec, 0x64, 0x36, 0xe0, 0x56, 0x5b, 0xfc, 0x15, 0x17, 0x5d, 0xc9,
	0xc7, 0xe8, 0x18, 0x9b, 0x1a, 0xba, 0xff, 0x96, 0x07, 0x96, 0x67, 0x5f, 0x60, 0x0e, 0xdc, 0xf6,
	0x2d, 0x93, 0xd7, 0xae, 0xb6, 0x7a, 0xad, 0x55, 0x46, 0xe4, 0xb3, 0xcf, 0xc8, 0x3c, 0x43, 0x7c,
	0xd6, 0x4e, 0x78, 0x63, 0x1b, 0x50, 0xde, 0x3a, 0x13, 0xae, 0x88, 0x02, 0xc7, 0x1e, 0x3d, 0xde,
	0x66, 0x38, 0xe3, 0xdc, 0xe1, 0xc9, 0x6c, 0xba, 0xe0, 0x51, 0x99, 0x3f, 0x02, 0x0e, 0xb3, 0x93,
	0xeb, 0xce, 0xb1, 0x16, 0x27, 0x54, 0x3e, 0x1c, 0xd7, 0x12, 0xa7, 0xcf, 0x63, 0xa9, 0x8b, 0xf7,
	0xa6, 0xe1, 0x8a, 0x77, 0xf2, 0x30, 0x6a, 0x67, 0x5b, 0x68, 0x0e, 0x9c, 0x51, 0x9c, 0x3c, 0x84,
	0x66, 0x4a, 0x89, 0xdc, 0x71, 0x9d, 0xcc, 0x3f, 0x4b, 0xdc, 0x71, 0x25, 0x09, 0xa1, 0xb4, 0x35,
	0x66, 0xd2, 0x29, 0x4f, 0x15, 0x03, 0x98, 0x19, 0xc8, 0xe1, 0x5a, 0x2a, 0xe3, 0x46, 0xbd, 0x35,
	0x5a, 0xc6, 0x5d, 0x4e, 0xc7, 0xe7, 0x86, 0x7a, 0x94, 0x76, 0x3f, 0x8b, 0x73, 0x56, 0x6c, 0x98,
	0xc5, 0x32, 0xbf, 0x10, 0xe7, 0xac, 0xc0, 0xc8, 0x59, 0x71, 0x1a, 0xba, 0xde, 0x94, 0x24, 0x23,
	0x96, 0x38, 0x0b, 0x2d, 0xa3, 0x93, 0x64, 0x92, 0x08, 0xbf, 0x60, 0xe4, 0x95, 0x58, 0x19, 0xb4,
	0x3f, 0xd3, 0x79, 0xe5, 0x12, 0x3a, 0xaf, 0x4c, 0xf5, 0x0f, 0x2b, 0x1d, 0x63, 0xca, 0xc8, 0x03,
	0x23, 0xbb, 0xe4, 0x41, 0x19, 0xf9, 0x89, 0xba, 0x37, 0x1e, 0xad, 0xb0, 0x65, 0x9a, 0x62, 0xe4,
	0x57, 0x45, 0xb3, 0x90, 0x5f, 0x75, 0xda, 0x40, 0x09, 0xfa, 0xb5, 0xc7, 0xf8, 0x07, 0x1c, 0x2d,
	0x4e, 0xb3, 0x06, 0x95, 0x6b, 0xb4, 0xac, 0xa2, 0x1f, 0x22, 0xcc, 0x6b, 0x91, 0xcd, 0x8e, 0x86,
	0xba, 0x18, 0x3a, 0x6e, 0xbb, 0x18, 0xf5, 0xd2, 0x79, 0xf5, 0xd2, 0x79, 0x7a, 0x03, 0x09, 0x06,
	0x7f, 0xb8, 0x2b, 0x23, 0x63, 0x46, 0xad, 0x0e, 0x46, 0xc6, 0xcc, 0xe4, 0xcc, 0x95, 0xab, 0xad,
	0xa9, 0x32, 0x0c, 0x80, 0x32, 0xfd, 0x37, 0x52, 0xa9, 0xc4, 0x30, 0x9a, 0xe9, 0x05, 0xc7, 0x61,
	0xa6, 0xd9, 0x95, 0x49, 0x7c, 0x3b, 0x9a, 0x18, 0xbd, 0xae, 0x9c, 0xec, 0x4a, 0x8c, 0x0f, 0x57,
	0x27, 0xbb, 0xbf, 0xc0, 0x7e, 0x26, 0x98, 0x38, 0xa4, 0x4f, 0x0e, 0x60, 0x86, 0x4e, 0x0e, 0xaf,
	0x91, 0x76, 0x75, 0xd1, 0x8f, 0xda, 0x63, 0x48, 0x9b, 0x86, 0x4e, 0xe3, 0xd6, 0xd1, 0x7d, 0xee,
	0x2e, 0x46, 0xbd, 0x31, 0xa6, 0x8c, 0xf5, 0xba, 0x99, 0xf6, 0xf6, 0xf6, 0xf6, 0xaa, 0xdd, 0xbb,
	0xab, 0xfc, 0x7e, 0xe6, 0xc8, 0x11, 0x77, 0x73, 0xb3, 0x5b, 0x92, 0x04, 0x7d, 0x8e, 0xc6, 0x12,
	0x37, 0x9d, 0xe9, 0xff, 0x6a, 0x83, 0x59, 0x12, 0x1a, 0xb7, 0x2e, 0x3e, 0x31, 0xac, 0xf6, 0x3f,
	0x78, 0x24, 0x96, 0x64, 0x0e, 0xac, 0x35, 0x9a, 0xea, 0xe7, 0x53, 0xfd, 0x6e, 0x7a, 0x53, 0x7d,
	0x09, 0x96, 0x32, 0x1e, 0x8b, 0x19, 0xed, 0xf4, 0x54, 0x8b, 0x5c, 0x79, 0xb6, 0x16, 0x39, 0x2c,
	0x05, 0x9a, 0x42, 0x68, 0xce, 0x7f, 0xb1, 0x81, 0x0a, 0x0b, 0x3c, 0xc2, 0xcd, 0xa0, 0x84, 0x38,
	0x72, 0xba, 0xfd, 0xc2, 0x8e, 0xda, 0x2f, 0xd2, 0x54, 0xae, 0x18, 0xfb, 0x9d, 0x16, 0x57, 0xd2,
	0x44, 0xb8, 0x03, 0x94, 0x92, 0x87, 0x3d, 0x46, 0x91, 0x7e, 0xa5, 0xcc, 0x2f, 0x63, 0x69, 0x3a,
	0x57, 0x46, 0x7c, 0x16, 0xef, 0x7e, 0xfa, 0x15, 0x74, 0x83, 0xc2, 0x63, 0x68, 0xfb, 0xe6, 0x1b,
	0x5d, 0x71, 0x98, 0xc2, 0xd9, 0x49, 0xcc, 0xb8, 0x3a, 0x94, 0x1c, 0xb9, 0x45, 0xae, 0x88, 0x07,
	0x4e, 0x68, 0xbb, 0x18, 0x0f, 0x70, 0x9e, 0xc9, 0x03, 0x0b, 0x33, 0x62, 0xeb, 0x9c, 0xea, 0x62,
	0x54, 0x71, 0x88, 0x3e, 0xcb, 0x65, 0xfe, 0xb7, 0xac, 0x41, 0xe5, 0xca, 0xe8, 0x10, 0x4f, 0x15,
	0x7d, 0xe0, 0x0e, 0xdd, 0x0e, 0x38, 0x14, 0xa2, 0xa3, 0x12, 0xb1, 0xc3, 0x4a, 0xda, 0x0e, 0xf4,
	0x7c, 0xb3, 0x35, 0xfe, 0xd3, 0x06, 0x1c, 0xb9, 0x13, 0xf6, 0x69, 0xdc, 0x05, 0x1f, 0xb0, 0xde,
	0x05, 0xaf, 0xa4, 0x01, 0x2d, 0x93, 0x3d, 0x41, 0x4a, 0xfd, 0x5a, 0x18, 0xd2, 0xf8, 0x61, 0xbd,
	0x1c, 0x26, 0x6d, 0x39, 0x93, 0x08, 0x9a, 0xf5, 0x9e, 0xf8, 0x3f, 0x6c, 0xc0, 0x9e, 0x2b, 0xad,
	0x9b, 0x86, 0x66, 0xfb, 0xad, 0x9a, 0x99, 0xae, 0xe2, 0x2c, 0xcc, 0xad, 0x6a, 0xd1, 0x71, 0xd7,
	0xaa, 0xd6, 0x36, 0x99, 0xdf, 0x0c, 0x36, 0xb1, 0x39, 0x65, 0xe4, 0xec, 0xa6, 0x6c, 0x9b, 0x56,
	0xed, 0xbf, 0xc8, 0x67, 0xcb, 0x9e, 0x24, 0x4c, 0x43, 0xb9, 0x3f, 0x59, 0x95, 0x5b, 0x41, 0x2b,
	0x97, 0xc1, 0x7e, 0x3a, 0xea, 0x6d, 0x97, 0xf9, 0xad, 0x60, 0x33, 0x3b, 0x89, 0x9c, 0x93, 0x28,
	0xb8, 0x09, 0x94, 0xbf, 0x22, 0x7a, 0x83, 0x91, 0x23, 0xef, 0x92, 0x24, 0xd0, 0xad, 0x1d, 0xc4,
	0xc1, 0x0a, 0xd6, 0x42, 0xe6, 0x4a, 0xc9, 0x33, 0xc3, 0xef, 0x6d, 0x70, 0x5e, 0xb3, 0x81, 0x8a,
	0xf4, 0x7b, 0x92, 0xd2, 0x6d, 0x01, 0x45, 0x52, 0xc4, 0x1b, 0x69, 0xd3, 0x9b, 0x7e, 0x56, 0xc9,
	0xfc, 0x72, 0x96, 0x90, 0x38, 0xa8, 0x5e, 0x3d, 0xa7, 0x9c, 0x1e, 0x54, 0x3f, 0xbe, 0x17, 0x1f,
	0xff, 0x28, 0x71, 0xfa, 0x3b, 0xb5, 0xa3, 0x53, 0x20, 0xef, 0xe0, 0x6b, 0xa0, 0xb4, 0x39, 0xd4,
	0xd2, 0x14, 0x6a, 0xc4, 0xb3, 0xf3, 0x0c, 0x24, 0x2c, 0x43, 0x74, 0x86, 0xf0, 0x58, 0x8e, 0x79,
	0xc4, 0x7f, 0xb8, 0x96, 0xbc, 0x7f, 0x21, 0x31, 0x70, 0x82, 0xc1, 0x6f, 0x09, 0x37, 0x9a, 0x87,
	0x73, 0x23, 0x28, 0xdd, 0x1b, 0x68, 0x69, 0xd2, 0x55, 0xd2, 0xe2, 0x16, 0x58, 0xc5, 0xd2, 0x34,
	0x6e, 0x81, 0xf6, 0xa0, 0x29, 0xc3, 0x90, 0x44, 0xcc, 0x79, 0x10, 0x94, 0xe1, 0x01, 0x44, 0xa1,
	0x2a, 0x90, 0x1f, 0x16, 0x23, 0x44, 0x9b, 0x65, 0x32, 0x6f, 0x67, 0xf3, 0x05, 0x31, 0xc2, 0x2d,
	0x54, 0x7b, 0xfa, 0x94, 0xd3, 0xd7, 0x71, 0x4e, 0xc8, 0xec, 0x0d, 0xb5, 0x34, 0x09, 0xda, 0x38,
	0xb7, 0xf6, 0xc5, 0xc0, 0x32, 0xb6, 0x58, 0xe7, 0xc1, 0x55, 0xa4, 0x57, 0x50, 0x3e, 0x3a, 0xa7,
	0xc4, 0xfa, 0xb9, 0x7f, 0x2c, 0x06, 0xc0, 0x53, 0xd7, 0xa8, 0xff, 0xe3, 0xf6, 0x45, 0x1b, 0x98,
	0x6f, 0xea, 0x78, 0x87, 0x8c, 0xc9, 0xe1, 0xb3, 0x34, 0xc3, 0x3b, 0x96, 0x65, 0x69, 0xfc, 0xd0,
	0x05, 0x76, 0xee, 0x94, 0x79, 0x27, 0x34, 0xb5, 0xcb, 0x3b, 0x20, 0xfd, 0x84, 0xd3, 0xd5, 0x0f,
	0xfe, 0x3d, 0xfe, 0x51, 0xde, 0x72, 0xe7, 0xd2, 0x6a, 0x83, 0x53, 0xf5, 0xb1, 0xda, 0x6a, 0xf2,
	0x53, 0x72, 0xdb, 0x58, 0x38, 0x61, 0x03, 0xc0, 0x68, 0x6e, 0x87, 0x26, 0x57, 0xcd, 0x68, 0x7a,
	0x9f, 0x5c, 0xa6, 0x36, 0x99, 0xe7, 0x61, 0x19, 0x5d, 0x89, 0x72, 0xd4, 0xe2, 0x62, 0x55, 0x8e,
	0x76, 0x7b, 0x17, 0x93, 0xd9, 0xb1, 0x84, 0x44, 0x5e, 0x0f, 0xd7, 0xe5, 0x10, 0xb9, 0xfa, 0x3d,
	0x4b, 0x6f, 0xfd, 0xfb, 0xf0, 0x6f, 0x36, 0x30, 0xdf, 0xd4, 0xf7, 0x68, 0xb6, 0x6d, 0xb6, 0x96,
	0xc8, 0xc9, 0xf5, 0x68, 0x44, 0xb6, 0xa5, 0x9b, 0x26, 0x1d, 0xa6, 0x16, 0x4a, 0x4a, 0xd0, 0x4a,
	0xc7, 0x33, 0x53, 0x0b, 0xfa, 0xbe, 0x66, 0xe7, 0xb3, 0x36, 0x30, 0xdf, 0xd4, 0x02, 0x69, 0x96,
	0x32, 0x5b, 0x77, 0xe4, 0xe4, 0x52, 0x3e, 0x2f, 0xf3, 0xe5, 0x0e, 0x53, 0xff, 0x24, 0x92, 0x68,
	0x0d, 0xfb, 0x28, 0x12, 0xc1, 0x7f, 0xb5, 0x81, 0x32, 0xba, 0xdf, 0x07, 0xae, 0xca, 0xd1, 0x0b,
	0xa1, 0x1f, 0x18, 0x1d, 0x4c, 0xee, 0x01, 0x44, 0xa2, 0x76, 0x99, 0xdf, 0x0f, 0x61, 0x66, 0xdf,
	0x94, 0x83, 0xa7, 0xbb, 0xab, 0x94, 0xde, 0x0f, 0xd4, 0x8f, 0xef, 0x6a, 0x8f, 0xa3, 0x37, 0x73,
	0x77, 0x57, 0x29, 0xf2, 0x59, 0xba, 0x1c, 0x88, 0x54, 0xfb, 0x2d, 0xcc, 0xe5, 0xc8, 0xf0, 0xdf,
	0x6c, 0xd9, 0xda, 0x4b, 0xd0, 0xab, 0xa7, 0xad, 0x72, 0x67, 0x34, 0xaf, 0x38, 0x9c, 0x53, 0x0d,
	0x91, 0x5a, 0x9d, 0xad, 0x32, 0x5f, 0x07, 0x97, 0x91, 0x06, 0x31, 0xbd, 0xbf, 0xc5, 0xa4, 0xe5,
	0xea, 0xc9, 0x5b, 0x60, 0xf0, 0x28, 0xa4, 0xc8, 0x6a, 0xe8, 0xb4, 0x28, 0xe2, 0x4d, 0x2f, 0x78,
	0x50, 0xd7, 0x89, 0xbb, 0x5c, 0x02, 0x8a, 0xd3, 0xb9, 0xd4, 0x5d, 0x1b, 0x28, 0x37, 0xdf, 0xb0,
	0x9b, 0x15, 0xcb, 0x7a, 0x8d, 0x6f, 0x56, 0x2c, 0xfb, 0x05, 0xbd, 0x73, 0xbf, 0xcc, 0x2f, 0xd7,
	0x23, 0x09, 0x06, 0x0d, 0x87, 0xe9, 0x09, 0x49, 0xcc, 0x39, 0xab, 0xb2, 0x9b, 0x3e, 0xed, 0x54,
	0x68, 0x2f, 0x56, 0xeb, 0x95, 0x01, 0xcd, 0xe3, 0xc7, 0x6d, 0xa0, 0xdc, 0x7c, 0xc1, 0x64, 0x16,
	0x39, 0xeb, 0x2d, 0x96, 0x59, 0xe4, 0xec, 0xf7, 0x53, 0x4e, 0x3f, 0x12, 0x99, 0xbe, 0xee, 0x72,
	0x98, 0x9e, 0x90, 0xc8, 0x2f, 0x3a, 0xdc, 0xd3, 0x12, 0xb9, 0xfa, 0x3d, 0xa3, 0xac, 0x81, 0x76,
	0xec, 0xff, 0xda, 0xc0, 0xd2, 0x1c, 0xf5, 0x61, 0xc8, 0x4e, 0x5d, 0x9c, 0x4d, 0x6f, 0x9c, 0xf5,
	0x8f, 0x34, 0x96, 0xa8, 0x76, 0xda, 0x26, 0xf3, 0x2f, 0xc3, 0xa7, 0xa7, 0xac, 0x68, 0x3b, 0xa6,
	0x1e, 0x82, 0xac, 0xb0, 0x1d, 0x6e, 0x9b, 0x9e, 0x15, 0xfc, 0x94, 0x96, 0x0f, 0x6d, 0xb8, 0x29,
	0xd0, 0x9a, 0x48, 0xc1, 0xb5, 0x53, 0x55, 0xf9, 0x74, 0xdd, 0x2b, 0xa7, 0x1e, 0x48, 0x14, 0x3f,
	0x6f, 0x93, 0xf9, 0x1d, 0x70, 0x25, 0xd6, 0x0a, 0x2b, 0x63, 0x9c, 0x34, 0xf4, 0x7a, 0x94, 0x63,
	0x8a, 0xf7, 0x48, 0xe5, 0x97, 0x60, 0xdd, 0xb4, 0x54, 0x96, 0x4c, 0x5f, 0xbe, 0x9a, 0x9c, 0x23,
	0xe0, 0x00, 0xe9, 0x58, 0xcb, 0x4c, 0xb3, 0xe0, 0xba, 0xa9, 0xeb, 0x4a, 0xba, 0x01, 0xd8, 0x47,
	0x19, 0x4a, 0x4c, 0x30, 0x64, 0x93, 0xf9, 0x37, 0xa0, 0xa9, 0x30, 0x47, 0xbe, 0xaa, 0xe5, 0xa8,
	0x91, 0x36, 0xc7, 0x34, 0xc6, 0x22, 0xd3, 0xec, 0x84, 0x2f, 0x3d, 0x89, 0x69, 0x8c, 0xd3, 0x53,
	0x6f, 0x1e, 0x98, 0x47, 0x92, 0x42, 0xd8, 0x6d, 0x33, 0x7e, 0x3b, 0x68, 0x75, 0xcd, 0x59, 0xa5,
	0x19, 0xcd, 0x2c, 0x19, 0xa5, 0xb3, 0x4e, 0xe6, 0x9d, 0x0e, 0x46, 0x3d, 0xff, 0x69, 0x4a, 0xee,
	0xe1, 0xf7, 0x36, 0xb8, 0x18, 0xfc, 0x4f, 0x5d, 0x61, 0xd1, 0xeb, 0x47, 0xff, 0x42, 0xa4, 0x9e,
	0xff, 0x54, 0xbd, 0x7f, 0x06, 0x29, 0x61, 0x87, 0x4f, 0x59, 0x94, 0x38, 0x42, 0x56, 0x7f, 0x17,
	0x14, 0x68, 0x79, 0x18, 0x5c, 0x6a, 0xc2, 0x4d, 0x23, 0x11, 0x74, 0xd8, 0x33, 0x5f, 0x90, 0xf5,
	0x5f, 0x94, 0xf9, 0xa7, 0x1d, 0xab, 0x32, 0xd6, 0x0f, 0x06, 0x8e, 0x89, 0x96, 0xe5, 0x97, 0xc0,
	0x45, 0x56, 0x1b, 0x06, 0x5a, 0x9a, 0x3c, 0xaf, 0xc8, 0xfc, 0x4b, 0x70, 0x39, 0x58, 0xe4, 0xa9,
	0x6b, 0x64, 0x08, 0xf6, 0xa0, 0x7c, 0xb0, 0x3e, 0xe4, 0xe3, 0x0a, 0x6b, 0x36, 0xd4, 0x6c, 0xa8,
	0x65, 0x6d, 0x36, 0x6e, 0x81, 0xb7, 0xb5, 0x35, 0x18, 0xf0, 0xa1, 0x66, 0xce, 0xea, 0xbf, 0x48,
	0xa1, 0x16, 0x77, 0x06, 0xe5, 0x50, 0x11, 0x6a, 0xe1, 0xdc, 0xf8, 0x7f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xc6, 0xf5, 0x4e, 0x0c, 0xba, 0x48, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BCSProjectClient is the client API for BCSProject service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BCSProjectClient interface {
	CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error)
	GetProject(ctx context.Context, in *GetProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error)
	UpdateProject(ctx context.Context, in *UpdateProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error)
	DeleteProject(ctx context.Context, in *DeleteProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error)
	ListProjects(ctx context.Context, in *ListProjectsRequest, opts ...grpc.CallOption) (*ListProjectsResponse, error)
	ListAuthorizedProjects(ctx context.Context, in *ListAuthorizedProjReq, opts ...grpc.CallOption) (*ListAuthorizedProjResp, error)
}

type bCSProjectClient struct {
	cc *grpc.ClientConn
}

func NewBCSProjectClient(cc *grpc.ClientConn) BCSProjectClient {
	return &bCSProjectClient{cc}
}

func (c *bCSProjectClient) CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error) {
	out := new(ProjectResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.BCSProject/CreateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bCSProjectClient) GetProject(ctx context.Context, in *GetProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error) {
	out := new(ProjectResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.BCSProject/GetProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bCSProjectClient) UpdateProject(ctx context.Context, in *UpdateProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error) {
	out := new(ProjectResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.BCSProject/UpdateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bCSProjectClient) DeleteProject(ctx context.Context, in *DeleteProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error) {
	out := new(ProjectResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.BCSProject/DeleteProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bCSProjectClient) ListProjects(ctx context.Context, in *ListProjectsRequest, opts ...grpc.CallOption) (*ListProjectsResponse, error) {
	out := new(ListProjectsResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.BCSProject/ListProjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bCSProjectClient) ListAuthorizedProjects(ctx context.Context, in *ListAuthorizedProjReq, opts ...grpc.CallOption) (*ListAuthorizedProjResp, error) {
	out := new(ListAuthorizedProjResp)
	err := c.cc.Invoke(ctx, "/bcsproject.BCSProject/ListAuthorizedProjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BCSProjectServer is the server API for BCSProject service.
type BCSProjectServer interface {
	CreateProject(context.Context, *CreateProjectRequest) (*ProjectResponse, error)
	GetProject(context.Context, *GetProjectRequest) (*ProjectResponse, error)
	UpdateProject(context.Context, *UpdateProjectRequest) (*ProjectResponse, error)
	DeleteProject(context.Context, *DeleteProjectRequest) (*ProjectResponse, error)
	ListProjects(context.Context, *ListProjectsRequest) (*ListProjectsResponse, error)
	ListAuthorizedProjects(context.Context, *ListAuthorizedProjReq) (*ListAuthorizedProjResp, error)
}

// UnimplementedBCSProjectServer can be embedded to have forward compatible implementations.
type UnimplementedBCSProjectServer struct {
}

func (*UnimplementedBCSProjectServer) CreateProject(ctx context.Context, req *CreateProjectRequest) (*ProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProject not implemented")
}
func (*UnimplementedBCSProjectServer) GetProject(ctx context.Context, req *GetProjectRequest) (*ProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProject not implemented")
}
func (*UnimplementedBCSProjectServer) UpdateProject(ctx context.Context, req *UpdateProjectRequest) (*ProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProject not implemented")
}
func (*UnimplementedBCSProjectServer) DeleteProject(ctx context.Context, req *DeleteProjectRequest) (*ProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProject not implemented")
}
func (*UnimplementedBCSProjectServer) ListProjects(ctx context.Context, req *ListProjectsRequest) (*ListProjectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProjects not implemented")
}
func (*UnimplementedBCSProjectServer) ListAuthorizedProjects(ctx context.Context, req *ListAuthorizedProjReq) (*ListAuthorizedProjResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAuthorizedProjects not implemented")
}

func RegisterBCSProjectServer(s *grpc.Server, srv BCSProjectServer) {
	s.RegisterService(&_BCSProject_serviceDesc, srv)
}

func _BCSProject_CreateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BCSProjectServer).CreateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.BCSProject/CreateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BCSProjectServer).CreateProject(ctx, req.(*CreateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BCSProject_GetProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BCSProjectServer).GetProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.BCSProject/GetProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BCSProjectServer).GetProject(ctx, req.(*GetProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BCSProject_UpdateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BCSProjectServer).UpdateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.BCSProject/UpdateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BCSProjectServer).UpdateProject(ctx, req.(*UpdateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BCSProject_DeleteProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BCSProjectServer).DeleteProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.BCSProject/DeleteProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BCSProjectServer).DeleteProject(ctx, req.(*DeleteProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BCSProject_ListProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProjectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BCSProjectServer).ListProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.BCSProject/ListProjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BCSProjectServer).ListProjects(ctx, req.(*ListProjectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BCSProject_ListAuthorizedProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAuthorizedProjReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BCSProjectServer).ListAuthorizedProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.BCSProject/ListAuthorizedProjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BCSProjectServer).ListAuthorizedProjects(ctx, req.(*ListAuthorizedProjReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _BCSProject_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bcsproject.BCSProject",
	HandlerType: (*BCSProjectServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateProject",
			Handler:    _BCSProject_CreateProject_Handler,
		},
		{
			MethodName: "GetProject",
			Handler:    _BCSProject_GetProject_Handler,
		},
		{
			MethodName: "UpdateProject",
			Handler:    _BCSProject_UpdateProject_Handler,
		},
		{
			MethodName: "DeleteProject",
			Handler:    _BCSProject_DeleteProject_Handler,
		},
		{
			MethodName: "ListProjects",
			Handler:    _BCSProject_ListProjects_Handler,
		},
		{
			MethodName: "ListAuthorizedProjects",
			Handler:    _BCSProject_ListAuthorizedProjects_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bcsproject.proto",
}

// VariableClient is the client API for Variable service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VariableClient interface {
	CreateVariable(ctx context.Context, in *CreateVariableRequest, opts ...grpc.CallOption) (*CreateVariableResponse, error)
	UpdateVariable(ctx context.Context, in *UpdateVariableRequest, opts ...grpc.CallOption) (*UpdateVariableResponse, error)
	ListVariableDefinitions(ctx context.Context, in *ListVariableDefinitionsRequest, opts ...grpc.CallOption) (*ListVariableDefinitionsResponse, error)
	ListClusterVariables(ctx context.Context, in *ListClusterVariablesRequest, opts ...grpc.CallOption) (*ListClusterVariablesResponse, error)
	ListNamespaceVariables(ctx context.Context, in *ListNamespaceVariablesRequest, opts ...grpc.CallOption) (*ListNamespaceVariablesResponse, error)
}

type variableClient struct {
	cc *grpc.ClientConn
}

func NewVariableClient(cc *grpc.ClientConn) VariableClient {
	return &variableClient{cc}
}

func (c *variableClient) CreateVariable(ctx context.Context, in *CreateVariableRequest, opts ...grpc.CallOption) (*CreateVariableResponse, error) {
	out := new(CreateVariableResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Variable/CreateVariable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *variableClient) UpdateVariable(ctx context.Context, in *UpdateVariableRequest, opts ...grpc.CallOption) (*UpdateVariableResponse, error) {
	out := new(UpdateVariableResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Variable/UpdateVariable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *variableClient) ListVariableDefinitions(ctx context.Context, in *ListVariableDefinitionsRequest, opts ...grpc.CallOption) (*ListVariableDefinitionsResponse, error) {
	out := new(ListVariableDefinitionsResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Variable/ListVariableDefinitions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *variableClient) ListClusterVariables(ctx context.Context, in *ListClusterVariablesRequest, opts ...grpc.CallOption) (*ListClusterVariablesResponse, error) {
	out := new(ListClusterVariablesResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Variable/ListClusterVariables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *variableClient) ListNamespaceVariables(ctx context.Context, in *ListNamespaceVariablesRequest, opts ...grpc.CallOption) (*ListNamespaceVariablesResponse, error) {
	out := new(ListNamespaceVariablesResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Variable/ListNamespaceVariables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VariableServer is the server API for Variable service.
type VariableServer interface {
	CreateVariable(context.Context, *CreateVariableRequest) (*CreateVariableResponse, error)
	UpdateVariable(context.Context, *UpdateVariableRequest) (*UpdateVariableResponse, error)
	ListVariableDefinitions(context.Context, *ListVariableDefinitionsRequest) (*ListVariableDefinitionsResponse, error)
	ListClusterVariables(context.Context, *ListClusterVariablesRequest) (*ListClusterVariablesResponse, error)
	ListNamespaceVariables(context.Context, *ListNamespaceVariablesRequest) (*ListNamespaceVariablesResponse, error)
}

// UnimplementedVariableServer can be embedded to have forward compatible implementations.
type UnimplementedVariableServer struct {
}

func (*UnimplementedVariableServer) CreateVariable(ctx context.Context, req *CreateVariableRequest) (*CreateVariableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVariable not implemented")
}
func (*UnimplementedVariableServer) UpdateVariable(ctx context.Context, req *UpdateVariableRequest) (*UpdateVariableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateVariable not implemented")
}
func (*UnimplementedVariableServer) ListVariableDefinitions(ctx context.Context, req *ListVariableDefinitionsRequest) (*ListVariableDefinitionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListVariableDefinitions not implemented")
}
func (*UnimplementedVariableServer) ListClusterVariables(ctx context.Context, req *ListClusterVariablesRequest) (*ListClusterVariablesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListClusterVariables not implemented")
}
func (*UnimplementedVariableServer) ListNamespaceVariables(ctx context.Context, req *ListNamespaceVariablesRequest) (*ListNamespaceVariablesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNamespaceVariables not implemented")
}

func RegisterVariableServer(s *grpc.Server, srv VariableServer) {
	s.RegisterService(&_Variable_serviceDesc, srv)
}

func _Variable_CreateVariable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVariableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VariableServer).CreateVariable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Variable/CreateVariable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VariableServer).CreateVariable(ctx, req.(*CreateVariableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Variable_UpdateVariable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateVariableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VariableServer).UpdateVariable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Variable/UpdateVariable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VariableServer).UpdateVariable(ctx, req.(*UpdateVariableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Variable_ListVariableDefinitions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListVariableDefinitionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VariableServer).ListVariableDefinitions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Variable/ListVariableDefinitions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VariableServer).ListVariableDefinitions(ctx, req.(*ListVariableDefinitionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Variable_ListClusterVariables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListClusterVariablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VariableServer).ListClusterVariables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Variable/ListClusterVariables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VariableServer).ListClusterVariables(ctx, req.(*ListClusterVariablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Variable_ListNamespaceVariables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNamespaceVariablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VariableServer).ListNamespaceVariables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Variable/ListNamespaceVariables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VariableServer).ListNamespaceVariables(ctx, req.(*ListNamespaceVariablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Variable_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bcsproject.Variable",
	HandlerType: (*VariableServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateVariable",
			Handler:    _Variable_CreateVariable_Handler,
		},
		{
			MethodName: "UpdateVariable",
			Handler:    _Variable_UpdateVariable_Handler,
		},
		{
			MethodName: "ListVariableDefinitions",
			Handler:    _Variable_ListVariableDefinitions_Handler,
		},
		{
			MethodName: "ListClusterVariables",
			Handler:    _Variable_ListClusterVariables_Handler,
		},
		{
			MethodName: "ListNamespaceVariables",
			Handler:    _Variable_ListNamespaceVariables_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bcsproject.proto",
}

// HealthzClient is the client API for Healthz service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HealthzClient interface {
	Healthz(ctx context.Context, in *HealthzRequest, opts ...grpc.CallOption) (*HealthzResponse, error)
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
}

type healthzClient struct {
	cc *grpc.ClientConn
}

func NewHealthzClient(cc *grpc.ClientConn) HealthzClient {
	return &healthzClient{cc}
}

func (c *healthzClient) Healthz(ctx context.Context, in *HealthzRequest, opts ...grpc.CallOption) (*HealthzResponse, error) {
	out := new(HealthzResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Healthz/Healthz", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *healthzClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Healthz/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HealthzServer is the server API for Healthz service.
type HealthzServer interface {
	Healthz(context.Context, *HealthzRequest) (*HealthzResponse, error)
	Ping(context.Context, *PingRequest) (*PingResponse, error)
}

// UnimplementedHealthzServer can be embedded to have forward compatible implementations.
type UnimplementedHealthzServer struct {
}

func (*UnimplementedHealthzServer) Healthz(ctx context.Context, req *HealthzRequest) (*HealthzResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Healthz not implemented")
}
func (*UnimplementedHealthzServer) Ping(ctx context.Context, req *PingRequest) (*PingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}

func RegisterHealthzServer(s *grpc.Server, srv HealthzServer) {
	s.RegisterService(&_Healthz_serviceDesc, srv)
}

func _Healthz_Healthz_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthzRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HealthzServer).Healthz(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Healthz/Healthz",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HealthzServer).Healthz(ctx, req.(*HealthzRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Healthz_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HealthzServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Healthz/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HealthzServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Healthz_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bcsproject.Healthz",
	HandlerType: (*HealthzServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Healthz",
			Handler:    _Healthz_Healthz_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _Healthz_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bcsproject.proto",
}
