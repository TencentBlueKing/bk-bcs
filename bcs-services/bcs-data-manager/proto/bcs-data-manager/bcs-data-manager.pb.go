/*
 * Tencent is pleased to support the open source community by making Blueking Container Service available.
 *  Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
 *  Licensed under the MIT License (the "License"); you may not use this file except
 *  in compliance with the License. You may obtain a copy of the License at
 *  http://opensource.org/licenses/MIT
 *  Unless required by applicable law or agreed to in writing, software distributed under
 *  the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 *  either express or implied. See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/bcs-data-manager/bcs-data-manager.proto

package datamanager

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetProjectInfoRequest struct {
	ProjectID            string   `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Dimension            string   `protobuf:"bytes,2,opt,name=dimension,proto3" json:"dimension,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProjectInfoRequest) Reset()         { *m = GetProjectInfoRequest{} }
func (m *GetProjectInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetProjectInfoRequest) ProtoMessage()    {}
func (*GetProjectInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_518799807a60b6f2, []int{0}
}

func (m *GetProjectInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectInfoRequest.Unmarshal(m, b)
}
func (m *GetProjectInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetProjectInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectInfoRequest.Merge(m, src)
}
func (m *GetProjectInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetProjectInfoRequest.Size(m)
}
func (m *GetProjectInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectInfoRequest proto.InternalMessageInfo

func (m *GetProjectInfoRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *GetProjectInfoRequest) GetDimension() string {
	if m != nil {
		return m.Dimension
	}
	return ""
}

type GetProjectInfoResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *Project `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProjectInfoResponse) Reset()         { *m = GetProjectInfoResponse{} }
func (m *GetProjectInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetProjectInfoResponse) ProtoMessage()    {}
func (*GetProjectInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_518799807a60b6f2, []int{1}
}

func (m *GetProjectInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectInfoResponse.Unmarshal(m, b)
}
func (m *GetProjectInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetProjectInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectInfoResponse.Merge(m, src)
}
func (m *GetProjectInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetProjectInfoResponse.Size(m)
}
func (m *GetProjectInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectInfoResponse proto.InternalMessageInfo

func (m *GetProjectInfoResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetProjectInfoResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetProjectInfoResponse) GetData() *Project {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetClusterInfoListRequest struct {
	ProjectID            string   `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Dimension            string   `protobuf:"bytes,2,opt,name=dimension,proto3" json:"dimension,omitempty"`
	Page                 uint32   `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Size                 uint32   `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClusterInfoListRequest) Reset()         { *m = GetClusterInfoListRequest{} }
func (m *GetClusterInfoListRequest) String() string { return proto.CompactTextString(m) }
func (*GetClusterInfoListRequest) ProtoMessage()    {}
func (*GetClusterInfoListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_518799807a60b6f2, []int{2}
}

func (m *GetClusterInfoListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterInfoListRequest.Unmarshal(m, b)
}
func (m *GetClusterInfoListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterInfoListRequest.Marshal(b, m, deterministic)
}
func (m *GetClusterInfoListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterInfoListRequest.Merge(m, src)
}
func (m *GetClusterInfoListRequest) XXX_Size() int {
	return xxx_messageInfo_GetClusterInfoListRequest.Size(m)
}
func (m *GetClusterInfoListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterInfoListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterInfoListRequest proto.InternalMessageInfo

func (m *GetClusterInfoListRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *GetClusterInfoListRequest) GetDimension() string {
	if m != nil {
		return m.Dimension
	}
	return ""
}

func (m *GetClusterInfoListRequest) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetClusterInfoListRequest) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

type GetClusterInfoListResponse struct {
	Code                 uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Total                uint32     `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Data                 []*Cluster `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetClusterInfoListResponse) Reset()         { *m = GetClusterInfoListResponse{} }
func (m *GetClusterInfoListResponse) String() string { return proto.CompactTextString(m) }
func (*GetClusterInfoListResponse) ProtoMessage()    {}
func (*GetClusterInfoListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_518799807a60b6f2, []int{3}
}

func (m *GetClusterInfoListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterInfoListResponse.Unmarshal(m, b)
}
func (m *GetClusterInfoListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterInfoListResponse.Marshal(b, m, deterministic)
}
func (m *GetClusterInfoListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterInfoListResponse.Merge(m, src)
}
func (m *GetClusterInfoListResponse) XXX_Size() int {
	return xxx_messageInfo_GetClusterInfoListResponse.Size(m)
}
func (m *GetClusterInfoListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterInfoListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterInfoListResponse proto.InternalMessageInfo

func (m *GetClusterInfoListResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetClusterInfoListResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetClusterInfoListResponse) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *GetClusterInfoListResponse) GetData() []*Cluster {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetClusterInfoRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Dimension            string   `protobuf:"bytes,2,opt,name=dimension,proto3" json:"dimension,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClusterInfoRequest) Reset()         { *m = GetClusterInfoRequest{} }
func (m *GetClusterInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetClusterInfoRequest) ProtoMessage()    {}
func (*GetClusterInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_518799807a60b6f2, []int{4}
}

func (m *GetClusterInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterInfoRequest.Unmarshal(m, b)
}
func (m *GetClusterInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetClusterInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterInfoRequest.Merge(m, src)
}
func (m *GetClusterInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetClusterInfoRequest.Size(m)
}
func (m *GetClusterInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterInfoRequest proto.InternalMessageInfo

func (m *GetClusterInfoRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *GetClusterInfoRequest) GetDimension() string {
	if m != nil {
		return m.Dimension
	}
	return ""
}

type GetClusterInfoResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *Cluster `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClusterInfoResponse) Reset()         { *m = GetClusterInfoResponse{} }
func (m *GetClusterInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetClusterInfoResponse) ProtoMessage()    {}
func (*GetClusterInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_518799807a60b6f2, []int{5}
}

func (m *GetClusterInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterInfoResponse.Unmarshal(m, b)
}
func (m *GetClusterInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetClusterInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterInfoResponse.Merge(m, src)
}
func (m *GetClusterInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetClusterInfoResponse.Size(m)
}
func (m *GetClusterInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterInfoResponse proto.InternalMessageInfo

func (m *GetClusterInfoResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetClusterInfoResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetClusterInfoResponse) GetData() *Cluster {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetNamespaceInfoListRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Dimension            string   `protobuf:"bytes,2,opt,name=dimension,proto3" json:"dimension,omitempty"`
	Page                 uint32   `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Size                 uint32   `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNamespaceInfoListRequest) Reset()         { *m = GetNamespaceInfoListRequest{} }
func (m *GetNamespaceInfoListRequest) String() string { return proto.CompactTextString(m) }
func (*GetNamespaceInfoListRequest) ProtoMessage()    {}
func (*GetNamespaceInfoListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_518799807a60b6f2, []int{6}
}

func (m *GetNamespaceInfoListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNamespaceInfoListRequest.Unmarshal(m, b)
}
func (m *GetNamespaceInfoListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNamespaceInfoListRequest.Marshal(b, m, deterministic)
}
func (m *GetNamespaceInfoListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNamespaceInfoListRequest.Merge(m, src)
}
func (m *GetNamespaceInfoListRequest) XXX_Size() int {
	return xxx_messageInfo_GetNamespaceInfoListRequest.Size(m)
}
func (m *GetNamespaceInfoListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNamespaceInfoListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNamespaceInfoListRequest proto.InternalMessageInfo

func (m *GetNamespaceInfoListRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *GetNamespaceInfoListRequest) GetDimension() string {
	if m != nil {
		return m.Dimension
	}
	return ""
}

func (m *GetNamespaceInfoListRequest) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetNamespaceInfoListRequest) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

type GetNamespaceInfoListResponse struct {
	Code                 uint32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Total                uint32       `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Data                 []*Namespace `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetNamespaceInfoListResponse) Reset()         { *m = GetNamespaceInfoListResponse{} }
func (m *GetNamespaceInfoListResponse) String() string { return proto.CompactTextString(m) }
func (*GetNamespaceInfoListResponse) ProtoMessage()    {}
func (*GetNamespaceInfoListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_518799807a60b6f2, []int{7}
}

func (m *GetNamespaceInfoListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNamespaceInfoListResponse.Unmarshal(m, b)
}
func (m *GetNamespaceInfoListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNamespaceInfoListResponse.Marshal(b, m, deterministic)
}
func (m *GetNamespaceInfoListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNamespaceInfoListResponse.Merge(m, src)
}
func (m *GetNamespaceInfoListResponse) XXX_Size() int {
	return xxx_messageInfo_GetNamespaceInfoListResponse.Size(m)
}
func (m *GetNamespaceInfoListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNamespaceInfoListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNamespaceInfoListResponse proto.InternalMessageInfo

func (m *GetNamespaceInfoListResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetNamespaceInfoListResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetNamespaceInfoListResponse) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *GetNamespaceInfoListResponse) GetData() []*Namespace {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetNamespaceInfoRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Namespace            string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Dimension            string   `protobuf:"bytes,3,opt,name=dimension,proto3" json:"dimension,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNamespaceInfoRequest) Reset()         { *m = GetNamespaceInfoRequest{} }
func (m *GetNamespaceInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetNamespaceInfoRequest) ProtoMessage()    {}
func (*GetNamespaceInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_518799807a60b6f2, []int{8}
}

func (m *GetNamespaceInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNamespaceInfoRequest.Unmarshal(m, b)
}
func (m *GetNamespaceInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNamespaceInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetNamespaceInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNamespaceInfoRequest.Merge(m, src)
}
func (m *GetNamespaceInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetNamespaceInfoRequest.Size(m)
}
func (m *GetNamespaceInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNamespaceInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNamespaceInfoRequest proto.InternalMessageInfo

func (m *GetNamespaceInfoRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *GetNamespaceInfoRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GetNamespaceInfoRequest) GetDimension() string {
	if m != nil {
		return m.Dimension
	}
	return ""
}

type GetNamespaceInfoResponse struct {
	Code                 uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *Namespace `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetNamespaceInfoResponse) Reset()         { *m = GetNamespaceInfoResponse{} }
func (m *GetNamespaceInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetNamespaceInfoResponse) ProtoMessage()    {}
func (*GetNamespaceInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_518799807a60b6f2, []int{9}
}

func (m *GetNamespaceInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNamespaceInfoResponse.Unmarshal(m, b)
}
func (m *GetNamespaceInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNamespaceInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetNamespaceInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNamespaceInfoResponse.Merge(m, src)
}
func (m *GetNamespaceInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetNamespaceInfoResponse.Size(m)
}
func (m *GetNamespaceInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNamespaceInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNamespaceInfoResponse proto.InternalMessageInfo

func (m *GetNamespaceInfoResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetNamespaceInfoResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetNamespaceInfoResponse) GetData() *Namespace {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetWorkloadInfoListRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Namespace            string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	WorkloadType         string   `protobuf:"bytes,3,opt,name=workloadType,proto3" json:"workloadType,omitempty"`
	Dimension            string   `protobuf:"bytes,4,opt,name=dimension,proto3" json:"dimension,omitempty"`
	Page                 uint32   `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Size                 uint32   `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWorkloadInfoListRequest) Reset()         { *m = GetWorkloadInfoListRequest{} }
func (m *GetWorkloadInfoListRequest) String() string { return proto.CompactTextString(m) }
func (*GetWorkloadInfoListRequest) ProtoMessage()    {}
func (*GetWorkloadInfoListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_518799807a60b6f2, []int{10}
}

func (m *GetWorkloadInfoListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWorkloadInfoListRequest.Unmarshal(m, b)
}
func (m *GetWorkloadInfoListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWorkloadInfoListRequest.Marshal(b, m, deterministic)
}
func (m *GetWorkloadInfoListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWorkloadInfoListRequest.Merge(m, src)
}
func (m *GetWorkloadInfoListRequest) XXX_Size() int {
	return xxx_messageInfo_GetWorkloadInfoListRequest.Size(m)
}
func (m *GetWorkloadInfoListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWorkloadInfoListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWorkloadInfoListRequest proto.InternalMessageInfo

func (m *GetWorkloadInfoListRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *GetWorkloadInfoListRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GetWorkloadInfoListRequest) GetWorkloadType() string {
	if m != nil {
		return m.WorkloadType
	}
	return ""
}

func (m *GetWorkloadInfoListRequest) GetDimension() string {
	if m != nil {
		return m.Dimension
	}
	return ""
}

func (m *GetWorkloadInfoListRequest) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetWorkloadInfoListRequest) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

type GetWorkloadInfoListResponse struct {
	Code                 uint32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Total                uint32      `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Data                 []*Workload `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetWorkloadInfoListResponse) Reset()         { *m = GetWorkloadInfoListResponse{} }
func (m *GetWorkloadInfoListResponse) String() string { return proto.CompactTextString(m) }
func (*GetWorkloadInfoListResponse) ProtoMessage()    {}
func (*GetWorkloadInfoListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_518799807a60b6f2, []int{11}
}

func (m *GetWorkloadInfoListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWorkloadInfoListResponse.Unmarshal(m, b)
}
func (m *GetWorkloadInfoListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWorkloadInfoListResponse.Marshal(b, m, deterministic)
}
func (m *GetWorkloadInfoListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWorkloadInfoListResponse.Merge(m, src)
}
func (m *GetWorkloadInfoListResponse) XXX_Size() int {
	return xxx_messageInfo_GetWorkloadInfoListResponse.Size(m)
}
func (m *GetWorkloadInfoListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWorkloadInfoListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetWorkloadInfoListResponse proto.InternalMessageInfo

func (m *GetWorkloadInfoListResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetWorkloadInfoListResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetWorkloadInfoListResponse) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *GetWorkloadInfoListResponse) GetData() []*Workload {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetWorkloadInfoRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Namespace            string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	WorkloadType         string   `protobuf:"bytes,3,opt,name=workloadType,proto3" json:"workloadType,omitempty"`
	WorkloadName         string   `protobuf:"bytes,4,opt,name=workloadName,proto3" json:"workloadName,omitempty"`
	Dimension            string   `protobuf:"bytes,5,opt,name=dimension,proto3" json:"dimension,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWorkloadInfoRequest) Reset()         { *m = GetWorkloadInfoRequest{} }
func (m *GetWorkloadInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetWorkloadInfoRequest) ProtoMessage()    {}
func (*GetWorkloadInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_518799807a60b6f2, []int{12}
}

func (m *GetWorkloadInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWorkloadInfoRequest.Unmarshal(m, b)
}
func (m *GetWorkloadInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWorkloadInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetWorkloadInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWorkloadInfoRequest.Merge(m, src)
}
func (m *GetWorkloadInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetWorkloadInfoRequest.Size(m)
}
func (m *GetWorkloadInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWorkloadInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWorkloadInfoRequest proto.InternalMessageInfo

func (m *GetWorkloadInfoRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *GetWorkloadInfoRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GetWorkloadInfoRequest) GetWorkloadType() string {
	if m != nil {
		return m.WorkloadType
	}
	return ""
}

func (m *GetWorkloadInfoRequest) GetWorkloadName() string {
	if m != nil {
		return m.WorkloadName
	}
	return ""
}

func (m *GetWorkloadInfoRequest) GetDimension() string {
	if m != nil {
		return m.Dimension
	}
	return ""
}

type GetWorkloadInfoResponse struct {
	Code                 uint32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *Workload `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetWorkloadInfoResponse) Reset()         { *m = GetWorkloadInfoResponse{} }
func (m *GetWorkloadInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetWorkloadInfoResponse) ProtoMessage()    {}
func (*GetWorkloadInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_518799807a60b6f2, []int{13}
}

func (m *GetWorkloadInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWorkloadInfoResponse.Unmarshal(m, b)
}
func (m *GetWorkloadInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWorkloadInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetWorkloadInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWorkloadInfoResponse.Merge(m, src)
}
func (m *GetWorkloadInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetWorkloadInfoResponse.Size(m)
}
func (m *GetWorkloadInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWorkloadInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetWorkloadInfoResponse proto.InternalMessageInfo

func (m *GetWorkloadInfoResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetWorkloadInfoResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetWorkloadInfoResponse) GetData() *Workload {
	if m != nil {
		return m.Data
	}
	return nil
}

type Project struct {
	ProjectID            string            `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Dimension            string            `protobuf:"bytes,2,opt,name=dimension,proto3" json:"dimension,omitempty"`
	StartTime            string            `protobuf:"bytes,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              string            `protobuf:"bytes,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Metrics              []*ProjectMetrics `protobuf:"bytes,5,rep,name=metrics,proto3" json:"metrics,omitempty"`
	MinNode              *ExtremumRecord   `protobuf:"bytes,6,opt,name=minNode,proto3" json:"minNode,omitempty"`
	MaxNode              *ExtremumRecord   `protobuf:"bytes,7,opt,name=maxNode,proto3" json:"maxNode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()    {}
func (*Project) Descriptor() ([]byte, []int) {
	return fileDescriptor_518799807a60b6f2, []int{14}
}

func (m *Project) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Project.Unmarshal(m, b)
}
func (m *Project) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Project.Marshal(b, m, deterministic)
}
func (m *Project) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Project.Merge(m, src)
}
func (m *Project) XXX_Size() int {
	return xxx_messageInfo_Project.Size(m)
}
func (m *Project) XXX_DiscardUnknown() {
	xxx_messageInfo_Project.DiscardUnknown(m)
}

var xxx_messageInfo_Project proto.InternalMessageInfo

func (m *Project) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *Project) GetDimension() string {
	if m != nil {
		return m.Dimension
	}
	return ""
}

func (m *Project) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *Project) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *Project) GetMetrics() []*ProjectMetrics {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func (m *Project) GetMinNode() *ExtremumRecord {
	if m != nil {
		return m.MinNode
	}
	return nil
}

func (m *Project) GetMaxNode() *ExtremumRecord {
	if m != nil {
		return m.MaxNode
	}
	return nil
}

type ProjectMetrics struct {
	Time                 string   `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	ClustersCount        string   `protobuf:"bytes,2,opt,name=clustersCount,proto3" json:"clustersCount,omitempty"`
	TotalCPU             string   `protobuf:"bytes,3,opt,name=totalCPU,proto3" json:"totalCPU,omitempty"`
	TotalMemory          string   `protobuf:"bytes,4,opt,name=totalMemory,proto3" json:"totalMemory,omitempty"`
	TotalLoadCPU         string   `protobuf:"bytes,5,opt,name=totalLoadCPU,proto3" json:"totalLoadCPU,omitempty"`
	TotalLoadMemory      string   `protobuf:"bytes,6,opt,name=totalLoadMemory,proto3" json:"totalLoadMemory,omitempty"`
	AvgLoadCPU           string   `protobuf:"bytes,7,opt,name=avgLoadCPU,proto3" json:"avgLoadCPU,omitempty"`
	AvgLoadMemory        string   `protobuf:"bytes,8,opt,name=avgLoadMemory,proto3" json:"avgLoadMemory,omitempty"`
	CPUUsage             string   `protobuf:"bytes,9,opt,name=CPUUsage,proto3" json:"CPUUsage,omitempty"`
	MemoryUsage          string   `protobuf:"bytes,10,opt,name=MemoryUsage,proto3" json:"MemoryUsage,omitempty"`
	NodeCount            string   `protobuf:"bytes,11,opt,name=nodeCount,proto3" json:"nodeCount,omitempty"`
	AvailableNodeCount   string   `protobuf:"bytes,12,opt,name=availableNodeCount,proto3" json:"availableNodeCount,omitempty"`
	MinNodeCount         string   `protobuf:"bytes,13,opt,name=minNodeCount,proto3" json:"minNodeCount,omitempty"`
	MinNodeTime          string   `protobuf:"bytes,14,opt,name=minNodeTime,proto3" json:"minNodeTime,omitempty"`
	MaxNodeCount         string   `protobuf:"bytes,15,opt,name=maxNodeCount,proto3" json:"maxNodeCount,omitempty"`
	MaxNodeTime          string   `protobuf:"bytes,16,opt,name=maxNodeTime,proto3" json:"maxNodeTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProjectMetrics) Reset()         { *m = ProjectMetrics{} }
func (m *ProjectMetrics) String() string { return proto.CompactTextString(m) }
func (*ProjectMetrics) ProtoMessage()    {}
func (*ProjectMetrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_518799807a60b6f2, []int{15}
}

func (m *ProjectMetrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectMetrics.Unmarshal(m, b)
}
func (m *ProjectMetrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectMetrics.Marshal(b, m, deterministic)
}
func (m *ProjectMetrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectMetrics.Merge(m, src)
}
func (m *ProjectMetrics) XXX_Size() int {
	return xxx_messageInfo_ProjectMetrics.Size(m)
}
func (m *ProjectMetrics) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectMetrics.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectMetrics proto.InternalMessageInfo

func (m *ProjectMetrics) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *ProjectMetrics) GetClustersCount() string {
	if m != nil {
		return m.ClustersCount
	}
	return ""
}

func (m *ProjectMetrics) GetTotalCPU() string {
	if m != nil {
		return m.TotalCPU
	}
	return ""
}

func (m *ProjectMetrics) GetTotalMemory() string {
	if m != nil {
		return m.TotalMemory
	}
	return ""
}

func (m *ProjectMetrics) GetTotalLoadCPU() string {
	if m != nil {
		return m.TotalLoadCPU
	}
	return ""
}

func (m *ProjectMetrics) GetTotalLoadMemory() string {
	if m != nil {
		return m.TotalLoadMemory
	}
	return ""
}

func (m *ProjectMetrics) GetAvgLoadCPU() string {
	if m != nil {
		return m.AvgLoadCPU
	}
	return ""
}

func (m *ProjectMetrics) GetAvgLoadMemory() string {
	if m != nil {
		return m.AvgLoadMemory
	}
	return ""
}

func (m *ProjectMetrics) GetCPUUsage() string {
	if m != nil {
		return m.CPUUsage
	}
	return ""
}

func (m *ProjectMetrics) GetMemoryUsage() string {
	if m != nil {
		return m.MemoryUsage
	}
	return ""
}

func (m *ProjectMetrics) GetNodeCount() string {
	if m != nil {
		return m.NodeCount
	}
	return ""
}

func (m *ProjectMetrics) GetAvailableNodeCount() string {
	if m != nil {
		return m.AvailableNodeCount
	}
	return ""
}

func (m *ProjectMetrics) GetMinNodeCount() string {
	if m != nil {
		return m.MinNodeCount
	}
	return ""
}

func (m *ProjectMetrics) GetMinNodeTime() string {
	if m != nil {
		return m.MinNodeTime
	}
	return ""
}

func (m *ProjectMetrics) GetMaxNodeCount() string {
	if m != nil {
		return m.MaxNodeCount
	}
	return ""
}

func (m *ProjectMetrics) GetMaxNodeTime() string {
	if m != nil {
		return m.MaxNodeTime
	}
	return ""
}

type Cluster struct {
	ProjectID            string            `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	ClusterID            string            `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Dimension            string            `protobuf:"bytes,3,opt,name=dimension,proto3" json:"dimension,omitempty"`
	StartTime            string            `protobuf:"bytes,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              string            `protobuf:"bytes,6,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Metrics              []*ClusterMetrics `protobuf:"bytes,4,rep,name=metrics,proto3" json:"metrics,omitempty"`
	MinNode              *ExtremumRecord   `protobuf:"bytes,7,opt,name=minNode,proto3" json:"minNode,omitempty"`
	MaxNode              *ExtremumRecord   `protobuf:"bytes,8,opt,name=maxNode,proto3" json:"maxNode,omitempty"`
	MinInstance          *ExtremumRecord   `protobuf:"bytes,9,opt,name=minInstance,proto3" json:"minInstance,omitempty"`
	MaxInstance          *ExtremumRecord   `protobuf:"bytes,10,opt,name=maxInstance,proto3" json:"maxInstance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Cluster) Reset()         { *m = Cluster{} }
func (m *Cluster) String() string { return proto.CompactTextString(m) }
func (*Cluster) ProtoMessage()    {}
func (*Cluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_518799807a60b6f2, []int{16}
}

func (m *Cluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cluster.Unmarshal(m, b)
}
func (m *Cluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cluster.Marshal(b, m, deterministic)
}
func (m *Cluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cluster.Merge(m, src)
}
func (m *Cluster) XXX_Size() int {
	return xxx_messageInfo_Cluster.Size(m)
}
func (m *Cluster) XXX_DiscardUnknown() {
	xxx_messageInfo_Cluster.DiscardUnknown(m)
}

var xxx_messageInfo_Cluster proto.InternalMessageInfo

func (m *Cluster) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *Cluster) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *Cluster) GetDimension() string {
	if m != nil {
		return m.Dimension
	}
	return ""
}

func (m *Cluster) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *Cluster) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *Cluster) GetMetrics() []*ClusterMetrics {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func (m *Cluster) GetMinNode() *ExtremumRecord {
	if m != nil {
		return m.MinNode
	}
	return nil
}

func (m *Cluster) GetMaxNode() *ExtremumRecord {
	if m != nil {
		return m.MaxNode
	}
	return nil
}

func (m *Cluster) GetMinInstance() *ExtremumRecord {
	if m != nil {
		return m.MinInstance
	}
	return nil
}

func (m *Cluster) GetMaxInstance() *ExtremumRecord {
	if m != nil {
		return m.MaxInstance
	}
	return nil
}

type ClusterMetrics struct {
	Time                 string          `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	NodeCount            string          `protobuf:"bytes,2,opt,name=nodeCount,proto3" json:"nodeCount,omitempty"`
	AvailableNodeCount   string          `protobuf:"bytes,3,opt,name=availableNodeCount,proto3" json:"availableNodeCount,omitempty"`
	MinNode              *ExtremumRecord `protobuf:"bytes,5,opt,name=minNode,proto3" json:"minNode,omitempty"`
	MaxNode              *ExtremumRecord `protobuf:"bytes,7,opt,name=maxNode,proto3" json:"maxNode,omitempty"`
	NodeQuantile         []*NodeQuantile `protobuf:"bytes,8,rep,name=nodeQuantile,proto3" json:"nodeQuantile,omitempty"`
	MinUsageNode         string          `protobuf:"bytes,9,opt,name=minUsageNode,proto3" json:"minUsageNode,omitempty"`
	TotalCPU             string          `protobuf:"bytes,10,opt,name=totalCPU,proto3" json:"totalCPU,omitempty"`
	TotalMemory          string          `protobuf:"bytes,11,opt,name=totalMemory,proto3" json:"totalMemory,omitempty"`
	TotalLoadCPU         string          `protobuf:"bytes,12,opt,name=totalLoadCPU,proto3" json:"totalLoadCPU,omitempty"`
	TotalLoadMemory      string          `protobuf:"bytes,13,opt,name=totalLoadMemory,proto3" json:"totalLoadMemory,omitempty"`
	AvgLoadCPU           string          `protobuf:"bytes,14,opt,name=avgLoadCPU,proto3" json:"avgLoadCPU,omitempty"`
	AvgLoadMemory        string          `protobuf:"bytes,15,opt,name=avgLoadMemory,proto3" json:"avgLoadMemory,omitempty"`
	CPUUsage             string          `protobuf:"bytes,16,opt,name=CPUUsage,proto3" json:"CPUUsage,omitempty"`
	MemoryUsage          string          `protobuf:"bytes,17,opt,name=MemoryUsage,proto3" json:"MemoryUsage,omitempty"`
	WorkloadCount        string          `protobuf:"bytes,18,opt,name=workloadCount,proto3" json:"workloadCount,omitempty"`
	InstanceCount        string          `protobuf:"bytes,19,opt,name=instanceCount,proto3" json:"instanceCount,omitempty"`
	MinInstance          *ExtremumRecord `protobuf:"bytes,20,opt,name=minInstance,proto3" json:"minInstance,omitempty"`
	MaxInstanceTime      *ExtremumRecord `protobuf:"bytes,23,opt,name=MaxInstanceTime,proto3" json:"MaxInstanceTime,omitempty"`
	CpuRequest           string          `protobuf:"bytes,24,opt,name=CpuRequest,proto3" json:"CpuRequest,omitempty"`
	MemoryRequest        string          `protobuf:"bytes,25,opt,name=MemoryRequest,proto3" json:"MemoryRequest,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ClusterMetrics) Reset()         { *m = ClusterMetrics{} }
func (m *ClusterMetrics) String() string { return proto.CompactTextString(m) }
func (*ClusterMetrics) ProtoMessage()    {}
func (*ClusterMetrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_518799807a60b6f2, []int{17}
}

func (m *ClusterMetrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterMetrics.Unmarshal(m, b)
}
func (m *ClusterMetrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterMetrics.Marshal(b, m, deterministic)
}
func (m *ClusterMetrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterMetrics.Merge(m, src)
}
func (m *ClusterMetrics) XXX_Size() int {
	return xxx_messageInfo_ClusterMetrics.Size(m)
}
func (m *ClusterMetrics) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterMetrics.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterMetrics proto.InternalMessageInfo

func (m *ClusterMetrics) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *ClusterMetrics) GetNodeCount() string {
	if m != nil {
		return m.NodeCount
	}
	return ""
}

func (m *ClusterMetrics) GetAvailableNodeCount() string {
	if m != nil {
		return m.AvailableNodeCount
	}
	return ""
}

func (m *ClusterMetrics) GetMinNode() *ExtremumRecord {
	if m != nil {
		return m.MinNode
	}
	return nil
}

func (m *ClusterMetrics) GetMaxNode() *ExtremumRecord {
	if m != nil {
		return m.MaxNode
	}
	return nil
}

func (m *ClusterMetrics) GetNodeQuantile() []*NodeQuantile {
	if m != nil {
		return m.NodeQuantile
	}
	return nil
}

func (m *ClusterMetrics) GetMinUsageNode() string {
	if m != nil {
		return m.MinUsageNode
	}
	return ""
}

func (m *ClusterMetrics) GetTotalCPU() string {
	if m != nil {
		return m.TotalCPU
	}
	return ""
}

func (m *ClusterMetrics) GetTotalMemory() string {
	if m != nil {
		return m.TotalMemory
	}
	return ""
}

func (m *ClusterMetrics) GetTotalLoadCPU() string {
	if m != nil {
		return m.TotalLoadCPU
	}
	return ""
}

func (m *ClusterMetrics) GetTotalLoadMemory() string {
	if m != nil {
		return m.TotalLoadMemory
	}
	return ""
}

func (m *ClusterMetrics) GetAvgLoadCPU() string {
	if m != nil {
		return m.AvgLoadCPU
	}
	return ""
}

func (m *ClusterMetrics) GetAvgLoadMemory() string {
	if m != nil {
		return m.AvgLoadMemory
	}
	return ""
}

func (m *ClusterMetrics) GetCPUUsage() string {
	if m != nil {
		return m.CPUUsage
	}
	return ""
}

func (m *ClusterMetrics) GetMemoryUsage() string {
	if m != nil {
		return m.MemoryUsage
	}
	return ""
}

func (m *ClusterMetrics) GetWorkloadCount() string {
	if m != nil {
		return m.WorkloadCount
	}
	return ""
}

func (m *ClusterMetrics) GetInstanceCount() string {
	if m != nil {
		return m.InstanceCount
	}
	return ""
}

func (m *ClusterMetrics) GetMinInstance() *ExtremumRecord {
	if m != nil {
		return m.MinInstance
	}
	return nil
}

func (m *ClusterMetrics) GetMaxInstanceTime() *ExtremumRecord {
	if m != nil {
		return m.MaxInstanceTime
	}
	return nil
}

func (m *ClusterMetrics) GetCpuRequest() string {
	if m != nil {
		return m.CpuRequest
	}
	return ""
}

func (m *ClusterMetrics) GetMemoryRequest() string {
	if m != nil {
		return m.MemoryRequest
	}
	return ""
}

type NodeQuantile struct {
	Percentage           string   `protobuf:"bytes,1,opt,name=percentage,proto3" json:"percentage,omitempty"`
	NodeCPUUsage         string   `protobuf:"bytes,2,opt,name=nodeCPUUsage,proto3" json:"nodeCPUUsage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeQuantile) Reset()         { *m = NodeQuantile{} }
func (m *NodeQuantile) String() string { return proto.CompactTextString(m) }
func (*NodeQuantile) ProtoMessage()    {}
func (*NodeQuantile) Descriptor() ([]byte, []int) {
	return fileDescriptor_518799807a60b6f2, []int{18}
}

func (m *NodeQuantile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeQuantile.Unmarshal(m, b)
}
func (m *NodeQuantile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeQuantile.Marshal(b, m, deterministic)
}
func (m *NodeQuantile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeQuantile.Merge(m, src)
}
func (m *NodeQuantile) XXX_Size() int {
	return xxx_messageInfo_NodeQuantile.Size(m)
}
func (m *NodeQuantile) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeQuantile.DiscardUnknown(m)
}

var xxx_messageInfo_NodeQuantile proto.InternalMessageInfo

func (m *NodeQuantile) GetPercentage() string {
	if m != nil {
		return m.Percentage
	}
	return ""
}

func (m *NodeQuantile) GetNodeCPUUsage() string {
	if m != nil {
		return m.NodeCPUUsage
	}
	return ""
}

type Namespace struct {
	ProjectID            string              `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	ClusterID            string              `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Namespace            string              `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Dimension            string              `protobuf:"bytes,4,opt,name=dimension,proto3" json:"dimension,omitempty"`
	Metrics              []*NamespaceMetrics `protobuf:"bytes,5,rep,name=metrics,proto3" json:"metrics,omitempty"`
	StartTime            string              `protobuf:"bytes,6,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              string              `protobuf:"bytes,7,opt,name=endTime,proto3" json:"endTime,omitempty"`
	SuggestCPU           string              `protobuf:"bytes,8,opt,name=suggestCPU,proto3" json:"suggestCPU,omitempty"`
	SuggestMemory        string              `protobuf:"bytes,9,opt,name=suggestMemory,proto3" json:"suggestMemory,omitempty"`
	ResourceLimit        *ResourceLimit      `protobuf:"bytes,10,opt,name=resourceLimit,proto3" json:"resourceLimit,omitempty"`
	MaxCPUUsageTime      *ExtremumRecord     `protobuf:"bytes,11,opt,name=MaxCPUUsageTime,proto3" json:"MaxCPUUsageTime,omitempty"`
	MinCPUUsageTime      *ExtremumRecord     `protobuf:"bytes,12,opt,name=MinCPUUsageTime,proto3" json:"MinCPUUsageTime,omitempty"`
	MaxMemoryUsageTime   *ExtremumRecord     `protobuf:"bytes,13,opt,name=MaxMemoryUsageTime,proto3" json:"MaxMemoryUsageTime,omitempty"`
	MinMemoryUsageTime   *ExtremumRecord     `protobuf:"bytes,14,opt,name=MinMemoryUsageTime,proto3" json:"MinMemoryUsageTime,omitempty"`
	MinInstanceTime      *ExtremumRecord     `protobuf:"bytes,15,opt,name=MinInstanceTime,proto3" json:"MinInstanceTime,omitempty"`
	MaxInstanceTime      *ExtremumRecord     `protobuf:"bytes,16,opt,name=MaxInstanceTime,proto3" json:"MaxInstanceTime,omitempty"`
	MinWorkloadUsage     *ExtremumRecord     `protobuf:"bytes,17,opt,name=MinWorkloadUsage,proto3" json:"MinWorkloadUsage,omitempty"`
	MaxWorkloadUsage     *ExtremumRecord     `protobuf:"bytes,18,opt,name=MaxWorkloadUsage,proto3" json:"MaxWorkloadUsage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Namespace) Reset()         { *m = Namespace{} }
func (m *Namespace) String() string { return proto.CompactTextString(m) }
func (*Namespace) ProtoMessage()    {}
func (*Namespace) Descriptor() ([]byte, []int) {
	return fileDescriptor_518799807a60b6f2, []int{19}
}

func (m *Namespace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Namespace.Unmarshal(m, b)
}
func (m *Namespace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Namespace.Marshal(b, m, deterministic)
}
func (m *Namespace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Namespace.Merge(m, src)
}
func (m *Namespace) XXX_Size() int {
	return xxx_messageInfo_Namespace.Size(m)
}
func (m *Namespace) XXX_DiscardUnknown() {
	xxx_messageInfo_Namespace.DiscardUnknown(m)
}

var xxx_messageInfo_Namespace proto.InternalMessageInfo

func (m *Namespace) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *Namespace) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *Namespace) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Namespace) GetDimension() string {
	if m != nil {
		return m.Dimension
	}
	return ""
}

func (m *Namespace) GetMetrics() []*NamespaceMetrics {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func (m *Namespace) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *Namespace) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *Namespace) GetSuggestCPU() string {
	if m != nil {
		return m.SuggestCPU
	}
	return ""
}

func (m *Namespace) GetSuggestMemory() string {
	if m != nil {
		return m.SuggestMemory
	}
	return ""
}

func (m *Namespace) GetResourceLimit() *ResourceLimit {
	if m != nil {
		return m.ResourceLimit
	}
	return nil
}

func (m *Namespace) GetMaxCPUUsageTime() *ExtremumRecord {
	if m != nil {
		return m.MaxCPUUsageTime
	}
	return nil
}

func (m *Namespace) GetMinCPUUsageTime() *ExtremumRecord {
	if m != nil {
		return m.MinCPUUsageTime
	}
	return nil
}

func (m *Namespace) GetMaxMemoryUsageTime() *ExtremumRecord {
	if m != nil {
		return m.MaxMemoryUsageTime
	}
	return nil
}

func (m *Namespace) GetMinMemoryUsageTime() *ExtremumRecord {
	if m != nil {
		return m.MinMemoryUsageTime
	}
	return nil
}

func (m *Namespace) GetMinInstanceTime() *ExtremumRecord {
	if m != nil {
		return m.MinInstanceTime
	}
	return nil
}

func (m *Namespace) GetMaxInstanceTime() *ExtremumRecord {
	if m != nil {
		return m.MaxInstanceTime
	}
	return nil
}

func (m *Namespace) GetMinWorkloadUsage() *ExtremumRecord {
	if m != nil {
		return m.MinWorkloadUsage
	}
	return nil
}

func (m *Namespace) GetMaxWorkloadUsage() *ExtremumRecord {
	if m != nil {
		return m.MaxWorkloadUsage
	}
	return nil
}

type ResourceLimit struct {
	CPULimit             string   `protobuf:"bytes,1,opt,name=CPULimit,proto3" json:"CPULimit,omitempty"`
	CPURequest           string   `protobuf:"bytes,2,opt,name=CPURequest,proto3" json:"CPURequest,omitempty"`
	MemoryLimit          string   `protobuf:"bytes,3,opt,name=MemoryLimit,proto3" json:"MemoryLimit,omitempty"`
	MemoryRequest        string   `protobuf:"bytes,4,opt,name=MemoryRequest,proto3" json:"MemoryRequest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceLimit) Reset()         { *m = ResourceLimit{} }
func (m *ResourceLimit) String() string { return proto.CompactTextString(m) }
func (*ResourceLimit) ProtoMessage()    {}
func (*ResourceLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_518799807a60b6f2, []int{20}
}

func (m *ResourceLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceLimit.Unmarshal(m, b)
}
func (m *ResourceLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceLimit.Marshal(b, m, deterministic)
}
func (m *ResourceLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceLimit.Merge(m, src)
}
func (m *ResourceLimit) XXX_Size() int {
	return xxx_messageInfo_ResourceLimit.Size(m)
}
func (m *ResourceLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceLimit.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceLimit proto.InternalMessageInfo

func (m *ResourceLimit) GetCPULimit() string {
	if m != nil {
		return m.CPULimit
	}
	return ""
}

func (m *ResourceLimit) GetCPURequest() string {
	if m != nil {
		return m.CPURequest
	}
	return ""
}

func (m *ResourceLimit) GetMemoryLimit() string {
	if m != nil {
		return m.MemoryLimit
	}
	return ""
}

func (m *ResourceLimit) GetMemoryRequest() string {
	if m != nil {
		return m.MemoryRequest
	}
	return ""
}

type NamespaceMetrics struct {
	Time                 string          `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	CPURequest           string          `protobuf:"bytes,2,opt,name=CPURequest,proto3" json:"CPURequest,omitempty"`
	MemoryRequest        string          `protobuf:"bytes,3,opt,name=MemoryRequest,proto3" json:"MemoryRequest,omitempty"`
	CPUUsageAmount       string          `protobuf:"bytes,4,opt,name=CPUUsageAmount,proto3" json:"CPUUsageAmount,omitempty"`
	MemoryUsageAmount    string          `protobuf:"bytes,5,opt,name=memoryUsageAmount,proto3" json:"memoryUsageAmount,omitempty"`
	CPUUsage             string          `protobuf:"bytes,6,opt,name=CPUUsage,proto3" json:"CPUUsage,omitempty"`
	MemoryUsage          string          `protobuf:"bytes,7,opt,name=MemoryUsage,proto3" json:"MemoryUsage,omitempty"`
	MaxCPUUsageTime      *ExtremumRecord `protobuf:"bytes,8,opt,name=maxCPUUsageTime,proto3" json:"maxCPUUsageTime,omitempty"`
	MinCPUUsageTime      *ExtremumRecord `protobuf:"bytes,9,opt,name=minCPUUsageTime,proto3" json:"minCPUUsageTime,omitempty"`
	MaxMemoryUsageTime   *ExtremumRecord `protobuf:"bytes,10,opt,name=maxMemoryUsageTime,proto3" json:"maxMemoryUsageTime,omitempty"`
	MinMemoryUsageTime   *ExtremumRecord `protobuf:"bytes,11,opt,name=minMemoryUsageTime,proto3" json:"minMemoryUsageTime,omitempty"`
	WorkloadCount        string          `protobuf:"bytes,18,opt,name=workloadCount,proto3" json:"workloadCount,omitempty"`
	InstanceCount        string          `protobuf:"bytes,19,opt,name=instanceCount,proto3" json:"instanceCount,omitempty"`
	MinInstanceTime      *ExtremumRecord `protobuf:"bytes,21,opt,name=minInstanceTime,proto3" json:"minInstanceTime,omitempty"`
	MaxInstanceTime      *ExtremumRecord `protobuf:"bytes,23,opt,name=MaxInstanceTime,proto3" json:"MaxInstanceTime,omitempty"`
	MinWorkloadUsage     *ExtremumRecord `protobuf:"bytes,24,opt,name=minWorkloadUsage,proto3" json:"minWorkloadUsage,omitempty"`
	MaxWorkloadUsage     *ExtremumRecord `protobuf:"bytes,25,opt,name=maxWorkloadUsage,proto3" json:"maxWorkloadUsage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *NamespaceMetrics) Reset()         { *m = NamespaceMetrics{} }
func (m *NamespaceMetrics) String() string { return proto.CompactTextString(m) }
func (*NamespaceMetrics) ProtoMessage()    {}
func (*NamespaceMetrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_518799807a60b6f2, []int{21}
}

func (m *NamespaceMetrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NamespaceMetrics.Unmarshal(m, b)
}
func (m *NamespaceMetrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NamespaceMetrics.Marshal(b, m, deterministic)
}
func (m *NamespaceMetrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NamespaceMetrics.Merge(m, src)
}
func (m *NamespaceMetrics) XXX_Size() int {
	return xxx_messageInfo_NamespaceMetrics.Size(m)
}
func (m *NamespaceMetrics) XXX_DiscardUnknown() {
	xxx_messageInfo_NamespaceMetrics.DiscardUnknown(m)
}

var xxx_messageInfo_NamespaceMetrics proto.InternalMessageInfo

func (m *NamespaceMetrics) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *NamespaceMetrics) GetCPURequest() string {
	if m != nil {
		return m.CPURequest
	}
	return ""
}

func (m *NamespaceMetrics) GetMemoryRequest() string {
	if m != nil {
		return m.MemoryRequest
	}
	return ""
}

func (m *NamespaceMetrics) GetCPUUsageAmount() string {
	if m != nil {
		return m.CPUUsageAmount
	}
	return ""
}

func (m *NamespaceMetrics) GetMemoryUsageAmount() string {
	if m != nil {
		return m.MemoryUsageAmount
	}
	return ""
}

func (m *NamespaceMetrics) GetCPUUsage() string {
	if m != nil {
		return m.CPUUsage
	}
	return ""
}

func (m *NamespaceMetrics) GetMemoryUsage() string {
	if m != nil {
		return m.MemoryUsage
	}
	return ""
}

func (m *NamespaceMetrics) GetMaxCPUUsageTime() *ExtremumRecord {
	if m != nil {
		return m.MaxCPUUsageTime
	}
	return nil
}

func (m *NamespaceMetrics) GetMinCPUUsageTime() *ExtremumRecord {
	if m != nil {
		return m.MinCPUUsageTime
	}
	return nil
}

func (m *NamespaceMetrics) GetMaxMemoryUsageTime() *ExtremumRecord {
	if m != nil {
		return m.MaxMemoryUsageTime
	}
	return nil
}

func (m *NamespaceMetrics) GetMinMemoryUsageTime() *ExtremumRecord {
	if m != nil {
		return m.MinMemoryUsageTime
	}
	return nil
}

func (m *NamespaceMetrics) GetWorkloadCount() string {
	if m != nil {
		return m.WorkloadCount
	}
	return ""
}

func (m *NamespaceMetrics) GetInstanceCount() string {
	if m != nil {
		return m.InstanceCount
	}
	return ""
}

func (m *NamespaceMetrics) GetMinInstanceTime() *ExtremumRecord {
	if m != nil {
		return m.MinInstanceTime
	}
	return nil
}

func (m *NamespaceMetrics) GetMaxInstanceTime() *ExtremumRecord {
	if m != nil {
		return m.MaxInstanceTime
	}
	return nil
}

func (m *NamespaceMetrics) GetMinWorkloadUsage() *ExtremumRecord {
	if m != nil {
		return m.MinWorkloadUsage
	}
	return nil
}

func (m *NamespaceMetrics) GetMaxWorkloadUsage() *ExtremumRecord {
	if m != nil {
		return m.MaxWorkloadUsage
	}
	return nil
}

type ExtremumRecord struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MetricName           string   `protobuf:"bytes,2,opt,name=metricName,proto3" json:"metricName,omitempty"`
	Value                float64  `protobuf:"fixed64,3,opt,name=value,proto3" json:"value,omitempty"`
	Period               string   `protobuf:"bytes,4,opt,name=period,proto3" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExtremumRecord) Reset()         { *m = ExtremumRecord{} }
func (m *ExtremumRecord) String() string { return proto.CompactTextString(m) }
func (*ExtremumRecord) ProtoMessage()    {}
func (*ExtremumRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_518799807a60b6f2, []int{22}
}

func (m *ExtremumRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtremumRecord.Unmarshal(m, b)
}
func (m *ExtremumRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtremumRecord.Marshal(b, m, deterministic)
}
func (m *ExtremumRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtremumRecord.Merge(m, src)
}
func (m *ExtremumRecord) XXX_Size() int {
	return xxx_messageInfo_ExtremumRecord.Size(m)
}
func (m *ExtremumRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtremumRecord.DiscardUnknown(m)
}

var xxx_messageInfo_ExtremumRecord proto.InternalMessageInfo

func (m *ExtremumRecord) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ExtremumRecord) GetMetricName() string {
	if m != nil {
		return m.MetricName
	}
	return ""
}

func (m *ExtremumRecord) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *ExtremumRecord) GetPeriod() string {
	if m != nil {
		return m.Period
	}
	return ""
}

type Workload struct {
	ProjectID            string             `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	ClusterID            string             `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Namespace            string             `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	WorkloadType         string             `protobuf:"bytes,4,opt,name=workloadType,proto3" json:"workloadType,omitempty"`
	WorkloadName         string             `protobuf:"bytes,11,opt,name=workloadName,proto3" json:"workloadName,omitempty"`
	Dimension            string             `protobuf:"bytes,6,opt,name=dimension,proto3" json:"dimension,omitempty"`
	Metrics              []*WorkloadMetrics `protobuf:"bytes,5,rep,name=metrics,proto3" json:"metrics,omitempty"`
	StartTime            string             `protobuf:"bytes,7,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              string             `protobuf:"bytes,8,opt,name=endTime,proto3" json:"endTime,omitempty"`
	SuggestCPU           string             `protobuf:"bytes,9,opt,name=suggestCPU,proto3" json:"suggestCPU,omitempty"`
	SuggestMemory        string             `protobuf:"bytes,10,opt,name=suggestMemory,proto3" json:"suggestMemory,omitempty"`
	MaxCPUUsageTime      *ExtremumRecord    `protobuf:"bytes,17,opt,name=MaxCPUUsageTime,proto3" json:"MaxCPUUsageTime,omitempty"`
	MinCPUUsageTime      *ExtremumRecord    `protobuf:"bytes,12,opt,name=MinCPUUsageTime,proto3" json:"MinCPUUsageTime,omitempty"`
	MaxMemoryUsageTime   *ExtremumRecord    `protobuf:"bytes,13,opt,name=MaxMemoryUsageTime,proto3" json:"MaxMemoryUsageTime,omitempty"`
	MinMemoryUsageTime   *ExtremumRecord    `protobuf:"bytes,14,opt,name=MinMemoryUsageTime,proto3" json:"MinMemoryUsageTime,omitempty"`
	MinInstanceTime      *ExtremumRecord    `protobuf:"bytes,15,opt,name=MinInstanceTime,proto3" json:"MinInstanceTime,omitempty"`
	MaxInstanceTime      *ExtremumRecord    `protobuf:"bytes,16,opt,name=MaxInstanceTime,proto3" json:"MaxInstanceTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Workload) Reset()         { *m = Workload{} }
func (m *Workload) String() string { return proto.CompactTextString(m) }
func (*Workload) ProtoMessage()    {}
func (*Workload) Descriptor() ([]byte, []int) {
	return fileDescriptor_518799807a60b6f2, []int{23}
}

func (m *Workload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Workload.Unmarshal(m, b)
}
func (m *Workload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Workload.Marshal(b, m, deterministic)
}
func (m *Workload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Workload.Merge(m, src)
}
func (m *Workload) XXX_Size() int {
	return xxx_messageInfo_Workload.Size(m)
}
func (m *Workload) XXX_DiscardUnknown() {
	xxx_messageInfo_Workload.DiscardUnknown(m)
}

var xxx_messageInfo_Workload proto.InternalMessageInfo

func (m *Workload) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *Workload) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *Workload) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Workload) GetWorkloadType() string {
	if m != nil {
		return m.WorkloadType
	}
	return ""
}

func (m *Workload) GetWorkloadName() string {
	if m != nil {
		return m.WorkloadName
	}
	return ""
}

func (m *Workload) GetDimension() string {
	if m != nil {
		return m.Dimension
	}
	return ""
}

func (m *Workload) GetMetrics() []*WorkloadMetrics {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func (m *Workload) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *Workload) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *Workload) GetSuggestCPU() string {
	if m != nil {
		return m.SuggestCPU
	}
	return ""
}

func (m *Workload) GetSuggestMemory() string {
	if m != nil {
		return m.SuggestMemory
	}
	return ""
}

func (m *Workload) GetMaxCPUUsageTime() *ExtremumRecord {
	if m != nil {
		return m.MaxCPUUsageTime
	}
	return nil
}

func (m *Workload) GetMinCPUUsageTime() *ExtremumRecord {
	if m != nil {
		return m.MinCPUUsageTime
	}
	return nil
}

func (m *Workload) GetMaxMemoryUsageTime() *ExtremumRecord {
	if m != nil {
		return m.MaxMemoryUsageTime
	}
	return nil
}

func (m *Workload) GetMinMemoryUsageTime() *ExtremumRecord {
	if m != nil {
		return m.MinMemoryUsageTime
	}
	return nil
}

func (m *Workload) GetMinInstanceTime() *ExtremumRecord {
	if m != nil {
		return m.MinInstanceTime
	}
	return nil
}

func (m *Workload) GetMaxInstanceTime() *ExtremumRecord {
	if m != nil {
		return m.MaxInstanceTime
	}
	return nil
}

type WorkloadMetrics struct {
	Time                 string          `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	CPURequest           string          `protobuf:"bytes,2,opt,name=CPURequest,proto3" json:"CPURequest,omitempty"`
	MemoryRequest        string          `protobuf:"bytes,3,opt,name=memoryRequest,proto3" json:"memoryRequest,omitempty"`
	CPUUsageAmount       string          `protobuf:"bytes,4,opt,name=CPUUsageAmount,proto3" json:"CPUUsageAmount,omitempty"`
	MemoryUsageAmount    string          `protobuf:"bytes,5,opt,name=memoryUsageAmount,proto3" json:"memoryUsageAmount,omitempty"`
	CPUUsage             string          `protobuf:"bytes,6,opt,name=CPUUsage,proto3" json:"CPUUsage,omitempty"`
	MemoryUsage          string          `protobuf:"bytes,7,opt,name=MemoryUsage,proto3" json:"MemoryUsage,omitempty"`
	MaxCPUUsageTime      *ExtremumRecord `protobuf:"bytes,8,opt,name=maxCPUUsageTime,proto3" json:"maxCPUUsageTime,omitempty"`
	MinCPUUsageTime      *ExtremumRecord `protobuf:"bytes,9,opt,name=minCPUUsageTime,proto3" json:"minCPUUsageTime,omitempty"`
	MaxMemoryUsageTime   *ExtremumRecord `protobuf:"bytes,10,opt,name=maxMemoryUsageTime,proto3" json:"maxMemoryUsageTime,omitempty"`
	MinMemoryUsageTime   *ExtremumRecord `protobuf:"bytes,11,opt,name=minMemoryUsageTime,proto3" json:"minMemoryUsageTime,omitempty"`
	InstanceCount        string          `protobuf:"bytes,19,opt,name=instanceCount,proto3" json:"instanceCount,omitempty"`
	MinInstanceTime      *ExtremumRecord `protobuf:"bytes,21,opt,name=minInstanceTime,proto3" json:"minInstanceTime,omitempty"`
	MaxInstanceTime      *ExtremumRecord `protobuf:"bytes,23,opt,name=maxInstanceTime,proto3" json:"maxInstanceTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *WorkloadMetrics) Reset()         { *m = WorkloadMetrics{} }
func (m *WorkloadMetrics) String() string { return proto.CompactTextString(m) }
func (*WorkloadMetrics) ProtoMessage()    {}
func (*WorkloadMetrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_518799807a60b6f2, []int{24}
}

func (m *WorkloadMetrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkloadMetrics.Unmarshal(m, b)
}
func (m *WorkloadMetrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkloadMetrics.Marshal(b, m, deterministic)
}
func (m *WorkloadMetrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkloadMetrics.Merge(m, src)
}
func (m *WorkloadMetrics) XXX_Size() int {
	return xxx_messageInfo_WorkloadMetrics.Size(m)
}
func (m *WorkloadMetrics) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkloadMetrics.DiscardUnknown(m)
}

var xxx_messageInfo_WorkloadMetrics proto.InternalMessageInfo

func (m *WorkloadMetrics) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *WorkloadMetrics) GetCPURequest() string {
	if m != nil {
		return m.CPURequest
	}
	return ""
}

func (m *WorkloadMetrics) GetMemoryRequest() string {
	if m != nil {
		return m.MemoryRequest
	}
	return ""
}

func (m *WorkloadMetrics) GetCPUUsageAmount() string {
	if m != nil {
		return m.CPUUsageAmount
	}
	return ""
}

func (m *WorkloadMetrics) GetMemoryUsageAmount() string {
	if m != nil {
		return m.MemoryUsageAmount
	}
	return ""
}

func (m *WorkloadMetrics) GetCPUUsage() string {
	if m != nil {
		return m.CPUUsage
	}
	return ""
}

func (m *WorkloadMetrics) GetMemoryUsage() string {
	if m != nil {
		return m.MemoryUsage
	}
	return ""
}

func (m *WorkloadMetrics) GetMaxCPUUsageTime() *ExtremumRecord {
	if m != nil {
		return m.MaxCPUUsageTime
	}
	return nil
}

func (m *WorkloadMetrics) GetMinCPUUsageTime() *ExtremumRecord {
	if m != nil {
		return m.MinCPUUsageTime
	}
	return nil
}

func (m *WorkloadMetrics) GetMaxMemoryUsageTime() *ExtremumRecord {
	if m != nil {
		return m.MaxMemoryUsageTime
	}
	return nil
}

func (m *WorkloadMetrics) GetMinMemoryUsageTime() *ExtremumRecord {
	if m != nil {
		return m.MinMemoryUsageTime
	}
	return nil
}

func (m *WorkloadMetrics) GetInstanceCount() string {
	if m != nil {
		return m.InstanceCount
	}
	return ""
}

func (m *WorkloadMetrics) GetMinInstanceTime() *ExtremumRecord {
	if m != nil {
		return m.MinInstanceTime
	}
	return nil
}

func (m *WorkloadMetrics) GetMaxInstanceTime() *ExtremumRecord {
	if m != nil {
		return m.MaxInstanceTime
	}
	return nil
}

func init() {
	proto.RegisterType((*GetProjectInfoRequest)(nil), "datamanager.GetProjectInfoRequest")
	proto.RegisterType((*GetProjectInfoResponse)(nil), "datamanager.GetProjectInfoResponse")
	proto.RegisterType((*GetClusterInfoListRequest)(nil), "datamanager.GetClusterInfoListRequest")
	proto.RegisterType((*GetClusterInfoListResponse)(nil), "datamanager.GetClusterInfoListResponse")
	proto.RegisterType((*GetClusterInfoRequest)(nil), "datamanager.GetClusterInfoRequest")
	proto.RegisterType((*GetClusterInfoResponse)(nil), "datamanager.GetClusterInfoResponse")
	proto.RegisterType((*GetNamespaceInfoListRequest)(nil), "datamanager.GetNamespaceInfoListRequest")
	proto.RegisterType((*GetNamespaceInfoListResponse)(nil), "datamanager.GetNamespaceInfoListResponse")
	proto.RegisterType((*GetNamespaceInfoRequest)(nil), "datamanager.GetNamespaceInfoRequest")
	proto.RegisterType((*GetNamespaceInfoResponse)(nil), "datamanager.GetNamespaceInfoResponse")
	proto.RegisterType((*GetWorkloadInfoListRequest)(nil), "datamanager.GetWorkloadInfoListRequest")
	proto.RegisterType((*GetWorkloadInfoListResponse)(nil), "datamanager.GetWorkloadInfoListResponse")
	proto.RegisterType((*GetWorkloadInfoRequest)(nil), "datamanager.GetWorkloadInfoRequest")
	proto.RegisterType((*GetWorkloadInfoResponse)(nil), "datamanager.GetWorkloadInfoResponse")
	proto.RegisterType((*Project)(nil), "datamanager.Project")
	proto.RegisterType((*ProjectMetrics)(nil), "datamanager.ProjectMetrics")
	proto.RegisterType((*Cluster)(nil), "datamanager.Cluster")
	proto.RegisterType((*ClusterMetrics)(nil), "datamanager.ClusterMetrics")
	proto.RegisterType((*NodeQuantile)(nil), "datamanager.NodeQuantile")
	proto.RegisterType((*Namespace)(nil), "datamanager.Namespace")
	proto.RegisterType((*ResourceLimit)(nil), "datamanager.ResourceLimit")
	proto.RegisterType((*NamespaceMetrics)(nil), "datamanager.NamespaceMetrics")
	proto.RegisterType((*ExtremumRecord)(nil), "datamanager.ExtremumRecord")
	proto.RegisterType((*Workload)(nil), "datamanager.Workload")
	proto.RegisterType((*WorkloadMetrics)(nil), "datamanager.WorkloadMetrics")
}

func init() {
	proto.RegisterFile("proto/bcs-data-manager/bcs-data-manager.proto", fileDescriptor_518799807a60b6f2)
}

var fileDescriptor_518799807a60b6f2 = []byte{
	// 3921 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x3c, 0x5d, 0x70, 0x14, 0x47,
	0x7a, 0xb7, 0xab, 0xd5, 0x5f, 0x6b, 0xa5, 0x95, 0x1b, 0x64, 0x16, 0x09, 0x38, 0xb1, 0x96, 0x41,
	0x1e, 0x23, 0x2d, 0xcc, 0xf9, 0x6c, 0xdf, 0xfa, 0xa8, 0xf2, 0x48, 0x18, 0x2c, 0x1b, 0x84, 0x3c,
	0x36, 0x77, 0xce, 0xb9, 0x9c, 0xab, 0x61, 0x35, 0x56, 0xd6, 0xd1, 0xfe, 0x64, 0x7f, 0x38, 0x38,
	0x8a, 0x2b, 0x41, 0x11, 0xe0, 0x40, 0x58, 0xdc, 0x00, 0xc1, 0xe6, 0xc7, 0x58, 0x57, 0xc4, 0xe0,
	0x5c, 0x9d, 0x24, 0x27, 0xe0, 0x1c, 0x42, 0xb2, 0xeb, 0x1e, 0xf2, 0x90, 0x87, 0x54, 0x25, 0xf8,
	0x31, 0x95, 0x97, 0x9c, 0x66, 0x57, 0x7a, 0x48, 0x78, 0x4b, 0xaa, 0xfc, 0x74, 0x35, 0xdd, 0x3d,
	0x33, 0xdd, 0x3d, 0xb3, 0xab, 0xd5, 0x22, 0x30, 0x77, 0xc5, 0x13, 0x3b, 0xdf, 0xd7, 0xdf, 0x6f,
	0x7f, 0xfd, 0xfd, 0xb4, 0x66, 0x00, 0x5d, 0xa9, 0x74, 0x32, 0x9b, 0x0c, 0xef, 0x8d, 0x66, 0xba,
	0x06, 0x95, 0xac, 0xd2, 0x15, 0x57, 0x12, 0xca, 0x90, 0x9a, 0x76, 0x00, 0xba, 0xd1, 0x3a, 0xd8,
	0x60, 0xc0, 0x08, 0xa8, 0x75, 0xcd, 0x50, 0x32, 0x39, 0x34, 0xac, 0x86, 0x95, 0x54, 0x2c, 0xac,
	0x24, 0x12, 0xc9, 0xac, 0x92, 0x8d, 0x25, 0x13, 0x19, 0xbc, 0xb4, 0x75, 0x13, 0xfa, 0x27, 0xda,
	0x35, 0xa4, 0x26, 0xba, 0x32, 0x3f, 0x53, 0x86, 0x0c, 0xae, 0xc9, 0x14, 0x5a, 0xe1, 0xb2, 0x7a,
	0xd5, 0x3e, 0x65, 0x38, 0x36, 0xa8, 0x64, 0xd5, 0xb0, 0xf9, 0x03, 0x23, 0x42, 0xff, 0xea, 0x05,
	0x2d, 0x3b, 0xd4, 0xec, 0x40, 0x3a, 0xf9, 0xbe, 0x1a, 0xcd, 0xf6, 0x25, 0xde, 0x4b, 0xca, 0xea,
	0xdf, 0xe4, 0xd4, 0x4c, 0x16, 0xf6, 0x83, 0xfa, 0x14, 0x81, 0x6e, 0x0b, 0x7a, 0xda, 0x3d, 0x9d,
	0xf5, 0x3d, 0x9b, 0x35, 0xa9, 0x45, 0xb0, 0xa1, 0x62, 0xdd, 0xc2, 0xf8, 0xed, 0xc2, 0xa5, 0x89,
	0xbe, 0x6d, 0xdf, 0xf4, 0xb4, 0xa4, 0x57, 0x04, 0x07, 0xc5, 0xc0, 0x5f, 0xbe, 0xb3, 0xb9, 0xeb,
	0x07, 0x4a, 0xd7, 0xcf, 0xa5, 0xae, 0x9f, 0x74, 0xbd, 0xfb, 0x6c, 0x87, 0x6c, 0x2f, 0x86, 0xe3,
	0x1e, 0x50, 0x3f, 0x18, 0x8b, 0xab, 0x89, 0x4c, 0x2c, 0x99, 0x08, 0x7a, 0x11, 0xc3, 0x23, 0x1e,
	0x4d, 0x52, 0x05, 0x1b, 0x2c, 0xbe, 0x9d, 0xbf, 0xf0, 0xc5, 0xc2, 0x85, 0x9b, 0x85, 0x3b, 0x37,
	0xf5, 0xe9, 0x4f, 0xef, 0xcd, 0x8c, 0x5a, 0x98, 0xb9, 0xdf, 0x4d, 0x17, 0x3e, 0x9b, 0xce, 0x5f,
	0xf8, 0x62, 0xfe, 0xab, 0x73, 0xfa, 0xa5, 0x8f, 0xf3, 0x97, 0x47, 0xf2, 0x7f, 0x37, 0x55, 0xb8,
	0x78, 0x74, 0xee, 0x77, 0x23, 0xf9, 0x2b, 0xe3, 0xf9, 0xf3, 0x53, 0xf9, 0xd3, 0x13, 0xf7, 0x66,
	0x46, 0x89, 0xb8, 0xc2, 0x3f, 0x6a, 0xfa, 0xf4, 0xa7, 0xfa, 0xd8, 0x3f, 0xe4, 0xcf, 0x4d, 0xe6,
	0x47, 0x0f, 0x0f, 0x2a, 0x07, 0xbe, 0xe9, 0x59, 0x95, 0x6e, 0x91, 0x6b, 0xe2, 0xb1, 0x44, 0x2e,
	0xab, 0xca, 0xbe, 0xbf, 0x4a, 0xe6, 0xd2, 0x72, 0xd5, 0xa0, 0x72, 0x40, 0xfe, 0x8e, 0x6c, 0x8b,
	0x8f, 0xfc, 0x50, 0x93, 0x7e, 0x00, 0x5e, 0x10, 0xdc, 0x3d, 0x22, 0xc2, 0xfc, 0xd5, 0xbf, 0x9f,
	0x9f, 0xfc, 0x35, 0x36, 0x7a, 0x7e, 0xf2, 0x9f, 0xf3, 0x9f, 0x1f, 0xb9, 0xeb, 0xb1, 0x2d, 0x0c,
	0x7d, 0xe8, 0x05, 0x4f, 0xf2, 0x94, 0x99, 0x54, 0x32, 0x91, 0x51, 0x61, 0x37, 0xf0, 0x45, 0x93,
	0x83, 0x2a, 0xf2, 0x63, 0x63, 0x4f, 0xab, 0x26, 0xad, 0x12, 0x10, 0x40, 0x0c, 0x60, 0x7b, 0x16,
	0xce, 0x7d, 0x34, 0x3f, 0x39, 0x59, 0xf8, 0xe4, 0xb0, 0x8c, 0xc0, 0x30, 0x02, 0x6a, 0xe3, 0x6a,
	0x26, 0xa3, 0x0c, 0xa9, 0xc4, 0x53, 0xed, 0x9a, 0xb4, 0x56, 0x30, 0x61, 0x22, 0xa4, 0xa9, 0xe6,
	0xbe, 0x1a, 0xcf, 0x1f, 0x9e, 0x94, 0x4d, 0x24, 0x94, 0x80, 0xcf, 0x08, 0xa3, 0x60, 0x55, 0xbb,
	0xa7, 0xb3, 0x41, 0x5c, 0xd9, 0x4d, 0xc5, 0x54, 0x37, 0xd1, 0xad, 0x67, 0x95, 0x26, 0xad, 0x14,
	0xd0, 0x32, 0xd1, 0x8f, 0xed, 0x21, 0x5c, 0x10, 0x2c, 0xb2, 0x5b, 0x93, 0x76, 0x82, 0xd7, 0x84,
	0x22, 0xd6, 0x88, 0x41, 0xda, 0x11, 0x98, 0x10, 0x2b, 0x74, 0xd7, 0x83, 0xd4, 0xbf, 0xeb, 0x31,
	0x95, 0xb9, 0xeb, 0x41, 0x0c, 0x43, 0x67, 0xaa, 0xc0, 0xea, 0x1d, 0x6a, 0xb6, 0x77, 0x38, 0x97,
	0xc9, 0xaa, 0x69, 0x83, 0xd9, 0xce, 0x58, 0x26, 0xfb, 0xa0, 0x42, 0xed, 0x7d, 0x67, 0xa4, 0xed,
	0xd4, 0xa4, 0x30, 0x1d, 0x68, 0x21, 0x2e, 0xd0, 0x70, 0x60, 0xdc, 0x9b, 0x19, 0x35, 0x22, 0xc3,
	0x08, 0xbc, 0x32, 0x43, 0x06, 0x7e, 0x1f, 0xf8, 0x52, 0xc6, 0x36, 0x55, 0xa1, 0x9d, 0x5d, 0x8f,
	0x76, 0xd6, 0x00, 0x88, 0x01, 0xec, 0x24, 0xfd, 0xf0, 0x58, 0xe1, 0xfa, 0x9d, 0x85, 0xe3, 0x63,
	0xdf, 0xf4, 0xf8, 0x04, 0x6f, 0xe7, 0x77, 0x64, 0x84, 0x85, 0x2f, 0x02, 0x5f, 0x26, 0xf6, 0x73,
	0x35, 0xe8, 0x43, 0x64, 0x1d, 0x9a, 0xd4, 0x2a, 0x20, 0x80, 0x15, 0x64, 0x1f, 0x9d, 0xd1, 0x4f,
	0x7c, 0x91, 0x3f, 0x3f, 0x65, 0x52, 0x06, 0x81, 0x8c, 0x16, 0x44, 0xb6, 0x6b, 0x52, 0x2f, 0x90,
	0x84, 0xe2, 0xee, 0xb4, 0xb6, 0xe7, 0xd2, 0xb1, 0xc2, 0x97, 0xd7, 0xf4, 0x13, 0x17, 0xe6, 0xc7,
	0x6f, 0xb8, 0x44, 0xeb, 0xbf, 0x7b, 0x41, 0xab, 0x1b, 0x8f, 0x6f, 0x21, 0x62, 0x3b, 0x41, 0x75,
	0x36, 0x99, 0x55, 0x86, 0x89, 0x37, 0xa0, 0x26, 0x05, 0x04, 0x0c, 0x11, 0x6b, 0xf2, 0x23, 0x77,
	0xf2, 0xe7, 0xa7, 0x64, 0xfc, 0x08, 0x77, 0x58, 0xb1, 0x5d, 0xe5, 0x88, 0x6d, 0x62, 0x49, 0xcf,
	0x5a, 0xe4, 0x4c, 0x14, 0xdb, 0x90, 0xf6, 0x01, 0x13, 0xe1, 0x6f, 0x6a, 0xd2, 0x00, 0xe8, 0x17,
	0x4a, 0x78, 0xc0, 0xd5, 0x8d, 0xa5, 0xa3, 0xfc, 0x3f, 0x70, 0x32, 0xa5, 0x18, 0x9a, 0x11, 0xfe,
	0x23, 0x50, 0x1f, 0x25, 0x50, 0x33, 0xc2, 0x5f, 0x44, 0x11, 0x6e, 0x41, 0xc5, 0x3a, 0x2c, 0xc8,
	0x88, 0xf0, 0xb5, 0xe9, 0xb6, 0x66, 0xaf, 0x4b, 0x8c, 0x47, 0x7c, 0x3d, 0xbd, 0x6f, 0x76, 0xc9,
	0x36, 0xd1, 0x9f, 0x5a, 0x52, 0x75, 0x7a, 0xc6, 0x8a, 0x77, 0x64, 0xbc, 0x15, 0xa6, 0x96, 0x85,
	0x21, 0x0d, 0x27, 0x55, 0x86, 0xf2, 0x11, 0x4b, 0xaa, 0x66, 0xe0, 0x31, 0x49, 0x15, 0xd9, 0xc3,
	0x84, 0x5c, 0x9f, 0x26, 0x6d, 0x07, 0xdb, 0x84, 0x22, 0xd6, 0x70, 0x8e, 0x28, 0x1d, 0x68, 0x67,
	0xab, 0x40, 0xdb, 0x0e, 0x35, 0xdb, 0xaf, 0xc4, 0xd5, 0x4c, 0x4a, 0x89, 0xaa, 0x7c, 0x42, 0x7d,
	0x50, 0xe1, 0xf6, 0x30, 0x13, 0xeb, 0x26, 0x26, 0xb1, 0x06, 0x35, 0xa9, 0x89, 0x24, 0xd6, 0x9a,
	0x85, 0xf1, 0x5b, 0xf9, 0xf3, 0x53, 0x6c, 0x3e, 0x15, 0x99, 0x7c, 0xba, 0x0e, 0xed, 0x04, 0xca,
	0xa7, 0xfe, 0x85, 0xf1, 0x5b, 0x0b, 0x57, 0x7e, 0xad, 0x5f, 0xbb, 0xae, 0x4f, 0x71, 0x99, 0xb4,
	0x5f, 0x93, 0x5e, 0x07, 0x7d, 0x42, 0x29, 0x4f, 0x8a, 0xeb, 0x48, 0x16, 0xff, 0xd5, 0xac, 0x7e,
	0xe6, 0x74, 0xe1, 0xb3, 0xe9, 0x85, 0x0b, 0x37, 0xb9, 0x8c, 0x6a, 0x87, 0xea, 0x7f, 0x7b, 0xc1,
	0x1a, 0x77, 0x5e, 0x8f, 0x74, 0x4e, 0xdd, 0xcd, 0xe4, 0xd4, 0x27, 0x99, 0xd0, 0xb6, 0x6c, 0xe9,
	0x79, 0x4a, 0x93, 0xda, 0x49, 0x70, 0x07, 0x9d, 0xde, 0x60, 0x02, 0xfd, 0x1d, 0x4d, 0x7a, 0x1b,
	0xfc, 0x48, 0x28, 0xe9, 0x8b, 0x12, 0x8e, 0x2d, 0x1d, 0xfa, 0xbf, 0xaf, 0x02, 0xab, 0x78, 0xc6,
	0x0f, 0x3a, 0xec, 0xdf, 0x06, 0xf5, 0x09, 0x53, 0x1e, 0xd9, 0x89, 0x88, 0x26, 0x7d, 0x57, 0xb0,
	0xa1, 0x22, 0x64, 0x0c, 0x39, 0x73, 0x5a, 0xff, 0xed, 0x85, 0xe2, 0x9d, 0x8a, 0x45, 0xc6, 0xe5,
	0xef, 0xaa, 0x47, 0x32, 0x7f, 0x0f, 0x68, 0xd2, 0x2e, 0xf0, 0xba, 0x50, 0xcc, 0xeb, 0x66, 0x9d,
	0xa4, 0x1d, 0xe0, 0x3c, 0x1c, 0x77, 0x3d, 0xb6, 0xd5, 0xa1, 0x6b, 0x5e, 0x10, 0x74, 0x72, 0xfb,
	0x16, 0x0e, 0x49, 0x1f, 0x93, 0xd5, 0x8b, 0x85, 0x3e, 0xdd, 0x50, 0xd0, 0x56, 0x32, 0x41, 0xff,
	0x86, 0x26, 0xf5, 0x83, 0x9d, 0x42, 0x51, 0xbb, 0x5c, 0xdd, 0x54, 0x3a, 0xd4, 0xff, 0xcb, 0x87,
	0x3a, 0xb4, 0x1f, 0x27, 0xd3, 0x7f, 0x3d, 0x9c, 0x54, 0x06, 0x1f, 0x56, 0x92, 0x7f, 0x70, 0xd1,
	0xfe, 0x0e, 0xf0, 0xff, 0x8c, 0x18, 0xf3, 0xd6, 0x81, 0x94, 0x4a, 0xe2, 0xfd, 0x05, 0x4d, 0x5a,
	0x23, 0x30, 0x08, 0xd1, 0x9f, 0xbf, 0x31, 0xae, 0x5f, 0xb9, 0x50, 0xf8, 0xfc, 0x8e, 0xfe, 0xf1,
	0xa9, 0xa2, 0x9c, 0x19, 0x1a, 0xb6, 0x36, 0xf9, 0x1e, 0x4e, 0x6d, 0xaa, 0x5e, 0x52, 0x6d, 0xaa,
	0x59, 0x42, 0x6d, 0xda, 0xab, 0x49, 0x3f, 0x05, 0xef, 0x0a, 0x25, 0xf6, 0xdf, 0x0c, 0x28, 0xec,
	0xaa, 0x62, 0x45, 0x89, 0x3e, 0x77, 0x77, 0x3d, 0xfe, 0x1f, 0x53, 0x1e, 0x0b, 0x7d, 0xed, 0x45,
	0x5d, 0x84, 0x93, 0xff, 0x23, 0x5d, 0xae, 0x5e, 0x65, 0xca, 0x55, 0x0b, 0x73, 0x66, 0x4d, 0x53,
	0x98, 0x23, 0x4b, 0x3b, 0x88, 0x39, 0xb2, 0x6f, 0x69, 0xd2, 0x1b, 0x60, 0xb7, 0x50, 0xca, 0x07,
	0xae, 0x4e, 0x2e, 0x7d, 0x6a, 0x7f, 0x55, 0x8d, 0x1a, 0x56, 0x9a, 0xe3, 0xe3, 0x13, 0xeb, 0x7a,
	0x62, 0x29, 0xe6, 0x46, 0xca, 0x24, 0x87, 0x96, 0x65, 0x6e, 0x20, 0x4c, 0xe6, 0x86, 0xfe, 0xd7,
	0xa7, 0x16, 0x67, 0x6e, 0xd0, 0x70, 0x95, 0xb5, 0xfa, 0x91, 0xac, 0xac, 0x43, 0x9a, 0x34, 0x08,
	0xf6, 0x0a, 0x45, 0xc2, 0xc5, 0x9c, 0x08, 0xe6, 0x6f, 0x1d, 0xcd, 0x4f, 0x9f, 0x59, 0xf4, 0x68,
	0xd3, 0xae, 0xa5, 0x1e, 0x0d, 0x67, 0x84, 0x2e, 0x79, 0x51, 0xd3, 0xc4, 0x0a, 0xf9, 0x16, 0x4e,
	0xf9, 0xab, 0x4c, 0xbd, 0xbd, 0x9f, 0xb3, 0xfb, 0x9a, 0x26, 0xed, 0x00, 0xaf, 0x08, 0xc5, 0xac,
	0x32, 0x7d, 0x87, 0xe9, 0x17, 0x39, 0xb1, 0xbf, 0xf1, 0x81, 0x5a, 0x72, 0xcd, 0x05, 0x9f, 0x77,
	0x5e, 0x45, 0x05, 0xdd, 0xaf, 0xa2, 0x62, 0x83, 0xf4, 0x95, 0x53, 0xc4, 0x39, 0x19, 0xad, 0xd1,
	0xa4, 0xd5, 0x74, 0xb0, 0xf9, 0xe9, 0x60, 0xa3, 0xab, 0x49, 0x04, 0xd4, 0x67, 0xb2, 0x4a, 0x3a,
	0xfb, 0x56, 0x2c, 0x6e, 0x9e, 0x30, 0x4c, 0x6b, 0x41, 0x45, 0xbf, 0x3e, 0x33, 0xa2, 0x5f, 0x3f,
	0x85, 0x39, 0xc8, 0x36, 0x02, 0x3e, 0x07, 0x6a, 0xd5, 0xc4, 0x20, 0xa2, 0xc4, 0xc7, 0x07, 0x6d,
	0xa0, 0x09, 0x13, 0xfd, 0x85, 0x3b, 0x67, 0xf3, 0x57, 0xae, 0x12, 0x3a, 0x13, 0x0c, 0xdf, 0x30,
	0xf6, 0x30, 0x9b, 0x8e, 0x45, 0x33, 0xc1, 0x6a, 0x94, 0x46, 0xdb, 0xdc, 0x6e, 0x09, 0x77, 0xe1,
	0x25, 0x84, 0x25, 0x21, 0x10, 0xfd, 0x38, 0xfa, 0xf1, 0x9e, 0xc8, 0x26, 0x18, 0xbe, 0x0b, 0x6a,
	0xe3, 0xb1, 0x44, 0xbf, 0x11, 0x49, 0x35, 0x68, 0x77, 0x59, 0x96, 0xaf, 0xec, 0xcf, 0xa6, 0xd5,
	0x78, 0x2e, 0x2e, 0xab, 0xd1, 0x64, 0x7a, 0xb0, 0x67, 0x83, 0x26, 0x3d, 0x25, 0x98, 0x04, 0x62,
	0x30, 0x7f, 0x79, 0x44, 0x9f, 0x1a, 0x9b, 0x3f, 0x79, 0xa4, 0x70, 0xe4, 0x76, 0xfe, 0xfc, 0x94,
	0x3e, 0x76, 0xd2, 0xd4, 0x98, 0x2c, 0x41, 0xec, 0x95, 0xfd, 0x88, 0x7d, 0x6d, 0xd9, 0xec, 0x31,
	0x01, 0x66, 0x7f, 0xed, 0xba, 0x2b, 0x7b, 0xbc, 0x24, 0xf2, 0x8c, 0x26, 0x6d, 0x00, 0x1d, 0x82,
	0x19, 0x06, 0xe2, 0xea, 0xf9, 0x89, 0x29, 0x7d, 0xf6, 0x3c, 0xd9, 0x5f, 0x7c, 0x02, 0x71, 0xfc,
	0x85, 0xbe, 0xae, 0x03, 0x4d, 0xac, 0x83, 0xe0, 0xb3, 0xc0, 0x97, 0x35, 0x76, 0x00, 0xc7, 0x0b,
	0xbe, 0x06, 0xc8, 0x22, 0xf7, 0x63, 0x5f, 0x11, 0x69, 0x08, 0x06, 0x5f, 0x01, 0x8d, 0xe4, 0x08,
	0x67, 0x7a, 0x93, 0xb9, 0x44, 0x96, 0x44, 0xcb, 0x77, 0x51, 0xda, 0x23, 0x18, 0x84, 0x30, 0x2f,
	0x11, 0x48, 0xf9, 0x63, 0xa9, 0xe0, 0x16, 0x50, 0x87, 0xea, 0x61, 0xef, 0xc0, 0x1e, 0x12, 0x33,
	0x2d, 0x9a, 0x04, 0x05, 0x0b, 0x88, 0xca, 0x66, 0x34, 0x95, 0x93, 0x2d, 0x08, 0xdc, 0x0a, 0x1a,
	0xd0, 0xef, 0x5d, 0x6a, 0x3c, 0x99, 0x3e, 0x40, 0xe2, 0xa5, 0x4d, 0x93, 0x82, 0x02, 0x0d, 0x17,
	0xeb, 0xf3, 0x23, 0x77, 0xf4, 0x63, 0x7f, 0xab, 0xff, 0xf6, 0x43, 0x99, 0x86, 0xc3, 0x5e, 0xe0,
	0x47, 0x8f, 0x3b, 0x93, 0xca, 0xa0, 0x21, 0xb5, 0x9a, 0xd2, 0x9b, 0x46, 0x88, 0x7e, 0x2c, 0x79,
	0xfe, 0xe6, 0xd5, 0xf9, 0xd9, 0x59, 0x99, 0xc1, 0xc1, 0xdd, 0x20, 0x60, 0x3d, 0x13, 0x3d, 0x6a,
	0x10, 0x9f, 0xa7, 0x35, 0x29, 0x24, 0xf0, 0x38, 0x31, 0x60, 0xe9, 0x42, 0xb8, 0xf1, 0x2b, 0xe0,
	0xcb, 0x00, 0x28, 0xfb, 0x86, 0x4c, 0x9d, 0x6a, 0xed, 0x8c, 0x44, 0x81, 0xc5, 0x80, 0x7e, 0xfb,
	0x9f, 0xf4, 0x2b, 0xc7, 0x6d, 0xa5, 0x28, 0x24, 0xec, 0x03, 0x8d, 0xe4, 0x89, 0x28, 0x54, 0x87,
	0x98, 0xa0, 0x81, 0x97, 0xc5, 0x38, 0xf9, 0xb0, 0x78, 0xf8, 0x02, 0xa8, 0xeb, 0x1d, 0xd8, 0xb3,
	0x07, 0x25, 0xc7, 0x7a, 0xdb, 0xbd, 0x16, 0x50, 0xf4, 0x47, 0x53, 0xb9, 0xb9, 0xd9, 0xaf, 0x0a,
	0xe7, 0x6e, 0x14, 0x3e, 0x38, 0x2e, 0x5b, 0x70, 0xd8, 0x0b, 0x1a, 0x30, 0x0b, 0x4c, 0x0b, 0x10,
	0xed, 0x7a, 0x4d, 0x5a, 0x27, 0xd0, 0x70, 0x31, 0x80, 0x7d, 0x61, 0x73, 0xa0, 0xb1, 0x46, 0x1e,
	0x49, 0x24, 0x07, 0x55, 0x1c, 0x55, 0x0d, 0x54, 0x1e, 0xb1, 0xa0, 0xa2, 0x9f, 0x1c, 0x02, 0x1c,
	0x52, 0x36, 0x02, 0xbe, 0x0d, 0xa0, 0xb2, 0x4f, 0x89, 0x0d, 0x2b, 0x7b, 0x87, 0xd5, 0x7e, 0x8b,
	0x89, 0x1f, 0x31, 0xe9, 0xd4, 0xa4, 0xa7, 0x05, 0x17, 0xb4, 0x18, 0xd0, 0xc7, 0x26, 0x0b, 0xe7,
	0x6e, 0x58, 0x07, 0x4b, 0x76, 0x59, 0x04, 0xb7, 0x03, 0x3f, 0x39, 0xc4, 0x98, 0x67, 0x23, 0xe2,
	0x19, 0x32, 0xfa, 0x13, 0x06, 0x21, 0x06, 0xb8, 0x2c, 0x20, 0x33, 0x68, 0xd8, 0x07, 0x1a, 0xc8,
	0x33, 0xca, 0x76, 0x4d, 0x88, 0xcd, 0x46, 0x4d, 0xea, 0x10, 0x68, 0xb8, 0xd8, 0xc2, 0x71, 0x21,
	0x67, 0x8f, 0x5e, 0x83, 0x54, 0xc2, 0x07, 0x1f, 0xab, 0x14, 0xa0, 0x55, 0xa2, 0x10, 0x58, 0x25,
	0x2a, 0x73, 0xc8, 0x0c, 0x1a, 0xa9, 0x84, 0x9f, 0x91, 0x4a, 0xcd, 0xb4, 0x4a, 0x36, 0x1c, 0xab,
	0x44, 0x71, 0xb1, 0x54, 0xb2, 0xd7, 0x84, 0x6e, 0xd7, 0x80, 0x5a, 0x72, 0x2b, 0x58, 0x71, 0x0d,
	0x7a, 0x9e, 0x6e, 0x2f, 0xbd, 0x14, 0x9d, 0xa3, 0xbd, 0x34, 0xe8, 0xec, 0xf6, 0x31, 0xe2, 0xbc,
	0x83, 0xa8, 0xac, 0x76, 0x55, 0x57, 0x5c, 0xbb, 0x6a, 0x2a, 0xaa, 0x5d, 0x3e, 0x97, 0xda, 0x45,
	0x9c, 0x58, 0x69, 0xed, 0xaa, 0x7d, 0xb0, 0xb5, 0xab, 0x6e, 0x39, 0xd9, 0x63, 0x9e, 0x30, 0x86,
	0x0e, 0x46, 0x5f, 0x22, 0x93, 0x55, 0x12, 0x51, 0x9c, 0x77, 0x16, 0x11, 0x21, 0x68, 0xd2, 0x46,
	0x81, 0x26, 0x32, 0xc5, 0xe8, 0x13, 0x1f, 0xcf, 0x7d, 0x79, 0x8a, 0x11, 0x43, 0x2f, 0x43, 0xa2,
	0x94, 0xfd, 0x96, 0x28, 0x50, 0xb6, 0x28, 0x9b, 0xc8, 0xac, 0xc6, 0xae, 0xa2, 0xec, 0x65, 0x56,
	0x45, 0x26, 0x61, 0x6a, 0x56, 0x64, 0xf2, 0xc8, 0x54, 0xe4, 0x91, 0x46, 0xd0, 0xc4, 0x6e, 0xfb,
	0xd2, 0x2a, 0x32, 0x93, 0x37, 0xbd, 0xcb, 0x91, 0x37, 0xab, 0x96, 0x21, 0x6f, 0xbe, 0x67, 0x07,
	0x65, 0xf5, 0xe2, 0x7e, 0x0e, 0x6b, 0xd2, 0x26, 0x3b, 0x6a, 0xd6, 0xbb, 0x44, 0xcd, 0x2f, 0x47,
	0xf4, 0xcb, 0x37, 0xb0, 0xdd, 0xf9, 0x89, 0x5b, 0x76, 0x74, 0xbe, 0xb7, 0xa4, 0xce, 0x8a, 0xc8,
	0x21, 0x9d, 0xd5, 0x7a, 0x97, 0xce, 0xca, 0x21, 0x87, 0x84, 0xa9, 0x02, 0xfc, 0x86, 0xdb, 0xde,
	0xc8, 0x29, 0x89, 0x6c, 0x6c, 0xd8, 0x38, 0x0a, 0xc6, 0xe1, 0x5d, 0xcd, 0xde, 0xb9, 0x51, 0x0b,
	0x48, 0x3e, 0xa6, 0x69, 0xc4, 0x00, 0x96, 0xa4, 0x9f, 0x38, 0x36, 0x37, 0x7b, 0x1a, 0xe5, 0x63,
	0x1a, 0x0d, 0x65, 0x54, 0x6a, 0x50, 0x31, 0x44, 0xf6, 0xe0, 0x12, 0xdc, 0xad, 0x49, 0xcf, 0x0a,
	0x0c, 0x42, 0x6c, 0xcb, 0x5f, 0x1e, 0x99, 0x9b, 0xfd, 0x00, 0x17, 0x71, 0xcc, 0xb3, 0xf0, 0xd1,
	0x97, 0xfa, 0x89, 0x63, 0xf9, 0xc9, 0x73, 0x32, 0xb3, 0x94, 0xe9, 0xb3, 0x40, 0x45, 0x7d, 0x56,
	0xc3, 0x7d, 0xf6, 0x59, 0xfe, 0x65, 0xea, 0xb3, 0x1a, 0x97, 0xb1, 0xcf, 0x6a, 0x5a, 0x8e, 0x3e,
	0x2b, 0xb0, 0x2c, 0x7d, 0x56, 0xf3, 0x7d, 0xf4, 0x59, 0x4f, 0x54, 0xd4, 0x67, 0xf5, 0x82, 0x46,
	0x73, 0xba, 0xc6, 0xc7, 0x1d, 0x22, 0x36, 0x68, 0x6e, 0x65, 0x31, 0x62, 0x3d, 0x1e, 0x40, 0x51,
	0xff, 0xce, 0x60, 0x0c, 0x6f, 0xc4, 0x48, 0xae, 0xc3, 0x4c, 0x56, 0x50, 0xde, 0x60, 0x30, 0x62,
	0x40, 0x9f, 0x3d, 0xab, 0xff, 0xf2, 0xb4, 0x95, 0x31, 0x65, 0x16, 0x0f, 0xd3, 0x6c, 0x01, 0x58,
	0xb9, 0xf8, 0x29, 0xfe, 0x9e, 0x26, 0x6d, 0x66, 0x0b, 0xc0, 0x7a, 0x97, 0x02, 0xc0, 0x9d, 0x64,
	0xa6, 0x12, 0x1c, 0xf1, 0x80, 0xc0, 0x2e, 0x3b, 0x5d, 0xa3, 0x22, 0xbe, 0x6a, 0x71, 0xc1, 0x2f,
	0x69, 0xd2, 0x8b, 0xc2, 0x0a, 0x8e, 0x10, 0x55, 0xfb, 0xf5, 0x2e, 0x65, 0x81, 0x53, 0x80, 0x17,
	0x08, 0xb7, 0x02, 0xd0, 0x9b, 0xca, 0x91, 0xeb, 0x92, 0x60, 0xd0, 0xde, 0x05, 0x10, 0xb5, 0xc0,
	0x28, 0x14, 0xf0, 0xe5, 0xc9, 0xc2, 0xf1, 0x31, 0x99, 0x22, 0x30, 0xb6, 0x00, 0x6f, 0xab, 0xc9,
	0x61, 0x35, 0xb5, 0x05, 0x71, 0x1a, 0x63, 0x06, 0x84, 0xcd, 0x87, 0xa5, 0x0c, 0xc9, 0xc0, 0x4f,
	0xe7, 0x2e, 0xb8, 0x0e, 0x80, 0x94, 0x9a, 0x8e, 0xaa, 0x89, 0xac, 0x11, 0x66, 0xa8, 0x0a, 0xc9,
	0x14, 0x04, 0x86, 0x70, 0x32, 0xb4, 0x82, 0x18, 0x55, 0x1d, 0x99, 0x81, 0x85, 0xfe, 0xad, 0x11,
	0xd4, 0x5b, 0x7f, 0x4a, 0x78, 0xe8, 0x4d, 0xe1, 0xcb, 0xf4, 0x9d, 0x62, 0x95, 0xdd, 0x20, 0x97,
	0xbe, 0x53, 0xa4, 0xef, 0x0e, 0x23, 0xce, 0x0b, 0xf9, 0xb2, 0xdb, 0xca, 0x37, 0xf9, 0x0b, 0x8a,
	0xb5, 0xee, 0x7f, 0x9b, 0x59, 0x52, 0x9b, 0xc7, 0xf4, 0xaa, 0x35, 0x15, 0xf7, 0xaa, 0xb5, 0xe5,
	0xf7, 0xaa, 0x5b, 0x01, 0xc8, 0xe4, 0x86, 0x86, 0xd4, 0x4c, 0xd6, 0x48, 0x9a, 0x75, 0x54, 0x80,
	0xda, 0x60, 0xd1, 0xaf, 0xdf, 0x99, 0x9e, 0x9f, 0x98, 0x88, 0xa6, 0x72, 0xfa, 0xc8, 0x8c, 0x4c,
	0x61, 0x8c, 0x00, 0x25, 0x4f, 0x24, 0x63, 0xd6, 0x53, 0x01, 0xca, 0x60, 0xc4, 0x00, 0x66, 0x82,
	0xc3, 0xd4, 0xe0, 0xc3, 0xe2, 0xe1, 0x5e, 0xd0, 0x98, 0x56, 0x33, 0xc9, 0x5c, 0x3a, 0xaa, 0xee,
	0x8c, 0xc5, 0x63, 0x59, 0xd2, 0xbb, 0xb5, 0x32, 0x6e, 0x95, 0xe9, 0x15, 0x38, 0xbb, 0xb3, 0x54,
	0xa2, 0x1f, 0x37, 0x5e, 0xf8, 0xed, 0x24, 0x99, 0x45, 0xc2, 0xfd, 0x28, 0x25, 0x98, 0xf1, 0x8b,
	0x7c, 0xd5, 0xb0, 0x78, 0x4a, 0xd8, 0xa2, 0x49, 0xdd, 0x02, 0x4f, 0x88, 0x2a, 0xb4, 0x7e, 0xed,
	0xba, 0xe1, 0x94, 0x13, 0x9f, 0xe1, 0x24, 0x6c, 0x37, 0x8a, 0xfc, 0x6a, 0x24, 0x39, 0x96, 0x60,
	0x24, 0xfb, 0xcb, 0x96, 0xcc, 0x12, 0x62, 0xc9, 0x53, 0x63, 0xc5, 0x24, 0xb3, 0xab, 0xe1, 0x51,
	0x0f, 0x80, 0xbb, 0x94, 0xfd, 0x54, 0x79, 0x40, 0xd2, 0x1b, 0x17, 0x97, 0xfe, 0x82, 0x26, 0x3d,
	0x27, 0xb8, 0xd0, 0x8a, 0xeb, 0x48, 0x26, 0xc4, 0x5b, 0xe9, 0xd4, 0xc1, 0x85, 0x06, 0xab, 0x11,
	0x4b, 0xf0, 0x6a, 0x34, 0x95, 0xad, 0x86, 0x83, 0x16, 0xab, 0x31, 0x35, 0x56, 0x42, 0x0d, 0x07,
	0x0d, 0xcc, 0xa1, 0x7d, 0x60, 0x8a, 0x42, 0x60, 0x71, 0x15, 0x50, 0x83, 0xc6, 0x13, 0x96, 0x18,
	0x49, 0xf8, 0xa5, 0x48, 0x2c, 0x57, 0x8b, 0x9a, 0xcb, 0x16, 0xcb, 0x12, 0x96, 0x18, 0x4f, 0x1c,
	0xe5, 0xe7, 0x17, 0xa0, 0x79, 0x57, 0x2c, 0x61, 0x5e, 0x3f, 0xdb, 0x1d, 0xc5, 0x22, 0x72, 0xbf,
	0xaf, 0x49, 0xa2, 0xe0, 0xa0, 0x14, 0xd7, 0x59, 0xdd, 0x06, 0x36, 0x9c, 0x5c, 0x7d, 0x5b, 0xe2,
	0x1d, 0x14, 0x48, 0xbe, 0xb2, 0x9f, 0x95, 0x0f, 0xcb, 0x96, 0xcf, 0x51, 0x72, 0xf2, 0xaf, 0x5d,
	0x77, 0xca, 0xe7, 0x28, 0x22, 0x5d, 0x9a, 0x24, 0x80, 0x4e, 0xba, 0x22, 0xb4, 0xe1, 0x21, 0xcd,
	0x02, 0x30, 0x63, 0xda, 0x29, 0x2f, 0x68, 0x64, 0x32, 0x0c, 0x7c, 0x0e, 0xb5, 0x71, 0x38, 0x1f,
	0x51, 0x25, 0xcd, 0x02, 0x8a, 0xf5, 0xd1, 0x54, 0x8e, 0xe4, 0x1a, 0x0b, 0x08, 0x23, 0x00, 0xf4,
	0x0e, 0xec, 0x31, 0x6b, 0xb6, 0xd7, 0xce, 0xc6, 0x14, 0x18, 0x51, 0xe2, 0x6a, 0x2d, 0x53, 0x60,
	0xf8, 0xb2, 0xd9, 0xff, 0x61, 0xa1, 0xb8, 0xae, 0xad, 0xd3, 0xa4, 0x36, 0x81, 0x86, 0x8b, 0x7e,
	0x1c, 0xf5, 0x44, 0x34, 0x8d, 0x82, 0xdb, 0xf9, 0xa6, 0xc1, 0x67, 0xb7, 0xc2, 0x2c, 0xc6, 0xe4,
	0x42, 0xd4, 0xe0, 0x3a, 0x86, 0x05, 0x3f, 0x68, 0xe6, 0xcb, 0xd8, 0xd2, 0xc6, 0xd6, 0xad, 0x2e,
	0x7e, 0xc0, 0xc5, 0x85, 0xf2, 0x03, 0xdf, 0xfd, 0xd8, 0xae, 0x70, 0x74, 0x3f, 0x55, 0x95, 0x76,
	0x3f, 0xb0, 0x0f, 0x34, 0x99, 0x49, 0x51, 0x8a, 0xa3, 0x66, 0xd6, 0x67, 0x37, 0xd6, 0x1c, 0x8a,
	0x6a, 0xcd, 0x0d, 0x4e, 0x1c, 0x16, 0xee, 0x01, 0x4f, 0xc4, 0xed, 0xa4, 0x42, 0xb8, 0x55, 0xdb,
	0x17, 0x6b, 0x4e, 0x2c, 0xdb, 0xac, 0x1b, 0x3c, 0x9d, 0x6b, 0x98, 0x81, 0xa1, 0xe6, 0x3e, 0x06,
	0x86, 0xda, 0x8a, 0x06, 0x86, 0xfd, 0x20, 0x10, 0xe7, 0x0a, 0x63, 0x5d, 0xb9, 0xe5, 0x29, 0xce,
	0x17, 0xc6, 0xde, 0x81, 0x3d, 0xf4, 0x49, 0x5d, 0xf8, 0xcd, 0x87, 0x54, 0x87, 0x1c, 0x77, 0x16,
	0xc6, 0x38, 0x57, 0x18, 0xeb, 0xcb, 0x96, 0xcc, 0x17, 0x46, 0x4e, 0xf2, 0xdc, 0xec, 0x07, 0xb4,
	0x64, 0x97, 0xc2, 0x18, 0x77, 0x16, 0x46, 0x50, 0x6e, 0x45, 0x8a, 0xbb, 0x14, 0x46, 0xce, 0xc9,
	0xbc, 0xf5, 0x2e, 0x34, 0x58, 0x0d, 0x67, 0x61, 0x6c, 0x28, 0x5b, 0x0d, 0x97, 0xc2, 0xe8, 0x54,
	0x83, 0x71, 0x85, 0x0b, 0xcd, 0x23, 0x37, 0x32, 0xfe, 0x02, 0xc5, 0x05, 0x53, 0x31, 0x5b, 0xca,
	0x74, 0x09, 0x4f, 0x58, 0xce, 0xe8, 0xc8, 0xd3, 0x18, 0xf2, 0x2b, 0x98, 0x1e, 0x89, 0x7c, 0xae,
	0x62, 0x57, 0x32, 0x39, 0xe6, 0x40, 0x73, 0x9c, 0x2f, 0xdd, 0xc1, 0xc5, 0x15, 0xd8, 0xa4, 0x49,
	0xcf, 0x08, 0x0e, 0x4a, 0xb1, 0x85, 0x8f, 0x05, 0xb4, 0x83, 0xb2, 0x63, 0x21, 0x12, 0xcb, 0x57,
	0xec, 0xd5, 0x65, 0x8b, 0xe5, 0x2b, 0x76, 0x0b, 0x7f, 0x12, 0x4c, 0xb1, 0xdc, 0xc2, 0xd0, 0xff,
	0x7a, 0x40, 0x13, 0xcb, 0x12, 0x46, 0x80, 0xcf, 0xa8, 0xd2, 0xa4, 0xd2, 0xa0, 0x3b, 0x67, 0x04,
	0x10, 0xdb, 0xf4, 0xc9, 0xdb, 0xf3, 0x9f, 0x8f, 0xe3, 0x77, 0x2d, 0xee, 0xcd, 0x8c, 0xea, 0x9f,
	0x1e, 0xb1, 0xde, 0xbe, 0x90, 0xd1, 0x12, 0xd8, 0x07, 0x00, 0x1e, 0xa9, 0xd0, 0x5b, 0x1b, 0xb8,
	0xf0, 0x3c, 0xa3, 0x49, 0x1b, 0x04, 0x0a, 0x2c, 0x06, 0xf3, 0xa3, 0xc7, 0xf3, 0x9f, 0x1c, 0xc7,
	0x1c, 0xa2, 0xa9, 0xdc, 0xbd, 0x99, 0x51, 0x52, 0x54, 0xa8, 0x55, 0xf0, 0x69, 0x50, 0xbd, 0x4f,
	0x19, 0xce, 0xe1, 0x09, 0xd3, 0xd3, 0x13, 0xd0, 0x24, 0xbf, 0x80, 0x21, 0x62, 0x95, 0x31, 0xc5,
	0xe0, 0xdf, 0xb0, 0x1b, 0xd4, 0xa4, 0xd4, 0x74, 0x2c, 0x39, 0x48, 0x0a, 0xcb, 0x93, 0x9a, 0xb4,
	0x42, 0x20, 0x20, 0xb1, 0xde, 0xde, 0x67, 0x02, 0x0a, 0xfd, 0x4f, 0x03, 0xa8, 0x33, 0x5d, 0xf0,
	0x27, 0x38, 0x39, 0xf7, 0x72, 0x6f, 0xdd, 0xf8, 0xa8, 0x1b, 0xc0, 0xe2, 0x6f, 0xdd, 0x70, 0x6f,
	0xd7, 0xf4, 0x72, 0x6f, 0xd7, 0x34, 0xb8, 0x30, 0x71, 0xbe, 0x5d, 0xc3, 0xbd, 0x45, 0xc3, 0xcc,
	0xf0, 0x35, 0x4b, 0x9b, 0xe1, 0x65, 0x7e, 0x86, 0x5f, 0xe3, 0xfa, 0xbe, 0x47, 0xe5, 0x23, 0x7c,
	0x6d, 0xc5, 0x23, 0x7c, 0x5d, 0xa5, 0x23, 0x7c, 0xfd, 0x7d, 0x8f, 0xf0, 0xa0, 0xe2, 0x11, 0xde,
	0x65, 0xbc, 0x7e, 0xe2, 0xf1, 0x78, 0xfd, 0x78, 0xbc, 0xfe, 0x33, 0x1d, 0xaf, 0xcd, 0xbf, 0x00,
	0xd6, 0x99, 0x09, 0x49, 0x0c, 0xe2, 0xe9, 0x92, 0xbc, 0xd3, 0x45, 0x8f, 0x96, 0xff, 0x09, 0x40,
	0x80, 0xcb, 0x27, 0x0f, 0x7b, 0x96, 0x8a, 0x57, 0x3c, 0x4b, 0xc5, 0x1f, 0xcf, 0x52, 0x4b, 0x98,
	0xa5, 0x8e, 0x7a, 0x2a, 0x1a, 0xa6, 0xb6, 0x6a, 0x52, 0xc4, 0x39, 0x4c, 0x6d, 0x74, 0x0e, 0x53,
	0xfa, 0xc8, 0x8c, 0x3e, 0x76, 0x52, 0x9f, 0xbc, 0xad, 0x4f, 0x9f, 0x2b, 0x31, 0x58, 0x21, 0x35,
	0x96, 0x3e, 0x59, 0x11, 0x35, 0xb8, 0x9c, 0xb8, 0xd1, 0x39, 0x59, 0x15, 0x53, 0x83, 0xcb, 0x8f,
	0x27, 0x2b, 0x9e, 0xb2, 0x90, 0x26, 0x6e, 0x53, 0x56, 0x87, 0xeb, 0x94, 0x85, 0xf5, 0x29, 0x3d,
	0x6b, 0x9d, 0xac, 0x78, 0xd6, 0x22, 0xca, 0x38, 0xb3, 0x64, 0x87, 0xeb, 0xac, 0xe5, 0x54, 0xc6,
	0x99, 0x2b, 0xff, 0xbc, 0x86, 0xa5, 0xf8, 0xc3, 0x1c, 0x96, 0x78, 0x9a, 0x99, 0x46, 0xd0, 0xb0,
	0x4d, 0xc9, 0x2a, 0xbb, 0xb0, 0x20, 0xf8, 0x2f, 0x1e, 0xd0, 0xc4, 0x7e, 0x19, 0x0e, 0x43, 0x8c,
	0x26, 0xae, 0x9f, 0xcf, 0xb7, 0x3e, 0x55, 0x72, 0x0d, 0x7e, 0x6f, 0x37, 0xf4, 0xbe, 0x26, 0xbd,
	0x04, 0x1b, 0xf1, 0xcb, 0xbb, 0xa4, 0x15, 0x6f, 0x15, 0xc8, 0xbb, 0xbc, 0xa3, 0xc7, 0xf5, 0x89,
	0x8b, 0x56, 0x7f, 0x5e, 0xb8, 0x78, 0x94, 0x7c, 0x89, 0x4f, 0x55, 0x82, 0x23, 0x5f, 0xcf, 0x9d,
	0xf5, 0x6e, 0x80, 0x1d, 0x61, 0x4a, 0x54, 0x78, 0xdf, 0x96, 0x30, 0xa1, 0xca, 0x84, 0x0f, 0x5a,
	0xf4, 0x87, 0xe0, 0x9c, 0x07, 0x40, 0xe7, 0xf7, 0xbf, 0x70, 0x03, 0xaf, 0xa7, 0xfb, 0x67, 0xd6,
	0xad, 0x1b, 0x17, 0x5d, 0x47, 0x6c, 0x3a, 0xa4, 0x49, 0xdb, 0x21, 0x79, 0x21, 0x99, 0x8c, 0x09,
	0xed, 0xc3, 0xb1, 0x4c, 0xb6, 0x75, 0x73, 0x51, 0xc3, 0xf0, 0x47, 0xa0, 0x94, 0x61, 0xb8, 0x11,
	0x46, 0xe6, 0x75, 0xc3, 0x4d, 0xe5, 0x98, 0x17, 0x26, 0xa2, 0xcc, 0xed, 0xa2, 0xb4, 0x73, 0x6e,
	0x97, 0xf3, 0xc3, 0x5c, 0xe7, 0x76, 0xb9, 0x7c, 0xb4, 0xca, 0x6c, 0x17, 0xc1, 0xb3, 0xdb, 0x65,
	0x12, 0xb9, 0x5b, 0x55, 0x6c, 0xbb, 0xcc, 0x57, 0x5d, 0xc3, 0x07, 0xad, 0xb1, 0xea, 0x10, 0xfc,
	0x3f, 0x0f, 0x58, 0xe9, 0xf6, 0x49, 0x21, 0xec, 0xe4, 0x35, 0x2d, 0xf6, 0x35, 0x67, 0xeb, 0x33,
	0x65, 0xac, 0x24, 0x96, 0x9d, 0xf0, 0x68, 0x52, 0x3f, 0x5c, 0x89, 0x6d, 0xb1, 0x46, 0x33, 0xbc,
	0x6f, 0xcf, 0x17, 0xb3, 0x90, 0xf9, 0xb8, 0x0b, 0xd9, 0x49, 0xbf, 0xba, 0x8e, 0xac, 0xdd, 0x02,
	0xc3, 0xe5, 0x58, 0x1b, 0xb6, 0x44, 0x66, 0xe0, 0xff, 0x7b, 0x40, 0x33, 0xaf, 0x2b, 0xec, 0x28,
	0x69, 0x8a, 0x69, 0xf0, 0xd3, 0x8b, 0xac, 0x22, 0xc6, 0x9e, 0xf7, 0x68, 0xd2, 0x6e, 0x18, 0xe0,
	0x8c, 0x6d, 0xfd, 0xa1, 0xab, 0x9d, 0xba, 0x36, 0x6a, 0x2d, 0xb1, 0x76, 0xd5, 0xf9, 0x5d, 0x1c,
	0xb2, 0x76, 0x2b, 0x7c, 0x69, 0x89, 0xd6, 0x86, 0x0f, 0x5a, 0xbf, 0x0f, 0xc1, 0xab, 0x5e, 0xb0,
	0xc2, 0xe5, 0xeb, 0x1c, 0xe8, 0x38, 0x7a, 0x45, 0xbe, 0x91, 0x6a, 0xed, 0x5c, 0x7c, 0x21, 0x71,
	0xc1, 0x4d, 0x8f, 0x26, 0xfd, 0x14, 0xae, 0xc0, 0x16, 0x9b, 0x2d, 0x27, 0xde, 0xee, 0x57, 0x5d,
	0xdd, 0xf0, 0x87, 0x91, 0xc3, 0xb4, 0xd1, 0x7f, 0x18, 0x39, 0x8c, 0xc7, 0xf0, 0xc2, 0xc5, 0xa3,
	0x74, 0x87, 0xea, 0x08, 0x80, 0x9d, 0xf0, 0xb5, 0xfb, 0x70, 0x49, 0xf8, 0x20, 0x3d, 0xe4, 0x1f,
	0x82, 0x9f, 0x78, 0x41, 0x80, 0x33, 0x0b, 0x3e, 0x55, 0xca, 0x68, 0xd3, 0x33, 0x1d, 0xa5, 0x17,
	0x11, 0xaf, 0xfc, 0xde, 0xa3, 0x49, 0xef, 0xc2, 0x26, 0xd6, 0x2b, 0xad, 0xaf, 0x2f, 0xc9, 0x21,
	0xba, 0x36, 0x8a, 0xef, 0x16, 0x38, 0xcf, 0x50, 0x3e, 0x79, 0x07, 0xfe, 0xc5, 0xf2, 0xf9, 0xc4,
	0x7e, 0x34, 0x82, 0xfd, 0x50, 0x4f, 0xdc, 0x48, 0xbf, 0x6b, 0xc1, 0x4a, 0xa3, 0x84, 0xb5, 0x93,
	0x1a, 0xd6, 0x2e, 0x0d, 0xf4, 0xb5, 0x6f, 0x4b, 0x46, 0xc5, 0xea, 0xcd, 0xdd, 0x5b, 0xba, 0x37,
	0x0b, 0x1e, 0x8f, 0xd8, 0xac, 0xa4, 0x52, 0xc3, 0xb1, 0x28, 0xfa, 0x6f, 0x73, 0xc2, 0xef, 0x67,
	0x92, 0x89, 0x88, 0x03, 0xf2, 0x93, 0x90, 0xfb, 0x7f, 0xe7, 0xf3, 0x12, 0xa5, 0xfb, 0xde, 0x1a,
	0xb4, 0xe6, 0x7b, 0x7f, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x02, 0x19, 0x54, 0x03, 0xfb, 0x47, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DataManagerClient is the client API for DataManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataManagerClient interface {
	GetProjectInfo(ctx context.Context, in *GetProjectInfoRequest, opts ...grpc.CallOption) (*GetProjectInfoResponse, error)
	GetClusterInfoList(ctx context.Context, in *GetClusterInfoListRequest, opts ...grpc.CallOption) (*GetClusterInfoListResponse, error)
	GetClusterInfo(ctx context.Context, in *GetClusterInfoRequest, opts ...grpc.CallOption) (*GetClusterInfoResponse, error)
	GetNamespaceInfoList(ctx context.Context, in *GetNamespaceInfoListRequest, opts ...grpc.CallOption) (*GetNamespaceInfoListResponse, error)
	GetNamespaceInfo(ctx context.Context, in *GetNamespaceInfoRequest, opts ...grpc.CallOption) (*GetNamespaceInfoResponse, error)
	GetWorkloadInfoList(ctx context.Context, in *GetWorkloadInfoListRequest, opts ...grpc.CallOption) (*GetWorkloadInfoListResponse, error)
	GetWorkloadInfo(ctx context.Context, in *GetWorkloadInfoRequest, opts ...grpc.CallOption) (*GetWorkloadInfoResponse, error)
}

type dataManagerClient struct {
	cc *grpc.ClientConn
}

func NewDataManagerClient(cc *grpc.ClientConn) DataManagerClient {
	return &dataManagerClient{cc}
}

func (c *dataManagerClient) GetProjectInfo(ctx context.Context, in *GetProjectInfoRequest, opts ...grpc.CallOption) (*GetProjectInfoResponse, error) {
	out := new(GetProjectInfoResponse)
	err := c.cc.Invoke(ctx, "/datamanager.DataManager/GetProjectInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataManagerClient) GetClusterInfoList(ctx context.Context, in *GetClusterInfoListRequest, opts ...grpc.CallOption) (*GetClusterInfoListResponse, error) {
	out := new(GetClusterInfoListResponse)
	err := c.cc.Invoke(ctx, "/datamanager.DataManager/GetClusterInfoList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataManagerClient) GetClusterInfo(ctx context.Context, in *GetClusterInfoRequest, opts ...grpc.CallOption) (*GetClusterInfoResponse, error) {
	out := new(GetClusterInfoResponse)
	err := c.cc.Invoke(ctx, "/datamanager.DataManager/GetClusterInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataManagerClient) GetNamespaceInfoList(ctx context.Context, in *GetNamespaceInfoListRequest, opts ...grpc.CallOption) (*GetNamespaceInfoListResponse, error) {
	out := new(GetNamespaceInfoListResponse)
	err := c.cc.Invoke(ctx, "/datamanager.DataManager/GetNamespaceInfoList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataManagerClient) GetNamespaceInfo(ctx context.Context, in *GetNamespaceInfoRequest, opts ...grpc.CallOption) (*GetNamespaceInfoResponse, error) {
	out := new(GetNamespaceInfoResponse)
	err := c.cc.Invoke(ctx, "/datamanager.DataManager/GetNamespaceInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataManagerClient) GetWorkloadInfoList(ctx context.Context, in *GetWorkloadInfoListRequest, opts ...grpc.CallOption) (*GetWorkloadInfoListResponse, error) {
	out := new(GetWorkloadInfoListResponse)
	err := c.cc.Invoke(ctx, "/datamanager.DataManager/GetWorkloadInfoList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataManagerClient) GetWorkloadInfo(ctx context.Context, in *GetWorkloadInfoRequest, opts ...grpc.CallOption) (*GetWorkloadInfoResponse, error) {
	out := new(GetWorkloadInfoResponse)
	err := c.cc.Invoke(ctx, "/datamanager.DataManager/GetWorkloadInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataManagerServer is the server API for DataManager service.
type DataManagerServer interface {
	GetProjectInfo(context.Context, *GetProjectInfoRequest) (*GetProjectInfoResponse, error)
	GetClusterInfoList(context.Context, *GetClusterInfoListRequest) (*GetClusterInfoListResponse, error)
	GetClusterInfo(context.Context, *GetClusterInfoRequest) (*GetClusterInfoResponse, error)
	GetNamespaceInfoList(context.Context, *GetNamespaceInfoListRequest) (*GetNamespaceInfoListResponse, error)
	GetNamespaceInfo(context.Context, *GetNamespaceInfoRequest) (*GetNamespaceInfoResponse, error)
	GetWorkloadInfoList(context.Context, *GetWorkloadInfoListRequest) (*GetWorkloadInfoListResponse, error)
	GetWorkloadInfo(context.Context, *GetWorkloadInfoRequest) (*GetWorkloadInfoResponse, error)
}

func RegisterDataManagerServer(s *grpc.Server, srv DataManagerServer) {
	s.RegisterService(&_DataManager_serviceDesc, srv)
}

func _DataManager_GetProjectInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataManagerServer).GetProjectInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datamanager.DataManager/GetProjectInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataManagerServer).GetProjectInfo(ctx, req.(*GetProjectInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataManager_GetClusterInfoList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetClusterInfoListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataManagerServer).GetClusterInfoList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datamanager.DataManager/GetClusterInfoList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataManagerServer).GetClusterInfoList(ctx, req.(*GetClusterInfoListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataManager_GetClusterInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetClusterInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataManagerServer).GetClusterInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datamanager.DataManager/GetClusterInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataManagerServer).GetClusterInfo(ctx, req.(*GetClusterInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataManager_GetNamespaceInfoList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNamespaceInfoListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataManagerServer).GetNamespaceInfoList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datamanager.DataManager/GetNamespaceInfoList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataManagerServer).GetNamespaceInfoList(ctx, req.(*GetNamespaceInfoListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataManager_GetNamespaceInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNamespaceInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataManagerServer).GetNamespaceInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datamanager.DataManager/GetNamespaceInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataManagerServer).GetNamespaceInfo(ctx, req.(*GetNamespaceInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataManager_GetWorkloadInfoList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkloadInfoListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataManagerServer).GetWorkloadInfoList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datamanager.DataManager/GetWorkloadInfoList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataManagerServer).GetWorkloadInfoList(ctx, req.(*GetWorkloadInfoListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataManager_GetWorkloadInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkloadInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataManagerServer).GetWorkloadInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datamanager.DataManager/GetWorkloadInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataManagerServer).GetWorkloadInfo(ctx, req.(*GetWorkloadInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "datamanager.DataManager",
	HandlerType: (*DataManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProjectInfo",
			Handler:    _DataManager_GetProjectInfo_Handler,
		},
		{
			MethodName: "GetClusterInfoList",
			Handler:    _DataManager_GetClusterInfoList_Handler,
		},
		{
			MethodName: "GetClusterInfo",
			Handler:    _DataManager_GetClusterInfo_Handler,
		},
		{
			MethodName: "GetNamespaceInfoList",
			Handler:    _DataManager_GetNamespaceInfoList_Handler,
		},
		{
			MethodName: "GetNamespaceInfo",
			Handler:    _DataManager_GetNamespaceInfo_Handler,
		},
		{
			MethodName: "GetWorkloadInfoList",
			Handler:    _DataManager_GetWorkloadInfoList_Handler,
		},
		{
			MethodName: "GetWorkloadInfo",
			Handler:    _DataManager_GetWorkloadInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/bcs-data-manager/bcs-data-manager.proto",
}
