// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/cluster-resources/cluster-resources.proto

package cluster_resources

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EchoReq struct {
	Str                  string   `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoReq) Reset()         { *m = EchoReq{} }
func (m *EchoReq) String() string { return proto.CompactTextString(m) }
func (*EchoReq) ProtoMessage()    {}
func (*EchoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ddb4355b8eb2198, []int{0}
}

func (m *EchoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoReq.Unmarshal(m, b)
}
func (m *EchoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoReq.Marshal(b, m, deterministic)
}
func (m *EchoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoReq.Merge(m, src)
}
func (m *EchoReq) XXX_Size() int {
	return xxx_messageInfo_EchoReq.Size(m)
}
func (m *EchoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoReq.DiscardUnknown(m)
}

var xxx_messageInfo_EchoReq proto.InternalMessageInfo

func (m *EchoReq) GetStr() string {
	if m != nil {
		return m.Str
	}
	return ""
}

type EchoResp struct {
	Ret                  string   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoResp) Reset()         { *m = EchoResp{} }
func (m *EchoResp) String() string { return proto.CompactTextString(m) }
func (*EchoResp) ProtoMessage()    {}
func (*EchoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ddb4355b8eb2198, []int{1}
}

func (m *EchoResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoResp.Unmarshal(m, b)
}
func (m *EchoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoResp.Marshal(b, m, deterministic)
}
func (m *EchoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoResp.Merge(m, src)
}
func (m *EchoResp) XXX_Size() int {
	return xxx_messageInfo_EchoResp.Size(m)
}
func (m *EchoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoResp.DiscardUnknown(m)
}

var xxx_messageInfo_EchoResp proto.InternalMessageInfo

func (m *EchoResp) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

type PingReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingReq) Reset()         { *m = PingReq{} }
func (m *PingReq) String() string { return proto.CompactTextString(m) }
func (*PingReq) ProtoMessage()    {}
func (*PingReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ddb4355b8eb2198, []int{2}
}

func (m *PingReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingReq.Unmarshal(m, b)
}
func (m *PingReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingReq.Marshal(b, m, deterministic)
}
func (m *PingReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingReq.Merge(m, src)
}
func (m *PingReq) XXX_Size() int {
	return xxx_messageInfo_PingReq.Size(m)
}
func (m *PingReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PingReq.DiscardUnknown(m)
}

var xxx_messageInfo_PingReq proto.InternalMessageInfo

type PingResp struct {
	Ret                  string   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingResp) Reset()         { *m = PingResp{} }
func (m *PingResp) String() string { return proto.CompactTextString(m) }
func (*PingResp) ProtoMessage()    {}
func (*PingResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ddb4355b8eb2198, []int{3}
}

func (m *PingResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingResp.Unmarshal(m, b)
}
func (m *PingResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingResp.Marshal(b, m, deterministic)
}
func (m *PingResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingResp.Merge(m, src)
}
func (m *PingResp) XXX_Size() int {
	return xxx_messageInfo_PingResp.Size(m)
}
func (m *PingResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PingResp.DiscardUnknown(m)
}

var xxx_messageInfo_PingResp proto.InternalMessageInfo

func (m *PingResp) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

type HealthzReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthzReq) Reset()         { *m = HealthzReq{} }
func (m *HealthzReq) String() string { return proto.CompactTextString(m) }
func (*HealthzReq) ProtoMessage()    {}
func (*HealthzReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ddb4355b8eb2198, []int{4}
}

func (m *HealthzReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthzReq.Unmarshal(m, b)
}
func (m *HealthzReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthzReq.Marshal(b, m, deterministic)
}
func (m *HealthzReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthzReq.Merge(m, src)
}
func (m *HealthzReq) XXX_Size() int {
	return xxx_messageInfo_HealthzReq.Size(m)
}
func (m *HealthzReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthzReq.DiscardUnknown(m)
}

var xxx_messageInfo_HealthzReq proto.InternalMessageInfo

type HealthzResp struct {
	// TODO 暂时只返回 OK 的状态，后续需要补充 API，DB 等状态信息
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthzResp) Reset()         { *m = HealthzResp{} }
func (m *HealthzResp) String() string { return proto.CompactTextString(m) }
func (*HealthzResp) ProtoMessage()    {}
func (*HealthzResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ddb4355b8eb2198, []int{5}
}

func (m *HealthzResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthzResp.Unmarshal(m, b)
}
func (m *HealthzResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthzResp.Marshal(b, m, deterministic)
}
func (m *HealthzResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthzResp.Merge(m, src)
}
func (m *HealthzResp) XXX_Size() int {
	return xxx_messageInfo_HealthzResp.Size(m)
}
func (m *HealthzResp) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthzResp.DiscardUnknown(m)
}

var xxx_messageInfo_HealthzResp proto.InternalMessageInfo

func (m *HealthzResp) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*EchoReq)(nil), "clusterresources.EchoReq")
	proto.RegisterType((*EchoResp)(nil), "clusterresources.EchoResp")
	proto.RegisterType((*PingReq)(nil), "clusterresources.PingReq")
	proto.RegisterType((*PingResp)(nil), "clusterresources.PingResp")
	proto.RegisterType((*HealthzReq)(nil), "clusterresources.HealthzReq")
	proto.RegisterType((*HealthzResp)(nil), "clusterresources.HealthzResp")
}

func init() {
	proto.RegisterFile("proto/cluster-resources/cluster-resources.proto", fileDescriptor_6ddb4355b8eb2198)
}

var fileDescriptor_6ddb4355b8eb2198 = []byte{
	// 762 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x94, 0xdf, 0x4f, 0xd3, 0x6c,
	0x14, 0xc7, 0x53, 0xc6, 0x0b, 0x7b, 0x1f, 0xde, 0xbc, 0x23, 0x4d, 0x14, 0x28, 0x03, 0x6b, 0x25,
	0xc6, 0x94, 0x75, 0x65, 0xc5, 0x44, 0x5d, 0x8c, 0x49, 0x51, 0xa2, 0x5c, 0x48, 0xc8, 0xd0, 0x0b,
	0xf1, 0x47, 0x52, 0x67, 0xb3, 0x2d, 0x59, 0xd6, 0xd2, 0x16, 0x4c, 0xb8, 0x1a, 0x44, 0x8c, 0xc2,
	0x60, 0x58, 0x58, 0x86, 0x81, 0xf8, 0x23, 0x08, 0x92, 0xe8, 0x32, 0x30, 0x28, 0x3a, 0x16, 0xfc,
	0x23, 0xfc, 0x17, 0xf6, 0x14, 0xb8, 0xda, 0x95, 0x37, 0x5e, 0x99, 0xfe, 0x9a, 0x73, 0x0c, 0xae,
	0x76, 0x9e, 0x73, 0xbe, 0xcf, 0x79, 0x3e, 0x3b, 0xdf, 0x93, 0x02, 0x5a, 0x94, 0x04, 0x45, 0xa0,
	0x83, 0xd1, 0x11, 0x59, 0xe1, 0x25, 0x4a, 0xe2, 0x65, 0x61, 0x44, 0x0a, 0xf2, 0xf2, 0xe1, 0x8c,
	0xd7, 0x50, 0xa2, 0x8d, 0x56, 0xa1, 0x94, 0xc7, 0xdc, 0x21, 0x41, 0x08, 0x45, 0x79, 0x9a, 0x13,
	0x23, 0x34, 0x17, 0x8b, 0x09, 0x0a, 0xa7, 0x44, 0x84, 0x98, 0xa5, 0xc7, 0x3c, 0xc6, 0x4f, 0x90,
	0x0a, 0xf1, 0x31, 0x4a, 0x7e, 0xcc, 0x85, 0x42, 0xbc, 0x44, 0x0b, 0xa2, 0xa1, 0xa8, 0xa2, 0x6e,
	0x1a, 0xe5, 0xa2, 0x91, 0x47, 0x9c, 0xc2, 0xd3, 0x76, 0x60, 0x16, 0x88, 0x4d, 0x04, 0xd4, 0xf7,
	0x06, 0xc3, 0x42, 0x80, 0x1f, 0x46, 0x9f, 0x20, 0xc0, 0x21, 0x2b, 0x52, 0x33, 0x82, 0x23, 0xe7,
	0xfe, 0xed, 0x91, 0x54, 0xf6, 0x36, 0xe9, 0x18, 0x54, 0x24, 0xa6, 0x1f, 0xee, 0x4e, 0xc2, 0xa5,
	0x57, 0xda, 0xe2, 0x2e, 0xcc, 0xa4, 0xf7, 0x3e, 0xae, 0x15, 0xbe, 0x7e, 0x2a, 0xe6, 0x13, 0x07,
	0xa9, 0xef, 0x30, 0xb7, 0x06, 0x97, 0xd7, 0x71, 0x86, 0xea, 0xee, 0xc2, 0x0b, 0xdf, 0xa6, 0x0f,
	0xd2, 0x5b, 0xc5, 0x7c, 0xa2, 0xb0, 0x33, 0x09, 0x13, 0x93, 0x70, 0xee, 0x03, 0x7c, 0xf7, 0x1e,
	0x6e, 0x24, 0xe1, 0xd3, 0x97, 0x30, 0x93, 0xd6, 0xb2, 0x33, 0x30, 0x39, 0xa5, 0xa5, 0x36, 0x60,
	0x26, 0xfd, 0xab, 0xa7, 0x49, 0x3a, 0xd1, 0x58, 0xd3, 0xdc, 0xce, 0xb8, 0x1e, 0xdc, 0xed, 0xa2,
	0x2e, 0x71, 0xd4, 0x18, 0x4b, 0x0d, 0x51, 0xf7, 0x3b, 0x3b, 0x02, 0xfa, 0xf3, 0xfe, 0x53, 0x2a,
	0xeb, 0x06, 0x18, 0x69, 0x63, 0x31, 0x2e, 0x3d, 0xc0, 0xd9, 0x81, 0x3e, 0x7c, 0x3f, 0xbb, 0xad,
	0x6d, 0x4e, 0x10, 0x77, 0x80, 0xd3, 0xac, 0xc9, 0x22, 0xda, 0x09, 0x1c, 0x12, 0xaf, 0x58, 0xc8,
	0x2d, 0x2a, 0x7b, 0x92, 0x74, 0x04, 0x78, 0x85, 0x71, 0x55, 0xf0, 0x06, 0x74, 0x95, 0x1f, 0x57,
	0xd9, 0x36, 0xd0, 0x4a, 0x96, 0x6e, 0x97, 0xb5, 0x86, 0xf3, 0x33, 0x30, 0xb7, 0x40, 0x5c, 0x06,
	0xf5, 0x03, 0x91, 0x58, 0x28, 0xc0, 0x0f, 0xfb, 0x7d, 0x2a, 0xeb, 0x05, 0x1e, 0xd2, 0x3e, 0x33,
	0xa7, 0xf5, 0xa0, 0x0c, 0xa3, 0x98, 0x7f, 0xa6, 0xa5, 0xdf, 0x1c, 0x2c, 0xc7, 0x61, 0x72, 0x42,
	0x4b, 0x6d, 0x14, 0xf3, 0xcf, 0x89, 0x7e, 0xe0, 0x34, 0xd5, 0xb2, 0x88, 0xe2, 0xe5, 0x60, 0xff,
	0xab, 0x6c, 0x83, 0x09, 0x56, 0x3b, 0x20, 0xc4, 0x42, 0x7f, 0xd3, 0xd8, 0x57, 0x18, 0x57, 0xe9,
	0x05, 0x8b, 0xa6, 0x17, 0x80, 0x1b, 0x3c, 0x17, 0x55, 0xc2, 0x63, 0x3a, 0xd0, 0x05, 0x95, 0x3d,
	0x0f, 0x18, 0xb2, 0x2c, 0xc5, 0x74, 0x58, 0xf1, 0xf1, 0x58, 0x3c, 0x68, 0x28, 0xdd, 0x91, 0x45,
	0xd4, 0x07, 0xea, 0x64, 0x85, 0x53, 0x46, 0xe4, 0xf2, 0xa9, 0xd5, 0x0d, 0x1a, 0x29, 0xe6, 0x3f,
	0x6d, 0x79, 0x06, 0x4e, 0xbd, 0xdd, 0x9b, 0xfa, 0xa2, 0xc5, 0xc7, 0x03, 0x96, 0xd0, 0x7f, 0x46,
	0x65, 0x71, 0xd0, 0x4e, 0x96, 0xb7, 0x39, 0x44, 0xcb, 0xfc, 0x74, 0x80, 0xc6, 0xab, 0xe6, 0x12,
	0x07, 0xec, 0x25, 0x46, 0x55, 0x04, 0xd4, 0xea, 0x43, 0x46, 0x5b, 0xbc, 0x95, 0x0b, 0xee, 0xb5,
	0x0c, 0xc6, 0xb0, 0xa3, 0x4a, 0xb2, 0x48, 0x0c, 0xaa, 0xac, 0x07, 0x75, 0xda, 0x36, 0x61, 0xb8,
	0x11, 0x69, 0xb3, 0xab, 0x30, 0xb9, 0x52, 0xcc, 0x27, 0xf6, 0x16, 0xd6, 0x0b, 0xb9, 0x59, 0x98,
	0x8f, 0xc3, 0xe4, 0x0b, 0xed, 0xf3, 0xf4, 0x7e, 0x36, 0x35, 0xf1, 0xa3, 0x30, 0x5f, 0xd3, 0x4e,
	0xb4, 0xd0, 0x95, 0x2d, 0xe9, 0x51, 0x1f, 0xcd, 0x07, 0xc3, 0x82, 0x1f, 0x21, 0xd1, 0x25, 0x04,
	0xd4, 0xea, 0xf4, 0xd5, 0xa0, 0x2c, 0xbb, 0xab, 0x41, 0xd9, 0x46, 0x11, 0xf7, 0x54, 0xf6, 0x22,
	0xea, 0xb4, 0xff, 0x3f, 0xe6, 0x31, 0xa2, 0x0a, 0x28, 0x6d, 0x25, 0xae, 0xbd, 0x5e, 0x35, 0xa7,
	0xa9, 0x2d, 0x66, 0xe1, 0xdc, 0x1a, 0xcc, 0x2c, 0x6a, 0x5b, 0x3b, 0x06, 0x60, 0x2b, 0x5a, 0x1d,
	0x50, 0xd4, 0xa1, 0x32, 0x08, 0xa8, 0xb7, 0x06, 0x8d, 0xba, 0x0f, 0x53, 0xfc, 0xb1, 0x1f, 0x6b,
	0x3b, 0xa6, 0x2a, 0x8b, 0x04, 0xaf, 0xb2, 0x57, 0xd0, 0x86, 0xb2, 0x15, 0xc1, 0x68, 0xfb, 0x70,
	0x0c, 0x2c, 0x1c, 0x5f, 0x85, 0xb9, 0x6d, 0x73, 0x01, 0xcc, 0x69, 0xa2, 0xee, 0xaa, 0xb0, 0x61,
	0xb3, 0x57, 0xcf, 0x75, 0x95, 0xed, 0x44, 0xcf, 0x82, 0x66, 0xcb, 0x7b, 0xbc, 0x64, 0x3e, 0xce,
	0x8a, 0x91, 0x6b, 0x42, 0x90, 0xfc, 0x07, 0x38, 0x6e, 0xf6, 0xdd, 0x62, 0x1c, 0x3e, 0x6f, 0x17,
	0x89, 0x20, 0x43, 0x4d, 0x47, 0x7c, 0x1a, 0x1f, 0xd6, 0x19, 0x85, 0xee, 0xdf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xaf, 0x61, 0x95, 0xa8, 0x3c, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ClusterResourcesClient is the client API for ClusterResources service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClusterResourcesClient interface {
	// 基础类接口
	Echo(ctx context.Context, in *EchoReq, opts ...grpc.CallOption) (*EchoResp, error)
	Ping(ctx context.Context, in *PingReq, opts ...grpc.CallOption) (*PingResp, error)
	Healthz(ctx context.Context, in *HealthzReq, opts ...grpc.CallOption) (*HealthzResp, error)
}

type clusterResourcesClient struct {
	cc *grpc.ClientConn
}

func NewClusterResourcesClient(cc *grpc.ClientConn) ClusterResourcesClient {
	return &clusterResourcesClient{cc}
}

func (c *clusterResourcesClient) Echo(ctx context.Context, in *EchoReq, opts ...grpc.CallOption) (*EchoResp, error) {
	out := new(EchoResp)
	err := c.cc.Invoke(ctx, "/clusterresources.ClusterResources/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterResourcesClient) Ping(ctx context.Context, in *PingReq, opts ...grpc.CallOption) (*PingResp, error) {
	out := new(PingResp)
	err := c.cc.Invoke(ctx, "/clusterresources.ClusterResources/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterResourcesClient) Healthz(ctx context.Context, in *HealthzReq, opts ...grpc.CallOption) (*HealthzResp, error) {
	out := new(HealthzResp)
	err := c.cc.Invoke(ctx, "/clusterresources.ClusterResources/Healthz", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClusterResourcesServer is the server API for ClusterResources service.
type ClusterResourcesServer interface {
	// 基础类接口
	Echo(context.Context, *EchoReq) (*EchoResp, error)
	Ping(context.Context, *PingReq) (*PingResp, error)
	Healthz(context.Context, *HealthzReq) (*HealthzResp, error)
}

// UnimplementedClusterResourcesServer can be embedded to have forward compatible implementations.
type UnimplementedClusterResourcesServer struct {
}

func (*UnimplementedClusterResourcesServer) Echo(ctx context.Context, req *EchoReq) (*EchoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Echo not implemented")
}
func (*UnimplementedClusterResourcesServer) Ping(ctx context.Context, req *PingReq) (*PingResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedClusterResourcesServer) Healthz(ctx context.Context, req *HealthzReq) (*HealthzResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Healthz not implemented")
}

func RegisterClusterResourcesServer(s *grpc.Server, srv ClusterResourcesServer) {
	s.RegisterService(&_ClusterResources_serviceDesc, srv)
}

func _ClusterResources_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EchoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterResourcesServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusterresources.ClusterResources/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterResourcesServer).Echo(ctx, req.(*EchoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterResources_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterResourcesServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusterresources.ClusterResources/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterResourcesServer).Ping(ctx, req.(*PingReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterResources_Healthz_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthzReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterResourcesServer).Healthz(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusterresources.ClusterResources/Healthz",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterResourcesServer).Healthz(ctx, req.(*HealthzReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClusterResources_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clusterresources.ClusterResources",
	HandlerType: (*ClusterResourcesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _ClusterResources_Echo_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _ClusterResources_Ping_Handler,
		},
		{
			MethodName: "Healthz",
			Handler:    _ClusterResources_Healthz_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/cluster-resources/cluster-resources.proto",
}
