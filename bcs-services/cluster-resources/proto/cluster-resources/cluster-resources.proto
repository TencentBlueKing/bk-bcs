// Tencent is pleased to support the open source community by making Blueking Container Service available.
// Copyright (C) 2022 THL A29 Limited, a Tencent company. All rights reserved.
// Licensed under the MIT License (the "License"); you may not use this file except
// in compliance with the License. You may obtain a copy of the License at
//
// http://opensource.org/licenses/MIT
//
// Unless required by applicable law or agreed to in writing, software distributed under,
// the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
// either express or implied. See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package clusterresources;

option go_package = "proto/cluster-resources";

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "validate/validate.proto";

// swagger 相关定义
option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
	info: {
		title: "Cluster Resources ApiDoc"
		version: "1.0"
		license: {
			name: "MIT";
		};
	};
	schemes: HTTP
};

// 基础类接口
service Basic {
	rpc Echo(EchoReq) returns (EchoResp) {
		option (google.api.http) = {
			post: "/clusterresources/v1/echo"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "Echo 接口，用于开发测试"
			summary: "Echo API"
		};
	}

	rpc Ping(PingReq) returns (PingResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/ping"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "Ping 接口，用于检查服务是否存活"
			summary: "Ping API"
		};
	}

	rpc Healthz(HealthzReq) returns (HealthzResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/healthz"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "Healthz 接口，用于检查服务健康状态"
			summary: "Healthz API"
		};
	}

	rpc Version(VersionReq) returns (VersionResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/version"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "Version 接口，用于获取服务版本信息"
			summary: "Version API"
		};
	}
}

// 节点接口
service Node {
	rpc ListNode(ResListReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/nodes"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取节点列表"
			summary: "ListNode API"
		};
	}
}

// 命名空间接口
service Namespace {
	rpc ListNS(ResListReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取命名空间列表"
			summary: "ListNS API"
		};
	}
}

// 工作负载类接口
service Workload {
	rpc ListDeploy(ResListReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/deployments"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 Deployment 列表"
			summary: "ListDeploy API"
		};
	}

	rpc GetDeploy(ResGetReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/deployments/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 Deployment"
			summary: "GetDeploy API"
		};
	}

	rpc CreateDeploy(ResCreateReq) returns (CommonResp) {
		option (google.api.http) = {
			post: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/workloads/deployments"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "创建 Deployment"
			summary: "CreateDeploy API"
		};
	}

	rpc UpdateDeploy(ResUpdateReq) returns (CommonResp) {
		option (google.api.http) = {
			put: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/deployments/{name}"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "更新 Deployment"
			summary: "UpdateDeploy API"
		};
	}

	rpc ScaleDeploy(ResScaleReq) returns (CommonResp) {
		option (google.api.http) = {
			put: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/deployments/{name}/scale"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "Deployment 扩缩容"
			summary: "ScaleDeploy API"
		};
	}

	rpc RescheduleDeployPo(ResBatchRescheduleReq) returns (CommonResp) {
		option (google.api.http) = {
			put: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/deployments/{name}/reschedule"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "重新调度 Deployment 下属的 Pod"
			summary: "RescheduleDeployPo API"
		};
	}

	rpc DeleteDeploy(ResDeleteReq) returns (CommonResp) {
		option (google.api.http) = {
			delete: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/deployments/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "删除 Deployment"
			summary: "DeleteDeploy API"
		};
	}

	rpc ListRS(ResListReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/replicasets"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 ReplicasSet 列表"
			summary: "ListRS API"
		};
	}

	rpc ListDS(ResListReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/daemonsets"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 DaemonSet 列表"
			summary: "ListDS API"
		};
	}

	rpc GetDS(ResGetReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/daemonsets/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 DaemonSet"
			summary: "GetDS API"
		};
	}

	rpc CreateDS(ResCreateReq) returns (CommonResp) {
		option (google.api.http) = {
			post: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/workloads/daemonsets"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "创建 DaemonSet"
			summary: "CreateDS API"
		};
	}

	rpc UpdateDS(ResUpdateReq) returns (CommonResp) {
		option (google.api.http) = {
			put: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/daemonsets/{name}"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "更新 DaemonSet"
			summary: "UpdateDS API"
		};
	}

	rpc DeleteDS(ResDeleteReq) returns (CommonResp) {
		option (google.api.http) = {
			delete: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/daemonsets/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "删除 DaemonSet"
			summary: "DeleteDS API"
		};
	}

	rpc ListSTS(ResListReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/statefulsets"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 StatefulSet 列表"
			summary: "ListSTS API"
		};
	}

	rpc GetSTS(ResGetReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/statefulsets/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 StatefulSet"
			summary: "GetSTS API"
		};
	}

	rpc CreateSTS(ResCreateReq) returns (CommonResp) {
		option (google.api.http) = {
			post: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/workloads/statefulsets"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "创建 StatefulSet"
			summary: "CreateSTS API"
		};
	}

	rpc UpdateSTS(ResUpdateReq) returns (CommonResp) {
		option (google.api.http) = {
			put: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/statefulsets/{name}"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "更新 StatefulSet"
			summary: "UpdateSTS API"
		};
	}

	rpc ScaleSTS(ResScaleReq) returns (CommonResp) {
		option (google.api.http) = {
			put: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/statefulsets/{name}/scale"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "StatefulSet 扩缩容"
			summary: "ScaleSTS API"
		};
	}

	rpc RescheduleSTSPo(ResBatchRescheduleReq) returns (CommonResp) {
		option (google.api.http) = {
			put: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/statefulsets/{name}/reschedule"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "重新调度 StatefulSets 下属的 Pod"
			summary: "RescheduleSTSPo API"
		};
	}

	rpc DeleteSTS(ResDeleteReq) returns (CommonResp) {
		option (google.api.http) = {
			delete: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/statefulsets/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "删除 StatefulSet"
			summary: "DeleteSTS API"
		};
	}

	rpc ListCJ(ResListReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/cronjobs"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 CronJob 列表"
			summary: "ListCJ API"
		};
	}

	rpc GetCJ(ResGetReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/cronjobs/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 CronJob"
			summary: "GetCJ API"
		};
	}

	rpc CreateCJ(ResCreateReq) returns (CommonResp) {
		option (google.api.http) = {
			post: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/workloads/cronjobs"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "创建 CronJob"
			summary: "CreateCJ API"
		};
	}

	rpc UpdateCJ(ResUpdateReq) returns (CommonResp) {
		option (google.api.http) = {
			put: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/cronjobs/{name}"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "更新 CronJob"
			summary: "UpdateCJ API"
		};
	}

	rpc DeleteCJ(ResDeleteReq) returns (CommonResp) {
		option (google.api.http) = {
			delete: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/cronjobs/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "删除 CronJob"
			summary: "DeleteCJ API"
		};
	}

	rpc ListJob(ResListReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/jobs"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 Job 列表"
			summary: "ListJob API"
		};
	}

	rpc GetJob(ResGetReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/jobs/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 Job"
			summary: "GetJob API"
		};
	}

	rpc CreateJob(ResCreateReq) returns (CommonResp) {
		option (google.api.http) = {
			post: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/workloads/jobs"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "创建 Job"
			summary: "CreateJob API"
		};
	}

	rpc UpdateJob(ResUpdateReq) returns (CommonResp) {
		option (google.api.http) = {
			put: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/jobs/{name}"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "更新 Job"
			summary: "UpdateJob API"
		};
	}

	rpc DeleteJob(ResDeleteReq) returns (CommonResp) {
		option (google.api.http) = {
			delete: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/jobs/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "删除 Job"
			summary: "DeleteJob API"
		};
	}

	rpc ListPo(ResListReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/pods"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 Pod 列表"
			summary: "ListPo API"
		};
	}

	rpc ListPoByNode(ListPoByNodeReq) returns (CommonListResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/nodes/{nodeName}/workloads/pods"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "通过节点名称获取 Pod 列表"
			summary: "ListPoByNode API"
		};
	}

	rpc GetPo(ResGetReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/pods/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 Pod"
			summary: "GetPo API"
		};
	}

	rpc CreatePo(ResCreateReq) returns (CommonResp) {
		option (google.api.http) = {
			post: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/workloads/pods"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "创建 Pod"
			summary: "CreatePo API"
		};
	}

	rpc UpdatePo(ResUpdateReq) returns (CommonResp) {
		option (google.api.http) = {
			put: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/pods/{name}"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "更新 Pod"
			summary: "UpdatePo API"
		};
	}

	rpc DeletePo(ResDeleteReq) returns (CommonResp) {
		option (google.api.http) = {
			delete: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/pods/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "删除 Pod"
			summary: "DeletePo API"
		};
	}

	rpc ListPoPVC(ResGetReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/pods/{name}/pvcs"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 Pod 关联的 PVC"
			summary: "ListPoPVC API"
		};
	}

	rpc ListPoCM(ResGetReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/pods/{name}/configmaps"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 Pod 关联的 ConfigMap"
			summary: "ListPoCM API"
		};
	}

	rpc ListPoSecret(ResGetReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/pods/{name}/secrets"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 Pod 关联的 Secret"
			summary: "ListPoSecret API"
		};
	}

	rpc ReschedulePo(ResUpdateReq) returns (CommonResp) {
		option (google.api.http) = {
			put: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/pods/{name}/reschedule"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "重新调度 Pod"
			summary: "ReschedulePo API"
		};
	}

	rpc ListContainer(ContainerListReq) returns (CommonListResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/pods/{podName}/containers"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 Pod 包含的容器列表"
			summary: "ListContainer API"
		};
	}

	rpc GetContainer(ContainerGetReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/pods/{podName}/containers/{containerName}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取指定 Pod 下单个容器信息"
			summary: "GetContainer API"
		};
	}

	rpc GetContainerEnvInfo(ContainerGetReq) returns (CommonListResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/pods/{podName}/containers/{containerName}/env_info"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取指定 Pod 下单个容器环境变量信息"
			summary: "GetContainerEnvInfo API"
		};
	}
}

// 网络类接口
service Network {
	rpc ListIng(ResListReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/networks/ingresses"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 Ingress 列表"
			summary: "ListIng API"
		};
	}

	rpc GetIng(ResGetReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/networks/ingresses/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 Ingress"
			summary: "GetIng API"
		};
	}

	rpc CreateIng(ResCreateReq) returns (CommonResp) {
		option (google.api.http) = {
			post: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/networks/ingresses"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "创建 Ingress"
			summary: "CreateIng API"
		};
	}

	rpc UpdateIng(ResUpdateReq) returns (CommonResp) {
		option (google.api.http) = {
			put: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/networks/ingresses/{name}"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "更新 Ingress"
			summary: "UpdateIng API"
		};
	}

	rpc DeleteIng(ResDeleteReq) returns (CommonResp) {
		option (google.api.http) = {
			delete: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/networks/ingresses/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "删除 Ingress"
			summary: "DeleteIng API"
		};
	}

	rpc ListSVC(ResListReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/networks/services"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 Service 列表"
			summary: "ListSVC API"
		};
	}

	rpc GetSVC(ResGetReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/networks/services/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 Service"
			summary: "GetSVC API"
		};
	}

	rpc CreateSVC(ResCreateReq) returns (CommonResp) {
		option (google.api.http) = {
			post: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/networks/services"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "创建 Service"
			summary: "CreateSVC API"
		};
	}

	rpc UpdateSVC(ResUpdateReq) returns (CommonResp) {
		option (google.api.http) = {
			put: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/networks/services/{name}"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "更新 Service"
			summary: "UpdateSVC API"
		};
	}

	rpc DeleteSVC(ResDeleteReq) returns (CommonResp) {
		option (google.api.http) = {
			delete: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/networks/services/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "删除 Service"
			summary: "DeleteSVC API"
		};
	}

	rpc ListEP(ResListReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/networks/endpoints"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 Endpoints 列表"
			summary: "ListEP API"
		};
	}

	rpc GetEP(ResGetReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/networks/endpoints/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 Endpoints"
			summary: "GetEP API"
		};
	}

	rpc GetEPStatus(ResGetReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/networks/endpoints/{name}/status"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 Endpoints 状态"
			summary: "GetEPStatus API"
		};
	}

	rpc CreateEP(ResCreateReq) returns (CommonResp) {
		option (google.api.http) = {
			post: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/networks/endpoints"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "创建 Endpoints"
			summary: "CreateEP API"
		};
	}

	rpc UpdateEP(ResUpdateReq) returns (CommonResp) {
		option (google.api.http) = {
			put: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/networks/endpoints/{name}"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "更新 Endpoints"
			summary: "UpdateEP API"
		};
	}

	rpc DeleteEP(ResDeleteReq) returns (CommonResp) {
		option (google.api.http) = {
			delete: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/networks/endpoints/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "删除 Endpoints"
			summary: "DeleteEP API"
		};
	}
}

// 配置类接口
service Config {
	rpc ListCM(ResListReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/configs/configmaps"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 ConfigMap 列表"
			summary: "ListCM API"
		};
	}

	rpc GetCM(ResGetReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/configs/configmaps/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 ConfigMap"
			summary: "GetCM API"
		};
	}

	rpc CreateCM(ResCreateReq) returns (CommonResp) {
		option (google.api.http) = {
			post: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/configs/configmaps"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "创建 ConfigMap"
			summary: "CreateCM API"
		};
	}

	rpc UpdateCM(ResUpdateReq) returns (CommonResp) {
		option (google.api.http) = {
			put: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/configs/configmaps/{name}"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "更新 ConfigMap"
			summary: "UpdateCM API"
		};
	}

	rpc DeleteCM(ResDeleteReq) returns (CommonResp) {
		option (google.api.http) = {
			delete: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/configs/configmaps/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "删除 ConfigMap"
			summary: "DeleteCM API"
		};
	}

	rpc ListSecret(ResListReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/configs/secrets"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 Secret 列表"
			summary: "ListSecret API"
		};
	}

	rpc GetSecret(ResGetReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/configs/secrets/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 Secret"
			summary: "GetSecret API"
		};
	}

	rpc CreateSecret(ResCreateReq) returns (CommonResp) {
		option (google.api.http) = {
			post: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/configs/secrets"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "创建 Secret"
			summary: "CreateSecret API"
		};
	}

	rpc UpdateSecret(ResUpdateReq) returns (CommonResp) {
		option (google.api.http) = {
			put: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/configs/secrets/{name}"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "更新 Secret"
			summary: "UpdateSecret API"
		};
	}

	rpc DeleteSecret(ResDeleteReq) returns (CommonResp) {
		option (google.api.http) = {
			delete: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/configs/secrets/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "删除 Secret"
			summary: "DeleteSecret API"
		};
	}
}

// 存储类接口
service Storage {
	rpc ListPV(ResListReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/storages/persistent_volumes"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 PersistentVolume 列表"
			summary: "ListPV API"
		};
	}

	rpc GetPV(ResGetReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/storages/persistent_volumes/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 PersistentVolume"
			summary: "GetPV API"
		};
	}

	rpc CreatePV(ResCreateReq) returns (CommonResp) {
		option (google.api.http) = {
			post: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/storages/persistent_volumes"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "创建 PersistentVolume"
			summary: "CreatePV API"
		};
	}

	rpc UpdatePV(ResUpdateReq) returns (CommonResp) {
		option (google.api.http) = {
			put: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/storages/persistent_volumes/{name}"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "更新 PersistentVolume"
			summary: "UpdatePV API"
		};
	}

	rpc DeletePV(ResDeleteReq) returns (CommonResp) {
		option (google.api.http) = {
			delete: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/storages/persistent_volumes/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "删除 PersistentVolume"
			summary: "DeletePV API"
		};
	}

	rpc ListPVC(ResListReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/storages/persistent_volume_claims"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 PersistentVolumeClaim 列表"
			summary: "ListPVC API"
		};
	}

	rpc GetPVC(ResGetReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/storages/persistent_volume_claims/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 PersistentVolumeClaim"
			summary: "GetPVC API"
		};
	}

	rpc GetPVCMountInfo(ResGetReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/storages/persistent_volume_claims/{name}/mount_info"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 PersistentVolumeClaim 被 Pod 挂载的信息"
			summary: "GetPVCBoundInfo API"
		};
	}

	rpc CreatePVC(ResCreateReq) returns (CommonResp) {
		option (google.api.http) = {
			post: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/storages/persistent_volume_claims"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "创建 PersistentVolumeClaim"
			summary: "CreatePVC API"
		};
	}

	rpc UpdatePVC(ResUpdateReq) returns (CommonResp) {
		option (google.api.http) = {
			put: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/storages/persistent_volume_claims/{name}"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "更新 PersistentVolumeClaim"
			summary: "UpdatePVC API"
		};
	}

	rpc DeletePVC(ResDeleteReq) returns (CommonResp) {
		option (google.api.http) = {
			delete: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/storages/persistent_volume_claims/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "删除 PersistentVolumeClaim"
			summary: "DeletePVC API"
		};
	}

	rpc ListSC(ResListReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/storages/storage_classes"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 StorageClass 列表"
			summary: "ListSC API"
		};
	}

	rpc GetSC(ResGetReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/storages/storage_classes/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 StorageClass"
			summary: "GetSC API"
		};
	}

	rpc CreateSC(ResCreateReq) returns (CommonResp) {
		option (google.api.http) = {
			post: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/storages/storage_classes"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "创建 StorageClass"
			summary: "CreateSC API"
		};
	}

	rpc UpdateSC(ResUpdateReq) returns (CommonResp) {
		option (google.api.http) = {
			put: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/storages/storage_classes/{name}"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "更新 StorageClass"
			summary: "UpdateSC API"
		};
	}

	rpc DeleteSC(ResDeleteReq) returns (CommonResp) {
		option (google.api.http) = {
			delete: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/storages/storage_classes/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "删除 StorageClass"
			summary: "DeleteSC API"
		};
	}
}

// RBAC 类接口
service RBAC {
	rpc ListSA(ResListReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/rbac/service_accounts"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 ServiceAccount 列表"
			summary: "ListSA API"
		};
	}

	rpc GetSA(ResGetReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/rbac/service_accounts/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 ServiceAccount"
			summary: "GetSA API"
		};
	}

	rpc CreateSA(ResCreateReq) returns (CommonResp) {
		option (google.api.http) = {
			post: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/rbac/service_accounts"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "创建 ServiceAccount"
			summary: "CreateSA API"
		};
	}

	rpc UpdateSA(ResUpdateReq) returns (CommonResp) {
		option (google.api.http) = {
			put: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/rbac/service_accounts/{name}"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "更新 ServiceAccount"
			summary: "UpdateSA API"
		};
	}

	rpc DeleteSA(ResDeleteReq) returns (CommonResp) {
		option (google.api.http) = {
			delete: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/rbac/service_accounts/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "删除 ServiceAccount"
			summary: "DeleteSA API"
		};
	}
}

// HPA 接口
service HPA {
	rpc ListHPA(ResListReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/hpa"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 HPA 列表"
			summary: "ListHPA API"
		};
	}

	rpc GetHPA(ResGetReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/hpa/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 HPA"
			summary: "GetHPA API"
		};
	}

	rpc CreateHPA(ResCreateReq) returns (CommonResp) {
		option (google.api.http) = {
			post: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/hpa"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "创建 HPA"
			summary: "CreateHPA API"
		};
	}

	rpc UpdateHPA(ResUpdateReq) returns (CommonResp) {
		option (google.api.http) = {
			put: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/hpa/{name}"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "更新 HPA"
			summary: "UpdateHPA API"
		};
	}

	rpc DeleteHPA(ResDeleteReq) returns (CommonResp) {
		option (google.api.http) = {
			delete: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/hpa/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "删除 HPA"
			summary: "DeleteHPA API"
		};
	}
}

// 自定义资源类接口
service CustomRes {
	rpc ListCRD(ResListReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/crds"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 CRD 列表"
			summary: "ListCRD API"
		};
	}

	rpc GetCRD(ResGetReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/crds/{name}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 CRD"
			summary: "GetCRD API"
		};
	}

	rpc ListCObj(CObjListReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/crds/{CRDName}/custom_objects"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 自定义资源 列表"
			summary: "ListCObj API"
		};
	}

	rpc GetCObj(CObjGetReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/crds/{CRDName}/custom_objects/{cobjName}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 自定义资源"
			summary: "GetCObj API"
		};
	}

	rpc CreateCObj(CObjCreateReq) returns (CommonResp) {
		option (google.api.http) = {
			post: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/crds/{CRDName}/custom_objects"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "创建 自定义资源"
			summary: "CreateCObj API"
		};
	}

	rpc UpdateCObj(CObjUpdateReq) returns (CommonResp) {
		option (google.api.http) = {
			put: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/crds/{CRDName}/custom_objects/{cobjName}"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "更新 自定义资源"
			summary: "UpdateCObj API"
		};
	}

	rpc ScaleCObj(CObjScaleReq) returns (CommonResp) {
		option (google.api.http) = {
			put: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/crds/{CRDName}/custom_objects/{cobjName}/scale"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "自定义资源扩缩容（仅 GameDeployment, GameStatefulSet 可用）"
			summary: "ScaleCObj API"
		};
	}

	rpc DeleteCObj(CObjDeleteReq) returns (CommonResp) {
		option (google.api.http) = {
			delete: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/crds/{CRDName}/custom_objects/{cobjName}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "删除 自定义资源"
			summary: "DeleteCObj API"
		};
	}

	rpc RescheduleCObjPo(CObjBatchRescheduleReq) returns (CommonResp) {
		option (google.api.http) = {
			put: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/crds/{CRDName}/custom_objects/{cobjName}/reschedule"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "重新调度自定义资源下属的 Pod（仅 GameDeployment, GameStatefulSet 可用）"
			summary: "RescheduleCObjPo API"
		};
	}

}

service Resource {
	// 示例模板接口
	rpc GetK8SResTemplate(GetK8SResTemplateReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/examples/manifests"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取 K8S 资源模版"
			summary: "GetK8SResTemplate API"
		};
	}

	// 订阅接口
	rpc Subscribe(SubscribeReq) returns (stream SubscribeResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/subscribe"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "资源订阅"
			summary: "Subscribe API"
		};
	}

	// 主动使 Discover 缓存失效
	rpc InvalidateDiscoveryCache(InvalidateDiscoveryCacheReq) returns (CommonResp) {
		option (google.api.http) = {
			post: "/clusterresources/v1/invalidate_discovery_cache"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "主动使 Discovery 缓存失效"
			summary: "Invalidate Discovery Cache API"
		};
	}

	// 表单化数据渲染预览
	rpc FormDataRenderPreview(FormRenderPreviewReq) returns (CommonResp) {
		option (google.api.http) = {
			post: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/render_manifest_preview"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "表单化数据渲染预览"
			summary: "Form data render preview API"
		};
	}

	// 获取指定资源表单 Schema
	rpc GetResFormSchema(GetResFormSchemaReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/form_schema"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取指定资源表单 Schema"
			summary: "Get resource's form schema API"
		};
	}

	rpc GetFormSupportedAPIVersions(GetFormSupportedApiVersionsReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/form_supported_api_versions"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取指定资源可用于表单化的 APIVersion"
			summary: "Get resource's supported apiVersions for form"
		};
	}

	// 获取用于下拉框选项的资源数据
	rpc GetResSelectItems(GetResSelectItemsReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/res_select_items"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取用于下拉框选项的资源数据（selectItems）"
			summary: "Get resource's select items for form"
		};
	}
}

// 基础类请求/响应体
message EchoReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "EchoReq", description: "Echo API 请求"}
	};
	string str = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
			title: "Str", description: "待回显字符串，长度在 2-30 之间，仅包含大小写字母及数字"
		}, (validate.rules).string = {min_len: 2, max_len: 30, pattern: "^[0-9a-zA-Z-]+$"}];
}

message EchoResp {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "EchoResp", description: "Echo API 响应"}
	};
	string ret = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "Ret", description: "回显字符串"
	}];
}

message PingReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "PingReq", description: "Ping API 请求（无需参数）"}
	};
}

message PingResp {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "PingResp", description: "Ping API 响应"}
	};
	string ret = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "Ret", description: "Pong"
	}];
}

message HealthzReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "HealthzReq", description: "Healthz API 请求（无需参数）"}
	};
	bool raiseErr = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "raiseErr", description: "存在依赖服务异常的情况，是否返回错误（默认只在响应体中标记）"
	}];
	string token = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "Token", description: "Healthz API Token"
	}];
}

message HealthzResp {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "HealthzResp", description: "Healthz API 响应"}
	};
	string callTime = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "CallTime", description: "API 请求时间"
	}];
	string status = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "Status", description: "服务状态"
	}];
	string redis = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "redis", description: "Redis 状态"
	}];
}

message VersionReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "VersionReq", description: "Version API 请求（无需参数）"}
	};
}

message VersionResp {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "VersionResp", description: "Version API 响应"}
	};
	string version = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "Version", description: "服务版本"
	}];
	string gitCommit = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "GitCommit", description: "最新 Commit ID"
	}];
	string buildTime = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "BuildTime", description: "构建时间"
	}];
	string goVersion = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "GoVersion", description: "Go 版本"
	}];
	string runMode = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "RunMode", description: "运行模式"
	}];
	string callTime = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "CallTime", description: "API 请求时间"
	}];
}

// 业务类请求/响应体
message ResListReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "ResListReq", description: "k8s 资源列表查询请求体"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {min_len: 13, max_len: 14}];
	string namespace = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "命名空间"
	}, (validate.rules).string = {max_len: 63, pattern: "^[0-9a-zA-Z-]*$"}];
	string labelSelector = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "标签选择器"
	}, (validate.rules).string = {max_len: 2048}];
	string apiVersion = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "apiVersion"
	}, (validate.rules).string = {max_len: 63}];
	string ownerName = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "所属资源名称"
	}, (validate.rules).string = {max_len: 256}];
	string ownerKind = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "所属资源类型"
	}, (validate.rules).string = {max_len: 64}];
	string format = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "资源配置格式（manifest/selectItems）"
	}, (validate.rules).string = {in: ["", "manifest", "selectItems"]}];
	string scene = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "使用场景", description: "仅 selectItems 格式下有效"
	}, (validate.rules).string = {max_len: 32}];
}

message ResGetReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "ResGetReq", description: "查询单个 k8s 资源请求体"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {min_len: 13, max_len: 14}];
	string namespace = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "命名空间"
	}, (validate.rules).string = {max_len: 63, pattern: "^[0-9a-zA-Z-]*$"}];
	string name = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "资源名称"
	}, (validate.rules).string = {max_len: 253, pattern: "[a-z0-9]([-a-z0-9]*[a-z0-9])?(.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"}];
	string apiVersion = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "apiVersion"
	}, (validate.rules).string = {max_len: 63}];
	string format = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "资源配置格式（manifest/formData）"
	}, (validate.rules).string = {in: ["", "manifest", "formData"]}];
}

message ResCreateReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "ResCreateReq", description: "创建单个 k8s 资源请求体"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {min_len: 13, max_len: 14}];
	google.protobuf.Struct rawData = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "资源配置信息"}];
	string format = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "资源配置格式（manifest/formData）"
	}, (validate.rules).string = {in: ["", "manifest", "formData"]}];
}

message ResUpdateReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "ResUpdateReq", description: "更新单个 k8s 资源请求体"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {min_len: 13, max_len: 14}];
	string namespace = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "命名空间"
	}, (validate.rules).string = {max_len: 63, pattern: "^[0-9a-zA-Z-]*$"}];
	string name = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "资源名称"
	}, (validate.rules).string = {max_len: 253, pattern: "[a-z0-9]([-a-z0-9]*[a-z0-9])?(.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"}];
	google.protobuf.Struct rawData = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "资源配置信息"}];
	string format = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "资源配置格式（manifest/formData）"
	}, (validate.rules).string = {in: ["", "manifest", "formData"]}];
}

message ResScaleReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "ResScaleReq", description: "单个 k8s 资源扩缩容请求体"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {min_len: 13, max_len: 14}];
	string namespace = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "命名空间"
	}, (validate.rules).string = {max_len: 63, pattern: "^[0-9a-zA-Z-]*$"}];
	string name = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "资源名称"
	}, (validate.rules).string = {max_len: 253, pattern: "[a-z0-9]([-a-z0-9]*[a-z0-9])?(.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"}];
	int64 replicas = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "副本数量（0-8192）"
	}, (validate.rules).int64 = {lte: 8192, gte: 0}];
}

message ResDeleteReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "ResDeleteReq", description: "删除单个 k8s 资源请求体"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {min_len: 13, max_len: 14}];
	string namespace = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "命名空间"
	}, (validate.rules).string = {max_len: 63, pattern: "^[0-9a-zA-Z-]*$"}];
	string name = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "资源名称"
	}, (validate.rules).string = {max_len: 253, pattern: "[a-z0-9]([-a-z0-9]*[a-z0-9])?(.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"}];
}

message ResBatchRescheduleReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "ResBatchRescheduleReq", description: "重新调度 k8s 资源下属 Pod 请求体"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {min_len: 13, max_len: 14}];
	string namespace = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "命名空间"
	}, (validate.rules).string = {max_len: 63, pattern: "^[0-9a-zA-Z-]*$"}];
	string name = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "资源名称"
	}, (validate.rules).string = {max_len: 253, pattern: "[a-z0-9]([-a-z0-9]*[a-z0-9])?(.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"}];
	string labelSelector = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "标签选择器"
	}, (validate.rules).string = {max_len: 2048}];
	repeated string podNames = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "待重新调度 Pod 名称列表"
	}, (validate.rules).repeated = {
		unique: true, min_items: 1, items: {
			string: {max_len: 253, pattern: "[a-z0-9]([-a-z0-9]*[a-z0-9])?(.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"}
		}
	}];
}

message ListPoByNodeReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "ListPoByNodeReq", description: "Pod 资源列表查询请求体"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {min_len: 13, max_len: 14}];
	string nodeName = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "节点名称"
	}, (validate.rules).string = {max_len: 256}];
}

message ContainerListReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "ContainerListReq", description: "查询单个 Pod 容器信息请求体"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {min_len: 13, max_len: 14}];
	string namespace = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "命名空间"
	}, (validate.rules).string = {max_len: 63, pattern: "^[0-9a-zA-Z-]+$"}];
	string podName = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "Pod 名称"
	}, (validate.rules).string = {max_len: 253, pattern: "[a-z0-9]([-a-z0-9]*[a-z0-9])?(.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"}];
}

message ContainerGetReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "ContainerGetReq", description: "查询 Pod 指定容器信息请求体"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {min_len: 13, max_len: 14}];
	string namespace = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "命名空间"
	}, (validate.rules).string = {max_len: 63, pattern: "^[0-9a-zA-Z-]+$"}];
	string podName = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "Pod 名称"
	}, (validate.rules).string = {max_len: 253, pattern: "[a-z0-9]([-a-z0-9]*[a-z0-9])?(.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"}];
	string containerName = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "容器名称"
	}, (validate.rules).string = {max_len: 63, pattern: "[a-z0-9]([-a-z0-9]*[a-z0-9])?"}];
}

message GetK8SResTemplateReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "GetK8SResTemplateReq", description: "获取 K8S 资源模版示例"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {min_len: 13, max_len: 14}];
	string kind = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "资源类型"
	}, (validate.rules).string = {min_len: 3, max_len: 64}];
	string namespace = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "命名空间"
	}, (validate.rules).string = {max_len: 63, pattern: "^[0-9a-zA-Z-]*$"}];
}

message CObjListReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "CObjListReq", description: "自定义资源列表查询请求体"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {min_len: 13, max_len: 14}];
	string CRDName = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "CRD 名称"
	}, (validate.rules).string = {max_len: 256}];
	string namespace = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "命名空间"
	}, (validate.rules).string = {max_len: 63, pattern: "^[0-9a-zA-Z-]*$"}];
	string format = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "资源配置格式（manifest/selectItems）"
	}, (validate.rules).string = {in: ["", "manifest", "selectItems"]}];
	string scene = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "使用场景", description: "仅 selectItems 格式下有效"
	}, (validate.rules).string = {max_len: 32}];
}

message CObjGetReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "CObjGetReq", description: "自定义资源列表查询请求体"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {min_len: 13, max_len: 14}];
	string CRDName = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "CRD 名称"
	}, (validate.rules).string = {max_len: 256}];
	string cobjName = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "自定义资源名称"
	}, (validate.rules).string = {max_len: 256}];
	string namespace = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "命名空间"
	}, (validate.rules).string = {max_len: 63, pattern: "^[0-9a-zA-Z-]*$"}];
	string format = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "资源配置格式（manifest/formData）"
	}, (validate.rules).string = {in: ["", "manifest", "formData"]}];
}

message CObjCreateReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "CObjCreateReq", description: "创建单个自定义资源请求体"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {min_len: 13, max_len: 14}];
	string CRDName = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "CRD 名称"
	}, (validate.rules).string = {max_len: 256}];
	google.protobuf.Struct rawData = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "资源配置信息"}];
	string format = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "资源配置格式（manifest/formData）"
	}, (validate.rules).string = {in: ["", "manifest", "formData"]}];
}

message CObjUpdateReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "CObjUpdateReq", description: "更新单个自定义资源请求体"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {min_len: 13, max_len: 14}];
	string CRDName = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "CRD 名称"
	}, (validate.rules).string = {max_len: 256}];
	string cobjName = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "自定义资源名称"
	}, (validate.rules).string = {max_len: 256}];
	string namespace = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "命名空间"
	}, (validate.rules).string = {max_len: 63, pattern: "^[0-9a-zA-Z-]*$"}];
	google.protobuf.Struct rawData = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "资源配置信息"}];
	string format = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "资源配置格式（manifest/formData）"
	}, (validate.rules).string = {in: ["", "manifest", "formData"]}];
}

message CObjScaleReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "ResScaleReq", description: "单个 k8s 自定义资源扩缩容请求体"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {min_len: 13, max_len: 14}];
	string namespace = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "命名空间"
	}, (validate.rules).string = {max_len: 63, pattern: "^[0-9a-zA-Z-]*$"}];
	string CRDName = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "CRD 名称"
	}, (validate.rules).string = {max_len: 256}];
	string cobjName = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "自定义资源名称"
	}, (validate.rules).string = {max_len: 256}];
	int64 replicas = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "副本数量（0-8192）"
	}, (validate.rules).int64 = {lte: 8192, gte: 0}];
}

message CObjDeleteReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "CObjDeleteReq", description: "删除单个自定义资源请求体"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {min_len: 13, max_len: 14}];
	string CRDName = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "CRD 名称"
	}, (validate.rules).string = {max_len: 256}];
	string cobjName = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "自定义资源名称"
	}, (validate.rules).string = {max_len: 256}];
	string namespace = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "命名空间"
	}, (validate.rules).string = {max_len: 63, pattern: "^[0-9a-zA-Z-]*$"}];
}

message CObjBatchRescheduleReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "CObjBatchRescheduleReq", description: "重新调度 k8s 自定义资源下属 Pod 请求体"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {min_len: 13, max_len: 14}];
	string namespace = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "命名空间"
	}, (validate.rules).string = {max_len: 63, pattern: "^[0-9a-zA-Z-]*$"}];
	string CRDName = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "CRD 名称"
	}, (validate.rules).string = {max_len: 256}];
	string cobjName = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "自定义资源名称"
	}, (validate.rules).string = {max_len: 256}];
	string labelSelector = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "标签选择器"
	}, (validate.rules).string = {max_len: 2048}];
	repeated string podNames = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "待重新调度 Pod 名称列表"
	}, (validate.rules).repeated = {
		unique: true, min_items: 1, items: {
			string: {max_len: 253, pattern: "[a-z0-9]([-a-z0-9]*[a-z0-9])?(.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"}
		}
	}];
}

message CommonResp {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "CommonResp"
			description: "通用响应体，适用于资源型 API 请求返回，如需定义详细的 data 结构则不使用该响应体"
		}
	};
	int32 code = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "code", description: "返回错误码"
	}];
	string message = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "message", description : "返回错误信息"
	}];
	string requestID = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "request id", description : "请求 ID"
	}];
	google.protobuf.Struct data = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "data", description : "资源信息"
	}];
	google.protobuf.Struct webAnnotations = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "webAnnotations", description : "web 注解"
	}];
}

message CommonListResp {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "CommonListResp"
			description: "通用响应体，适用于资源型 API 请求返回，如需定义详细的 data 结构则不使用该响应体"
		}
	};
	int32 code = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "code", description: "返回错误码"
	}];
	string message = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "message", description : "返回错误信息"
	}];
	string requestID = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "request id", description : "请求 ID"
	}];
	google.protobuf.ListValue data = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "data", description : "资源信息"
	}];
	google.protobuf.Struct webAnnotations = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "webAnnotations", description : "web 注解"
	}];
}

message SubscribeReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "SubscribeReq", description: "订阅资源请求体"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {min_len: 13, max_len: 14}];
	string resourceVersion = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "资源版本号"
	}, (validate.rules).string = {max_len: 32}];
	string kind = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "资源类型"
	}, (validate.rules).string = {max_len: 128}];
	string CRDName = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "CRD 名称"
	}, (validate.rules).string = {max_len: 128}];
	string apiVersion = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "API 版本"
	}, (validate.rules).string = {max_len: 128}];
	string namespace = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "命名空间"
	}, (validate.rules).string = {max_len: 64}];
}

message SubscribeResp {
	int32 code = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "code", description: "返回错误码"
	}];
	string message = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "message", description: "返回错误信息"
	}];
	string kind = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "kind", description: "资源类型"
	}];
	string type = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "operate", description: "操作类型"
	}];
	string uid = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "uid", description: "唯一标识"
	}];
	google.protobuf.Struct manifest = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "manifest", description: "资源配置信息"
	}];
	google.protobuf.Struct manifestExt = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "manifestExt", description: "资源扩展信息"
	}];
}

message InvalidateDiscoveryCacheReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "InvalidateDiscoveryCacheReq", description: "主动使集群 Discovery 缓存失效"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {min_len: 13, max_len: 14}];
	string authToken = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "AuthToken"
	}];
}

message FormRenderPreviewReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "FormRenderPreviewReq", description: "表单数据渲染为 Manifest 预览"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {min_len: 13, max_len: 14}];
	string kind = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "资源类型"
	}, (validate.rules).string = {max_len: 128}];
	google.protobuf.Struct formData = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "表单化数据"
	}];
}

message GetResFormSchemaReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "GetResFormSchemaReq", description: "获取资源表单化 Schema 请求体"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {min_len: 13, max_len: 14}];
	string kind = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "资源类型"
	}, (validate.rules).string = {max_len: 128}];
	string namespace = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "命名空间"
	}, (validate.rules).string = {max_len: 64}];
	string action = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "模板使用场景（如表单创建，表单更新等）"
	}, (validate.rules).string = {in: ["", "create", "update"]}];
}

message GetFormSupportedApiVersionsReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "GetFormSupportedApiVersionsReq", description: "获取指定资源可用于表单化的 ApiVersions"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {min_len: 13, max_len: 14}];
	string kind = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "资源类型"
	}, (validate.rules).string = {max_len: 128}];
}

message GetResSelectItemsReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "GetFormSupportedApiVersionsReq", description: "获取指定资源可用于表单化的 ApiVersions"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {min_len: 13, max_len: 14}];
	string kind = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "资源类型"
	}, (validate.rules).string = {max_len: 128}];
	// NOTE 目前使用该 API 的请求资源都有命名空间，因此先加上 min_len == 1 的限制
	string namespace = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "命名空间"
	}, (validate.rules).string = {min_len: 1, max_len: 128}];
	string scene = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "使用场景"
	}, (validate.rules).string = {max_len: 32}];
}