// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.22.0
// source: data_service.proto

package pbds

import (
	app "bscp.io/pkg/protocol/core/app"
	base "bscp.io/pkg/protocol/core/base"
	commit "bscp.io/pkg/protocol/core/commit"
	config_hook "bscp.io/pkg/protocol/core/config-hook"
	config_item "bscp.io/pkg/protocol/core/config-item"
	content "bscp.io/pkg/protocol/core/content"
	credential "bscp.io/pkg/protocol/core/credential"
	credential_scope "bscp.io/pkg/protocol/core/credential-scope"
	group "bscp.io/pkg/protocol/core/group"
	hook "bscp.io/pkg/protocol/core/hook"
	hook_release "bscp.io/pkg/protocol/core/hook-release"
	release "bscp.io/pkg/protocol/core/release"
	released_ci "bscp.io/pkg/protocol/core/released-ci"
	template "bscp.io/pkg/protocol/core/template"
	template_release "bscp.io/pkg/protocol/core/template-release"
	template_set "bscp.io/pkg/protocol/core/template-set"
	template_space "bscp.io/pkg/protocol/core/template-space"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateCredentialScopesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId        uint32                              `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	CredentialId uint32                              `protobuf:"varint,2,opt,name=credential_id,json=credentialId,proto3" json:"credential_id,omitempty"`
	Updated      []*credential_scope.UpdateScopeSpec `protobuf:"bytes,3,rep,name=updated,proto3" json:"updated,omitempty"`
	Created      []string                            `protobuf:"bytes,4,rep,name=created,proto3" json:"created,omitempty"`
	Deleted      []uint32                            `protobuf:"varint,5,rep,packed,name=deleted,proto3" json:"deleted,omitempty"`
}

func (x *UpdateCredentialScopesReq) Reset() {
	*x = UpdateCredentialScopesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCredentialScopesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCredentialScopesReq) ProtoMessage() {}

func (x *UpdateCredentialScopesReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCredentialScopesReq.ProtoReflect.Descriptor instead.
func (*UpdateCredentialScopesReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateCredentialScopesReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *UpdateCredentialScopesReq) GetCredentialId() uint32 {
	if x != nil {
		return x.CredentialId
	}
	return 0
}

func (x *UpdateCredentialScopesReq) GetUpdated() []*credential_scope.UpdateScopeSpec {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *UpdateCredentialScopesReq) GetCreated() []string {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *UpdateCredentialScopesReq) GetDeleted() []uint32 {
	if x != nil {
		return x.Deleted
	}
	return nil
}

type UpdateCredentialScopesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCredentialScopesResp) Reset() {
	*x = UpdateCredentialScopesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCredentialScopesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCredentialScopesResp) ProtoMessage() {}

func (x *UpdateCredentialScopesResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCredentialScopesResp.ProtoReflect.Descriptor instead.
func (*UpdateCredentialScopesResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{1}
}

type DeleteCredentialScopesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         []uint32                                    `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
	Attachment *credential_scope.CredentialScopeAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
}

func (x *DeleteCredentialScopesReq) Reset() {
	*x = DeleteCredentialScopesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCredentialScopesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCredentialScopesReq) ProtoMessage() {}

func (x *DeleteCredentialScopesReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCredentialScopesReq.ProtoReflect.Descriptor instead.
func (*DeleteCredentialScopesReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteCredentialScopesReq) GetId() []uint32 {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DeleteCredentialScopesReq) GetAttachment() *credential_scope.CredentialScopeAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type DeleteCredentialScopesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCredentialScopesResp) Reset() {
	*x = DeleteCredentialScopesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCredentialScopesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCredentialScopesResp) ProtoMessage() {}

func (x *DeleteCredentialScopesResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCredentialScopesResp.ProtoReflect.Descriptor instead.
func (*DeleteCredentialScopesResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{3}
}

type ListCredentialScopesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId        uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	CredentialId uint32 `protobuf:"varint,2,opt,name=credential_id,json=credentialId,proto3" json:"credential_id,omitempty"`
}

func (x *ListCredentialScopesReq) Reset() {
	*x = ListCredentialScopesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCredentialScopesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCredentialScopesReq) ProtoMessage() {}

func (x *ListCredentialScopesReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCredentialScopesReq.ProtoReflect.Descriptor instead.
func (*ListCredentialScopesReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListCredentialScopesReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListCredentialScopesReq) GetCredentialId() uint32 {
	if x != nil {
		return x.CredentialId
	}
	return 0
}

type ListCredentialScopesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32                                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*credential_scope.CredentialScopeList `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListCredentialScopesResp) Reset() {
	*x = ListCredentialScopesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCredentialScopesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCredentialScopesResp) ProtoMessage() {}

func (x *ListCredentialScopesResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCredentialScopesResp.ProtoReflect.Descriptor instead.
func (*ListCredentialScopesResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListCredentialScopesResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListCredentialScopesResp) GetDetails() []*credential_scope.CredentialScopeList {
	if x != nil {
		return x.Details
	}
	return nil
}

type CreateCredentialScopeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachment *credential_scope.CredentialScopeAttachment `protobuf:"bytes,1,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       []string                                    `protobuf:"bytes,2,rep,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateCredentialScopeReq) Reset() {
	*x = CreateCredentialScopeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCredentialScopeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCredentialScopeReq) ProtoMessage() {}

func (x *CreateCredentialScopeReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCredentialScopeReq.ProtoReflect.Descriptor instead.
func (*CreateCredentialScopeReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{6}
}

func (x *CreateCredentialScopeReq) GetAttachment() *credential_scope.CredentialScopeAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *CreateCredentialScopeReq) GetSpec() []string {
	if x != nil {
		return x.Spec
	}
	return nil
}

type CreateCredentialReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachment *credential.CredentialAttachment `protobuf:"bytes,1,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *credential.CredentialSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateCredentialReq) Reset() {
	*x = CreateCredentialReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCredentialReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCredentialReq) ProtoMessage() {}

func (x *CreateCredentialReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCredentialReq.ProtoReflect.Descriptor instead.
func (*CreateCredentialReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{7}
}

func (x *CreateCredentialReq) GetAttachment() *credential.CredentialAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *CreateCredentialReq) GetSpec() *credential.CredentialSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type ListCredentialReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId     uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	SearchKey string `protobuf:"bytes,2,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
	Start     uint32 `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	Limit     uint32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListCredentialReq) Reset() {
	*x = ListCredentialReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCredentialReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCredentialReq) ProtoMessage() {}

func (x *ListCredentialReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCredentialReq.ProtoReflect.Descriptor instead.
func (*ListCredentialReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListCredentialReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListCredentialReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *ListCredentialReq) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ListCredentialReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListCredentialResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32                       `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*credential.CredentialList `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListCredentialResp) Reset() {
	*x = ListCredentialResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCredentialResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCredentialResp) ProtoMessage() {}

func (x *ListCredentialResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCredentialResp.ProtoReflect.Descriptor instead.
func (*ListCredentialResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListCredentialResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListCredentialResp) GetDetails() []*credential.CredentialList {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateCredentialReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *credential.CredentialAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *credential.CredentialSpec       `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *UpdateCredentialReq) Reset() {
	*x = UpdateCredentialReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCredentialReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCredentialReq) ProtoMessage() {}

func (x *UpdateCredentialReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCredentialReq.ProtoReflect.Descriptor instead.
func (*UpdateCredentialReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateCredentialReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCredentialReq) GetAttachment() *credential.CredentialAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *UpdateCredentialReq) GetSpec() *credential.CredentialSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type DeleteCredentialReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *credential.CredentialAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
}

func (x *DeleteCredentialReq) Reset() {
	*x = DeleteCredentialReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCredentialReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCredentialReq) ProtoMessage() {}

func (x *DeleteCredentialReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCredentialReq.ProtoReflect.Descriptor instead.
func (*DeleteCredentialReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteCredentialReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteCredentialReq) GetAttachment() *credential.CredentialAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type EnableCredentialReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BizId  uint32 `protobuf:"varint,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Enable bool   `protobuf:"varint,3,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *EnableCredentialReq) Reset() {
	*x = EnableCredentialReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableCredentialReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableCredentialReq) ProtoMessage() {}

func (x *EnableCredentialReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableCredentialReq.ProtoReflect.Descriptor instead.
func (*EnableCredentialReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{12}
}

func (x *EnableCredentialReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EnableCredentialReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *EnableCredentialReq) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type CreateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateResp) Reset() {
	*x = CreateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResp) ProtoMessage() {}

func (x *CreateResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResp.ProtoReflect.Descriptor instead.
func (*CreateResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{13}
}

func (x *CreateResp) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateConfigHookReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *config_hook.ConfigHookAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *config_hook.ConfigHookSpec       `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *UpdateConfigHookReq) Reset() {
	*x = UpdateConfigHookReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConfigHookReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfigHookReq) ProtoMessage() {}

func (x *UpdateConfigHookReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfigHookReq.ProtoReflect.Descriptor instead.
func (*UpdateConfigHookReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateConfigHookReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateConfigHookReq) GetAttachment() *config_hook.ConfigHookAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *UpdateConfigHookReq) GetSpec() *config_hook.ConfigHookSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type GetConfigHookReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId uint32 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *GetConfigHookReq) Reset() {
	*x = GetConfigHookReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigHookReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigHookReq) ProtoMessage() {}

func (x *GetConfigHookReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigHookReq.ProtoReflect.Descriptor instead.
func (*GetConfigHookReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetConfigHookReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetConfigHookReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type CreateAppReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId uint32       `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Spec  *app.AppSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateAppReq) Reset() {
	*x = CreateAppReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppReq) ProtoMessage() {}

func (x *CreateAppReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppReq.ProtoReflect.Descriptor instead.
func (*CreateAppReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{16}
}

func (x *CreateAppReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *CreateAppReq) GetSpec() *app.AppSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type UpdateAppReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BizId uint32       `protobuf:"varint,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Spec  *app.AppSpec `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *UpdateAppReq) Reset() {
	*x = UpdateAppReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppReq) ProtoMessage() {}

func (x *UpdateAppReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppReq.ProtoReflect.Descriptor instead.
func (*UpdateAppReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateAppReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAppReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *UpdateAppReq) GetSpec() *app.AppSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type DeleteAppReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BizId uint32 `protobuf:"varint,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
}

func (x *DeleteAppReq) Reset() {
	*x = DeleteAppReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAppReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppReq) ProtoMessage() {}

func (x *DeleteAppReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppReq.ProtoReflect.Descriptor instead.
func (*DeleteAppReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteAppReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteAppReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

type GetAppReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId uint32 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *GetAppReq) Reset() {
	*x = GetAppReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppReq) ProtoMessage() {}

func (x *GetAppReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppReq.ProtoReflect.Descriptor instead.
func (*GetAppReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetAppReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetAppReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type GetAppByIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId uint32 `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *GetAppByIDReq) Reset() {
	*x = GetAppByIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppByIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppByIDReq) ProtoMessage() {}

func (x *GetAppByIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppByIDReq.ProtoReflect.Descriptor instead.
func (*GetAppByIDReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{20}
}

func (x *GetAppByIDReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type GetAppByNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId   uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppName string `protobuf:"bytes,2,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
}

func (x *GetAppByNameReq) Reset() {
	*x = GetAppByNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppByNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppByNameReq) ProtoMessage() {}

func (x *GetAppByNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppByNameReq.ProtoReflect.Descriptor instead.
func (*GetAppByNameReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetAppByNameReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetAppByNameReq) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

type ListAppsRestReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId    string `protobuf:"bytes,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"` // 多个以逗号分割
	Start    uint32 `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	Limit    uint32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Operator string `protobuf:"bytes,4,opt,name=operator,proto3" json:"operator,omitempty"`
	Name     string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ListAppsRestReq) Reset() {
	*x = ListAppsRestReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppsRestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppsRestReq) ProtoMessage() {}

func (x *ListAppsRestReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppsRestReq.ProtoReflect.Descriptor instead.
func (*ListAppsRestReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{22}
}

func (x *ListAppsRestReq) GetBizId() string {
	if x != nil {
		return x.BizId
	}
	return ""
}

func (x *ListAppsRestReq) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ListAppsRestReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListAppsRestReq) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *ListAppsRestReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListAppsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32     `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*app.App `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListAppsResp) Reset() {
	*x = ListAppsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppsResp) ProtoMessage() {}

func (x *ListAppsResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppsResp.ProtoReflect.Descriptor instead.
func (*ListAppsResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{23}
}

func (x *ListAppsResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListAppsResp) GetDetails() []*app.App {
	if x != nil {
		return x.Details
	}
	return nil
}

type ListAppsByIDsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ListAppsByIDsReq) Reset() {
	*x = ListAppsByIDsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppsByIDsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppsByIDsReq) ProtoMessage() {}

func (x *ListAppsByIDsReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppsByIDsReq.ProtoReflect.Descriptor instead.
func (*ListAppsByIDsReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{24}
}

func (x *ListAppsByIDsReq) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ListAppsByIDsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details []*app.App `protobuf:"bytes,1,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListAppsByIDsResp) Reset() {
	*x = ListAppsByIDsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppsByIDsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppsByIDsResp) ProtoMessage() {}

func (x *ListAppsByIDsResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppsByIDsResp.ProtoReflect.Descriptor instead.
func (*ListAppsByIDsResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{25}
}

func (x *ListAppsByIDsResp) GetDetails() []*app.App {
	if x != nil {
		return x.Details
	}
	return nil
}

type CreateConfigItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigItemAttachment *config_item.ConfigItemAttachment `protobuf:"bytes,1,opt,name=config_item_attachment,json=configItemAttachment,proto3" json:"config_item_attachment,omitempty"`
	ConfigItemSpec       *config_item.ConfigItemSpec       `protobuf:"bytes,2,opt,name=config_item_spec,json=configItemSpec,proto3" json:"config_item_spec,omitempty"`
	ContentSpec          *content.ContentSpec              `protobuf:"bytes,3,opt,name=content_spec,json=contentSpec,proto3" json:"content_spec,omitempty"`
}

func (x *CreateConfigItemReq) Reset() {
	*x = CreateConfigItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConfigItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConfigItemReq) ProtoMessage() {}

func (x *CreateConfigItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConfigItemReq.ProtoReflect.Descriptor instead.
func (*CreateConfigItemReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{26}
}

func (x *CreateConfigItemReq) GetConfigItemAttachment() *config_item.ConfigItemAttachment {
	if x != nil {
		return x.ConfigItemAttachment
	}
	return nil
}

func (x *CreateConfigItemReq) GetConfigItemSpec() *config_item.ConfigItemSpec {
	if x != nil {
		return x.ConfigItemSpec
	}
	return nil
}

func (x *CreateConfigItemReq) GetContentSpec() *content.ContentSpec {
	if x != nil {
		return x.ContentSpec
	}
	return nil
}

type BatchUpsertConfigItemsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId uint32                                  `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId uint32                                  `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Items []*BatchUpsertConfigItemsReq_ConfigItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BatchUpsertConfigItemsReq) Reset() {
	*x = BatchUpsertConfigItemsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchUpsertConfigItemsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpsertConfigItemsReq) ProtoMessage() {}

func (x *BatchUpsertConfigItemsReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpsertConfigItemsReq.ProtoReflect.Descriptor instead.
func (*BatchUpsertConfigItemsReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{27}
}

func (x *BatchUpsertConfigItemsReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *BatchUpsertConfigItemsReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *BatchUpsertConfigItemsReq) GetItems() []*BatchUpsertConfigItemsReq_ConfigItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type UpdateConfigItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *config_item.ConfigItemAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *config_item.ConfigItemSpec       `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *UpdateConfigItemReq) Reset() {
	*x = UpdateConfigItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConfigItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfigItemReq) ProtoMessage() {}

func (x *UpdateConfigItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfigItemReq.ProtoReflect.Descriptor instead.
func (*UpdateConfigItemReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateConfigItemReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateConfigItemReq) GetAttachment() *config_item.ConfigItemAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *UpdateConfigItemReq) GetSpec() *config_item.ConfigItemSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type DeleteConfigItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *config_item.ConfigItemAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
}

func (x *DeleteConfigItemReq) Reset() {
	*x = DeleteConfigItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConfigItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConfigItemReq) ProtoMessage() {}

func (x *DeleteConfigItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConfigItemReq.ProtoReflect.Descriptor instead.
func (*DeleteConfigItemReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteConfigItemReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteConfigItemReq) GetAttachment() *config_item.ConfigItemAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type GetConfigItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BizId uint32 `protobuf:"varint,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId uint32 `protobuf:"varint,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *GetConfigItemReq) Reset() {
	*x = GetConfigItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigItemReq) ProtoMessage() {}

func (x *GetConfigItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigItemReq.ProtoReflect.Descriptor instead.
func (*GetConfigItemReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{30}
}

func (x *GetConfigItemReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetConfigItemReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetConfigItemReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type ListConfigItemsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId     uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId     uint32 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	ReleaseId uint32 `protobuf:"varint,3,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
	Start     uint32 `protobuf:"varint,4,opt,name=start,proto3" json:"start,omitempty"`
	Limit     uint32 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	All       bool   `protobuf:"varint,6,opt,name=all,proto3" json:"all,omitempty"`
	SearchKey string `protobuf:"bytes,7,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
}

func (x *ListConfigItemsReq) Reset() {
	*x = ListConfigItemsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConfigItemsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigItemsReq) ProtoMessage() {}

func (x *ListConfigItemsReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigItemsReq.ProtoReflect.Descriptor instead.
func (*ListConfigItemsReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{31}
}

func (x *ListConfigItemsReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListConfigItemsReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ListConfigItemsReq) GetReleaseId() uint32 {
	if x != nil {
		return x.ReleaseId
	}
	return 0
}

func (x *ListConfigItemsReq) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ListConfigItemsReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListConfigItemsReq) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

func (x *ListConfigItemsReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

type ListConfigItemsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32                    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*config_item.ConfigItem `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListConfigItemsResp) Reset() {
	*x = ListConfigItemsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConfigItemsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigItemsResp) ProtoMessage() {}

func (x *ListConfigItemsResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigItemsResp.ProtoReflect.Descriptor instead.
func (*ListConfigItemsResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{32}
}

func (x *ListConfigItemsResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListConfigItemsResp) GetDetails() []*config_item.ConfigItem {
	if x != nil {
		return x.Details
	}
	return nil
}

type ListConfigItemCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId uint32   `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId []uint32 `protobuf:"varint,2,rep,packed,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *ListConfigItemCountReq) Reset() {
	*x = ListConfigItemCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConfigItemCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigItemCountReq) ProtoMessage() {}

func (x *ListConfigItemCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigItemCountReq.ProtoReflect.Descriptor instead.
func (*ListConfigItemCountReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{33}
}

func (x *ListConfigItemCountReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListConfigItemCountReq) GetAppId() []uint32 {
	if x != nil {
		return x.AppId
	}
	return nil
}

type ListConfigItemCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details []*config_item.ListConfigItemCounts `protobuf:"bytes,1,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListConfigItemCountResp) Reset() {
	*x = ListConfigItemCountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConfigItemCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigItemCountResp) ProtoMessage() {}

func (x *ListConfigItemCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigItemCountResp.ProtoReflect.Descriptor instead.
func (*ListConfigItemCountResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{34}
}

func (x *ListConfigItemCountResp) GetDetails() []*config_item.ListConfigItemCounts {
	if x != nil {
		return x.Details
	}
	return nil
}

type CreateConfigHookReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachment *config_hook.ConfigHookAttachment `protobuf:"bytes,1,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *config_hook.ConfigHookSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateConfigHookReq) Reset() {
	*x = CreateConfigHookReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConfigHookReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConfigHookReq) ProtoMessage() {}

func (x *CreateConfigHookReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConfigHookReq.ProtoReflect.Descriptor instead.
func (*CreateConfigHookReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{35}
}

func (x *CreateConfigHookReq) GetAttachment() *config_hook.ConfigHookAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *CreateConfigHookReq) GetSpec() *config_hook.ConfigHookSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type CreateContentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachment *content.ContentAttachment `protobuf:"bytes,1,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *content.ContentSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateContentReq) Reset() {
	*x = CreateContentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContentReq) ProtoMessage() {}

func (x *CreateContentReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContentReq.ProtoReflect.Descriptor instead.
func (*CreateContentReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{36}
}

func (x *CreateContentReq) GetAttachment() *content.ContentAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *CreateContentReq) GetSpec() *content.ContentSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type GetContentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BizId uint32 `protobuf:"varint,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId uint32 `protobuf:"varint,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *GetContentReq) Reset() {
	*x = GetContentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentReq) ProtoMessage() {}

func (x *GetContentReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentReq.ProtoReflect.Descriptor instead.
func (*GetContentReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{37}
}

func (x *GetContentReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetContentReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetContentReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type ListContentsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId  uint32           `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId  uint32           `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Filter *structpb.Struct `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Page   *base.BasePage   `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListContentsReq) Reset() {
	*x = ListContentsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContentsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContentsReq) ProtoMessage() {}

func (x *ListContentsReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContentsReq.ProtoReflect.Descriptor instead.
func (*ListContentsReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{38}
}

func (x *ListContentsReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListContentsReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ListContentsReq) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListContentsReq) GetPage() *base.BasePage {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListContentsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32             `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*content.Content `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListContentsResp) Reset() {
	*x = ListContentsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContentsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContentsResp) ProtoMessage() {}

func (x *ListContentsResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContentsResp.ProtoReflect.Descriptor instead.
func (*ListContentsResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{39}
}

func (x *ListContentsResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListContentsResp) GetDetails() []*content.Content {
	if x != nil {
		return x.Details
	}
	return nil
}

type CreateCommitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachment *commit.CommitAttachment `protobuf:"bytes,1,opt,name=attachment,proto3" json:"attachment,omitempty"`
	ContentId  uint32                   `protobuf:"varint,2,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`
	Memo       string                   `protobuf:"bytes,3,opt,name=memo,proto3" json:"memo,omitempty"`
}

func (x *CreateCommitReq) Reset() {
	*x = CreateCommitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCommitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommitReq) ProtoMessage() {}

func (x *CreateCommitReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommitReq.ProtoReflect.Descriptor instead.
func (*CreateCommitReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{40}
}

func (x *CreateCommitReq) GetAttachment() *commit.CommitAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *CreateCommitReq) GetContentId() uint32 {
	if x != nil {
		return x.ContentId
	}
	return 0
}

func (x *CreateCommitReq) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

type GetLatestCommitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId        uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId        uint32 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	ConfigItemId uint32 `protobuf:"varint,3,opt,name=config_item_id,json=configItemId,proto3" json:"config_item_id,omitempty"`
}

func (x *GetLatestCommitReq) Reset() {
	*x = GetLatestCommitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestCommitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestCommitReq) ProtoMessage() {}

func (x *GetLatestCommitReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestCommitReq.ProtoReflect.Descriptor instead.
func (*GetLatestCommitReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{41}
}

func (x *GetLatestCommitReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetLatestCommitReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *GetLatestCommitReq) GetConfigItemId() uint32 {
	if x != nil {
		return x.ConfigItemId
	}
	return 0
}

type ListCommitsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId  uint32           `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId  uint32           `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Filter *structpb.Struct `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Page   *base.BasePage   `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListCommitsReq) Reset() {
	*x = ListCommitsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCommitsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommitsReq) ProtoMessage() {}

func (x *ListCommitsReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommitsReq.ProtoReflect.Descriptor instead.
func (*ListCommitsReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{42}
}

func (x *ListCommitsReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListCommitsReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ListCommitsReq) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListCommitsReq) GetPage() *base.BasePage {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListCommitsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32           `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*commit.Commit `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListCommitsResp) Reset() {
	*x = ListCommitsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCommitsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommitsResp) ProtoMessage() {}

func (x *ListCommitsResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommitsResp.ProtoReflect.Descriptor instead.
func (*ListCommitsResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{43}
}

func (x *ListCommitsResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListCommitsResp) GetDetails() []*commit.Commit {
	if x != nil {
		return x.Details
	}
	return nil
}

type CreateReleaseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachment *release.ReleaseAttachment `protobuf:"bytes,1,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *release.ReleaseSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateReleaseReq) Reset() {
	*x = CreateReleaseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReleaseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReleaseReq) ProtoMessage() {}

func (x *CreateReleaseReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReleaseReq.ProtoReflect.Descriptor instead.
func (*CreateReleaseReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{44}
}

func (x *CreateReleaseReq) GetAttachment() *release.ReleaseAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *CreateReleaseReq) GetSpec() *release.ReleaseSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type ListReleasesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId      uint32           `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId      uint32           `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Deprecated bool             `protobuf:"varint,3,opt,name=deprecated,proto3" json:"deprecated,omitempty"`
	Filter     *structpb.Struct `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	Page       *base.BasePage   `protobuf:"bytes,5,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListReleasesReq) Reset() {
	*x = ListReleasesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReleasesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReleasesReq) ProtoMessage() {}

func (x *ListReleasesReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReleasesReq.ProtoReflect.Descriptor instead.
func (*ListReleasesReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{45}
}

func (x *ListReleasesReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListReleasesReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ListReleasesReq) GetDeprecated() bool {
	if x != nil {
		return x.Deprecated
	}
	return false
}

func (x *ListReleasesReq) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListReleasesReq) GetPage() *base.BasePage {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListReleasesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32             `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*release.Release `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListReleasesResp) Reset() {
	*x = ListReleasesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReleasesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReleasesResp) ProtoMessage() {}

func (x *ListReleasesResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReleasesResp.ProtoReflect.Descriptor instead.
func (*ListReleasesResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{46}
}

func (x *ListReleasesResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListReleasesResp) GetDetails() []*release.Release {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetReleasedCIReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId        uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId        uint32 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	ConfigItemId uint32 `protobuf:"varint,3,opt,name=config_item_id,json=configItemId,proto3" json:"config_item_id,omitempty"`
	ReleaseId    uint32 `protobuf:"varint,4,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
}

func (x *GetReleasedCIReq) Reset() {
	*x = GetReleasedCIReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReleasedCIReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReleasedCIReq) ProtoMessage() {}

func (x *GetReleasedCIReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReleasedCIReq.ProtoReflect.Descriptor instead.
func (*GetReleasedCIReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{47}
}

func (x *GetReleasedCIReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetReleasedCIReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *GetReleasedCIReq) GetConfigItemId() uint32 {
	if x != nil {
		return x.ConfigItemId
	}
	return 0
}

func (x *GetReleasedCIReq) GetReleaseId() uint32 {
	if x != nil {
		return x.ReleaseId
	}
	return 0
}

type ListReleasedCIsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId  uint32           `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Filter *structpb.Struct `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Page   *base.BasePage   `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListReleasedCIsReq) Reset() {
	*x = ListReleasedCIsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReleasedCIsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReleasedCIsReq) ProtoMessage() {}

func (x *ListReleasedCIsReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReleasedCIsReq.ProtoReflect.Descriptor instead.
func (*ListReleasedCIsReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{48}
}

func (x *ListReleasedCIsReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListReleasedCIsReq) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListReleasedCIsReq) GetPage() *base.BasePage {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListReleasedCIsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32                            `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*released_ci.ReleasedConfigItem `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListReleasedCIsResp) Reset() {
	*x = ListReleasedCIsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReleasedCIsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReleasedCIsResp) ProtoMessage() {}

func (x *ListReleasedCIsResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReleasedCIsResp.ProtoReflect.Descriptor instead.
func (*ListReleasedCIsResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{49}
}

func (x *ListReleasedCIsResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListReleasedCIsResp) GetDetails() []*released_ci.ReleasedConfigItem {
	if x != nil {
		return x.Details
	}
	return nil
}

type CreateHookReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachment *hook.HookAttachment `protobuf:"bytes,1,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *hook.HookSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateHookReq) Reset() {
	*x = CreateHookReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHookReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHookReq) ProtoMessage() {}

func (x *CreateHookReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHookReq.ProtoReflect.Descriptor instead.
func (*CreateHookReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{50}
}

func (x *CreateHookReq) GetAttachment() *hook.HookAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *CreateHookReq) GetSpec() *hook.HookSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type ListHookTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
}

func (x *ListHookTagReq) Reset() {
	*x = ListHookTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHookTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHookTagReq) ProtoMessage() {}

func (x *ListHookTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHookTagReq.ProtoReflect.Descriptor instead.
func (*ListHookTagReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{51}
}

func (x *ListHookTagReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

type GetHookReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId  uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	HookId uint32 `protobuf:"varint,2,opt,name=hook_id,json=hookId,proto3" json:"hook_id,omitempty"`
}

func (x *GetHookReq) Reset() {
	*x = GetHookReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHookReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHookReq) ProtoMessage() {}

func (x *GetHookReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHookReq.ProtoReflect.Descriptor instead.
func (*GetHookReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{52}
}

func (x *GetHookReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetHookReq) GetHookId() uint32 {
	if x != nil {
		return x.HookId
	}
	return 0
}

type GetHookResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Spec       *GetHookInfoSpec     `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Attachment *hook.HookAttachment `protobuf:"bytes,3,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Revision   *base.Revision       `protobuf:"bytes,4,opt,name=revision,proto3" json:"revision,omitempty"`
}

func (x *GetHookResp) Reset() {
	*x = GetHookResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHookResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHookResp) ProtoMessage() {}

func (x *GetHookResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHookResp.ProtoReflect.Descriptor instead.
func (*GetHookResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{53}
}

func (x *GetHookResp) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetHookResp) GetSpec() *GetHookInfoSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *GetHookResp) GetAttachment() *hook.HookAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *GetHookResp) GetRevision() *base.Revision {
	if x != nil {
		return x.Revision
	}
	return nil
}

type GetHookInfoSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type       string                    `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Tag        string                    `protobuf:"bytes,4,opt,name=tag,proto3" json:"tag,omitempty"`
	Memo       string                    `protobuf:"bytes,5,opt,name=memo,proto3" json:"memo,omitempty"`
	PublishNum uint32                    `protobuf:"varint,7,opt,name=publish_num,json=publishNum,proto3" json:"publish_num,omitempty"`
	Releases   *GetHookInfoSpec_Releases `protobuf:"bytes,8,opt,name=releases,proto3" json:"releases,omitempty"`
}

func (x *GetHookInfoSpec) Reset() {
	*x = GetHookInfoSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHookInfoSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHookInfoSpec) ProtoMessage() {}

func (x *GetHookInfoSpec) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHookInfoSpec.ProtoReflect.Descriptor instead.
func (*GetHookInfoSpec) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{54}
}

func (x *GetHookInfoSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetHookInfoSpec) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetHookInfoSpec) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *GetHookInfoSpec) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *GetHookInfoSpec) GetPublishNum() uint32 {
	if x != nil {
		return x.PublishNum
	}
	return 0
}

func (x *GetHookInfoSpec) GetReleases() *GetHookInfoSpec_Releases {
	if x != nil {
		return x.Releases
	}
	return nil
}

type ListHooksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId  uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tag    string `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	All    bool   `protobuf:"varint,5,opt,name=all,proto3" json:"all,omitempty"`
	NotTag bool   `protobuf:"varint,6,opt,name=not_tag,json=notTag,proto3" json:"not_tag,omitempty"`
	Start  uint32 `protobuf:"varint,7,opt,name=start,proto3" json:"start,omitempty"`
	Limit  uint32 `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListHooksReq) Reset() {
	*x = ListHooksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHooksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHooksReq) ProtoMessage() {}

func (x *ListHooksReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHooksReq.ProtoReflect.Descriptor instead.
func (*ListHooksReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{55}
}

func (x *ListHooksReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListHooksReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListHooksReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *ListHooksReq) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

func (x *ListHooksReq) GetNotTag() bool {
	if x != nil {
		return x.NotTag
	}
	return false
}

func (x *ListHooksReq) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ListHooksReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListHooksResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32       `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*hook.Hook `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListHooksResp) Reset() {
	*x = ListHooksResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHooksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHooksResp) ProtoMessage() {}

func (x *ListHooksResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHooksResp.ProtoReflect.Descriptor instead.
func (*ListHooksResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{56}
}

func (x *ListHooksResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListHooksResp) GetDetails() []*hook.Hook {
	if x != nil {
		return x.Details
	}
	return nil
}

type ListHookTagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details []*hook.CountHookTags `protobuf:"bytes,1,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListHookTagResp) Reset() {
	*x = ListHookTagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHookTagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHookTagResp) ProtoMessage() {}

func (x *ListHookTagResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHookTagResp.ProtoReflect.Descriptor instead.
func (*ListHookTagResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{57}
}

func (x *ListHookTagResp) GetDetails() []*hook.CountHookTags {
	if x != nil {
		return x.Details
	}
	return nil
}

type DeleteHookReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *hook.HookAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
}

func (x *DeleteHookReq) Reset() {
	*x = DeleteHookReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHookReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHookReq) ProtoMessage() {}

func (x *DeleteHookReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHookReq.ProtoReflect.Descriptor instead.
func (*DeleteHookReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{58}
}

func (x *DeleteHookReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteHookReq) GetAttachment() *hook.HookAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type CreateHookReleaseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachment *hook_release.HookReleaseAttachment `protobuf:"bytes,1,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *hook_release.HookReleaseSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateHookReleaseReq) Reset() {
	*x = CreateHookReleaseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHookReleaseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHookReleaseReq) ProtoMessage() {}

func (x *CreateHookReleaseReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHookReleaseReq.ProtoReflect.Descriptor instead.
func (*CreateHookReleaseReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{59}
}

func (x *CreateHookReleaseReq) GetAttachment() *hook_release.HookReleaseAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *CreateHookReleaseReq) GetSpec() *hook_release.HookReleaseSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type ListHookReleasesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId     uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	HookId    uint32 `protobuf:"varint,2,opt,name=hook_id,json=hookId,proto3" json:"hook_id,omitempty"`
	SearchKey string `protobuf:"bytes,3,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	Start     uint32 `protobuf:"varint,4,opt,name=start,proto3" json:"start,omitempty"`
	Limit     uint32 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	All       bool   `protobuf:"varint,6,opt,name=all,proto3" json:"all,omitempty"`
	State     string `protobuf:"bytes,7,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *ListHookReleasesReq) Reset() {
	*x = ListHookReleasesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHookReleasesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHookReleasesReq) ProtoMessage() {}

func (x *ListHookReleasesReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHookReleasesReq.ProtoReflect.Descriptor instead.
func (*ListHookReleasesReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{60}
}

func (x *ListHookReleasesReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListHookReleasesReq) GetHookId() uint32 {
	if x != nil {
		return x.HookId
	}
	return 0
}

func (x *ListHookReleasesReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *ListHookReleasesReq) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ListHookReleasesReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListHookReleasesReq) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

func (x *ListHookReleasesReq) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type ListHookReleasesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32                      `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*hook_release.HookRelease `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListHookReleasesResp) Reset() {
	*x = ListHookReleasesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHookReleasesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHookReleasesResp) ProtoMessage() {}

func (x *ListHookReleasesResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHookReleasesResp.ProtoReflect.Descriptor instead.
func (*ListHookReleasesResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{61}
}

func (x *ListHookReleasesResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListHookReleasesResp) GetDetails() []*hook_release.HookRelease {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetHookReleaseByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId  uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	HookId uint32 `protobuf:"varint,2,opt,name=hook_id,json=hookId,proto3" json:"hook_id,omitempty"`
	Id     uint32 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetHookReleaseByIdReq) Reset() {
	*x = GetHookReleaseByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHookReleaseByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHookReleaseByIdReq) ProtoMessage() {}

func (x *GetHookReleaseByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHookReleaseByIdReq.ProtoReflect.Descriptor instead.
func (*GetHookReleaseByIdReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{62}
}

func (x *GetHookReleaseByIdReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetHookReleaseByIdReq) GetHookId() uint32 {
	if x != nil {
		return x.HookId
	}
	return 0
}

func (x *GetHookReleaseByIdReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteHookReleaseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId  uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	HookId uint32 `protobuf:"varint,2,opt,name=hook_id,json=hookId,proto3" json:"hook_id,omitempty"`
	Id     uint32 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteHookReleaseReq) Reset() {
	*x = DeleteHookReleaseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHookReleaseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHookReleaseReq) ProtoMessage() {}

func (x *DeleteHookReleaseReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHookReleaseReq.ProtoReflect.Descriptor instead.
func (*DeleteHookReleaseReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{63}
}

func (x *DeleteHookReleaseReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *DeleteHookReleaseReq) GetHookId() uint32 {
	if x != nil {
		return x.HookId
	}
	return 0
}

func (x *DeleteHookReleaseReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PublishHookReleaseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId  uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	HookId uint32 `protobuf:"varint,2,opt,name=hook_id,json=hookId,proto3" json:"hook_id,omitempty"`
	Id     uint32 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PublishHookReleaseReq) Reset() {
	*x = PublishHookReleaseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishHookReleaseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishHookReleaseReq) ProtoMessage() {}

func (x *PublishHookReleaseReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishHookReleaseReq.ProtoReflect.Descriptor instead.
func (*PublishHookReleaseReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{64}
}

func (x *PublishHookReleaseReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *PublishHookReleaseReq) GetHookId() uint32 {
	if x != nil {
		return x.HookId
	}
	return 0
}

func (x *PublishHookReleaseReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetByPubStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId  uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	HookId uint32 `protobuf:"varint,2,opt,name=hook_id,json=hookId,proto3" json:"hook_id,omitempty"`
	State  string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *GetByPubStateReq) Reset() {
	*x = GetByPubStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByPubStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByPubStateReq) ProtoMessage() {}

func (x *GetByPubStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByPubStateReq.ProtoReflect.Descriptor instead.
func (*GetByPubStateReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{65}
}

func (x *GetByPubStateReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetByPubStateReq) GetHookId() uint32 {
	if x != nil {
		return x.HookId
	}
	return 0
}

func (x *GetByPubStateReq) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type UpdateHookReleaseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *hook_release.HookReleaseAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *hook_release.HookReleaseSpec       `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *UpdateHookReleaseReq) Reset() {
	*x = UpdateHookReleaseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHookReleaseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHookReleaseReq) ProtoMessage() {}

func (x *UpdateHookReleaseReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHookReleaseReq.ProtoReflect.Descriptor instead.
func (*UpdateHookReleaseReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{66}
}

func (x *UpdateHookReleaseReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateHookReleaseReq) GetAttachment() *hook_release.HookReleaseAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *UpdateHookReleaseReq) GetSpec() *hook_release.HookReleaseSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type ListHookReleasesReferencesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId      uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	HookId     uint32 `protobuf:"varint,2,opt,name=hook_id,json=hookId,proto3" json:"hook_id,omitempty"`
	ReleasesId uint32 `protobuf:"varint,3,opt,name=releases_id,json=releasesId,proto3" json:"releases_id,omitempty"`
	Start      uint32 `protobuf:"varint,4,opt,name=start,proto3" json:"start,omitempty"`
	Limit      uint32 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListHookReleasesReferencesReq) Reset() {
	*x = ListHookReleasesReferencesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHookReleasesReferencesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHookReleasesReferencesReq) ProtoMessage() {}

func (x *ListHookReleasesReferencesReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHookReleasesReferencesReq.ProtoReflect.Descriptor instead.
func (*ListHookReleasesReferencesReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{67}
}

func (x *ListHookReleasesReferencesReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListHookReleasesReferencesReq) GetHookId() uint32 {
	if x != nil {
		return x.HookId
	}
	return 0
}

func (x *ListHookReleasesReferencesReq) GetReleasesId() uint32 {
	if x != nil {
		return x.ReleasesId
	}
	return 0
}

func (x *ListHookReleasesReferencesReq) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ListHookReleasesReferencesReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListHookReleasesReferencesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32                                            `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*hook_release.ListHookReleasesReferencesDetails `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListHookReleasesReferencesResp) Reset() {
	*x = ListHookReleasesReferencesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHookReleasesReferencesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHookReleasesReferencesResp) ProtoMessage() {}

func (x *ListHookReleasesReferencesResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHookReleasesReferencesResp.ProtoReflect.Descriptor instead.
func (*ListHookReleasesReferencesResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{68}
}

func (x *ListHookReleasesReferencesResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListHookReleasesReferencesResp) GetDetails() []*hook_release.ListHookReleasesReferencesDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type CreateTemplateSpaceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachment *template_space.TemplateSpaceAttachment `protobuf:"bytes,1,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *template_space.TemplateSpaceSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateTemplateSpaceReq) Reset() {
	*x = CreateTemplateSpaceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTemplateSpaceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTemplateSpaceReq) ProtoMessage() {}

func (x *CreateTemplateSpaceReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTemplateSpaceReq.ProtoReflect.Descriptor instead.
func (*CreateTemplateSpaceReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{69}
}

func (x *CreateTemplateSpaceReq) GetAttachment() *template_space.TemplateSpaceAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *CreateTemplateSpaceReq) GetSpec() *template_space.TemplateSpaceSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type ListTemplateSpacesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Start uint32 `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	Limit uint32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListTemplateSpacesReq) Reset() {
	*x = ListTemplateSpacesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTemplateSpacesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTemplateSpacesReq) ProtoMessage() {}

func (x *ListTemplateSpacesReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTemplateSpacesReq.ProtoReflect.Descriptor instead.
func (*ListTemplateSpacesReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{70}
}

func (x *ListTemplateSpacesReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListTemplateSpacesReq) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ListTemplateSpacesReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListTemplateSpacesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32                          `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*template_space.TemplateSpace `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListTemplateSpacesResp) Reset() {
	*x = ListTemplateSpacesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTemplateSpacesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTemplateSpacesResp) ProtoMessage() {}

func (x *ListTemplateSpacesResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTemplateSpacesResp.ProtoReflect.Descriptor instead.
func (*ListTemplateSpacesResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{71}
}

func (x *ListTemplateSpacesResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListTemplateSpacesResp) GetDetails() []*template_space.TemplateSpace {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateTemplateSpaceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *template_space.TemplateSpaceAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *template_space.TemplateSpaceSpec       `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *UpdateTemplateSpaceReq) Reset() {
	*x = UpdateTemplateSpaceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTemplateSpaceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTemplateSpaceReq) ProtoMessage() {}

func (x *UpdateTemplateSpaceReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTemplateSpaceReq.ProtoReflect.Descriptor instead.
func (*UpdateTemplateSpaceReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{72}
}

func (x *UpdateTemplateSpaceReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTemplateSpaceReq) GetAttachment() *template_space.TemplateSpaceAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *UpdateTemplateSpaceReq) GetSpec() *template_space.TemplateSpaceSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type DeleteTemplateSpaceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *template_space.TemplateSpaceAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
}

func (x *DeleteTemplateSpaceReq) Reset() {
	*x = DeleteTemplateSpaceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTemplateSpaceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTemplateSpaceReq) ProtoMessage() {}

func (x *DeleteTemplateSpaceReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTemplateSpaceReq.ProtoReflect.Descriptor instead.
func (*DeleteTemplateSpaceReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{73}
}

func (x *DeleteTemplateSpaceReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteTemplateSpaceReq) GetAttachment() *template_space.TemplateSpaceAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type CreateTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachment *template.TemplateAttachment          `protobuf:"bytes,1,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *template.TemplateSpec                `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	TrSpec     *template_release.TemplateReleaseSpec `protobuf:"bytes,3,opt,name=tr_spec,json=trSpec,proto3" json:"tr_spec,omitempty"`
}

func (x *CreateTemplateReq) Reset() {
	*x = CreateTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTemplateReq) ProtoMessage() {}

func (x *CreateTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTemplateReq.ProtoReflect.Descriptor instead.
func (*CreateTemplateReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{74}
}

func (x *CreateTemplateReq) GetAttachment() *template.TemplateAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *CreateTemplateReq) GetSpec() *template.TemplateSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *CreateTemplateReq) GetTrSpec() *template_release.TemplateReleaseSpec {
	if x != nil {
		return x.TrSpec
	}
	return nil
}

type ListTemplatesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId           uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	TemplateSpaceId uint32 `protobuf:"varint,2,opt,name=template_space_id,json=templateSpaceId,proto3" json:"template_space_id,omitempty"`
	Start           uint32 `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	Limit           uint32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListTemplatesReq) Reset() {
	*x = ListTemplatesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTemplatesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTemplatesReq) ProtoMessage() {}

func (x *ListTemplatesReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTemplatesReq.ProtoReflect.Descriptor instead.
func (*ListTemplatesReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{75}
}

func (x *ListTemplatesReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListTemplatesReq) GetTemplateSpaceId() uint32 {
	if x != nil {
		return x.TemplateSpaceId
	}
	return 0
}

func (x *ListTemplatesReq) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ListTemplatesReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListTemplatesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32               `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*template.Template `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListTemplatesResp) Reset() {
	*x = ListTemplatesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTemplatesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTemplatesResp) ProtoMessage() {}

func (x *ListTemplatesResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTemplatesResp.ProtoReflect.Descriptor instead.
func (*ListTemplatesResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{76}
}

func (x *ListTemplatesResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListTemplatesResp) GetDetails() []*template.Template {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *template.TemplateAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *template.TemplateSpec       `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *UpdateTemplateReq) Reset() {
	*x = UpdateTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTemplateReq) ProtoMessage() {}

func (x *UpdateTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTemplateReq.ProtoReflect.Descriptor instead.
func (*UpdateTemplateReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{77}
}

func (x *UpdateTemplateReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTemplateReq) GetAttachment() *template.TemplateAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *UpdateTemplateReq) GetSpec() *template.TemplateSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type DeleteTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *template.TemplateAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
}

func (x *DeleteTemplateReq) Reset() {
	*x = DeleteTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTemplateReq) ProtoMessage() {}

func (x *DeleteTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTemplateReq.ProtoReflect.Descriptor instead.
func (*DeleteTemplateReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{78}
}

func (x *DeleteTemplateReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteTemplateReq) GetAttachment() *template.TemplateAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type CreateTemplateReleaseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachment *template_release.TemplateReleaseAttachment `protobuf:"bytes,1,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *template_release.TemplateReleaseSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateTemplateReleaseReq) Reset() {
	*x = CreateTemplateReleaseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTemplateReleaseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTemplateReleaseReq) ProtoMessage() {}

func (x *CreateTemplateReleaseReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTemplateReleaseReq.ProtoReflect.Descriptor instead.
func (*CreateTemplateReleaseReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{79}
}

func (x *CreateTemplateReleaseReq) GetAttachment() *template_release.TemplateReleaseAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *CreateTemplateReleaseReq) GetSpec() *template_release.TemplateReleaseSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type ListTemplateReleasesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId           uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	TemplateSpaceId uint32 `protobuf:"varint,2,opt,name=template_space_id,json=templateSpaceId,proto3" json:"template_space_id,omitempty"`
	TemplateId      uint32 `protobuf:"varint,3,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	Start           uint32 `protobuf:"varint,4,opt,name=start,proto3" json:"start,omitempty"`
	Limit           uint32 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListTemplateReleasesReq) Reset() {
	*x = ListTemplateReleasesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTemplateReleasesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTemplateReleasesReq) ProtoMessage() {}

func (x *ListTemplateReleasesReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTemplateReleasesReq.ProtoReflect.Descriptor instead.
func (*ListTemplateReleasesReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{80}
}

func (x *ListTemplateReleasesReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListTemplateReleasesReq) GetTemplateSpaceId() uint32 {
	if x != nil {
		return x.TemplateSpaceId
	}
	return 0
}

func (x *ListTemplateReleasesReq) GetTemplateId() uint32 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *ListTemplateReleasesReq) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ListTemplateReleasesReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListTemplateReleasesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32                              `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*template_release.TemplateRelease `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListTemplateReleasesResp) Reset() {
	*x = ListTemplateReleasesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTemplateReleasesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTemplateReleasesResp) ProtoMessage() {}

func (x *ListTemplateReleasesResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTemplateReleasesResp.ProtoReflect.Descriptor instead.
func (*ListTemplateReleasesResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{81}
}

func (x *ListTemplateReleasesResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListTemplateReleasesResp) GetDetails() []*template_release.TemplateRelease {
	if x != nil {
		return x.Details
	}
	return nil
}

type DeleteTemplateReleaseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                                      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *template_release.TemplateReleaseAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
}

func (x *DeleteTemplateReleaseReq) Reset() {
	*x = DeleteTemplateReleaseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTemplateReleaseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTemplateReleaseReq) ProtoMessage() {}

func (x *DeleteTemplateReleaseReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTemplateReleaseReq.ProtoReflect.Descriptor instead.
func (*DeleteTemplateReleaseReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{82}
}

func (x *DeleteTemplateReleaseReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteTemplateReleaseReq) GetAttachment() *template_release.TemplateReleaseAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type CreateTemplateSetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachment *template_set.TemplateSetAttachment `protobuf:"bytes,1,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *template_set.TemplateSetSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateTemplateSetReq) Reset() {
	*x = CreateTemplateSetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTemplateSetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTemplateSetReq) ProtoMessage() {}

func (x *CreateTemplateSetReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTemplateSetReq.ProtoReflect.Descriptor instead.
func (*CreateTemplateSetReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{83}
}

func (x *CreateTemplateSetReq) GetAttachment() *template_set.TemplateSetAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *CreateTemplateSetReq) GetSpec() *template_set.TemplateSetSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type ListTemplateSetsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId           uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	TemplateSpaceId uint32 `protobuf:"varint,2,opt,name=template_space_id,json=templateSpaceId,proto3" json:"template_space_id,omitempty"`
	Start           uint32 `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	Limit           uint32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListTemplateSetsReq) Reset() {
	*x = ListTemplateSetsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTemplateSetsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTemplateSetsReq) ProtoMessage() {}

func (x *ListTemplateSetsReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTemplateSetsReq.ProtoReflect.Descriptor instead.
func (*ListTemplateSetsReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{84}
}

func (x *ListTemplateSetsReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListTemplateSetsReq) GetTemplateSpaceId() uint32 {
	if x != nil {
		return x.TemplateSpaceId
	}
	return 0
}

func (x *ListTemplateSetsReq) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ListTemplateSetsReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListTemplateSetsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32                      `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*template_set.TemplateSet `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListTemplateSetsResp) Reset() {
	*x = ListTemplateSetsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTemplateSetsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTemplateSetsResp) ProtoMessage() {}

func (x *ListTemplateSetsResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTemplateSetsResp.ProtoReflect.Descriptor instead.
func (*ListTemplateSetsResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{85}
}

func (x *ListTemplateSetsResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListTemplateSetsResp) GetDetails() []*template_set.TemplateSet {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateTemplateSetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *template_set.TemplateSetAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *template_set.TemplateSetSpec       `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *UpdateTemplateSetReq) Reset() {
	*x = UpdateTemplateSetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTemplateSetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTemplateSetReq) ProtoMessage() {}

func (x *UpdateTemplateSetReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTemplateSetReq.ProtoReflect.Descriptor instead.
func (*UpdateTemplateSetReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{86}
}

func (x *UpdateTemplateSetReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTemplateSetReq) GetAttachment() *template_set.TemplateSetAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *UpdateTemplateSetReq) GetSpec() *template_set.TemplateSetSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type DeleteTemplateSetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *template_set.TemplateSetAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
}

func (x *DeleteTemplateSetReq) Reset() {
	*x = DeleteTemplateSetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTemplateSetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTemplateSetReq) ProtoMessage() {}

func (x *DeleteTemplateSetReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTemplateSetReq.ProtoReflect.Descriptor instead.
func (*DeleteTemplateSetReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{87}
}

func (x *DeleteTemplateSetReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteTemplateSetReq) GetAttachment() *template_set.TemplateSetAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type CreateGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachment *group.GroupAttachment `protobuf:"bytes,1,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *group.GroupSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateGroupReq) Reset() {
	*x = CreateGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupReq) ProtoMessage() {}

func (x *CreateGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupReq.ProtoReflect.Descriptor instead.
func (*CreateGroupReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{88}
}

func (x *CreateGroupReq) GetAttachment() *group.GroupAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *CreateGroupReq) GetSpec() *group.GroupSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type ListGroupsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId  uint32           `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Filter *structpb.Struct `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Page   *base.BasePage   `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListGroupsReq) Reset() {
	*x = ListGroupsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupsReq) ProtoMessage() {}

func (x *ListGroupsReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupsReq.ProtoReflect.Descriptor instead.
func (*ListGroupsReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{89}
}

func (x *ListGroupsReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListGroupsReq) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListGroupsReq) GetPage() *base.BasePage {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListGroupsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32         `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*group.Group `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListGroupsResp) Reset() {
	*x = ListGroupsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupsResp) ProtoMessage() {}

func (x *ListGroupsResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupsResp.ProtoReflect.Descriptor instead.
func (*ListGroupsResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{90}
}

func (x *ListGroupsResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListGroupsResp) GetDetails() []*group.Group {
	if x != nil {
		return x.Details
	}
	return nil
}

type ListAppGroupsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId uint32 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *ListAppGroupsReq) Reset() {
	*x = ListAppGroupsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppGroupsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppGroupsReq) ProtoMessage() {}

func (x *ListAppGroupsReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppGroupsReq.ProtoReflect.Descriptor instead.
func (*ListAppGroupsReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{91}
}

func (x *ListAppGroupsReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListAppGroupsReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type ListAppGroupsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details []*ListAppGroupsResp_ListAppGroupsData `protobuf:"bytes,1,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListAppGroupsResp) Reset() {
	*x = ListAppGroupsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppGroupsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppGroupsResp) ProtoMessage() {}

func (x *ListAppGroupsResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppGroupsResp.ProtoReflect.Descriptor instead.
func (*ListAppGroupsResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{92}
}

func (x *ListAppGroupsResp) GetDetails() []*ListAppGroupsResp_ListAppGroupsData {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *group.GroupAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *group.GroupSpec       `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *UpdateGroupReq) Reset() {
	*x = UpdateGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupReq) ProtoMessage() {}

func (x *UpdateGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupReq.ProtoReflect.Descriptor instead.
func (*UpdateGroupReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{93}
}

func (x *UpdateGroupReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateGroupReq) GetAttachment() *group.GroupAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *UpdateGroupReq) GetSpec() *group.GroupSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type DeleteGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *group.GroupAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
}

func (x *DeleteGroupReq) Reset() {
	*x = DeleteGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupReq) ProtoMessage() {}

func (x *DeleteGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupReq.ProtoReflect.Descriptor instead.
func (*DeleteGroupReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{94}
}

func (x *DeleteGroupReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteGroupReq) GetAttachment() *group.GroupAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type CountGroupsReleasedAppsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId  uint32   `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Groups []uint32 `protobuf:"varint,2,rep,packed,name=groups,proto3" json:"groups,omitempty"`
}

func (x *CountGroupsReleasedAppsReq) Reset() {
	*x = CountGroupsReleasedAppsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountGroupsReleasedAppsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountGroupsReleasedAppsReq) ProtoMessage() {}

func (x *CountGroupsReleasedAppsReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountGroupsReleasedAppsReq.ProtoReflect.Descriptor instead.
func (*CountGroupsReleasedAppsReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{95}
}

func (x *CountGroupsReleasedAppsReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *CountGroupsReleasedAppsReq) GetGroups() []uint32 {
	if x != nil {
		return x.Groups
	}
	return nil
}

type CountGroupsReleasedAppsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*CountGroupsReleasedAppsResp_CountGroupsReleasedAppsData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *CountGroupsReleasedAppsResp) Reset() {
	*x = CountGroupsReleasedAppsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountGroupsReleasedAppsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountGroupsReleasedAppsResp) ProtoMessage() {}

func (x *CountGroupsReleasedAppsResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountGroupsReleasedAppsResp.ProtoReflect.Descriptor instead.
func (*CountGroupsReleasedAppsResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{96}
}

func (x *CountGroupsReleasedAppsResp) GetData() []*CountGroupsReleasedAppsResp_CountGroupsReleasedAppsData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListGroupRleasesdAppsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId   uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	GroupId uint32 `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Start   uint32 `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	Limit   uint32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListGroupRleasesdAppsReq) Reset() {
	*x = ListGroupRleasesdAppsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupRleasesdAppsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupRleasesdAppsReq) ProtoMessage() {}

func (x *ListGroupRleasesdAppsReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupRleasesdAppsReq.ProtoReflect.Descriptor instead.
func (*ListGroupRleasesdAppsReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{97}
}

func (x *ListGroupRleasesdAppsReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListGroupRleasesdAppsReq) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ListGroupRleasesdAppsReq) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ListGroupRleasesdAppsReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListGroupRleasesdAppsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32                                                 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*ListGroupRleasesdAppsResp_ListGroupReleasedAppsData `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListGroupRleasesdAppsResp) Reset() {
	*x = ListGroupRleasesdAppsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupRleasesdAppsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupRleasesdAppsResp) ProtoMessage() {}

func (x *ListGroupRleasesdAppsResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupRleasesdAppsResp.ProtoReflect.Descriptor instead.
func (*ListGroupRleasesdAppsResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{98}
}

func (x *ListGroupRleasesdAppsResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListGroupRleasesdAppsResp) GetDetails() []*ListGroupRleasesdAppsResp_ListGroupReleasedAppsData {
	if x != nil {
		return x.Details
	}
	return nil
}

type PublishReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId     uint32   `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId     uint32   `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	ReleaseId uint32   `protobuf:"varint,3,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
	Memo      string   `protobuf:"bytes,4,opt,name=memo,proto3" json:"memo,omitempty"`
	All       bool     `protobuf:"varint,5,opt,name=all,proto3" json:"all,omitempty"`
	Default   bool     `protobuf:"varint,6,opt,name=default,proto3" json:"default,omitempty"`
	Groups    []uint32 `protobuf:"varint,7,rep,packed,name=groups,proto3" json:"groups,omitempty"`
}

func (x *PublishReq) Reset() {
	*x = PublishReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishReq) ProtoMessage() {}

func (x *PublishReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishReq.ProtoReflect.Descriptor instead.
func (*PublishReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{99}
}

func (x *PublishReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *PublishReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *PublishReq) GetReleaseId() uint32 {
	if x != nil {
		return x.ReleaseId
	}
	return 0
}

func (x *PublishReq) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *PublishReq) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

func (x *PublishReq) GetDefault() bool {
	if x != nil {
		return x.Default
	}
	return false
}

func (x *PublishReq) GetGroups() []uint32 {
	if x != nil {
		return x.Groups
	}
	return nil
}

type GenerateReleaseAndPublishReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId       uint32   `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId       uint32   `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	ReleaseName string   `protobuf:"bytes,3,opt,name=release_name,json=releaseName,proto3" json:"release_name,omitempty"`
	ReleaseMemo string   `protobuf:"bytes,4,opt,name=release_memo,json=releaseMemo,proto3" json:"release_memo,omitempty"`
	All         bool     `protobuf:"varint,5,opt,name=all,proto3" json:"all,omitempty"`
	Groups      []string `protobuf:"bytes,6,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *GenerateReleaseAndPublishReq) Reset() {
	*x = GenerateReleaseAndPublishReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateReleaseAndPublishReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateReleaseAndPublishReq) ProtoMessage() {}

func (x *GenerateReleaseAndPublishReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateReleaseAndPublishReq.ProtoReflect.Descriptor instead.
func (*GenerateReleaseAndPublishReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{100}
}

func (x *GenerateReleaseAndPublishReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GenerateReleaseAndPublishReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *GenerateReleaseAndPublishReq) GetReleaseName() string {
	if x != nil {
		return x.ReleaseName
	}
	return ""
}

func (x *GenerateReleaseAndPublishReq) GetReleaseMemo() string {
	if x != nil {
		return x.ReleaseMemo
	}
	return ""
}

func (x *GenerateReleaseAndPublishReq) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

func (x *GenerateReleaseAndPublishReq) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

type PublishResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublishedStrategyHistoryId uint32 `protobuf:"varint,1,opt,name=published_strategy_history_id,json=publishedStrategyHistoryId,proto3" json:"published_strategy_history_id,omitempty"`
}

func (x *PublishResp) Reset() {
	*x = PublishResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishResp) ProtoMessage() {}

func (x *PublishResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishResp.ProtoReflect.Descriptor instead.
func (*PublishResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{101}
}

func (x *PublishResp) GetPublishedStrategyHistoryId() uint32 {
	if x != nil {
		return x.PublishedStrategyHistoryId
	}
	return 0
}

type ListInstancesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceType string           `protobuf:"bytes,1,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	BizId        uint32           `protobuf:"varint,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Filter       *structpb.Struct `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Page         *base.BasePage   `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListInstancesReq) Reset() {
	*x = ListInstancesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInstancesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstancesReq) ProtoMessage() {}

func (x *ListInstancesReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInstancesReq.ProtoReflect.Descriptor instead.
func (*ListInstancesReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{102}
}

func (x *ListInstancesReq) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *ListInstancesReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListInstancesReq) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListInstancesReq) GetPage() *base.BasePage {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListInstancesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32              `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*InstanceResource `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListInstancesResp) Reset() {
	*x = ListInstancesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInstancesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstancesResp) ProtoMessage() {}

func (x *ListInstancesResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInstancesResp.ProtoReflect.Descriptor instead.
func (*ListInstancesResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{103}
}

func (x *ListInstancesResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListInstancesResp) GetDetails() []*InstanceResource {
	if x != nil {
		return x.Details
	}
	return nil
}

type InstanceResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *InstanceResource) Reset() {
	*x = InstanceResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceResource) ProtoMessage() {}

func (x *InstanceResource) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceResource.ProtoReflect.Descriptor instead.
func (*InstanceResource) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{104}
}

func (x *InstanceResource) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InstanceResource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PingMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PingMsg) Reset() {
	*x = PingMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingMsg) ProtoMessage() {}

func (x *PingMsg) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingMsg.ProtoReflect.Descriptor instead.
func (*PingMsg) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{105}
}

func (x *PingMsg) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type BatchUpsertConfigItemsReq_ConfigItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigItemAttachment *config_item.ConfigItemAttachment `protobuf:"bytes,1,opt,name=config_item_attachment,json=configItemAttachment,proto3" json:"config_item_attachment,omitempty"`
	ConfigItemSpec       *config_item.ConfigItemSpec       `protobuf:"bytes,2,opt,name=config_item_spec,json=configItemSpec,proto3" json:"config_item_spec,omitempty"`
	ContentSpec          *content.ContentSpec              `protobuf:"bytes,3,opt,name=content_spec,json=contentSpec,proto3" json:"content_spec,omitempty"`
}

func (x *BatchUpsertConfigItemsReq_ConfigItem) Reset() {
	*x = BatchUpsertConfigItemsReq_ConfigItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchUpsertConfigItemsReq_ConfigItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpsertConfigItemsReq_ConfigItem) ProtoMessage() {}

func (x *BatchUpsertConfigItemsReq_ConfigItem) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpsertConfigItemsReq_ConfigItem.ProtoReflect.Descriptor instead.
func (*BatchUpsertConfigItemsReq_ConfigItem) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{27, 0}
}

func (x *BatchUpsertConfigItemsReq_ConfigItem) GetConfigItemAttachment() *config_item.ConfigItemAttachment {
	if x != nil {
		return x.ConfigItemAttachment
	}
	return nil
}

func (x *BatchUpsertConfigItemsReq_ConfigItem) GetConfigItemSpec() *config_item.ConfigItemSpec {
	if x != nil {
		return x.ConfigItemSpec
	}
	return nil
}

func (x *BatchUpsertConfigItemsReq_ConfigItem) GetContentSpec() *content.ContentSpec {
	if x != nil {
		return x.ContentSpec
	}
	return nil
}

type GetHookInfoSpec_Releases struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotReleaseId uint32 `protobuf:"varint,1,opt,name=not_release_id,json=notReleaseId,proto3" json:"not_release_id,omitempty"`
}

func (x *GetHookInfoSpec_Releases) Reset() {
	*x = GetHookInfoSpec_Releases{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHookInfoSpec_Releases) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHookInfoSpec_Releases) ProtoMessage() {}

func (x *GetHookInfoSpec_Releases) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHookInfoSpec_Releases.ProtoReflect.Descriptor instead.
func (*GetHookInfoSpec_Releases) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{54, 0}
}

func (x *GetHookInfoSpec_Releases) GetNotReleaseId() uint32 {
	if x != nil {
		return x.NotReleaseId
	}
	return 0
}

type ListAppGroupsResp_ListAppGroupsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     uint32           `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	GroupName   string           `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	ReleaseId   uint32           `protobuf:"varint,3,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
	ReleaseName string           `protobuf:"bytes,4,opt,name=release_name,json=releaseName,proto3" json:"release_name,omitempty"`
	OldSelector *structpb.Struct `protobuf:"bytes,5,opt,name=old_selector,json=oldSelector,proto3" json:"old_selector,omitempty"`
	NewSelector *structpb.Struct `protobuf:"bytes,6,opt,name=new_selector,json=newSelector,proto3" json:"new_selector,omitempty"`
	Edited      bool             `protobuf:"varint,7,opt,name=edited,proto3" json:"edited,omitempty"`
}

func (x *ListAppGroupsResp_ListAppGroupsData) Reset() {
	*x = ListAppGroupsResp_ListAppGroupsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppGroupsResp_ListAppGroupsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppGroupsResp_ListAppGroupsData) ProtoMessage() {}

func (x *ListAppGroupsResp_ListAppGroupsData) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppGroupsResp_ListAppGroupsData.ProtoReflect.Descriptor instead.
func (*ListAppGroupsResp_ListAppGroupsData) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{92, 0}
}

func (x *ListAppGroupsResp_ListAppGroupsData) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ListAppGroupsResp_ListAppGroupsData) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *ListAppGroupsResp_ListAppGroupsData) GetReleaseId() uint32 {
	if x != nil {
		return x.ReleaseId
	}
	return 0
}

func (x *ListAppGroupsResp_ListAppGroupsData) GetReleaseName() string {
	if x != nil {
		return x.ReleaseName
	}
	return ""
}

func (x *ListAppGroupsResp_ListAppGroupsData) GetOldSelector() *structpb.Struct {
	if x != nil {
		return x.OldSelector
	}
	return nil
}

func (x *ListAppGroupsResp_ListAppGroupsData) GetNewSelector() *structpb.Struct {
	if x != nil {
		return x.NewSelector
	}
	return nil
}

func (x *ListAppGroupsResp_ListAppGroupsData) GetEdited() bool {
	if x != nil {
		return x.Edited
	}
	return false
}

type CountGroupsReleasedAppsResp_CountGroupsReleasedAppsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId uint32 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Count   uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Edited  bool   `protobuf:"varint,3,opt,name=edited,proto3" json:"edited,omitempty"`
}

func (x *CountGroupsReleasedAppsResp_CountGroupsReleasedAppsData) Reset() {
	*x = CountGroupsReleasedAppsResp_CountGroupsReleasedAppsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountGroupsReleasedAppsResp_CountGroupsReleasedAppsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountGroupsReleasedAppsResp_CountGroupsReleasedAppsData) ProtoMessage() {}

func (x *CountGroupsReleasedAppsResp_CountGroupsReleasedAppsData) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountGroupsReleasedAppsResp_CountGroupsReleasedAppsData.ProtoReflect.Descriptor instead.
func (*CountGroupsReleasedAppsResp_CountGroupsReleasedAppsData) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{96, 0}
}

func (x *CountGroupsReleasedAppsResp_CountGroupsReleasedAppsData) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *CountGroupsReleasedAppsResp_CountGroupsReleasedAppsData) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CountGroupsReleasedAppsResp_CountGroupsReleasedAppsData) GetEdited() bool {
	if x != nil {
		return x.Edited
	}
	return false
}

type ListGroupRleasesdAppsResp_ListGroupReleasedAppsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId       uint32 `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	AppName     string `protobuf:"bytes,2,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	ReleaseId   uint32 `protobuf:"varint,3,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
	ReleaseName string `protobuf:"bytes,4,opt,name=release_name,json=releaseName,proto3" json:"release_name,omitempty"`
	Edited      bool   `protobuf:"varint,5,opt,name=edited,proto3" json:"edited,omitempty"`
}

func (x *ListGroupRleasesdAppsResp_ListGroupReleasedAppsData) Reset() {
	*x = ListGroupRleasesdAppsResp_ListGroupReleasedAppsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupRleasesdAppsResp_ListGroupReleasedAppsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupRleasesdAppsResp_ListGroupReleasedAppsData) ProtoMessage() {}

func (x *ListGroupRleasesdAppsResp_ListGroupReleasedAppsData) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupRleasesdAppsResp_ListGroupReleasedAppsData.ProtoReflect.Descriptor instead.
func (*ListGroupRleasesdAppsResp_ListGroupReleasedAppsData) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{98, 0}
}

func (x *ListGroupRleasesdAppsResp_ListGroupReleasedAppsData) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ListGroupRleasesdAppsResp_ListGroupReleasedAppsData) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *ListGroupRleasesdAppsResp_ListGroupReleasedAppsData) GetReleaseId() uint32 {
	if x != nil {
		return x.ReleaseId
	}
	return 0
}

func (x *ListGroupRleasesdAppsResp_ListGroupReleasedAppsData) GetReleaseName() string {
	if x != nil {
		return x.ReleaseName
	}
	return ""
}

func (x *ListGroupRleasesdAppsResp_ListGroupReleasedAppsData) GetEdited() bool {
	if x != nil {
		return x.Edited
	}
	return false
}

var File_data_service_proto protoreflect.FileDescriptor

var file_data_service_proto_rawDesc = []byte{
	0x0a, 0x12, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x70, 0x62, 0x64, 0x73, 0x1a, 0x27, 0x62, 0x73, 0x63, 0x70,
	0x2e, 0x69, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x62, 0x73, 0x63, 0x70, 0x2e, 0x69, 0x6f, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x62,
	0x61, 0x73, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37,
	0x62, 0x73, 0x63, 0x70, 0x2e, 0x69, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2d, 0x68, 0x6f, 0x6f, 0x6b, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x68, 0x6f, 0x6f,
	0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x62, 0x73, 0x63, 0x70, 0x2e, 0x69, 0x6f,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2d, 0x69, 0x74, 0x65, 0x6d, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2d, 0x62, 0x73, 0x63, 0x70, 0x2e, 0x69, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2f, 0x62, 0x73, 0x63, 0x70, 0x2e, 0x69, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x35, 0x62, 0x73, 0x63, 0x70, 0x2e, 0x69, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x41, 0x62, 0x73, 0x63, 0x70, 0x2e, 0x69, 0x6f,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2d, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2d, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x62, 0x73, 0x63, 0x70,
	0x2e, 0x69, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x62, 0x73, 0x63, 0x70, 0x2e, 0x69, 0x6f,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x68, 0x6f, 0x6f, 0x6b, 0x2f, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x39, 0x62, 0x73, 0x63, 0x70, 0x2e, 0x69, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x68, 0x6f,
	0x6f, 0x6b, 0x2d, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2f, 0x68, 0x6f, 0x6f, 0x6b, 0x5f,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x62,
	0x73, 0x63, 0x70, 0x2e, 0x69, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x2f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37,
	0x62, 0x73, 0x63, 0x70, 0x2e, 0x69, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x64, 0x2d, 0x63, 0x69, 0x2f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x63,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x62, 0x73, 0x63, 0x70, 0x2e, 0x69, 0x6f,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x41, 0x62, 0x73, 0x63, 0x70,
	0x2e, 0x69, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2d, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x39, 0x62,
	0x73, 0x63, 0x70, 0x2e, 0x69, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x2d, 0x73, 0x65, 0x74, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x73,
	0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3d, 0x62, 0x73, 0x63, 0x70, 0x2e, 0x69,
	0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2d, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xbd, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x30, 0x0a,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x70, 0x62, 0x63, 0x72, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f,
	0x70, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x6d, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x40,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x63, 0x72, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x55,
	0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62, 0x63, 0x72, 0x73,
	0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x70, 0x0a,
	0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x71, 0x12, 0x40, 0x0a, 0x0a, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x70, 0x62, 0x63, 0x72, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22,
	0x8b, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x42, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x62,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x74, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x22, 0x62, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x36, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x70, 0x62, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x42, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x62, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x52,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x69, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x42, 0x0a, 0x0a,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x70, 0x62, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x54, 0x0a, 0x13, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x1c, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x0a,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x70, 0x62, 0x63, 0x68, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x6f,
	0x6f, 0x6b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x63, 0x68, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x48, 0x6f, 0x6f, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x22, 0x40, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x61, 0x70,
	0x70, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22,
	0x59, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x61, 0x70, 0x70, 0x2e, 0x41, 0x70, 0x70,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x35, 0x0a, 0x0c, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69,
	0x7a, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49,
	0x64, 0x22, 0x39, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x12, 0x15,
	0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x26, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a,
	0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x0f, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a,
	0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62,
	0x69, 0x7a, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x4a, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x61, 0x70, 0x70, 0x2e,
	0x41, 0x70, 0x70, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x24, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x39, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x42, 0x79,
	0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x61, 0x70, 0x70,
	0x2e, 0x41, 0x70, 0x70, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xe2, 0x01,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x50, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62, 0x63, 0x69, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x63, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x74, 0x65, 0x6d, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x74, 0x65, 0x6d, 0x53, 0x70, 0x65, 0x63, 0x12, 0x39, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x62, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x70,
	0x65, 0x63, 0x22, 0xe7, 0x02, 0x0a, 0x19, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x40,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x70, 0x62, 0x64, 0x73, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x1a, 0xd9, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x50, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x70, 0x62, 0x63, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65,
	0x6d, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x14, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x3e, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62,
	0x63, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x39, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x70, 0x65,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x22, 0x8b, 0x01, 0x0a,
	0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62, 0x63, 0x69, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x28, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x62, 0x63, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x61, 0x0a, 0x13, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62, 0x63, 0x69, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x50, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22,
	0xbd, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x6c,
	0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x22,
	0x57, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x62, 0x63, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x46, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x22, 0x4f, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74,
	0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x62, 0x63, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74,
	0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0x7b, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x3a, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x62, 0x63, 0x68, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x6f, 0x6f, 0x6b, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x63, 0x68, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x48, 0x6f, 0x6f, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x7c,
	0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x3c, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x2a, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x70, 0x62, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x4d, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62,
	0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x0f,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2f, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x24,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x22, 0x56, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x62, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x80, 0x01, 0x0a,
	0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x3a, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x65, 0x6d, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x22,
	0x68, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x0e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06,
	0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69,
	0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x22, 0x53, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x7c, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x3c, 0x0a, 0x0a, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x62, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x22, 0xb6, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x72,
	0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x56, 0x0a,
	0x10, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x64, 0x43, 0x49, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69,
	0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49,
	0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x22, 0x82, 0x01,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x43, 0x49,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x22, 0x60, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x64, 0x43, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x62, 0x72, 0x63, 0x69, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x22, 0x6d, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x22, 0x27, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x54,
	0x61, 0x67, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69,
	0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x22, 0xae, 0x01, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x70, 0x65, 0x63, 0x52,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x36, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a,
	0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xee, 0x01, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x75, 0x6d, 0x12, 0x3a,
	0x0a, 0x08, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73,
	0x52, 0x08, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x1a, 0x30, 0x0a, 0x08, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x5f, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x6e, 0x6f, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x22, 0xa2, 0x01, 0x0a,
	0x0c, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a,
	0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62,
	0x69, 0x7a, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12, 0x17, 0x0a, 0x07,
	0x6e, 0x6f, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6e,
	0x6f, 0x74, 0x54, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x4d, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x42, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x54, 0x61, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x54, 0x61, 0x67, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x22, 0x57, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x7e, 0x0a,
	0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x3b, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x62, 0x68, 0x72,
	0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x62, 0x68, 0x72, 0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0xb8, 0x01,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68,
	0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61,
	0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x59, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74,
	0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x68, 0x72, 0x2e, 0x48,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x22, 0x57, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06,
	0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69,
	0x7a, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x56, 0x0a, 0x14,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x68,
	0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x6f,
	0x6f, 0x6b, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x57, 0x0a, 0x15, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x48,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a,
	0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62,
	0x69, 0x7a, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x58, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x42, 0x79, 0x50, 0x75, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x6f, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x6f, 0x6f, 0x6b, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x3b, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x62, 0x68, 0x72, 0x2e, 0x48, 0x6f, 0x6f, 0x6b,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62,
	0x68, 0x72, 0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x9c, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73,
	0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69,
	0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x79, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x48,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x41, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x70, 0x62, 0x68, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6f, 0x6b,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x3d, 0x0a,
	0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x74, 0x73, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x74,
	0x73, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53,
	0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x5a, 0x0a, 0x15, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x5d, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x74, 0x73, 0x2e, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x3d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x74, 0x73, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2b,
	0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x62, 0x74, 0x73, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x67, 0x0a, 0x16, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x74, 0x73,
	0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0xb5, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x3e, 0x0a, 0x0a, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x70, 0x62, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x32, 0x0a, 0x07, 0x74, 0x72, 0x5f, 0x73,
	0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x74, 0x72,
	0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x06, 0x74, 0x72, 0x53, 0x70, 0x65, 0x63, 0x22, 0x81, 0x01, 0x0a,
	0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x59, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x62, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x3e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x62, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x2c, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x70, 0x62, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22,
	0x63, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x3e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x62, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x3f, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x62, 0x74, 0x72, 0x2e, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x62, 0x74, 0x72, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65,
	0x63, 0x22, 0xa9, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a,
	0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62,
	0x69, 0x7a, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x61, 0x0a,
	0x18, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x2f, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x62, 0x74, 0x72, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x6b, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3f, 0x0a, 0x0a,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x70, 0x62, 0x74, 0x72, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x82, 0x01,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x3d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x74,
	0x73, 0x65, 0x74, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x74, 0x73, 0x65, 0x74, 0x2e, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x22, 0x84, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69,
	0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x5b, 0x0a, 0x14, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x74, 0x73, 0x65,
	0x74, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x3d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x74, 0x73, 0x65, 0x74, 0x2e, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2b,
	0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x62, 0x74, 0x73, 0x65, 0x74, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x65, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x74, 0x73, 0x65, 0x74,
	0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0x72, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26,
	0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x62, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x7d, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x2f,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x24, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x50, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x62, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x40, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62,
	0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a,
	0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0xfa, 0x02, 0x0a, 0x11, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x43, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70,
	0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x1a, 0x9f, 0x02, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0b, 0x6f, 0x6c, 0x64, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x0a, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x70, 0x62, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x5a, 0x0a, 0x0e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a,
	0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x4b, 0x0a, 0x1a, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x41, 0x70,
	0x70, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x22, 0xd8, 0x01, 0x0a, 0x1b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x41, 0x70, 0x70, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x41, 0x70, 0x70,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x41, 0x70, 0x70, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x66, 0x0a, 0x1b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x41, 0x70,
	0x70, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x64, 0x69, 0x74, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x22,
	0x78, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x73, 0x64, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62,
	0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xb0, 0x02, 0x0a, 0x19, 0x4c, 0x69,
	0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x64, 0x41,
	0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x53, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x64, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x64, 0x41, 0x70, 0x70, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x1a, 0xa7, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x41, 0x70, 0x70, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x22, 0xb1, 0x01, 0x0a,
	0x0a, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62,
	0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a,
	0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x22, 0xbc, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x41, 0x6e, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x65,
	0x6d, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22,
	0x50, 0x0a, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41,
	0x0a, 0x1d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x22, 0xa5, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x62,
	0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a,
	0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x5b, 0x0a, 0x11, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x36, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1d,
	0x0a, 0x07, 0x50, 0x69, 0x6e, 0x67, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xfa, 0x26,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70,
	0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x34, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x12, 0x12,
	0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x27, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x61, 0x70, 0x70, 0x2e, 0x41, 0x70, 0x70, 0x22, 0x00,
	0x12, 0x2f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x42, 0x79, 0x49, 0x44, 0x12, 0x13,
	0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x61, 0x70, 0x70, 0x2e, 0x41, 0x70, 0x70, 0x22,
	0x00, 0x12, 0x33, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x61, 0x70, 0x70,
	0x2e, 0x41, 0x70, 0x70, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70,
	0x70, 0x73, 0x52, 0x65, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e,
	0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x42,
	0x79, 0x49, 0x44, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x70, 0x70, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70,
	0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x42, 0x79, 0x49, 0x44,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x2e, 0x70, 0x62,
	0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x16, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19,
	0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x42,
	0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e,
	0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62,
	0x63, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12,
	0x48, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70,
	0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1c, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d,
	0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x41, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48,
	0x6f, 0x6f, 0x6b, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x10,
	0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x1a,
	0x10, 0x2e, 0x70, 0x62, 0x63, 0x68, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x6f, 0x6f,
	0x6b, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70,
	0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x37, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x13,
	0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x64, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x64,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62,
	0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e,
	0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x3f, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x73, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x4c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x2e, 0x70, 0x62,
	0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x43, 0x49,
	0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x72, 0x63, 0x69, 0x2e, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00,
	0x12, 0x50, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x18, 0x2e, 0x70, 0x62,
	0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x43,
	0x49, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x43, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b,
	0x12, 0x13, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x09, 0x4c, 0x69, 0x73,
	0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x64,
	0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x36, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x12,
	0x13, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x54, 0x61, 0x67, 0x73, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x64, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x1a,
	0x15, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x54,
	0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x48,
	0x6f, 0x6f, 0x6b, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12,
	0x1a, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62,
	0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x4b, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a,
	0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x11, 0x2e, 0x70, 0x62, 0x68, 0x72, 0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x64, 0x73,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x12, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x12, 0x1b, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x48,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e,
	0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x47, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x42, 0x79, 0x50, 0x75, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16,
	0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x50, 0x75, 0x62, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x68, 0x72, 0x2e, 0x48, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x12, 0x1a, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70,
	0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x69, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x23, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x62,
	0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x1c, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e,
	0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x48, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x64, 0x73,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x17,
	0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0d, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x70,
	0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x3e, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x3e, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x4b, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x1e,
	0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11,
	0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x70,
	0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x64,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74,
	0x12, 0x1a, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70,
	0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x37, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x14, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0a, 0x4c, 0x69,
	0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x17,
	0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x11,
	0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x60, 0x0a,
	0x17, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x64, 0x41, 0x70, 0x70, 0x73, 0x12, 0x20, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x64, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x70, 0x62, 0x64,
	0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x64, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x5a, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x73, 0x64, 0x41, 0x70, 0x70, 0x73, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73,
	0x64, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73,
	0x64, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x07, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x54, 0x0a,
	0x19, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x41, 0x6e, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x22, 0x2e, 0x70, 0x62, 0x64,
	0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x41, 0x6e, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x11,
	0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x64, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x42,
	0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e,
	0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x1d,
	0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e,
	0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x5d, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x62, 0x64, 0x73,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x70, 0x62, 0x64,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x42,
	0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x16, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x36, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x64,
	0x73, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x4d, 0x73, 0x67, 0x1a, 0x0d, 0x2e, 0x70, 0x62, 0x64, 0x73,
	0x2e, 0x50, 0x69, 0x6e, 0x67, 0x4d, 0x73, 0x67, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a,
	0x22, 0x05, 0x2f, 0x70, 0x69, 0x6e, 0x67, 0x3a, 0x01, 0x2a, 0x42, 0x28, 0x5a, 0x26, 0x62, 0x73,
	0x63, 0x70, 0x2e, 0x69, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3b,
	0x70, 0x62, 0x64, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_data_service_proto_rawDescOnce sync.Once
	file_data_service_proto_rawDescData = file_data_service_proto_rawDesc
)

func file_data_service_proto_rawDescGZIP() []byte {
	file_data_service_proto_rawDescOnce.Do(func() {
		file_data_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_data_service_proto_rawDescData)
	})
	return file_data_service_proto_rawDescData
}

var file_data_service_proto_msgTypes = make([]protoimpl.MessageInfo, 111)
var file_data_service_proto_goTypes = []interface{}{
	(*UpdateCredentialScopesReq)(nil),                               // 0: pbds.UpdateCredentialScopesReq
	(*UpdateCredentialScopesResp)(nil),                              // 1: pbds.UpdateCredentialScopesResp
	(*DeleteCredentialScopesReq)(nil),                               // 2: pbds.DeleteCredentialScopesReq
	(*DeleteCredentialScopesResp)(nil),                              // 3: pbds.DeleteCredentialScopesResp
	(*ListCredentialScopesReq)(nil),                                 // 4: pbds.ListCredentialScopesReq
	(*ListCredentialScopesResp)(nil),                                // 5: pbds.ListCredentialScopesResp
	(*CreateCredentialScopeReq)(nil),                                // 6: pbds.CreateCredentialScopeReq
	(*CreateCredentialReq)(nil),                                     // 7: pbds.CreateCredentialReq
	(*ListCredentialReq)(nil),                                       // 8: pbds.ListCredentialReq
	(*ListCredentialResp)(nil),                                      // 9: pbds.ListCredentialResp
	(*UpdateCredentialReq)(nil),                                     // 10: pbds.UpdateCredentialReq
	(*DeleteCredentialReq)(nil),                                     // 11: pbds.DeleteCredentialReq
	(*EnableCredentialReq)(nil),                                     // 12: pbds.EnableCredentialReq
	(*CreateResp)(nil),                                              // 13: pbds.CreateResp
	(*UpdateConfigHookReq)(nil),                                     // 14: pbds.UpdateConfigHookReq
	(*GetConfigHookReq)(nil),                                        // 15: pbds.GetConfigHookReq
	(*CreateAppReq)(nil),                                            // 16: pbds.CreateAppReq
	(*UpdateAppReq)(nil),                                            // 17: pbds.UpdateAppReq
	(*DeleteAppReq)(nil),                                            // 18: pbds.DeleteAppReq
	(*GetAppReq)(nil),                                               // 19: pbds.GetAppReq
	(*GetAppByIDReq)(nil),                                           // 20: pbds.GetAppByIDReq
	(*GetAppByNameReq)(nil),                                         // 21: pbds.GetAppByNameReq
	(*ListAppsRestReq)(nil),                                         // 22: pbds.ListAppsRestReq
	(*ListAppsResp)(nil),                                            // 23: pbds.ListAppsResp
	(*ListAppsByIDsReq)(nil),                                        // 24: pbds.ListAppsByIDsReq
	(*ListAppsByIDsResp)(nil),                                       // 25: pbds.ListAppsByIDsResp
	(*CreateConfigItemReq)(nil),                                     // 26: pbds.CreateConfigItemReq
	(*BatchUpsertConfigItemsReq)(nil),                               // 27: pbds.BatchUpsertConfigItemsReq
	(*UpdateConfigItemReq)(nil),                                     // 28: pbds.UpdateConfigItemReq
	(*DeleteConfigItemReq)(nil),                                     // 29: pbds.DeleteConfigItemReq
	(*GetConfigItemReq)(nil),                                        // 30: pbds.GetConfigItemReq
	(*ListConfigItemsReq)(nil),                                      // 31: pbds.ListConfigItemsReq
	(*ListConfigItemsResp)(nil),                                     // 32: pbds.ListConfigItemsResp
	(*ListConfigItemCountReq)(nil),                                  // 33: pbds.ListConfigItemCountReq
	(*ListConfigItemCountResp)(nil),                                 // 34: pbds.ListConfigItemCountResp
	(*CreateConfigHookReq)(nil),                                     // 35: pbds.CreateConfigHookReq
	(*CreateContentReq)(nil),                                        // 36: pbds.CreateContentReq
	(*GetContentReq)(nil),                                           // 37: pbds.GetContentReq
	(*ListContentsReq)(nil),                                         // 38: pbds.ListContentsReq
	(*ListContentsResp)(nil),                                        // 39: pbds.ListContentsResp
	(*CreateCommitReq)(nil),                                         // 40: pbds.CreateCommitReq
	(*GetLatestCommitReq)(nil),                                      // 41: pbds.GetLatestCommitReq
	(*ListCommitsReq)(nil),                                          // 42: pbds.ListCommitsReq
	(*ListCommitsResp)(nil),                                         // 43: pbds.ListCommitsResp
	(*CreateReleaseReq)(nil),                                        // 44: pbds.CreateReleaseReq
	(*ListReleasesReq)(nil),                                         // 45: pbds.ListReleasesReq
	(*ListReleasesResp)(nil),                                        // 46: pbds.ListReleasesResp
	(*GetReleasedCIReq)(nil),                                        // 47: pbds.GetReleasedCIReq
	(*ListReleasedCIsReq)(nil),                                      // 48: pbds.ListReleasedCIsReq
	(*ListReleasedCIsResp)(nil),                                     // 49: pbds.ListReleasedCIsResp
	(*CreateHookReq)(nil),                                           // 50: pbds.CreateHookReq
	(*ListHookTagReq)(nil),                                          // 51: pbds.ListHookTagReq
	(*GetHookReq)(nil),                                              // 52: pbds.GetHookReq
	(*GetHookResp)(nil),                                             // 53: pbds.GetHookResp
	(*GetHookInfoSpec)(nil),                                         // 54: pbds.GetHookInfoSpec
	(*ListHooksReq)(nil),                                            // 55: pbds.ListHooksReq
	(*ListHooksResp)(nil),                                           // 56: pbds.ListHooksResp
	(*ListHookTagResp)(nil),                                         // 57: pbds.ListHookTagResp
	(*DeleteHookReq)(nil),                                           // 58: pbds.DeleteHookReq
	(*CreateHookReleaseReq)(nil),                                    // 59: pbds.CreateHookReleaseReq
	(*ListHookReleasesReq)(nil),                                     // 60: pbds.ListHookReleasesReq
	(*ListHookReleasesResp)(nil),                                    // 61: pbds.ListHookReleasesResp
	(*GetHookReleaseByIdReq)(nil),                                   // 62: pbds.GetHookReleaseByIdReq
	(*DeleteHookReleaseReq)(nil),                                    // 63: pbds.DeleteHookReleaseReq
	(*PublishHookReleaseReq)(nil),                                   // 64: pbds.PublishHookReleaseReq
	(*GetByPubStateReq)(nil),                                        // 65: pbds.GetByPubStateReq
	(*UpdateHookReleaseReq)(nil),                                    // 66: pbds.UpdateHookReleaseReq
	(*ListHookReleasesReferencesReq)(nil),                           // 67: pbds.ListHookReleasesReferencesReq
	(*ListHookReleasesReferencesResp)(nil),                          // 68: pbds.ListHookReleasesReferencesResp
	(*CreateTemplateSpaceReq)(nil),                                  // 69: pbds.CreateTemplateSpaceReq
	(*ListTemplateSpacesReq)(nil),                                   // 70: pbds.ListTemplateSpacesReq
	(*ListTemplateSpacesResp)(nil),                                  // 71: pbds.ListTemplateSpacesResp
	(*UpdateTemplateSpaceReq)(nil),                                  // 72: pbds.UpdateTemplateSpaceReq
	(*DeleteTemplateSpaceReq)(nil),                                  // 73: pbds.DeleteTemplateSpaceReq
	(*CreateTemplateReq)(nil),                                       // 74: pbds.CreateTemplateReq
	(*ListTemplatesReq)(nil),                                        // 75: pbds.ListTemplatesReq
	(*ListTemplatesResp)(nil),                                       // 76: pbds.ListTemplatesResp
	(*UpdateTemplateReq)(nil),                                       // 77: pbds.UpdateTemplateReq
	(*DeleteTemplateReq)(nil),                                       // 78: pbds.DeleteTemplateReq
	(*CreateTemplateReleaseReq)(nil),                                // 79: pbds.CreateTemplateReleaseReq
	(*ListTemplateReleasesReq)(nil),                                 // 80: pbds.ListTemplateReleasesReq
	(*ListTemplateReleasesResp)(nil),                                // 81: pbds.ListTemplateReleasesResp
	(*DeleteTemplateReleaseReq)(nil),                                // 82: pbds.DeleteTemplateReleaseReq
	(*CreateTemplateSetReq)(nil),                                    // 83: pbds.CreateTemplateSetReq
	(*ListTemplateSetsReq)(nil),                                     // 84: pbds.ListTemplateSetsReq
	(*ListTemplateSetsResp)(nil),                                    // 85: pbds.ListTemplateSetsResp
	(*UpdateTemplateSetReq)(nil),                                    // 86: pbds.UpdateTemplateSetReq
	(*DeleteTemplateSetReq)(nil),                                    // 87: pbds.DeleteTemplateSetReq
	(*CreateGroupReq)(nil),                                          // 88: pbds.CreateGroupReq
	(*ListGroupsReq)(nil),                                           // 89: pbds.ListGroupsReq
	(*ListGroupsResp)(nil),                                          // 90: pbds.ListGroupsResp
	(*ListAppGroupsReq)(nil),                                        // 91: pbds.ListAppGroupsReq
	(*ListAppGroupsResp)(nil),                                       // 92: pbds.ListAppGroupsResp
	(*UpdateGroupReq)(nil),                                          // 93: pbds.UpdateGroupReq
	(*DeleteGroupReq)(nil),                                          // 94: pbds.DeleteGroupReq
	(*CountGroupsReleasedAppsReq)(nil),                              // 95: pbds.CountGroupsReleasedAppsReq
	(*CountGroupsReleasedAppsResp)(nil),                             // 96: pbds.CountGroupsReleasedAppsResp
	(*ListGroupRleasesdAppsReq)(nil),                                // 97: pbds.ListGroupRleasesdAppsReq
	(*ListGroupRleasesdAppsResp)(nil),                               // 98: pbds.ListGroupRleasesdAppsResp
	(*PublishReq)(nil),                                              // 99: pbds.PublishReq
	(*GenerateReleaseAndPublishReq)(nil),                            // 100: pbds.GenerateReleaseAndPublishReq
	(*PublishResp)(nil),                                             // 101: pbds.PublishResp
	(*ListInstancesReq)(nil),                                        // 102: pbds.ListInstancesReq
	(*ListInstancesResp)(nil),                                       // 103: pbds.ListInstancesResp
	(*InstanceResource)(nil),                                        // 104: pbds.InstanceResource
	(*PingMsg)(nil),                                                 // 105: pbds.PingMsg
	(*BatchUpsertConfigItemsReq_ConfigItem)(nil),                    // 106: pbds.BatchUpsertConfigItemsReq.ConfigItem
	(*GetHookInfoSpec_Releases)(nil),                                // 107: pbds.GetHookInfoSpec.Releases
	(*ListAppGroupsResp_ListAppGroupsData)(nil),                     // 108: pbds.ListAppGroupsResp.ListAppGroupsData
	(*CountGroupsReleasedAppsResp_CountGroupsReleasedAppsData)(nil), // 109: pbds.CountGroupsReleasedAppsResp.CountGroupsReleasedAppsData
	(*ListGroupRleasesdAppsResp_ListGroupReleasedAppsData)(nil),     // 110: pbds.ListGroupRleasesdAppsResp.ListGroupReleasedAppsData
	(*credential_scope.UpdateScopeSpec)(nil),                        // 111: pbcrs.UpdateScopeSpec
	(*credential_scope.CredentialScopeAttachment)(nil),              // 112: pbcrs.CredentialScopeAttachment
	(*credential_scope.CredentialScopeList)(nil),                    // 113: pbcrs.CredentialScopeList
	(*credential.CredentialAttachment)(nil),                         // 114: pbcredential.CredentialAttachment
	(*credential.CredentialSpec)(nil),                               // 115: pbcredential.CredentialSpec
	(*credential.CredentialList)(nil),                               // 116: pbcredential.CredentialList
	(*config_hook.ConfigHookAttachment)(nil),                        // 117: pbch.ConfigHookAttachment
	(*config_hook.ConfigHookSpec)(nil),                              // 118: pbch.ConfigHookSpec
	(*app.AppSpec)(nil),                                             // 119: pbapp.AppSpec
	(*app.App)(nil),                                                 // 120: pbapp.App
	(*config_item.ConfigItemAttachment)(nil),                        // 121: pbci.ConfigItemAttachment
	(*config_item.ConfigItemSpec)(nil),                              // 122: pbci.ConfigItemSpec
	(*content.ContentSpec)(nil),                                     // 123: pbcontent.ContentSpec
	(*config_item.ConfigItem)(nil),                                  // 124: pbci.ConfigItem
	(*config_item.ListConfigItemCounts)(nil),                        // 125: pbci.ListConfigItemCounts
	(*content.ContentAttachment)(nil),                               // 126: pbcontent.ContentAttachment
	(*structpb.Struct)(nil),                                         // 127: google.protobuf.Struct
	(*base.BasePage)(nil),                                           // 128: pbbase.BasePage
	(*content.Content)(nil),                                         // 129: pbcontent.Content
	(*commit.CommitAttachment)(nil),                                 // 130: pbcommit.CommitAttachment
	(*commit.Commit)(nil),                                           // 131: pbcommit.Commit
	(*release.ReleaseAttachment)(nil),                               // 132: pbrelease.ReleaseAttachment
	(*release.ReleaseSpec)(nil),                                     // 133: pbrelease.ReleaseSpec
	(*release.Release)(nil),                                         // 134: pbrelease.Release
	(*released_ci.ReleasedConfigItem)(nil),                          // 135: pbrci.ReleasedConfigItem
	(*hook.HookAttachment)(nil),                                     // 136: pbhook.HookAttachment
	(*hook.HookSpec)(nil),                                           // 137: pbhook.HookSpec
	(*base.Revision)(nil),                                           // 138: pbbase.Revision
	(*hook.Hook)(nil),                                               // 139: pbhook.Hook
	(*hook.CountHookTags)(nil),                                      // 140: pbhook.CountHookTags
	(*hook_release.HookReleaseAttachment)(nil),                      // 141: pbhr.HookReleaseAttachment
	(*hook_release.HookReleaseSpec)(nil),                            // 142: pbhr.HookReleaseSpec
	(*hook_release.HookRelease)(nil),                                // 143: pbhr.HookRelease
	(*hook_release.ListHookReleasesReferencesDetails)(nil),          // 144: pbhr.ListHookReleasesReferencesDetails
	(*template_space.TemplateSpaceAttachment)(nil),                  // 145: pbts.TemplateSpaceAttachment
	(*template_space.TemplateSpaceSpec)(nil),                        // 146: pbts.TemplateSpaceSpec
	(*template_space.TemplateSpace)(nil),                            // 147: pbts.TemplateSpace
	(*template.TemplateAttachment)(nil),                             // 148: pbtemplate.TemplateAttachment
	(*template.TemplateSpec)(nil),                                   // 149: pbtemplate.TemplateSpec
	(*template_release.TemplateReleaseSpec)(nil),                    // 150: pbtr.TemplateReleaseSpec
	(*template.Template)(nil),                                       // 151: pbtemplate.Template
	(*template_release.TemplateReleaseAttachment)(nil),              // 152: pbtr.TemplateReleaseAttachment
	(*template_release.TemplateRelease)(nil),                        // 153: pbtr.TemplateRelease
	(*template_set.TemplateSetAttachment)(nil),                      // 154: pbtset.TemplateSetAttachment
	(*template_set.TemplateSetSpec)(nil),                            // 155: pbtset.TemplateSetSpec
	(*template_set.TemplateSet)(nil),                                // 156: pbtset.TemplateSet
	(*group.GroupAttachment)(nil),                                   // 157: pbgroup.GroupAttachment
	(*group.GroupSpec)(nil),                                         // 158: pbgroup.GroupSpec
	(*group.Group)(nil),                                             // 159: pbgroup.Group
	(*base.EmptyResp)(nil),                                          // 160: pbbase.EmptyResp
	(*config_hook.ConfigHook)(nil),                                  // 161: pbch.ConfigHook
}
var file_data_service_proto_depIdxs = []int32{
	111, // 0: pbds.UpdateCredentialScopesReq.updated:type_name -> pbcrs.UpdateScopeSpec
	112, // 1: pbds.DeleteCredentialScopesReq.attachment:type_name -> pbcrs.CredentialScopeAttachment
	113, // 2: pbds.ListCredentialScopesResp.details:type_name -> pbcrs.CredentialScopeList
	112, // 3: pbds.CreateCredentialScopeReq.attachment:type_name -> pbcrs.CredentialScopeAttachment
	114, // 4: pbds.CreateCredentialReq.attachment:type_name -> pbcredential.CredentialAttachment
	115, // 5: pbds.CreateCredentialReq.spec:type_name -> pbcredential.CredentialSpec
	116, // 6: pbds.ListCredentialResp.details:type_name -> pbcredential.CredentialList
	114, // 7: pbds.UpdateCredentialReq.attachment:type_name -> pbcredential.CredentialAttachment
	115, // 8: pbds.UpdateCredentialReq.spec:type_name -> pbcredential.CredentialSpec
	114, // 9: pbds.DeleteCredentialReq.attachment:type_name -> pbcredential.CredentialAttachment
	117, // 10: pbds.UpdateConfigHookReq.attachment:type_name -> pbch.ConfigHookAttachment
	118, // 11: pbds.UpdateConfigHookReq.spec:type_name -> pbch.ConfigHookSpec
	119, // 12: pbds.CreateAppReq.spec:type_name -> pbapp.AppSpec
	119, // 13: pbds.UpdateAppReq.spec:type_name -> pbapp.AppSpec
	120, // 14: pbds.ListAppsResp.details:type_name -> pbapp.App
	120, // 15: pbds.ListAppsByIDsResp.details:type_name -> pbapp.App
	121, // 16: pbds.CreateConfigItemReq.config_item_attachment:type_name -> pbci.ConfigItemAttachment
	122, // 17: pbds.CreateConfigItemReq.config_item_spec:type_name -> pbci.ConfigItemSpec
	123, // 18: pbds.CreateConfigItemReq.content_spec:type_name -> pbcontent.ContentSpec
	106, // 19: pbds.BatchUpsertConfigItemsReq.items:type_name -> pbds.BatchUpsertConfigItemsReq.ConfigItem
	121, // 20: pbds.UpdateConfigItemReq.attachment:type_name -> pbci.ConfigItemAttachment
	122, // 21: pbds.UpdateConfigItemReq.spec:type_name -> pbci.ConfigItemSpec
	121, // 22: pbds.DeleteConfigItemReq.attachment:type_name -> pbci.ConfigItemAttachment
	124, // 23: pbds.ListConfigItemsResp.details:type_name -> pbci.ConfigItem
	125, // 24: pbds.ListConfigItemCountResp.details:type_name -> pbci.ListConfigItemCounts
	117, // 25: pbds.CreateConfigHookReq.attachment:type_name -> pbch.ConfigHookAttachment
	118, // 26: pbds.CreateConfigHookReq.spec:type_name -> pbch.ConfigHookSpec
	126, // 27: pbds.CreateContentReq.attachment:type_name -> pbcontent.ContentAttachment
	123, // 28: pbds.CreateContentReq.spec:type_name -> pbcontent.ContentSpec
	127, // 29: pbds.ListContentsReq.filter:type_name -> google.protobuf.Struct
	128, // 30: pbds.ListContentsReq.page:type_name -> pbbase.BasePage
	129, // 31: pbds.ListContentsResp.details:type_name -> pbcontent.Content
	130, // 32: pbds.CreateCommitReq.attachment:type_name -> pbcommit.CommitAttachment
	127, // 33: pbds.ListCommitsReq.filter:type_name -> google.protobuf.Struct
	128, // 34: pbds.ListCommitsReq.page:type_name -> pbbase.BasePage
	131, // 35: pbds.ListCommitsResp.details:type_name -> pbcommit.Commit
	132, // 36: pbds.CreateReleaseReq.attachment:type_name -> pbrelease.ReleaseAttachment
	133, // 37: pbds.CreateReleaseReq.spec:type_name -> pbrelease.ReleaseSpec
	127, // 38: pbds.ListReleasesReq.filter:type_name -> google.protobuf.Struct
	128, // 39: pbds.ListReleasesReq.page:type_name -> pbbase.BasePage
	134, // 40: pbds.ListReleasesResp.details:type_name -> pbrelease.Release
	127, // 41: pbds.ListReleasedCIsReq.filter:type_name -> google.protobuf.Struct
	128, // 42: pbds.ListReleasedCIsReq.page:type_name -> pbbase.BasePage
	135, // 43: pbds.ListReleasedCIsResp.details:type_name -> pbrci.ReleasedConfigItem
	136, // 44: pbds.CreateHookReq.attachment:type_name -> pbhook.HookAttachment
	137, // 45: pbds.CreateHookReq.spec:type_name -> pbhook.HookSpec
	54,  // 46: pbds.GetHookResp.spec:type_name -> pbds.GetHookInfoSpec
	136, // 47: pbds.GetHookResp.attachment:type_name -> pbhook.HookAttachment
	138, // 48: pbds.GetHookResp.revision:type_name -> pbbase.Revision
	107, // 49: pbds.GetHookInfoSpec.releases:type_name -> pbds.GetHookInfoSpec.Releases
	139, // 50: pbds.ListHooksResp.details:type_name -> pbhook.Hook
	140, // 51: pbds.ListHookTagResp.details:type_name -> pbhook.CountHookTags
	136, // 52: pbds.DeleteHookReq.attachment:type_name -> pbhook.HookAttachment
	141, // 53: pbds.CreateHookReleaseReq.attachment:type_name -> pbhr.HookReleaseAttachment
	142, // 54: pbds.CreateHookReleaseReq.spec:type_name -> pbhr.HookReleaseSpec
	143, // 55: pbds.ListHookReleasesResp.details:type_name -> pbhr.HookRelease
	141, // 56: pbds.UpdateHookReleaseReq.attachment:type_name -> pbhr.HookReleaseAttachment
	142, // 57: pbds.UpdateHookReleaseReq.spec:type_name -> pbhr.HookReleaseSpec
	144, // 58: pbds.ListHookReleasesReferencesResp.details:type_name -> pbhr.ListHookReleasesReferencesDetails
	145, // 59: pbds.CreateTemplateSpaceReq.attachment:type_name -> pbts.TemplateSpaceAttachment
	146, // 60: pbds.CreateTemplateSpaceReq.spec:type_name -> pbts.TemplateSpaceSpec
	147, // 61: pbds.ListTemplateSpacesResp.details:type_name -> pbts.TemplateSpace
	145, // 62: pbds.UpdateTemplateSpaceReq.attachment:type_name -> pbts.TemplateSpaceAttachment
	146, // 63: pbds.UpdateTemplateSpaceReq.spec:type_name -> pbts.TemplateSpaceSpec
	145, // 64: pbds.DeleteTemplateSpaceReq.attachment:type_name -> pbts.TemplateSpaceAttachment
	148, // 65: pbds.CreateTemplateReq.attachment:type_name -> pbtemplate.TemplateAttachment
	149, // 66: pbds.CreateTemplateReq.spec:type_name -> pbtemplate.TemplateSpec
	150, // 67: pbds.CreateTemplateReq.tr_spec:type_name -> pbtr.TemplateReleaseSpec
	151, // 68: pbds.ListTemplatesResp.details:type_name -> pbtemplate.Template
	148, // 69: pbds.UpdateTemplateReq.attachment:type_name -> pbtemplate.TemplateAttachment
	149, // 70: pbds.UpdateTemplateReq.spec:type_name -> pbtemplate.TemplateSpec
	148, // 71: pbds.DeleteTemplateReq.attachment:type_name -> pbtemplate.TemplateAttachment
	152, // 72: pbds.CreateTemplateReleaseReq.attachment:type_name -> pbtr.TemplateReleaseAttachment
	150, // 73: pbds.CreateTemplateReleaseReq.spec:type_name -> pbtr.TemplateReleaseSpec
	153, // 74: pbds.ListTemplateReleasesResp.details:type_name -> pbtr.TemplateRelease
	152, // 75: pbds.DeleteTemplateReleaseReq.attachment:type_name -> pbtr.TemplateReleaseAttachment
	154, // 76: pbds.CreateTemplateSetReq.attachment:type_name -> pbtset.TemplateSetAttachment
	155, // 77: pbds.CreateTemplateSetReq.spec:type_name -> pbtset.TemplateSetSpec
	156, // 78: pbds.ListTemplateSetsResp.details:type_name -> pbtset.TemplateSet
	154, // 79: pbds.UpdateTemplateSetReq.attachment:type_name -> pbtset.TemplateSetAttachment
	155, // 80: pbds.UpdateTemplateSetReq.spec:type_name -> pbtset.TemplateSetSpec
	154, // 81: pbds.DeleteTemplateSetReq.attachment:type_name -> pbtset.TemplateSetAttachment
	157, // 82: pbds.CreateGroupReq.attachment:type_name -> pbgroup.GroupAttachment
	158, // 83: pbds.CreateGroupReq.spec:type_name -> pbgroup.GroupSpec
	127, // 84: pbds.ListGroupsReq.filter:type_name -> google.protobuf.Struct
	128, // 85: pbds.ListGroupsReq.page:type_name -> pbbase.BasePage
	159, // 86: pbds.ListGroupsResp.details:type_name -> pbgroup.Group
	108, // 87: pbds.ListAppGroupsResp.details:type_name -> pbds.ListAppGroupsResp.ListAppGroupsData
	157, // 88: pbds.UpdateGroupReq.attachment:type_name -> pbgroup.GroupAttachment
	158, // 89: pbds.UpdateGroupReq.spec:type_name -> pbgroup.GroupSpec
	157, // 90: pbds.DeleteGroupReq.attachment:type_name -> pbgroup.GroupAttachment
	109, // 91: pbds.CountGroupsReleasedAppsResp.data:type_name -> pbds.CountGroupsReleasedAppsResp.CountGroupsReleasedAppsData
	110, // 92: pbds.ListGroupRleasesdAppsResp.details:type_name -> pbds.ListGroupRleasesdAppsResp.ListGroupReleasedAppsData
	127, // 93: pbds.ListInstancesReq.filter:type_name -> google.protobuf.Struct
	128, // 94: pbds.ListInstancesReq.page:type_name -> pbbase.BasePage
	104, // 95: pbds.ListInstancesResp.details:type_name -> pbds.InstanceResource
	121, // 96: pbds.BatchUpsertConfigItemsReq.ConfigItem.config_item_attachment:type_name -> pbci.ConfigItemAttachment
	122, // 97: pbds.BatchUpsertConfigItemsReq.ConfigItem.config_item_spec:type_name -> pbci.ConfigItemSpec
	123, // 98: pbds.BatchUpsertConfigItemsReq.ConfigItem.content_spec:type_name -> pbcontent.ContentSpec
	127, // 99: pbds.ListAppGroupsResp.ListAppGroupsData.old_selector:type_name -> google.protobuf.Struct
	127, // 100: pbds.ListAppGroupsResp.ListAppGroupsData.new_selector:type_name -> google.protobuf.Struct
	16,  // 101: pbds.Data.CreateApp:input_type -> pbds.CreateAppReq
	17,  // 102: pbds.Data.UpdateApp:input_type -> pbds.UpdateAppReq
	18,  // 103: pbds.Data.DeleteApp:input_type -> pbds.DeleteAppReq
	19,  // 104: pbds.Data.GetApp:input_type -> pbds.GetAppReq
	20,  // 105: pbds.Data.GetAppByID:input_type -> pbds.GetAppByIDReq
	21,  // 106: pbds.Data.GetAppByName:input_type -> pbds.GetAppByNameReq
	22,  // 107: pbds.Data.ListAppsRest:input_type -> pbds.ListAppsRestReq
	24,  // 108: pbds.Data.ListAppsByIDs:input_type -> pbds.ListAppsByIDsReq
	26,  // 109: pbds.Data.CreateConfigItem:input_type -> pbds.CreateConfigItemReq
	27,  // 110: pbds.Data.BatchUpsertConfigItems:input_type -> pbds.BatchUpsertConfigItemsReq
	28,  // 111: pbds.Data.UpdateConfigItem:input_type -> pbds.UpdateConfigItemReq
	29,  // 112: pbds.Data.DeleteConfigItem:input_type -> pbds.DeleteConfigItemReq
	30,  // 113: pbds.Data.GetConfigItem:input_type -> pbds.GetConfigItemReq
	31,  // 114: pbds.Data.ListConfigItems:input_type -> pbds.ListConfigItemsReq
	33,  // 115: pbds.Data.ListConfigItemCount:input_type -> pbds.ListConfigItemCountReq
	35,  // 116: pbds.Data.CreateConfigHook:input_type -> pbds.CreateConfigHookReq
	14,  // 117: pbds.Data.UpdateConfigHook:input_type -> pbds.UpdateConfigHookReq
	15,  // 118: pbds.Data.GetConfigHook:input_type -> pbds.GetConfigHookReq
	36,  // 119: pbds.Data.CreateContent:input_type -> pbds.CreateContentReq
	37,  // 120: pbds.Data.GetContent:input_type -> pbds.GetContentReq
	38,  // 121: pbds.Data.ListContents:input_type -> pbds.ListContentsReq
	40,  // 122: pbds.Data.CreateCommit:input_type -> pbds.CreateCommitReq
	41,  // 123: pbds.Data.GetLatestCommit:input_type -> pbds.GetLatestCommitReq
	42,  // 124: pbds.Data.ListCommits:input_type -> pbds.ListCommitsReq
	44,  // 125: pbds.Data.CreateRelease:input_type -> pbds.CreateReleaseReq
	45,  // 126: pbds.Data.ListReleases:input_type -> pbds.ListReleasesReq
	47,  // 127: pbds.Data.GetReleasedConfigItem:input_type -> pbds.GetReleasedCIReq
	48,  // 128: pbds.Data.ListReleasedConfigItems:input_type -> pbds.ListReleasedCIsReq
	50,  // 129: pbds.Data.CreateHook:input_type -> pbds.CreateHookReq
	55,  // 130: pbds.Data.ListHooks:input_type -> pbds.ListHooksReq
	58,  // 131: pbds.Data.DeleteHook:input_type -> pbds.DeleteHookReq
	51,  // 132: pbds.Data.ListHookTags:input_type -> pbds.ListHookTagReq
	52,  // 133: pbds.Data.GetHook:input_type -> pbds.GetHookReq
	59,  // 134: pbds.Data.CreateHookRelease:input_type -> pbds.CreateHookReleaseReq
	60,  // 135: pbds.Data.ListHookReleases:input_type -> pbds.ListHookReleasesReq
	62,  // 136: pbds.Data.GetHookReleaseByID:input_type -> pbds.GetHookReleaseByIdReq
	63,  // 137: pbds.Data.DeleteHookRelease:input_type -> pbds.DeleteHookReleaseReq
	64,  // 138: pbds.Data.PublishHookRelease:input_type -> pbds.PublishHookReleaseReq
	65,  // 139: pbds.Data.GetHookReleaseByPubState:input_type -> pbds.GetByPubStateReq
	66,  // 140: pbds.Data.UpdateHookRelease:input_type -> pbds.UpdateHookReleaseReq
	67,  // 141: pbds.Data.ListHookReleasesReferences:input_type -> pbds.ListHookReleasesReferencesReq
	69,  // 142: pbds.Data.CreateTemplateSpace:input_type -> pbds.CreateTemplateSpaceReq
	70,  // 143: pbds.Data.ListTemplateSpaces:input_type -> pbds.ListTemplateSpacesReq
	72,  // 144: pbds.Data.UpdateTemplateSpace:input_type -> pbds.UpdateTemplateSpaceReq
	73,  // 145: pbds.Data.DeleteTemplateSpace:input_type -> pbds.DeleteTemplateSpaceReq
	74,  // 146: pbds.Data.CreateTemplate:input_type -> pbds.CreateTemplateReq
	75,  // 147: pbds.Data.ListTemplates:input_type -> pbds.ListTemplatesReq
	77,  // 148: pbds.Data.UpdateTemplate:input_type -> pbds.UpdateTemplateReq
	78,  // 149: pbds.Data.DeleteTemplate:input_type -> pbds.DeleteTemplateReq
	79,  // 150: pbds.Data.CreateTemplateRelease:input_type -> pbds.CreateTemplateReleaseReq
	80,  // 151: pbds.Data.ListTemplateReleases:input_type -> pbds.ListTemplateReleasesReq
	82,  // 152: pbds.Data.DeleteTemplateRelease:input_type -> pbds.DeleteTemplateReleaseReq
	83,  // 153: pbds.Data.CreateTemplateSet:input_type -> pbds.CreateTemplateSetReq
	84,  // 154: pbds.Data.ListTemplateSets:input_type -> pbds.ListTemplateSetsReq
	86,  // 155: pbds.Data.UpdateTemplateSet:input_type -> pbds.UpdateTemplateSetReq
	87,  // 156: pbds.Data.DeleteTemplateSet:input_type -> pbds.DeleteTemplateSetReq
	88,  // 157: pbds.Data.CreateGroup:input_type -> pbds.CreateGroupReq
	89,  // 158: pbds.Data.ListGroups:input_type -> pbds.ListGroupsReq
	91,  // 159: pbds.Data.ListAppGroups:input_type -> pbds.ListAppGroupsReq
	93,  // 160: pbds.Data.UpdateGroup:input_type -> pbds.UpdateGroupReq
	94,  // 161: pbds.Data.DeleteGroup:input_type -> pbds.DeleteGroupReq
	95,  // 162: pbds.Data.CountGroupsReleasedApps:input_type -> pbds.CountGroupsReleasedAppsReq
	97,  // 163: pbds.Data.ListGroupRleasesdApps:input_type -> pbds.ListGroupRleasesdAppsReq
	99,  // 164: pbds.Data.Publish:input_type -> pbds.PublishReq
	100, // 165: pbds.Data.GenerateReleaseAndPublish:input_type -> pbds.GenerateReleaseAndPublishReq
	7,   // 166: pbds.Data.CreateCredential:input_type -> pbds.CreateCredentialReq
	8,   // 167: pbds.Data.ListCredentials:input_type -> pbds.ListCredentialReq
	11,  // 168: pbds.Data.DeleteCredential:input_type -> pbds.DeleteCredentialReq
	10,  // 169: pbds.Data.UpdateCredential:input_type -> pbds.UpdateCredentialReq
	4,   // 170: pbds.Data.ListCredentialScopes:input_type -> pbds.ListCredentialScopesReq
	0,   // 171: pbds.Data.UpdateCredentialScopes:input_type -> pbds.UpdateCredentialScopesReq
	102, // 172: pbds.Data.ListInstances:input_type -> pbds.ListInstancesReq
	105, // 173: pbds.Data.Ping:input_type -> pbds.PingMsg
	13,  // 174: pbds.Data.CreateApp:output_type -> pbds.CreateResp
	160, // 175: pbds.Data.UpdateApp:output_type -> pbbase.EmptyResp
	160, // 176: pbds.Data.DeleteApp:output_type -> pbbase.EmptyResp
	120, // 177: pbds.Data.GetApp:output_type -> pbapp.App
	120, // 178: pbds.Data.GetAppByID:output_type -> pbapp.App
	120, // 179: pbds.Data.GetAppByName:output_type -> pbapp.App
	23,  // 180: pbds.Data.ListAppsRest:output_type -> pbds.ListAppsResp
	25,  // 181: pbds.Data.ListAppsByIDs:output_type -> pbds.ListAppsByIDsResp
	13,  // 182: pbds.Data.CreateConfigItem:output_type -> pbds.CreateResp
	160, // 183: pbds.Data.BatchUpsertConfigItems:output_type -> pbbase.EmptyResp
	160, // 184: pbds.Data.UpdateConfigItem:output_type -> pbbase.EmptyResp
	160, // 185: pbds.Data.DeleteConfigItem:output_type -> pbbase.EmptyResp
	124, // 186: pbds.Data.GetConfigItem:output_type -> pbci.ConfigItem
	32,  // 187: pbds.Data.ListConfigItems:output_type -> pbds.ListConfigItemsResp
	34,  // 188: pbds.Data.ListConfigItemCount:output_type -> pbds.ListConfigItemCountResp
	13,  // 189: pbds.Data.CreateConfigHook:output_type -> pbds.CreateResp
	160, // 190: pbds.Data.UpdateConfigHook:output_type -> pbbase.EmptyResp
	161, // 191: pbds.Data.GetConfigHook:output_type -> pbch.ConfigHook
	13,  // 192: pbds.Data.CreateContent:output_type -> pbds.CreateResp
	129, // 193: pbds.Data.GetContent:output_type -> pbcontent.Content
	39,  // 194: pbds.Data.ListContents:output_type -> pbds.ListContentsResp
	13,  // 195: pbds.Data.CreateCommit:output_type -> pbds.CreateResp
	131, // 196: pbds.Data.GetLatestCommit:output_type -> pbcommit.Commit
	43,  // 197: pbds.Data.ListCommits:output_type -> pbds.ListCommitsResp
	13,  // 198: pbds.Data.CreateRelease:output_type -> pbds.CreateResp
	46,  // 199: pbds.Data.ListReleases:output_type -> pbds.ListReleasesResp
	135, // 200: pbds.Data.GetReleasedConfigItem:output_type -> pbrci.ReleasedConfigItem
	49,  // 201: pbds.Data.ListReleasedConfigItems:output_type -> pbds.ListReleasedCIsResp
	13,  // 202: pbds.Data.CreateHook:output_type -> pbds.CreateResp
	56,  // 203: pbds.Data.ListHooks:output_type -> pbds.ListHooksResp
	160, // 204: pbds.Data.DeleteHook:output_type -> pbbase.EmptyResp
	57,  // 205: pbds.Data.ListHookTags:output_type -> pbds.ListHookTagResp
	53,  // 206: pbds.Data.GetHook:output_type -> pbds.GetHookResp
	13,  // 207: pbds.Data.CreateHookRelease:output_type -> pbds.CreateResp
	61,  // 208: pbds.Data.ListHookReleases:output_type -> pbds.ListHookReleasesResp
	143, // 209: pbds.Data.GetHookReleaseByID:output_type -> pbhr.HookRelease
	160, // 210: pbds.Data.DeleteHookRelease:output_type -> pbbase.EmptyResp
	160, // 211: pbds.Data.PublishHookRelease:output_type -> pbbase.EmptyResp
	143, // 212: pbds.Data.GetHookReleaseByPubState:output_type -> pbhr.HookRelease
	160, // 213: pbds.Data.UpdateHookRelease:output_type -> pbbase.EmptyResp
	68,  // 214: pbds.Data.ListHookReleasesReferences:output_type -> pbds.ListHookReleasesReferencesResp
	13,  // 215: pbds.Data.CreateTemplateSpace:output_type -> pbds.CreateResp
	71,  // 216: pbds.Data.ListTemplateSpaces:output_type -> pbds.ListTemplateSpacesResp
	160, // 217: pbds.Data.UpdateTemplateSpace:output_type -> pbbase.EmptyResp
	160, // 218: pbds.Data.DeleteTemplateSpace:output_type -> pbbase.EmptyResp
	13,  // 219: pbds.Data.CreateTemplate:output_type -> pbds.CreateResp
	76,  // 220: pbds.Data.ListTemplates:output_type -> pbds.ListTemplatesResp
	160, // 221: pbds.Data.UpdateTemplate:output_type -> pbbase.EmptyResp
	160, // 222: pbds.Data.DeleteTemplate:output_type -> pbbase.EmptyResp
	13,  // 223: pbds.Data.CreateTemplateRelease:output_type -> pbds.CreateResp
	81,  // 224: pbds.Data.ListTemplateReleases:output_type -> pbds.ListTemplateReleasesResp
	160, // 225: pbds.Data.DeleteTemplateRelease:output_type -> pbbase.EmptyResp
	13,  // 226: pbds.Data.CreateTemplateSet:output_type -> pbds.CreateResp
	85,  // 227: pbds.Data.ListTemplateSets:output_type -> pbds.ListTemplateSetsResp
	160, // 228: pbds.Data.UpdateTemplateSet:output_type -> pbbase.EmptyResp
	160, // 229: pbds.Data.DeleteTemplateSet:output_type -> pbbase.EmptyResp
	13,  // 230: pbds.Data.CreateGroup:output_type -> pbds.CreateResp
	90,  // 231: pbds.Data.ListGroups:output_type -> pbds.ListGroupsResp
	92,  // 232: pbds.Data.ListAppGroups:output_type -> pbds.ListAppGroupsResp
	160, // 233: pbds.Data.UpdateGroup:output_type -> pbbase.EmptyResp
	160, // 234: pbds.Data.DeleteGroup:output_type -> pbbase.EmptyResp
	96,  // 235: pbds.Data.CountGroupsReleasedApps:output_type -> pbds.CountGroupsReleasedAppsResp
	98,  // 236: pbds.Data.ListGroupRleasesdApps:output_type -> pbds.ListGroupRleasesdAppsResp
	101, // 237: pbds.Data.Publish:output_type -> pbds.PublishResp
	101, // 238: pbds.Data.GenerateReleaseAndPublish:output_type -> pbds.PublishResp
	13,  // 239: pbds.Data.CreateCredential:output_type -> pbds.CreateResp
	9,   // 240: pbds.Data.ListCredentials:output_type -> pbds.ListCredentialResp
	160, // 241: pbds.Data.DeleteCredential:output_type -> pbbase.EmptyResp
	160, // 242: pbds.Data.UpdateCredential:output_type -> pbbase.EmptyResp
	5,   // 243: pbds.Data.ListCredentialScopes:output_type -> pbds.ListCredentialScopesResp
	1,   // 244: pbds.Data.UpdateCredentialScopes:output_type -> pbds.UpdateCredentialScopesResp
	103, // 245: pbds.Data.ListInstances:output_type -> pbds.ListInstancesResp
	105, // 246: pbds.Data.Ping:output_type -> pbds.PingMsg
	174, // [174:247] is the sub-list for method output_type
	101, // [101:174] is the sub-list for method input_type
	101, // [101:101] is the sub-list for extension type_name
	101, // [101:101] is the sub-list for extension extendee
	0,   // [0:101] is the sub-list for field type_name
}

func init() { file_data_service_proto_init() }
func file_data_service_proto_init() {
	if File_data_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_data_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCredentialScopesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCredentialScopesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCredentialScopesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCredentialScopesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCredentialScopesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCredentialScopesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCredentialScopeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCredentialReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCredentialReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCredentialResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCredentialReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCredentialReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableCredentialReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConfigHookReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigHookReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAppReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppByIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppByNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppsRestReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppsByIDsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppsByIDsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConfigItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchUpsertConfigItemsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConfigItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConfigItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConfigItemsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConfigItemsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConfigItemCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConfigItemCountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConfigHookReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContentsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContentsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCommitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestCommitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCommitsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCommitsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReleaseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReleasesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReleasesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReleasedCIReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReleasedCIsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReleasedCIsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHookReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHookTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHookReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHookResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHookInfoSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHooksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHooksResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHookTagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHookReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHookReleaseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHookReleasesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHookReleasesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHookReleaseByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHookReleaseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishHookReleaseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByPubStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHookReleaseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHookReleasesReferencesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHookReleasesReferencesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTemplateSpaceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTemplateSpacesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTemplateSpacesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTemplateSpaceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTemplateSpaceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTemplatesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTemplatesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTemplateReleaseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTemplateReleasesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTemplateReleasesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTemplateReleaseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTemplateSetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTemplateSetsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTemplateSetsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTemplateSetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTemplateSetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroupsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroupsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppGroupsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppGroupsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountGroupsReleasedAppsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountGroupsReleasedAppsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroupRleasesdAppsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroupRleasesdAppsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateReleaseAndPublishReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInstancesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInstancesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchUpsertConfigItemsReq_ConfigItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHookInfoSpec_Releases); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppGroupsResp_ListAppGroupsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountGroupsReleasedAppsResp_CountGroupsReleasedAppsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroupRleasesdAppsResp_ListGroupReleasedAppsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_data_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   111,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_data_service_proto_goTypes,
		DependencyIndexes: file_data_service_proto_depIdxs,
		MessageInfos:      file_data_service_proto_msgTypes,
	}.Build()
	File_data_service_proto = out.File
	file_data_service_proto_rawDesc = nil
	file_data_service_proto_goTypes = nil
	file_data_service_proto_depIdxs = nil
}
