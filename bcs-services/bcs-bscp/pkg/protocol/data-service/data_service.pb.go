// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.22.0
// source: data_service.proto

package pbds

import (
	app "bscp.io/pkg/protocol/core/app"
	base "bscp.io/pkg/protocol/core/base"
	commit "bscp.io/pkg/protocol/core/commit"
	config_item "bscp.io/pkg/protocol/core/config-item"
	content "bscp.io/pkg/protocol/core/content"
	group "bscp.io/pkg/protocol/core/group"
	group_category "bscp.io/pkg/protocol/core/group-category"
	hook "bscp.io/pkg/protocol/core/hook"
	instance "bscp.io/pkg/protocol/core/instance"
	release "bscp.io/pkg/protocol/core/release"
	released_ci "bscp.io/pkg/protocol/core/released-ci"
	strategy "bscp.io/pkg/protocol/core/strategy"
	strategy_set "bscp.io/pkg/protocol/core/strategy-set"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateResp) Reset() {
	*x = CreateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResp) ProtoMessage() {}

func (x *CreateResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResp.ProtoReflect.Descriptor instead.
func (*CreateResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateResp) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreateAppReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId uint32       `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Spec  *app.AppSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateAppReq) Reset() {
	*x = CreateAppReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppReq) ProtoMessage() {}

func (x *CreateAppReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppReq.ProtoReflect.Descriptor instead.
func (*CreateAppReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAppReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *CreateAppReq) GetSpec() *app.AppSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type UpdateAppReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BizId uint32       `protobuf:"varint,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Spec  *app.AppSpec `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *UpdateAppReq) Reset() {
	*x = UpdateAppReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppReq) ProtoMessage() {}

func (x *UpdateAppReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppReq.ProtoReflect.Descriptor instead.
func (*UpdateAppReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateAppReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAppReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *UpdateAppReq) GetSpec() *app.AppSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type DeleteAppReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BizId uint32 `protobuf:"varint,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
}

func (x *DeleteAppReq) Reset() {
	*x = DeleteAppReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAppReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppReq) ProtoMessage() {}

func (x *DeleteAppReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppReq.ProtoReflect.Descriptor instead.
func (*DeleteAppReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteAppReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteAppReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

type GetAppReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId uint32 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *GetAppReq) Reset() {
	*x = GetAppReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppReq) ProtoMessage() {}

func (x *GetAppReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppReq.ProtoReflect.Descriptor instead.
func (*GetAppReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetAppReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetAppReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type GetAppByIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId uint32 `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *GetAppByIDReq) Reset() {
	*x = GetAppByIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppByIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppByIDReq) ProtoMessage() {}

func (x *GetAppByIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppByIDReq.ProtoReflect.Descriptor instead.
func (*GetAppByIDReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetAppByIDReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type ListAppsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId  uint32           `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Filter *structpb.Struct `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Page   *base.BasePage   `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListAppsReq) Reset() {
	*x = ListAppsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppsReq) ProtoMessage() {}

func (x *ListAppsReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppsReq.ProtoReflect.Descriptor instead.
func (*ListAppsReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListAppsReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListAppsReq) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListAppsReq) GetPage() *base.BasePage {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListAppsRestReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId    string `protobuf:"bytes,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"` // 多个以逗号分割
	Start    uint32 `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	Limit    uint32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Operator string `protobuf:"bytes,4,opt,name=operator,proto3" json:"operator,omitempty"`
	Name     string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ListAppsRestReq) Reset() {
	*x = ListAppsRestReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppsRestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppsRestReq) ProtoMessage() {}

func (x *ListAppsRestReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppsRestReq.ProtoReflect.Descriptor instead.
func (*ListAppsRestReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListAppsRestReq) GetBizId() string {
	if x != nil {
		return x.BizId
	}
	return ""
}

func (x *ListAppsRestReq) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ListAppsRestReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListAppsRestReq) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *ListAppsRestReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListAppsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32     `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*app.App `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListAppsResp) Reset() {
	*x = ListAppsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppsResp) ProtoMessage() {}

func (x *ListAppsResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppsResp.ProtoReflect.Descriptor instead.
func (*ListAppsResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListAppsResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListAppsResp) GetDetails() []*app.App {
	if x != nil {
		return x.Details
	}
	return nil
}

type CreateConfigItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachment *config_item.ConfigItemAttachment `protobuf:"bytes,1,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *config_item.ConfigItemSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateConfigItemReq) Reset() {
	*x = CreateConfigItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConfigItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConfigItemReq) ProtoMessage() {}

func (x *CreateConfigItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConfigItemReq.ProtoReflect.Descriptor instead.
func (*CreateConfigItemReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{9}
}

func (x *CreateConfigItemReq) GetAttachment() *config_item.ConfigItemAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *CreateConfigItemReq) GetSpec() *config_item.ConfigItemSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type UpdateConfigItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *config_item.ConfigItemAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *config_item.ConfigItemSpec       `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *UpdateConfigItemReq) Reset() {
	*x = UpdateConfigItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConfigItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfigItemReq) ProtoMessage() {}

func (x *UpdateConfigItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfigItemReq.ProtoReflect.Descriptor instead.
func (*UpdateConfigItemReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateConfigItemReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateConfigItemReq) GetAttachment() *config_item.ConfigItemAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *UpdateConfigItemReq) GetSpec() *config_item.ConfigItemSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type DeleteConfigItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *config_item.ConfigItemAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
}

func (x *DeleteConfigItemReq) Reset() {
	*x = DeleteConfigItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConfigItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConfigItemReq) ProtoMessage() {}

func (x *DeleteConfigItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConfigItemReq.ProtoReflect.Descriptor instead.
func (*DeleteConfigItemReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteConfigItemReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteConfigItemReq) GetAttachment() *config_item.ConfigItemAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type GetConfigItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BizId uint32 `protobuf:"varint,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId uint32 `protobuf:"varint,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *GetConfigItemReq) Reset() {
	*x = GetConfigItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigItemReq) ProtoMessage() {}

func (x *GetConfigItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigItemReq.ProtoReflect.Descriptor instead.
func (*GetConfigItemReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetConfigItemReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetConfigItemReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetConfigItemReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type ListConfigItemsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId     uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId     uint32 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	ReleaseId uint32 `protobuf:"varint,3,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
	Start     uint32 `protobuf:"varint,4,opt,name=start,proto3" json:"start,omitempty"`
	Limit     uint32 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListConfigItemsReq) Reset() {
	*x = ListConfigItemsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConfigItemsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigItemsReq) ProtoMessage() {}

func (x *ListConfigItemsReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigItemsReq.ProtoReflect.Descriptor instead.
func (*ListConfigItemsReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{13}
}

func (x *ListConfigItemsReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListConfigItemsReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ListConfigItemsReq) GetReleaseId() uint32 {
	if x != nil {
		return x.ReleaseId
	}
	return 0
}

func (x *ListConfigItemsReq) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ListConfigItemsReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListConfigItemsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32                    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*config_item.ConfigItem `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListConfigItemsResp) Reset() {
	*x = ListConfigItemsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConfigItemsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigItemsResp) ProtoMessage() {}

func (x *ListConfigItemsResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigItemsResp.ProtoReflect.Descriptor instead.
func (*ListConfigItemsResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{14}
}

func (x *ListConfigItemsResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListConfigItemsResp) GetDetails() []*config_item.ConfigItem {
	if x != nil {
		return x.Details
	}
	return nil
}

type ListConfigItemCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId uint32   `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId []uint32 `protobuf:"varint,2,rep,packed,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *ListConfigItemCountReq) Reset() {
	*x = ListConfigItemCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConfigItemCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigItemCountReq) ProtoMessage() {}

func (x *ListConfigItemCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigItemCountReq.ProtoReflect.Descriptor instead.
func (*ListConfigItemCountReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{15}
}

func (x *ListConfigItemCountReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListConfigItemCountReq) GetAppId() []uint32 {
	if x != nil {
		return x.AppId
	}
	return nil
}

type ListConfigItemCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details []*config_item.ListConfigItemCounts `protobuf:"bytes,1,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListConfigItemCountResp) Reset() {
	*x = ListConfigItemCountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConfigItemCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigItemCountResp) ProtoMessage() {}

func (x *ListConfigItemCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigItemCountResp.ProtoReflect.Descriptor instead.
func (*ListConfigItemCountResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{16}
}

func (x *ListConfigItemCountResp) GetDetails() []*config_item.ListConfigItemCounts {
	if x != nil {
		return x.Details
	}
	return nil
}

type CreateContentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachment *content.ContentAttachment `protobuf:"bytes,1,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *content.ContentSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateContentReq) Reset() {
	*x = CreateContentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContentReq) ProtoMessage() {}

func (x *CreateContentReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContentReq.ProtoReflect.Descriptor instead.
func (*CreateContentReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{17}
}

func (x *CreateContentReq) GetAttachment() *content.ContentAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *CreateContentReq) GetSpec() *content.ContentSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type GetContentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BizId uint32 `protobuf:"varint,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId uint32 `protobuf:"varint,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *GetContentReq) Reset() {
	*x = GetContentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentReq) ProtoMessage() {}

func (x *GetContentReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentReq.ProtoReflect.Descriptor instead.
func (*GetContentReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetContentReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetContentReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetContentReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type ListContentsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId  uint32           `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId  uint32           `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Filter *structpb.Struct `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Page   *base.BasePage   `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListContentsReq) Reset() {
	*x = ListContentsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContentsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContentsReq) ProtoMessage() {}

func (x *ListContentsReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContentsReq.ProtoReflect.Descriptor instead.
func (*ListContentsReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{19}
}

func (x *ListContentsReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListContentsReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ListContentsReq) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListContentsReq) GetPage() *base.BasePage {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListContentsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32             `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*content.Content `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListContentsResp) Reset() {
	*x = ListContentsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContentsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContentsResp) ProtoMessage() {}

func (x *ListContentsResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContentsResp.ProtoReflect.Descriptor instead.
func (*ListContentsResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{20}
}

func (x *ListContentsResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListContentsResp) GetDetails() []*content.Content {
	if x != nil {
		return x.Details
	}
	return nil
}

type CreateCommitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachment *commit.CommitAttachment `protobuf:"bytes,1,opt,name=attachment,proto3" json:"attachment,omitempty"`
	ContentId  uint32                   `protobuf:"varint,2,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`
	Memo       string                   `protobuf:"bytes,3,opt,name=memo,proto3" json:"memo,omitempty"`
}

func (x *CreateCommitReq) Reset() {
	*x = CreateCommitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCommitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommitReq) ProtoMessage() {}

func (x *CreateCommitReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommitReq.ProtoReflect.Descriptor instead.
func (*CreateCommitReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{21}
}

func (x *CreateCommitReq) GetAttachment() *commit.CommitAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *CreateCommitReq) GetContentId() uint32 {
	if x != nil {
		return x.ContentId
	}
	return 0
}

func (x *CreateCommitReq) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

type GetLatestCommitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId        uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId        uint32 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	ConfigItemId uint32 `protobuf:"varint,3,opt,name=config_item_id,json=configItemId,proto3" json:"config_item_id,omitempty"`
}

func (x *GetLatestCommitReq) Reset() {
	*x = GetLatestCommitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestCommitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestCommitReq) ProtoMessage() {}

func (x *GetLatestCommitReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestCommitReq.ProtoReflect.Descriptor instead.
func (*GetLatestCommitReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{22}
}

func (x *GetLatestCommitReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetLatestCommitReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *GetLatestCommitReq) GetConfigItemId() uint32 {
	if x != nil {
		return x.ConfigItemId
	}
	return 0
}

type ListCommitsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId  uint32           `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId  uint32           `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Filter *structpb.Struct `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Page   *base.BasePage   `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListCommitsReq) Reset() {
	*x = ListCommitsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCommitsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommitsReq) ProtoMessage() {}

func (x *ListCommitsReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommitsReq.ProtoReflect.Descriptor instead.
func (*ListCommitsReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{23}
}

func (x *ListCommitsReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListCommitsReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ListCommitsReq) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListCommitsReq) GetPage() *base.BasePage {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListCommitsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32           `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*commit.Commit `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListCommitsResp) Reset() {
	*x = ListCommitsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCommitsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommitsResp) ProtoMessage() {}

func (x *ListCommitsResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommitsResp.ProtoReflect.Descriptor instead.
func (*ListCommitsResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{24}
}

func (x *ListCommitsResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListCommitsResp) GetDetails() []*commit.Commit {
	if x != nil {
		return x.Details
	}
	return nil
}

type CreateReleaseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachment *release.ReleaseAttachment `protobuf:"bytes,1,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *release.ReleaseSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateReleaseReq) Reset() {
	*x = CreateReleaseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReleaseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReleaseReq) ProtoMessage() {}

func (x *CreateReleaseReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReleaseReq.ProtoReflect.Descriptor instead.
func (*CreateReleaseReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{25}
}

func (x *CreateReleaseReq) GetAttachment() *release.ReleaseAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *CreateReleaseReq) GetSpec() *release.ReleaseSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type ListReleasesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId  uint32           `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId  uint32           `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Filter *structpb.Struct `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Page   *base.BasePage   `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListReleasesReq) Reset() {
	*x = ListReleasesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReleasesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReleasesReq) ProtoMessage() {}

func (x *ListReleasesReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReleasesReq.ProtoReflect.Descriptor instead.
func (*ListReleasesReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{26}
}

func (x *ListReleasesReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListReleasesReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ListReleasesReq) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListReleasesReq) GetPage() *base.BasePage {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListReleasesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32             `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*release.Release `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListReleasesResp) Reset() {
	*x = ListReleasesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReleasesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReleasesResp) ProtoMessage() {}

func (x *ListReleasesResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReleasesResp.ProtoReflect.Descriptor instead.
func (*ListReleasesResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{27}
}

func (x *ListReleasesResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListReleasesResp) GetDetails() []*release.Release {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetReleasedCIReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId        uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId        uint32 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	ConfigItemId uint32 `protobuf:"varint,3,opt,name=config_item_id,json=configItemId,proto3" json:"config_item_id,omitempty"`
	ReleaseId    uint32 `protobuf:"varint,4,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
}

func (x *GetReleasedCIReq) Reset() {
	*x = GetReleasedCIReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReleasedCIReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReleasedCIReq) ProtoMessage() {}

func (x *GetReleasedCIReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReleasedCIReq.ProtoReflect.Descriptor instead.
func (*GetReleasedCIReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{28}
}

func (x *GetReleasedCIReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetReleasedCIReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *GetReleasedCIReq) GetConfigItemId() uint32 {
	if x != nil {
		return x.ConfigItemId
	}
	return 0
}

func (x *GetReleasedCIReq) GetReleaseId() uint32 {
	if x != nil {
		return x.ReleaseId
	}
	return 0
}

type ListReleasedCIsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId  uint32           `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Filter *structpb.Struct `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Page   *base.BasePage   `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListReleasedCIsReq) Reset() {
	*x = ListReleasedCIsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReleasedCIsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReleasedCIsReq) ProtoMessage() {}

func (x *ListReleasedCIsReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReleasedCIsReq.ProtoReflect.Descriptor instead.
func (*ListReleasedCIsReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{29}
}

func (x *ListReleasedCIsReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListReleasedCIsReq) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListReleasedCIsReq) GetPage() *base.BasePage {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListReleasedCIsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32                            `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*released_ci.ReleasedConfigItem `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListReleasedCIsResp) Reset() {
	*x = ListReleasedCIsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReleasedCIsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReleasedCIsResp) ProtoMessage() {}

func (x *ListReleasedCIsResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReleasedCIsResp.ProtoReflect.Descriptor instead.
func (*ListReleasedCIsResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{30}
}

func (x *ListReleasedCIsResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListReleasedCIsResp) GetDetails() []*released_ci.ReleasedConfigItem {
	if x != nil {
		return x.Details
	}
	return nil
}

type CreateStrategySetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachment *strategy_set.StrategySetAttachment `protobuf:"bytes,1,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *strategy_set.StrategySetSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateStrategySetReq) Reset() {
	*x = CreateStrategySetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStrategySetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStrategySetReq) ProtoMessage() {}

func (x *CreateStrategySetReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStrategySetReq.ProtoReflect.Descriptor instead.
func (*CreateStrategySetReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{31}
}

func (x *CreateStrategySetReq) GetAttachment() *strategy_set.StrategySetAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *CreateStrategySetReq) GetSpec() *strategy_set.StrategySetSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type ListStrategySetsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId  uint32           `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId  uint32           `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Filter *structpb.Struct `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Page   *base.BasePage   `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListStrategySetsReq) Reset() {
	*x = ListStrategySetsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStrategySetsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStrategySetsReq) ProtoMessage() {}

func (x *ListStrategySetsReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStrategySetsReq.ProtoReflect.Descriptor instead.
func (*ListStrategySetsReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{32}
}

func (x *ListStrategySetsReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListStrategySetsReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ListStrategySetsReq) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListStrategySetsReq) GetPage() *base.BasePage {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListStrategySetsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32                      `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*strategy_set.StrategySet `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListStrategySetsResp) Reset() {
	*x = ListStrategySetsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStrategySetsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStrategySetsResp) ProtoMessage() {}

func (x *ListStrategySetsResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStrategySetsResp.ProtoReflect.Descriptor instead.
func (*ListStrategySetsResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{33}
}

func (x *ListStrategySetsResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListStrategySetsResp) GetDetails() []*strategy_set.StrategySet {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateStrategySetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *strategy_set.StrategySetAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
	State      *strategy_set.StrategySetState      `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Spec       *strategy_set.StrategySetSpec       `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *UpdateStrategySetReq) Reset() {
	*x = UpdateStrategySetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStrategySetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStrategySetReq) ProtoMessage() {}

func (x *UpdateStrategySetReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStrategySetReq.ProtoReflect.Descriptor instead.
func (*UpdateStrategySetReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateStrategySetReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateStrategySetReq) GetAttachment() *strategy_set.StrategySetAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *UpdateStrategySetReq) GetState() *strategy_set.StrategySetState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *UpdateStrategySetReq) GetSpec() *strategy_set.StrategySetSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type DeleteStrategySetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *strategy_set.StrategySetAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
}

func (x *DeleteStrategySetReq) Reset() {
	*x = DeleteStrategySetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStrategySetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStrategySetReq) ProtoMessage() {}

func (x *DeleteStrategySetReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStrategySetReq.ProtoReflect.Descriptor instead.
func (*DeleteStrategySetReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{35}
}

func (x *DeleteStrategySetReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteStrategySetReq) GetAttachment() *strategy_set.StrategySetAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type CreateStrategyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachment *strategy.StrategyAttachment `protobuf:"bytes,1,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *strategy.StrategySpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateStrategyReq) Reset() {
	*x = CreateStrategyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStrategyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStrategyReq) ProtoMessage() {}

func (x *CreateStrategyReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStrategyReq.ProtoReflect.Descriptor instead.
func (*CreateStrategyReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{36}
}

func (x *CreateStrategyReq) GetAttachment() *strategy.StrategyAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *CreateStrategyReq) GetSpec() *strategy.StrategySpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type ListStrategiesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId  uint32           `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId  uint32           `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Filter *structpb.Struct `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Page   *base.BasePage   `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListStrategiesReq) Reset() {
	*x = ListStrategiesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStrategiesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStrategiesReq) ProtoMessage() {}

func (x *ListStrategiesReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStrategiesReq.ProtoReflect.Descriptor instead.
func (*ListStrategiesReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{37}
}

func (x *ListStrategiesReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListStrategiesReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ListStrategiesReq) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListStrategiesReq) GetPage() *base.BasePage {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListStrategiesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32               `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*strategy.Strategy `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListStrategiesResp) Reset() {
	*x = ListStrategiesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStrategiesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStrategiesResp) ProtoMessage() {}

func (x *ListStrategiesResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStrategiesResp.ProtoReflect.Descriptor instead.
func (*ListStrategiesResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{38}
}

func (x *ListStrategiesResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListStrategiesResp) GetDetails() []*strategy.Strategy {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateStrategyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *strategy.StrategyAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Status     *strategy.StrategyState      `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Spec       *strategy.StrategySpec       `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *UpdateStrategyReq) Reset() {
	*x = UpdateStrategyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStrategyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStrategyReq) ProtoMessage() {}

func (x *UpdateStrategyReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStrategyReq.ProtoReflect.Descriptor instead.
func (*UpdateStrategyReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateStrategyReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateStrategyReq) GetAttachment() *strategy.StrategyAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *UpdateStrategyReq) GetStatus() *strategy.StrategyState {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *UpdateStrategyReq) GetSpec() *strategy.StrategySpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type DeleteStrategyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *strategy.StrategyAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
}

func (x *DeleteStrategyReq) Reset() {
	*x = DeleteStrategyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStrategyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStrategyReq) ProtoMessage() {}

func (x *DeleteStrategyReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStrategyReq.ProtoReflect.Descriptor instead.
func (*DeleteStrategyReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{40}
}

func (x *DeleteStrategyReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteStrategyReq) GetAttachment() *strategy.StrategyAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type CreateHookReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachment *hook.HookAttachment `protobuf:"bytes,1,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *hook.HookSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateHookReq) Reset() {
	*x = CreateHookReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHookReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHookReq) ProtoMessage() {}

func (x *CreateHookReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHookReq.ProtoReflect.Descriptor instead.
func (*CreateHookReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{41}
}

func (x *CreateHookReq) GetAttachment() *hook.HookAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *CreateHookReq) GetSpec() *hook.HookSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type ListHooksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId  uint32           `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId  uint32           `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Filter *structpb.Struct `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Page   *base.BasePage   `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListHooksReq) Reset() {
	*x = ListHooksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHooksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHooksReq) ProtoMessage() {}

func (x *ListHooksReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHooksReq.ProtoReflect.Descriptor instead.
func (*ListHooksReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{42}
}

func (x *ListHooksReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListHooksReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ListHooksReq) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListHooksReq) GetPage() *base.BasePage {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListHooksResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32       `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*hook.Hook `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListHooksResp) Reset() {
	*x = ListHooksResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHooksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHooksResp) ProtoMessage() {}

func (x *ListHooksResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHooksResp.ProtoReflect.Descriptor instead.
func (*ListHooksResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{43}
}

func (x *ListHooksResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListHooksResp) GetDetails() []*hook.Hook {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateHookReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *hook.HookAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *hook.HookSpec       `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *UpdateHookReq) Reset() {
	*x = UpdateHookReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHookReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHookReq) ProtoMessage() {}

func (x *UpdateHookReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHookReq.ProtoReflect.Descriptor instead.
func (*UpdateHookReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{44}
}

func (x *UpdateHookReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateHookReq) GetAttachment() *hook.HookAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *UpdateHookReq) GetSpec() *hook.HookSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type DeleteHookReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *hook.HookAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
}

func (x *DeleteHookReq) Reset() {
	*x = DeleteHookReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHookReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHookReq) ProtoMessage() {}

func (x *DeleteHookReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHookReq.ProtoReflect.Descriptor instead.
func (*DeleteHookReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{45}
}

func (x *DeleteHookReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteHookReq) GetAttachment() *hook.HookAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type CreateGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachment *group.GroupAttachment `protobuf:"bytes,1,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *group.GroupSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateGroupReq) Reset() {
	*x = CreateGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupReq) ProtoMessage() {}

func (x *CreateGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupReq.ProtoReflect.Descriptor instead.
func (*CreateGroupReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{46}
}

func (x *CreateGroupReq) GetAttachment() *group.GroupAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *CreateGroupReq) GetSpec() *group.GroupSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type ListGroupsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId  uint32           `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId  uint32           `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Filter *structpb.Struct `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Page   *base.BasePage   `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListGroupsReq) Reset() {
	*x = ListGroupsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupsReq) ProtoMessage() {}

func (x *ListGroupsReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupsReq.ProtoReflect.Descriptor instead.
func (*ListGroupsReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{47}
}

func (x *ListGroupsReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListGroupsReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ListGroupsReq) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListGroupsReq) GetPage() *base.BasePage {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListGroupsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32         `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*group.Group `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListGroupsResp) Reset() {
	*x = ListGroupsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupsResp) ProtoMessage() {}

func (x *ListGroupsResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupsResp.ProtoReflect.Descriptor instead.
func (*ListGroupsResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{48}
}

func (x *ListGroupsResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListGroupsResp) GetDetails() []*group.Group {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *group.GroupAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *group.GroupSpec       `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *UpdateGroupReq) Reset() {
	*x = UpdateGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupReq) ProtoMessage() {}

func (x *UpdateGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupReq.ProtoReflect.Descriptor instead.
func (*UpdateGroupReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{49}
}

func (x *UpdateGroupReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateGroupReq) GetAttachment() *group.GroupAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *UpdateGroupReq) GetSpec() *group.GroupSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type DeleteGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *group.GroupAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
}

func (x *DeleteGroupReq) Reset() {
	*x = DeleteGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupReq) ProtoMessage() {}

func (x *DeleteGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupReq.ProtoReflect.Descriptor instead.
func (*DeleteGroupReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{50}
}

func (x *DeleteGroupReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteGroupReq) GetAttachment() *group.GroupAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type CreateGroupCategoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachment *group_category.GroupCategoryAttachment `protobuf:"bytes,1,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *group_category.GroupCategorySpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateGroupCategoryReq) Reset() {
	*x = CreateGroupCategoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupCategoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupCategoryReq) ProtoMessage() {}

func (x *CreateGroupCategoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupCategoryReq.ProtoReflect.Descriptor instead.
func (*CreateGroupCategoryReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{51}
}

func (x *CreateGroupCategoryReq) GetAttachment() *group_category.GroupCategoryAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *CreateGroupCategoryReq) GetSpec() *group_category.GroupCategorySpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type ListGroupCategoriesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId  uint32           `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId  uint32           `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Filter *structpb.Struct `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Page   *base.BasePage   `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListGroupCategoriesReq) Reset() {
	*x = ListGroupCategoriesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupCategoriesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupCategoriesReq) ProtoMessage() {}

func (x *ListGroupCategoriesReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupCategoriesReq.ProtoReflect.Descriptor instead.
func (*ListGroupCategoriesReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{52}
}

func (x *ListGroupCategoriesReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListGroupCategoriesReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ListGroupCategoriesReq) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListGroupCategoriesReq) GetPage() *base.BasePage {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListGroupCategoriesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32                          `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*group_category.GroupCategory `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListGroupCategoriesResp) Reset() {
	*x = ListGroupCategoriesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupCategoriesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupCategoriesResp) ProtoMessage() {}

func (x *ListGroupCategoriesResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupCategoriesResp.ProtoReflect.Descriptor instead.
func (*ListGroupCategoriesResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{53}
}

func (x *ListGroupCategoriesResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListGroupCategoriesResp) GetDetails() []*group_category.GroupCategory {
	if x != nil {
		return x.Details
	}
	return nil
}

type DeleteGroupCategoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *group_category.GroupCategoryAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
}

func (x *DeleteGroupCategoryReq) Reset() {
	*x = DeleteGroupCategoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupCategoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupCategoryReq) ProtoMessage() {}

func (x *DeleteGroupCategoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupCategoryReq.ProtoReflect.Descriptor instead.
func (*DeleteGroupCategoryReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{54}
}

func (x *DeleteGroupCategoryReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteGroupCategoryReq) GetAttachment() *group_category.GroupCategoryAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type PublishReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId     uint32   `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId     uint32   `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	ReleaseId uint32   `protobuf:"varint,3,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
	Memo      string   `protobuf:"bytes,4,opt,name=memo,proto3" json:"memo,omitempty"`
	All       bool     `protobuf:"varint,5,opt,name=all,proto3" json:"all,omitempty"`
	Groups    []uint32 `protobuf:"varint,6,rep,packed,name=groups,proto3" json:"groups,omitempty"`
}

func (x *PublishReq) Reset() {
	*x = PublishReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishReq) ProtoMessage() {}

func (x *PublishReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishReq.ProtoReflect.Descriptor instead.
func (*PublishReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{55}
}

func (x *PublishReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *PublishReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *PublishReq) GetReleaseId() uint32 {
	if x != nil {
		return x.ReleaseId
	}
	return 0
}

func (x *PublishReq) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *PublishReq) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

func (x *PublishReq) GetGroups() []uint32 {
	if x != nil {
		return x.Groups
	}
	return nil
}

type PublishResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublishedStrategyHistoryId uint32 `protobuf:"varint,1,opt,name=published_strategy_history_id,json=publishedStrategyHistoryId,proto3" json:"published_strategy_history_id,omitempty"`
}

func (x *PublishResp) Reset() {
	*x = PublishResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishResp) ProtoMessage() {}

func (x *PublishResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishResp.ProtoReflect.Descriptor instead.
func (*PublishResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{56}
}

func (x *PublishResp) GetPublishedStrategyHistoryId() uint32 {
	if x != nil {
		return x.PublishedStrategyHistoryId
	}
	return 0
}

type FinishPublishReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId      uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId      uint32 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	StrategyId uint32 `protobuf:"varint,3,opt,name=strategy_id,json=strategyId,proto3" json:"strategy_id,omitempty"`
}

func (x *FinishPublishReq) Reset() {
	*x = FinishPublishReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishPublishReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishPublishReq) ProtoMessage() {}

func (x *FinishPublishReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishPublishReq.ProtoReflect.Descriptor instead.
func (*FinishPublishReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{57}
}

func (x *FinishPublishReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *FinishPublishReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *FinishPublishReq) GetStrategyId() uint32 {
	if x != nil {
		return x.StrategyId
	}
	return 0
}

type ListPubStrategyHistoriesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId  uint32           `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId  uint32           `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Filter *structpb.Struct `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Page   *base.BasePage   `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListPubStrategyHistoriesReq) Reset() {
	*x = ListPubStrategyHistoriesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPubStrategyHistoriesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPubStrategyHistoriesReq) ProtoMessage() {}

func (x *ListPubStrategyHistoriesReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPubStrategyHistoriesReq.ProtoReflect.Descriptor instead.
func (*ListPubStrategyHistoriesReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{58}
}

func (x *ListPubStrategyHistoriesReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListPubStrategyHistoriesReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ListPubStrategyHistoriesReq) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListPubStrategyHistoriesReq) GetPage() *base.BasePage {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListPubStrategyHistoriesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32                               `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*strategy.PublishedStrategyHistory `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListPubStrategyHistoriesResp) Reset() {
	*x = ListPubStrategyHistoriesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPubStrategyHistoriesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPubStrategyHistoriesResp) ProtoMessage() {}

func (x *ListPubStrategyHistoriesResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPubStrategyHistoriesResp.ProtoReflect.Descriptor instead.
func (*ListPubStrategyHistoriesResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{59}
}

func (x *ListPubStrategyHistoriesResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListPubStrategyHistoriesResp) GetDetails() []*strategy.PublishedStrategyHistory {
	if x != nil {
		return x.Details
	}
	return nil
}

type CreateCRInstanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachment *release.ReleaseAttachment     `protobuf:"bytes,1,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Spec       *instance.ReleasedInstanceSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateCRInstanceReq) Reset() {
	*x = CreateCRInstanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCRInstanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCRInstanceReq) ProtoMessage() {}

func (x *CreateCRInstanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCRInstanceReq.ProtoReflect.Descriptor instead.
func (*CreateCRInstanceReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{60}
}

func (x *CreateCRInstanceReq) GetAttachment() *release.ReleaseAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *CreateCRInstanceReq) GetSpec() *instance.ReleasedInstanceSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type ListCRInstancesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId  uint32           `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Filter *structpb.Struct `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Page   *base.BasePage   `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListCRInstancesReq) Reset() {
	*x = ListCRInstancesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCRInstancesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCRInstancesReq) ProtoMessage() {}

func (x *ListCRInstancesReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCRInstancesReq.ProtoReflect.Descriptor instead.
func (*ListCRInstancesReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{61}
}

func (x *ListCRInstancesReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListCRInstancesReq) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListCRInstancesReq) GetPage() *base.BasePage {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListCRInstancesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32                              `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*instance.CurrentReleasedInstance `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListCRInstancesResp) Reset() {
	*x = ListCRInstancesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCRInstancesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCRInstancesResp) ProtoMessage() {}

func (x *ListCRInstancesResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCRInstancesResp.ProtoReflect.Descriptor instead.
func (*ListCRInstancesResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{62}
}

func (x *ListCRInstancesResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListCRInstancesResp) GetDetails() []*instance.CurrentReleasedInstance {
	if x != nil {
		return x.Details
	}
	return nil
}

type DeleteCRInstanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachment *release.ReleaseAttachment `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
}

func (x *DeleteCRInstanceReq) Reset() {
	*x = DeleteCRInstanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCRInstanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCRInstanceReq) ProtoMessage() {}

func (x *DeleteCRInstanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCRInstanceReq.ProtoReflect.Descriptor instead.
func (*DeleteCRInstanceReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{63}
}

func (x *DeleteCRInstanceReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteCRInstanceReq) GetAttachment() *release.ReleaseAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type ListInstancesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceType string           `protobuf:"bytes,1,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	BizId        uint32           `protobuf:"varint,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Filter       *structpb.Struct `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Page         *base.BasePage   `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListInstancesReq) Reset() {
	*x = ListInstancesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInstancesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstancesReq) ProtoMessage() {}

func (x *ListInstancesReq) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInstancesReq.ProtoReflect.Descriptor instead.
func (*ListInstancesReq) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{64}
}

func (x *ListInstancesReq) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *ListInstancesReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListInstancesReq) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListInstancesReq) GetPage() *base.BasePage {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListInstancesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   uint32              `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Details []*InstanceResource `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ListInstancesResp) Reset() {
	*x = ListInstancesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInstancesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstancesResp) ProtoMessage() {}

func (x *ListInstancesResp) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInstancesResp.ProtoReflect.Descriptor instead.
func (*ListInstancesResp) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{65}
}

func (x *ListInstancesResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListInstancesResp) GetDetails() []*InstanceResource {
	if x != nil {
		return x.Details
	}
	return nil
}

type InstanceResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *InstanceResource) Reset() {
	*x = InstanceResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceResource) ProtoMessage() {}

func (x *InstanceResource) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceResource.ProtoReflect.Descriptor instead.
func (*InstanceResource) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{66}
}

func (x *InstanceResource) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InstanceResource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PingMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PingMsg) Reset() {
	*x = PingMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_service_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingMsg) ProtoMessage() {}

func (x *PingMsg) ProtoReflect() protoreflect.Message {
	mi := &file_data_service_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingMsg.ProtoReflect.Descriptor instead.
func (*PingMsg) Descriptor() ([]byte, []int) {
	return file_data_service_proto_rawDescGZIP(), []int{67}
}

func (x *PingMsg) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_data_service_proto protoreflect.FileDescriptor

var file_data_service_proto_rawDesc = []byte{
	0x0a, 0x12, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x70, 0x62, 0x64, 0x73, 0x1a, 0x29, 0x62, 0x73, 0x63, 0x70,
	0x2e, 0x69, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x62, 0x73, 0x63, 0x70, 0x2e, 0x69, 0x6f, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x61, 0x70, 0x70, 0x2f, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37,
	0x62, 0x73, 0x63, 0x70, 0x2e, 0x69, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2d, 0x69, 0x74, 0x65, 0x6d, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x62, 0x73, 0x63, 0x70, 0x2e, 0x69, 0x6f,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x62, 0x73, 0x63, 0x70, 0x2e, 0x69,
	0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x62, 0x73, 0x63, 0x70, 0x2e, 0x69, 0x6f,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2f, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x62, 0x73, 0x63, 0x70, 0x2e, 0x69,
	0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x2d, 0x63, 0x69, 0x2f,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x63, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x39, 0x62, 0x73, 0x63, 0x70, 0x2e, 0x69, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x2d, 0x73, 0x65, 0x74, 0x2f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x5f, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x62, 0x73,
	0x63, 0x70, 0x2e, 0x69, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x2f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x29, 0x62, 0x73, 0x63, 0x70, 0x2e, 0x69, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x68, 0x6f, 0x6f, 0x6b, 0x2f,
	0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x62, 0x73, 0x63, 0x70,
	0x2e, 0x69, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3d, 0x62, 0x73, 0x63, 0x70, 0x2e, 0x69, 0x6f,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x62, 0x73, 0x63, 0x70, 0x2e, 0x69, 0x6f, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1c, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x49, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x61, 0x70, 0x70,
	0x2e, 0x41, 0x70, 0x70, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x59,
	0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x61, 0x70, 0x70, 0x2e, 0x41, 0x70, 0x70, 0x53,
	0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x35, 0x0a, 0x0c, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64,
	0x22, 0x39, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a,
	0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62,
	0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x26, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x22, 0x7b, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x22, 0x84, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4a, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x70, 0x62, 0x61, 0x70, 0x70, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x22, 0x7b, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x3a, 0x0a, 0x0a, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x70, 0x62, 0x63, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x63, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63,
	0x22, 0x8b, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x62, 0x63, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x63, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x49, 0x74, 0x65, 0x6d, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x61,
	0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62, 0x63, 0x69,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x50, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69,
	0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49,
	0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x22, 0x57, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2a, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x63, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x46, 0x0a, 0x16,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x34, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x70, 0x62, 0x63, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x7c, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x3c, 0x0a, 0x0a, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x70, 0x62, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x22, 0x4d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x56, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x3a, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x22, 0x68, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06,
	0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69,
	0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x22, 0x95, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x53, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2a, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x7c, 0x0a,
	0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x3c, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x2a, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x62, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x96, 0x01, 0x0a, 0x0f,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2f, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x24,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x22, 0x56, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x62, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x85, 0x01, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x43, 0x49, 0x52, 0x65,
	0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x64, 0x43, 0x49, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62,
	0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a,
	0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x60, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x43, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x72, 0x63, 0x69, 0x2e,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x7e, 0x0a, 0x14, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x3b, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x62, 0x73, 0x73, 0x2e, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x29, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x62, 0x73, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x53, 0x65,
	0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x9a, 0x01, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x53, 0x65, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x59, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x53, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x73, 0x73, 0x2e, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x53, 0x65, 0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x0a,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x70, 0x62, 0x73, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x73, 0x73, 0x2e,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x73, 0x73, 0x2e, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x53, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x22, 0x63, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x0a, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x70, 0x62, 0x73, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x53, 0x65,
	0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71, 0x12, 0x3e, 0x0a,
	0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x62, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x98, 0x01, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12,
	0x2f, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x24, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x5a, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x2e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0xc4, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70,
	0x62, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x53,
	0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x63, 0x0a, 0x11, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3e,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x62, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x6d,
	0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x12,
	0x36, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x48, 0x6f, 0x6f,
	0x6b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x48,
	0x6f, 0x6f, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x93, 0x01,
	0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15,
	0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x22, 0x4d, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0x7d, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65,
	0x63, 0x22, 0x57, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e,
	0x48, 0x6f, 0x6f, 0x6b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x72, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x0a,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x62, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x94,
	0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2f,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x24, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x50, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x62, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x0a, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x70, 0x62, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x5a, 0x0a, 0x0e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x3d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x67, 0x63, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x70, 0x62, 0x67, 0x63, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22,
	0x9d, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69,
	0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49,
	0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22,
	0x5e, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2d, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x67, 0x63, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x67, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x0a, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x70, 0x62, 0x67, 0x63, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x0a, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x22, 0x50, 0x0a, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x41, 0x0a, 0x1d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x75, 0x62, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x74, 0x0a, 0x1c,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x62, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x62, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x52, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x3c, 0x0a, 0x0a, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x62, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x82,
	0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x52, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x22, 0x6a, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x52, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x3d, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x70, 0x62, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x63, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x52, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15,
	0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x5b, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x36, 0x0a, 0x10, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x1d, 0x0a, 0x07, 0x50, 0x69, 0x6e, 0x67, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x32, 0xa6, 0x19, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x64,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x34,
	0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x12, 0x12, 0x2e, 0x70, 0x62,
	0x64, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x1a,
	0x11, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x27, 0x0a, 0x06, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x61, 0x70, 0x70, 0x2e, 0x41, 0x70,
	0x70, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x42, 0x79, 0x49,
	0x44, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x61, 0x70, 0x70, 0x2e, 0x41,
	0x70, 0x70, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73,
	0x12, 0x11, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x64, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x12, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x64,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x2e,
	0x70, 0x62, 0x64, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x42, 0x0a,
	0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70,
	0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x3b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x63,
	0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x48,
	0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62,
	0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1c, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e,
	0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3b,
	0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x64, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12,
	0x2e, 0x70, 0x62, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62,
	0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70,
	0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x3f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e,
	0x70, 0x62, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x22,
	0x00, 0x12, 0x3c, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73,
	0x12, 0x14, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x3b, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x12, 0x16, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0c,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x12, 0x15, 0x2e, 0x70,
	0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4c, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x43, 0x49, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x70, 0x62, 0x72, 0x63, 0x69, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x17, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x43, 0x49, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x19, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x64, 0x43, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x43, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x53,
	0x65, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x10,
	0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x4b, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x53, 0x65, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x53, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x53, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x44, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x53, 0x65, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x11, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x53, 0x65, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x64,
	0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x17, 0x2e,
	0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x12, 0x17, 0x2e, 0x70,
	0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x3e, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70,
	0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x3e, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70,
	0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x12,
	0x13, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74,
	0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x64, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x36, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x13,
	0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b,
	0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x37, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x14, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0a, 0x4c, 0x69, 0x73,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70,
	0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x38,
	0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x14, 0x2e,
	0x70, 0x62, 0x64, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x1c, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e,
	0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x54, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1c,
	0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70,
	0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x30, 0x0a, 0x07, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x10, 0x2e, 0x70,
	0x62, 0x64, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x11,
	0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70,
	0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x69, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x75, 0x62, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x75, 0x62, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x52, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x19, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x52,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62,
	0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x48, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x52, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x52,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70,
	0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x52, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x10, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x52, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x19, 0x2e,
	0x70, 0x62, 0x64, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x52, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x42, 0x0a,
	0x0d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x16,
	0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x36, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x64, 0x73,
	0x2e, 0x50, 0x69, 0x6e, 0x67, 0x4d, 0x73, 0x67, 0x1a, 0x0d, 0x2e, 0x70, 0x62, 0x64, 0x73, 0x2e,
	0x50, 0x69, 0x6e, 0x67, 0x4d, 0x73, 0x67, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x22,
	0x05, 0x2f, 0x70, 0x69, 0x6e, 0x67, 0x3a, 0x01, 0x2a, 0x42, 0x28, 0x5a, 0x26, 0x62, 0x73, 0x63,
	0x70, 0x2e, 0x69, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3b, 0x70,
	0x62, 0x64, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_data_service_proto_rawDescOnce sync.Once
	file_data_service_proto_rawDescData = file_data_service_proto_rawDesc
)

func file_data_service_proto_rawDescGZIP() []byte {
	file_data_service_proto_rawDescOnce.Do(func() {
		file_data_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_data_service_proto_rawDescData)
	})
	return file_data_service_proto_rawDescData
}

var file_data_service_proto_msgTypes = make([]protoimpl.MessageInfo, 68)
var file_data_service_proto_goTypes = []interface{}{
	(*CreateResp)(nil),                             // 0: pbds.CreateResp
	(*CreateAppReq)(nil),                           // 1: pbds.CreateAppReq
	(*UpdateAppReq)(nil),                           // 2: pbds.UpdateAppReq
	(*DeleteAppReq)(nil),                           // 3: pbds.DeleteAppReq
	(*GetAppReq)(nil),                              // 4: pbds.GetAppReq
	(*GetAppByIDReq)(nil),                          // 5: pbds.GetAppByIDReq
	(*ListAppsReq)(nil),                            // 6: pbds.ListAppsReq
	(*ListAppsRestReq)(nil),                        // 7: pbds.ListAppsRestReq
	(*ListAppsResp)(nil),                           // 8: pbds.ListAppsResp
	(*CreateConfigItemReq)(nil),                    // 9: pbds.CreateConfigItemReq
	(*UpdateConfigItemReq)(nil),                    // 10: pbds.UpdateConfigItemReq
	(*DeleteConfigItemReq)(nil),                    // 11: pbds.DeleteConfigItemReq
	(*GetConfigItemReq)(nil),                       // 12: pbds.GetConfigItemReq
	(*ListConfigItemsReq)(nil),                     // 13: pbds.ListConfigItemsReq
	(*ListConfigItemsResp)(nil),                    // 14: pbds.ListConfigItemsResp
	(*ListConfigItemCountReq)(nil),                 // 15: pbds.ListConfigItemCountReq
	(*ListConfigItemCountResp)(nil),                // 16: pbds.ListConfigItemCountResp
	(*CreateContentReq)(nil),                       // 17: pbds.CreateContentReq
	(*GetContentReq)(nil),                          // 18: pbds.GetContentReq
	(*ListContentsReq)(nil),                        // 19: pbds.ListContentsReq
	(*ListContentsResp)(nil),                       // 20: pbds.ListContentsResp
	(*CreateCommitReq)(nil),                        // 21: pbds.CreateCommitReq
	(*GetLatestCommitReq)(nil),                     // 22: pbds.GetLatestCommitReq
	(*ListCommitsReq)(nil),                         // 23: pbds.ListCommitsReq
	(*ListCommitsResp)(nil),                        // 24: pbds.ListCommitsResp
	(*CreateReleaseReq)(nil),                       // 25: pbds.CreateReleaseReq
	(*ListReleasesReq)(nil),                        // 26: pbds.ListReleasesReq
	(*ListReleasesResp)(nil),                       // 27: pbds.ListReleasesResp
	(*GetReleasedCIReq)(nil),                       // 28: pbds.GetReleasedCIReq
	(*ListReleasedCIsReq)(nil),                     // 29: pbds.ListReleasedCIsReq
	(*ListReleasedCIsResp)(nil),                    // 30: pbds.ListReleasedCIsResp
	(*CreateStrategySetReq)(nil),                   // 31: pbds.CreateStrategySetReq
	(*ListStrategySetsReq)(nil),                    // 32: pbds.ListStrategySetsReq
	(*ListStrategySetsResp)(nil),                   // 33: pbds.ListStrategySetsResp
	(*UpdateStrategySetReq)(nil),                   // 34: pbds.UpdateStrategySetReq
	(*DeleteStrategySetReq)(nil),                   // 35: pbds.DeleteStrategySetReq
	(*CreateStrategyReq)(nil),                      // 36: pbds.CreateStrategyReq
	(*ListStrategiesReq)(nil),                      // 37: pbds.ListStrategiesReq
	(*ListStrategiesResp)(nil),                     // 38: pbds.ListStrategiesResp
	(*UpdateStrategyReq)(nil),                      // 39: pbds.UpdateStrategyReq
	(*DeleteStrategyReq)(nil),                      // 40: pbds.DeleteStrategyReq
	(*CreateHookReq)(nil),                          // 41: pbds.CreateHookReq
	(*ListHooksReq)(nil),                           // 42: pbds.ListHooksReq
	(*ListHooksResp)(nil),                          // 43: pbds.ListHooksResp
	(*UpdateHookReq)(nil),                          // 44: pbds.UpdateHookReq
	(*DeleteHookReq)(nil),                          // 45: pbds.DeleteHookReq
	(*CreateGroupReq)(nil),                         // 46: pbds.CreateGroupReq
	(*ListGroupsReq)(nil),                          // 47: pbds.ListGroupsReq
	(*ListGroupsResp)(nil),                         // 48: pbds.ListGroupsResp
	(*UpdateGroupReq)(nil),                         // 49: pbds.UpdateGroupReq
	(*DeleteGroupReq)(nil),                         // 50: pbds.DeleteGroupReq
	(*CreateGroupCategoryReq)(nil),                 // 51: pbds.CreateGroupCategoryReq
	(*ListGroupCategoriesReq)(nil),                 // 52: pbds.ListGroupCategoriesReq
	(*ListGroupCategoriesResp)(nil),                // 53: pbds.ListGroupCategoriesResp
	(*DeleteGroupCategoryReq)(nil),                 // 54: pbds.DeleteGroupCategoryReq
	(*PublishReq)(nil),                             // 55: pbds.PublishReq
	(*PublishResp)(nil),                            // 56: pbds.PublishResp
	(*FinishPublishReq)(nil),                       // 57: pbds.FinishPublishReq
	(*ListPubStrategyHistoriesReq)(nil),            // 58: pbds.ListPubStrategyHistoriesReq
	(*ListPubStrategyHistoriesResp)(nil),           // 59: pbds.ListPubStrategyHistoriesResp
	(*CreateCRInstanceReq)(nil),                    // 60: pbds.CreateCRInstanceReq
	(*ListCRInstancesReq)(nil),                     // 61: pbds.ListCRInstancesReq
	(*ListCRInstancesResp)(nil),                    // 62: pbds.ListCRInstancesResp
	(*DeleteCRInstanceReq)(nil),                    // 63: pbds.DeleteCRInstanceReq
	(*ListInstancesReq)(nil),                       // 64: pbds.ListInstancesReq
	(*ListInstancesResp)(nil),                      // 65: pbds.ListInstancesResp
	(*InstanceResource)(nil),                       // 66: pbds.InstanceResource
	(*PingMsg)(nil),                                // 67: pbds.PingMsg
	(*app.AppSpec)(nil),                            // 68: pbapp.AppSpec
	(*structpb.Struct)(nil),                        // 69: google.protobuf.Struct
	(*base.BasePage)(nil),                          // 70: pbbase.BasePage
	(*app.App)(nil),                                // 71: pbapp.App
	(*config_item.ConfigItemAttachment)(nil),       // 72: pbci.ConfigItemAttachment
	(*config_item.ConfigItemSpec)(nil),             // 73: pbci.ConfigItemSpec
	(*config_item.ConfigItem)(nil),                 // 74: pbci.ConfigItem
	(*config_item.ListConfigItemCounts)(nil),       // 75: pbci.ListConfigItemCounts
	(*content.ContentAttachment)(nil),              // 76: pbcontent.ContentAttachment
	(*content.ContentSpec)(nil),                    // 77: pbcontent.ContentSpec
	(*content.Content)(nil),                        // 78: pbcontent.Content
	(*commit.CommitAttachment)(nil),                // 79: pbcommit.CommitAttachment
	(*commit.Commit)(nil),                          // 80: pbcommit.Commit
	(*release.ReleaseAttachment)(nil),              // 81: pbrelease.ReleaseAttachment
	(*release.ReleaseSpec)(nil),                    // 82: pbrelease.ReleaseSpec
	(*release.Release)(nil),                        // 83: pbrelease.Release
	(*released_ci.ReleasedConfigItem)(nil),         // 84: pbrci.ReleasedConfigItem
	(*strategy_set.StrategySetAttachment)(nil),     // 85: pbss.StrategySetAttachment
	(*strategy_set.StrategySetSpec)(nil),           // 86: pbss.StrategySetSpec
	(*strategy_set.StrategySet)(nil),               // 87: pbss.StrategySet
	(*strategy_set.StrategySetState)(nil),          // 88: pbss.StrategySetState
	(*strategy.StrategyAttachment)(nil),            // 89: pbstrategy.StrategyAttachment
	(*strategy.StrategySpec)(nil),                  // 90: pbstrategy.StrategySpec
	(*strategy.Strategy)(nil),                      // 91: pbstrategy.Strategy
	(*strategy.StrategyState)(nil),                 // 92: pbstrategy.StrategyState
	(*hook.HookAttachment)(nil),                    // 93: pbhook.HookAttachment
	(*hook.HookSpec)(nil),                          // 94: pbhook.HookSpec
	(*hook.Hook)(nil),                              // 95: pbhook.Hook
	(*group.GroupAttachment)(nil),                  // 96: pbgroup.GroupAttachment
	(*group.GroupSpec)(nil),                        // 97: pbgroup.GroupSpec
	(*group.Group)(nil),                            // 98: pbgroup.Group
	(*group_category.GroupCategoryAttachment)(nil), // 99: pbgc.GroupCategoryAttachment
	(*group_category.GroupCategorySpec)(nil),       // 100: pbgc.GroupCategorySpec
	(*group_category.GroupCategory)(nil),           // 101: pbgc.GroupCategory
	(*strategy.PublishedStrategyHistory)(nil),      // 102: pbstrategy.PublishedStrategyHistory
	(*instance.ReleasedInstanceSpec)(nil),          // 103: pbinstance.ReleasedInstanceSpec
	(*instance.CurrentReleasedInstance)(nil),       // 104: pbinstance.CurrentReleasedInstance
	(*base.EmptyResp)(nil),                         // 105: pbbase.EmptyResp
}
var file_data_service_proto_depIdxs = []int32{
	68,  // 0: pbds.CreateAppReq.spec:type_name -> pbapp.AppSpec
	68,  // 1: pbds.UpdateAppReq.spec:type_name -> pbapp.AppSpec
	69,  // 2: pbds.ListAppsReq.filter:type_name -> google.protobuf.Struct
	70,  // 3: pbds.ListAppsReq.page:type_name -> pbbase.BasePage
	71,  // 4: pbds.ListAppsResp.details:type_name -> pbapp.App
	72,  // 5: pbds.CreateConfigItemReq.attachment:type_name -> pbci.ConfigItemAttachment
	73,  // 6: pbds.CreateConfigItemReq.spec:type_name -> pbci.ConfigItemSpec
	72,  // 7: pbds.UpdateConfigItemReq.attachment:type_name -> pbci.ConfigItemAttachment
	73,  // 8: pbds.UpdateConfigItemReq.spec:type_name -> pbci.ConfigItemSpec
	72,  // 9: pbds.DeleteConfigItemReq.attachment:type_name -> pbci.ConfigItemAttachment
	74,  // 10: pbds.ListConfigItemsResp.details:type_name -> pbci.ConfigItem
	75,  // 11: pbds.ListConfigItemCountResp.details:type_name -> pbci.ListConfigItemCounts
	76,  // 12: pbds.CreateContentReq.attachment:type_name -> pbcontent.ContentAttachment
	77,  // 13: pbds.CreateContentReq.spec:type_name -> pbcontent.ContentSpec
	69,  // 14: pbds.ListContentsReq.filter:type_name -> google.protobuf.Struct
	70,  // 15: pbds.ListContentsReq.page:type_name -> pbbase.BasePage
	78,  // 16: pbds.ListContentsResp.details:type_name -> pbcontent.Content
	79,  // 17: pbds.CreateCommitReq.attachment:type_name -> pbcommit.CommitAttachment
	69,  // 18: pbds.ListCommitsReq.filter:type_name -> google.protobuf.Struct
	70,  // 19: pbds.ListCommitsReq.page:type_name -> pbbase.BasePage
	80,  // 20: pbds.ListCommitsResp.details:type_name -> pbcommit.Commit
	81,  // 21: pbds.CreateReleaseReq.attachment:type_name -> pbrelease.ReleaseAttachment
	82,  // 22: pbds.CreateReleaseReq.spec:type_name -> pbrelease.ReleaseSpec
	69,  // 23: pbds.ListReleasesReq.filter:type_name -> google.protobuf.Struct
	70,  // 24: pbds.ListReleasesReq.page:type_name -> pbbase.BasePage
	83,  // 25: pbds.ListReleasesResp.details:type_name -> pbrelease.Release
	69,  // 26: pbds.ListReleasedCIsReq.filter:type_name -> google.protobuf.Struct
	70,  // 27: pbds.ListReleasedCIsReq.page:type_name -> pbbase.BasePage
	84,  // 28: pbds.ListReleasedCIsResp.details:type_name -> pbrci.ReleasedConfigItem
	85,  // 29: pbds.CreateStrategySetReq.attachment:type_name -> pbss.StrategySetAttachment
	86,  // 30: pbds.CreateStrategySetReq.spec:type_name -> pbss.StrategySetSpec
	69,  // 31: pbds.ListStrategySetsReq.filter:type_name -> google.protobuf.Struct
	70,  // 32: pbds.ListStrategySetsReq.page:type_name -> pbbase.BasePage
	87,  // 33: pbds.ListStrategySetsResp.details:type_name -> pbss.StrategySet
	85,  // 34: pbds.UpdateStrategySetReq.attachment:type_name -> pbss.StrategySetAttachment
	88,  // 35: pbds.UpdateStrategySetReq.state:type_name -> pbss.StrategySetState
	86,  // 36: pbds.UpdateStrategySetReq.spec:type_name -> pbss.StrategySetSpec
	85,  // 37: pbds.DeleteStrategySetReq.attachment:type_name -> pbss.StrategySetAttachment
	89,  // 38: pbds.CreateStrategyReq.attachment:type_name -> pbstrategy.StrategyAttachment
	90,  // 39: pbds.CreateStrategyReq.spec:type_name -> pbstrategy.StrategySpec
	69,  // 40: pbds.ListStrategiesReq.filter:type_name -> google.protobuf.Struct
	70,  // 41: pbds.ListStrategiesReq.page:type_name -> pbbase.BasePage
	91,  // 42: pbds.ListStrategiesResp.details:type_name -> pbstrategy.Strategy
	89,  // 43: pbds.UpdateStrategyReq.attachment:type_name -> pbstrategy.StrategyAttachment
	92,  // 44: pbds.UpdateStrategyReq.status:type_name -> pbstrategy.StrategyState
	90,  // 45: pbds.UpdateStrategyReq.spec:type_name -> pbstrategy.StrategySpec
	89,  // 46: pbds.DeleteStrategyReq.attachment:type_name -> pbstrategy.StrategyAttachment
	93,  // 47: pbds.CreateHookReq.attachment:type_name -> pbhook.HookAttachment
	94,  // 48: pbds.CreateHookReq.spec:type_name -> pbhook.HookSpec
	69,  // 49: pbds.ListHooksReq.filter:type_name -> google.protobuf.Struct
	70,  // 50: pbds.ListHooksReq.page:type_name -> pbbase.BasePage
	95,  // 51: pbds.ListHooksResp.details:type_name -> pbhook.Hook
	93,  // 52: pbds.UpdateHookReq.attachment:type_name -> pbhook.HookAttachment
	94,  // 53: pbds.UpdateHookReq.spec:type_name -> pbhook.HookSpec
	93,  // 54: pbds.DeleteHookReq.attachment:type_name -> pbhook.HookAttachment
	96,  // 55: pbds.CreateGroupReq.attachment:type_name -> pbgroup.GroupAttachment
	97,  // 56: pbds.CreateGroupReq.spec:type_name -> pbgroup.GroupSpec
	69,  // 57: pbds.ListGroupsReq.filter:type_name -> google.protobuf.Struct
	70,  // 58: pbds.ListGroupsReq.page:type_name -> pbbase.BasePage
	98,  // 59: pbds.ListGroupsResp.details:type_name -> pbgroup.Group
	96,  // 60: pbds.UpdateGroupReq.attachment:type_name -> pbgroup.GroupAttachment
	97,  // 61: pbds.UpdateGroupReq.spec:type_name -> pbgroup.GroupSpec
	96,  // 62: pbds.DeleteGroupReq.attachment:type_name -> pbgroup.GroupAttachment
	99,  // 63: pbds.CreateGroupCategoryReq.attachment:type_name -> pbgc.GroupCategoryAttachment
	100, // 64: pbds.CreateGroupCategoryReq.spec:type_name -> pbgc.GroupCategorySpec
	69,  // 65: pbds.ListGroupCategoriesReq.filter:type_name -> google.protobuf.Struct
	70,  // 66: pbds.ListGroupCategoriesReq.page:type_name -> pbbase.BasePage
	101, // 67: pbds.ListGroupCategoriesResp.details:type_name -> pbgc.GroupCategory
	99,  // 68: pbds.DeleteGroupCategoryReq.attachment:type_name -> pbgc.GroupCategoryAttachment
	69,  // 69: pbds.ListPubStrategyHistoriesReq.filter:type_name -> google.protobuf.Struct
	70,  // 70: pbds.ListPubStrategyHistoriesReq.page:type_name -> pbbase.BasePage
	102, // 71: pbds.ListPubStrategyHistoriesResp.details:type_name -> pbstrategy.PublishedStrategyHistory
	81,  // 72: pbds.CreateCRInstanceReq.attachment:type_name -> pbrelease.ReleaseAttachment
	103, // 73: pbds.CreateCRInstanceReq.spec:type_name -> pbinstance.ReleasedInstanceSpec
	69,  // 74: pbds.ListCRInstancesReq.filter:type_name -> google.protobuf.Struct
	70,  // 75: pbds.ListCRInstancesReq.page:type_name -> pbbase.BasePage
	104, // 76: pbds.ListCRInstancesResp.details:type_name -> pbinstance.CurrentReleasedInstance
	81,  // 77: pbds.DeleteCRInstanceReq.attachment:type_name -> pbrelease.ReleaseAttachment
	69,  // 78: pbds.ListInstancesReq.filter:type_name -> google.protobuf.Struct
	70,  // 79: pbds.ListInstancesReq.page:type_name -> pbbase.BasePage
	66,  // 80: pbds.ListInstancesResp.details:type_name -> pbds.InstanceResource
	1,   // 81: pbds.Data.CreateApp:input_type -> pbds.CreateAppReq
	2,   // 82: pbds.Data.UpdateApp:input_type -> pbds.UpdateAppReq
	3,   // 83: pbds.Data.DeleteApp:input_type -> pbds.DeleteAppReq
	4,   // 84: pbds.Data.GetApp:input_type -> pbds.GetAppReq
	5,   // 85: pbds.Data.GetAppByID:input_type -> pbds.GetAppByIDReq
	6,   // 86: pbds.Data.ListApps:input_type -> pbds.ListAppsReq
	7,   // 87: pbds.Data.ListAppsRest:input_type -> pbds.ListAppsRestReq
	9,   // 88: pbds.Data.CreateConfigItem:input_type -> pbds.CreateConfigItemReq
	10,  // 89: pbds.Data.UpdateConfigItem:input_type -> pbds.UpdateConfigItemReq
	11,  // 90: pbds.Data.DeleteConfigItem:input_type -> pbds.DeleteConfigItemReq
	12,  // 91: pbds.Data.GetConfigItem:input_type -> pbds.GetConfigItemReq
	13,  // 92: pbds.Data.ListConfigItems:input_type -> pbds.ListConfigItemsReq
	15,  // 93: pbds.Data.ListConfigItemCount:input_type -> pbds.ListConfigItemCountReq
	17,  // 94: pbds.Data.CreateContent:input_type -> pbds.CreateContentReq
	18,  // 95: pbds.Data.GetContent:input_type -> pbds.GetContentReq
	19,  // 96: pbds.Data.ListContents:input_type -> pbds.ListContentsReq
	21,  // 97: pbds.Data.CreateCommit:input_type -> pbds.CreateCommitReq
	22,  // 98: pbds.Data.GetLatestCommit:input_type -> pbds.GetLatestCommitReq
	23,  // 99: pbds.Data.ListCommits:input_type -> pbds.ListCommitsReq
	25,  // 100: pbds.Data.CreateRelease:input_type -> pbds.CreateReleaseReq
	26,  // 101: pbds.Data.ListReleases:input_type -> pbds.ListReleasesReq
	28,  // 102: pbds.Data.GetReleasedConfigItem:input_type -> pbds.GetReleasedCIReq
	29,  // 103: pbds.Data.ListReleasedConfigItems:input_type -> pbds.ListReleasedCIsReq
	31,  // 104: pbds.Data.CreateStrategySet:input_type -> pbds.CreateStrategySetReq
	32,  // 105: pbds.Data.ListStrategySets:input_type -> pbds.ListStrategySetsReq
	34,  // 106: pbds.Data.UpdateStrategySet:input_type -> pbds.UpdateStrategySetReq
	35,  // 107: pbds.Data.DeleteStrategySet:input_type -> pbds.DeleteStrategySetReq
	36,  // 108: pbds.Data.CreateStrategy:input_type -> pbds.CreateStrategyReq
	37,  // 109: pbds.Data.ListStrategies:input_type -> pbds.ListStrategiesReq
	39,  // 110: pbds.Data.UpdateStrategy:input_type -> pbds.UpdateStrategyReq
	40,  // 111: pbds.Data.DeleteStrategy:input_type -> pbds.DeleteStrategyReq
	41,  // 112: pbds.Data.CreateHook:input_type -> pbds.CreateHookReq
	42,  // 113: pbds.Data.ListHooks:input_type -> pbds.ListHooksReq
	44,  // 114: pbds.Data.UpdateHook:input_type -> pbds.UpdateHookReq
	45,  // 115: pbds.Data.DeleteHook:input_type -> pbds.DeleteHookReq
	46,  // 116: pbds.Data.CreateGroup:input_type -> pbds.CreateGroupReq
	47,  // 117: pbds.Data.ListGroups:input_type -> pbds.ListGroupsReq
	49,  // 118: pbds.Data.UpdateGroup:input_type -> pbds.UpdateGroupReq
	50,  // 119: pbds.Data.DeleteGroup:input_type -> pbds.DeleteGroupReq
	51,  // 120: pbds.Data.CreateGroupCategory:input_type -> pbds.CreateGroupCategoryReq
	52,  // 121: pbds.Data.ListGroupCategories:input_type -> pbds.ListGroupCategoriesReq
	54,  // 122: pbds.Data.DeleteGroupCategory:input_type -> pbds.DeleteGroupCategoryReq
	55,  // 123: pbds.Data.Publish:input_type -> pbds.PublishReq
	57,  // 124: pbds.Data.FinishPublish:input_type -> pbds.FinishPublishReq
	58,  // 125: pbds.Data.ListPublishedStrategyHistories:input_type -> pbds.ListPubStrategyHistoriesReq
	60,  // 126: pbds.Data.CreateCRInstance:input_type -> pbds.CreateCRInstanceReq
	61,  // 127: pbds.Data.ListCRInstances:input_type -> pbds.ListCRInstancesReq
	63,  // 128: pbds.Data.DeleteCRInstance:input_type -> pbds.DeleteCRInstanceReq
	64,  // 129: pbds.Data.ListInstances:input_type -> pbds.ListInstancesReq
	67,  // 130: pbds.Data.Ping:input_type -> pbds.PingMsg
	0,   // 131: pbds.Data.CreateApp:output_type -> pbds.CreateResp
	105, // 132: pbds.Data.UpdateApp:output_type -> pbbase.EmptyResp
	105, // 133: pbds.Data.DeleteApp:output_type -> pbbase.EmptyResp
	71,  // 134: pbds.Data.GetApp:output_type -> pbapp.App
	71,  // 135: pbds.Data.GetAppByID:output_type -> pbapp.App
	8,   // 136: pbds.Data.ListApps:output_type -> pbds.ListAppsResp
	8,   // 137: pbds.Data.ListAppsRest:output_type -> pbds.ListAppsResp
	0,   // 138: pbds.Data.CreateConfigItem:output_type -> pbds.CreateResp
	105, // 139: pbds.Data.UpdateConfigItem:output_type -> pbbase.EmptyResp
	105, // 140: pbds.Data.DeleteConfigItem:output_type -> pbbase.EmptyResp
	74,  // 141: pbds.Data.GetConfigItem:output_type -> pbci.ConfigItem
	14,  // 142: pbds.Data.ListConfigItems:output_type -> pbds.ListConfigItemsResp
	16,  // 143: pbds.Data.ListConfigItemCount:output_type -> pbds.ListConfigItemCountResp
	0,   // 144: pbds.Data.CreateContent:output_type -> pbds.CreateResp
	78,  // 145: pbds.Data.GetContent:output_type -> pbcontent.Content
	20,  // 146: pbds.Data.ListContents:output_type -> pbds.ListContentsResp
	0,   // 147: pbds.Data.CreateCommit:output_type -> pbds.CreateResp
	80,  // 148: pbds.Data.GetLatestCommit:output_type -> pbcommit.Commit
	24,  // 149: pbds.Data.ListCommits:output_type -> pbds.ListCommitsResp
	0,   // 150: pbds.Data.CreateRelease:output_type -> pbds.CreateResp
	27,  // 151: pbds.Data.ListReleases:output_type -> pbds.ListReleasesResp
	84,  // 152: pbds.Data.GetReleasedConfigItem:output_type -> pbrci.ReleasedConfigItem
	30,  // 153: pbds.Data.ListReleasedConfigItems:output_type -> pbds.ListReleasedCIsResp
	0,   // 154: pbds.Data.CreateStrategySet:output_type -> pbds.CreateResp
	33,  // 155: pbds.Data.ListStrategySets:output_type -> pbds.ListStrategySetsResp
	105, // 156: pbds.Data.UpdateStrategySet:output_type -> pbbase.EmptyResp
	105, // 157: pbds.Data.DeleteStrategySet:output_type -> pbbase.EmptyResp
	0,   // 158: pbds.Data.CreateStrategy:output_type -> pbds.CreateResp
	38,  // 159: pbds.Data.ListStrategies:output_type -> pbds.ListStrategiesResp
	105, // 160: pbds.Data.UpdateStrategy:output_type -> pbbase.EmptyResp
	105, // 161: pbds.Data.DeleteStrategy:output_type -> pbbase.EmptyResp
	0,   // 162: pbds.Data.CreateHook:output_type -> pbds.CreateResp
	43,  // 163: pbds.Data.ListHooks:output_type -> pbds.ListHooksResp
	105, // 164: pbds.Data.UpdateHook:output_type -> pbbase.EmptyResp
	105, // 165: pbds.Data.DeleteHook:output_type -> pbbase.EmptyResp
	0,   // 166: pbds.Data.CreateGroup:output_type -> pbds.CreateResp
	48,  // 167: pbds.Data.ListGroups:output_type -> pbds.ListGroupsResp
	105, // 168: pbds.Data.UpdateGroup:output_type -> pbbase.EmptyResp
	105, // 169: pbds.Data.DeleteGroup:output_type -> pbbase.EmptyResp
	0,   // 170: pbds.Data.CreateGroupCategory:output_type -> pbds.CreateResp
	53,  // 171: pbds.Data.ListGroupCategories:output_type -> pbds.ListGroupCategoriesResp
	105, // 172: pbds.Data.DeleteGroupCategory:output_type -> pbbase.EmptyResp
	56,  // 173: pbds.Data.Publish:output_type -> pbds.PublishResp
	105, // 174: pbds.Data.FinishPublish:output_type -> pbbase.EmptyResp
	59,  // 175: pbds.Data.ListPublishedStrategyHistories:output_type -> pbds.ListPubStrategyHistoriesResp
	0,   // 176: pbds.Data.CreateCRInstance:output_type -> pbds.CreateResp
	62,  // 177: pbds.Data.ListCRInstances:output_type -> pbds.ListCRInstancesResp
	105, // 178: pbds.Data.DeleteCRInstance:output_type -> pbbase.EmptyResp
	65,  // 179: pbds.Data.ListInstances:output_type -> pbds.ListInstancesResp
	67,  // 180: pbds.Data.Ping:output_type -> pbds.PingMsg
	131, // [131:181] is the sub-list for method output_type
	81,  // [81:131] is the sub-list for method input_type
	81,  // [81:81] is the sub-list for extension type_name
	81,  // [81:81] is the sub-list for extension extendee
	0,   // [0:81] is the sub-list for field type_name
}

func init() { file_data_service_proto_init() }
func file_data_service_proto_init() {
	if File_data_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_data_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAppReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppByIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppsRestReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConfigItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConfigItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConfigItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConfigItemsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConfigItemsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConfigItemCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConfigItemCountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContentsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContentsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCommitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestCommitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCommitsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCommitsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReleaseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReleasesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReleasesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReleasedCIReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReleasedCIsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReleasedCIsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStrategySetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStrategySetsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStrategySetsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStrategySetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStrategySetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStrategyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStrategiesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStrategiesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStrategyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStrategyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHookReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHooksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHooksResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHookReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHookReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroupsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroupsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupCategoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroupCategoriesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroupCategoriesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroupCategoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishPublishReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPubStrategyHistoriesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPubStrategyHistoriesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCRInstanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCRInstancesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCRInstancesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCRInstanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInstancesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInstancesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_service_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_data_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   68,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_data_service_proto_goTypes,
		DependencyIndexes: file_data_service_proto_depIdxs,
		MessageInfos:      file_data_service_proto_msgTypes,
	}.Build()
	File_data_service_proto = out.File
	file_data_service_proto_rawDesc = nil
	file_data_service_proto_goTypes = nil
	file_data_service_proto_depIdxs = nil
}
