syntax = "proto3";

import "bscp.io/pkg/protocol/core/base/base.proto";
import "bscp.io/pkg/protocol/core/app/app.proto";
import "bscp.io/pkg/protocol/core/config-item/config_item.proto";
import "bscp.io/pkg/protocol/core/content/content.proto";
import "bscp.io/pkg/protocol/core/commit/commit.proto";
import "bscp.io/pkg/protocol/core/release/release.proto";
import "bscp.io/pkg/protocol/core/released-ci/released_ci.proto";
import "bscp.io/pkg/protocol/core/strategy-set/strategy_set.proto";
import "bscp.io/pkg/protocol/core/strategy/strategy.proto";
import "bscp.io/pkg/protocol/core/instance/instance.proto";
import "google/api/annotations.proto";
import "google/protobuf/struct.proto";

package pbds;

option go_package = "bscp.io/pkg/protocol/data-service;pbds";

service Data {
    // app related interface.
    rpc CreateApp(CreateAppReq) returns (CreateResp) {}
    rpc UpdateApp(UpdateAppReq) returns (pbbase.EmptyResp) {}
    rpc DeleteApp(DeleteAppReq) returns (pbbase.EmptyResp) {}
    rpc ListApps(ListAppsReq) returns (ListAppsResp) {}
    rpc ListAppsRest(ListAppsRestReq) returns (ListAppsResp) {}

    // config item related interface.
    rpc CreateConfigItem(CreateConfigItemReq) returns (CreateResp) {}
    rpc UpdateConfigItem(UpdateConfigItemReq) returns (pbbase.EmptyResp) {}
    rpc DeleteConfigItem(DeleteConfigItemReq) returns (pbbase.EmptyResp) {}
    rpc ListConfigItems(ListConfigItemsReq) returns (ListConfigItemsResp) {}

    // content related interface.
    rpc CreateContent(CreateContentReq) returns (CreateResp) {}
    rpc ListContents(ListContentsReq) returns (ListContentsResp) {}

    // commit related interface.
    rpc CreateCommit(CreateCommitReq) returns (CreateResp) {}
    rpc ListCommits(ListCommitsReq) returns (ListCommitsResp) {}

    // release related interface.
    rpc CreateRelease(CreateReleaseReq) returns (CreateResp) {}
    rpc ListReleases(ListReleasesReq) returns (ListReleasesResp) {}

    // released config item related interface.
    rpc ListReleasedConfigItems(ListReleasedCIsReq) returns (ListReleasedCIsResp) {}

    // strategy set related interface.
    rpc CreateStrategySet(CreateStrategySetReq) returns (CreateResp) {}
    rpc ListStrategySets(ListStrategySetsReq) returns (ListStrategySetsResp) {}
    rpc UpdateStrategySet(UpdateStrategySetReq) returns (pbbase.EmptyResp) {}
    rpc DeleteStrategySet(DeleteStrategySetReq) returns (pbbase.EmptyResp) {}

    // strategy related interface.
    rpc CreateStrategy(CreateStrategyReq) returns (CreateResp) {}
    rpc ListStrategies(ListStrategiesReq) returns (ListStrategiesResp) {}
    rpc UpdateStrategy(UpdateStrategyReq) returns (pbbase.EmptyResp) {}
    rpc DeleteStrategy(DeleteStrategyReq) returns (pbbase.EmptyResp) {}

    // publish related interface.
    rpc PublishStrategy(PublishStrategyReq) returns (PublishStrategyResp) {}
    rpc FinishPublishStrategy(FinishPublishStrategyReq) returns (pbbase.EmptyResp) {}
    rpc ListPublishedStrategyHistories(ListPubStrategyHistoriesReq) returns (ListPubStrategyHistoriesResp) {}

    // current released instance related interface.
    rpc CreateCRInstance(CreateCRInstanceReq) returns (CreateResp) {}
    rpc ListCRInstances(ListCRInstancesReq) returns (ListCRInstancesResp) {}
    rpc DeleteCRInstance(DeleteCRInstanceReq) returns (pbbase.EmptyResp) {}

    // used iam pull resource callback.
    rpc ListInstances(ListInstancesReq) returns (ListInstancesResp) {}

    // Ping verifies if the grpc connection is still alive.
    rpc Ping(PingMsg) returns (PingMsg) {
        option (google.api.http) = {
            post: "/ping"
            body: "*"
        };
    }
}

message CreateResp {
    uint32 id = 1;
}

message CreateAppReq {
    uint32 biz_id      = 1;
    pbapp.AppSpec spec = 2;
}

message UpdateAppReq {
    uint32 id          = 1;
    uint32 biz_id      = 2;
    pbapp.AppSpec spec = 3;
}

message DeleteAppReq {
    uint32 id     = 1;
    uint32 biz_id = 2;
}

message ListAppsReq {
    uint32 biz_id                 = 1;
    google.protobuf.Struct filter = 2;
    pbbase.BasePage page          = 3;
}

message ListAppsRestReq {
    uint32 biz_id   = 1;
    uint32 start    = 2;
    uint32 limit    = 3;
    string operator = 4;
    string name     = 5;
}

message ListAppsResp {
    uint32 count               = 1;
    repeated pbapp.App details = 2;
}

message CreateConfigItemReq {
    pbci.ConfigItemAttachment attachment = 1;
    pbci.ConfigItemSpec spec             = 2;
}

message UpdateConfigItemReq {
    uint32 id                            = 1;
    pbci.ConfigItemAttachment attachment = 2;
    pbci.ConfigItemSpec spec             = 3;
}

message DeleteConfigItemReq {
    uint32 id                            = 1;
    pbci.ConfigItemAttachment attachment = 2;
}

message ListConfigItemsReq {
    uint32 biz_id                 = 1;
    uint32 app_id                 = 2;
    google.protobuf.Struct filter = 3;
    pbbase.BasePage page          = 4;
}

message ListConfigItemsResp {
    uint32 count                     = 1;
    repeated pbci.ConfigItem details = 2;
}

message CreateContentReq {
    pbcontent.ContentAttachment attachment = 1;
    pbcontent.ContentSpec spec             = 2;
}

message ListContentsReq {
    uint32 biz_id                 = 1;
    uint32 app_id                 = 2;
    google.protobuf.Struct filter = 3;
    pbbase.BasePage page          = 4;
}

message ListContentsResp {
    uint32 count                       = 1;
    repeated pbcontent.Content details = 2;
}

message CreateCommitReq {
    pbcommit.CommitAttachment attachment = 1;
    uint32 content_id                    = 2;
    string memo                          = 3;
}

message ListCommitsReq {
    uint32 biz_id                 = 1;
    uint32 app_id                 = 2;
    google.protobuf.Struct filter = 3;
    pbbase.BasePage page          = 4;
}

message ListCommitsResp {
    uint32 count                     = 1;
    repeated pbcommit.Commit details = 2;
}

message CreateReleaseReq {
    pbrelease.ReleaseAttachment attachment = 1;
    pbrelease.ReleaseSpec spec             = 2;
}

message ListReleasesReq {
    uint32 biz_id                 = 1;
    uint32 app_id                 = 2;
    google.protobuf.Struct filter = 3;
    pbbase.BasePage page          = 4;
}

message ListReleasesResp {
    uint32 count                       = 1;
    repeated pbrelease.Release details = 2;
}

message ListReleasedCIsReq {
    uint32 biz_id                 = 1;
    google.protobuf.Struct filter = 2;
    pbbase.BasePage page          = 3;
}

message ListReleasedCIsResp {
    uint32 count                              = 1;
    repeated pbrci.ReleasedConfigItem details = 2;
}

message CreateStrategySetReq {
    pbss.StrategySetAttachment attachment = 1;
    pbss.StrategySetSpec spec             = 2;
}

message ListStrategySetsReq {
    uint32 biz_id                 = 1;
    uint32 app_id                 = 2;
    google.protobuf.Struct filter = 3;
    pbbase.BasePage page          = 4;
}

message ListStrategySetsResp {
    uint32 count                      = 1;
    repeated pbss.StrategySet details = 2;
}

message UpdateStrategySetReq {
    uint32 id                             = 1;
    pbss.StrategySetAttachment attachment = 2;
    pbss.StrategySetState state           = 3;
    pbss.StrategySetSpec spec             = 4;
}

message DeleteStrategySetReq {
    uint32 id                             = 1;
    pbss.StrategySetAttachment attachment = 2;
}

message CreateStrategyReq {
    pbstrategy.StrategyAttachment attachment = 1;
    pbstrategy.StrategySpec spec             = 2;
}

message ListStrategiesReq {
    uint32 biz_id                 = 1;
    uint32 app_id                 = 2;
    google.protobuf.Struct filter = 3;
    pbbase.BasePage page          = 4;
}

message ListStrategiesResp {
    uint32 count                         = 1;
    repeated pbstrategy.Strategy details = 2;
}

message UpdateStrategyReq {
    uint32 id                                = 1;
    pbstrategy.StrategyAttachment attachment = 2;
    pbstrategy.StrategyState status          = 3;
    pbstrategy.StrategySpec spec             = 4;
}

message DeleteStrategyReq {
    uint32 id                                = 1;
    pbstrategy.StrategyAttachment attachment = 2;
}

message PublishStrategyReq {
    uint32 biz_id      = 1;
    uint32 app_id      = 2;
    uint32 strategy_id = 3;
}

message PublishStrategyResp {
    uint32 published_strategy_history_id = 1;
}

message FinishPublishStrategyReq {
    uint32 biz_id      = 1;
    uint32 app_id      = 2;
    uint32 strategy_id = 3;
}

message ListPubStrategyHistoriesReq {
    uint32 biz_id                 = 1;
    uint32 app_id                 = 2;
    google.protobuf.Struct filter = 3;
    pbbase.BasePage page          = 4;
}

message ListPubStrategyHistoriesResp {
    uint32 count                                         = 1;
    repeated pbstrategy.PublishedStrategyHistory details = 2;
}

message CreateCRInstanceReq {
    pbrelease.ReleaseAttachment attachment = 1;
    pbinstance.ReleasedInstanceSpec spec   = 2;
}

message ListCRInstancesReq {
    uint32 biz_id                 = 1;
    google.protobuf.Struct filter = 2;
    pbbase.BasePage page          = 3;
}

message ListCRInstancesResp {
    uint32 count                                        = 1;
    repeated pbinstance.CurrentReleasedInstance details = 2;
}

message DeleteCRInstanceReq {
    uint32 id                              = 1;
    pbrelease.ReleaseAttachment attachment = 2;
}

message ListInstancesReq {
    string resource_type          = 1;
    uint32 biz_id                 = 2;
    google.protobuf.Struct filter = 3;
    pbbase.BasePage page          = 4;
}

message ListInstancesResp {
    uint32 count                      = 1;
    repeated InstanceResource details = 2;
}

message InstanceResource {
    uint32 id   = 1;
    string name = 2;
}

message PingMsg {
    string data = 1;
}
