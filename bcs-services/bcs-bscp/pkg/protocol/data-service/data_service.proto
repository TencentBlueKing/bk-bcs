syntax = "proto3";

import "bscp.io/pkg/protocol/core/app/app.proto";
import "bscp.io/pkg/protocol/core/base/base.proto";
import "bscp.io/pkg/protocol/core/config-item/config_item.proto";
import "bscp.io/pkg/protocol/core/commit/commit.proto";
import "bscp.io/pkg/protocol/core/content/content.proto";
import "bscp.io/pkg/protocol/core/credential/credential.proto";
import "bscp.io/pkg/protocol/core/credential-scope/credential-scope.proto";
import "bscp.io/pkg/protocol/core/group/group.proto";
import "bscp.io/pkg/protocol/core/hook/hook.proto";
import "bscp.io/pkg/protocol/core/hook-release/hook_release.proto";
import "bscp.io/pkg/protocol/core/release/release.proto";
import "bscp.io/pkg/protocol/core/released-ci/released_ci.proto";
import "bscp.io/pkg/protocol/core/template/template.proto";
import "bscp.io/pkg/protocol/core/template-space/template_space.proto";
import "bscp.io/pkg/protocol/core/template-release/template_release.proto";
import "bscp.io/pkg/protocol/core/config-hook/config_hook.proto";
import "google/api/annotations.proto";
import "google/protobuf/struct.proto";

package pbds;

option go_package = "bscp.io/pkg/protocol/data-service;pbds";

service Data {
    // app related interface.
    rpc CreateApp(CreateAppReq) returns (CreateResp) {}
    rpc UpdateApp(UpdateAppReq) returns (pbbase.EmptyResp) {}
    rpc DeleteApp(DeleteAppReq) returns (pbbase.EmptyResp) {}
    rpc GetApp(GetAppReq) returns (pbapp.App) {}
    rpc GetAppByID(GetAppByIDReq) returns (pbapp.App) {}
    rpc GetAppByName(GetAppByNameReq) returns (pbapp.App) {}
    rpc ListAppsRest(ListAppsRestReq) returns (ListAppsResp) {}
    rpc ListAppsByIDs(ListAppsByIDsReq) returns (ListAppsByIDsResp) {}

    // config item related interface.
    rpc CreateConfigItem(CreateConfigItemReq) returns (CreateResp) {}
    rpc BatchUpsertConfigItems(BatchUpsertConfigItemsReq) returns (pbbase.EmptyResp) {}
    rpc UpdateConfigItem(UpdateConfigItemReq) returns (pbbase.EmptyResp) {}
    rpc DeleteConfigItem(DeleteConfigItemReq) returns (pbbase.EmptyResp) {}
    rpc GetConfigItem(GetConfigItemReq) returns (pbci.ConfigItem) {}
    rpc ListConfigItems(ListConfigItemsReq) returns (ListConfigItemsResp) {}
    rpc ListConfigItemCount(ListConfigItemCountReq) returns (ListConfigItemCountResp) {}

    // config hook related interface.
    rpc CreateConfigHook(CreateConfigHookReq) returns (CreateResp) {}
    rpc UpdateConfigHook(UpdateConfigHookReq) returns (pbbase.EmptyResp) {}
    rpc GetConfigHook(GetConfigHookReq) returns (pbch.ConfigHook) {}

    // content related interface.
    rpc CreateContent(CreateContentReq) returns (CreateResp) {}
    rpc GetContent(GetContentReq) returns (pbcontent.Content) {}
    rpc ListContents(ListContentsReq) returns (ListContentsResp) {}

    // commit related interface.
    rpc CreateCommit(CreateCommitReq) returns (CreateResp) {}
    rpc GetLatestCommit(GetLatestCommitReq) returns (pbcommit.Commit) {}
    rpc ListCommits(ListCommitsReq) returns (ListCommitsResp) {}

    // release related interface.
    rpc CreateRelease(CreateReleaseReq) returns (CreateResp) {}
    rpc ListReleases(ListReleasesReq) returns (ListReleasesResp) {}

    // released config item related interface.
    rpc GetReleasedConfigItem(GetReleasedCIReq) returns (pbrci.ReleasedConfigItem) {}
    rpc ListReleasedConfigItems(ListReleasedCIsReq) returns (ListReleasedCIsResp) {}

    // hook related interface.
    rpc CreateHook(CreateHookReq) returns (CreateResp) {}
    rpc ListHooks(ListHooksReq) returns (ListHooksResp) {}
    rpc DeleteHook(DeleteHookReq) returns (pbbase.EmptyResp) {}
    rpc ListHookTags(ListHookTagReq) returns (ListHookTagResp) {}
    rpc GetHook(GetHookReq) returns (GetHookResp) {}

    // hook release interface.
    rpc CreateHookRelease(CreateHookReleaseReq) returns (CreateResp) {}
    rpc ListHookReleases(ListHookReleasesReq) returns (ListHookReleasesResp) {}
    rpc GetHookReleaseByID(GetHookReleaseByIdReq) returns (pbhr.HookRelease){}
    rpc DeleteHookRelease(DeleteHookReleaseReq) returns (pbbase.EmptyResp){}
    rpc PublishHookRelease(PublishHookReleaseReq) returns (pbbase.EmptyResp){}
    rpc GetHookReleaseByPubState(GetByPubStateReq) returns (pbhr.HookRelease){}
    rpc UpdateHookRelease(UpdateHookReleaseReq) returns (pbbase.EmptyResp) {}
    rpc ListHookReleasesReferences(ListHookReleasesReferencesReq) returns (ListHookReleasesReferencesResp) {}

    // template space related interface.
    rpc CreateTemplateSpace(CreateTemplateSpaceReq) returns (CreateResp) {}
    rpc ListTemplateSpaces(ListTemplateSpacesReq) returns (ListTemplateSpacesResp) {}
    rpc UpdateTemplateSpace(UpdateTemplateSpaceReq) returns (pbbase.EmptyResp) {}
    rpc DeleteTemplateSpace(DeleteTemplateSpaceReq) returns (pbbase.EmptyResp) {}

    // template related interface.
    rpc CreateTemplate(CreateTemplateReq) returns (CreateResp) {}
    rpc ListTemplates(ListTemplatesReq) returns (ListTemplatesResp) {}
    rpc UpdateTemplate(UpdateTemplateReq) returns (pbbase.EmptyResp) {}
    rpc DeleteTemplate(DeleteTemplateReq) returns (pbbase.EmptyResp) {}

    // template release related interface.
    rpc CreateTemplateRelease(CreateTemplateReleaseReq) returns (CreateResp) {}
    rpc ListTemplateReleases(ListTemplateReleasesReq) returns (ListTemplateReleasesResp) {}
    rpc DeleteTemplateRelease(DeleteTemplateReleaseReq) returns (pbbase.EmptyResp) {}

    // group related interface.
    rpc CreateGroup(CreateGroupReq) returns (CreateResp) {}
    rpc ListGroups(ListGroupsReq) returns (ListGroupsResp) {}
    rpc ListAppGroups(ListAppGroupsReq) returns (ListAppGroupsResp) {}
    rpc UpdateGroup(UpdateGroupReq) returns (pbbase.EmptyResp) {}
    rpc DeleteGroup(DeleteGroupReq) returns (pbbase.EmptyResp) {}

    // group current release related interface.
    rpc CountGroupsReleasedApps(CountGroupsReleasedAppsReq) returns (CountGroupsReleasedAppsResp) {}
    rpc ListGroupRleasesdApps(ListGroupRleasesdAppsReq) returns (ListGroupRleasesdAppsResp) {}

    // publish related interface.
    rpc Publish(PublishReq) returns (PublishResp) {}
    rpc GenerateReleaseAndPublish(GenerateReleaseAndPublishReq) returns (PublishResp) {}

    // credential related interface
    rpc CreateCredential(CreateCredentialReq) returns (CreateResp) {}
    rpc ListCredentials(ListCredentialReq) returns (ListCredentialResp) {}
    rpc DeleteCredential(DeleteCredentialReq) returns (pbbase.EmptyResp) {}
    rpc UpdateCredential(UpdateCredentialReq) returns (pbbase.EmptyResp) {}

    // credential scope related interface
    rpc ListCredentialScopes(ListCredentialScopesReq) returns (ListCredentialScopesResp) {}
    rpc UpdateCredentialScopes(UpdateCredentialScopesReq) returns (UpdateCredentialScopesResp) {}

    // used iam pull resource callback.
    rpc ListInstances(ListInstancesReq) returns (ListInstancesResp) {}

    // Ping verifies if the grpc connection is still alive.
    rpc Ping(PingMsg) returns (PingMsg) {
        option (google.api.http) = {
            post: "/ping"
            body: "*"
        };
    }
}
message UpdateCredentialScopesReq {
    uint32                         biz_id        = 1;
    uint32                         credential_id = 2;
    repeated pbcrs.UpdateScopeSpec updated       = 3;
    repeated string                created       = 4;
    repeated uint32                deleted       = 5;
}
message UpdateCredentialScopesResp{}

message DeleteCredentialScopesReq{
    repeated uint32                 id         = 1;
    pbcrs.CredentialScopeAttachment attachment = 2;
}

message DeleteCredentialScopesResp{}

message ListCredentialScopesReq {
    uint32 biz_id        = 1;
    uint32 credential_id = 2;
}

message ListCredentialScopesResp {
    uint32                             count   = 1;
    repeated pbcrs.CredentialScopeList details = 2;
}

message CreateCredentialScopeReq {
    pbcrs.CredentialScopeAttachment attachment = 1;
    repeated string                 spec       = 2;
}

message CreateCredentialReq {
    pbcredential.CredentialAttachment attachment = 1;
    pbcredential.CredentialSpec       spec       = 2;
}

message ListCredentialReq {
    uint32 biz_id    = 1;
    string searchKey = 2;
    uint32 start     = 3;
    uint32 limit     = 4;
}

message ListCredentialResp{
    uint32                               count   = 1;
    repeated pbcredential.CredentialList details = 2;
}

message UpdateCredentialReq{
    uint32                            id         = 1;
    pbcredential.CredentialAttachment attachment = 2;
    pbcredential.CredentialSpec       spec       = 3;
}

message DeleteCredentialReq {
    uint32                            id         = 1;
    pbcredential.CredentialAttachment attachment = 2;
}

message EnableCredentialReq {
    uint32 id     = 1;
    uint32 biz_id = 2;
    bool   enable = 3;
}

message CreateResp {
    uint32 id = 1;
}

message UpdateConfigHookReq {
    uint32                    id         = 1;
    pbch.ConfigHookAttachment attachment = 2;
    pbch.ConfigHookSpec       spec       = 3;
}

message GetConfigHookReq {
    uint32 biz_id = 1;
    uint32 app_id = 2;
}

message CreateAppReq {
    uint32        biz_id = 1;
    pbapp.AppSpec spec   = 2;
}

message UpdateAppReq {
    uint32        id     = 1;
    uint32        biz_id = 2;
    pbapp.AppSpec spec   = 3;
}

message DeleteAppReq {
    uint32 id     = 1;
    uint32 biz_id = 2;
}

message GetAppReq {
    uint32 biz_id = 1;
    uint32 app_id = 2;
}

message GetAppByIDReq {
    uint32 app_id = 1;
}

message GetAppByNameReq {
    uint32 biz_id   = 1;
    string app_name = 2;
}

message ListAppsRestReq {
    string biz_id   = 1;  // 多个以逗号分割
    uint32 start    = 2;
    uint32 limit    = 3;
    string operator = 4;
    string name     = 5;
}

message ListAppsResp {
    uint32             count   = 1;
    repeated pbapp.App details = 2;
}

message ListAppsByIDsReq {
    repeated uint32 ids = 1;
}

message ListAppsByIDsResp {
    repeated pbapp.App details = 1;
}

message CreateConfigItemReq {
    pbci.ConfigItemAttachment config_item_attachment = 1;
    pbci.ConfigItemSpec       config_item_spec       = 2;
    pbcontent.ContentSpec     content_spec           = 3;
}

message BatchUpsertConfigItemsReq {
    message ConfigItem {
        pbci.ConfigItemAttachment config_item_attachment = 1;
        pbci.ConfigItemSpec       config_item_spec       = 2;
        pbcontent.ContentSpec     content_spec           = 3;
    }
    uint32              biz_id = 1;
    uint32              app_id = 2;
    repeated ConfigItem items  = 3;
}

message UpdateConfigItemReq {
    uint32                    id         = 1;
    pbci.ConfigItemAttachment attachment = 2;
    pbci.ConfigItemSpec       spec       = 3;
}

message DeleteConfigItemReq {
    uint32                    id         = 1;
    pbci.ConfigItemAttachment attachment = 2;
}

message GetConfigItemReq {
    uint32 id     = 1;
    uint32 biz_id = 2;
    uint32 app_id = 3;
}

message ListConfigItemsReq {
    uint32 biz_id     = 1;
    uint32 app_id     = 2;
    uint32 release_id = 3;
    uint32 start      = 4;
    uint32 limit      = 5;
    bool   all        = 6;
    string searchKey  = 7;
}

message ListConfigItemsResp {
    uint32                   count   = 1;
    repeated pbci.ConfigItem details = 2;
}

message ListConfigItemCountReq {
    uint32          biz_id = 1;
    repeated uint32 app_id = 2;
}

message ListConfigItemCountResp {
    repeated pbci.ListConfigItemCounts details = 1;
}

message CreateConfigHookReq {
    pbch.ConfigHookAttachment attachment = 1;
    pbch.ConfigHookSpec       spec       = 2;
}

message CreateContentReq {
    pbcontent.ContentAttachment attachment = 1;
    pbcontent.ContentSpec       spec       = 2;
}

message GetContentReq {
    uint32 id     = 1;
    uint32 biz_id = 2;
    uint32 app_id = 3;
}

message ListContentsReq {
    uint32                 biz_id = 1;
    uint32                 app_id = 2;
    google.protobuf.Struct filter = 3;
    pbbase.BasePage        page   = 4;
}

message ListContentsResp {
    uint32                     count   = 1;
    repeated pbcontent.Content details = 2;
}

message CreateCommitReq {
    pbcommit.CommitAttachment attachment = 1;
    uint32                    content_id = 2;
    string                    memo       = 3;
}

message GetLatestCommitReq {
    uint32 biz_id         = 1;
    uint32 app_id         = 2;
    uint32 config_item_id = 3;
}

message ListCommitsReq {
    uint32                 biz_id = 1;
    uint32                 app_id = 2;
    google.protobuf.Struct filter = 3;
    pbbase.BasePage        page   = 4;
}

message ListCommitsResp {
    uint32                   count   = 1;
    repeated pbcommit.Commit details = 2;
}

message CreateReleaseReq {
    pbrelease.ReleaseAttachment attachment = 1;
    pbrelease.ReleaseSpec       spec       = 2;
}

message ListReleasesReq {
    uint32                 biz_id     = 1;
    uint32                 app_id     = 2;
    bool                   deprecated = 3;
    google.protobuf.Struct filter     = 4;
    pbbase.BasePage        page       = 5;
}

message ListReleasesResp {
    uint32                     count   = 1;
    repeated pbrelease.Release details = 2;
}

message GetReleasedCIReq {
    uint32 biz_id         = 1;
    uint32 app_id         = 2;
    uint32 config_item_id = 3;
    uint32 release_id     = 4;
}

message ListReleasedCIsReq {
    uint32                 biz_id = 1;
    google.protobuf.Struct filter = 2;
    pbbase.BasePage        page   = 3;
}

message ListReleasedCIsResp {
    uint32                            count   = 1;
    repeated pbrci.ReleasedConfigItem details = 2;
}

message CreateHookReq {
    pbhook.HookAttachment attachment = 1;
    pbhook.HookSpec       spec       = 2;
}

message ListHookTagReq {
    uint32 biz_id = 1;
}

message GetHookReq {
    uint32 biz_id  = 1;
    uint32 hook_id = 2;
}

message GetHookResp {
    uint32 id = 1;
    GetHookInfoSpec spec = 2;
    pbhook.HookAttachment attachment = 3;
    pbbase.Revision revision = 4;
}

message GetHookInfoSpec {
    string name         = 1;
    string type         = 3;
    string tag          = 4;
    string memo         = 5;
    uint32 publish_num  = 7;
    message Releases  {
        uint32 not_release_id = 1;
    }
    Releases releases  = 8;
}

message ListHooksReq {
    uint32 biz_id  = 1;
    string name    = 2;
    string tag     = 3;
    bool   all     = 5;
    bool   not_tag = 6;
    uint32 start   = 7;
    uint32 limit   = 8;
}

message ListHooksResp {
    uint32               count   = 1;
    repeated pbhook.Hook details = 2;
}

message ListHookTagResp {
    repeated pbhook.CountHookTags details = 1;
}

message DeleteHookReq {
    uint32                id         = 1;
    pbhook.HookAttachment attachment = 2;
}

message CreateHookReleaseReq {
    pbhr.HookReleaseAttachment attachment = 1;
    pbhr.HookReleaseSpec       spec       = 2;
}

message ListHookReleasesReq {
    uint32 biz_id       = 1;
    uint32 hook_id      = 2;
    string search_key   = 3;
    uint32 start        = 4;
    uint32 limit        = 5;
    bool   all          = 6;
    string state        = 7;
}

message ListHookReleasesResp {
    uint32                    count   = 1;
    repeated pbhr.HookRelease details = 2;
}

message GetHookReleaseByIdReq {
    uint32 biz_id       = 1;
    uint32 hook_id      = 2;
    uint32 id           = 3;
}

message DeleteHookReleaseReq {
    uint32 biz_id       = 1;
    uint32 hook_id      = 2;
    uint32 id           = 3;
}

message PublishHookReleaseReq {
    uint32 biz_id       = 1;
    uint32 hook_id      = 2;
    uint32 id           = 3;
}

message GetByPubStateReq {
    uint32 biz_id       = 1;
    uint32 hook_id      = 2;
    string state        = 3;
}

message UpdateHookReleaseReq {
    uint32                       id         = 1;
    pbhr.HookReleaseAttachment   attachment = 2;
    pbhr.HookReleaseSpec         spec       = 3;
}

message ListHookReleasesReferencesReq {
    uint32 biz_id       = 1;
    uint32 hook_id      = 2;
    uint32 releases_id  = 3;
    uint32 start        = 4;
    uint32 limit        = 5;
}

message ListHookReleasesReferencesResp {
    uint32   count                    = 1;
    repeated pbhr.ListHookReleasesReferencesDetails details = 2;
}

message CreateTemplateSpaceReq {
    pbts.TemplateSpaceAttachment attachment = 1;
    pbts.TemplateSpaceSpec       spec       = 2;
}

message ListTemplateSpacesReq {
    uint32 biz_id = 1;
    uint32 start  = 2;
    uint32 limit  = 3;
}

message ListTemplateSpacesResp {
    uint32                      count   = 1;
    repeated pbts.TemplateSpace details = 2;
}

message UpdateTemplateSpaceReq {
    uint32                       id         = 1;
    pbts.TemplateSpaceAttachment attachment = 2;
    pbts.TemplateSpaceSpec       spec       = 3;
}

message DeleteTemplateSpaceReq {
    uint32                       id         = 1;
    pbts.TemplateSpaceAttachment attachment = 2;
}

message CreateTemplateReq {
    pbtemplate.TemplateAttachment attachment = 1;
    pbtemplate.TemplateSpec       spec       = 2;
    pbtr.TemplateReleaseSpec      tr_spec    = 3;
}

message ListTemplatesReq {
    uint32 biz_id            = 1;
    uint32 template_space_id = 2;
    uint32 start             = 3;
    uint32 limit             = 4;
}

message ListTemplatesResp {
    uint32                       count   = 1;
    repeated pbtemplate.Template details = 2;
}

message UpdateTemplateReq {
    uint32                        id         = 1;
    pbtemplate.TemplateAttachment attachment = 2;
    pbtemplate.TemplateSpec       spec       = 3;
}

message DeleteTemplateReq {
    uint32                        id         = 1;
    pbtemplate.TemplateAttachment attachment = 2;
}

message CreateTemplateReleaseReq {
    pbtr.TemplateReleaseAttachment attachment = 1;
    pbtr.TemplateReleaseSpec       spec       = 2;
}

message ListTemplateReleasesReq {
    uint32 biz_id            = 1;
    uint32 template_space_id = 2;
    uint32 template_id       = 3;
    uint32 start             = 4;
    uint32 limit             = 5;
}

message ListTemplateReleasesResp {
    uint32                        count   = 1;
    repeated pbtr.TemplateRelease details = 2;
}

message DeleteTemplateReleaseReq {
    uint32                         id         = 1;
    pbtr.TemplateReleaseAttachment attachment = 2;
}

message CreateGroupReq {
    pbgroup.GroupAttachment attachment = 1;
    pbgroup.GroupSpec       spec       = 2;
}

message ListGroupsReq {
    uint32                 biz_id = 1;
    google.protobuf.Struct filter = 2;
    pbbase.BasePage        page   = 3;
}

message ListGroupsResp {
    uint32                 count   = 1;
    repeated pbgroup.Group details = 2;
}

message ListAppGroupsReq {
    uint32 biz_id = 1;
    uint32 app_id = 2;
}

message ListAppGroupsResp {
    message ListAppGroupsData {
        uint32                 group_id     = 1;
        string                 group_name   = 2;
        uint32                 release_id   = 3;
        string                 release_name = 4;
        google.protobuf.Struct old_selector = 5;
        google.protobuf.Struct new_selector = 6;
        bool                   edited       = 7;
    }
    repeated ListAppGroupsData details = 1;
}

message UpdateGroupReq {
    uint32                  id         = 1;
    pbgroup.GroupAttachment attachment = 2;
    pbgroup.GroupSpec       spec       = 3;
}

message DeleteGroupReq {
    uint32                  id         = 1;
    pbgroup.GroupAttachment attachment = 2;
}

message CountGroupsReleasedAppsReq {
    uint32          biz_id = 1;
    repeated uint32 groups = 2;
}

message CountGroupsReleasedAppsResp {
    message CountGroupsReleasedAppsData {
        uint32 group_id = 1;
        uint32 count    = 2;
        bool   edited   = 3;
    }
    repeated CountGroupsReleasedAppsData data = 1;
}

message ListGroupRleasesdAppsReq {
    uint32 biz_id   = 1;
    uint32 group_id = 2;
    uint32 start    = 3;
    uint32 limit    = 4;
}

message ListGroupRleasesdAppsResp {
    message ListGroupReleasedAppsData {
        uint32 app_id       = 1;
        string app_name     = 2;
        uint32 release_id   = 3;
        string release_name = 4;
        bool   edited       = 5;
    }
    uint32                             count   = 1;
    repeated ListGroupReleasedAppsData details = 2;
}

message PublishReq {
    uint32          biz_id     = 1;
    uint32          app_id     = 2;
    uint32          release_id = 3;
    string          memo       = 4;
    bool            all        = 5;
    bool            default    = 6;
    repeated uint32 groups     = 7;
}

message GenerateReleaseAndPublishReq {
    uint32          biz_id       = 1;
    uint32          app_id       = 2;
    string          release_name = 3;
    string          release_memo = 4;
    bool            all          = 5;
    repeated string groups       = 6;
}

message PublishResp {
    uint32 published_strategy_history_id = 1;
}

message ListInstancesReq {
    string                 resource_type = 1;
    uint32                 biz_id        = 2;
    google.protobuf.Struct filter        = 3;
    pbbase.BasePage        page          = 4;
}

message ListInstancesResp {
    uint32                    count   = 1;
    repeated InstanceResource details = 2;
}

message InstanceResource {
    uint32 id   = 1;
    string name = 2;
}

message PingMsg {
    string data = 1;
}
