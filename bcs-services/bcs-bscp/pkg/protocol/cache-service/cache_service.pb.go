// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: cache_service.proto

package pbcs

import (
	app "github.com/TencentBlueking/bk-bcs/bcs-services/bcs-bscp/pkg/protocol/core/app"
	base "github.com/TencentBlueking/bk-bcs/bcs-services/bcs-bscp/pkg/protocol/core/base"
	event "github.com/TencentBlueking/bk-bcs/bcs-services/bcs-bscp/pkg/protocol/core/event"
	released_ci "github.com/TencentBlueking/bk-bcs/bcs-services/bcs-bscp/pkg/protocol/core/released-ci"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JsonRawResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonRaw string `protobuf:"bytes,1,opt,name=json_raw,json=jsonRaw,proto3" json:"json_raw,omitempty"`
}

func (x *JsonRawResp) Reset() {
	*x = JsonRawResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonRawResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonRawResp) ProtoMessage() {}

func (x *JsonRawResp) ProtoReflect() protoreflect.Message {
	mi := &file_cache_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonRawResp.ProtoReflect.Descriptor instead.
func (*JsonRawResp) Descriptor() ([]byte, []int) {
	return file_cache_service_proto_rawDescGZIP(), []int{0}
}

func (x *JsonRawResp) GetJsonRaw() string {
	if x != nil {
		return x.JsonRaw
	}
	return ""
}

type GetAppIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId   uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppName string `protobuf:"bytes,2,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
}

func (x *GetAppIDReq) Reset() {
	*x = GetAppIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppIDReq) ProtoMessage() {}

func (x *GetAppIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_cache_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppIDReq.ProtoReflect.Descriptor instead.
func (*GetAppIDReq) Descriptor() ([]byte, []int) {
	return file_cache_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetAppIDReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetAppIDReq) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

type GetAppIDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId uint32 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *GetAppIDResp) Reset() {
	*x = GetAppIDResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppIDResp) ProtoMessage() {}

func (x *GetAppIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_cache_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppIDResp.ProtoReflect.Descriptor instead.
func (*GetAppIDResp) Descriptor() ([]byte, []int) {
	return file_cache_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetAppIDResp) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type GetAppMetaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId uint32 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *GetAppMetaReq) Reset() {
	*x = GetAppMetaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppMetaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppMetaReq) ProtoMessage() {}

func (x *GetAppMetaReq) ProtoReflect() protoreflect.Message {
	mi := &file_cache_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppMetaReq.ProtoReflect.Descriptor instead.
func (*GetAppMetaReq) Descriptor() ([]byte, []int) {
	return file_cache_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetAppMetaReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetAppMetaReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type GetReleasedCIReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId     uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	ReleaseId uint32 `protobuf:"varint,2,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
}

func (x *GetReleasedCIReq) Reset() {
	*x = GetReleasedCIReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReleasedCIReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReleasedCIReq) ProtoMessage() {}

func (x *GetReleasedCIReq) ProtoReflect() protoreflect.Message {
	mi := &file_cache_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReleasedCIReq.ProtoReflect.Descriptor instead.
func (*GetReleasedCIReq) Descriptor() ([]byte, []int) {
	return file_cache_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetReleasedCIReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetReleasedCIReq) GetReleaseId() uint32 {
	if x != nil {
		return x.ReleaseId
	}
	return 0
}

type GetReleasedHookReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId     uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	ReleaseId uint32 `protobuf:"varint,2,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
}

func (x *GetReleasedHookReq) Reset() {
	*x = GetReleasedHookReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReleasedHookReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReleasedHookReq) ProtoMessage() {}

func (x *GetReleasedHookReq) ProtoReflect() protoreflect.Message {
	mi := &file_cache_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReleasedHookReq.ProtoReflect.Descriptor instead.
func (*GetReleasedHookReq) Descriptor() ([]byte, []int) {
	return file_cache_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetReleasedHookReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetReleasedHookReq) GetReleaseId() uint32 {
	if x != nil {
		return x.ReleaseId
	}
	return 0
}

type ListAppReleasedGroupsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId uint32 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *ListAppReleasedGroupsReq) Reset() {
	*x = ListAppReleasedGroupsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppReleasedGroupsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppReleasedGroupsReq) ProtoMessage() {}

func (x *ListAppReleasedGroupsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cache_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppReleasedGroupsReq.ProtoReflect.Descriptor instead.
func (*ListAppReleasedGroupsReq) Descriptor() ([]byte, []int) {
	return file_cache_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListAppReleasedGroupsReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListAppReleasedGroupsReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type JsonArrayRawResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonRaw []string `protobuf:"bytes,1,rep,name=json_raw,json=jsonRaw,proto3" json:"json_raw,omitempty"`
}

func (x *JsonArrayRawResp) Reset() {
	*x = JsonArrayRawResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonArrayRawResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonArrayRawResp) ProtoMessage() {}

func (x *JsonArrayRawResp) ProtoReflect() protoreflect.Message {
	mi := &file_cache_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonArrayRawResp.ProtoReflect.Descriptor instead.
func (*JsonArrayRawResp) Descriptor() ([]byte, []int) {
	return file_cache_service_proto_rawDescGZIP(), []int{7}
}

func (x *JsonArrayRawResp) GetJsonRaw() []string {
	if x != nil {
		return x.JsonRaw
	}
	return nil
}

type BenchAppMetaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId  uint32   `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppIds []uint32 `protobuf:"varint,2,rep,packed,name=app_ids,json=appIds,proto3" json:"app_ids,omitempty"`
}

func (x *BenchAppMetaReq) Reset() {
	*x = BenchAppMetaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BenchAppMetaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BenchAppMetaReq) ProtoMessage() {}

func (x *BenchAppMetaReq) ProtoReflect() protoreflect.Message {
	mi := &file_cache_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BenchAppMetaReq.ProtoReflect.Descriptor instead.
func (*BenchAppMetaReq) Descriptor() ([]byte, []int) {
	return file_cache_service_proto_rawDescGZIP(), []int{8}
}

func (x *BenchAppMetaReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *BenchAppMetaReq) GetAppIds() []uint32 {
	if x != nil {
		return x.AppIds
	}
	return nil
}

type BenchAppMetaResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta map[uint32]*AppMeta `protobuf:"bytes,1,rep,name=meta,proto3" json:"meta,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BenchAppMetaResp) Reset() {
	*x = BenchAppMetaResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BenchAppMetaResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BenchAppMetaResp) ProtoMessage() {}

func (x *BenchAppMetaResp) ProtoReflect() protoreflect.Message {
	mi := &file_cache_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BenchAppMetaResp.ProtoReflect.Descriptor instead.
func (*BenchAppMetaResp) Descriptor() ([]byte, []int) {
	return file_cache_service_proto_rawDescGZIP(), []int{9}
}

func (x *BenchAppMetaResp) GetMeta() map[uint32]*AppMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type AppMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cft    string      `protobuf:"bytes,2,opt,name=cft,proto3" json:"cft,omitempty"`
	Dpt    string      `protobuf:"bytes,3,opt,name=dpt,proto3" json:"dpt,omitempty"`
	Mod    string      `protobuf:"bytes,4,opt,name=mod,proto3" json:"mod,omitempty"`
	Reload *app.Reload `protobuf:"bytes,5,opt,name=reload,proto3" json:"reload,omitempty"`
}

func (x *AppMeta) Reset() {
	*x = AppMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMeta) ProtoMessage() {}

func (x *AppMeta) ProtoReflect() protoreflect.Message {
	mi := &file_cache_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMeta.ProtoReflect.Descriptor instead.
func (*AppMeta) Descriptor() ([]byte, []int) {
	return file_cache_service_proto_rawDescGZIP(), []int{10}
}

func (x *AppMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppMeta) GetCft() string {
	if x != nil {
		return x.Cft
	}
	return ""
}

func (x *AppMeta) GetDpt() string {
	if x != nil {
		return x.Dpt
	}
	return ""
}

func (x *AppMeta) GetMod() string {
	if x != nil {
		return x.Mod
	}
	return ""
}

func (x *AppMeta) GetReload() *app.Reload {
	if x != nil {
		return x.Reload
	}
	return nil
}

type AppCRIMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ReleaseId uint32 `protobuf:"varint,2,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
}

func (x *AppCRIMeta) Reset() {
	*x = AppCRIMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppCRIMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppCRIMeta) ProtoMessage() {}

func (x *AppCRIMeta) ProtoReflect() protoreflect.Message {
	mi := &file_cache_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppCRIMeta.ProtoReflect.Descriptor instead.
func (*AppCRIMeta) Descriptor() ([]byte, []int) {
	return file_cache_service_proto_rawDescGZIP(), []int{11}
}

func (x *AppCRIMeta) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AppCRIMeta) GetReleaseId() uint32 {
	if x != nil {
		return x.ReleaseId
	}
	return 0
}

type BenchReleasedCIReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId     uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	ReleaseId uint32 `protobuf:"varint,2,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
}

func (x *BenchReleasedCIReq) Reset() {
	*x = BenchReleasedCIReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BenchReleasedCIReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BenchReleasedCIReq) ProtoMessage() {}

func (x *BenchReleasedCIReq) ProtoReflect() protoreflect.Message {
	mi := &file_cache_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BenchReleasedCIReq.ProtoReflect.Descriptor instead.
func (*BenchReleasedCIReq) Descriptor() ([]byte, []int) {
	return file_cache_service_proto_rawDescGZIP(), []int{12}
}

func (x *BenchReleasedCIReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *BenchReleasedCIReq) GetReleaseId() uint32 {
	if x != nil {
		return x.ReleaseId
	}
	return 0
}

type BenchReleasedCIResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta []*released_ci.ReleasedConfigItem `protobuf:"bytes,1,rep,name=meta,proto3" json:"meta,omitempty"`
}

func (x *BenchReleasedCIResp) Reset() {
	*x = BenchReleasedCIResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BenchReleasedCIResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BenchReleasedCIResp) ProtoMessage() {}

func (x *BenchReleasedCIResp) ProtoReflect() protoreflect.Message {
	mi := &file_cache_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BenchReleasedCIResp.ProtoReflect.Descriptor instead.
func (*BenchReleasedCIResp) Descriptor() ([]byte, []int) {
	return file_cache_service_proto_rawDescGZIP(), []int{13}
}

func (x *BenchReleasedCIResp) GetMeta() []*released_ci.ReleasedConfigItem {
	if x != nil {
		return x.Meta
	}
	return nil
}

// the current consumed event's cursor which is also event's id.
type CurrentCursorReminderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cursor uint32 `protobuf:"varint,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *CurrentCursorReminderResp) Reset() {
	*x = CurrentCursorReminderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentCursorReminderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentCursorReminderResp) ProtoMessage() {}

func (x *CurrentCursorReminderResp) ProtoReflect() protoreflect.Message {
	mi := &file_cache_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentCursorReminderResp.ProtoReflect.Descriptor instead.
func (*CurrentCursorReminderResp) Descriptor() ([]byte, []int) {
	return file_cache_service_proto_rawDescGZIP(), []int{14}
}

func (x *CurrentCursorReminderResp) GetCursor() uint32 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

type ListEventsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartCursor uint32 `protobuf:"varint,1,opt,name=startCursor,proto3" json:"startCursor,omitempty"`
	// max page limit is 200
	Page *base.BasePage `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListEventsReq) Reset() {
	*x = ListEventsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEventsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsReq) ProtoMessage() {}

func (x *ListEventsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cache_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsReq.ProtoReflect.Descriptor instead.
func (*ListEventsReq) Descriptor() ([]byte, []int) {
	return file_cache_service_proto_rawDescGZIP(), []int{15}
}

func (x *ListEventsReq) GetStartCursor() uint32 {
	if x != nil {
		return x.StartCursor
	}
	return 0
}

func (x *ListEventsReq) GetPage() *base.BasePage {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListEventsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*EventMeta `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListEventsResp) Reset() {
	*x = ListEventsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEventsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsResp) ProtoMessage() {}

func (x *ListEventsResp) ProtoReflect() protoreflect.Message {
	mi := &file_cache_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsResp.ProtoReflect.Descriptor instead.
func (*ListEventsResp) Descriptor() ([]byte, []int) {
	return file_cache_service_proto_rawDescGZIP(), []int{16}
}

func (x *ListEventsResp) GetList() []*EventMeta {
	if x != nil {
		return x.List
	}
	return nil
}

type EventMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Spec       *event.EventSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Attachment *event.EventAttachment `protobuf:"bytes,3,opt,name=attachment,proto3" json:"attachment,omitempty"`
}

func (x *EventMeta) Reset() {
	*x = EventMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMeta) ProtoMessage() {}

func (x *EventMeta) ProtoReflect() protoreflect.Message {
	mi := &file_cache_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMeta.ProtoReflect.Descriptor instead.
func (*EventMeta) Descriptor() ([]byte, []int) {
	return file_cache_service_proto_rawDescGZIP(), []int{17}
}

func (x *EventMeta) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EventMeta) GetSpec() *event.EventSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *EventMeta) GetAttachment() *event.EventAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type ListCredentialMatchedCIReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId      uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Credential string `protobuf:"bytes,2,opt,name=credential,proto3" json:"credential,omitempty"`
}

func (x *ListCredentialMatchedCIReq) Reset() {
	*x = ListCredentialMatchedCIReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCredentialMatchedCIReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCredentialMatchedCIReq) ProtoMessage() {}

func (x *ListCredentialMatchedCIReq) ProtoReflect() protoreflect.Message {
	mi := &file_cache_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCredentialMatchedCIReq.ProtoReflect.Descriptor instead.
func (*ListCredentialMatchedCIReq) Descriptor() ([]byte, []int) {
	return file_cache_service_proto_rawDescGZIP(), []int{18}
}

func (x *ListCredentialMatchedCIReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListCredentialMatchedCIReq) GetCredential() string {
	if x != nil {
		return x.Credential
	}
	return ""
}

type GetCredentialReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId      uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Credential string `protobuf:"bytes,2,opt,name=credential,proto3" json:"credential,omitempty"`
}

func (x *GetCredentialReq) Reset() {
	*x = GetCredentialReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialReq) ProtoMessage() {}

func (x *GetCredentialReq) ProtoReflect() protoreflect.Message {
	mi := &file_cache_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialReq.ProtoReflect.Descriptor instead.
func (*GetCredentialReq) Descriptor() ([]byte, []int) {
	return file_cache_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetCredentialReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetCredentialReq) GetCredential() string {
	if x != nil {
		return x.Credential
	}
	return ""
}

type GetReleasedKvReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId     uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId     uint32 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	ReleaseId uint32 `protobuf:"varint,3,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
}

func (x *GetReleasedKvReq) Reset() {
	*x = GetReleasedKvReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReleasedKvReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReleasedKvReq) ProtoMessage() {}

func (x *GetReleasedKvReq) ProtoReflect() protoreflect.Message {
	mi := &file_cache_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReleasedKvReq.ProtoReflect.Descriptor instead.
func (*GetReleasedKvReq) Descriptor() ([]byte, []int) {
	return file_cache_service_proto_rawDescGZIP(), []int{20}
}

func (x *GetReleasedKvReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetReleasedKvReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *GetReleasedKvReq) GetReleaseId() uint32 {
	if x != nil {
		return x.ReleaseId
	}
	return 0
}

type GetReleasedKvValueReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId     uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	ReleaseId uint32 `protobuf:"varint,2,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
	AppId     uint32 `protobuf:"varint,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Key       string `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetReleasedKvValueReq) Reset() {
	*x = GetReleasedKvValueReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReleasedKvValueReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReleasedKvValueReq) ProtoMessage() {}

func (x *GetReleasedKvValueReq) ProtoReflect() protoreflect.Message {
	mi := &file_cache_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReleasedKvValueReq.ProtoReflect.Descriptor instead.
func (*GetReleasedKvValueReq) Descriptor() ([]byte, []int) {
	return file_cache_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetReleasedKvValueReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetReleasedKvValueReq) GetReleaseId() uint32 {
	if x != nil {
		return x.ReleaseId
	}
	return 0
}

func (x *GetReleasedKvValueReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *GetReleasedKvValueReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

var File_cache_service_proto protoreflect.FileDescriptor

var file_cache_service_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x70, 0x62, 0x63, 0x73, 0x1a, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x2d, 0x63, 0x69, 0x2f, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x64, 0x5f, 0x63, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x70, 0x6b,
	0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x21, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x61, 0x70, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x28, 0x0a, 0x0b, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x22, 0x3f, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06,
	0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69,
	0x7a, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x25,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x15,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x64, 0x43, 0x49, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x22, 0x4a,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x48, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x18, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x10, 0x4a, 0x73, 0x6f, 0x6e, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e,
	0x5f, 0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e,
	0x52, 0x61, 0x77, 0x22, 0x41, 0x0a, 0x0f, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x41, 0x70, 0x70, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x10, 0x42, 0x65, 0x6e, 0x63, 0x68,
	0x41, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x63, 0x73,
	0x2e, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x1a, 0x46, 0x0a, 0x09, 0x4d, 0x65, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x62, 0x63, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7a, 0x0a, 0x07, 0x41, 0x70, 0x70,
	0x4d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x66, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x66, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x70,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x70, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x6f, 0x64, 0x12, 0x25,
	0x0a, 0x06, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x62, 0x61, 0x70, 0x70, 0x2e, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x06, 0x72,
	0x65, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x3d, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x43, 0x52, 0x49, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x12, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x64, 0x43, 0x49, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69,
	0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64,
	0x22, 0x44, 0x0a, 0x13, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x64, 0x43, 0x49, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x72, 0x63, 0x69, 0x2e, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x33, 0x0a, 0x19, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x57, 0x0a, 0x0d, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x24,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x22, 0x35, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x63, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x7d, 0x0a, 0x09, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63,
	0x12, 0x38, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x53, 0x0a, 0x1a, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x64, 0x43, 0x49, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22,
	0x49, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0x5f, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x4b, 0x76, 0x52, 0x65, 0x71, 0x12, 0x15,
	0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x22, 0x76, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x4b, 0x76, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x32, 0xd8, 0x0a, 0x0a, 0x05, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x6c, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x63, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70,
	0x62, 0x63, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x12, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2f, 0x62, 0x69, 0x7a, 0x2f, 0x7b, 0x62, 0x69, 0x7a,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x12, 0x6b, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x63, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x11,
	0x2e, 0x70, 0x62, 0x63, 0x73, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x3a, 0x01, 0x2a, 0x22, 0x2a, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x2f,
	0x61, 0x70, 0x70, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x2f,
	0x7b, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x70, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x43, 0x49, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x63, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x43, 0x49, 0x52, 0x65,
	0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x63, 0x73, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x61, 0x77,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x3a, 0x01, 0x2a, 0x22,
	0x29, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2f, 0x63,
	0x69, 0x2f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x2f, 0x62, 0x69, 0x7a, 0x5f, 0x69,
	0x64, 0x2f, 0x7b, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x76, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x18, 0x2e,
	0x70, 0x62, 0x63, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64,
	0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x63, 0x73, 0x2e, 0x4a,
	0x73, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x30, 0x3a, 0x01, 0x2a, 0x22, 0x2b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x2f, 0x68, 0x6f, 0x6f, 0x6b, 0x2f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x64, 0x2f, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x2f, 0x7b, 0x62, 0x69, 0x7a, 0x5f, 0x69,
	0x64, 0x7d, 0x12, 0x8c, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x1e, 0x2e, 0x70,
	0x62, 0x63, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70,
	0x62, 0x63, 0x73, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3a, 0x12, 0x38, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2f, 0x62, 0x69, 0x7a, 0x2f, 0x7b, 0x62, 0x69, 0x7a, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x12, 0x83, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x10,
	0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x63, 0x73, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x3a, 0x01, 0x2a, 0x22, 0x29, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74,
	0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x6b, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x63, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x14,
	0x2e, 0x70, 0x62, 0x63, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a, 0x22,
	0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2f, 0x6c,
	0x69, 0x73, 0x74, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f,
	0x6d, 0x65, 0x74, 0x61, 0x12, 0x76, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x63, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e,
	0x70, 0x62, 0x63, 0x73, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x12, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2f, 0x62, 0x69, 0x7a, 0x2f, 0x7b, 0x62, 0x69, 0x7a,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2f,
	0x7b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x7d, 0x12, 0x3f, 0x0a, 0x0c,
	0x42, 0x65, 0x6e, 0x63, 0x68, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x15, 0x2e, 0x70,
	0x62, 0x63, 0x73, 0x2e, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x63, 0x73, 0x2e, 0x42, 0x65, 0x6e, 0x63, 0x68,
	0x41, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x48, 0x0a,
	0x0f, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x43, 0x49,
	0x12, 0x18, 0x2e, 0x70, 0x62, 0x63, 0x73, 0x2e, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x64, 0x43, 0x49, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x63,
	0x73, 0x2e, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x43,
	0x49, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x4b, 0x76, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x63, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x4b, 0x76, 0x52, 0x65, 0x71,
	0x1a, 0x11, 0x2e, 0x70, 0x62, 0x63, 0x73, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x3a, 0x01, 0x2a, 0x22, 0x29,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2f, 0x6b, 0x76,
	0x2f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x2f, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64,
	0x2f, 0x7b, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x92, 0x01, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x4b, 0x76, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1b, 0x2e, 0x70, 0x62, 0x63, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x64, 0x4b, 0x76, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e,
	0x70, 0x62, 0x63, 0x73, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x4c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x46, 0x3a, 0x01, 0x2a, 0x22, 0x41, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2f, 0x6b, 0x76, 0x2f, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x2f, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x2f, 0x7b, 0x62,
	0x69, 0x7a, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x65, 0x79, 0x2f, 0x7b, 0x6b, 0x65, 0x79, 0x7d, 0x42, 0x59,
	0x5a, 0x57, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54, 0x65, 0x6e,
	0x63, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x62, 0x6b, 0x2d,
	0x62, 0x63, 0x73, 0x2f, 0x62, 0x63, 0x73, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x62, 0x63, 0x73, 0x2d, 0x62, 0x73, 0x63, 0x70, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x3b, 0x70, 0x62, 0x63, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_cache_service_proto_rawDescOnce sync.Once
	file_cache_service_proto_rawDescData = file_cache_service_proto_rawDesc
)

func file_cache_service_proto_rawDescGZIP() []byte {
	file_cache_service_proto_rawDescOnce.Do(func() {
		file_cache_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_cache_service_proto_rawDescData)
	})
	return file_cache_service_proto_rawDescData
}

var file_cache_service_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_cache_service_proto_goTypes = []interface{}{
	(*JsonRawResp)(nil),                    // 0: pbcs.JsonRawResp
	(*GetAppIDReq)(nil),                    // 1: pbcs.GetAppIDReq
	(*GetAppIDResp)(nil),                   // 2: pbcs.GetAppIDResp
	(*GetAppMetaReq)(nil),                  // 3: pbcs.GetAppMetaReq
	(*GetReleasedCIReq)(nil),               // 4: pbcs.GetReleasedCIReq
	(*GetReleasedHookReq)(nil),             // 5: pbcs.GetReleasedHookReq
	(*ListAppReleasedGroupsReq)(nil),       // 6: pbcs.ListAppReleasedGroupsReq
	(*JsonArrayRawResp)(nil),               // 7: pbcs.JsonArrayRawResp
	(*BenchAppMetaReq)(nil),                // 8: pbcs.BenchAppMetaReq
	(*BenchAppMetaResp)(nil),               // 9: pbcs.BenchAppMetaResp
	(*AppMeta)(nil),                        // 10: pbcs.AppMeta
	(*AppCRIMeta)(nil),                     // 11: pbcs.AppCRIMeta
	(*BenchReleasedCIReq)(nil),             // 12: pbcs.BenchReleasedCIReq
	(*BenchReleasedCIResp)(nil),            // 13: pbcs.BenchReleasedCIResp
	(*CurrentCursorReminderResp)(nil),      // 14: pbcs.CurrentCursorReminderResp
	(*ListEventsReq)(nil),                  // 15: pbcs.ListEventsReq
	(*ListEventsResp)(nil),                 // 16: pbcs.ListEventsResp
	(*EventMeta)(nil),                      // 17: pbcs.EventMeta
	(*ListCredentialMatchedCIReq)(nil),     // 18: pbcs.ListCredentialMatchedCIReq
	(*GetCredentialReq)(nil),               // 19: pbcs.GetCredentialReq
	(*GetReleasedKvReq)(nil),               // 20: pbcs.GetReleasedKvReq
	(*GetReleasedKvValueReq)(nil),          // 21: pbcs.GetReleasedKvValueReq
	nil,                                    // 22: pbcs.BenchAppMetaResp.MetaEntry
	(*app.Reload)(nil),                     // 23: pbapp.Reload
	(*released_ci.ReleasedConfigItem)(nil), // 24: pbrci.ReleasedConfigItem
	(*base.BasePage)(nil),                  // 25: pbbase.BasePage
	(*event.EventSpec)(nil),                // 26: pbevent.EventSpec
	(*event.EventAttachment)(nil),          // 27: pbevent.EventAttachment
	(*base.EmptyReq)(nil),                  // 28: pbbase.EmptyReq
}
var file_cache_service_proto_depIdxs = []int32{
	22, // 0: pbcs.BenchAppMetaResp.meta:type_name -> pbcs.BenchAppMetaResp.MetaEntry
	23, // 1: pbcs.AppMeta.reload:type_name -> pbapp.Reload
	24, // 2: pbcs.BenchReleasedCIResp.meta:type_name -> pbrci.ReleasedConfigItem
	25, // 3: pbcs.ListEventsReq.page:type_name -> pbbase.BasePage
	17, // 4: pbcs.ListEventsResp.list:type_name -> pbcs.EventMeta
	26, // 5: pbcs.EventMeta.spec:type_name -> pbevent.EventSpec
	27, // 6: pbcs.EventMeta.attachment:type_name -> pbevent.EventAttachment
	10, // 7: pbcs.BenchAppMetaResp.MetaEntry.value:type_name -> pbcs.AppMeta
	1,  // 8: pbcs.Cache.GetAppID:input_type -> pbcs.GetAppIDReq
	3,  // 9: pbcs.Cache.GetAppMeta:input_type -> pbcs.GetAppMetaReq
	4,  // 10: pbcs.Cache.GetReleasedCI:input_type -> pbcs.GetReleasedCIReq
	5,  // 11: pbcs.Cache.GetReleasedHook:input_type -> pbcs.GetReleasedHookReq
	6,  // 12: pbcs.Cache.ListAppReleasedGroups:input_type -> pbcs.ListAppReleasedGroupsReq
	28, // 13: pbcs.Cache.GetCurrentCursorReminder:input_type -> pbbase.EmptyReq
	15, // 14: pbcs.Cache.ListEventsMeta:input_type -> pbcs.ListEventsReq
	19, // 15: pbcs.Cache.GetCredential:input_type -> pbcs.GetCredentialReq
	8,  // 16: pbcs.Cache.BenchAppMeta:input_type -> pbcs.BenchAppMetaReq
	12, // 17: pbcs.Cache.BenchReleasedCI:input_type -> pbcs.BenchReleasedCIReq
	20, // 18: pbcs.Cache.GetReleasedKv:input_type -> pbcs.GetReleasedKvReq
	21, // 19: pbcs.Cache.GetReleasedKvValue:input_type -> pbcs.GetReleasedKvValueReq
	2,  // 20: pbcs.Cache.GetAppID:output_type -> pbcs.GetAppIDResp
	0,  // 21: pbcs.Cache.GetAppMeta:output_type -> pbcs.JsonRawResp
	0,  // 22: pbcs.Cache.GetReleasedCI:output_type -> pbcs.JsonRawResp
	0,  // 23: pbcs.Cache.GetReleasedHook:output_type -> pbcs.JsonRawResp
	0,  // 24: pbcs.Cache.ListAppReleasedGroups:output_type -> pbcs.JsonRawResp
	14, // 25: pbcs.Cache.GetCurrentCursorReminder:output_type -> pbcs.CurrentCursorReminderResp
	16, // 26: pbcs.Cache.ListEventsMeta:output_type -> pbcs.ListEventsResp
	0,  // 27: pbcs.Cache.GetCredential:output_type -> pbcs.JsonRawResp
	9,  // 28: pbcs.Cache.BenchAppMeta:output_type -> pbcs.BenchAppMetaResp
	13, // 29: pbcs.Cache.BenchReleasedCI:output_type -> pbcs.BenchReleasedCIResp
	0,  // 30: pbcs.Cache.GetReleasedKv:output_type -> pbcs.JsonRawResp
	0,  // 31: pbcs.Cache.GetReleasedKvValue:output_type -> pbcs.JsonRawResp
	20, // [20:32] is the sub-list for method output_type
	8,  // [8:20] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_cache_service_proto_init() }
func file_cache_service_proto_init() {
	if File_cache_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cache_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonRawResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppIDResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppMetaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReleasedCIReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReleasedHookReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppReleasedGroupsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonArrayRawResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BenchAppMetaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BenchAppMetaResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppCRIMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BenchReleasedCIReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BenchReleasedCIResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrentCursorReminderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEventsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEventsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCredentialMatchedCIReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReleasedKvReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReleasedKvValueReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cache_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cache_service_proto_goTypes,
		DependencyIndexes: file_cache_service_proto_depIdxs,
		MessageInfos:      file_cache_service_proto_msgTypes,
	}.Build()
	File_cache_service_proto = out.File
	file_cache_service_proto_rawDesc = nil
	file_cache_service_proto_goTypes = nil
	file_cache_service_proto_depIdxs = nil
}
