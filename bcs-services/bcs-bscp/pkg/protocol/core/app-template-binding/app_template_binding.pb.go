// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.22.0
// source: app_template_binding.proto

package pbatb

import (
	base "bscp.io/pkg/protocol/core/base"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AppTemplateBinding source resource reference: pkg/dal/table/app_template_binding.go
type AppTemplateBinding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Spec       *AppTemplateBindingSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Attachment *AppTemplateBindingAttachment `protobuf:"bytes,3,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Revision   *base.Revision                `protobuf:"bytes,4,opt,name=revision,proto3" json:"revision,omitempty"`
}

func (x *AppTemplateBinding) Reset() {
	*x = AppTemplateBinding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_template_binding_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppTemplateBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppTemplateBinding) ProtoMessage() {}

func (x *AppTemplateBinding) ProtoReflect() protoreflect.Message {
	mi := &file_app_template_binding_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppTemplateBinding.ProtoReflect.Descriptor instead.
func (*AppTemplateBinding) Descriptor() ([]byte, []int) {
	return file_app_template_binding_proto_rawDescGZIP(), []int{0}
}

func (x *AppTemplateBinding) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AppTemplateBinding) GetSpec() *AppTemplateBindingSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *AppTemplateBinding) GetAttachment() *AppTemplateBindingAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *AppTemplateBinding) GetRevision() *base.Revision {
	if x != nil {
		return x.Revision
	}
	return nil
}

// AppTemplateBindingSpec source resource reference: pkg/dal/table/app_template_binding.go
type AppTemplateBindingSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateSpaceIds    []uint32           `protobuf:"varint,1,rep,packed,name=template_space_ids,json=templateSpaceIds,proto3" json:"template_space_ids,omitempty"`
	TemplateSetIds      []uint32           `protobuf:"varint,2,rep,packed,name=template_set_ids,json=templateSetIds,proto3" json:"template_set_ids,omitempty"`
	TemplateIds         []uint32           `protobuf:"varint,3,rep,packed,name=template_ids,json=templateIds,proto3" json:"template_ids,omitempty"`
	TemplateRevisionIds []uint32           `protobuf:"varint,4,rep,packed,name=template_revision_ids,json=templateRevisionIds,proto3" json:"template_revision_ids,omitempty"`
	LatestTemplateIds   []uint32           `protobuf:"varint,5,rep,packed,name=latest_template_ids,json=latestTemplateIds,proto3" json:"latest_template_ids,omitempty"`
	Bindings            []*TemplateBinding `protobuf:"bytes,6,rep,name=bindings,proto3" json:"bindings,omitempty"`
}

func (x *AppTemplateBindingSpec) Reset() {
	*x = AppTemplateBindingSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_template_binding_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppTemplateBindingSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppTemplateBindingSpec) ProtoMessage() {}

func (x *AppTemplateBindingSpec) ProtoReflect() protoreflect.Message {
	mi := &file_app_template_binding_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppTemplateBindingSpec.ProtoReflect.Descriptor instead.
func (*AppTemplateBindingSpec) Descriptor() ([]byte, []int) {
	return file_app_template_binding_proto_rawDescGZIP(), []int{1}
}

func (x *AppTemplateBindingSpec) GetTemplateSpaceIds() []uint32 {
	if x != nil {
		return x.TemplateSpaceIds
	}
	return nil
}

func (x *AppTemplateBindingSpec) GetTemplateSetIds() []uint32 {
	if x != nil {
		return x.TemplateSetIds
	}
	return nil
}

func (x *AppTemplateBindingSpec) GetTemplateIds() []uint32 {
	if x != nil {
		return x.TemplateIds
	}
	return nil
}

func (x *AppTemplateBindingSpec) GetTemplateRevisionIds() []uint32 {
	if x != nil {
		return x.TemplateRevisionIds
	}
	return nil
}

func (x *AppTemplateBindingSpec) GetLatestTemplateIds() []uint32 {
	if x != nil {
		return x.LatestTemplateIds
	}
	return nil
}

func (x *AppTemplateBindingSpec) GetBindings() []*TemplateBinding {
	if x != nil {
		return x.Bindings
	}
	return nil
}

// TemplateBinding source resource reference: pkg/dal/table/app_template_binding.go
type TemplateBinding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateSetId     uint32                     `protobuf:"varint,1,opt,name=template_set_id,json=templateSetId,proto3" json:"template_set_id,omitempty"`
	TemplateRevisions []*TemplateRevisionBinding `protobuf:"bytes,2,rep,name=template_revisions,json=templateRevisions,proto3" json:"template_revisions,omitempty"`
}

func (x *TemplateBinding) Reset() {
	*x = TemplateBinding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_template_binding_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateBinding) ProtoMessage() {}

func (x *TemplateBinding) ProtoReflect() protoreflect.Message {
	mi := &file_app_template_binding_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateBinding.ProtoReflect.Descriptor instead.
func (*TemplateBinding) Descriptor() ([]byte, []int) {
	return file_app_template_binding_proto_rawDescGZIP(), []int{2}
}

func (x *TemplateBinding) GetTemplateSetId() uint32 {
	if x != nil {
		return x.TemplateSetId
	}
	return 0
}

func (x *TemplateBinding) GetTemplateRevisions() []*TemplateRevisionBinding {
	if x != nil {
		return x.TemplateRevisions
	}
	return nil
}

type TemplateRevisionBinding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId         uint32 `protobuf:"varint,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	TemplateRevisionId uint32 `protobuf:"varint,2,opt,name=template_revision_id,json=templateRevisionId,proto3" json:"template_revision_id,omitempty"`
	IsLatest           bool   `protobuf:"varint,3,opt,name=is_latest,json=isLatest,proto3" json:"is_latest,omitempty"`
}

func (x *TemplateRevisionBinding) Reset() {
	*x = TemplateRevisionBinding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_template_binding_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateRevisionBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateRevisionBinding) ProtoMessage() {}

func (x *TemplateRevisionBinding) ProtoReflect() protoreflect.Message {
	mi := &file_app_template_binding_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateRevisionBinding.ProtoReflect.Descriptor instead.
func (*TemplateRevisionBinding) Descriptor() ([]byte, []int) {
	return file_app_template_binding_proto_rawDescGZIP(), []int{3}
}

func (x *TemplateRevisionBinding) GetTemplateId() uint32 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *TemplateRevisionBinding) GetTemplateRevisionId() uint32 {
	if x != nil {
		return x.TemplateRevisionId
	}
	return 0
}

func (x *TemplateRevisionBinding) GetIsLatest() bool {
	if x != nil {
		return x.IsLatest
	}
	return false
}

// AppTemplateBindingAttachment source resource reference: pkg/dal/table/app_template_binding.go
type AppTemplateBindingAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId uint32 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *AppTemplateBindingAttachment) Reset() {
	*x = AppTemplateBindingAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_template_binding_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppTemplateBindingAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppTemplateBindingAttachment) ProtoMessage() {}

func (x *AppTemplateBindingAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_app_template_binding_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppTemplateBindingAttachment.ProtoReflect.Descriptor instead.
func (*AppTemplateBindingAttachment) Descriptor() ([]byte, []int) {
	return file_app_template_binding_proto_rawDescGZIP(), []int{4}
}

func (x *AppTemplateBindingAttachment) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *AppTemplateBindingAttachment) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

// AppBoundTmplRevision is app bound template revision
type AppBoundTmplRevision struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateSpaceId      uint32 `protobuf:"varint,1,opt,name=template_space_id,json=templateSpaceId,proto3" json:"template_space_id,omitempty"`
	TemplateSpaceName    string `protobuf:"bytes,2,opt,name=template_space_name,json=templateSpaceName,proto3" json:"template_space_name,omitempty"`
	TemplateSetId        uint32 `protobuf:"varint,3,opt,name=template_set_id,json=templateSetId,proto3" json:"template_set_id,omitempty"`
	TemplateSetName      string `protobuf:"bytes,4,opt,name=template_set_name,json=templateSetName,proto3" json:"template_set_name,omitempty"`
	TemplateId           uint32 `protobuf:"varint,5,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	Name                 string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Path                 string `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"`
	TemplateRevisionId   uint32 `protobuf:"varint,8,opt,name=template_revision_id,json=templateRevisionId,proto3" json:"template_revision_id,omitempty"`
	IsLatest             bool   `protobuf:"varint,9,opt,name=is_latest,json=isLatest,proto3" json:"is_latest,omitempty"`
	TemplateRevisionName string `protobuf:"bytes,10,opt,name=template_revision_name,json=templateRevisionName,proto3" json:"template_revision_name,omitempty"`
	TemplateRevisionMemo string `protobuf:"bytes,11,opt,name=template_revision_memo,json=templateRevisionMemo,proto3" json:"template_revision_memo,omitempty"`
	FileType             string `protobuf:"bytes,12,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	FileMode             string `protobuf:"bytes,13,opt,name=file_mode,json=fileMode,proto3" json:"file_mode,omitempty"`
	User                 string `protobuf:"bytes,14,opt,name=user,proto3" json:"user,omitempty"`
	UserGroup            string `protobuf:"bytes,15,opt,name=user_group,json=userGroup,proto3" json:"user_group,omitempty"`
	Privilege            string `protobuf:"bytes,16,opt,name=privilege,proto3" json:"privilege,omitempty"`
	Signature            string `protobuf:"bytes,17,opt,name=signature,proto3" json:"signature,omitempty"`
	ByteSize             uint64 `protobuf:"varint,18,opt,name=byte_size,json=byteSize,proto3" json:"byte_size,omitempty"`
	Creator              string `protobuf:"bytes,19,opt,name=creator,proto3" json:"creator,omitempty"`
	CreateAt             string `protobuf:"bytes,20,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
}

func (x *AppBoundTmplRevision) Reset() {
	*x = AppBoundTmplRevision{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_template_binding_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppBoundTmplRevision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppBoundTmplRevision) ProtoMessage() {}

func (x *AppBoundTmplRevision) ProtoReflect() protoreflect.Message {
	mi := &file_app_template_binding_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppBoundTmplRevision.ProtoReflect.Descriptor instead.
func (*AppBoundTmplRevision) Descriptor() ([]byte, []int) {
	return file_app_template_binding_proto_rawDescGZIP(), []int{5}
}

func (x *AppBoundTmplRevision) GetTemplateSpaceId() uint32 {
	if x != nil {
		return x.TemplateSpaceId
	}
	return 0
}

func (x *AppBoundTmplRevision) GetTemplateSpaceName() string {
	if x != nil {
		return x.TemplateSpaceName
	}
	return ""
}

func (x *AppBoundTmplRevision) GetTemplateSetId() uint32 {
	if x != nil {
		return x.TemplateSetId
	}
	return 0
}

func (x *AppBoundTmplRevision) GetTemplateSetName() string {
	if x != nil {
		return x.TemplateSetName
	}
	return ""
}

func (x *AppBoundTmplRevision) GetTemplateId() uint32 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *AppBoundTmplRevision) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppBoundTmplRevision) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AppBoundTmplRevision) GetTemplateRevisionId() uint32 {
	if x != nil {
		return x.TemplateRevisionId
	}
	return 0
}

func (x *AppBoundTmplRevision) GetIsLatest() bool {
	if x != nil {
		return x.IsLatest
	}
	return false
}

func (x *AppBoundTmplRevision) GetTemplateRevisionName() string {
	if x != nil {
		return x.TemplateRevisionName
	}
	return ""
}

func (x *AppBoundTmplRevision) GetTemplateRevisionMemo() string {
	if x != nil {
		return x.TemplateRevisionMemo
	}
	return ""
}

func (x *AppBoundTmplRevision) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *AppBoundTmplRevision) GetFileMode() string {
	if x != nil {
		return x.FileMode
	}
	return ""
}

func (x *AppBoundTmplRevision) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *AppBoundTmplRevision) GetUserGroup() string {
	if x != nil {
		return x.UserGroup
	}
	return ""
}

func (x *AppBoundTmplRevision) GetPrivilege() string {
	if x != nil {
		return x.Privilege
	}
	return ""
}

func (x *AppBoundTmplRevision) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *AppBoundTmplRevision) GetByteSize() uint64 {
	if x != nil {
		return x.ByteSize
	}
	return 0
}

func (x *AppBoundTmplRevision) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *AppBoundTmplRevision) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

// ReleasedAppBoundTmplRevision is released app bound template revision
type ReleasedAppBoundTmplRevision struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateSpaceId      uint32 `protobuf:"varint,1,opt,name=template_space_id,json=templateSpaceId,proto3" json:"template_space_id,omitempty"`
	TemplateSpaceName    string `protobuf:"bytes,2,opt,name=template_space_name,json=templateSpaceName,proto3" json:"template_space_name,omitempty"`
	TemplateSetId        uint32 `protobuf:"varint,3,opt,name=template_set_id,json=templateSetId,proto3" json:"template_set_id,omitempty"`
	TemplateSetName      string `protobuf:"bytes,4,opt,name=template_set_name,json=templateSetName,proto3" json:"template_set_name,omitempty"`
	TemplateId           uint32 `protobuf:"varint,5,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	Name                 string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Path                 string `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"`
	TemplateRevisionId   uint32 `protobuf:"varint,8,opt,name=template_revision_id,json=templateRevisionId,proto3" json:"template_revision_id,omitempty"`
	IsLatest             bool   `protobuf:"varint,9,opt,name=is_latest,json=isLatest,proto3" json:"is_latest,omitempty"`
	TemplateRevisionName string `protobuf:"bytes,10,opt,name=template_revision_name,json=templateRevisionName,proto3" json:"template_revision_name,omitempty"`
	TemplateRevisionMemo string `protobuf:"bytes,11,opt,name=template_revision_memo,json=templateRevisionMemo,proto3" json:"template_revision_memo,omitempty"`
	FileType             string `protobuf:"bytes,12,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	FileMode             string `protobuf:"bytes,13,opt,name=file_mode,json=fileMode,proto3" json:"file_mode,omitempty"`
	User                 string `protobuf:"bytes,14,opt,name=user,proto3" json:"user,omitempty"`
	UserGroup            string `protobuf:"bytes,15,opt,name=user_group,json=userGroup,proto3" json:"user_group,omitempty"`
	Privilege            string `protobuf:"bytes,16,opt,name=privilege,proto3" json:"privilege,omitempty"`
	Signature            string `protobuf:"bytes,17,opt,name=signature,proto3" json:"signature,omitempty"`
	ByteSize             uint64 `protobuf:"varint,18,opt,name=byte_size,json=byteSize,proto3" json:"byte_size,omitempty"`
	RenderedSignature    string `protobuf:"bytes,19,opt,name=rendered_signature,json=renderedSignature,proto3" json:"rendered_signature,omitempty"`
	RenderedByteSize     uint64 `protobuf:"varint,20,opt,name=rendered_byte_size,json=renderedByteSize,proto3" json:"rendered_byte_size,omitempty"`
	Creator              string `protobuf:"bytes,21,opt,name=creator,proto3" json:"creator,omitempty"`
	CreateAt             string `protobuf:"bytes,22,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
}

func (x *ReleasedAppBoundTmplRevision) Reset() {
	*x = ReleasedAppBoundTmplRevision{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_template_binding_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleasedAppBoundTmplRevision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleasedAppBoundTmplRevision) ProtoMessage() {}

func (x *ReleasedAppBoundTmplRevision) ProtoReflect() protoreflect.Message {
	mi := &file_app_template_binding_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleasedAppBoundTmplRevision.ProtoReflect.Descriptor instead.
func (*ReleasedAppBoundTmplRevision) Descriptor() ([]byte, []int) {
	return file_app_template_binding_proto_rawDescGZIP(), []int{6}
}

func (x *ReleasedAppBoundTmplRevision) GetTemplateSpaceId() uint32 {
	if x != nil {
		return x.TemplateSpaceId
	}
	return 0
}

func (x *ReleasedAppBoundTmplRevision) GetTemplateSpaceName() string {
	if x != nil {
		return x.TemplateSpaceName
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetTemplateSetId() uint32 {
	if x != nil {
		return x.TemplateSetId
	}
	return 0
}

func (x *ReleasedAppBoundTmplRevision) GetTemplateSetName() string {
	if x != nil {
		return x.TemplateSetName
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetTemplateId() uint32 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *ReleasedAppBoundTmplRevision) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetTemplateRevisionId() uint32 {
	if x != nil {
		return x.TemplateRevisionId
	}
	return 0
}

func (x *ReleasedAppBoundTmplRevision) GetIsLatest() bool {
	if x != nil {
		return x.IsLatest
	}
	return false
}

func (x *ReleasedAppBoundTmplRevision) GetTemplateRevisionName() string {
	if x != nil {
		return x.TemplateRevisionName
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetTemplateRevisionMemo() string {
	if x != nil {
		return x.TemplateRevisionMemo
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetFileMode() string {
	if x != nil {
		return x.FileMode
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetUserGroup() string {
	if x != nil {
		return x.UserGroup
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetPrivilege() string {
	if x != nil {
		return x.Privilege
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetByteSize() uint64 {
	if x != nil {
		return x.ByteSize
	}
	return 0
}

func (x *ReleasedAppBoundTmplRevision) GetRenderedSignature() string {
	if x != nil {
		return x.RenderedSignature
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetRenderedByteSize() uint64 {
	if x != nil {
		return x.RenderedByteSize
	}
	return 0
}

func (x *ReleasedAppBoundTmplRevision) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *ReleasedAppBoundTmplRevision) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

var File_app_template_binding_proto protoreflect.FileDescriptor

var file_app_template_binding_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x70, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x62,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x62,
	0x61, 0x74, 0x62, 0x1a, 0x29, 0x62, 0x73, 0x63, 0x70, 0x2e, 0x69, 0x6f, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x62,
	0x61, 0x73, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xca,
	0x01, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x61, 0x74, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x43, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70,
	0x62, 0x61, 0x74, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a,
	0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xab, 0x02, 0x0a, 0x16,
	0x41, 0x70, 0x70, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x53, 0x70, 0x65, 0x63, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x10, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0e,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x73, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x13, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x11, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x73, 0x12, 0x32, 0x0a, 0x08, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x61, 0x74, 0x62, 0x2e,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x08, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x0f, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a,
	0x0f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x12, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x62, 0x61, 0x74, 0x62, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x11, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x17, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x12, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x22, 0x4c, 0x0a, 0x1c, 0x41, 0x70, 0x70, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0xc7,
	0x05, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x6d, 0x70, 0x6c, 0x52,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x30, 0x0a, 0x14, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x12,
	0x34, 0x0a, 0x16, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x76,
	0x69, 0x6c, 0x65, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69,
	0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x79, 0x74, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0xac, 0x06, 0x0a, 0x1c, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x64, 0x41, 0x70, 0x70, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x6d, 0x70,
	0x6c, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x11, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x72,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x12, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x12, 0x34, 0x0a, 0x16, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x6d,
	0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x79, 0x74, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x64, 0x5f,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x74, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10,
	0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x42, 0x36, 0x5a, 0x34, 0x62, 0x73, 0x63, 0x70, 0x2e,
	0x69, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x2d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x2d, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3b, 0x70, 0x62, 0x61, 0x74, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_app_template_binding_proto_rawDescOnce sync.Once
	file_app_template_binding_proto_rawDescData = file_app_template_binding_proto_rawDesc
)

func file_app_template_binding_proto_rawDescGZIP() []byte {
	file_app_template_binding_proto_rawDescOnce.Do(func() {
		file_app_template_binding_proto_rawDescData = protoimpl.X.CompressGZIP(file_app_template_binding_proto_rawDescData)
	})
	return file_app_template_binding_proto_rawDescData
}

var file_app_template_binding_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_app_template_binding_proto_goTypes = []interface{}{
	(*AppTemplateBinding)(nil),           // 0: pbatb.AppTemplateBinding
	(*AppTemplateBindingSpec)(nil),       // 1: pbatb.AppTemplateBindingSpec
	(*TemplateBinding)(nil),              // 2: pbatb.TemplateBinding
	(*TemplateRevisionBinding)(nil),      // 3: pbatb.TemplateRevisionBinding
	(*AppTemplateBindingAttachment)(nil), // 4: pbatb.AppTemplateBindingAttachment
	(*AppBoundTmplRevision)(nil),         // 5: pbatb.AppBoundTmplRevision
	(*ReleasedAppBoundTmplRevision)(nil), // 6: pbatb.ReleasedAppBoundTmplRevision
	(*base.Revision)(nil),                // 7: pbbase.Revision
}
var file_app_template_binding_proto_depIdxs = []int32{
	1, // 0: pbatb.AppTemplateBinding.spec:type_name -> pbatb.AppTemplateBindingSpec
	4, // 1: pbatb.AppTemplateBinding.attachment:type_name -> pbatb.AppTemplateBindingAttachment
	7, // 2: pbatb.AppTemplateBinding.revision:type_name -> pbbase.Revision
	2, // 3: pbatb.AppTemplateBindingSpec.bindings:type_name -> pbatb.TemplateBinding
	3, // 4: pbatb.TemplateBinding.template_revisions:type_name -> pbatb.TemplateRevisionBinding
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_app_template_binding_proto_init() }
func file_app_template_binding_proto_init() {
	if File_app_template_binding_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_app_template_binding_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppTemplateBinding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_template_binding_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppTemplateBindingSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_template_binding_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateBinding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_template_binding_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateRevisionBinding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_template_binding_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppTemplateBindingAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_template_binding_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppBoundTmplRevision); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_template_binding_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleasedAppBoundTmplRevision); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_app_template_binding_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_app_template_binding_proto_goTypes,
		DependencyIndexes: file_app_template_binding_proto_depIdxs,
		MessageInfos:      file_app_template_binding_proto_msgTypes,
	}.Build()
	File_app_template_binding_proto = out.File
	file_app_template_binding_proto_rawDesc = nil
	file_app_template_binding_proto_goTypes = nil
	file_app_template_binding_proto_depIdxs = nil
}
