// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: user_privilege.proto

package pbup

import (
	base "github.com/TencentBlueKing/bk-bcs/bcs-services/bcs-bscp/pkg/protocol/core/base"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// UserPrivilege source resource reference: pkg/dal/table/user-privilege.go
type UserPrivilege struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Spec       *UserPrivilegeSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Attachment *UserPrivilegeAttachment `protobuf:"bytes,3,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Revision   *base.Revision           `protobuf:"bytes,4,opt,name=revision,proto3" json:"revision,omitempty"`
}

func (x *UserPrivilege) Reset() {
	*x = UserPrivilege{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_privilege_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPrivilege) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPrivilege) ProtoMessage() {}

func (x *UserPrivilege) ProtoReflect() protoreflect.Message {
	mi := &file_user_privilege_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPrivilege.ProtoReflect.Descriptor instead.
func (*UserPrivilege) Descriptor() ([]byte, []int) {
	return file_user_privilege_proto_rawDescGZIP(), []int{0}
}

func (x *UserPrivilege) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserPrivilege) GetSpec() *UserPrivilegeSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *UserPrivilege) GetAttachment() *UserPrivilegeAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *UserPrivilege) GetRevision() *base.Revision {
	if x != nil {
		return x.Revision
	}
	return nil
}

// UserPrivilegeSpec source resource reference: pkg/dal/table/user-privilege.go
type UserPrivilegeSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User          string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	PrivilegeType string `protobuf:"bytes,2,opt,name=privilege_type,json=privilegeType,proto3" json:"privilege_type,omitempty"`
	ReadOnly      bool   `protobuf:"varint,3,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
}

func (x *UserPrivilegeSpec) Reset() {
	*x = UserPrivilegeSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_privilege_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPrivilegeSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPrivilegeSpec) ProtoMessage() {}

func (x *UserPrivilegeSpec) ProtoReflect() protoreflect.Message {
	mi := &file_user_privilege_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPrivilegeSpec.ProtoReflect.Descriptor instead.
func (*UserPrivilegeSpec) Descriptor() ([]byte, []int) {
	return file_user_privilege_proto_rawDescGZIP(), []int{1}
}

func (x *UserPrivilegeSpec) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *UserPrivilegeSpec) GetPrivilegeType() string {
	if x != nil {
		return x.PrivilegeType
	}
	return ""
}

func (x *UserPrivilegeSpec) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

// UserPrivilegeAttachment source resource reference: pkg/dal/table/user-privilege.go
type UserPrivilegeAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId           uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppId           uint32 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Uid             uint32 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid             uint32 `protobuf:"varint,4,opt,name=gid,proto3" json:"gid,omitempty"`
	TemplateSpaceId uint32 `protobuf:"varint,5,opt,name=template_space_id,json=templateSpaceId,proto3" json:"template_space_id,omitempty"`
}

func (x *UserPrivilegeAttachment) Reset() {
	*x = UserPrivilegeAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_privilege_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPrivilegeAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPrivilegeAttachment) ProtoMessage() {}

func (x *UserPrivilegeAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_user_privilege_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPrivilegeAttachment.ProtoReflect.Descriptor instead.
func (*UserPrivilegeAttachment) Descriptor() ([]byte, []int) {
	return file_user_privilege_proto_rawDescGZIP(), []int{2}
}

func (x *UserPrivilegeAttachment) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *UserPrivilegeAttachment) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *UserPrivilegeAttachment) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserPrivilegeAttachment) GetGid() uint32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *UserPrivilegeAttachment) GetTemplateSpaceId() uint32 {
	if x != nil {
		return x.TemplateSpaceId
	}
	return 0
}

var File_user_privilege_proto protoreflect.FileDescriptor

var file_user_privilege_proto_rawDesc = []byte{
	0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x70, 0x62, 0x75, 0x70, 0x1a, 0x21, 0x70, 0x6b,
	0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x62, 0x61, 0x73, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xb9, 0x01, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2b, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x62, 0x75, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x69,
	0x6c, 0x65, 0x67, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x3d,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x75, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a,
	0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x6b, 0x0a, 0x11, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72,
	0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x65, 0x61, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x97, 0x01, 0x0a, 0x17, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x42, 0x5f, 0x5a, 0x5d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x54, 0x65, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x4b, 0x69, 0x6e, 0x67,
	0x2f, 0x62, 0x6b, 0x2d, 0x62, 0x63, 0x73, 0x2f, 0x62, 0x63, 0x73, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2f, 0x62, 0x63, 0x73, 0x2d, 0x62, 0x73, 0x63, 0x70, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x2d, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x3b, 0x70,
	0x62, 0x75, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_privilege_proto_rawDescOnce sync.Once
	file_user_privilege_proto_rawDescData = file_user_privilege_proto_rawDesc
)

func file_user_privilege_proto_rawDescGZIP() []byte {
	file_user_privilege_proto_rawDescOnce.Do(func() {
		file_user_privilege_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_privilege_proto_rawDescData)
	})
	return file_user_privilege_proto_rawDescData
}

var file_user_privilege_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_user_privilege_proto_goTypes = []interface{}{
	(*UserPrivilege)(nil),           // 0: pbup.UserPrivilege
	(*UserPrivilegeSpec)(nil),       // 1: pbup.UserPrivilegeSpec
	(*UserPrivilegeAttachment)(nil), // 2: pbup.UserPrivilegeAttachment
	(*base.Revision)(nil),           // 3: pbbase.Revision
}
var file_user_privilege_proto_depIdxs = []int32{
	1, // 0: pbup.UserPrivilege.spec:type_name -> pbup.UserPrivilegeSpec
	2, // 1: pbup.UserPrivilege.attachment:type_name -> pbup.UserPrivilegeAttachment
	3, // 2: pbup.UserPrivilege.revision:type_name -> pbbase.Revision
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_user_privilege_proto_init() }
func file_user_privilege_proto_init() {
	if File_user_privilege_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_privilege_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPrivilege); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_privilege_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPrivilegeSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_privilege_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPrivilegeAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_privilege_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_user_privilege_proto_goTypes,
		DependencyIndexes: file_user_privilege_proto_depIdxs,
		MessageInfos:      file_user_privilege_proto_msgTypes,
	}.Build()
	File_user_privilege_proto = out.File
	file_user_privilege_proto_rawDesc = nil
	file_user_privilege_proto_goTypes = nil
	file_user_privilege_proto_depIdxs = nil
}
