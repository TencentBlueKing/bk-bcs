// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: feed_server.proto

package pbfs

import (
	_ "github.com/TencentBlueking/bk-bcs/bcs-services/bcs-bscp/pkg/protocol/core/app"
	base "github.com/TencentBlueking/bk-bcs/bcs-services/bcs-bscp/pkg/protocol/core/base"
	commit "github.com/TencentBlueking/bk-bcs/bcs-services/bcs-bscp/pkg/protocol/core/commit"
	config_item "github.com/TencentBlueking/bk-bcs/bcs-services/bcs-bscp/pkg/protocol/core/config-item"
	hook "github.com/TencentBlueking/bk-bcs/bcs-services/bcs-bscp/pkg/protocol/core/hook"
	kv "github.com/TencentBlueking/bk-bcs/bcs-services/bcs-bscp/pkg/protocol/core/kv"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// HandshakeMessage defines the handshake message from sidecar to feed server.
type HandshakeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion *base.Versioning `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Spec       *SidecarSpec     `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *HandshakeMessage) Reset() {
	*x = HandshakeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feed_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandshakeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandshakeMessage) ProtoMessage() {}

func (x *HandshakeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandshakeMessage.ProtoReflect.Descriptor instead.
func (*HandshakeMessage) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{0}
}

func (x *HandshakeMessage) GetApiVersion() *base.Versioning {
	if x != nil {
		return x.ApiVersion
	}
	return nil
}

func (x *HandshakeMessage) GetSpec() *SidecarSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// SidecarSpec defines a sidecar's specifics.
type SidecarSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	// version is sidecar's version
	Version *base.Versioning `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *SidecarSpec) Reset() {
	*x = SidecarSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feed_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SidecarSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SidecarSpec) ProtoMessage() {}

func (x *SidecarSpec) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SidecarSpec.ProtoReflect.Descriptor instead.
func (*SidecarSpec) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{1}
}

func (x *SidecarSpec) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *SidecarSpec) GetVersion() *base.Versioning {
	if x != nil {
		return x.Version
	}
	return nil
}

// SidecarMeta define a sidecar's basic metadata information.
type SidecarAppMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId uint32 `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Uid   string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *SidecarAppMeta) Reset() {
	*x = SidecarAppMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feed_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SidecarAppMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SidecarAppMeta) ProtoMessage() {}

func (x *SidecarAppMeta) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SidecarAppMeta.ProtoReflect.Descriptor instead.
func (*SidecarAppMeta) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{2}
}

func (x *SidecarAppMeta) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *SidecarAppMeta) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

// HandshakeResp defines handshake resp.
type HandshakeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion *base.Versioning `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// payload is the message's details information which is a json raw bytes.
	Payload []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *HandshakeResp) Reset() {
	*x = HandshakeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feed_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandshakeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandshakeResp) ProtoMessage() {}

func (x *HandshakeResp) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandshakeResp.ProtoReflect.Descriptor instead.
func (*HandshakeResp) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{3}
}

func (x *HandshakeResp) GetApiVersion() *base.Versioning {
	if x != nil {
		return x.ApiVersion
	}
	return nil
}

func (x *HandshakeResp) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// SideWatchMeta defines watch messages send from sidecar to feed server.
type SideWatchMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// version defines message's protocol version from sidecar
	ApiVersion *base.Versioning `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// payload is the message's details information which is a json raw bytes.
	// refer to sfs.SideWatchPayload.
	Payload []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *SideWatchMeta) Reset() {
	*x = SideWatchMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feed_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SideWatchMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SideWatchMeta) ProtoMessage() {}

func (x *SideWatchMeta) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SideWatchMeta.ProtoReflect.Descriptor instead.
func (*SideWatchMeta) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{4}
}

func (x *SideWatchMeta) GetApiVersion() *base.Versioning {
	if x != nil {
		return x.ApiVersion
	}
	return nil
}

func (x *SideWatchMeta) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type PullAppFileMetaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// version defines message's protocol version from sidecar
	ApiVersion *base.Versioning `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// payload is the message's details information which is a json raw bytes.
	// refer to sfs.SideWatchPayload.
	BizId   uint32   `protobuf:"varint,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppMeta *AppMeta `protobuf:"bytes,3,opt,name=app_meta,json=appMeta,proto3" json:"app_meta,omitempty"`
	Token   string   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	Key     string   `protobuf:"bytes,5,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *PullAppFileMetaReq) Reset() {
	*x = PullAppFileMetaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feed_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullAppFileMetaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullAppFileMetaReq) ProtoMessage() {}

func (x *PullAppFileMetaReq) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullAppFileMetaReq.ProtoReflect.Descriptor instead.
func (*PullAppFileMetaReq) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{5}
}

func (x *PullAppFileMetaReq) GetApiVersion() *base.Versioning {
	if x != nil {
		return x.ApiVersion
	}
	return nil
}

func (x *PullAppFileMetaReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *PullAppFileMetaReq) GetAppMeta() *AppMeta {
	if x != nil {
		return x.AppMeta
	}
	return nil
}

func (x *PullAppFileMetaReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *PullAppFileMetaReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type AppMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App    string            `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Uid    string            `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Labels map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AppMeta) Reset() {
	*x = AppMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feed_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMeta) ProtoMessage() {}

func (x *AppMeta) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMeta.ProtoReflect.Descriptor instead.
func (*AppMeta) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{6}
}

func (x *AppMeta) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *AppMeta) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AppMeta) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type PullAppFileMetaResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReleaseId  uint32         `protobuf:"varint,1,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
	Repository *Repository    `protobuf:"bytes,2,opt,name=repository,proto3" json:"repository,omitempty"`
	FileMetas  []*FileMeta    `protobuf:"bytes,3,rep,name=file_metas,json=fileMetas,proto3" json:"file_metas,omitempty"`
	PreHook    *hook.HookSpec `protobuf:"bytes,4,opt,name=pre_hook,json=preHook,proto3" json:"pre_hook,omitempty"`
	PostHook   *hook.HookSpec `protobuf:"bytes,5,opt,name=post_hook,json=postHook,proto3" json:"post_hook,omitempty"`
}

func (x *PullAppFileMetaResp) Reset() {
	*x = PullAppFileMetaResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feed_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullAppFileMetaResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullAppFileMetaResp) ProtoMessage() {}

func (x *PullAppFileMetaResp) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullAppFileMetaResp.ProtoReflect.Descriptor instead.
func (*PullAppFileMetaResp) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{7}
}

func (x *PullAppFileMetaResp) GetReleaseId() uint32 {
	if x != nil {
		return x.ReleaseId
	}
	return 0
}

func (x *PullAppFileMetaResp) GetRepository() *Repository {
	if x != nil {
		return x.Repository
	}
	return nil
}

func (x *PullAppFileMetaResp) GetFileMetas() []*FileMeta {
	if x != nil {
		return x.FileMetas
	}
	return nil
}

func (x *PullAppFileMetaResp) GetPreHook() *hook.HookSpec {
	if x != nil {
		return x.PreHook
	}
	return nil
}

func (x *PullAppFileMetaResp) GetPostHook() *hook.HookSpec {
	if x != nil {
		return x.PostHook
	}
	return nil
}

type GetDownloadURLReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// version defines message's protocol version from sidecar
	ApiVersion *base.Versioning `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	BizId      uint32           `protobuf:"varint,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	FileMeta   *FileMeta        `protobuf:"bytes,3,opt,name=file_meta,json=fileMeta,proto3" json:"file_meta,omitempty"`
	Token      string           `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetDownloadURLReq) Reset() {
	*x = GetDownloadURLReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feed_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDownloadURLReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDownloadURLReq) ProtoMessage() {}

func (x *GetDownloadURLReq) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDownloadURLReq.ProtoReflect.Descriptor instead.
func (*GetDownloadURLReq) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{8}
}

func (x *GetDownloadURLReq) GetApiVersion() *base.Versioning {
	if x != nil {
		return x.ApiVersion
	}
	return nil
}

func (x *GetDownloadURLReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetDownloadURLReq) GetFileMeta() *FileMeta {
	if x != nil {
		return x.FileMeta
	}
	return nil
}

func (x *GetDownloadURLReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetDownloadURLResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetDownloadURLResp) Reset() {
	*x = GetDownloadURLResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feed_server_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDownloadURLResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDownloadURLResp) ProtoMessage() {}

func (x *GetDownloadURLResp) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDownloadURLResp.ProtoReflect.Descriptor instead.
func (*GetDownloadURLResp) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{9}
}

func (x *GetDownloadURLResp) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Repository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root string `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
}

func (x *Repository) Reset() {
	*x = Repository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feed_server_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Repository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Repository) ProtoMessage() {}

func (x *Repository) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Repository.ProtoReflect.Descriptor instead.
func (*Repository) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{10}
}

func (x *Repository) GetRoot() string {
	if x != nil {
		return x.Root
	}
	return ""
}

type FileMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   uint32                            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CommitId             uint32                            `protobuf:"varint,2,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
	CommitSpec           *commit.CommitSpec                `protobuf:"bytes,3,opt,name=commit_spec,json=commitSpec,proto3" json:"commit_spec,omitempty"`
	ConfigItemSpec       *config_item.ConfigItemSpec       `protobuf:"bytes,4,opt,name=config_item_spec,json=configItemSpec,proto3" json:"config_item_spec,omitempty"`
	ConfigItemAttachment *config_item.ConfigItemAttachment `protobuf:"bytes,5,opt,name=config_item_attachment,json=configItemAttachment,proto3" json:"config_item_attachment,omitempty"`
	RepositorySpec       *RepositorySpec                   `protobuf:"bytes,6,opt,name=repository_spec,json=repositorySpec,proto3" json:"repository_spec,omitempty"`
}

func (x *FileMeta) Reset() {
	*x = FileMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feed_server_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMeta) ProtoMessage() {}

func (x *FileMeta) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMeta.ProtoReflect.Descriptor instead.
func (*FileMeta) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{11}
}

func (x *FileMeta) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileMeta) GetCommitId() uint32 {
	if x != nil {
		return x.CommitId
	}
	return 0
}

func (x *FileMeta) GetCommitSpec() *commit.CommitSpec {
	if x != nil {
		return x.CommitSpec
	}
	return nil
}

func (x *FileMeta) GetConfigItemSpec() *config_item.ConfigItemSpec {
	if x != nil {
		return x.ConfigItemSpec
	}
	return nil
}

func (x *FileMeta) GetConfigItemAttachment() *config_item.ConfigItemAttachment {
	if x != nil {
		return x.ConfigItemAttachment
	}
	return nil
}

func (x *FileMeta) GetRepositorySpec() *RepositorySpec {
	if x != nil {
		return x.RepositorySpec
	}
	return nil
}

type RepositorySpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *RepositorySpec) Reset() {
	*x = RepositorySpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feed_server_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepositorySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositorySpec) ProtoMessage() {}

func (x *RepositorySpec) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositorySpec.ProtoReflect.Descriptor instead.
func (*RepositorySpec) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{12}
}

func (x *RepositorySpec) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// FeedWatchMessage defines watch messages send from feed server to sdk.
type FeedWatchMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// version defines message's protocol version from feed server
	ApiVersion *base.Versioning `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// rid is the message's request id
	Rid string `protobuf:"bytes,2,opt,name=rid,proto3" json:"rid,omitempty"`
	// type is an enum type, it's an substitute of sfs.FeedMessageType.
	Type uint32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	// payload is the message's details information which is a json raw bytes.
	Payload []byte `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *FeedWatchMessage) Reset() {
	*x = FeedWatchMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feed_server_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedWatchMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedWatchMessage) ProtoMessage() {}

func (x *FeedWatchMessage) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedWatchMessage.ProtoReflect.Descriptor instead.
func (*FeedWatchMessage) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{13}
}

func (x *FeedWatchMessage) GetApiVersion() *base.Versioning {
	if x != nil {
		return x.ApiVersion
	}
	return nil
}

func (x *FeedWatchMessage) GetRid() string {
	if x != nil {
		return x.Rid
	}
	return ""
}

func (x *FeedWatchMessage) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *FeedWatchMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// MessagingMeta defines the message metadata send from sdk to upstream server.
type MessagingMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// version defines message's protocol version from feed server
	ApiVersion *base.Versioning `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// rid is the message's request id
	Rid string `protobuf:"bytes,2,opt,name=rid,proto3" json:"rid,omitempty"`
	// type is an enum type, it's an substitute of scs.MessagingType.
	Type uint32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	// payload is the message's details information which is a json raw bytes.
	Payload []byte `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *MessagingMeta) Reset() {
	*x = MessagingMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feed_server_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagingMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagingMeta) ProtoMessage() {}

func (x *MessagingMeta) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagingMeta.ProtoReflect.Descriptor instead.
func (*MessagingMeta) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{14}
}

func (x *MessagingMeta) GetApiVersion() *base.Versioning {
	if x != nil {
		return x.ApiVersion
	}
	return nil
}

func (x *MessagingMeta) GetRid() string {
	if x != nil {
		return x.Rid
	}
	return ""
}

func (x *MessagingMeta) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MessagingMeta) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// MessagingResp defines response from upstream server to sdk,
// which is empty.
type MessagingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessagingResp) Reset() {
	*x = MessagingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feed_server_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagingResp) ProtoMessage() {}

func (x *MessagingResp) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagingResp.ProtoReflect.Descriptor instead.
func (*MessagingResp) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{15}
}

type PullKvMetaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// version defines message's protocol version from sidecar
	ApiVersion *base.Versioning `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// payload is the message's details information which is a json raw bytes.
	// refer to sfs.SideWatchPayload.
	BizId   uint32   `protobuf:"varint,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppMeta *AppMeta `protobuf:"bytes,3,opt,name=app_meta,json=appMeta,proto3" json:"app_meta,omitempty"`
	Token   string   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *PullKvMetaReq) Reset() {
	*x = PullKvMetaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feed_server_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullKvMetaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullKvMetaReq) ProtoMessage() {}

func (x *PullKvMetaReq) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullKvMetaReq.ProtoReflect.Descriptor instead.
func (*PullKvMetaReq) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{16}
}

func (x *PullKvMetaReq) GetApiVersion() *base.Versioning {
	if x != nil {
		return x.ApiVersion
	}
	return nil
}

func (x *PullKvMetaReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *PullKvMetaReq) GetAppMeta() *AppMeta {
	if x != nil {
		return x.AppMeta
	}
	return nil
}

func (x *PullKvMetaReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type PullKvMetaResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReleaseId uint32    `protobuf:"varint,1,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
	KvMetas   []*KvMeta `protobuf:"bytes,3,rep,name=kv_metas,json=kvMetas,proto3" json:"kv_metas,omitempty"`
}

func (x *PullKvMetaResp) Reset() {
	*x = PullKvMetaResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feed_server_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullKvMetaResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullKvMetaResp) ProtoMessage() {}

func (x *PullKvMetaResp) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullKvMetaResp.ProtoReflect.Descriptor instead.
func (*PullKvMetaResp) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{17}
}

func (x *PullKvMetaResp) GetReleaseId() uint32 {
	if x != nil {
		return x.ReleaseId
	}
	return 0
}

func (x *PullKvMetaResp) GetKvMetas() []*KvMeta {
	if x != nil {
		return x.KvMetas
	}
	return nil
}

type KvMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key          string           `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	KvAttachment *kv.KvAttachment `protobuf:"bytes,5,opt,name=kv_attachment,json=kvAttachment,proto3" json:"kv_attachment,omitempty"`
}

func (x *KvMeta) Reset() {
	*x = KvMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feed_server_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvMeta) ProtoMessage() {}

func (x *KvMeta) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvMeta.ProtoReflect.Descriptor instead.
func (*KvMeta) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{18}
}

func (x *KvMeta) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KvMeta) GetKvAttachment() *kv.KvAttachment {
	if x != nil {
		return x.KvAttachment
	}
	return nil
}

type GetKvValueReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// version defines message's protocol version from sidecar
	ApiVersion *base.Versioning `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	BizId      uint32           `protobuf:"varint,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	AppMeta    *AppMeta         `protobuf:"bytes,3,opt,name=app_meta,json=appMeta,proto3" json:"app_meta,omitempty"`
	Token      string           `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	Key        string           `protobuf:"bytes,5,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetKvValueReq) Reset() {
	*x = GetKvValueReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feed_server_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKvValueReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKvValueReq) ProtoMessage() {}

func (x *GetKvValueReq) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKvValueReq.ProtoReflect.Descriptor instead.
func (*GetKvValueReq) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{19}
}

func (x *GetKvValueReq) GetApiVersion() *base.Versioning {
	if x != nil {
		return x.ApiVersion
	}
	return nil
}

func (x *GetKvValueReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetKvValueReq) GetAppMeta() *AppMeta {
	if x != nil {
		return x.AppMeta
	}
	return nil
}

func (x *GetKvValueReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetKvValueReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetKvValueResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KvType string `protobuf:"bytes,1,opt,name=kv_type,json=kvType,proto3" json:"kv_type,omitempty"`
	Value  string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetKvValueResp) Reset() {
	*x = GetKvValueResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feed_server_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKvValueResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKvValueResp) ProtoMessage() {}

func (x *GetKvValueResp) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKvValueResp.ProtoReflect.Descriptor instead.
func (*GetKvValueResp) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{20}
}

func (x *GetKvValueResp) GetKvType() string {
	if x != nil {
		return x.KvType
	}
	return ""
}

func (x *GetKvValueResp) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ListAppsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId uint32 `protobuf:"varint,1,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ListAppsReq) Reset() {
	*x = ListAppsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feed_server_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppsReq) ProtoMessage() {}

func (x *ListAppsReq) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppsReq.ProtoReflect.Descriptor instead.
func (*ListAppsReq) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{21}
}

func (x *ListAppsReq) GetBizId() uint32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *ListAppsReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// App 对外简单版本
type App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ConfigType string `protobuf:"bytes,3,opt,name=config_type,json=configType,proto3" json:"config_type,omitempty"`
	Reviser    string `protobuf:"bytes,4,opt,name=reviser,proto3" json:"reviser,omitempty"`
	UpdateAt   string `protobuf:"bytes,5,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
}

func (x *App) Reset() {
	*x = App{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feed_server_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*App) ProtoMessage() {}

func (x *App) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use App.ProtoReflect.Descriptor instead.
func (*App) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{22}
}

func (x *App) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *App) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *App) GetConfigType() string {
	if x != nil {
		return x.ConfigType
	}
	return ""
}

func (x *App) GetReviser() string {
	if x != nil {
		return x.Reviser
	}
	return ""
}

func (x *App) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

type ListAppsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apps []*App `protobuf:"bytes,1,rep,name=apps,proto3" json:"apps,omitempty"`
}

func (x *ListAppsResp) Reset() {
	*x = ListAppsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feed_server_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppsResp) ProtoMessage() {}

func (x *ListAppsResp) ProtoReflect() protoreflect.Message {
	mi := &file_feed_server_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppsResp.ProtoReflect.Descriptor instead.
func (*ListAppsResp) Descriptor() ([]byte, []int) {
	return file_feed_server_proto_rawDescGZIP(), []int{23}
}

func (x *ListAppsResp) GetApps() []*App {
	if x != nil {
		return x.Apps
	}
	return nil
}

var File_feed_server_proto protoreflect.FileDescriptor

var file_feed_server_proto_rawDesc = []byte{
	0x0a, 0x11, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x04, 0x70, 0x62, 0x66, 0x73, 0x1a, 0x21, 0x70, 0x6b, 0x67, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x70, 0x6b,
	0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2d, 0x69, 0x74,
	0x65, 0x6d, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x68, 0x6f, 0x6f, 0x6b, 0x2f, 0x68, 0x6f, 0x6f,
	0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x6b, 0x76, 0x2f, 0x6b, 0x76,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x61,
	0x70, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6e, 0x0a, 0x10, 0x48, 0x61, 0x6e, 0x64,
	0x73, 0x68, 0x61, 0x6b, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x0b,
	0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x25, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x62, 0x66, 0x73, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x52, 0x0a, 0x0b, 0x53, 0x69, 0x64, 0x65,
	0x63, 0x61, 0x72, 0x53, 0x70, 0x65, 0x63, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x69, 0x6e, 0x67, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a, 0x0e,
	0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x15,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x5e, 0x0a, 0x0d, 0x48, 0x61, 0x6e, 0x64, 0x73,
	0x68, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e,
	0x67, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x5e, 0x0a, 0x0d, 0x53, 0x69, 0x64, 0x65, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e,
	0x67, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xb2, 0x01, 0x0a, 0x12, 0x50, 0x75, 0x6c, 0x6c,
	0x41, 0x70, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x33,
	0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x08, 0x61, 0x70,
	0x70, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x62, 0x66, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x07, 0x61, 0x70, 0x70,
	0x4d, 0x65, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x9b, 0x01, 0x0a,
	0x07, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70,
	0x62, 0x66, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a,
	0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf1, 0x01, 0x0a, 0x13, 0x50,
	0x75, 0x6c, 0x6c, 0x41, 0x70, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49,
	0x64, 0x12, 0x30, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x66, 0x73, 0x2e, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x2d, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x66, 0x73, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x5f, 0x68, 0x6f, 0x6f, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x48, 0x6f,
	0x6f, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x52, 0x07, 0x70, 0x72, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x12,
	0x2d, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x68, 0x6f, 0x6f, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x48, 0x6f, 0x6f, 0x6b,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x22, 0xa2,
	0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52,
	0x4c, 0x52, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x61,
	0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64,
	0x12, 0x2b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x66, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x26, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x20, 0x0a, 0x0a, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x22, 0xbf, 0x02,
	0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x62, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x3e,
	0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x70,
	0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x63, 0x69, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x70, 0x65, 0x63, 0x12, 0x50,
	0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x70, 0x62, 0x63, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x3d, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x73,
	0x70, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x66, 0x73,
	0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x52,
	0x0e, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x22,
	0x24, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x87, 0x01, 0x0a, 0x10, 0x46, 0x65, 0x65, 0x64, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x0b, 0x61, 0x70,
	0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x69, 0x6e, 0x67, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22,
	0x84, 0x01, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74,
	0x61, 0x12, 0x33, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x9b, 0x01, 0x0a, 0x0d, 0x50, 0x75, 0x6c, 0x6c,
	0x4b, 0x76, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x0b, 0x61, 0x70, 0x69,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x62, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x69,
	0x6e, 0x67, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x15,
	0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x66, 0x73, 0x2e, 0x41,
	0x70, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x58, 0x0a, 0x0e, 0x50, 0x75, 0x6c, 0x6c, 0x4b, 0x76, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x08, 0x6b, 0x76, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x66, 0x73, 0x2e,
	0x4b, 0x76, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x07, 0x6b, 0x76, 0x4d, 0x65, 0x74, 0x61, 0x73, 0x22,
	0x53, 0x0a, 0x06, 0x4b, 0x76, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x37, 0x0a, 0x0d, 0x6b,
	0x76, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x6b, 0x76, 0x2e, 0x4b, 0x76, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x6b, 0x76, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0xad, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4b, 0x76, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x52,
	0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x62,
	0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x66, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x22, 0x3f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4b, 0x76, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x6b, 0x76, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6b, 0x76, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x81, 0x01, 0x0a, 0x03, 0x41, 0x70, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x76, 0x69, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x65, 0x76, 0x69, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x2d, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1d, 0x0a, 0x04, 0x61, 0x70, 0x70, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x66, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x04,
	0x61, 0x70, 0x70, 0x73, 0x32, 0xf5, 0x03, 0x0a, 0x08, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x3a, 0x0a, 0x09, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x12, 0x16,
	0x2e, 0x70, 0x62, 0x66, 0x73, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x66, 0x73, 0x2e, 0x48, 0x61,
	0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x37, 0x0a,
	0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x66,
	0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x1a,
	0x13, 0x2e, 0x70, 0x62, 0x66, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x05, 0x57, 0x61, 0x74, 0x63, 0x68, 0x12,
	0x13, 0x2e, 0x70, 0x62, 0x66, 0x73, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x4d, 0x65, 0x74, 0x61, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x66, 0x73, 0x2e, 0x46, 0x65, 0x65, 0x64,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x48, 0x0a, 0x0f, 0x50, 0x75, 0x6c, 0x6c, 0x41, 0x70, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x66, 0x73, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x41,
	0x70, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e,
	0x70, 0x62, 0x66, 0x73, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x41, 0x70, 0x70, 0x46, 0x69, 0x6c, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c, 0x12, 0x17, 0x2e, 0x70,
	0x62, 0x66, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55,
	0x52, 0x4c, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x66, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x39, 0x0a, 0x0a, 0x50, 0x75, 0x6c, 0x6c, 0x4b, 0x76, 0x4d, 0x65, 0x74, 0x61, 0x12,
	0x13, 0x2e, 0x70, 0x62, 0x66, 0x73, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x4b, 0x76, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x66, 0x73, 0x2e, 0x50, 0x75, 0x6c, 0x6c,
	0x4b, 0x76, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x4b, 0x76, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x66,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x76, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x14, 0x2e, 0x70, 0x62, 0x66, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x76, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x73, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x66, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x66, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x57, 0x5a, 0x55,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54, 0x65, 0x6e, 0x63, 0x65,
	0x6e, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x62, 0x6b, 0x2d, 0x62, 0x63,
	0x73, 0x2f, 0x62, 0x63, 0x73, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x62,
	0x63, 0x73, 0x2d, 0x62, 0x73, 0x63, 0x70, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x3b, 0x70, 0x62, 0x66, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_feed_server_proto_rawDescOnce sync.Once
	file_feed_server_proto_rawDescData = file_feed_server_proto_rawDesc
)

func file_feed_server_proto_rawDescGZIP() []byte {
	file_feed_server_proto_rawDescOnce.Do(func() {
		file_feed_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_feed_server_proto_rawDescData)
	})
	return file_feed_server_proto_rawDescData
}

var file_feed_server_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_feed_server_proto_goTypes = []interface{}{
	(*HandshakeMessage)(nil),                 // 0: pbfs.HandshakeMessage
	(*SidecarSpec)(nil),                      // 1: pbfs.SidecarSpec
	(*SidecarAppMeta)(nil),                   // 2: pbfs.SidecarAppMeta
	(*HandshakeResp)(nil),                    // 3: pbfs.HandshakeResp
	(*SideWatchMeta)(nil),                    // 4: pbfs.SideWatchMeta
	(*PullAppFileMetaReq)(nil),               // 5: pbfs.PullAppFileMetaReq
	(*AppMeta)(nil),                          // 6: pbfs.AppMeta
	(*PullAppFileMetaResp)(nil),              // 7: pbfs.PullAppFileMetaResp
	(*GetDownloadURLReq)(nil),                // 8: pbfs.GetDownloadURLReq
	(*GetDownloadURLResp)(nil),               // 9: pbfs.GetDownloadURLResp
	(*Repository)(nil),                       // 10: pbfs.Repository
	(*FileMeta)(nil),                         // 11: pbfs.FileMeta
	(*RepositorySpec)(nil),                   // 12: pbfs.RepositorySpec
	(*FeedWatchMessage)(nil),                 // 13: pbfs.FeedWatchMessage
	(*MessagingMeta)(nil),                    // 14: pbfs.MessagingMeta
	(*MessagingResp)(nil),                    // 15: pbfs.MessagingResp
	(*PullKvMetaReq)(nil),                    // 16: pbfs.PullKvMetaReq
	(*PullKvMetaResp)(nil),                   // 17: pbfs.PullKvMetaResp
	(*KvMeta)(nil),                           // 18: pbfs.KvMeta
	(*GetKvValueReq)(nil),                    // 19: pbfs.GetKvValueReq
	(*GetKvValueResp)(nil),                   // 20: pbfs.GetKvValueResp
	(*ListAppsReq)(nil),                      // 21: pbfs.ListAppsReq
	(*App)(nil),                              // 22: pbfs.App
	(*ListAppsResp)(nil),                     // 23: pbfs.ListAppsResp
	nil,                                      // 24: pbfs.AppMeta.LabelsEntry
	(*base.Versioning)(nil),                  // 25: pbbase.Versioning
	(*hook.HookSpec)(nil),                    // 26: pbhook.HookSpec
	(*commit.CommitSpec)(nil),                // 27: pbcommit.CommitSpec
	(*config_item.ConfigItemSpec)(nil),       // 28: pbci.ConfigItemSpec
	(*config_item.ConfigItemAttachment)(nil), // 29: pbci.ConfigItemAttachment
	(*kv.KvAttachment)(nil),                  // 30: pbkv.KvAttachment
}
var file_feed_server_proto_depIdxs = []int32{
	25, // 0: pbfs.HandshakeMessage.api_version:type_name -> pbbase.Versioning
	1,  // 1: pbfs.HandshakeMessage.spec:type_name -> pbfs.SidecarSpec
	25, // 2: pbfs.SidecarSpec.version:type_name -> pbbase.Versioning
	25, // 3: pbfs.HandshakeResp.api_version:type_name -> pbbase.Versioning
	25, // 4: pbfs.SideWatchMeta.api_version:type_name -> pbbase.Versioning
	25, // 5: pbfs.PullAppFileMetaReq.api_version:type_name -> pbbase.Versioning
	6,  // 6: pbfs.PullAppFileMetaReq.app_meta:type_name -> pbfs.AppMeta
	24, // 7: pbfs.AppMeta.labels:type_name -> pbfs.AppMeta.LabelsEntry
	10, // 8: pbfs.PullAppFileMetaResp.repository:type_name -> pbfs.Repository
	11, // 9: pbfs.PullAppFileMetaResp.file_metas:type_name -> pbfs.FileMeta
	26, // 10: pbfs.PullAppFileMetaResp.pre_hook:type_name -> pbhook.HookSpec
	26, // 11: pbfs.PullAppFileMetaResp.post_hook:type_name -> pbhook.HookSpec
	25, // 12: pbfs.GetDownloadURLReq.api_version:type_name -> pbbase.Versioning
	11, // 13: pbfs.GetDownloadURLReq.file_meta:type_name -> pbfs.FileMeta
	27, // 14: pbfs.FileMeta.commit_spec:type_name -> pbcommit.CommitSpec
	28, // 15: pbfs.FileMeta.config_item_spec:type_name -> pbci.ConfigItemSpec
	29, // 16: pbfs.FileMeta.config_item_attachment:type_name -> pbci.ConfigItemAttachment
	12, // 17: pbfs.FileMeta.repository_spec:type_name -> pbfs.RepositorySpec
	25, // 18: pbfs.FeedWatchMessage.api_version:type_name -> pbbase.Versioning
	25, // 19: pbfs.MessagingMeta.api_version:type_name -> pbbase.Versioning
	25, // 20: pbfs.PullKvMetaReq.api_version:type_name -> pbbase.Versioning
	6,  // 21: pbfs.PullKvMetaReq.app_meta:type_name -> pbfs.AppMeta
	18, // 22: pbfs.PullKvMetaResp.kv_metas:type_name -> pbfs.KvMeta
	30, // 23: pbfs.KvMeta.kv_attachment:type_name -> pbkv.KvAttachment
	25, // 24: pbfs.GetKvValueReq.api_version:type_name -> pbbase.Versioning
	6,  // 25: pbfs.GetKvValueReq.app_meta:type_name -> pbfs.AppMeta
	22, // 26: pbfs.ListAppsResp.apps:type_name -> pbfs.App
	0,  // 27: pbfs.Upstream.Handshake:input_type -> pbfs.HandshakeMessage
	14, // 28: pbfs.Upstream.Messaging:input_type -> pbfs.MessagingMeta
	4,  // 29: pbfs.Upstream.Watch:input_type -> pbfs.SideWatchMeta
	5,  // 30: pbfs.Upstream.PullAppFileMeta:input_type -> pbfs.PullAppFileMetaReq
	8,  // 31: pbfs.Upstream.GetDownloadURL:input_type -> pbfs.GetDownloadURLReq
	16, // 32: pbfs.Upstream.PullKvMeta:input_type -> pbfs.PullKvMetaReq
	19, // 33: pbfs.Upstream.GetKvValue:input_type -> pbfs.GetKvValueReq
	21, // 34: pbfs.Upstream.ListApps:input_type -> pbfs.ListAppsReq
	3,  // 35: pbfs.Upstream.Handshake:output_type -> pbfs.HandshakeResp
	15, // 36: pbfs.Upstream.Messaging:output_type -> pbfs.MessagingResp
	13, // 37: pbfs.Upstream.Watch:output_type -> pbfs.FeedWatchMessage
	7,  // 38: pbfs.Upstream.PullAppFileMeta:output_type -> pbfs.PullAppFileMetaResp
	9,  // 39: pbfs.Upstream.GetDownloadURL:output_type -> pbfs.GetDownloadURLResp
	17, // 40: pbfs.Upstream.PullKvMeta:output_type -> pbfs.PullKvMetaResp
	20, // 41: pbfs.Upstream.GetKvValue:output_type -> pbfs.GetKvValueResp
	23, // 42: pbfs.Upstream.ListApps:output_type -> pbfs.ListAppsResp
	35, // [35:43] is the sub-list for method output_type
	27, // [27:35] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_feed_server_proto_init() }
func file_feed_server_proto_init() {
	if File_feed_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_feed_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandshakeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feed_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SidecarSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feed_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SidecarAppMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feed_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandshakeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feed_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SideWatchMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feed_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullAppFileMetaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feed_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feed_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullAppFileMetaResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feed_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDownloadURLReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feed_server_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDownloadURLResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feed_server_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Repository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feed_server_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feed_server_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepositorySpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feed_server_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedWatchMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feed_server_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagingMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feed_server_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feed_server_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullKvMetaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feed_server_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullKvMetaResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feed_server_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feed_server_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKvValueReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feed_server_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKvValueResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feed_server_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feed_server_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*App); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feed_server_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_feed_server_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_feed_server_proto_goTypes,
		DependencyIndexes: file_feed_server_proto_depIdxs,
		MessageInfos:      file_feed_server_proto_msgTypes,
	}.Build()
	File_feed_server_proto = out.File
	file_feed_server_proto_rawDesc = nil
	file_feed_server_proto_goTypes = nil
	file_feed_server_proto_depIdxs = nil
}
