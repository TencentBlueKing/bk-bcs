package migrations

import (
	"database/sql"
	"fmt"
	"strings"

	"bscp.io/cmd/data-service/db-migration/migrator"
)

const mig{{.Version}} = "{{.Version}}_{{.FileName}}"

func init() {
	migrator.GetMigrator().AddMigration(&migrator.Migration{
		Version: "{{.Version}}",
		Name:    "{{.Version}}_{{.FileName}}",
		Up:      mig{{.Version}}{{.FuncName}}Up,
		Down:    mig{{.Version}}{{.FuncName}}Down,
	})
}

func mig{{.Version}}{{.FuncName}}Up(tx *sql.Tx) error {
	sqlArr := strings.Split(migrator.GetMigrator().MigrationSQLs[migrator.GetUpSQLKey(mig{{.Version}})], ";")
	for _, sql := range sqlArr {
		sql = strings.TrimSpace(sql)
		if sql == "" {
			continue
		}
		_, err := tx.Exec(sql)
		if err != nil {
			return fmt.Errorf("exec sql [%s] err: %s", sql, err)
		}
	}
	return nil

}

func mig{{.Version}}{{.FuncName}}Down(tx *sql.Tx) error {
    sqlArr := strings.Split(migrator.GetMigrator().MigrationSQLs[migrator.GetDownSQLKey(mig{{.Version}})], ";")
    for _, sql := range sqlArr {
        sql = strings.TrimSpace(sql)
        if sql == "" {
            continue
        }
        _, err := tx.Exec(sql)
        if err != nil {
            return fmt.Errorf("exec sql [%s] err: %s", sql, err)
        }
    }
    return nil
}
