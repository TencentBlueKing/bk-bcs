# 标准型实例族
Standard: "标准型%s"
StandardStorage: "标准存储增强型%s"
StandardNetwork: "标准网络优化型%s"
# 内存型实例族
MemoryOptimized: "内存型%s"
SEMemoryOptimized: "安全增强内存型%s"
# 高IO型实例族
HighIO: "高IO型%s"
# 大数据型实例族
BigData: "大数据型%s"
# 计算型实例族
GType: "GPU型%s"
ComputeOptimized: "计算型%s"
ComputeNetwork: "计算网络增强型%s"
GComputeOptimized: "GPU计算型%s"
GVideoEnhanced: "GPU视频增强型%s"
GReasoning: "GPU推理型%s"
GRendering: "GPU渲染型%s"
# 操作日志
# 命名空间任务
createNamespace: "创建命名空间"
deleteNamespace: "删除命名空间"
# 资源配额任务
createResourceQuota: "创建资源配额"
deleteResourceQuota: "删除资源配额"
# 节点设置标签任务
nodeSetLabels: "节点设置通用标签"
nodeSetAnnotations: "节点设置注解"
# 检测kubeAgent状态
checkAgentStatus: "kubeAgent状态检测"
# 主机
transferHostModule: "转移主机模块"
removeHostFromCmdb: "移除主机"
#
ImportClusterNodesTask: "导入集群节点"
RegisterClusterKubeConfigTask: "注册集群kubeConfig认证"
InstallGSEAgentTask: "节点安装agent插件"
CreateClusterShieldAlarmTask: "屏蔽机器告警"
CreateTKEClusterTask: "创建集群"
CheckTKEClusterStatusTask: "检测集群状态"
CheckCreateClusterNodeStatusTask: "检测集群节点状态"
RegisterManageClusterKubeConfigTask: "注册集群连接信息"
EnableTkeClusterVpcCniTask: "开启VPC-CNI网络模式"
UpdateCreateClusterDBInfoTask: "更新任务状态"
DeleteTKEClusterTask: "删除集群"
CleanClusterDBInfoTask: "清理集群数据"
AddNodesShieldAlarmTask: "屏蔽机器告警"
AddNodesToClusterTask: "添加节点"
CheckAddNodesStatusTask: "检测节点状态"
UpdateAddNodeDBInfoTask: "更新节点数据"
RemoveNodesFromClusterTask: "删除节点"
UpdateRemoveNodeDBInfoTask: "清理节点数据"
CreateCloudNodeGroupTask: "创建云节点组"
CheckCloudNodeGroupStatusTask: "检测云节点组状态"
UpdateCreateNodeGroupDBInfoTask: "更新节点组数据"
DeleteNodeGroupTask: "删除云节点组"
UninstallAutoScalerTask: "卸载节点组自动扩缩容配置"
#DeleteNodeGroupTask: "清理节点组数据"
CleanNodeGroupNodesTask: "下架节点组节点"
ReturnIDCNodeToResourcePoolTask: "下架第三方节点"
CheckCleanNodeGroupNodesStatusTask: "检查节点组状态"
UpdateCleanNodeGroupNodesDBInfoTask: "更新节点组数据"
ApplyInstanceMachinesTask: "申请节点任务"
ApplyExternalNodeMachinesTask: "申请IDC节点任务"
CheckClusterNodesStatusTask: "检测节点状态"
UpdateDesiredNodesDBInfoTask: "清理节点数据"
DeleteAutoScalerTask: "删除CA组件"
UpdateNodeGroupAutoScalingDBTask: "更新CA组件状态"
GetExternalNodeScriptTask: "获取添加第三方节点脚本"
RemoveExternalNodesFromClusterTask: "删除第三方节点"
#
installGseAgent: "安装 GSE Agent"
#
resourcePoolLabel: "资源池设备设置标签"
#
unCordonNodes: "节点设置可调度状态"
cordonNodes: "节点设置不可调度状态"
#
UpdateNodeGroupDesiredNode: "扩容节点规格"
CleanNodeGroupNodes: "缩容节点规格"
SwitchNodeGroupAutoScaling: "开启/关闭节点规格"
CreateNodeGroup: "创建节点规格"
UpdateNodeGroup: "更新节点规格"
DeleteNodeGroup: "删除节点规格"
UpdateAutoScalingOption: "更新集群自动扩缩容配置"
SwitchAutoScalingOptionStatus: "开启/关闭集群自动扩缩容"
DebugBkSopsTask: "调试标准运维任务"
#
watchjob: "安装集群watch组件"
ensureAutoScaler: "安装/更新CA组件"
installVcluster: "安装/更新vCluster组件"
deleteVclu: "删除vCluster组件"
#
CreateCluster: "创建集群"
CreateVirtualCluster: "创建虚拟集群"
ImportCluster: "纳管集群"
DeleteCluster: "删除集群"
DeleteVirtualCluster: "删除虚拟集群"
AddNodesToCluster: "集群上架节点"
RemoveNodesFromCluster: "集群下架节点"
AddExternalNodesToCluster: "集群上架第三方节点"
RemoveExternalNodesFromCluster: "集群下架第三方节点"
#
SwitchNodeGroupAutoScalingOpenMsg: "%s 开启节点规格 "
SwitchNodeGroupAutoScalingCloseMsg: "%s 关闭节点规格"
UpdateNodeGroupDesiredNodeMsg: "集群%s扩容节点规格%s节点数至%v"
MoveNodesToNodeGroupMsg: "集群%s移入节点至节点规格%s"
CleanNodeGroupNodesMsg: "集群%s节点规格%s删除节点"
CreateNodeGroupMsg: "集群%s创建节点规格%s"
DeleteNodeGroupMsg: "集群%s删除节点规格%s"
RemoveNodesFromGroupMsg: "集群%s节点规格%s移除节点"
AddNodesToClusterMsg: "集群%s添加节点"
UpdateNodeGroupMsg: "集群%s节点规格%s更新配置信息"
SwitchAutoScalingOptionStatusMsg: "修改集群[%s]扩缩容开启状态为 %v"
UpdateAutoScalingOptionMsg: "编辑集群[%s]扩缩容配置"
CreateClusterMsg: "创建%s集群%s"
DeleteClusterMsg: "删除%s集群%s"
ImportClusterMsg: "导入%s集群%s"
#AddCluster: "添加集群%s为联邦集群%s"
#RetryCreateClusterMsg: "重试创建%s集群%s"
# template values
NodeIPList: "集群上架节点列表(,隔开的字符串)"
ProjectID: "集群所属项目ID"
ClusterID: "集群ID"
MasterIPList: "集群master节点IP列表(,隔开的字符串)"
Region: "集群地域信息"
ClusterVPC: "集群vpc信息"
BusinessID: "集群所属业务ID"
NodeOperator: "集群上下架节点操作人"

# kubelet参数
cpu-manager-policy: "要使用的 CPU 管理器策略"
eviction-hard: "强制驱逐设置，也具有一系列的阈值，比如memory.available<1Gi，即当节点可用内存低于1Gi时，会立即触发一次pod eviction"
eviction-max-pod-grace-period: "最大驱逐pod宽限期，停止信号与kill之间的时间差"
eviction-soft: "软驱逐阈值设置，具有一系列阈值，比如memory.available<1.5Gi时，它不会立即执行pod eviction，而会等待
eviction-soft-grace-period时间，假如该时间过后，依然还是达到了eviction-soft，则触发一次pod eviction"
eviction-soft-grace-period: "设置一组软驱逐宽限期（例如，memory.available=1m30s），对应于触发软性 Pod 
驱逐操作之前软性驱逐阈值所需持续的时间长短"
feature-gates: "用于alpha特性的特性开关组"
kube-api-burst: "每秒发送到 apiserver 的突发请求数量上限, 限制最大值为100"
kube-api-qps: "与 apiserver 通信的每秒查询个数（QPS）, 限制最大值为100"
max-pods: "此 kubelet 能运行的 Pod 最大数量"
root-dir: "设置用于管理 kubelet 文件的根目录"
v: "设置 kubelet 日志级别详细程度的数值"