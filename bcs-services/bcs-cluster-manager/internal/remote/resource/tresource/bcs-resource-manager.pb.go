// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bcs-resource-manager.proto

package tresource

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AvailableReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvailableReq) Reset()         { *m = AvailableReq{} }
func (m *AvailableReq) String() string { return proto.CompactTextString(m) }
func (*AvailableReq) ProtoMessage()    {}
func (*AvailableReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{0}
}

func (m *AvailableReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvailableReq.Unmarshal(m, b)
}
func (m *AvailableReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvailableReq.Marshal(b, m, deterministic)
}
func (m *AvailableReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvailableReq.Merge(m, src)
}
func (m *AvailableReq) XXX_Size() int {
	return xxx_messageInfo_AvailableReq.Size(m)
}
func (m *AvailableReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AvailableReq.DiscardUnknown(m)
}

var xxx_messageInfo_AvailableReq proto.InternalMessageInfo

type AvailableResp struct {
	Code                 *uint32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool    `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvailableResp) Reset()         { *m = AvailableResp{} }
func (m *AvailableResp) String() string { return proto.CompactTextString(m) }
func (*AvailableResp) ProtoMessage()    {}
func (*AvailableResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{1}
}

func (m *AvailableResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvailableResp.Unmarshal(m, b)
}
func (m *AvailableResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvailableResp.Marshal(b, m, deterministic)
}
func (m *AvailableResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvailableResp.Merge(m, src)
}
func (m *AvailableResp) XXX_Size() int {
	return xxx_messageInfo_AvailableResp.Size(m)
}
func (m *AvailableResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AvailableResp.DiscardUnknown(m)
}

var xxx_messageInfo_AvailableResp proto.InternalMessageInfo

func (m *AvailableResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *AvailableResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *AvailableResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type CreateObsCostReq struct {
	SpecName             *string  `protobuf:"bytes,1,opt,name=specName" json:"specName,omitempty"`
	TypeName             *string  `protobuf:"bytes,2,opt,name=typeName" json:"typeName,omitempty"`
	Type                 *string  `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Unit                 *string  `protobuf:"bytes,4,opt,name=unit" json:"unit,omitempty"`
	UnitPrice            *float64 `protobuf:"fixed64,5,opt,name=unitPrice" json:"unitPrice,omitempty"`
	Region               *string  `protobuf:"bytes,6,opt,name=region" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateObsCostReq) Reset()         { *m = CreateObsCostReq{} }
func (m *CreateObsCostReq) String() string { return proto.CompactTextString(m) }
func (*CreateObsCostReq) ProtoMessage()    {}
func (*CreateObsCostReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{2}
}

func (m *CreateObsCostReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateObsCostReq.Unmarshal(m, b)
}
func (m *CreateObsCostReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateObsCostReq.Marshal(b, m, deterministic)
}
func (m *CreateObsCostReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateObsCostReq.Merge(m, src)
}
func (m *CreateObsCostReq) XXX_Size() int {
	return xxx_messageInfo_CreateObsCostReq.Size(m)
}
func (m *CreateObsCostReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateObsCostReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateObsCostReq proto.InternalMessageInfo

func (m *CreateObsCostReq) GetSpecName() string {
	if m != nil && m.SpecName != nil {
		return *m.SpecName
	}
	return ""
}

func (m *CreateObsCostReq) GetTypeName() string {
	if m != nil && m.TypeName != nil {
		return *m.TypeName
	}
	return ""
}

func (m *CreateObsCostReq) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *CreateObsCostReq) GetUnit() string {
	if m != nil && m.Unit != nil {
		return *m.Unit
	}
	return ""
}

func (m *CreateObsCostReq) GetUnitPrice() float64 {
	if m != nil && m.UnitPrice != nil {
		return *m.UnitPrice
	}
	return 0
}

func (m *CreateObsCostReq) GetRegion() string {
	if m != nil && m.Region != nil {
		return *m.Region
	}
	return ""
}

type CreateObsCostResp struct {
	Code                 *uint32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool    `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *ObsCost `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateObsCostResp) Reset()         { *m = CreateObsCostResp{} }
func (m *CreateObsCostResp) String() string { return proto.CompactTextString(m) }
func (*CreateObsCostResp) ProtoMessage()    {}
func (*CreateObsCostResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{3}
}

func (m *CreateObsCostResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateObsCostResp.Unmarshal(m, b)
}
func (m *CreateObsCostResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateObsCostResp.Marshal(b, m, deterministic)
}
func (m *CreateObsCostResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateObsCostResp.Merge(m, src)
}
func (m *CreateObsCostResp) XXX_Size() int {
	return xxx_messageInfo_CreateObsCostResp.Size(m)
}
func (m *CreateObsCostResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateObsCostResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateObsCostResp proto.InternalMessageInfo

func (m *CreateObsCostResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *CreateObsCostResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CreateObsCostResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *CreateObsCostResp) GetData() *ObsCost {
	if m != nil {
		return m.Data
	}
	return nil
}

type ObsCost struct {
	SpecName             *string  `protobuf:"bytes,1,opt,name=specName" json:"specName,omitempty"`
	TypeName             *string  `protobuf:"bytes,2,opt,name=typeName" json:"typeName,omitempty"`
	Type                 *string  `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Unit                 *string  `protobuf:"bytes,4,opt,name=unit" json:"unit,omitempty"`
	UnitPrice            *float64 `protobuf:"fixed64,5,opt,name=unitPrice" json:"unitPrice,omitempty"`
	Region               *string  `protobuf:"bytes,6,opt,name=region" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObsCost) Reset()         { *m = ObsCost{} }
func (m *ObsCost) String() string { return proto.CompactTextString(m) }
func (*ObsCost) ProtoMessage()    {}
func (*ObsCost) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{4}
}

func (m *ObsCost) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObsCost.Unmarshal(m, b)
}
func (m *ObsCost) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObsCost.Marshal(b, m, deterministic)
}
func (m *ObsCost) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObsCost.Merge(m, src)
}
func (m *ObsCost) XXX_Size() int {
	return xxx_messageInfo_ObsCost.Size(m)
}
func (m *ObsCost) XXX_DiscardUnknown() {
	xxx_messageInfo_ObsCost.DiscardUnknown(m)
}

var xxx_messageInfo_ObsCost proto.InternalMessageInfo

func (m *ObsCost) GetSpecName() string {
	if m != nil && m.SpecName != nil {
		return *m.SpecName
	}
	return ""
}

func (m *ObsCost) GetTypeName() string {
	if m != nil && m.TypeName != nil {
		return *m.TypeName
	}
	return ""
}

func (m *ObsCost) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *ObsCost) GetUnit() string {
	if m != nil && m.Unit != nil {
		return *m.Unit
	}
	return ""
}

func (m *ObsCost) GetUnitPrice() float64 {
	if m != nil && m.UnitPrice != nil {
		return *m.UnitPrice
	}
	return 0
}

func (m *ObsCost) GetRegion() string {
	if m != nil && m.Region != nil {
		return *m.Region
	}
	return ""
}

type QueryObsBillReq struct {
	Year                 *uint32  `protobuf:"varint,1,opt,name=year" json:"year,omitempty"`
	Month                *uint32  `protobuf:"varint,2,opt,name=month" json:"month,omitempty"`
	LeftTime             *uint64  `protobuf:"varint,3,opt,name=leftTime" json:"leftTime,omitempty"`
	RightTime            *uint64  `protobuf:"varint,4,opt,name=rightTime" json:"rightTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryObsBillReq) Reset()         { *m = QueryObsBillReq{} }
func (m *QueryObsBillReq) String() string { return proto.CompactTextString(m) }
func (*QueryObsBillReq) ProtoMessage()    {}
func (*QueryObsBillReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{5}
}

func (m *QueryObsBillReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryObsBillReq.Unmarshal(m, b)
}
func (m *QueryObsBillReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryObsBillReq.Marshal(b, m, deterministic)
}
func (m *QueryObsBillReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryObsBillReq.Merge(m, src)
}
func (m *QueryObsBillReq) XXX_Size() int {
	return xxx_messageInfo_QueryObsBillReq.Size(m)
}
func (m *QueryObsBillReq) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryObsBillReq.DiscardUnknown(m)
}

var xxx_messageInfo_QueryObsBillReq proto.InternalMessageInfo

func (m *QueryObsBillReq) GetYear() uint32 {
	if m != nil && m.Year != nil {
		return *m.Year
	}
	return 0
}

func (m *QueryObsBillReq) GetMonth() uint32 {
	if m != nil && m.Month != nil {
		return *m.Month
	}
	return 0
}

func (m *QueryObsBillReq) GetLeftTime() uint64 {
	if m != nil && m.LeftTime != nil {
		return *m.LeftTime
	}
	return 0
}

func (m *QueryObsBillReq) GetRightTime() uint64 {
	if m != nil && m.RightTime != nil {
		return *m.RightTime
	}
	return 0
}

type QueryObsBillResp struct {
	Code                 *uint32    `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string    `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool      `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 []*ObsBill `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *QueryObsBillResp) Reset()         { *m = QueryObsBillResp{} }
func (m *QueryObsBillResp) String() string { return proto.CompactTextString(m) }
func (*QueryObsBillResp) ProtoMessage()    {}
func (*QueryObsBillResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{6}
}

func (m *QueryObsBillResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryObsBillResp.Unmarshal(m, b)
}
func (m *QueryObsBillResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryObsBillResp.Marshal(b, m, deterministic)
}
func (m *QueryObsBillResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryObsBillResp.Merge(m, src)
}
func (m *QueryObsBillResp) XXX_Size() int {
	return xxx_messageInfo_QueryObsBillResp.Size(m)
}
func (m *QueryObsBillResp) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryObsBillResp.DiscardUnknown(m)
}

var xxx_messageInfo_QueryObsBillResp proto.InternalMessageInfo

func (m *QueryObsBillResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *QueryObsBillResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *QueryObsBillResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *QueryObsBillResp) GetData() []*ObsBill {
	if m != nil {
		return m.Data
	}
	return nil
}

type ObsBill struct {
	Year                   *uint32  `protobuf:"varint,1,opt,name=year" json:"year,omitempty"`
	Month                  *uint32  `protobuf:"varint,2,opt,name=month" json:"month,omitempty"`
	LeftTime               *uint32  `protobuf:"varint,3,opt,name=leftTime" json:"leftTime,omitempty"`
	RightTime              *uint32  `protobuf:"varint,4,opt,name=rightTime" json:"rightTime,omitempty"`
	ProductionID           *string  `protobuf:"bytes,5,opt,name=productionID" json:"productionID,omitempty"`
	ProductionName         *string  `protobuf:"bytes,6,opt,name=productionName" json:"productionName,omitempty"`
	ResourceType           *string  `protobuf:"bytes,7,opt,name=resourceType" json:"resourceType,omitempty"`
	ResourceSpec           *string  `protobuf:"bytes,8,opt,name=resourceSpec" json:"resourceSpec,omitempty"`
	ResourceUnit           *string  `protobuf:"bytes,9,opt,name=resourceUnit" json:"resourceUnit,omitempty"`
	ResourceAmount         *uint32  `protobuf:"varint,10,opt,name=resourceAmount" json:"resourceAmount,omitempty"`
	ResourceUnitPrice      *float64 `protobuf:"fixed64,11,opt,name=resourceUnitPrice" json:"resourceUnitPrice,omitempty"`
	TotalPrice             *float64 `protobuf:"fixed64,12,opt,name=totalPrice" json:"totalPrice,omitempty"`
	ConsumerProductionID   *string  `protobuf:"bytes,13,opt,name=consumerProductionID" json:"consumerProductionID,omitempty"`
	ConsumerProductionName *string  `protobuf:"bytes,14,opt,name=consumerProductionName" json:"consumerProductionName,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *ObsBill) Reset()         { *m = ObsBill{} }
func (m *ObsBill) String() string { return proto.CompactTextString(m) }
func (*ObsBill) ProtoMessage()    {}
func (*ObsBill) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{7}
}

func (m *ObsBill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObsBill.Unmarshal(m, b)
}
func (m *ObsBill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObsBill.Marshal(b, m, deterministic)
}
func (m *ObsBill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObsBill.Merge(m, src)
}
func (m *ObsBill) XXX_Size() int {
	return xxx_messageInfo_ObsBill.Size(m)
}
func (m *ObsBill) XXX_DiscardUnknown() {
	xxx_messageInfo_ObsBill.DiscardUnknown(m)
}

var xxx_messageInfo_ObsBill proto.InternalMessageInfo

func (m *ObsBill) GetYear() uint32 {
	if m != nil && m.Year != nil {
		return *m.Year
	}
	return 0
}

func (m *ObsBill) GetMonth() uint32 {
	if m != nil && m.Month != nil {
		return *m.Month
	}
	return 0
}

func (m *ObsBill) GetLeftTime() uint32 {
	if m != nil && m.LeftTime != nil {
		return *m.LeftTime
	}
	return 0
}

func (m *ObsBill) GetRightTime() uint32 {
	if m != nil && m.RightTime != nil {
		return *m.RightTime
	}
	return 0
}

func (m *ObsBill) GetProductionID() string {
	if m != nil && m.ProductionID != nil {
		return *m.ProductionID
	}
	return ""
}

func (m *ObsBill) GetProductionName() string {
	if m != nil && m.ProductionName != nil {
		return *m.ProductionName
	}
	return ""
}

func (m *ObsBill) GetResourceType() string {
	if m != nil && m.ResourceType != nil {
		return *m.ResourceType
	}
	return ""
}

func (m *ObsBill) GetResourceSpec() string {
	if m != nil && m.ResourceSpec != nil {
		return *m.ResourceSpec
	}
	return ""
}

func (m *ObsBill) GetResourceUnit() string {
	if m != nil && m.ResourceUnit != nil {
		return *m.ResourceUnit
	}
	return ""
}

func (m *ObsBill) GetResourceAmount() uint32 {
	if m != nil && m.ResourceAmount != nil {
		return *m.ResourceAmount
	}
	return 0
}

func (m *ObsBill) GetResourceUnitPrice() float64 {
	if m != nil && m.ResourceUnitPrice != nil {
		return *m.ResourceUnitPrice
	}
	return 0
}

func (m *ObsBill) GetTotalPrice() float64 {
	if m != nil && m.TotalPrice != nil {
		return *m.TotalPrice
	}
	return 0
}

func (m *ObsBill) GetConsumerProductionID() string {
	if m != nil && m.ConsumerProductionID != nil {
		return *m.ConsumerProductionID
	}
	return ""
}

func (m *ObsBill) GetConsumerProductionName() string {
	if m != nil && m.ConsumerProductionName != nil {
		return *m.ConsumerProductionName
	}
	return ""
}

type CreateDeviceConsumerReq struct {
	Name                 *string           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Provider             *string           `protobuf:"bytes,2,opt,name=provider" json:"provider,omitempty"`
	ClusterID            *string           `protobuf:"bytes,3,opt,name=clusterID" json:"clusterID,omitempty"`
	AssociatedDevicePool []string          `protobuf:"bytes,4,rep,name=associatedDevicePool" json:"associatedDevicePool,omitempty"`
	Labels               map[string]string `protobuf:"bytes,5,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Operator             *string           `protobuf:"bytes,6,opt,name=operator" json:"operator,omitempty"`
	Quotas               []*ConsumerQuota  `protobuf:"bytes,7,rep,name=quotas" json:"quotas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateDeviceConsumerReq) Reset()         { *m = CreateDeviceConsumerReq{} }
func (m *CreateDeviceConsumerReq) String() string { return proto.CompactTextString(m) }
func (*CreateDeviceConsumerReq) ProtoMessage()    {}
func (*CreateDeviceConsumerReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{8}
}

func (m *CreateDeviceConsumerReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeviceConsumerReq.Unmarshal(m, b)
}
func (m *CreateDeviceConsumerReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeviceConsumerReq.Marshal(b, m, deterministic)
}
func (m *CreateDeviceConsumerReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeviceConsumerReq.Merge(m, src)
}
func (m *CreateDeviceConsumerReq) XXX_Size() int {
	return xxx_messageInfo_CreateDeviceConsumerReq.Size(m)
}
func (m *CreateDeviceConsumerReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeviceConsumerReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeviceConsumerReq proto.InternalMessageInfo

func (m *CreateDeviceConsumerReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CreateDeviceConsumerReq) GetProvider() string {
	if m != nil && m.Provider != nil {
		return *m.Provider
	}
	return ""
}

func (m *CreateDeviceConsumerReq) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *CreateDeviceConsumerReq) GetAssociatedDevicePool() []string {
	if m != nil {
		return m.AssociatedDevicePool
	}
	return nil
}

func (m *CreateDeviceConsumerReq) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateDeviceConsumerReq) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

func (m *CreateDeviceConsumerReq) GetQuotas() []*ConsumerQuota {
	if m != nil {
		return m.Quotas
	}
	return nil
}

type CreateDeviceConsumerResp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *DeviceConsumer `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreateDeviceConsumerResp) Reset()         { *m = CreateDeviceConsumerResp{} }
func (m *CreateDeviceConsumerResp) String() string { return proto.CompactTextString(m) }
func (*CreateDeviceConsumerResp) ProtoMessage()    {}
func (*CreateDeviceConsumerResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{9}
}

func (m *CreateDeviceConsumerResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeviceConsumerResp.Unmarshal(m, b)
}
func (m *CreateDeviceConsumerResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeviceConsumerResp.Marshal(b, m, deterministic)
}
func (m *CreateDeviceConsumerResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeviceConsumerResp.Merge(m, src)
}
func (m *CreateDeviceConsumerResp) XXX_Size() int {
	return xxx_messageInfo_CreateDeviceConsumerResp.Size(m)
}
func (m *CreateDeviceConsumerResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeviceConsumerResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeviceConsumerResp proto.InternalMessageInfo

func (m *CreateDeviceConsumerResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *CreateDeviceConsumerResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CreateDeviceConsumerResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *CreateDeviceConsumerResp) GetData() *DeviceConsumer {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetDeviceConsumerReq struct {
	DeviceConsumerID     *string  `protobuf:"bytes,1,opt,name=deviceConsumerID" json:"deviceConsumerID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceConsumerReq) Reset()         { *m = GetDeviceConsumerReq{} }
func (m *GetDeviceConsumerReq) String() string { return proto.CompactTextString(m) }
func (*GetDeviceConsumerReq) ProtoMessage()    {}
func (*GetDeviceConsumerReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{10}
}

func (m *GetDeviceConsumerReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceConsumerReq.Unmarshal(m, b)
}
func (m *GetDeviceConsumerReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceConsumerReq.Marshal(b, m, deterministic)
}
func (m *GetDeviceConsumerReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceConsumerReq.Merge(m, src)
}
func (m *GetDeviceConsumerReq) XXX_Size() int {
	return xxx_messageInfo_GetDeviceConsumerReq.Size(m)
}
func (m *GetDeviceConsumerReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceConsumerReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceConsumerReq proto.InternalMessageInfo

func (m *GetDeviceConsumerReq) GetDeviceConsumerID() string {
	if m != nil && m.DeviceConsumerID != nil {
		return *m.DeviceConsumerID
	}
	return ""
}

type GetDeviceConsumerResp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *DeviceConsumer `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetDeviceConsumerResp) Reset()         { *m = GetDeviceConsumerResp{} }
func (m *GetDeviceConsumerResp) String() string { return proto.CompactTextString(m) }
func (*GetDeviceConsumerResp) ProtoMessage()    {}
func (*GetDeviceConsumerResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{11}
}

func (m *GetDeviceConsumerResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceConsumerResp.Unmarshal(m, b)
}
func (m *GetDeviceConsumerResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceConsumerResp.Marshal(b, m, deterministic)
}
func (m *GetDeviceConsumerResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceConsumerResp.Merge(m, src)
}
func (m *GetDeviceConsumerResp) XXX_Size() int {
	return xxx_messageInfo_GetDeviceConsumerResp.Size(m)
}
func (m *GetDeviceConsumerResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceConsumerResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceConsumerResp proto.InternalMessageInfo

func (m *GetDeviceConsumerResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *GetDeviceConsumerResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *GetDeviceConsumerResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *GetDeviceConsumerResp) GetData() *DeviceConsumer {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListDeviceConsumerReq struct {
	Sort                 *string  `protobuf:"bytes,1,opt,name=sort" json:"sort,omitempty"`
	Desc                 *bool    `protobuf:"varint,2,opt,name=desc" json:"desc,omitempty"`
	Offset               *int64   `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	Limit                *int64   `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	Name                 []string `protobuf:"bytes,5,rep,name=name" json:"name,omitempty"`
	Provider             []string `protobuf:"bytes,6,rep,name=provider" json:"provider,omitempty"`
	ClusterID            []string `protobuf:"bytes,7,rep,name=clusterID" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDeviceConsumerReq) Reset()         { *m = ListDeviceConsumerReq{} }
func (m *ListDeviceConsumerReq) String() string { return proto.CompactTextString(m) }
func (*ListDeviceConsumerReq) ProtoMessage()    {}
func (*ListDeviceConsumerReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{12}
}

func (m *ListDeviceConsumerReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceConsumerReq.Unmarshal(m, b)
}
func (m *ListDeviceConsumerReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceConsumerReq.Marshal(b, m, deterministic)
}
func (m *ListDeviceConsumerReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceConsumerReq.Merge(m, src)
}
func (m *ListDeviceConsumerReq) XXX_Size() int {
	return xxx_messageInfo_ListDeviceConsumerReq.Size(m)
}
func (m *ListDeviceConsumerReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceConsumerReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceConsumerReq proto.InternalMessageInfo

func (m *ListDeviceConsumerReq) GetSort() string {
	if m != nil && m.Sort != nil {
		return *m.Sort
	}
	return ""
}

func (m *ListDeviceConsumerReq) GetDesc() bool {
	if m != nil && m.Desc != nil {
		return *m.Desc
	}
	return false
}

func (m *ListDeviceConsumerReq) GetOffset() int64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *ListDeviceConsumerReq) GetLimit() int64 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *ListDeviceConsumerReq) GetName() []string {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ListDeviceConsumerReq) GetProvider() []string {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *ListDeviceConsumerReq) GetClusterID() []string {
	if m != nil {
		return m.ClusterID
	}
	return nil
}

type ListDeviceConsumerResp struct {
	Code                 *uint32           `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string           `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool             `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 []*DeviceConsumer `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListDeviceConsumerResp) Reset()         { *m = ListDeviceConsumerResp{} }
func (m *ListDeviceConsumerResp) String() string { return proto.CompactTextString(m) }
func (*ListDeviceConsumerResp) ProtoMessage()    {}
func (*ListDeviceConsumerResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{13}
}

func (m *ListDeviceConsumerResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceConsumerResp.Unmarshal(m, b)
}
func (m *ListDeviceConsumerResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceConsumerResp.Marshal(b, m, deterministic)
}
func (m *ListDeviceConsumerResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceConsumerResp.Merge(m, src)
}
func (m *ListDeviceConsumerResp) XXX_Size() int {
	return xxx_messageInfo_ListDeviceConsumerResp.Size(m)
}
func (m *ListDeviceConsumerResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceConsumerResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceConsumerResp proto.InternalMessageInfo

func (m *ListDeviceConsumerResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ListDeviceConsumerResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ListDeviceConsumerResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ListDeviceConsumerResp) GetData() []*DeviceConsumer {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateDeviceConsumerReq struct {
	DeviceConsumerID     *string     `protobuf:"bytes,1,opt,name=deviceConsumerID" json:"deviceConsumerID,omitempty"`
	Name                 *string     `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Provider             *string     `protobuf:"bytes,3,opt,name=provider" json:"provider,omitempty"`
	ClusterID            *string     `protobuf:"bytes,4,opt,name=clusterID" json:"clusterID,omitempty"`
	AssociatedDevicePool *ListString `protobuf:"bytes,5,opt,name=associatedDevicePool" json:"associatedDevicePool,omitempty"`
	Labels               *Labels     `protobuf:"bytes,6,opt,name=labels" json:"labels,omitempty"`
	Operator             *string     `protobuf:"bytes,7,opt,name=operator" json:"operator,omitempty"`
	Quotas               *ListQuota  `protobuf:"bytes,8,opt,name=quotas" json:"quotas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpdateDeviceConsumerReq) Reset()         { *m = UpdateDeviceConsumerReq{} }
func (m *UpdateDeviceConsumerReq) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceConsumerReq) ProtoMessage()    {}
func (*UpdateDeviceConsumerReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{14}
}

func (m *UpdateDeviceConsumerReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceConsumerReq.Unmarshal(m, b)
}
func (m *UpdateDeviceConsumerReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceConsumerReq.Marshal(b, m, deterministic)
}
func (m *UpdateDeviceConsumerReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceConsumerReq.Merge(m, src)
}
func (m *UpdateDeviceConsumerReq) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceConsumerReq.Size(m)
}
func (m *UpdateDeviceConsumerReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceConsumerReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceConsumerReq proto.InternalMessageInfo

func (m *UpdateDeviceConsumerReq) GetDeviceConsumerID() string {
	if m != nil && m.DeviceConsumerID != nil {
		return *m.DeviceConsumerID
	}
	return ""
}

func (m *UpdateDeviceConsumerReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *UpdateDeviceConsumerReq) GetProvider() string {
	if m != nil && m.Provider != nil {
		return *m.Provider
	}
	return ""
}

func (m *UpdateDeviceConsumerReq) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *UpdateDeviceConsumerReq) GetAssociatedDevicePool() *ListString {
	if m != nil {
		return m.AssociatedDevicePool
	}
	return nil
}

func (m *UpdateDeviceConsumerReq) GetLabels() *Labels {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *UpdateDeviceConsumerReq) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

func (m *UpdateDeviceConsumerReq) GetQuotas() *ListQuota {
	if m != nil {
		return m.Quotas
	}
	return nil
}

type ListString struct {
	Data                 []string `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListString) Reset()         { *m = ListString{} }
func (m *ListString) String() string { return proto.CompactTextString(m) }
func (*ListString) ProtoMessage()    {}
func (*ListString) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{15}
}

func (m *ListString) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListString.Unmarshal(m, b)
}
func (m *ListString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListString.Marshal(b, m, deterministic)
}
func (m *ListString) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListString.Merge(m, src)
}
func (m *ListString) XXX_Size() int {
	return xxx_messageInfo_ListString.Size(m)
}
func (m *ListString) XXX_DiscardUnknown() {
	xxx_messageInfo_ListString.DiscardUnknown(m)
}

var xxx_messageInfo_ListString proto.InternalMessageInfo

func (m *ListString) GetData() []string {
	if m != nil {
		return m.Data
	}
	return nil
}

type Labels struct {
	Data                 map[string]string `protobuf:"bytes,1,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Labels) Reset()         { *m = Labels{} }
func (m *Labels) String() string { return proto.CompactTextString(m) }
func (*Labels) ProtoMessage()    {}
func (*Labels) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{16}
}

func (m *Labels) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Labels.Unmarshal(m, b)
}
func (m *Labels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Labels.Marshal(b, m, deterministic)
}
func (m *Labels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Labels.Merge(m, src)
}
func (m *Labels) XXX_Size() int {
	return xxx_messageInfo_Labels.Size(m)
}
func (m *Labels) XXX_DiscardUnknown() {
	xxx_messageInfo_Labels.DiscardUnknown(m)
}

var xxx_messageInfo_Labels proto.InternalMessageInfo

func (m *Labels) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

type Annotations struct {
	Data                 map[string]string `protobuf:"bytes,1,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Annotations) Reset()         { *m = Annotations{} }
func (m *Annotations) String() string { return proto.CompactTextString(m) }
func (*Annotations) ProtoMessage()    {}
func (*Annotations) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{17}
}

func (m *Annotations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Annotations.Unmarshal(m, b)
}
func (m *Annotations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Annotations.Marshal(b, m, deterministic)
}
func (m *Annotations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Annotations.Merge(m, src)
}
func (m *Annotations) XXX_Size() int {
	return xxx_messageInfo_Annotations.Size(m)
}
func (m *Annotations) XXX_DiscardUnknown() {
	xxx_messageInfo_Annotations.DiscardUnknown(m)
}

var xxx_messageInfo_Annotations proto.InternalMessageInfo

func (m *Annotations) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListQuota struct {
	Data                 []*ConsumerQuota `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListQuota) Reset()         { *m = ListQuota{} }
func (m *ListQuota) String() string { return proto.CompactTextString(m) }
func (*ListQuota) ProtoMessage()    {}
func (*ListQuota) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{18}
}

func (m *ListQuota) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListQuota.Unmarshal(m, b)
}
func (m *ListQuota) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListQuota.Marshal(b, m, deterministic)
}
func (m *ListQuota) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListQuota.Merge(m, src)
}
func (m *ListQuota) XXX_Size() int {
	return xxx_messageInfo_ListQuota.Size(m)
}
func (m *ListQuota) XXX_DiscardUnknown() {
	xxx_messageInfo_ListQuota.DiscardUnknown(m)
}

var xxx_messageInfo_ListQuota proto.InternalMessageInfo

func (m *ListQuota) GetData() []*ConsumerQuota {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateDeviceConsumerResp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *DeviceConsumer `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateDeviceConsumerResp) Reset()         { *m = UpdateDeviceConsumerResp{} }
func (m *UpdateDeviceConsumerResp) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceConsumerResp) ProtoMessage()    {}
func (*UpdateDeviceConsumerResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{19}
}

func (m *UpdateDeviceConsumerResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceConsumerResp.Unmarshal(m, b)
}
func (m *UpdateDeviceConsumerResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceConsumerResp.Marshal(b, m, deterministic)
}
func (m *UpdateDeviceConsumerResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceConsumerResp.Merge(m, src)
}
func (m *UpdateDeviceConsumerResp) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceConsumerResp.Size(m)
}
func (m *UpdateDeviceConsumerResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceConsumerResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceConsumerResp proto.InternalMessageInfo

func (m *UpdateDeviceConsumerResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *UpdateDeviceConsumerResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *UpdateDeviceConsumerResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *UpdateDeviceConsumerResp) GetData() *DeviceConsumer {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteDeviceConsumerReq struct {
	DeviceConsumerID     *string  `protobuf:"bytes,1,opt,name=deviceConsumerID" json:"deviceConsumerID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDeviceConsumerReq) Reset()         { *m = DeleteDeviceConsumerReq{} }
func (m *DeleteDeviceConsumerReq) String() string { return proto.CompactTextString(m) }
func (*DeleteDeviceConsumerReq) ProtoMessage()    {}
func (*DeleteDeviceConsumerReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{20}
}

func (m *DeleteDeviceConsumerReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDeviceConsumerReq.Unmarshal(m, b)
}
func (m *DeleteDeviceConsumerReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDeviceConsumerReq.Marshal(b, m, deterministic)
}
func (m *DeleteDeviceConsumerReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDeviceConsumerReq.Merge(m, src)
}
func (m *DeleteDeviceConsumerReq) XXX_Size() int {
	return xxx_messageInfo_DeleteDeviceConsumerReq.Size(m)
}
func (m *DeleteDeviceConsumerReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDeviceConsumerReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDeviceConsumerReq proto.InternalMessageInfo

func (m *DeleteDeviceConsumerReq) GetDeviceConsumerID() string {
	if m != nil && m.DeviceConsumerID != nil {
		return *m.DeviceConsumerID
	}
	return ""
}

type DeleteDeviceConsumerResp struct {
	Code                 *uint32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool    `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDeviceConsumerResp) Reset()         { *m = DeleteDeviceConsumerResp{} }
func (m *DeleteDeviceConsumerResp) String() string { return proto.CompactTextString(m) }
func (*DeleteDeviceConsumerResp) ProtoMessage()    {}
func (*DeleteDeviceConsumerResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{21}
}

func (m *DeleteDeviceConsumerResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDeviceConsumerResp.Unmarshal(m, b)
}
func (m *DeleteDeviceConsumerResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDeviceConsumerResp.Marshal(b, m, deterministic)
}
func (m *DeleteDeviceConsumerResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDeviceConsumerResp.Merge(m, src)
}
func (m *DeleteDeviceConsumerResp) XXX_Size() int {
	return xxx_messageInfo_DeleteDeviceConsumerResp.Size(m)
}
func (m *DeleteDeviceConsumerResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDeviceConsumerResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDeviceConsumerResp proto.InternalMessageInfo

func (m *DeleteDeviceConsumerResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *DeleteDeviceConsumerResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *DeleteDeviceConsumerResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type ConsumeDeviceReq struct {
	DeviceConsumerID     *string          `protobuf:"bytes,1,opt,name=deviceConsumerID" json:"deviceConsumerID,omitempty"`
	Num                  *uint32          `protobuf:"varint,2,opt,name=num" json:"num,omitempty"`
	Desire               []*ConsumeDesire `protobuf:"bytes,3,rep,name=desire" json:"desire,omitempty"`
	Operator             *string          `protobuf:"bytes,4,opt,name=operator" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ConsumeDeviceReq) Reset()         { *m = ConsumeDeviceReq{} }
func (m *ConsumeDeviceReq) String() string { return proto.CompactTextString(m) }
func (*ConsumeDeviceReq) ProtoMessage()    {}
func (*ConsumeDeviceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{22}
}

func (m *ConsumeDeviceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsumeDeviceReq.Unmarshal(m, b)
}
func (m *ConsumeDeviceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsumeDeviceReq.Marshal(b, m, deterministic)
}
func (m *ConsumeDeviceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsumeDeviceReq.Merge(m, src)
}
func (m *ConsumeDeviceReq) XXX_Size() int {
	return xxx_messageInfo_ConsumeDeviceReq.Size(m)
}
func (m *ConsumeDeviceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsumeDeviceReq.DiscardUnknown(m)
}

var xxx_messageInfo_ConsumeDeviceReq proto.InternalMessageInfo

func (m *ConsumeDeviceReq) GetDeviceConsumerID() string {
	if m != nil && m.DeviceConsumerID != nil {
		return *m.DeviceConsumerID
	}
	return ""
}

func (m *ConsumeDeviceReq) GetNum() uint32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *ConsumeDeviceReq) GetDesire() []*ConsumeDesire {
	if m != nil {
		return m.Desire
	}
	return nil
}

func (m *ConsumeDeviceReq) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

type ConsumeDeviceResp struct {
	Code                 *uint32     `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string     `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool       `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *RecordData `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ConsumeDeviceResp) Reset()         { *m = ConsumeDeviceResp{} }
func (m *ConsumeDeviceResp) String() string { return proto.CompactTextString(m) }
func (*ConsumeDeviceResp) ProtoMessage()    {}
func (*ConsumeDeviceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{23}
}

func (m *ConsumeDeviceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsumeDeviceResp.Unmarshal(m, b)
}
func (m *ConsumeDeviceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsumeDeviceResp.Marshal(b, m, deterministic)
}
func (m *ConsumeDeviceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsumeDeviceResp.Merge(m, src)
}
func (m *ConsumeDeviceResp) XXX_Size() int {
	return xxx_messageInfo_ConsumeDeviceResp.Size(m)
}
func (m *ConsumeDeviceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsumeDeviceResp.DiscardUnknown(m)
}

var xxx_messageInfo_ConsumeDeviceResp proto.InternalMessageInfo

func (m *ConsumeDeviceResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ConsumeDeviceResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ConsumeDeviceResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ConsumeDeviceResp) GetData() *RecordData {
	if m != nil {
		return m.Data
	}
	return nil
}

type ReturnDeviceReq struct {
	DeviceConsumerID     *string  `protobuf:"bytes,1,opt,name=deviceConsumerID" json:"deviceConsumerID,omitempty"`
	Devices              []string `protobuf:"bytes,2,rep,name=devices" json:"devices,omitempty"`
	Operator             *string  `protobuf:"bytes,3,opt,name=operator" json:"operator,omitempty"`
	ExtraSystemID        *string  `protobuf:"bytes,4,opt,name=extraSystemID" json:"extraSystemID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReturnDeviceReq) Reset()         { *m = ReturnDeviceReq{} }
func (m *ReturnDeviceReq) String() string { return proto.CompactTextString(m) }
func (*ReturnDeviceReq) ProtoMessage()    {}
func (*ReturnDeviceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{24}
}

func (m *ReturnDeviceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReturnDeviceReq.Unmarshal(m, b)
}
func (m *ReturnDeviceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReturnDeviceReq.Marshal(b, m, deterministic)
}
func (m *ReturnDeviceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReturnDeviceReq.Merge(m, src)
}
func (m *ReturnDeviceReq) XXX_Size() int {
	return xxx_messageInfo_ReturnDeviceReq.Size(m)
}
func (m *ReturnDeviceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReturnDeviceReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReturnDeviceReq proto.InternalMessageInfo

func (m *ReturnDeviceReq) GetDeviceConsumerID() string {
	if m != nil && m.DeviceConsumerID != nil {
		return *m.DeviceConsumerID
	}
	return ""
}

func (m *ReturnDeviceReq) GetDevices() []string {
	if m != nil {
		return m.Devices
	}
	return nil
}

func (m *ReturnDeviceReq) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

func (m *ReturnDeviceReq) GetExtraSystemID() string {
	if m != nil && m.ExtraSystemID != nil {
		return *m.ExtraSystemID
	}
	return ""
}

type ReturnDeviceResp struct {
	Code                 *uint32     `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string     `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool       `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *RecordData `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReturnDeviceResp) Reset()         { *m = ReturnDeviceResp{} }
func (m *ReturnDeviceResp) String() string { return proto.CompactTextString(m) }
func (*ReturnDeviceResp) ProtoMessage()    {}
func (*ReturnDeviceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{25}
}

func (m *ReturnDeviceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReturnDeviceResp.Unmarshal(m, b)
}
func (m *ReturnDeviceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReturnDeviceResp.Marshal(b, m, deterministic)
}
func (m *ReturnDeviceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReturnDeviceResp.Merge(m, src)
}
func (m *ReturnDeviceResp) XXX_Size() int {
	return xxx_messageInfo_ReturnDeviceResp.Size(m)
}
func (m *ReturnDeviceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ReturnDeviceResp.DiscardUnknown(m)
}

var xxx_messageInfo_ReturnDeviceResp proto.InternalMessageInfo

func (m *ReturnDeviceResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ReturnDeviceResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ReturnDeviceResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ReturnDeviceResp) GetData() *RecordData {
	if m != nil {
		return m.Data
	}
	return nil
}

type RecordData struct {
	ID                   *string  `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecordData) Reset()         { *m = RecordData{} }
func (m *RecordData) String() string { return proto.CompactTextString(m) }
func (*RecordData) ProtoMessage()    {}
func (*RecordData) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{26}
}

func (m *RecordData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecordData.Unmarshal(m, b)
}
func (m *RecordData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecordData.Marshal(b, m, deterministic)
}
func (m *RecordData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecordData.Merge(m, src)
}
func (m *RecordData) XXX_Size() int {
	return xxx_messageInfo_RecordData.Size(m)
}
func (m *RecordData) XXX_DiscardUnknown() {
	xxx_messageInfo_RecordData.DiscardUnknown(m)
}

var xxx_messageInfo_RecordData proto.InternalMessageInfo

func (m *RecordData) GetID() string {
	if m != nil && m.ID != nil {
		return *m.ID
	}
	return ""
}

type ConsumeDesire struct {
	InstanceType         *string           `protobuf:"bytes,1,opt,name=instanceType" json:"instanceType,omitempty"`
	Cpu                  *uint32           `protobuf:"varint,2,opt,name=cpu" json:"cpu,omitempty"`
	Mem                  *uint32           `protobuf:"varint,3,opt,name=mem" json:"mem,omitempty"`
	Gpu                  *uint32           `protobuf:"varint,4,opt,name=gpu" json:"gpu,omitempty"`
	SystemDisk           *DeviceDisk       `protobuf:"bytes,5,opt,name=systemDisk" json:"systemDisk,omitempty"`
	DataDisks            []*DeviceDisk     `protobuf:"bytes,6,rep,name=dataDisks" json:"dataDisks,omitempty"`
	Security             *DeviceSecurity   `protobuf:"bytes,7,opt,name=security" json:"security,omitempty"`
	Image                *DeviceImage      `protobuf:"bytes,8,opt,name=image" json:"image,omitempty"`
	Vpc                  *string           `protobuf:"bytes,9,opt,name=vpc" json:"vpc,omitempty"`
	Zone                 *DeviceZone       `protobuf:"bytes,10,opt,name=zone" json:"zone,omitempty"`
	BusinessID           *int64            `protobuf:"varint,11,opt,name=businessID" json:"businessID,omitempty"`
	AssetIDs             []string          `protobuf:"bytes,12,rep,name=assetIDs" json:"assetIDs,omitempty"`
	ModuleIDs            []int64           `protobuf:"varint,13,rep,name=moduleIDs" json:"moduleIDs,omitempty"`
	Labels               map[string]string `protobuf:"bytes,14,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ConsumeDesire) Reset()         { *m = ConsumeDesire{} }
func (m *ConsumeDesire) String() string { return proto.CompactTextString(m) }
func (*ConsumeDesire) ProtoMessage()    {}
func (*ConsumeDesire) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{27}
}

func (m *ConsumeDesire) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsumeDesire.Unmarshal(m, b)
}
func (m *ConsumeDesire) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsumeDesire.Marshal(b, m, deterministic)
}
func (m *ConsumeDesire) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsumeDesire.Merge(m, src)
}
func (m *ConsumeDesire) XXX_Size() int {
	return xxx_messageInfo_ConsumeDesire.Size(m)
}
func (m *ConsumeDesire) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsumeDesire.DiscardUnknown(m)
}

var xxx_messageInfo_ConsumeDesire proto.InternalMessageInfo

func (m *ConsumeDesire) GetInstanceType() string {
	if m != nil && m.InstanceType != nil {
		return *m.InstanceType
	}
	return ""
}

func (m *ConsumeDesire) GetCpu() uint32 {
	if m != nil && m.Cpu != nil {
		return *m.Cpu
	}
	return 0
}

func (m *ConsumeDesire) GetMem() uint32 {
	if m != nil && m.Mem != nil {
		return *m.Mem
	}
	return 0
}

func (m *ConsumeDesire) GetGpu() uint32 {
	if m != nil && m.Gpu != nil {
		return *m.Gpu
	}
	return 0
}

func (m *ConsumeDesire) GetSystemDisk() *DeviceDisk {
	if m != nil {
		return m.SystemDisk
	}
	return nil
}

func (m *ConsumeDesire) GetDataDisks() []*DeviceDisk {
	if m != nil {
		return m.DataDisks
	}
	return nil
}

func (m *ConsumeDesire) GetSecurity() *DeviceSecurity {
	if m != nil {
		return m.Security
	}
	return nil
}

func (m *ConsumeDesire) GetImage() *DeviceImage {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *ConsumeDesire) GetVpc() string {
	if m != nil && m.Vpc != nil {
		return *m.Vpc
	}
	return ""
}

func (m *ConsumeDesire) GetZone() *DeviceZone {
	if m != nil {
		return m.Zone
	}
	return nil
}

func (m *ConsumeDesire) GetBusinessID() int64 {
	if m != nil && m.BusinessID != nil {
		return *m.BusinessID
	}
	return 0
}

func (m *ConsumeDesire) GetAssetIDs() []string {
	if m != nil {
		return m.AssetIDs
	}
	return nil
}

func (m *ConsumeDesire) GetModuleIDs() []int64 {
	if m != nil {
		return m.ModuleIDs
	}
	return nil
}

func (m *ConsumeDesire) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type DeviceDisk struct {
	Type                 *string  `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Size                 *string  `protobuf:"bytes,2,opt,name=size" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceDisk) Reset()         { *m = DeviceDisk{} }
func (m *DeviceDisk) String() string { return proto.CompactTextString(m) }
func (*DeviceDisk) ProtoMessage()    {}
func (*DeviceDisk) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{28}
}

func (m *DeviceDisk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceDisk.Unmarshal(m, b)
}
func (m *DeviceDisk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceDisk.Marshal(b, m, deterministic)
}
func (m *DeviceDisk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceDisk.Merge(m, src)
}
func (m *DeviceDisk) XXX_Size() int {
	return xxx_messageInfo_DeviceDisk.Size(m)
}
func (m *DeviceDisk) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceDisk.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceDisk proto.InternalMessageInfo

func (m *DeviceDisk) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *DeviceDisk) GetSize() string {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return ""
}

type ConsumerQuota struct {
	Type                 *string  `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	DevicePoolID         *string  `protobuf:"bytes,2,opt,name=devicePoolID" json:"devicePoolID,omitempty"`
	Name                 *string  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Quota                *uint32  `protobuf:"varint,4,opt,name=quota" json:"quota,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsumerQuota) Reset()         { *m = ConsumerQuota{} }
func (m *ConsumerQuota) String() string { return proto.CompactTextString(m) }
func (*ConsumerQuota) ProtoMessage()    {}
func (*ConsumerQuota) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{29}
}

func (m *ConsumerQuota) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsumerQuota.Unmarshal(m, b)
}
func (m *ConsumerQuota) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsumerQuota.Marshal(b, m, deterministic)
}
func (m *ConsumerQuota) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsumerQuota.Merge(m, src)
}
func (m *ConsumerQuota) XXX_Size() int {
	return xxx_messageInfo_ConsumerQuota.Size(m)
}
func (m *ConsumerQuota) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsumerQuota.DiscardUnknown(m)
}

var xxx_messageInfo_ConsumerQuota proto.InternalMessageInfo

func (m *ConsumerQuota) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *ConsumerQuota) GetDevicePoolID() string {
	if m != nil && m.DevicePoolID != nil {
		return *m.DevicePoolID
	}
	return ""
}

func (m *ConsumerQuota) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ConsumerQuota) GetQuota() uint32 {
	if m != nil && m.Quota != nil {
		return *m.Quota
	}
	return 0
}

type DeviceConsumer struct {
	Id                   *string           `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name                 *string           `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Provider             *string           `protobuf:"bytes,3,opt,name=provider" json:"provider,omitempty"`
	ClusterID            *string           `protobuf:"bytes,4,opt,name=clusterID" json:"clusterID,omitempty"`
	AssociatedDevicePool []string          `protobuf:"bytes,5,rep,name=associatedDevicePool" json:"associatedDevicePool,omitempty"`
	Labels               map[string]string `protobuf:"bytes,6,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreateTime           *int64            `protobuf:"varint,7,opt,name=createTime" json:"createTime,omitempty"`
	UpdateTime           *int64            `protobuf:"varint,8,opt,name=updateTime" json:"updateTime,omitempty"`
	Quotas               []*ConsumerQuota  `protobuf:"bytes,9,rep,name=quotas" json:"quotas,omitempty"`
	Usages               []*ConsumerQuota  `protobuf:"bytes,10,rep,name=usages" json:"usages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DeviceConsumer) Reset()         { *m = DeviceConsumer{} }
func (m *DeviceConsumer) String() string { return proto.CompactTextString(m) }
func (*DeviceConsumer) ProtoMessage()    {}
func (*DeviceConsumer) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{30}
}

func (m *DeviceConsumer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceConsumer.Unmarshal(m, b)
}
func (m *DeviceConsumer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceConsumer.Marshal(b, m, deterministic)
}
func (m *DeviceConsumer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceConsumer.Merge(m, src)
}
func (m *DeviceConsumer) XXX_Size() int {
	return xxx_messageInfo_DeviceConsumer.Size(m)
}
func (m *DeviceConsumer) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceConsumer.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceConsumer proto.InternalMessageInfo

func (m *DeviceConsumer) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *DeviceConsumer) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *DeviceConsumer) GetProvider() string {
	if m != nil && m.Provider != nil {
		return *m.Provider
	}
	return ""
}

func (m *DeviceConsumer) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *DeviceConsumer) GetAssociatedDevicePool() []string {
	if m != nil {
		return m.AssociatedDevicePool
	}
	return nil
}

func (m *DeviceConsumer) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *DeviceConsumer) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *DeviceConsumer) GetUpdateTime() int64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *DeviceConsumer) GetQuotas() []*ConsumerQuota {
	if m != nil {
		return m.Quotas
	}
	return nil
}

func (m *DeviceConsumer) GetUsages() []*ConsumerQuota {
	if m != nil {
		return m.Usages
	}
	return nil
}

type CreateDevicePoolReq struct {
	Name                  *string                     `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Provider              *string                     `protobuf:"bytes,2,opt,name=provider" json:"provider,omitempty"`
	BaseConfig            *ConsumeDesire              `protobuf:"bytes,3,opt,name=baseConfig" json:"baseConfig,omitempty"`
	AllowedDeviceConsumer []string                    `protobuf:"bytes,4,rep,name=allowedDeviceConsumer" json:"allowedDeviceConsumer,omitempty"`
	Labels                map[string]string           `protobuf:"bytes,5,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Operator              *string                     `protobuf:"bytes,6,opt,name=operator" json:"operator,omitempty"`
	EnableAS              *bool                       `protobuf:"varint,7,opt,name=enableAS" json:"enableAS,omitempty"`
	AsOption              *DevicePoolAutoScalerOption `protobuf:"bytes,8,opt,name=asOption" json:"asOption,omitempty"`
	Reserved              *bool                       `protobuf:"varint,9,opt,name=reserved" json:"reserved,omitempty"`
	Type                  *string                     `protobuf:"bytes,10,opt,name=type" json:"type,omitempty"`
	Creator               *string                     `protobuf:"bytes,11,opt,name=creator" json:"creator,omitempty"`
	Annotations           map[string]string           `protobuf:"bytes,12,rep,name=annotations" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral  struct{}                    `json:"-"`
	XXX_unrecognized      []byte                      `json:"-"`
	XXX_sizecache         int32                       `json:"-"`
}

func (m *CreateDevicePoolReq) Reset()         { *m = CreateDevicePoolReq{} }
func (m *CreateDevicePoolReq) String() string { return proto.CompactTextString(m) }
func (*CreateDevicePoolReq) ProtoMessage()    {}
func (*CreateDevicePoolReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{31}
}

func (m *CreateDevicePoolReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDevicePoolReq.Unmarshal(m, b)
}
func (m *CreateDevicePoolReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDevicePoolReq.Marshal(b, m, deterministic)
}
func (m *CreateDevicePoolReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDevicePoolReq.Merge(m, src)
}
func (m *CreateDevicePoolReq) XXX_Size() int {
	return xxx_messageInfo_CreateDevicePoolReq.Size(m)
}
func (m *CreateDevicePoolReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDevicePoolReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDevicePoolReq proto.InternalMessageInfo

func (m *CreateDevicePoolReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CreateDevicePoolReq) GetProvider() string {
	if m != nil && m.Provider != nil {
		return *m.Provider
	}
	return ""
}

func (m *CreateDevicePoolReq) GetBaseConfig() *ConsumeDesire {
	if m != nil {
		return m.BaseConfig
	}
	return nil
}

func (m *CreateDevicePoolReq) GetAllowedDeviceConsumer() []string {
	if m != nil {
		return m.AllowedDeviceConsumer
	}
	return nil
}

func (m *CreateDevicePoolReq) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateDevicePoolReq) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

func (m *CreateDevicePoolReq) GetEnableAS() bool {
	if m != nil && m.EnableAS != nil {
		return *m.EnableAS
	}
	return false
}

func (m *CreateDevicePoolReq) GetAsOption() *DevicePoolAutoScalerOption {
	if m != nil {
		return m.AsOption
	}
	return nil
}

func (m *CreateDevicePoolReq) GetReserved() bool {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return false
}

func (m *CreateDevicePoolReq) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *CreateDevicePoolReq) GetCreator() string {
	if m != nil && m.Creator != nil {
		return *m.Creator
	}
	return ""
}

func (m *CreateDevicePoolReq) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

type CreateDevicePoolResp struct {
	Code                 *uint32     `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string     `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool       `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *DevicePool `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateDevicePoolResp) Reset()         { *m = CreateDevicePoolResp{} }
func (m *CreateDevicePoolResp) String() string { return proto.CompactTextString(m) }
func (*CreateDevicePoolResp) ProtoMessage()    {}
func (*CreateDevicePoolResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{32}
}

func (m *CreateDevicePoolResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDevicePoolResp.Unmarshal(m, b)
}
func (m *CreateDevicePoolResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDevicePoolResp.Marshal(b, m, deterministic)
}
func (m *CreateDevicePoolResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDevicePoolResp.Merge(m, src)
}
func (m *CreateDevicePoolResp) XXX_Size() int {
	return xxx_messageInfo_CreateDevicePoolResp.Size(m)
}
func (m *CreateDevicePoolResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDevicePoolResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDevicePoolResp proto.InternalMessageInfo

func (m *CreateDevicePoolResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *CreateDevicePoolResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CreateDevicePoolResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *CreateDevicePoolResp) GetData() *DevicePool {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetDevicePoolReq struct {
	DevicePoolID         *string  `protobuf:"bytes,1,opt,name=devicePoolID" json:"devicePoolID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDevicePoolReq) Reset()         { *m = GetDevicePoolReq{} }
func (m *GetDevicePoolReq) String() string { return proto.CompactTextString(m) }
func (*GetDevicePoolReq) ProtoMessage()    {}
func (*GetDevicePoolReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{33}
}

func (m *GetDevicePoolReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDevicePoolReq.Unmarshal(m, b)
}
func (m *GetDevicePoolReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDevicePoolReq.Marshal(b, m, deterministic)
}
func (m *GetDevicePoolReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDevicePoolReq.Merge(m, src)
}
func (m *GetDevicePoolReq) XXX_Size() int {
	return xxx_messageInfo_GetDevicePoolReq.Size(m)
}
func (m *GetDevicePoolReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDevicePoolReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetDevicePoolReq proto.InternalMessageInfo

func (m *GetDevicePoolReq) GetDevicePoolID() string {
	if m != nil && m.DevicePoolID != nil {
		return *m.DevicePoolID
	}
	return ""
}

type GetDevicePoolResp struct {
	Code                 *uint32     `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string     `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool       `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *DevicePool `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetDevicePoolResp) Reset()         { *m = GetDevicePoolResp{} }
func (m *GetDevicePoolResp) String() string { return proto.CompactTextString(m) }
func (*GetDevicePoolResp) ProtoMessage()    {}
func (*GetDevicePoolResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{34}
}

func (m *GetDevicePoolResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDevicePoolResp.Unmarshal(m, b)
}
func (m *GetDevicePoolResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDevicePoolResp.Marshal(b, m, deterministic)
}
func (m *GetDevicePoolResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDevicePoolResp.Merge(m, src)
}
func (m *GetDevicePoolResp) XXX_Size() int {
	return xxx_messageInfo_GetDevicePoolResp.Size(m)
}
func (m *GetDevicePoolResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDevicePoolResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetDevicePoolResp proto.InternalMessageInfo

func (m *GetDevicePoolResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *GetDevicePoolResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *GetDevicePoolResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *GetDevicePoolResp) GetData() *DevicePool {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetDevicePoolEventReq struct {
	DevicePoolID         *string  `protobuf:"bytes,1,opt,name=devicePoolID" json:"devicePoolID,omitempty"`
	Limit                *int64   `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	StartTime            *int64   `protobuf:"varint,3,opt,name=startTime" json:"startTime,omitempty"`
	EndTime              *int64   `protobuf:"varint,4,opt,name=endTime" json:"endTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDevicePoolEventReq) Reset()         { *m = GetDevicePoolEventReq{} }
func (m *GetDevicePoolEventReq) String() string { return proto.CompactTextString(m) }
func (*GetDevicePoolEventReq) ProtoMessage()    {}
func (*GetDevicePoolEventReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{35}
}

func (m *GetDevicePoolEventReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDevicePoolEventReq.Unmarshal(m, b)
}
func (m *GetDevicePoolEventReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDevicePoolEventReq.Marshal(b, m, deterministic)
}
func (m *GetDevicePoolEventReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDevicePoolEventReq.Merge(m, src)
}
func (m *GetDevicePoolEventReq) XXX_Size() int {
	return xxx_messageInfo_GetDevicePoolEventReq.Size(m)
}
func (m *GetDevicePoolEventReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDevicePoolEventReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetDevicePoolEventReq proto.InternalMessageInfo

func (m *GetDevicePoolEventReq) GetDevicePoolID() string {
	if m != nil && m.DevicePoolID != nil {
		return *m.DevicePoolID
	}
	return ""
}

func (m *GetDevicePoolEventReq) GetLimit() int64 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *GetDevicePoolEventReq) GetStartTime() int64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *GetDevicePoolEventReq) GetEndTime() int64 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

type GetDevicePoolEventResp struct {
	Code                 *uint32            `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string            `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool              `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 []*DevicePoolEvent `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetDevicePoolEventResp) Reset()         { *m = GetDevicePoolEventResp{} }
func (m *GetDevicePoolEventResp) String() string { return proto.CompactTextString(m) }
func (*GetDevicePoolEventResp) ProtoMessage()    {}
func (*GetDevicePoolEventResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{36}
}

func (m *GetDevicePoolEventResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDevicePoolEventResp.Unmarshal(m, b)
}
func (m *GetDevicePoolEventResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDevicePoolEventResp.Marshal(b, m, deterministic)
}
func (m *GetDevicePoolEventResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDevicePoolEventResp.Merge(m, src)
}
func (m *GetDevicePoolEventResp) XXX_Size() int {
	return xxx_messageInfo_GetDevicePoolEventResp.Size(m)
}
func (m *GetDevicePoolEventResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDevicePoolEventResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetDevicePoolEventResp proto.InternalMessageInfo

func (m *GetDevicePoolEventResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *GetDevicePoolEventResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *GetDevicePoolEventResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *GetDevicePoolEventResp) GetData() []*DevicePoolEvent {
	if m != nil {
		return m.Data
	}
	return nil
}

type DevicePoolEvent struct {
	DeviceID             *string  `protobuf:"bytes,1,opt,name=deviceID" json:"deviceID,omitempty"`
	AssetID              *string  `protobuf:"bytes,2,opt,name=assetID" json:"assetID,omitempty"`
	ConsumerID           *string  `protobuf:"bytes,3,opt,name=consumerID" json:"consumerID,omitempty"`
	DeviceIP             *string  `protobuf:"bytes,4,opt,name=deviceIP" json:"deviceIP,omitempty"`
	EventType            *string  `protobuf:"bytes,5,opt,name=eventType" json:"eventType,omitempty"`
	EventTime            *int64   `protobuf:"varint,6,opt,name=eventTime" json:"eventTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DevicePoolEvent) Reset()         { *m = DevicePoolEvent{} }
func (m *DevicePoolEvent) String() string { return proto.CompactTextString(m) }
func (*DevicePoolEvent) ProtoMessage()    {}
func (*DevicePoolEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{37}
}

func (m *DevicePoolEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DevicePoolEvent.Unmarshal(m, b)
}
func (m *DevicePoolEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DevicePoolEvent.Marshal(b, m, deterministic)
}
func (m *DevicePoolEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DevicePoolEvent.Merge(m, src)
}
func (m *DevicePoolEvent) XXX_Size() int {
	return xxx_messageInfo_DevicePoolEvent.Size(m)
}
func (m *DevicePoolEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DevicePoolEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DevicePoolEvent proto.InternalMessageInfo

func (m *DevicePoolEvent) GetDeviceID() string {
	if m != nil && m.DeviceID != nil {
		return *m.DeviceID
	}
	return ""
}

func (m *DevicePoolEvent) GetAssetID() string {
	if m != nil && m.AssetID != nil {
		return *m.AssetID
	}
	return ""
}

func (m *DevicePoolEvent) GetConsumerID() string {
	if m != nil && m.ConsumerID != nil {
		return *m.ConsumerID
	}
	return ""
}

func (m *DevicePoolEvent) GetDeviceIP() string {
	if m != nil && m.DeviceIP != nil {
		return *m.DeviceIP
	}
	return ""
}

func (m *DevicePoolEvent) GetEventType() string {
	if m != nil && m.EventType != nil {
		return *m.EventType
	}
	return ""
}

func (m *DevicePoolEvent) GetEventTime() int64 {
	if m != nil && m.EventTime != nil {
		return *m.EventTime
	}
	return 0
}

type ListDevicePoolReq struct {
	Sort                 *string  `protobuf:"bytes,1,opt,name=sort" json:"sort,omitempty"`
	Desc                 *bool    `protobuf:"varint,2,opt,name=desc" json:"desc,omitempty"`
	Offset               *int64   `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	Limit                *int64   `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	Name                 []string `protobuf:"bytes,5,rep,name=name" json:"name,omitempty"`
	Provider             []string `protobuf:"bytes,6,rep,name=provider" json:"provider,omitempty"`
	Onsale               *bool    `protobuf:"varint,7,opt,name=onsale" json:"onsale,omitempty"`
	Region               *string  `protobuf:"bytes,8,opt,name=region" json:"region,omitempty"`
	BusinessID           []int64  `protobuf:"varint,9,rep,name=businessID" json:"businessID,omitempty"`
	Status               []int64  `protobuf:"varint,10,rep,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDevicePoolReq) Reset()         { *m = ListDevicePoolReq{} }
func (m *ListDevicePoolReq) String() string { return proto.CompactTextString(m) }
func (*ListDevicePoolReq) ProtoMessage()    {}
func (*ListDevicePoolReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{38}
}

func (m *ListDevicePoolReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDevicePoolReq.Unmarshal(m, b)
}
func (m *ListDevicePoolReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDevicePoolReq.Marshal(b, m, deterministic)
}
func (m *ListDevicePoolReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDevicePoolReq.Merge(m, src)
}
func (m *ListDevicePoolReq) XXX_Size() int {
	return xxx_messageInfo_ListDevicePoolReq.Size(m)
}
func (m *ListDevicePoolReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDevicePoolReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListDevicePoolReq proto.InternalMessageInfo

func (m *ListDevicePoolReq) GetSort() string {
	if m != nil && m.Sort != nil {
		return *m.Sort
	}
	return ""
}

func (m *ListDevicePoolReq) GetDesc() bool {
	if m != nil && m.Desc != nil {
		return *m.Desc
	}
	return false
}

func (m *ListDevicePoolReq) GetOffset() int64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *ListDevicePoolReq) GetLimit() int64 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *ListDevicePoolReq) GetName() []string {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ListDevicePoolReq) GetProvider() []string {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *ListDevicePoolReq) GetOnsale() bool {
	if m != nil && m.Onsale != nil {
		return *m.Onsale
	}
	return false
}

func (m *ListDevicePoolReq) GetRegion() string {
	if m != nil && m.Region != nil {
		return *m.Region
	}
	return ""
}

func (m *ListDevicePoolReq) GetBusinessID() []int64 {
	if m != nil {
		return m.BusinessID
	}
	return nil
}

func (m *ListDevicePoolReq) GetStatus() []int64 {
	if m != nil {
		return m.Status
	}
	return nil
}

type ListDevicePoolResp struct {
	Code                 *uint32       `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string       `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool         `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 []*DevicePool `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListDevicePoolResp) Reset()         { *m = ListDevicePoolResp{} }
func (m *ListDevicePoolResp) String() string { return proto.CompactTextString(m) }
func (*ListDevicePoolResp) ProtoMessage()    {}
func (*ListDevicePoolResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{39}
}

func (m *ListDevicePoolResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDevicePoolResp.Unmarshal(m, b)
}
func (m *ListDevicePoolResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDevicePoolResp.Marshal(b, m, deterministic)
}
func (m *ListDevicePoolResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDevicePoolResp.Merge(m, src)
}
func (m *ListDevicePoolResp) XXX_Size() int {
	return xxx_messageInfo_ListDevicePoolResp.Size(m)
}
func (m *ListDevicePoolResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDevicePoolResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListDevicePoolResp proto.InternalMessageInfo

func (m *ListDevicePoolResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ListDevicePoolResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ListDevicePoolResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ListDevicePoolResp) GetData() []*DevicePool {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateDevicePoolReq struct {
	DevicePoolID          *string                     `protobuf:"bytes,1,opt,name=devicePoolID" json:"devicePoolID,omitempty"`
	Name                  *string                     `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Provider              *string                     `protobuf:"bytes,3,opt,name=provider" json:"provider,omitempty"`
	BaseConfig            *ConsumeDesire              `protobuf:"bytes,4,opt,name=baseConfig" json:"baseConfig,omitempty"`
	AllowedDeviceConsumer *ListString                 `protobuf:"bytes,5,opt,name=allowedDeviceConsumer" json:"allowedDeviceConsumer,omitempty"`
	Labels                *Labels                     `protobuf:"bytes,6,opt,name=labels" json:"labels,omitempty"`
	Operator              *string                     `protobuf:"bytes,7,opt,name=operator" json:"operator,omitempty"`
	EnableAS              *bool                       `protobuf:"varint,8,opt,name=enableAS" json:"enableAS,omitempty"`
	AsOption              *DevicePoolAutoScalerOption `protobuf:"bytes,9,opt,name=asOption" json:"asOption,omitempty"`
	Reserved              *bool                       `protobuf:"varint,10,opt,name=reserved" json:"reserved,omitempty"`
	Type                  *string                     `protobuf:"bytes,11,opt,name=type" json:"type,omitempty"`
	Updater               *string                     `protobuf:"bytes,12,opt,name=updater" json:"updater,omitempty"`
	Status                *int64                      `protobuf:"varint,13,opt,name=status" json:"status,omitempty"`
	Annotations           *Annotations                `protobuf:"bytes,14,opt,name=annotations" json:"annotations,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                    `json:"-"`
	XXX_unrecognized      []byte                      `json:"-"`
	XXX_sizecache         int32                       `json:"-"`
}

func (m *UpdateDevicePoolReq) Reset()         { *m = UpdateDevicePoolReq{} }
func (m *UpdateDevicePoolReq) String() string { return proto.CompactTextString(m) }
func (*UpdateDevicePoolReq) ProtoMessage()    {}
func (*UpdateDevicePoolReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{40}
}

func (m *UpdateDevicePoolReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDevicePoolReq.Unmarshal(m, b)
}
func (m *UpdateDevicePoolReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDevicePoolReq.Marshal(b, m, deterministic)
}
func (m *UpdateDevicePoolReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDevicePoolReq.Merge(m, src)
}
func (m *UpdateDevicePoolReq) XXX_Size() int {
	return xxx_messageInfo_UpdateDevicePoolReq.Size(m)
}
func (m *UpdateDevicePoolReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDevicePoolReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDevicePoolReq proto.InternalMessageInfo

func (m *UpdateDevicePoolReq) GetDevicePoolID() string {
	if m != nil && m.DevicePoolID != nil {
		return *m.DevicePoolID
	}
	return ""
}

func (m *UpdateDevicePoolReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *UpdateDevicePoolReq) GetProvider() string {
	if m != nil && m.Provider != nil {
		return *m.Provider
	}
	return ""
}

func (m *UpdateDevicePoolReq) GetBaseConfig() *ConsumeDesire {
	if m != nil {
		return m.BaseConfig
	}
	return nil
}

func (m *UpdateDevicePoolReq) GetAllowedDeviceConsumer() *ListString {
	if m != nil {
		return m.AllowedDeviceConsumer
	}
	return nil
}

func (m *UpdateDevicePoolReq) GetLabels() *Labels {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *UpdateDevicePoolReq) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

func (m *UpdateDevicePoolReq) GetEnableAS() bool {
	if m != nil && m.EnableAS != nil {
		return *m.EnableAS
	}
	return false
}

func (m *UpdateDevicePoolReq) GetAsOption() *DevicePoolAutoScalerOption {
	if m != nil {
		return m.AsOption
	}
	return nil
}

func (m *UpdateDevicePoolReq) GetReserved() bool {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return false
}

func (m *UpdateDevicePoolReq) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *UpdateDevicePoolReq) GetUpdater() string {
	if m != nil && m.Updater != nil {
		return *m.Updater
	}
	return ""
}

func (m *UpdateDevicePoolReq) GetStatus() int64 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *UpdateDevicePoolReq) GetAnnotations() *Annotations {
	if m != nil {
		return m.Annotations
	}
	return nil
}

type UpdateDevicePoolResp struct {
	Code                 *uint32     `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string     `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool       `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *DevicePool `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpdateDevicePoolResp) Reset()         { *m = UpdateDevicePoolResp{} }
func (m *UpdateDevicePoolResp) String() string { return proto.CompactTextString(m) }
func (*UpdateDevicePoolResp) ProtoMessage()    {}
func (*UpdateDevicePoolResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{41}
}

func (m *UpdateDevicePoolResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDevicePoolResp.Unmarshal(m, b)
}
func (m *UpdateDevicePoolResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDevicePoolResp.Marshal(b, m, deterministic)
}
func (m *UpdateDevicePoolResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDevicePoolResp.Merge(m, src)
}
func (m *UpdateDevicePoolResp) XXX_Size() int {
	return xxx_messageInfo_UpdateDevicePoolResp.Size(m)
}
func (m *UpdateDevicePoolResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDevicePoolResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDevicePoolResp proto.InternalMessageInfo

func (m *UpdateDevicePoolResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *UpdateDevicePoolResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *UpdateDevicePoolResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *UpdateDevicePoolResp) GetData() *DevicePool {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteDevicePoolReq struct {
	DevicePoolID         *string  `protobuf:"bytes,1,opt,name=devicePoolID" json:"devicePoolID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDevicePoolReq) Reset()         { *m = DeleteDevicePoolReq{} }
func (m *DeleteDevicePoolReq) String() string { return proto.CompactTextString(m) }
func (*DeleteDevicePoolReq) ProtoMessage()    {}
func (*DeleteDevicePoolReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{42}
}

func (m *DeleteDevicePoolReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDevicePoolReq.Unmarshal(m, b)
}
func (m *DeleteDevicePoolReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDevicePoolReq.Marshal(b, m, deterministic)
}
func (m *DeleteDevicePoolReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDevicePoolReq.Merge(m, src)
}
func (m *DeleteDevicePoolReq) XXX_Size() int {
	return xxx_messageInfo_DeleteDevicePoolReq.Size(m)
}
func (m *DeleteDevicePoolReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDevicePoolReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDevicePoolReq proto.InternalMessageInfo

func (m *DeleteDevicePoolReq) GetDevicePoolID() string {
	if m != nil && m.DevicePoolID != nil {
		return *m.DevicePoolID
	}
	return ""
}

type DeleteDevicePoolResp struct {
	Code                 *uint32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool    `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDevicePoolResp) Reset()         { *m = DeleteDevicePoolResp{} }
func (m *DeleteDevicePoolResp) String() string { return proto.CompactTextString(m) }
func (*DeleteDevicePoolResp) ProtoMessage()    {}
func (*DeleteDevicePoolResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{43}
}

func (m *DeleteDevicePoolResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDevicePoolResp.Unmarshal(m, b)
}
func (m *DeleteDevicePoolResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDevicePoolResp.Marshal(b, m, deterministic)
}
func (m *DeleteDevicePoolResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDevicePoolResp.Merge(m, src)
}
func (m *DeleteDevicePoolResp) XXX_Size() int {
	return xxx_messageInfo_DeleteDevicePoolResp.Size(m)
}
func (m *DeleteDevicePoolResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDevicePoolResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDevicePoolResp proto.InternalMessageInfo

func (m *DeleteDevicePoolResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *DeleteDevicePoolResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *DeleteDevicePoolResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type ImportDeviceToDevicePoolReq struct {
	DevicePoolID         *string   `protobuf:"bytes,1,opt,name=devicePoolID" json:"devicePoolID,omitempty"`
	Devices              []*Device `protobuf:"bytes,2,rep,name=devices" json:"devices,omitempty"`
	Operator             *string   `protobuf:"bytes,3,opt,name=operator" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ImportDeviceToDevicePoolReq) Reset()         { *m = ImportDeviceToDevicePoolReq{} }
func (m *ImportDeviceToDevicePoolReq) String() string { return proto.CompactTextString(m) }
func (*ImportDeviceToDevicePoolReq) ProtoMessage()    {}
func (*ImportDeviceToDevicePoolReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{44}
}

func (m *ImportDeviceToDevicePoolReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportDeviceToDevicePoolReq.Unmarshal(m, b)
}
func (m *ImportDeviceToDevicePoolReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportDeviceToDevicePoolReq.Marshal(b, m, deterministic)
}
func (m *ImportDeviceToDevicePoolReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportDeviceToDevicePoolReq.Merge(m, src)
}
func (m *ImportDeviceToDevicePoolReq) XXX_Size() int {
	return xxx_messageInfo_ImportDeviceToDevicePoolReq.Size(m)
}
func (m *ImportDeviceToDevicePoolReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportDeviceToDevicePoolReq.DiscardUnknown(m)
}

var xxx_messageInfo_ImportDeviceToDevicePoolReq proto.InternalMessageInfo

func (m *ImportDeviceToDevicePoolReq) GetDevicePoolID() string {
	if m != nil && m.DevicePoolID != nil {
		return *m.DevicePoolID
	}
	return ""
}

func (m *ImportDeviceToDevicePoolReq) GetDevices() []*Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

func (m *ImportDeviceToDevicePoolReq) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

type ImportDevicesToDevicePoolByBkAssetIDsReq struct {
	DevicePoolID         *string  `protobuf:"bytes,1,opt,name=devicePoolID" json:"devicePoolID,omitempty"`
	BkAssetIDs           []string `protobuf:"bytes,2,rep,name=bkAssetIDs" json:"bkAssetIDs,omitempty"`
	Operator             *string  `protobuf:"bytes,3,opt,name=operator" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportDevicesToDevicePoolByBkAssetIDsReq) Reset() {
	*m = ImportDevicesToDevicePoolByBkAssetIDsReq{}
}
func (m *ImportDevicesToDevicePoolByBkAssetIDsReq) String() string { return proto.CompactTextString(m) }
func (*ImportDevicesToDevicePoolByBkAssetIDsReq) ProtoMessage()    {}
func (*ImportDevicesToDevicePoolByBkAssetIDsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{45}
}

func (m *ImportDevicesToDevicePoolByBkAssetIDsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportDevicesToDevicePoolByBkAssetIDsReq.Unmarshal(m, b)
}
func (m *ImportDevicesToDevicePoolByBkAssetIDsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportDevicesToDevicePoolByBkAssetIDsReq.Marshal(b, m, deterministic)
}
func (m *ImportDevicesToDevicePoolByBkAssetIDsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportDevicesToDevicePoolByBkAssetIDsReq.Merge(m, src)
}
func (m *ImportDevicesToDevicePoolByBkAssetIDsReq) XXX_Size() int {
	return xxx_messageInfo_ImportDevicesToDevicePoolByBkAssetIDsReq.Size(m)
}
func (m *ImportDevicesToDevicePoolByBkAssetIDsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportDevicesToDevicePoolByBkAssetIDsReq.DiscardUnknown(m)
}

var xxx_messageInfo_ImportDevicesToDevicePoolByBkAssetIDsReq proto.InternalMessageInfo

func (m *ImportDevicesToDevicePoolByBkAssetIDsReq) GetDevicePoolID() string {
	if m != nil && m.DevicePoolID != nil {
		return *m.DevicePoolID
	}
	return ""
}

func (m *ImportDevicesToDevicePoolByBkAssetIDsReq) GetBkAssetIDs() []string {
	if m != nil {
		return m.BkAssetIDs
	}
	return nil
}

func (m *ImportDevicesToDevicePoolByBkAssetIDsReq) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

type ImportDevicesToDevicePoolByBkAssetIDsResp struct {
	Code                 *uint32            `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string            `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool              `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *ImportDevicesData `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ImportDevicesToDevicePoolByBkAssetIDsResp) Reset() {
	*m = ImportDevicesToDevicePoolByBkAssetIDsResp{}
}
func (m *ImportDevicesToDevicePoolByBkAssetIDsResp) String() string {
	return proto.CompactTextString(m)
}
func (*ImportDevicesToDevicePoolByBkAssetIDsResp) ProtoMessage() {}
func (*ImportDevicesToDevicePoolByBkAssetIDsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{46}
}

func (m *ImportDevicesToDevicePoolByBkAssetIDsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportDevicesToDevicePoolByBkAssetIDsResp.Unmarshal(m, b)
}
func (m *ImportDevicesToDevicePoolByBkAssetIDsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportDevicesToDevicePoolByBkAssetIDsResp.Marshal(b, m, deterministic)
}
func (m *ImportDevicesToDevicePoolByBkAssetIDsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportDevicesToDevicePoolByBkAssetIDsResp.Merge(m, src)
}
func (m *ImportDevicesToDevicePoolByBkAssetIDsResp) XXX_Size() int {
	return xxx_messageInfo_ImportDevicesToDevicePoolByBkAssetIDsResp.Size(m)
}
func (m *ImportDevicesToDevicePoolByBkAssetIDsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportDevicesToDevicePoolByBkAssetIDsResp.DiscardUnknown(m)
}

var xxx_messageInfo_ImportDevicesToDevicePoolByBkAssetIDsResp proto.InternalMessageInfo

func (m *ImportDevicesToDevicePoolByBkAssetIDsResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ImportDevicesToDevicePoolByBkAssetIDsResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ImportDevicesToDevicePoolByBkAssetIDsResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ImportDevicesToDevicePoolByBkAssetIDsResp) GetData() *ImportDevicesData {
	if m != nil {
		return m.Data
	}
	return nil
}

type ImportDevicesData struct {
	Success              []string `protobuf:"bytes,1,rep,name=success" json:"success,omitempty"`
	Failed               []string `protobuf:"bytes,2,rep,name=failed" json:"failed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportDevicesData) Reset()         { *m = ImportDevicesData{} }
func (m *ImportDevicesData) String() string { return proto.CompactTextString(m) }
func (*ImportDevicesData) ProtoMessage()    {}
func (*ImportDevicesData) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{47}
}

func (m *ImportDevicesData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportDevicesData.Unmarshal(m, b)
}
func (m *ImportDevicesData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportDevicesData.Marshal(b, m, deterministic)
}
func (m *ImportDevicesData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportDevicesData.Merge(m, src)
}
func (m *ImportDevicesData) XXX_Size() int {
	return xxx_messageInfo_ImportDevicesData.Size(m)
}
func (m *ImportDevicesData) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportDevicesData.DiscardUnknown(m)
}

var xxx_messageInfo_ImportDevicesData proto.InternalMessageInfo

func (m *ImportDevicesData) GetSuccess() []string {
	if m != nil {
		return m.Success
	}
	return nil
}

func (m *ImportDevicesData) GetFailed() []string {
	if m != nil {
		return m.Failed
	}
	return nil
}

type ImportDeviceToDevicePoolByBkAssetIDReq struct {
	DevicePoolID         *string  `protobuf:"bytes,1,opt,name=devicePoolID" json:"devicePoolID,omitempty"`
	BkAssetID            *string  `protobuf:"bytes,2,opt,name=bkAssetID" json:"bkAssetID,omitempty"`
	Operator             *string  `protobuf:"bytes,3,opt,name=operator" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportDeviceToDevicePoolByBkAssetIDReq) Reset() {
	*m = ImportDeviceToDevicePoolByBkAssetIDReq{}
}
func (m *ImportDeviceToDevicePoolByBkAssetIDReq) String() string { return proto.CompactTextString(m) }
func (*ImportDeviceToDevicePoolByBkAssetIDReq) ProtoMessage()    {}
func (*ImportDeviceToDevicePoolByBkAssetIDReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{48}
}

func (m *ImportDeviceToDevicePoolByBkAssetIDReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportDeviceToDevicePoolByBkAssetIDReq.Unmarshal(m, b)
}
func (m *ImportDeviceToDevicePoolByBkAssetIDReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportDeviceToDevicePoolByBkAssetIDReq.Marshal(b, m, deterministic)
}
func (m *ImportDeviceToDevicePoolByBkAssetIDReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportDeviceToDevicePoolByBkAssetIDReq.Merge(m, src)
}
func (m *ImportDeviceToDevicePoolByBkAssetIDReq) XXX_Size() int {
	return xxx_messageInfo_ImportDeviceToDevicePoolByBkAssetIDReq.Size(m)
}
func (m *ImportDeviceToDevicePoolByBkAssetIDReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportDeviceToDevicePoolByBkAssetIDReq.DiscardUnknown(m)
}

var xxx_messageInfo_ImportDeviceToDevicePoolByBkAssetIDReq proto.InternalMessageInfo

func (m *ImportDeviceToDevicePoolByBkAssetIDReq) GetDevicePoolID() string {
	if m != nil && m.DevicePoolID != nil {
		return *m.DevicePoolID
	}
	return ""
}

func (m *ImportDeviceToDevicePoolByBkAssetIDReq) GetBkAssetID() string {
	if m != nil && m.BkAssetID != nil {
		return *m.BkAssetID
	}
	return ""
}

func (m *ImportDeviceToDevicePoolByBkAssetIDReq) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

type ImportDeviceToDevicePoolResp struct {
	Code                 *uint32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool    `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportDeviceToDevicePoolResp) Reset()         { *m = ImportDeviceToDevicePoolResp{} }
func (m *ImportDeviceToDevicePoolResp) String() string { return proto.CompactTextString(m) }
func (*ImportDeviceToDevicePoolResp) ProtoMessage()    {}
func (*ImportDeviceToDevicePoolResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{49}
}

func (m *ImportDeviceToDevicePoolResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportDeviceToDevicePoolResp.Unmarshal(m, b)
}
func (m *ImportDeviceToDevicePoolResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportDeviceToDevicePoolResp.Marshal(b, m, deterministic)
}
func (m *ImportDeviceToDevicePoolResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportDeviceToDevicePoolResp.Merge(m, src)
}
func (m *ImportDeviceToDevicePoolResp) XXX_Size() int {
	return xxx_messageInfo_ImportDeviceToDevicePoolResp.Size(m)
}
func (m *ImportDeviceToDevicePoolResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportDeviceToDevicePoolResp.DiscardUnknown(m)
}

var xxx_messageInfo_ImportDeviceToDevicePoolResp proto.InternalMessageInfo

func (m *ImportDeviceToDevicePoolResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ImportDeviceToDevicePoolResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ImportDeviceToDevicePoolResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type CreateProviderReq struct {
	Name                 *string           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Key                  *string           `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Secret               *string           `protobuf:"bytes,3,opt,name=secret" json:"secret,omitempty"`
	Labels               map[string]string `protobuf:"bytes,4,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Operator             *string           `protobuf:"bytes,5,opt,name=operator" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateProviderReq) Reset()         { *m = CreateProviderReq{} }
func (m *CreateProviderReq) String() string { return proto.CompactTextString(m) }
func (*CreateProviderReq) ProtoMessage()    {}
func (*CreateProviderReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{50}
}

func (m *CreateProviderReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProviderReq.Unmarshal(m, b)
}
func (m *CreateProviderReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProviderReq.Marshal(b, m, deterministic)
}
func (m *CreateProviderReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProviderReq.Merge(m, src)
}
func (m *CreateProviderReq) XXX_Size() int {
	return xxx_messageInfo_CreateProviderReq.Size(m)
}
func (m *CreateProviderReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProviderReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProviderReq proto.InternalMessageInfo

func (m *CreateProviderReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CreateProviderReq) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *CreateProviderReq) GetSecret() string {
	if m != nil && m.Secret != nil {
		return *m.Secret
	}
	return ""
}

func (m *CreateProviderReq) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateProviderReq) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

type CreateProviderResp struct {
	Code                 *uint32   `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string   `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool     `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *Provider `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateProviderResp) Reset()         { *m = CreateProviderResp{} }
func (m *CreateProviderResp) String() string { return proto.CompactTextString(m) }
func (*CreateProviderResp) ProtoMessage()    {}
func (*CreateProviderResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{51}
}

func (m *CreateProviderResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProviderResp.Unmarshal(m, b)
}
func (m *CreateProviderResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProviderResp.Marshal(b, m, deterministic)
}
func (m *CreateProviderResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProviderResp.Merge(m, src)
}
func (m *CreateProviderResp) XXX_Size() int {
	return xxx_messageInfo_CreateProviderResp.Size(m)
}
func (m *CreateProviderResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProviderResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProviderResp proto.InternalMessageInfo

func (m *CreateProviderResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *CreateProviderResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CreateProviderResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *CreateProviderResp) GetData() *Provider {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetProviderReq struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProviderReq) Reset()         { *m = GetProviderReq{} }
func (m *GetProviderReq) String() string { return proto.CompactTextString(m) }
func (*GetProviderReq) ProtoMessage()    {}
func (*GetProviderReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{52}
}

func (m *GetProviderReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProviderReq.Unmarshal(m, b)
}
func (m *GetProviderReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProviderReq.Marshal(b, m, deterministic)
}
func (m *GetProviderReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProviderReq.Merge(m, src)
}
func (m *GetProviderReq) XXX_Size() int {
	return xxx_messageInfo_GetProviderReq.Size(m)
}
func (m *GetProviderReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProviderReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetProviderReq proto.InternalMessageInfo

func (m *GetProviderReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type GetProviderResp struct {
	Code                 *uint32   `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string   `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool     `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *Provider `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetProviderResp) Reset()         { *m = GetProviderResp{} }
func (m *GetProviderResp) String() string { return proto.CompactTextString(m) }
func (*GetProviderResp) ProtoMessage()    {}
func (*GetProviderResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{53}
}

func (m *GetProviderResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProviderResp.Unmarshal(m, b)
}
func (m *GetProviderResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProviderResp.Marshal(b, m, deterministic)
}
func (m *GetProviderResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProviderResp.Merge(m, src)
}
func (m *GetProviderResp) XXX_Size() int {
	return xxx_messageInfo_GetProviderResp.Size(m)
}
func (m *GetProviderResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProviderResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetProviderResp proto.InternalMessageInfo

func (m *GetProviderResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *GetProviderResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *GetProviderResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *GetProviderResp) GetData() *Provider {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListProviderReq struct {
	Sort                 *string  `protobuf:"bytes,1,opt,name=sort" json:"sort,omitempty"`
	Desc                 *bool    `protobuf:"varint,2,opt,name=desc" json:"desc,omitempty"`
	Offset               *int64   `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	Limit                *int64   `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListProviderReq) Reset()         { *m = ListProviderReq{} }
func (m *ListProviderReq) String() string { return proto.CompactTextString(m) }
func (*ListProviderReq) ProtoMessage()    {}
func (*ListProviderReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{54}
}

func (m *ListProviderReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProviderReq.Unmarshal(m, b)
}
func (m *ListProviderReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProviderReq.Marshal(b, m, deterministic)
}
func (m *ListProviderReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProviderReq.Merge(m, src)
}
func (m *ListProviderReq) XXX_Size() int {
	return xxx_messageInfo_ListProviderReq.Size(m)
}
func (m *ListProviderReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProviderReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListProviderReq proto.InternalMessageInfo

func (m *ListProviderReq) GetSort() string {
	if m != nil && m.Sort != nil {
		return *m.Sort
	}
	return ""
}

func (m *ListProviderReq) GetDesc() bool {
	if m != nil && m.Desc != nil {
		return *m.Desc
	}
	return false
}

func (m *ListProviderReq) GetOffset() int64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *ListProviderReq) GetLimit() int64 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

type ListProviderResp struct {
	Code                 *uint32     `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string     `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool       `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 []*Provider `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListProviderResp) Reset()         { *m = ListProviderResp{} }
func (m *ListProviderResp) String() string { return proto.CompactTextString(m) }
func (*ListProviderResp) ProtoMessage()    {}
func (*ListProviderResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{55}
}

func (m *ListProviderResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProviderResp.Unmarshal(m, b)
}
func (m *ListProviderResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProviderResp.Marshal(b, m, deterministic)
}
func (m *ListProviderResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProviderResp.Merge(m, src)
}
func (m *ListProviderResp) XXX_Size() int {
	return xxx_messageInfo_ListProviderResp.Size(m)
}
func (m *ListProviderResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProviderResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListProviderResp proto.InternalMessageInfo

func (m *ListProviderResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ListProviderResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ListProviderResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ListProviderResp) GetData() []*Provider {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateProviderReq struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Key                  *string  `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Secret               *string  `protobuf:"bytes,3,opt,name=secret" json:"secret,omitempty"`
	Labels               *Labels  `protobuf:"bytes,4,opt,name=labels" json:"labels,omitempty"`
	Operator             *string  `protobuf:"bytes,5,opt,name=operator" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateProviderReq) Reset()         { *m = UpdateProviderReq{} }
func (m *UpdateProviderReq) String() string { return proto.CompactTextString(m) }
func (*UpdateProviderReq) ProtoMessage()    {}
func (*UpdateProviderReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{56}
}

func (m *UpdateProviderReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProviderReq.Unmarshal(m, b)
}
func (m *UpdateProviderReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProviderReq.Marshal(b, m, deterministic)
}
func (m *UpdateProviderReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProviderReq.Merge(m, src)
}
func (m *UpdateProviderReq) XXX_Size() int {
	return xxx_messageInfo_UpdateProviderReq.Size(m)
}
func (m *UpdateProviderReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProviderReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProviderReq proto.InternalMessageInfo

func (m *UpdateProviderReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *UpdateProviderReq) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *UpdateProviderReq) GetSecret() string {
	if m != nil && m.Secret != nil {
		return *m.Secret
	}
	return ""
}

func (m *UpdateProviderReq) GetLabels() *Labels {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *UpdateProviderReq) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

type UpdateProviderResp struct {
	Code                 *uint32   `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string   `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool     `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *Provider `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateProviderResp) Reset()         { *m = UpdateProviderResp{} }
func (m *UpdateProviderResp) String() string { return proto.CompactTextString(m) }
func (*UpdateProviderResp) ProtoMessage()    {}
func (*UpdateProviderResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{57}
}

func (m *UpdateProviderResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProviderResp.Unmarshal(m, b)
}
func (m *UpdateProviderResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProviderResp.Marshal(b, m, deterministic)
}
func (m *UpdateProviderResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProviderResp.Merge(m, src)
}
func (m *UpdateProviderResp) XXX_Size() int {
	return xxx_messageInfo_UpdateProviderResp.Size(m)
}
func (m *UpdateProviderResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProviderResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProviderResp proto.InternalMessageInfo

func (m *UpdateProviderResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *UpdateProviderResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *UpdateProviderResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *UpdateProviderResp) GetData() *Provider {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteProviderReq struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteProviderReq) Reset()         { *m = DeleteProviderReq{} }
func (m *DeleteProviderReq) String() string { return proto.CompactTextString(m) }
func (*DeleteProviderReq) ProtoMessage()    {}
func (*DeleteProviderReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{58}
}

func (m *DeleteProviderReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteProviderReq.Unmarshal(m, b)
}
func (m *DeleteProviderReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteProviderReq.Marshal(b, m, deterministic)
}
func (m *DeleteProviderReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteProviderReq.Merge(m, src)
}
func (m *DeleteProviderReq) XXX_Size() int {
	return xxx_messageInfo_DeleteProviderReq.Size(m)
}
func (m *DeleteProviderReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteProviderReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteProviderReq proto.InternalMessageInfo

func (m *DeleteProviderReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type DeleteProviderResp struct {
	Code                 *uint32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool    `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteProviderResp) Reset()         { *m = DeleteProviderResp{} }
func (m *DeleteProviderResp) String() string { return proto.CompactTextString(m) }
func (*DeleteProviderResp) ProtoMessage()    {}
func (*DeleteProviderResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{59}
}

func (m *DeleteProviderResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteProviderResp.Unmarshal(m, b)
}
func (m *DeleteProviderResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteProviderResp.Marshal(b, m, deterministic)
}
func (m *DeleteProviderResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteProviderResp.Merge(m, src)
}
func (m *DeleteProviderResp) XXX_Size() int {
	return xxx_messageInfo_DeleteProviderResp.Size(m)
}
func (m *DeleteProviderResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteProviderResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteProviderResp proto.InternalMessageInfo

func (m *DeleteProviderResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *DeleteProviderResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *DeleteProviderResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type QueryProviderOrderReq struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrderID              *string  `protobuf:"bytes,2,opt,name=orderID" json:"orderID,omitempty"`
	OrderType            *string  `protobuf:"bytes,3,opt,name=orderType" json:"orderType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryProviderOrderReq) Reset()         { *m = QueryProviderOrderReq{} }
func (m *QueryProviderOrderReq) String() string { return proto.CompactTextString(m) }
func (*QueryProviderOrderReq) ProtoMessage()    {}
func (*QueryProviderOrderReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{60}
}

func (m *QueryProviderOrderReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryProviderOrderReq.Unmarshal(m, b)
}
func (m *QueryProviderOrderReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryProviderOrderReq.Marshal(b, m, deterministic)
}
func (m *QueryProviderOrderReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryProviderOrderReq.Merge(m, src)
}
func (m *QueryProviderOrderReq) XXX_Size() int {
	return xxx_messageInfo_QueryProviderOrderReq.Size(m)
}
func (m *QueryProviderOrderReq) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryProviderOrderReq.DiscardUnknown(m)
}

var xxx_messageInfo_QueryProviderOrderReq proto.InternalMessageInfo

func (m *QueryProviderOrderReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *QueryProviderOrderReq) GetOrderID() string {
	if m != nil && m.OrderID != nil {
		return *m.OrderID
	}
	return ""
}

func (m *QueryProviderOrderReq) GetOrderType() string {
	if m != nil && m.OrderType != nil {
		return *m.OrderType
	}
	return ""
}

type QueryProviderOrderResp struct {
	Code                 *uint32        `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string        `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool          `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *ProviderOrder `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *QueryProviderOrderResp) Reset()         { *m = QueryProviderOrderResp{} }
func (m *QueryProviderOrderResp) String() string { return proto.CompactTextString(m) }
func (*QueryProviderOrderResp) ProtoMessage()    {}
func (*QueryProviderOrderResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{61}
}

func (m *QueryProviderOrderResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryProviderOrderResp.Unmarshal(m, b)
}
func (m *QueryProviderOrderResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryProviderOrderResp.Marshal(b, m, deterministic)
}
func (m *QueryProviderOrderResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryProviderOrderResp.Merge(m, src)
}
func (m *QueryProviderOrderResp) XXX_Size() int {
	return xxx_messageInfo_QueryProviderOrderResp.Size(m)
}
func (m *QueryProviderOrderResp) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryProviderOrderResp.DiscardUnknown(m)
}

var xxx_messageInfo_QueryProviderOrderResp proto.InternalMessageInfo

func (m *QueryProviderOrderResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *QueryProviderOrderResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *QueryProviderOrderResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *QueryProviderOrderResp) GetData() *ProviderOrder {
	if m != nil {
		return m.Data
	}
	return nil
}

type ProviderOrder struct {
	Result               *bool     `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	Status               *string   `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	Message              *string   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Devices              []*Device `protobuf:"bytes,4,rep,name=devices" json:"devices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ProviderOrder) Reset()         { *m = ProviderOrder{} }
func (m *ProviderOrder) String() string { return proto.CompactTextString(m) }
func (*ProviderOrder) ProtoMessage()    {}
func (*ProviderOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{62}
}

func (m *ProviderOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProviderOrder.Unmarshal(m, b)
}
func (m *ProviderOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProviderOrder.Marshal(b, m, deterministic)
}
func (m *ProviderOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProviderOrder.Merge(m, src)
}
func (m *ProviderOrder) XXX_Size() int {
	return xxx_messageInfo_ProviderOrder.Size(m)
}
func (m *ProviderOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_ProviderOrder.DiscardUnknown(m)
}

var xxx_messageInfo_ProviderOrder proto.InternalMessageInfo

func (m *ProviderOrder) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ProviderOrder) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

func (m *ProviderOrder) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ProviderOrder) GetDevices() []*Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

type QueryProviderNetworkReq struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Vpc                  *string  `protobuf:"bytes,2,opt,name=vpc" json:"vpc,omitempty"`
	Zone                 *string  `protobuf:"bytes,3,opt,name=zone" json:"zone,omitempty"`
	Region               *string  `protobuf:"bytes,4,opt,name=region" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryProviderNetworkReq) Reset()         { *m = QueryProviderNetworkReq{} }
func (m *QueryProviderNetworkReq) String() string { return proto.CompactTextString(m) }
func (*QueryProviderNetworkReq) ProtoMessage()    {}
func (*QueryProviderNetworkReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{63}
}

func (m *QueryProviderNetworkReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryProviderNetworkReq.Unmarshal(m, b)
}
func (m *QueryProviderNetworkReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryProviderNetworkReq.Marshal(b, m, deterministic)
}
func (m *QueryProviderNetworkReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryProviderNetworkReq.Merge(m, src)
}
func (m *QueryProviderNetworkReq) XXX_Size() int {
	return xxx_messageInfo_QueryProviderNetworkReq.Size(m)
}
func (m *QueryProviderNetworkReq) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryProviderNetworkReq.DiscardUnknown(m)
}

var xxx_messageInfo_QueryProviderNetworkReq proto.InternalMessageInfo

func (m *QueryProviderNetworkReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *QueryProviderNetworkReq) GetVpc() string {
	if m != nil && m.Vpc != nil {
		return *m.Vpc
	}
	return ""
}

func (m *QueryProviderNetworkReq) GetZone() string {
	if m != nil && m.Zone != nil {
		return *m.Zone
	}
	return ""
}

func (m *QueryProviderNetworkReq) GetRegion() string {
	if m != nil && m.Region != nil {
		return *m.Region
	}
	return ""
}

type QueryProviderNetworkResp struct {
	Code                 *uint32          `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string          `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool            `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *ProviderNetwork `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *QueryProviderNetworkResp) Reset()         { *m = QueryProviderNetworkResp{} }
func (m *QueryProviderNetworkResp) String() string { return proto.CompactTextString(m) }
func (*QueryProviderNetworkResp) ProtoMessage()    {}
func (*QueryProviderNetworkResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{64}
}

func (m *QueryProviderNetworkResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryProviderNetworkResp.Unmarshal(m, b)
}
func (m *QueryProviderNetworkResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryProviderNetworkResp.Marshal(b, m, deterministic)
}
func (m *QueryProviderNetworkResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryProviderNetworkResp.Merge(m, src)
}
func (m *QueryProviderNetworkResp) XXX_Size() int {
	return xxx_messageInfo_QueryProviderNetworkResp.Size(m)
}
func (m *QueryProviderNetworkResp) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryProviderNetworkResp.DiscardUnknown(m)
}

var xxx_messageInfo_QueryProviderNetworkResp proto.InternalMessageInfo

func (m *QueryProviderNetworkResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *QueryProviderNetworkResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *QueryProviderNetworkResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *QueryProviderNetworkResp) GetData() *ProviderNetwork {
	if m != nil {
		return m.Data
	}
	return nil
}

type ProviderNetwork struct {
	Subnet               []*ProviderSubnet `protobuf:"bytes,1,rep,name=subnet" json:"subnet,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ProviderNetwork) Reset()         { *m = ProviderNetwork{} }
func (m *ProviderNetwork) String() string { return proto.CompactTextString(m) }
func (*ProviderNetwork) ProtoMessage()    {}
func (*ProviderNetwork) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{65}
}

func (m *ProviderNetwork) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProviderNetwork.Unmarshal(m, b)
}
func (m *ProviderNetwork) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProviderNetwork.Marshal(b, m, deterministic)
}
func (m *ProviderNetwork) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProviderNetwork.Merge(m, src)
}
func (m *ProviderNetwork) XXX_Size() int {
	return xxx_messageInfo_ProviderNetwork.Size(m)
}
func (m *ProviderNetwork) XXX_DiscardUnknown() {
	xxx_messageInfo_ProviderNetwork.DiscardUnknown(m)
}

var xxx_messageInfo_ProviderNetwork proto.InternalMessageInfo

func (m *ProviderNetwork) GetSubnet() []*ProviderSubnet {
	if m != nil {
		return m.Subnet
	}
	return nil
}

type ProviderSubnet struct {
	Subnet               *string  `protobuf:"bytes,1,opt,name=subnet" json:"subnet,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	LeftIPNum            *uint32  `protobuf:"varint,3,opt,name=leftIPNum" json:"leftIPNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProviderSubnet) Reset()         { *m = ProviderSubnet{} }
func (m *ProviderSubnet) String() string { return proto.CompactTextString(m) }
func (*ProviderSubnet) ProtoMessage()    {}
func (*ProviderSubnet) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{66}
}

func (m *ProviderSubnet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProviderSubnet.Unmarshal(m, b)
}
func (m *ProviderSubnet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProviderSubnet.Marshal(b, m, deterministic)
}
func (m *ProviderSubnet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProviderSubnet.Merge(m, src)
}
func (m *ProviderSubnet) XXX_Size() int {
	return xxx_messageInfo_ProviderSubnet.Size(m)
}
func (m *ProviderSubnet) XXX_DiscardUnknown() {
	xxx_messageInfo_ProviderSubnet.DiscardUnknown(m)
}

var xxx_messageInfo_ProviderSubnet proto.InternalMessageInfo

func (m *ProviderSubnet) GetSubnet() string {
	if m != nil && m.Subnet != nil {
		return *m.Subnet
	}
	return ""
}

func (m *ProviderSubnet) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ProviderSubnet) GetLeftIPNum() uint32 {
	if m != nil && m.LeftIPNum != nil {
		return *m.LeftIPNum
	}
	return 0
}

type GetDeviceRecordReq struct {
	DeviceRecordID       *string  `protobuf:"bytes,1,opt,name=deviceRecordID" json:"deviceRecordID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceRecordReq) Reset()         { *m = GetDeviceRecordReq{} }
func (m *GetDeviceRecordReq) String() string { return proto.CompactTextString(m) }
func (*GetDeviceRecordReq) ProtoMessage()    {}
func (*GetDeviceRecordReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{67}
}

func (m *GetDeviceRecordReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceRecordReq.Unmarshal(m, b)
}
func (m *GetDeviceRecordReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceRecordReq.Marshal(b, m, deterministic)
}
func (m *GetDeviceRecordReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceRecordReq.Merge(m, src)
}
func (m *GetDeviceRecordReq) XXX_Size() int {
	return xxx_messageInfo_GetDeviceRecordReq.Size(m)
}
func (m *GetDeviceRecordReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceRecordReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceRecordReq proto.InternalMessageInfo

func (m *GetDeviceRecordReq) GetDeviceRecordID() string {
	if m != nil && m.DeviceRecordID != nil {
		return *m.DeviceRecordID
	}
	return ""
}

type GetDeviceRecordResp struct {
	Code                 *uint32       `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string       `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool         `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *DeviceRecord `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetDeviceRecordResp) Reset()         { *m = GetDeviceRecordResp{} }
func (m *GetDeviceRecordResp) String() string { return proto.CompactTextString(m) }
func (*GetDeviceRecordResp) ProtoMessage()    {}
func (*GetDeviceRecordResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{68}
}

func (m *GetDeviceRecordResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceRecordResp.Unmarshal(m, b)
}
func (m *GetDeviceRecordResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceRecordResp.Marshal(b, m, deterministic)
}
func (m *GetDeviceRecordResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceRecordResp.Merge(m, src)
}
func (m *GetDeviceRecordResp) XXX_Size() int {
	return xxx_messageInfo_GetDeviceRecordResp.Size(m)
}
func (m *GetDeviceRecordResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceRecordResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceRecordResp proto.InternalMessageInfo

func (m *GetDeviceRecordResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *GetDeviceRecordResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *GetDeviceRecordResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *GetDeviceRecordResp) GetData() *DeviceRecord {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateDeviceRecordReq struct {
	Data                 *DeviceRecord `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreateDeviceRecordReq) Reset()         { *m = CreateDeviceRecordReq{} }
func (m *CreateDeviceRecordReq) String() string { return proto.CompactTextString(m) }
func (*CreateDeviceRecordReq) ProtoMessage()    {}
func (*CreateDeviceRecordReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{69}
}

func (m *CreateDeviceRecordReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeviceRecordReq.Unmarshal(m, b)
}
func (m *CreateDeviceRecordReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeviceRecordReq.Marshal(b, m, deterministic)
}
func (m *CreateDeviceRecordReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeviceRecordReq.Merge(m, src)
}
func (m *CreateDeviceRecordReq) XXX_Size() int {
	return xxx_messageInfo_CreateDeviceRecordReq.Size(m)
}
func (m *CreateDeviceRecordReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeviceRecordReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeviceRecordReq proto.InternalMessageInfo

func (m *CreateDeviceRecordReq) GetData() *DeviceRecord {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateDeviceRecordResp struct {
	Code                 *uint32       `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string       `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool         `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *DeviceRecord `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreateDeviceRecordResp) Reset()         { *m = CreateDeviceRecordResp{} }
func (m *CreateDeviceRecordResp) String() string { return proto.CompactTextString(m) }
func (*CreateDeviceRecordResp) ProtoMessage()    {}
func (*CreateDeviceRecordResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{70}
}

func (m *CreateDeviceRecordResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeviceRecordResp.Unmarshal(m, b)
}
func (m *CreateDeviceRecordResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeviceRecordResp.Marshal(b, m, deterministic)
}
func (m *CreateDeviceRecordResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeviceRecordResp.Merge(m, src)
}
func (m *CreateDeviceRecordResp) XXX_Size() int {
	return xxx_messageInfo_CreateDeviceRecordResp.Size(m)
}
func (m *CreateDeviceRecordResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeviceRecordResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeviceRecordResp proto.InternalMessageInfo

func (m *CreateDeviceRecordResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *CreateDeviceRecordResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CreateDeviceRecordResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *CreateDeviceRecordResp) GetData() *DeviceRecord {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListDeviceRecordReq struct {
	Sort                 *string  `protobuf:"bytes,1,opt,name=sort" json:"sort,omitempty"`
	Desc                 *bool    `protobuf:"varint,2,opt,name=desc" json:"desc,omitempty"`
	Offset               *int64   `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	Limit                *int64   `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	Pool                 []string `protobuf:"bytes,5,rep,name=pool" json:"pool,omitempty"`
	Type                 []int64  `protobuf:"varint,6,rep,name=type" json:"type,omitempty"`
	Status               []int64  `protobuf:"varint,7,rep,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDeviceRecordReq) Reset()         { *m = ListDeviceRecordReq{} }
func (m *ListDeviceRecordReq) String() string { return proto.CompactTextString(m) }
func (*ListDeviceRecordReq) ProtoMessage()    {}
func (*ListDeviceRecordReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{71}
}

func (m *ListDeviceRecordReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceRecordReq.Unmarshal(m, b)
}
func (m *ListDeviceRecordReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceRecordReq.Marshal(b, m, deterministic)
}
func (m *ListDeviceRecordReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceRecordReq.Merge(m, src)
}
func (m *ListDeviceRecordReq) XXX_Size() int {
	return xxx_messageInfo_ListDeviceRecordReq.Size(m)
}
func (m *ListDeviceRecordReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceRecordReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceRecordReq proto.InternalMessageInfo

func (m *ListDeviceRecordReq) GetSort() string {
	if m != nil && m.Sort != nil {
		return *m.Sort
	}
	return ""
}

func (m *ListDeviceRecordReq) GetDesc() bool {
	if m != nil && m.Desc != nil {
		return *m.Desc
	}
	return false
}

func (m *ListDeviceRecordReq) GetOffset() int64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *ListDeviceRecordReq) GetLimit() int64 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *ListDeviceRecordReq) GetPool() []string {
	if m != nil {
		return m.Pool
	}
	return nil
}

func (m *ListDeviceRecordReq) GetType() []int64 {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ListDeviceRecordReq) GetStatus() []int64 {
	if m != nil {
		return m.Status
	}
	return nil
}

type ListDeviceRecordResp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 []*DeviceRecord `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListDeviceRecordResp) Reset()         { *m = ListDeviceRecordResp{} }
func (m *ListDeviceRecordResp) String() string { return proto.CompactTextString(m) }
func (*ListDeviceRecordResp) ProtoMessage()    {}
func (*ListDeviceRecordResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{72}
}

func (m *ListDeviceRecordResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceRecordResp.Unmarshal(m, b)
}
func (m *ListDeviceRecordResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceRecordResp.Marshal(b, m, deterministic)
}
func (m *ListDeviceRecordResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceRecordResp.Merge(m, src)
}
func (m *ListDeviceRecordResp) XXX_Size() int {
	return xxx_messageInfo_ListDeviceRecordResp.Size(m)
}
func (m *ListDeviceRecordResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceRecordResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceRecordResp proto.InternalMessageInfo

func (m *ListDeviceRecordResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ListDeviceRecordResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ListDeviceRecordResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ListDeviceRecordResp) GetData() []*DeviceRecord {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListDeviceBillReq struct {
	Sort                 *string  `protobuf:"bytes,1,opt,name=sort" json:"sort,omitempty"`
	Desc                 *bool    `protobuf:"varint,2,opt,name=desc" json:"desc,omitempty"`
	Offset               *int64   `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	Limit                *int64   `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	DeviceConsumerID     []string `protobuf:"bytes,5,rep,name=deviceConsumerID" json:"deviceConsumerID,omitempty"`
	DeviceID             []string `protobuf:"bytes,6,rep,name=deviceID" json:"deviceID,omitempty"`
	DeviceRecordID       []string `protobuf:"bytes,7,rep,name=deviceRecordID" json:"deviceRecordID,omitempty"`
	Finished             *bool    `protobuf:"varint,8,opt,name=finished" json:"finished,omitempty"`
	LeftTime             *int64   `protobuf:"varint,9,opt,name=leftTime" json:"leftTime,omitempty"`
	RightTime            *int64   `protobuf:"varint,10,opt,name=rightTime" json:"rightTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDeviceBillReq) Reset()         { *m = ListDeviceBillReq{} }
func (m *ListDeviceBillReq) String() string { return proto.CompactTextString(m) }
func (*ListDeviceBillReq) ProtoMessage()    {}
func (*ListDeviceBillReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{73}
}

func (m *ListDeviceBillReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceBillReq.Unmarshal(m, b)
}
func (m *ListDeviceBillReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceBillReq.Marshal(b, m, deterministic)
}
func (m *ListDeviceBillReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceBillReq.Merge(m, src)
}
func (m *ListDeviceBillReq) XXX_Size() int {
	return xxx_messageInfo_ListDeviceBillReq.Size(m)
}
func (m *ListDeviceBillReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceBillReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceBillReq proto.InternalMessageInfo

func (m *ListDeviceBillReq) GetSort() string {
	if m != nil && m.Sort != nil {
		return *m.Sort
	}
	return ""
}

func (m *ListDeviceBillReq) GetDesc() bool {
	if m != nil && m.Desc != nil {
		return *m.Desc
	}
	return false
}

func (m *ListDeviceBillReq) GetOffset() int64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *ListDeviceBillReq) GetLimit() int64 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *ListDeviceBillReq) GetDeviceConsumerID() []string {
	if m != nil {
		return m.DeviceConsumerID
	}
	return nil
}

func (m *ListDeviceBillReq) GetDeviceID() []string {
	if m != nil {
		return m.DeviceID
	}
	return nil
}

func (m *ListDeviceBillReq) GetDeviceRecordID() []string {
	if m != nil {
		return m.DeviceRecordID
	}
	return nil
}

func (m *ListDeviceBillReq) GetFinished() bool {
	if m != nil && m.Finished != nil {
		return *m.Finished
	}
	return false
}

func (m *ListDeviceBillReq) GetLeftTime() int64 {
	if m != nil && m.LeftTime != nil {
		return *m.LeftTime
	}
	return 0
}

func (m *ListDeviceBillReq) GetRightTime() int64 {
	if m != nil && m.RightTime != nil {
		return *m.RightTime
	}
	return 0
}

type ListDeviceBillResp struct {
	Code                 *uint32       `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string       `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool         `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 []*DeviceBill `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListDeviceBillResp) Reset()         { *m = ListDeviceBillResp{} }
func (m *ListDeviceBillResp) String() string { return proto.CompactTextString(m) }
func (*ListDeviceBillResp) ProtoMessage()    {}
func (*ListDeviceBillResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{74}
}

func (m *ListDeviceBillResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceBillResp.Unmarshal(m, b)
}
func (m *ListDeviceBillResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceBillResp.Marshal(b, m, deterministic)
}
func (m *ListDeviceBillResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceBillResp.Merge(m, src)
}
func (m *ListDeviceBillResp) XXX_Size() int {
	return xxx_messageInfo_ListDeviceBillResp.Size(m)
}
func (m *ListDeviceBillResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceBillResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceBillResp proto.InternalMessageInfo

func (m *ListDeviceBillResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ListDeviceBillResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ListDeviceBillResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ListDeviceBillResp) GetData() []*DeviceBill {
	if m != nil {
		return m.Data
	}
	return nil
}

type DevicePool struct {
	Id                    *string                     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name                  *string                     `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Provider              *string                     `protobuf:"bytes,3,opt,name=provider" json:"provider,omitempty"`
	BaseConfig            *ConsumeDesire              `protobuf:"bytes,4,opt,name=baseConfig" json:"baseConfig,omitempty"`
	AllowedDeviceConsumer []string                    `protobuf:"bytes,5,rep,name=allowedDeviceConsumer" json:"allowedDeviceConsumer,omitempty"`
	Labels                map[string]string           `protobuf:"bytes,6,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreateTime            *int64                      `protobuf:"varint,7,opt,name=createTime" json:"createTime,omitempty"`
	UpdateTime            *int64                      `protobuf:"varint,8,opt,name=updateTime" json:"updateTime,omitempty"`
	EnableAS              *bool                       `protobuf:"varint,9,opt,name=enableAS" json:"enableAS,omitempty"`
	AsOption              *DevicePoolAutoScalerOption `protobuf:"bytes,10,opt,name=asOption" json:"asOption,omitempty"`
	AsStatus              *string                     `protobuf:"bytes,11,opt,name=asStatus" json:"asStatus,omitempty"`
	AsActionOrder         *string                     `protobuf:"bytes,12,opt,name=asActionOrder" json:"asActionOrder,omitempty"`
	Reserved              *bool                       `protobuf:"varint,13,opt,name=reserved" json:"reserved,omitempty"`
	Type                  *string                     `protobuf:"bytes,14,opt,name=type" json:"type,omitempty"`
	Operator              *string                     `protobuf:"bytes,15,opt,name=operator" json:"operator,omitempty"`
	Creator               *string                     `protobuf:"bytes,16,opt,name=creator" json:"creator,omitempty"`
	Updater               *string                     `protobuf:"bytes,17,opt,name=updater" json:"updater,omitempty"`
	Status                *string                     `protobuf:"bytes,18,opt,name=status" json:"status,omitempty"`
	Annotations           map[string]string           `protobuf:"bytes,19,rep,name=annotations" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral  struct{}                    `json:"-"`
	XXX_unrecognized      []byte                      `json:"-"`
	XXX_sizecache         int32                       `json:"-"`
}

func (m *DevicePool) Reset()         { *m = DevicePool{} }
func (m *DevicePool) String() string { return proto.CompactTextString(m) }
func (*DevicePool) ProtoMessage()    {}
func (*DevicePool) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{75}
}

func (m *DevicePool) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DevicePool.Unmarshal(m, b)
}
func (m *DevicePool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DevicePool.Marshal(b, m, deterministic)
}
func (m *DevicePool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DevicePool.Merge(m, src)
}
func (m *DevicePool) XXX_Size() int {
	return xxx_messageInfo_DevicePool.Size(m)
}
func (m *DevicePool) XXX_DiscardUnknown() {
	xxx_messageInfo_DevicePool.DiscardUnknown(m)
}

var xxx_messageInfo_DevicePool proto.InternalMessageInfo

func (m *DevicePool) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *DevicePool) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *DevicePool) GetProvider() string {
	if m != nil && m.Provider != nil {
		return *m.Provider
	}
	return ""
}

func (m *DevicePool) GetBaseConfig() *ConsumeDesire {
	if m != nil {
		return m.BaseConfig
	}
	return nil
}

func (m *DevicePool) GetAllowedDeviceConsumer() []string {
	if m != nil {
		return m.AllowedDeviceConsumer
	}
	return nil
}

func (m *DevicePool) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *DevicePool) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *DevicePool) GetUpdateTime() int64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *DevicePool) GetEnableAS() bool {
	if m != nil && m.EnableAS != nil {
		return *m.EnableAS
	}
	return false
}

func (m *DevicePool) GetAsOption() *DevicePoolAutoScalerOption {
	if m != nil {
		return m.AsOption
	}
	return nil
}

func (m *DevicePool) GetAsStatus() string {
	if m != nil && m.AsStatus != nil {
		return *m.AsStatus
	}
	return ""
}

func (m *DevicePool) GetAsActionOrder() string {
	if m != nil && m.AsActionOrder != nil {
		return *m.AsActionOrder
	}
	return ""
}

func (m *DevicePool) GetReserved() bool {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return false
}

func (m *DevicePool) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *DevicePool) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

func (m *DevicePool) GetCreator() string {
	if m != nil && m.Creator != nil {
		return *m.Creator
	}
	return ""
}

func (m *DevicePool) GetUpdater() string {
	if m != nil && m.Updater != nil {
		return *m.Updater
	}
	return ""
}

func (m *DevicePool) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

func (m *DevicePool) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

type DevicePoolAutoScalerOption struct {
	Type                 *string            `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Settings             map[string]float64 `protobuf:"bytes,2,rep,name=settings" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DevicePoolAutoScalerOption) Reset()         { *m = DevicePoolAutoScalerOption{} }
func (m *DevicePoolAutoScalerOption) String() string { return proto.CompactTextString(m) }
func (*DevicePoolAutoScalerOption) ProtoMessage()    {}
func (*DevicePoolAutoScalerOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{76}
}

func (m *DevicePoolAutoScalerOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DevicePoolAutoScalerOption.Unmarshal(m, b)
}
func (m *DevicePoolAutoScalerOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DevicePoolAutoScalerOption.Marshal(b, m, deterministic)
}
func (m *DevicePoolAutoScalerOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DevicePoolAutoScalerOption.Merge(m, src)
}
func (m *DevicePoolAutoScalerOption) XXX_Size() int {
	return xxx_messageInfo_DevicePoolAutoScalerOption.Size(m)
}
func (m *DevicePoolAutoScalerOption) XXX_DiscardUnknown() {
	xxx_messageInfo_DevicePoolAutoScalerOption.DiscardUnknown(m)
}

var xxx_messageInfo_DevicePoolAutoScalerOption proto.InternalMessageInfo

func (m *DevicePoolAutoScalerOption) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *DevicePoolAutoScalerOption) GetSettings() map[string]float64 {
	if m != nil {
		return m.Settings
	}
	return nil
}

type Device struct {
	Id                   *string           `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Provider             *string           `protobuf:"bytes,2,opt,name=provider" json:"provider,omitempty"`
	Info                 *DeviceInfo       `protobuf:"bytes,3,opt,name=info" json:"info,omitempty"`
	Labels               map[string]string `protobuf:"bytes,4,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Status               *string           `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
	CreateTime           *int64            `protobuf:"varint,6,opt,name=createTime" json:"createTime,omitempty"`
	UpdateTime           *int64            `protobuf:"varint,7,opt,name=updateTime" json:"updateTime,omitempty"`
	LastConsumedTime     *int64            `protobuf:"varint,8,opt,name=lastConsumedTime" json:"lastConsumedTime,omitempty"`
	LastReturnedTime     *int64            `protobuf:"varint,9,opt,name=lastReturnedTime" json:"lastReturnedTime,omitempty"`
	LastConsumerID       *string           `protobuf:"bytes,10,opt,name=lastConsumerID" json:"lastConsumerID,omitempty"`
	LastRecordID         *string           `protobuf:"bytes,11,opt,name=lastRecordID" json:"lastRecordID,omitempty"`
	LastReturnRecordID   *string           `protobuf:"bytes,12,opt,name=lastReturnRecordID" json:"lastReturnRecordID,omitempty"`
	DevicePoolID         *string           `protobuf:"bytes,13,opt,name=devicePoolID" json:"devicePoolID,omitempty"`
	Type                 *string           `protobuf:"bytes,14,opt,name=type" json:"type,omitempty"`
	Annotations          map[string]string `protobuf:"bytes,15,rep,name=annotations" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}
func (*Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{77}
}

func (m *Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Device.Unmarshal(m, b)
}
func (m *Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Device.Marshal(b, m, deterministic)
}
func (m *Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device.Merge(m, src)
}
func (m *Device) XXX_Size() int {
	return xxx_messageInfo_Device.Size(m)
}
func (m *Device) XXX_DiscardUnknown() {
	xxx_messageInfo_Device.DiscardUnknown(m)
}

var xxx_messageInfo_Device proto.InternalMessageInfo

func (m *Device) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Device) GetProvider() string {
	if m != nil && m.Provider != nil {
		return *m.Provider
	}
	return ""
}

func (m *Device) GetInfo() *DeviceInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Device) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Device) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

func (m *Device) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *Device) GetUpdateTime() int64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *Device) GetLastConsumedTime() int64 {
	if m != nil && m.LastConsumedTime != nil {
		return *m.LastConsumedTime
	}
	return 0
}

func (m *Device) GetLastReturnedTime() int64 {
	if m != nil && m.LastReturnedTime != nil {
		return *m.LastReturnedTime
	}
	return 0
}

func (m *Device) GetLastConsumerID() string {
	if m != nil && m.LastConsumerID != nil {
		return *m.LastConsumerID
	}
	return ""
}

func (m *Device) GetLastRecordID() string {
	if m != nil && m.LastRecordID != nil {
		return *m.LastRecordID
	}
	return ""
}

func (m *Device) GetLastReturnRecordID() string {
	if m != nil && m.LastReturnRecordID != nil {
		return *m.LastReturnRecordID
	}
	return ""
}

func (m *Device) GetDevicePoolID() string {
	if m != nil && m.DevicePoolID != nil {
		return *m.DevicePoolID
	}
	return ""
}

func (m *Device) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Device) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

type DeviceEvent struct {
	Id                   *string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	DeviceID             *string  `protobuf:"bytes,2,opt,name=deviceID" json:"deviceID,omitempty"`
	Type                 *string  `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Message              *string  `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	EventTime            *int64   `protobuf:"varint,5,opt,name=eventTime" json:"eventTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceEvent) Reset()         { *m = DeviceEvent{} }
func (m *DeviceEvent) String() string { return proto.CompactTextString(m) }
func (*DeviceEvent) ProtoMessage()    {}
func (*DeviceEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{78}
}

func (m *DeviceEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceEvent.Unmarshal(m, b)
}
func (m *DeviceEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceEvent.Marshal(b, m, deterministic)
}
func (m *DeviceEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceEvent.Merge(m, src)
}
func (m *DeviceEvent) XXX_Size() int {
	return xxx_messageInfo_DeviceEvent.Size(m)
}
func (m *DeviceEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceEvent proto.InternalMessageInfo

func (m *DeviceEvent) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *DeviceEvent) GetDeviceID() string {
	if m != nil && m.DeviceID != nil {
		return *m.DeviceID
	}
	return ""
}

func (m *DeviceEvent) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *DeviceEvent) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *DeviceEvent) GetEventTime() int64 {
	if m != nil && m.EventTime != nil {
		return *m.EventTime
	}
	return 0
}

type DeviceInfo struct {
	Instance             *string         `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
	InnerIP              *string         `protobuf:"bytes,2,opt,name=innerIP" json:"innerIP,omitempty"`
	InstanceType         *string         `protobuf:"bytes,3,opt,name=instanceType" json:"instanceType,omitempty"`
	Cpu                  *uint32         `protobuf:"varint,4,opt,name=cpu" json:"cpu,omitempty"`
	Mem                  *uint32         `protobuf:"varint,5,opt,name=mem" json:"mem,omitempty"`
	Gpu                  *uint32         `protobuf:"varint,6,opt,name=gpu" json:"gpu,omitempty"`
	Zone                 *DeviceZone     `protobuf:"bytes,7,opt,name=zone" json:"zone,omitempty"`
	Security             *DeviceSecurity `protobuf:"bytes,8,opt,name=security" json:"security,omitempty"`
	Image                *DeviceImage    `protobuf:"bytes,9,opt,name=image" json:"image,omitempty"`
	Vpc                  *string         `protobuf:"bytes,10,opt,name=vpc" json:"vpc,omitempty"`
	Region               *string         `protobuf:"bytes,11,opt,name=region" json:"region,omitempty"`
	Password             *string         `protobuf:"bytes,12,opt,name=password" json:"password,omitempty"`
	SystemDisk           *DeviceDisk     `protobuf:"bytes,13,opt,name=systemDisk" json:"systemDisk,omitempty"`
	DataDisks            []*DeviceDisk   `protobuf:"bytes,14,rep,name=dataDisks" json:"dataDisks,omitempty"`
	AssetID              *string         `protobuf:"bytes,15,opt,name=assetID" json:"assetID,omitempty"`
	BusinessID           *int64          `protobuf:"varint,16,opt,name=businessID" json:"businessID,omitempty"`
	CloudVendor          *string         `protobuf:"bytes,17,opt,name=cloudVendor" json:"cloudVendor,omitempty"`
	CloudRegion          *string         `protobuf:"bytes,18,opt,name=cloudRegion" json:"cloudRegion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DeviceInfo) Reset()         { *m = DeviceInfo{} }
func (m *DeviceInfo) String() string { return proto.CompactTextString(m) }
func (*DeviceInfo) ProtoMessage()    {}
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{79}
}

func (m *DeviceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceInfo.Unmarshal(m, b)
}
func (m *DeviceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceInfo.Marshal(b, m, deterministic)
}
func (m *DeviceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceInfo.Merge(m, src)
}
func (m *DeviceInfo) XXX_Size() int {
	return xxx_messageInfo_DeviceInfo.Size(m)
}
func (m *DeviceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceInfo proto.InternalMessageInfo

func (m *DeviceInfo) GetInstance() string {
	if m != nil && m.Instance != nil {
		return *m.Instance
	}
	return ""
}

func (m *DeviceInfo) GetInnerIP() string {
	if m != nil && m.InnerIP != nil {
		return *m.InnerIP
	}
	return ""
}

func (m *DeviceInfo) GetInstanceType() string {
	if m != nil && m.InstanceType != nil {
		return *m.InstanceType
	}
	return ""
}

func (m *DeviceInfo) GetCpu() uint32 {
	if m != nil && m.Cpu != nil {
		return *m.Cpu
	}
	return 0
}

func (m *DeviceInfo) GetMem() uint32 {
	if m != nil && m.Mem != nil {
		return *m.Mem
	}
	return 0
}

func (m *DeviceInfo) GetGpu() uint32 {
	if m != nil && m.Gpu != nil {
		return *m.Gpu
	}
	return 0
}

func (m *DeviceInfo) GetZone() *DeviceZone {
	if m != nil {
		return m.Zone
	}
	return nil
}

func (m *DeviceInfo) GetSecurity() *DeviceSecurity {
	if m != nil {
		return m.Security
	}
	return nil
}

func (m *DeviceInfo) GetImage() *DeviceImage {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *DeviceInfo) GetVpc() string {
	if m != nil && m.Vpc != nil {
		return *m.Vpc
	}
	return ""
}

func (m *DeviceInfo) GetRegion() string {
	if m != nil && m.Region != nil {
		return *m.Region
	}
	return ""
}

func (m *DeviceInfo) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *DeviceInfo) GetSystemDisk() *DeviceDisk {
	if m != nil {
		return m.SystemDisk
	}
	return nil
}

func (m *DeviceInfo) GetDataDisks() []*DeviceDisk {
	if m != nil {
		return m.DataDisks
	}
	return nil
}

func (m *DeviceInfo) GetAssetID() string {
	if m != nil && m.AssetID != nil {
		return *m.AssetID
	}
	return ""
}

func (m *DeviceInfo) GetBusinessID() int64 {
	if m != nil && m.BusinessID != nil {
		return *m.BusinessID
	}
	return 0
}

func (m *DeviceInfo) GetCloudVendor() string {
	if m != nil && m.CloudVendor != nil {
		return *m.CloudVendor
	}
	return ""
}

func (m *DeviceInfo) GetCloudRegion() string {
	if m != nil && m.CloudRegion != nil {
		return *m.CloudRegion
	}
	return ""
}

type DeviceSecurity struct {
	Group                *string  `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	GroupName            *string  `protobuf:"bytes,2,opt,name=groupName" json:"groupName,omitempty"`
	GroupDescription     *string  `protobuf:"bytes,3,opt,name=groupDescription" json:"groupDescription,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceSecurity) Reset()         { *m = DeviceSecurity{} }
func (m *DeviceSecurity) String() string { return proto.CompactTextString(m) }
func (*DeviceSecurity) ProtoMessage()    {}
func (*DeviceSecurity) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{80}
}

func (m *DeviceSecurity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceSecurity.Unmarshal(m, b)
}
func (m *DeviceSecurity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceSecurity.Marshal(b, m, deterministic)
}
func (m *DeviceSecurity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceSecurity.Merge(m, src)
}
func (m *DeviceSecurity) XXX_Size() int {
	return xxx_messageInfo_DeviceSecurity.Size(m)
}
func (m *DeviceSecurity) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceSecurity.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceSecurity proto.InternalMessageInfo

func (m *DeviceSecurity) GetGroup() string {
	if m != nil && m.Group != nil {
		return *m.Group
	}
	return ""
}

func (m *DeviceSecurity) GetGroupName() string {
	if m != nil && m.GroupName != nil {
		return *m.GroupName
	}
	return ""
}

func (m *DeviceSecurity) GetGroupDescription() string {
	if m != nil && m.GroupDescription != nil {
		return *m.GroupDescription
	}
	return ""
}

type DeviceImage struct {
	Image                *string  `protobuf:"bytes,1,opt,name=image" json:"image,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceImage) Reset()         { *m = DeviceImage{} }
func (m *DeviceImage) String() string { return proto.CompactTextString(m) }
func (*DeviceImage) ProtoMessage()    {}
func (*DeviceImage) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{81}
}

func (m *DeviceImage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceImage.Unmarshal(m, b)
}
func (m *DeviceImage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceImage.Marshal(b, m, deterministic)
}
func (m *DeviceImage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceImage.Merge(m, src)
}
func (m *DeviceImage) XXX_Size() int {
	return xxx_messageInfo_DeviceImage.Size(m)
}
func (m *DeviceImage) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceImage.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceImage proto.InternalMessageInfo

func (m *DeviceImage) GetImage() string {
	if m != nil && m.Image != nil {
		return *m.Image
	}
	return ""
}

func (m *DeviceImage) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type DeviceZone struct {
	Region               *string  `protobuf:"bytes,1,opt,name=region" json:"region,omitempty"`
	Zone                 *string  `protobuf:"bytes,2,opt,name=zone" json:"zone,omitempty"`
	Subnet               *string  `protobuf:"bytes,3,opt,name=subnet" json:"subnet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceZone) Reset()         { *m = DeviceZone{} }
func (m *DeviceZone) String() string { return proto.CompactTextString(m) }
func (*DeviceZone) ProtoMessage()    {}
func (*DeviceZone) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{82}
}

func (m *DeviceZone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceZone.Unmarshal(m, b)
}
func (m *DeviceZone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceZone.Marshal(b, m, deterministic)
}
func (m *DeviceZone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceZone.Merge(m, src)
}
func (m *DeviceZone) XXX_Size() int {
	return xxx_messageInfo_DeviceZone.Size(m)
}
func (m *DeviceZone) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceZone.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceZone proto.InternalMessageInfo

func (m *DeviceZone) GetRegion() string {
	if m != nil && m.Region != nil {
		return *m.Region
	}
	return ""
}

func (m *DeviceZone) GetZone() string {
	if m != nil && m.Zone != nil {
		return *m.Zone
	}
	return ""
}

func (m *DeviceZone) GetSubnet() string {
	if m != nil && m.Subnet != nil {
		return *m.Subnet
	}
	return ""
}

// DeviceRecord 记录用户消费或归还设备的流水
type DeviceRecord struct {
	Id                   *string           `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	DeviceConsumerID     *string           `protobuf:"bytes,2,opt,name=deviceConsumerID" json:"deviceConsumerID,omitempty"`
	RequestTime          *int64            `protobuf:"varint,3,opt,name=requestTime" json:"requestTime,omitempty"`
	FinishTime           *int64            `protobuf:"varint,4,opt,name=finishTime" json:"finishTime,omitempty"`
	Type                 *string           `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	Status               *string           `protobuf:"bytes,6,opt,name=status" json:"status,omitempty"`
	Message              *string           `protobuf:"bytes,7,opt,name=message" json:"message,omitempty"`
	Devices              []string          `protobuf:"bytes,8,rep,name=devices" json:"devices,omitempty"`
	Num                  *uint32           `protobuf:"varint,9,opt,name=num" json:"num,omitempty"`
	Desires              []*ConsumeDesire  `protobuf:"bytes,10,rep,name=desires" json:"desires,omitempty"`
	Pools                []string          `protobuf:"bytes,11,rep,name=pools" json:"pools,omitempty"`
	SelectedPool         *string           `protobuf:"bytes,12,opt,name=selectedPool" json:"selectedPool,omitempty"`
	CreateTime           *int64            `protobuf:"varint,13,opt,name=createTime" json:"createTime,omitempty"`
	UpdateTime           *int64            `protobuf:"varint,14,opt,name=updateTime" json:"updateTime,omitempty"`
	ConsumerLabels       map[string]string `protobuf:"bytes,15,rep,name=consumerLabels" json:"consumerLabels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	DeviceDetails        []*Device         `protobuf:"bytes,16,rep,name=deviceDetails" json:"deviceDetails,omitempty"`
	ExtraLabels          map[string]string `protobuf:"bytes,17,rep,name=extraLabels" json:"extraLabels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	SnapshotPool         *string           `protobuf:"bytes,18,opt,name=snapshotPool" json:"snapshotPool,omitempty"`
	Provider             *string           `protobuf:"bytes,19,opt,name=provider" json:"provider,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DeviceRecord) Reset()         { *m = DeviceRecord{} }
func (m *DeviceRecord) String() string { return proto.CompactTextString(m) }
func (*DeviceRecord) ProtoMessage()    {}
func (*DeviceRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{83}
}

func (m *DeviceRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceRecord.Unmarshal(m, b)
}
func (m *DeviceRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceRecord.Marshal(b, m, deterministic)
}
func (m *DeviceRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceRecord.Merge(m, src)
}
func (m *DeviceRecord) XXX_Size() int {
	return xxx_messageInfo_DeviceRecord.Size(m)
}
func (m *DeviceRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceRecord.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceRecord proto.InternalMessageInfo

func (m *DeviceRecord) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *DeviceRecord) GetDeviceConsumerID() string {
	if m != nil && m.DeviceConsumerID != nil {
		return *m.DeviceConsumerID
	}
	return ""
}

func (m *DeviceRecord) GetRequestTime() int64 {
	if m != nil && m.RequestTime != nil {
		return *m.RequestTime
	}
	return 0
}

func (m *DeviceRecord) GetFinishTime() int64 {
	if m != nil && m.FinishTime != nil {
		return *m.FinishTime
	}
	return 0
}

func (m *DeviceRecord) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *DeviceRecord) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

func (m *DeviceRecord) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *DeviceRecord) GetDevices() []string {
	if m != nil {
		return m.Devices
	}
	return nil
}

func (m *DeviceRecord) GetNum() uint32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *DeviceRecord) GetDesires() []*ConsumeDesire {
	if m != nil {
		return m.Desires
	}
	return nil
}

func (m *DeviceRecord) GetPools() []string {
	if m != nil {
		return m.Pools
	}
	return nil
}

func (m *DeviceRecord) GetSelectedPool() string {
	if m != nil && m.SelectedPool != nil {
		return *m.SelectedPool
	}
	return ""
}

func (m *DeviceRecord) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *DeviceRecord) GetUpdateTime() int64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *DeviceRecord) GetConsumerLabels() map[string]string {
	if m != nil {
		return m.ConsumerLabels
	}
	return nil
}

func (m *DeviceRecord) GetDeviceDetails() []*Device {
	if m != nil {
		return m.DeviceDetails
	}
	return nil
}

func (m *DeviceRecord) GetExtraLabels() map[string]string {
	if m != nil {
		return m.ExtraLabels
	}
	return nil
}

func (m *DeviceRecord) GetSnapshotPool() string {
	if m != nil && m.SnapshotPool != nil {
		return *m.SnapshotPool
	}
	return ""
}

func (m *DeviceRecord) GetProvider() string {
	if m != nil && m.Provider != nil {
		return *m.Provider
	}
	return ""
}

type DeviceBill struct {
	Id                   *string           `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	DeviceID             *string           `protobuf:"bytes,2,opt,name=deviceID" json:"deviceID,omitempty"`
	DeviceConsumerID     *string           `protobuf:"bytes,3,opt,name=deviceConsumerID" json:"deviceConsumerID,omitempty"`
	ConsumeRequestTime   *int64            `protobuf:"varint,4,opt,name=consumeRequestTime" json:"consumeRequestTime,omitempty"`
	ConsumeTime          *int64            `protobuf:"varint,5,opt,name=consumeTime" json:"consumeTime,omitempty"`
	ReturnRequestTime    *int64            `protobuf:"varint,6,opt,name=returnRequestTime" json:"returnRequestTime,omitempty"`
	ReturnTime           *int64            `protobuf:"varint,7,opt,name=returnTime" json:"returnTime,omitempty"`
	Finished             *bool             `protobuf:"varint,8,opt,name=finished" json:"finished,omitempty"`
	ConsumerLabels       map[string]string `protobuf:"bytes,9,rep,name=consumerLabels" json:"consumerLabels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	DeviceRecordID       *string           `protobuf:"bytes,10,opt,name=deviceRecordID" json:"deviceRecordID,omitempty"`
	DeviceInfo           *DeviceInfo       `protobuf:"bytes,11,opt,name=deviceInfo" json:"deviceInfo,omitempty"`
	Provider             *string           `protobuf:"bytes,12,opt,name=provider" json:"provider,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DeviceBill) Reset()         { *m = DeviceBill{} }
func (m *DeviceBill) String() string { return proto.CompactTextString(m) }
func (*DeviceBill) ProtoMessage()    {}
func (*DeviceBill) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{84}
}

func (m *DeviceBill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceBill.Unmarshal(m, b)
}
func (m *DeviceBill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceBill.Marshal(b, m, deterministic)
}
func (m *DeviceBill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceBill.Merge(m, src)
}
func (m *DeviceBill) XXX_Size() int {
	return xxx_messageInfo_DeviceBill.Size(m)
}
func (m *DeviceBill) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceBill.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceBill proto.InternalMessageInfo

func (m *DeviceBill) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *DeviceBill) GetDeviceID() string {
	if m != nil && m.DeviceID != nil {
		return *m.DeviceID
	}
	return ""
}

func (m *DeviceBill) GetDeviceConsumerID() string {
	if m != nil && m.DeviceConsumerID != nil {
		return *m.DeviceConsumerID
	}
	return ""
}

func (m *DeviceBill) GetConsumeRequestTime() int64 {
	if m != nil && m.ConsumeRequestTime != nil {
		return *m.ConsumeRequestTime
	}
	return 0
}

func (m *DeviceBill) GetConsumeTime() int64 {
	if m != nil && m.ConsumeTime != nil {
		return *m.ConsumeTime
	}
	return 0
}

func (m *DeviceBill) GetReturnRequestTime() int64 {
	if m != nil && m.ReturnRequestTime != nil {
		return *m.ReturnRequestTime
	}
	return 0
}

func (m *DeviceBill) GetReturnTime() int64 {
	if m != nil && m.ReturnTime != nil {
		return *m.ReturnTime
	}
	return 0
}

func (m *DeviceBill) GetFinished() bool {
	if m != nil && m.Finished != nil {
		return *m.Finished
	}
	return false
}

func (m *DeviceBill) GetConsumerLabels() map[string]string {
	if m != nil {
		return m.ConsumerLabels
	}
	return nil
}

func (m *DeviceBill) GetDeviceRecordID() string {
	if m != nil && m.DeviceRecordID != nil {
		return *m.DeviceRecordID
	}
	return ""
}

func (m *DeviceBill) GetDeviceInfo() *DeviceInfo {
	if m != nil {
		return m.DeviceInfo
	}
	return nil
}

func (m *DeviceBill) GetProvider() string {
	if m != nil && m.Provider != nil {
		return *m.Provider
	}
	return ""
}

type Provider struct {
	Name                 *string           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Key                  *string           `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Secret               *string           `protobuf:"bytes,3,opt,name=secret" json:"secret,omitempty"`
	Labels               map[string]string `protobuf:"bytes,4,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreateTime           *int64            `protobuf:"varint,5,opt,name=createTime" json:"createTime,omitempty"`
	UpdateTime           *int64            `protobuf:"varint,6,opt,name=updateTime" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Provider) Reset()         { *m = Provider{} }
func (m *Provider) String() string { return proto.CompactTextString(m) }
func (*Provider) ProtoMessage()    {}
func (*Provider) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{85}
}

func (m *Provider) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Provider.Unmarshal(m, b)
}
func (m *Provider) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Provider.Marshal(b, m, deterministic)
}
func (m *Provider) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Provider.Merge(m, src)
}
func (m *Provider) XXX_Size() int {
	return xxx_messageInfo_Provider.Size(m)
}
func (m *Provider) XXX_DiscardUnknown() {
	xxx_messageInfo_Provider.DiscardUnknown(m)
}

var xxx_messageInfo_Provider proto.InternalMessageInfo

func (m *Provider) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Provider) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Provider) GetSecret() string {
	if m != nil && m.Secret != nil {
		return *m.Secret
	}
	return ""
}

func (m *Provider) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Provider) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *Provider) GetUpdateTime() int64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

type CreateResourcePoolReq struct {
	Name                 *string           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Labels               map[string]string `protobuf:"bytes,2,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Annotations          map[string]string `protobuf:"bytes,3,rep,name=annotations" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Comment              *string           `protobuf:"bytes,4,opt,name=comment" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateResourcePoolReq) Reset()         { *m = CreateResourcePoolReq{} }
func (m *CreateResourcePoolReq) String() string { return proto.CompactTextString(m) }
func (*CreateResourcePoolReq) ProtoMessage()    {}
func (*CreateResourcePoolReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{86}
}

func (m *CreateResourcePoolReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResourcePoolReq.Unmarshal(m, b)
}
func (m *CreateResourcePoolReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResourcePoolReq.Marshal(b, m, deterministic)
}
func (m *CreateResourcePoolReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResourcePoolReq.Merge(m, src)
}
func (m *CreateResourcePoolReq) XXX_Size() int {
	return xxx_messageInfo_CreateResourcePoolReq.Size(m)
}
func (m *CreateResourcePoolReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResourcePoolReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResourcePoolReq proto.InternalMessageInfo

func (m *CreateResourcePoolReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CreateResourcePoolReq) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateResourcePoolReq) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *CreateResourcePoolReq) GetComment() string {
	if m != nil && m.Comment != nil {
		return *m.Comment
	}
	return ""
}

type CreateResourcePoolResp struct {
	Code                 *uint32       `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	Message              *string       `protobuf:"bytes,2,req,name=message" json:"message,omitempty"`
	Result               *bool         `protobuf:"varint,3,req,name=result" json:"result,omitempty"`
	Data                 *ResourcePool `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreateResourcePoolResp) Reset()         { *m = CreateResourcePoolResp{} }
func (m *CreateResourcePoolResp) String() string { return proto.CompactTextString(m) }
func (*CreateResourcePoolResp) ProtoMessage()    {}
func (*CreateResourcePoolResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{87}
}

func (m *CreateResourcePoolResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResourcePoolResp.Unmarshal(m, b)
}
func (m *CreateResourcePoolResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResourcePoolResp.Marshal(b, m, deterministic)
}
func (m *CreateResourcePoolResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResourcePoolResp.Merge(m, src)
}
func (m *CreateResourcePoolResp) XXX_Size() int {
	return xxx_messageInfo_CreateResourcePoolResp.Size(m)
}
func (m *CreateResourcePoolResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResourcePoolResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResourcePoolResp proto.InternalMessageInfo

func (m *CreateResourcePoolResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *CreateResourcePoolResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CreateResourcePoolResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *CreateResourcePoolResp) GetData() *ResourcePool {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListResourcePoolReq struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListResourcePoolReq) Reset()         { *m = ListResourcePoolReq{} }
func (m *ListResourcePoolReq) String() string { return proto.CompactTextString(m) }
func (*ListResourcePoolReq) ProtoMessage()    {}
func (*ListResourcePoolReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{88}
}

func (m *ListResourcePoolReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResourcePoolReq.Unmarshal(m, b)
}
func (m *ListResourcePoolReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResourcePoolReq.Marshal(b, m, deterministic)
}
func (m *ListResourcePoolReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResourcePoolReq.Merge(m, src)
}
func (m *ListResourcePoolReq) XXX_Size() int {
	return xxx_messageInfo_ListResourcePoolReq.Size(m)
}
func (m *ListResourcePoolReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResourcePoolReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListResourcePoolReq proto.InternalMessageInfo

func (m *ListResourcePoolReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type ListResourcePoolResp struct {
	Code                 *uint32         `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,req,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,req,name=result" json:"result,omitempty"`
	Data                 []*ResourcePool `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListResourcePoolResp) Reset()         { *m = ListResourcePoolResp{} }
func (m *ListResourcePoolResp) String() string { return proto.CompactTextString(m) }
func (*ListResourcePoolResp) ProtoMessage()    {}
func (*ListResourcePoolResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{89}
}

func (m *ListResourcePoolResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResourcePoolResp.Unmarshal(m, b)
}
func (m *ListResourcePoolResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResourcePoolResp.Marshal(b, m, deterministic)
}
func (m *ListResourcePoolResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResourcePoolResp.Merge(m, src)
}
func (m *ListResourcePoolResp) XXX_Size() int {
	return xxx_messageInfo_ListResourcePoolResp.Size(m)
}
func (m *ListResourcePoolResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResourcePoolResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListResourcePoolResp proto.InternalMessageInfo

func (m *ListResourcePoolResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ListResourcePoolResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ListResourcePoolResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ListResourcePoolResp) GetData() []*ResourcePool {
	if m != nil {
		return m.Data
	}
	return nil
}

type ResourcePool struct {
	Id                   *string           `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name                 *string           `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Comment              *string           `protobuf:"bytes,3,opt,name=comment" json:"comment,omitempty"`
	Labels               map[string]string `protobuf:"bytes,4,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Annotations          map[string]string `protobuf:"bytes,5,rep,name=annotations" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreateTime           *int64            `protobuf:"varint,6,opt,name=createTime" json:"createTime,omitempty"`
	UpdateTime           *int64            `protobuf:"varint,7,opt,name=updateTime" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ResourcePool) Reset()         { *m = ResourcePool{} }
func (m *ResourcePool) String() string { return proto.CompactTextString(m) }
func (*ResourcePool) ProtoMessage()    {}
func (*ResourcePool) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{90}
}

func (m *ResourcePool) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourcePool.Unmarshal(m, b)
}
func (m *ResourcePool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourcePool.Marshal(b, m, deterministic)
}
func (m *ResourcePool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourcePool.Merge(m, src)
}
func (m *ResourcePool) XXX_Size() int {
	return xxx_messageInfo_ResourcePool.Size(m)
}
func (m *ResourcePool) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourcePool.DiscardUnknown(m)
}

var xxx_messageInfo_ResourcePool proto.InternalMessageInfo

func (m *ResourcePool) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *ResourcePool) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ResourcePool) GetComment() string {
	if m != nil && m.Comment != nil {
		return *m.Comment
	}
	return ""
}

func (m *ResourcePool) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *ResourcePool) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *ResourcePool) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *ResourcePool) GetUpdateTime() int64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

type ImportResourceReq struct {
	PoolID               *string     `protobuf:"bytes,1,opt,name=poolID" json:"poolID,omitempty"`
	Data                 []*Resource `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	Operator             *string     `protobuf:"bytes,3,opt,name=operator" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ImportResourceReq) Reset()         { *m = ImportResourceReq{} }
func (m *ImportResourceReq) String() string { return proto.CompactTextString(m) }
func (*ImportResourceReq) ProtoMessage()    {}
func (*ImportResourceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{91}
}

func (m *ImportResourceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportResourceReq.Unmarshal(m, b)
}
func (m *ImportResourceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportResourceReq.Marshal(b, m, deterministic)
}
func (m *ImportResourceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportResourceReq.Merge(m, src)
}
func (m *ImportResourceReq) XXX_Size() int {
	return xxx_messageInfo_ImportResourceReq.Size(m)
}
func (m *ImportResourceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportResourceReq.DiscardUnknown(m)
}

var xxx_messageInfo_ImportResourceReq proto.InternalMessageInfo

func (m *ImportResourceReq) GetPoolID() string {
	if m != nil && m.PoolID != nil {
		return *m.PoolID
	}
	return ""
}

func (m *ImportResourceReq) GetData() []*Resource {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ImportResourceReq) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

type ImportResourceResp struct {
	Code                 *uint32     `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	Message              *string     `protobuf:"bytes,2,req,name=message" json:"message,omitempty"`
	Result               *bool       `protobuf:"varint,3,req,name=result" json:"result,omitempty"`
	Data                 []*Resource `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ImportResourceResp) Reset()         { *m = ImportResourceResp{} }
func (m *ImportResourceResp) String() string { return proto.CompactTextString(m) }
func (*ImportResourceResp) ProtoMessage()    {}
func (*ImportResourceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{92}
}

func (m *ImportResourceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportResourceResp.Unmarshal(m, b)
}
func (m *ImportResourceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportResourceResp.Marshal(b, m, deterministic)
}
func (m *ImportResourceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportResourceResp.Merge(m, src)
}
func (m *ImportResourceResp) XXX_Size() int {
	return xxx_messageInfo_ImportResourceResp.Size(m)
}
func (m *ImportResourceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportResourceResp.DiscardUnknown(m)
}

var xxx_messageInfo_ImportResourceResp proto.InternalMessageInfo

func (m *ImportResourceResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ImportResourceResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ImportResourceResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ImportResourceResp) GetData() []*Resource {
	if m != nil {
		return m.Data
	}
	return nil
}

type Resource struct {
	Id                   *string           `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	InnerIP              *string           `protobuf:"bytes,2,req,name=innerIP" json:"innerIP,omitempty"`
	InnerIPv6            *string           `protobuf:"bytes,3,opt,name=innerIPv6" json:"innerIPv6,omitempty"`
	ResourceType         *string           `protobuf:"bytes,4,req,name=resourceType" json:"resourceType,omitempty"`
	ResourceProvider     *string           `protobuf:"bytes,5,req,name=resourceProvider" json:"resourceProvider,omitempty"`
	PoolID               *string           `protobuf:"bytes,6,opt,name=poolID" json:"poolID,omitempty"`
	Labels               map[string]string `protobuf:"bytes,7,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Annotations          map[string]string `protobuf:"bytes,8,rep,name=annotations" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreateTime           *int64            `protobuf:"varint,9,opt,name=createTime" json:"createTime,omitempty"`
	UpdateTime           *int64            `protobuf:"varint,10,opt,name=updateTime" json:"updateTime,omitempty"`
	Status               *ResourceStatus   `protobuf:"bytes,11,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Resource) Reset()         { *m = Resource{} }
func (m *Resource) String() string { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()    {}
func (*Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{93}
}

func (m *Resource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resource.Unmarshal(m, b)
}
func (m *Resource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resource.Marshal(b, m, deterministic)
}
func (m *Resource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resource.Merge(m, src)
}
func (m *Resource) XXX_Size() int {
	return xxx_messageInfo_Resource.Size(m)
}
func (m *Resource) XXX_DiscardUnknown() {
	xxx_messageInfo_Resource.DiscardUnknown(m)
}

var xxx_messageInfo_Resource proto.InternalMessageInfo

func (m *Resource) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Resource) GetInnerIP() string {
	if m != nil && m.InnerIP != nil {
		return *m.InnerIP
	}
	return ""
}

func (m *Resource) GetInnerIPv6() string {
	if m != nil && m.InnerIPv6 != nil {
		return *m.InnerIPv6
	}
	return ""
}

func (m *Resource) GetResourceType() string {
	if m != nil && m.ResourceType != nil {
		return *m.ResourceType
	}
	return ""
}

func (m *Resource) GetResourceProvider() string {
	if m != nil && m.ResourceProvider != nil {
		return *m.ResourceProvider
	}
	return ""
}

func (m *Resource) GetPoolID() string {
	if m != nil && m.PoolID != nil {
		return *m.PoolID
	}
	return ""
}

func (m *Resource) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Resource) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *Resource) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *Resource) GetUpdateTime() int64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *Resource) GetStatus() *ResourceStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type ResourceStatus struct {
	Phase                *string  `protobuf:"bytes,1,req,name=phase" json:"phase,omitempty"`
	UpdateTime           *int64   `protobuf:"varint,2,req,name=updateTime" json:"updateTime,omitempty"`
	ConsumeOrderID       *string  `protobuf:"bytes,3,opt,name=consumeOrderID" json:"consumeOrderID,omitempty"`
	DevicePoolID         *string  `protobuf:"bytes,4,opt,name=devicePoolID" json:"devicePoolID,omitempty"`
	ClusterID            *string  `protobuf:"bytes,5,opt,name=clusterID" json:"clusterID,omitempty"`
	ReturnOrderID        *string  `protobuf:"bytes,6,opt,name=returnOrderID" json:"returnOrderID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceStatus) Reset()         { *m = ResourceStatus{} }
func (m *ResourceStatus) String() string { return proto.CompactTextString(m) }
func (*ResourceStatus) ProtoMessage()    {}
func (*ResourceStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{94}
}

func (m *ResourceStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceStatus.Unmarshal(m, b)
}
func (m *ResourceStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceStatus.Marshal(b, m, deterministic)
}
func (m *ResourceStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceStatus.Merge(m, src)
}
func (m *ResourceStatus) XXX_Size() int {
	return xxx_messageInfo_ResourceStatus.Size(m)
}
func (m *ResourceStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceStatus proto.InternalMessageInfo

func (m *ResourceStatus) GetPhase() string {
	if m != nil && m.Phase != nil {
		return *m.Phase
	}
	return ""
}

func (m *ResourceStatus) GetUpdateTime() int64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *ResourceStatus) GetConsumeOrderID() string {
	if m != nil && m.ConsumeOrderID != nil {
		return *m.ConsumeOrderID
	}
	return ""
}

func (m *ResourceStatus) GetDevicePoolID() string {
	if m != nil && m.DevicePoolID != nil {
		return *m.DevicePoolID
	}
	return ""
}

func (m *ResourceStatus) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *ResourceStatus) GetReturnOrderID() string {
	if m != nil && m.ReturnOrderID != nil {
		return *m.ReturnOrderID
	}
	return ""
}

type ListResourceReq struct {
	PoolID               *string  `protobuf:"bytes,1,req,name=poolID" json:"poolID,omitempty"`
	Consumable           *string  `protobuf:"bytes,2,opt,name=consumable" json:"consumable,omitempty"`
	MatchConsumerID      *string  `protobuf:"bytes,3,opt,name=matchConsumerID" json:"matchConsumerID,omitempty"`
	MatchDeviceRecordID  *string  `protobuf:"bytes,4,opt,name=matchDeviceRecordID" json:"matchDeviceRecordID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListResourceReq) Reset()         { *m = ListResourceReq{} }
func (m *ListResourceReq) String() string { return proto.CompactTextString(m) }
func (*ListResourceReq) ProtoMessage()    {}
func (*ListResourceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{95}
}

func (m *ListResourceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResourceReq.Unmarshal(m, b)
}
func (m *ListResourceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResourceReq.Marshal(b, m, deterministic)
}
func (m *ListResourceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResourceReq.Merge(m, src)
}
func (m *ListResourceReq) XXX_Size() int {
	return xxx_messageInfo_ListResourceReq.Size(m)
}
func (m *ListResourceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResourceReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListResourceReq proto.InternalMessageInfo

func (m *ListResourceReq) GetPoolID() string {
	if m != nil && m.PoolID != nil {
		return *m.PoolID
	}
	return ""
}

func (m *ListResourceReq) GetConsumable() string {
	if m != nil && m.Consumable != nil {
		return *m.Consumable
	}
	return ""
}

func (m *ListResourceReq) GetMatchConsumerID() string {
	if m != nil && m.MatchConsumerID != nil {
		return *m.MatchConsumerID
	}
	return ""
}

func (m *ListResourceReq) GetMatchDeviceRecordID() string {
	if m != nil && m.MatchDeviceRecordID != nil {
		return *m.MatchDeviceRecordID
	}
	return ""
}

type ListDeviceRecordByPoolReq struct {
	PoolID               *string  `protobuf:"bytes,1,req,name=poolID" json:"poolID,omitempty"`
	Sort                 *string  `protobuf:"bytes,2,opt,name=sort" json:"sort,omitempty"`
	Desc                 *bool    `protobuf:"varint,3,opt,name=desc" json:"desc,omitempty"`
	Offset               *int64   `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	Limit                *int64   `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDeviceRecordByPoolReq) Reset()         { *m = ListDeviceRecordByPoolReq{} }
func (m *ListDeviceRecordByPoolReq) String() string { return proto.CompactTextString(m) }
func (*ListDeviceRecordByPoolReq) ProtoMessage()    {}
func (*ListDeviceRecordByPoolReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{96}
}

func (m *ListDeviceRecordByPoolReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceRecordByPoolReq.Unmarshal(m, b)
}
func (m *ListDeviceRecordByPoolReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceRecordByPoolReq.Marshal(b, m, deterministic)
}
func (m *ListDeviceRecordByPoolReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceRecordByPoolReq.Merge(m, src)
}
func (m *ListDeviceRecordByPoolReq) XXX_Size() int {
	return xxx_messageInfo_ListDeviceRecordByPoolReq.Size(m)
}
func (m *ListDeviceRecordByPoolReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceRecordByPoolReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceRecordByPoolReq proto.InternalMessageInfo

func (m *ListDeviceRecordByPoolReq) GetPoolID() string {
	if m != nil && m.PoolID != nil {
		return *m.PoolID
	}
	return ""
}

func (m *ListDeviceRecordByPoolReq) GetSort() string {
	if m != nil && m.Sort != nil {
		return *m.Sort
	}
	return ""
}

func (m *ListDeviceRecordByPoolReq) GetDesc() bool {
	if m != nil && m.Desc != nil {
		return *m.Desc
	}
	return false
}

func (m *ListDeviceRecordByPoolReq) GetOffset() int64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *ListDeviceRecordByPoolReq) GetLimit() int64 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

type ListDeviceRecordByDevicePoolReq struct {
	PoolID               *string  `protobuf:"bytes,1,req,name=poolID" json:"poolID,omitempty"`
	Sort                 *string  `protobuf:"bytes,2,opt,name=sort" json:"sort,omitempty"`
	Desc                 *bool    `protobuf:"varint,3,opt,name=desc" json:"desc,omitempty"`
	Offset               *int64   `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	Limit                *int64   `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDeviceRecordByDevicePoolReq) Reset()         { *m = ListDeviceRecordByDevicePoolReq{} }
func (m *ListDeviceRecordByDevicePoolReq) String() string { return proto.CompactTextString(m) }
func (*ListDeviceRecordByDevicePoolReq) ProtoMessage()    {}
func (*ListDeviceRecordByDevicePoolReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{97}
}

func (m *ListDeviceRecordByDevicePoolReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceRecordByDevicePoolReq.Unmarshal(m, b)
}
func (m *ListDeviceRecordByDevicePoolReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceRecordByDevicePoolReq.Marshal(b, m, deterministic)
}
func (m *ListDeviceRecordByDevicePoolReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceRecordByDevicePoolReq.Merge(m, src)
}
func (m *ListDeviceRecordByDevicePoolReq) XXX_Size() int {
	return xxx_messageInfo_ListDeviceRecordByDevicePoolReq.Size(m)
}
func (m *ListDeviceRecordByDevicePoolReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceRecordByDevicePoolReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceRecordByDevicePoolReq proto.InternalMessageInfo

func (m *ListDeviceRecordByDevicePoolReq) GetPoolID() string {
	if m != nil && m.PoolID != nil {
		return *m.PoolID
	}
	return ""
}

func (m *ListDeviceRecordByDevicePoolReq) GetSort() string {
	if m != nil && m.Sort != nil {
		return *m.Sort
	}
	return ""
}

func (m *ListDeviceRecordByDevicePoolReq) GetDesc() bool {
	if m != nil && m.Desc != nil {
		return *m.Desc
	}
	return false
}

func (m *ListDeviceRecordByDevicePoolReq) GetOffset() int64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *ListDeviceRecordByDevicePoolReq) GetLimit() int64 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

type ListResourceResp struct {
	Code                 *uint32     `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	Message              *string     `protobuf:"bytes,2,req,name=message" json:"message,omitempty"`
	Result               *bool       `protobuf:"varint,3,req,name=result" json:"result,omitempty"`
	Data                 []*Resource `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListResourceResp) Reset()         { *m = ListResourceResp{} }
func (m *ListResourceResp) String() string { return proto.CompactTextString(m) }
func (*ListResourceResp) ProtoMessage()    {}
func (*ListResourceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{98}
}

func (m *ListResourceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResourceResp.Unmarshal(m, b)
}
func (m *ListResourceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResourceResp.Marshal(b, m, deterministic)
}
func (m *ListResourceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResourceResp.Merge(m, src)
}
func (m *ListResourceResp) XXX_Size() int {
	return xxx_messageInfo_ListResourceResp.Size(m)
}
func (m *ListResourceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResourceResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListResourceResp proto.InternalMessageInfo

func (m *ListResourceResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ListResourceResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ListResourceResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ListResourceResp) GetData() []*Resource {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateDeviceRecordByPoolReq struct {
	PoolID               *string        `protobuf:"bytes,1,req,name=poolID" json:"poolID,omitempty"`
	Num                  *uint32        `protobuf:"varint,2,opt,name=num" json:"num,omitempty"`
	Desire               *ConsumeDesire `protobuf:"bytes,3,opt,name=desire" json:"desire,omitempty"`
	DrainDelay           *string        `protobuf:"bytes,4,opt,name=drainDelay" json:"drainDelay,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreateDeviceRecordByPoolReq) Reset()         { *m = CreateDeviceRecordByPoolReq{} }
func (m *CreateDeviceRecordByPoolReq) String() string { return proto.CompactTextString(m) }
func (*CreateDeviceRecordByPoolReq) ProtoMessage()    {}
func (*CreateDeviceRecordByPoolReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{99}
}

func (m *CreateDeviceRecordByPoolReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeviceRecordByPoolReq.Unmarshal(m, b)
}
func (m *CreateDeviceRecordByPoolReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeviceRecordByPoolReq.Marshal(b, m, deterministic)
}
func (m *CreateDeviceRecordByPoolReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeviceRecordByPoolReq.Merge(m, src)
}
func (m *CreateDeviceRecordByPoolReq) XXX_Size() int {
	return xxx_messageInfo_CreateDeviceRecordByPoolReq.Size(m)
}
func (m *CreateDeviceRecordByPoolReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeviceRecordByPoolReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeviceRecordByPoolReq proto.InternalMessageInfo

func (m *CreateDeviceRecordByPoolReq) GetPoolID() string {
	if m != nil && m.PoolID != nil {
		return *m.PoolID
	}
	return ""
}

func (m *CreateDeviceRecordByPoolReq) GetNum() uint32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *CreateDeviceRecordByPoolReq) GetDesire() *ConsumeDesire {
	if m != nil {
		return m.Desire
	}
	return nil
}

func (m *CreateDeviceRecordByPoolReq) GetDrainDelay() string {
	if m != nil && m.DrainDelay != nil {
		return *m.DrainDelay
	}
	return ""
}

type UpdateDeviceRecordReq struct {
	DeviceRecordID       *string     `protobuf:"bytes,1,req,name=deviceRecordID" json:"deviceRecordID,omitempty"`
	Devices              *ListString `protobuf:"bytes,2,opt,name=devices" json:"devices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpdateDeviceRecordReq) Reset()         { *m = UpdateDeviceRecordReq{} }
func (m *UpdateDeviceRecordReq) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceRecordReq) ProtoMessage()    {}
func (*UpdateDeviceRecordReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{100}
}

func (m *UpdateDeviceRecordReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceRecordReq.Unmarshal(m, b)
}
func (m *UpdateDeviceRecordReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceRecordReq.Marshal(b, m, deterministic)
}
func (m *UpdateDeviceRecordReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceRecordReq.Merge(m, src)
}
func (m *UpdateDeviceRecordReq) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceRecordReq.Size(m)
}
func (m *UpdateDeviceRecordReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceRecordReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceRecordReq proto.InternalMessageInfo

func (m *UpdateDeviceRecordReq) GetDeviceRecordID() string {
	if m != nil && m.DeviceRecordID != nil {
		return *m.DeviceRecordID
	}
	return ""
}

func (m *UpdateDeviceRecordReq) GetDevices() *ListString {
	if m != nil {
		return m.Devices
	}
	return nil
}

type UpdateDeviceRecordResp struct {
	Code                 *uint32       `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string       `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool         `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *DeviceRecord `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UpdateDeviceRecordResp) Reset()         { *m = UpdateDeviceRecordResp{} }
func (m *UpdateDeviceRecordResp) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceRecordResp) ProtoMessage()    {}
func (*UpdateDeviceRecordResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{101}
}

func (m *UpdateDeviceRecordResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceRecordResp.Unmarshal(m, b)
}
func (m *UpdateDeviceRecordResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceRecordResp.Marshal(b, m, deterministic)
}
func (m *UpdateDeviceRecordResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceRecordResp.Merge(m, src)
}
func (m *UpdateDeviceRecordResp) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceRecordResp.Size(m)
}
func (m *UpdateDeviceRecordResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceRecordResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceRecordResp proto.InternalMessageInfo

func (m *UpdateDeviceRecordResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *UpdateDeviceRecordResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *UpdateDeviceRecordResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *UpdateDeviceRecordResp) GetData() *DeviceRecord {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateDeviceRecordByDevicePoolReq struct {
	PoolID               *string        `protobuf:"bytes,1,req,name=poolID" json:"poolID,omitempty"`
	Num                  *uint32        `protobuf:"varint,2,opt,name=num" json:"num,omitempty"`
	Desire               *ConsumeDesire `protobuf:"bytes,3,opt,name=desire" json:"desire,omitempty"`
	DrainDelay           *string        `protobuf:"bytes,4,opt,name=drainDelay" json:"drainDelay,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreateDeviceRecordByDevicePoolReq) Reset()         { *m = CreateDeviceRecordByDevicePoolReq{} }
func (m *CreateDeviceRecordByDevicePoolReq) String() string { return proto.CompactTextString(m) }
func (*CreateDeviceRecordByDevicePoolReq) ProtoMessage()    {}
func (*CreateDeviceRecordByDevicePoolReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{102}
}

func (m *CreateDeviceRecordByDevicePoolReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeviceRecordByDevicePoolReq.Unmarshal(m, b)
}
func (m *CreateDeviceRecordByDevicePoolReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeviceRecordByDevicePoolReq.Marshal(b, m, deterministic)
}
func (m *CreateDeviceRecordByDevicePoolReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeviceRecordByDevicePoolReq.Merge(m, src)
}
func (m *CreateDeviceRecordByDevicePoolReq) XXX_Size() int {
	return xxx_messageInfo_CreateDeviceRecordByDevicePoolReq.Size(m)
}
func (m *CreateDeviceRecordByDevicePoolReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeviceRecordByDevicePoolReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeviceRecordByDevicePoolReq proto.InternalMessageInfo

func (m *CreateDeviceRecordByDevicePoolReq) GetPoolID() string {
	if m != nil && m.PoolID != nil {
		return *m.PoolID
	}
	return ""
}

func (m *CreateDeviceRecordByDevicePoolReq) GetNum() uint32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *CreateDeviceRecordByDevicePoolReq) GetDesire() *ConsumeDesire {
	if m != nil {
		return m.Desire
	}
	return nil
}

func (m *CreateDeviceRecordByDevicePoolReq) GetDrainDelay() string {
	if m != nil && m.DrainDelay != nil {
		return *m.DrainDelay
	}
	return ""
}

type CreateDeviceRecordByPoolResp struct {
	Code                 *uint32       `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string       `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool         `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *DeviceRecord `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreateDeviceRecordByPoolResp) Reset()         { *m = CreateDeviceRecordByPoolResp{} }
func (m *CreateDeviceRecordByPoolResp) String() string { return proto.CompactTextString(m) }
func (*CreateDeviceRecordByPoolResp) ProtoMessage()    {}
func (*CreateDeviceRecordByPoolResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{103}
}

func (m *CreateDeviceRecordByPoolResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeviceRecordByPoolResp.Unmarshal(m, b)
}
func (m *CreateDeviceRecordByPoolResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeviceRecordByPoolResp.Marshal(b, m, deterministic)
}
func (m *CreateDeviceRecordByPoolResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeviceRecordByPoolResp.Merge(m, src)
}
func (m *CreateDeviceRecordByPoolResp) XXX_Size() int {
	return xxx_messageInfo_CreateDeviceRecordByPoolResp.Size(m)
}
func (m *CreateDeviceRecordByPoolResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeviceRecordByPoolResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeviceRecordByPoolResp proto.InternalMessageInfo

func (m *CreateDeviceRecordByPoolResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *CreateDeviceRecordByPoolResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CreateDeviceRecordByPoolResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *CreateDeviceRecordByPoolResp) GetData() *DeviceRecord {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateDeviceRecordByDevicePoolResp struct {
	Code                 *uint32       `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string       `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool         `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *DeviceRecord `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreateDeviceRecordByDevicePoolResp) Reset()         { *m = CreateDeviceRecordByDevicePoolResp{} }
func (m *CreateDeviceRecordByDevicePoolResp) String() string { return proto.CompactTextString(m) }
func (*CreateDeviceRecordByDevicePoolResp) ProtoMessage()    {}
func (*CreateDeviceRecordByDevicePoolResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{104}
}

func (m *CreateDeviceRecordByDevicePoolResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeviceRecordByDevicePoolResp.Unmarshal(m, b)
}
func (m *CreateDeviceRecordByDevicePoolResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeviceRecordByDevicePoolResp.Marshal(b, m, deterministic)
}
func (m *CreateDeviceRecordByDevicePoolResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeviceRecordByDevicePoolResp.Merge(m, src)
}
func (m *CreateDeviceRecordByDevicePoolResp) XXX_Size() int {
	return xxx_messageInfo_CreateDeviceRecordByDevicePoolResp.Size(m)
}
func (m *CreateDeviceRecordByDevicePoolResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeviceRecordByDevicePoolResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeviceRecordByDevicePoolResp proto.InternalMessageInfo

func (m *CreateDeviceRecordByDevicePoolResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *CreateDeviceRecordByDevicePoolResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CreateDeviceRecordByDevicePoolResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *CreateDeviceRecordByDevicePoolResp) GetData() *DeviceRecord {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetDeviceReq struct {
	DeviceID             *string  `protobuf:"bytes,1,opt,name=deviceID" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceReq) Reset()         { *m = GetDeviceReq{} }
func (m *GetDeviceReq) String() string { return proto.CompactTextString(m) }
func (*GetDeviceReq) ProtoMessage()    {}
func (*GetDeviceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{105}
}

func (m *GetDeviceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceReq.Unmarshal(m, b)
}
func (m *GetDeviceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceReq.Marshal(b, m, deterministic)
}
func (m *GetDeviceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceReq.Merge(m, src)
}
func (m *GetDeviceReq) XXX_Size() int {
	return xxx_messageInfo_GetDeviceReq.Size(m)
}
func (m *GetDeviceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceReq proto.InternalMessageInfo

func (m *GetDeviceReq) GetDeviceID() string {
	if m != nil && m.DeviceID != nil {
		return *m.DeviceID
	}
	return ""
}

type GetDeviceResp struct {
	Code                 *uint32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool    `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *Device  `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceResp) Reset()         { *m = GetDeviceResp{} }
func (m *GetDeviceResp) String() string { return proto.CompactTextString(m) }
func (*GetDeviceResp) ProtoMessage()    {}
func (*GetDeviceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{106}
}

func (m *GetDeviceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceResp.Unmarshal(m, b)
}
func (m *GetDeviceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceResp.Marshal(b, m, deterministic)
}
func (m *GetDeviceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceResp.Merge(m, src)
}
func (m *GetDeviceResp) XXX_Size() int {
	return xxx_messageInfo_GetDeviceResp.Size(m)
}
func (m *GetDeviceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceResp proto.InternalMessageInfo

func (m *GetDeviceResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *GetDeviceResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *GetDeviceResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *GetDeviceResp) GetData() *Device {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListDevicesReq struct {
	Sort                 *string  `protobuf:"bytes,1,opt,name=sort" json:"sort,omitempty"`
	Desc                 *bool    `protobuf:"varint,2,opt,name=desc" json:"desc,omitempty"`
	Offset               *int64   `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	Limit                *int64   `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	Provider             []string `protobuf:"bytes,5,rep,name=provider" json:"provider,omitempty"`
	Pool                 []string `protobuf:"bytes,6,rep,name=pool" json:"pool,omitempty"`
	Status               []int64  `protobuf:"varint,7,rep,name=status" json:"status,omitempty"`
	AssetID              []string `protobuf:"bytes,8,rep,name=assetID" json:"assetID,omitempty"`
	Consumer             []string `protobuf:"bytes,9,rep,name=consumer" json:"consumer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDevicesReq) Reset()         { *m = ListDevicesReq{} }
func (m *ListDevicesReq) String() string { return proto.CompactTextString(m) }
func (*ListDevicesReq) ProtoMessage()    {}
func (*ListDevicesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{107}
}

func (m *ListDevicesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDevicesReq.Unmarshal(m, b)
}
func (m *ListDevicesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDevicesReq.Marshal(b, m, deterministic)
}
func (m *ListDevicesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDevicesReq.Merge(m, src)
}
func (m *ListDevicesReq) XXX_Size() int {
	return xxx_messageInfo_ListDevicesReq.Size(m)
}
func (m *ListDevicesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDevicesReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListDevicesReq proto.InternalMessageInfo

func (m *ListDevicesReq) GetSort() string {
	if m != nil && m.Sort != nil {
		return *m.Sort
	}
	return ""
}

func (m *ListDevicesReq) GetDesc() bool {
	if m != nil && m.Desc != nil {
		return *m.Desc
	}
	return false
}

func (m *ListDevicesReq) GetOffset() int64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *ListDevicesReq) GetLimit() int64 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *ListDevicesReq) GetProvider() []string {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *ListDevicesReq) GetPool() []string {
	if m != nil {
		return m.Pool
	}
	return nil
}

func (m *ListDevicesReq) GetStatus() []int64 {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListDevicesReq) GetAssetID() []string {
	if m != nil {
		return m.AssetID
	}
	return nil
}

func (m *ListDevicesReq) GetConsumer() []string {
	if m != nil {
		return m.Consumer
	}
	return nil
}

type ListDevicesResp struct {
	Code                 *uint32   `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string   `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool     `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 []*Device `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListDevicesResp) Reset()         { *m = ListDevicesResp{} }
func (m *ListDevicesResp) String() string { return proto.CompactTextString(m) }
func (*ListDevicesResp) ProtoMessage()    {}
func (*ListDevicesResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{108}
}

func (m *ListDevicesResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDevicesResp.Unmarshal(m, b)
}
func (m *ListDevicesResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDevicesResp.Marshal(b, m, deterministic)
}
func (m *ListDevicesResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDevicesResp.Merge(m, src)
}
func (m *ListDevicesResp) XXX_Size() int {
	return xxx_messageInfo_ListDevicesResp.Size(m)
}
func (m *ListDevicesResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDevicesResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListDevicesResp proto.InternalMessageInfo

func (m *ListDevicesResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ListDevicesResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ListDevicesResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ListDevicesResp) GetData() []*Device {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateDeviceReq struct {
	DeviceID             *string           `protobuf:"bytes,1,opt,name=deviceID" json:"deviceID,omitempty"`
	Provider             *string           `protobuf:"bytes,2,opt,name=provider" json:"provider,omitempty"`
	Pool                 *string           `protobuf:"bytes,3,opt,name=pool" json:"pool,omitempty"`
	Status               *int64            `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	SystemID             *string           `protobuf:"bytes,5,opt,name=systemID" json:"systemID,omitempty"`
	Labels               map[string]string `protobuf:"bytes,6,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Info                 *DeviceInfo       `protobuf:"bytes,7,opt,name=info" json:"info,omitempty"`
	Type                 *string           `protobuf:"bytes,8,opt,name=type" json:"type,omitempty"`
	Annotations          map[string]string `protobuf:"bytes,9,rep,name=annotations" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UpdateDeviceReq) Reset()         { *m = UpdateDeviceReq{} }
func (m *UpdateDeviceReq) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceReq) ProtoMessage()    {}
func (*UpdateDeviceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{109}
}

func (m *UpdateDeviceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceReq.Unmarshal(m, b)
}
func (m *UpdateDeviceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceReq.Marshal(b, m, deterministic)
}
func (m *UpdateDeviceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceReq.Merge(m, src)
}
func (m *UpdateDeviceReq) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceReq.Size(m)
}
func (m *UpdateDeviceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceReq proto.InternalMessageInfo

func (m *UpdateDeviceReq) GetDeviceID() string {
	if m != nil && m.DeviceID != nil {
		return *m.DeviceID
	}
	return ""
}

func (m *UpdateDeviceReq) GetProvider() string {
	if m != nil && m.Provider != nil {
		return *m.Provider
	}
	return ""
}

func (m *UpdateDeviceReq) GetPool() string {
	if m != nil && m.Pool != nil {
		return *m.Pool
	}
	return ""
}

func (m *UpdateDeviceReq) GetStatus() int64 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *UpdateDeviceReq) GetSystemID() string {
	if m != nil && m.SystemID != nil {
		return *m.SystemID
	}
	return ""
}

func (m *UpdateDeviceReq) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *UpdateDeviceReq) GetInfo() *DeviceInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *UpdateDeviceReq) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *UpdateDeviceReq) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

type UpdateDeviceResp struct {
	Code                 *uint32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool    `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *Device  `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateDeviceResp) Reset()         { *m = UpdateDeviceResp{} }
func (m *UpdateDeviceResp) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceResp) ProtoMessage()    {}
func (*UpdateDeviceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{110}
}

func (m *UpdateDeviceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceResp.Unmarshal(m, b)
}
func (m *UpdateDeviceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceResp.Marshal(b, m, deterministic)
}
func (m *UpdateDeviceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceResp.Merge(m, src)
}
func (m *UpdateDeviceResp) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceResp.Size(m)
}
func (m *UpdateDeviceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceResp proto.InternalMessageInfo

func (m *UpdateDeviceResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *UpdateDeviceResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *UpdateDeviceResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *UpdateDeviceResp) GetData() *Device {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteDevicesReq struct {
	DeviceIDs            []string `protobuf:"bytes,1,rep,name=deviceIDs" json:"deviceIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDevicesReq) Reset()         { *m = DeleteDevicesReq{} }
func (m *DeleteDevicesReq) String() string { return proto.CompactTextString(m) }
func (*DeleteDevicesReq) ProtoMessage()    {}
func (*DeleteDevicesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{111}
}

func (m *DeleteDevicesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDevicesReq.Unmarshal(m, b)
}
func (m *DeleteDevicesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDevicesReq.Marshal(b, m, deterministic)
}
func (m *DeleteDevicesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDevicesReq.Merge(m, src)
}
func (m *DeleteDevicesReq) XXX_Size() int {
	return xxx_messageInfo_DeleteDevicesReq.Size(m)
}
func (m *DeleteDevicesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDevicesReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDevicesReq proto.InternalMessageInfo

func (m *DeleteDevicesReq) GetDeviceIDs() []string {
	if m != nil {
		return m.DeviceIDs
	}
	return nil
}

type DeleteDevicesResp struct {
	Code                 *uint32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool    `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDevicesResp) Reset()         { *m = DeleteDevicesResp{} }
func (m *DeleteDevicesResp) String() string { return proto.CompactTextString(m) }
func (*DeleteDevicesResp) ProtoMessage()    {}
func (*DeleteDevicesResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{112}
}

func (m *DeleteDevicesResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDevicesResp.Unmarshal(m, b)
}
func (m *DeleteDevicesResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDevicesResp.Marshal(b, m, deterministic)
}
func (m *DeleteDevicesResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDevicesResp.Merge(m, src)
}
func (m *DeleteDevicesResp) XXX_Size() int {
	return xxx_messageInfo_DeleteDevicesResp.Size(m)
}
func (m *DeleteDevicesResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDevicesResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDevicesResp proto.InternalMessageInfo

func (m *DeleteDevicesResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *DeleteDevicesResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *DeleteDevicesResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type CreateDeviceInstanceReq struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	InstanceType         *string  `protobuf:"bytes,2,opt,name=instanceType" json:"instanceType,omitempty"`
	Region               *string  `protobuf:"bytes,3,opt,name=region" json:"region,omitempty"`
	Zone                 []string `protobuf:"bytes,4,rep,name=zone" json:"zone,omitempty"`
	Cpu                  *uint32  `protobuf:"varint,5,opt,name=cpu" json:"cpu,omitempty"`
	Memory               *uint32  `protobuf:"varint,6,opt,name=memory" json:"memory,omitempty"`
	Provider             *string  `protobuf:"bytes,7,opt,name=provider" json:"provider,omitempty"`
	Status               *uint32  `protobuf:"varint,8,opt,name=status" json:"status,omitempty"`
	Num                  *uint32  `protobuf:"varint,10,opt,name=num" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDeviceInstanceReq) Reset()         { *m = CreateDeviceInstanceReq{} }
func (m *CreateDeviceInstanceReq) String() string { return proto.CompactTextString(m) }
func (*CreateDeviceInstanceReq) ProtoMessage()    {}
func (*CreateDeviceInstanceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{113}
}

func (m *CreateDeviceInstanceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeviceInstanceReq.Unmarshal(m, b)
}
func (m *CreateDeviceInstanceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeviceInstanceReq.Marshal(b, m, deterministic)
}
func (m *CreateDeviceInstanceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeviceInstanceReq.Merge(m, src)
}
func (m *CreateDeviceInstanceReq) XXX_Size() int {
	return xxx_messageInfo_CreateDeviceInstanceReq.Size(m)
}
func (m *CreateDeviceInstanceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeviceInstanceReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeviceInstanceReq proto.InternalMessageInfo

func (m *CreateDeviceInstanceReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CreateDeviceInstanceReq) GetInstanceType() string {
	if m != nil && m.InstanceType != nil {
		return *m.InstanceType
	}
	return ""
}

func (m *CreateDeviceInstanceReq) GetRegion() string {
	if m != nil && m.Region != nil {
		return *m.Region
	}
	return ""
}

func (m *CreateDeviceInstanceReq) GetZone() []string {
	if m != nil {
		return m.Zone
	}
	return nil
}

func (m *CreateDeviceInstanceReq) GetCpu() uint32 {
	if m != nil && m.Cpu != nil {
		return *m.Cpu
	}
	return 0
}

func (m *CreateDeviceInstanceReq) GetMemory() uint32 {
	if m != nil && m.Memory != nil {
		return *m.Memory
	}
	return 0
}

func (m *CreateDeviceInstanceReq) GetProvider() string {
	if m != nil && m.Provider != nil {
		return *m.Provider
	}
	return ""
}

func (m *CreateDeviceInstanceReq) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *CreateDeviceInstanceReq) GetNum() uint32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

type CreateDeviceInstanceResp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *DeviceInstance `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreateDeviceInstanceResp) Reset()         { *m = CreateDeviceInstanceResp{} }
func (m *CreateDeviceInstanceResp) String() string { return proto.CompactTextString(m) }
func (*CreateDeviceInstanceResp) ProtoMessage()    {}
func (*CreateDeviceInstanceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{114}
}

func (m *CreateDeviceInstanceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeviceInstanceResp.Unmarshal(m, b)
}
func (m *CreateDeviceInstanceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeviceInstanceResp.Marshal(b, m, deterministic)
}
func (m *CreateDeviceInstanceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeviceInstanceResp.Merge(m, src)
}
func (m *CreateDeviceInstanceResp) XXX_Size() int {
	return xxx_messageInfo_CreateDeviceInstanceResp.Size(m)
}
func (m *CreateDeviceInstanceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeviceInstanceResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeviceInstanceResp proto.InternalMessageInfo

func (m *CreateDeviceInstanceResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *CreateDeviceInstanceResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CreateDeviceInstanceResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *CreateDeviceInstanceResp) GetData() *DeviceInstance {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateDeviceInstanceReq struct {
	DeviceInstanceID     *string  `protobuf:"bytes,1,opt,name=deviceInstanceID" json:"deviceInstanceID,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	InstanceType         *string  `protobuf:"bytes,3,opt,name=instanceType" json:"instanceType,omitempty"`
	Region               *string  `protobuf:"bytes,4,opt,name=region" json:"region,omitempty"`
	Zone                 []string `protobuf:"bytes,5,rep,name=zone" json:"zone,omitempty"`
	Cpu                  *uint32  `protobuf:"varint,6,opt,name=cpu" json:"cpu,omitempty"`
	Memory               *uint32  `protobuf:"varint,7,opt,name=memory" json:"memory,omitempty"`
	Provider             *string  `protobuf:"bytes,8,opt,name=provider" json:"provider,omitempty"`
	Status               *uint32  `protobuf:"varint,9,opt,name=status" json:"status,omitempty"`
	Num                  *uint32  `protobuf:"varint,10,opt,name=num" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateDeviceInstanceReq) Reset()         { *m = UpdateDeviceInstanceReq{} }
func (m *UpdateDeviceInstanceReq) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceInstanceReq) ProtoMessage()    {}
func (*UpdateDeviceInstanceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{115}
}

func (m *UpdateDeviceInstanceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceInstanceReq.Unmarshal(m, b)
}
func (m *UpdateDeviceInstanceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceInstanceReq.Marshal(b, m, deterministic)
}
func (m *UpdateDeviceInstanceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceInstanceReq.Merge(m, src)
}
func (m *UpdateDeviceInstanceReq) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceInstanceReq.Size(m)
}
func (m *UpdateDeviceInstanceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceInstanceReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceInstanceReq proto.InternalMessageInfo

func (m *UpdateDeviceInstanceReq) GetDeviceInstanceID() string {
	if m != nil && m.DeviceInstanceID != nil {
		return *m.DeviceInstanceID
	}
	return ""
}

func (m *UpdateDeviceInstanceReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *UpdateDeviceInstanceReq) GetInstanceType() string {
	if m != nil && m.InstanceType != nil {
		return *m.InstanceType
	}
	return ""
}

func (m *UpdateDeviceInstanceReq) GetRegion() string {
	if m != nil && m.Region != nil {
		return *m.Region
	}
	return ""
}

func (m *UpdateDeviceInstanceReq) GetZone() []string {
	if m != nil {
		return m.Zone
	}
	return nil
}

func (m *UpdateDeviceInstanceReq) GetCpu() uint32 {
	if m != nil && m.Cpu != nil {
		return *m.Cpu
	}
	return 0
}

func (m *UpdateDeviceInstanceReq) GetMemory() uint32 {
	if m != nil && m.Memory != nil {
		return *m.Memory
	}
	return 0
}

func (m *UpdateDeviceInstanceReq) GetProvider() string {
	if m != nil && m.Provider != nil {
		return *m.Provider
	}
	return ""
}

func (m *UpdateDeviceInstanceReq) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *UpdateDeviceInstanceReq) GetNum() uint32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

type UpdateDeviceInstanceResp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *DeviceInstance `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateDeviceInstanceResp) Reset()         { *m = UpdateDeviceInstanceResp{} }
func (m *UpdateDeviceInstanceResp) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceInstanceResp) ProtoMessage()    {}
func (*UpdateDeviceInstanceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{116}
}

func (m *UpdateDeviceInstanceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceInstanceResp.Unmarshal(m, b)
}
func (m *UpdateDeviceInstanceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceInstanceResp.Marshal(b, m, deterministic)
}
func (m *UpdateDeviceInstanceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceInstanceResp.Merge(m, src)
}
func (m *UpdateDeviceInstanceResp) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceInstanceResp.Size(m)
}
func (m *UpdateDeviceInstanceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceInstanceResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceInstanceResp proto.InternalMessageInfo

func (m *UpdateDeviceInstanceResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *UpdateDeviceInstanceResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *UpdateDeviceInstanceResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *UpdateDeviceInstanceResp) GetData() *DeviceInstance {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteDeviceInstanceReq struct {
	DeviceInstanceID     *string  `protobuf:"bytes,1,opt,name=deviceInstanceID" json:"deviceInstanceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDeviceInstanceReq) Reset()         { *m = DeleteDeviceInstanceReq{} }
func (m *DeleteDeviceInstanceReq) String() string { return proto.CompactTextString(m) }
func (*DeleteDeviceInstanceReq) ProtoMessage()    {}
func (*DeleteDeviceInstanceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{117}
}

func (m *DeleteDeviceInstanceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDeviceInstanceReq.Unmarshal(m, b)
}
func (m *DeleteDeviceInstanceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDeviceInstanceReq.Marshal(b, m, deterministic)
}
func (m *DeleteDeviceInstanceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDeviceInstanceReq.Merge(m, src)
}
func (m *DeleteDeviceInstanceReq) XXX_Size() int {
	return xxx_messageInfo_DeleteDeviceInstanceReq.Size(m)
}
func (m *DeleteDeviceInstanceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDeviceInstanceReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDeviceInstanceReq proto.InternalMessageInfo

func (m *DeleteDeviceInstanceReq) GetDeviceInstanceID() string {
	if m != nil && m.DeviceInstanceID != nil {
		return *m.DeviceInstanceID
	}
	return ""
}

type DeleteDeviceInstanceResp struct {
	Code                 *uint32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool    `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDeviceInstanceResp) Reset()         { *m = DeleteDeviceInstanceResp{} }
func (m *DeleteDeviceInstanceResp) String() string { return proto.CompactTextString(m) }
func (*DeleteDeviceInstanceResp) ProtoMessage()    {}
func (*DeleteDeviceInstanceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{118}
}

func (m *DeleteDeviceInstanceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDeviceInstanceResp.Unmarshal(m, b)
}
func (m *DeleteDeviceInstanceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDeviceInstanceResp.Marshal(b, m, deterministic)
}
func (m *DeleteDeviceInstanceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDeviceInstanceResp.Merge(m, src)
}
func (m *DeleteDeviceInstanceResp) XXX_Size() int {
	return xxx_messageInfo_DeleteDeviceInstanceResp.Size(m)
}
func (m *DeleteDeviceInstanceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDeviceInstanceResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDeviceInstanceResp proto.InternalMessageInfo

func (m *DeleteDeviceInstanceResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *DeleteDeviceInstanceResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *DeleteDeviceInstanceResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type ListDeviceInstancesReq struct {
	ProjectID            *string  `protobuf:"bytes,1,opt,name=projectID" json:"projectID,omitempty"`
	ClusterID            *string  `protobuf:"bytes,2,opt,name=clusterID" json:"clusterID,omitempty"`
	Region               *string  `protobuf:"bytes,3,opt,name=region" json:"region,omitempty"`
	Cpu                  *uint32  `protobuf:"varint,4,opt,name=cpu" json:"cpu,omitempty"`
	Memory               *uint32  `protobuf:"varint,5,opt,name=memory" json:"memory,omitempty"`
	Status               *uint32  `protobuf:"varint,6,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDeviceInstancesReq) Reset()         { *m = ListDeviceInstancesReq{} }
func (m *ListDeviceInstancesReq) String() string { return proto.CompactTextString(m) }
func (*ListDeviceInstancesReq) ProtoMessage()    {}
func (*ListDeviceInstancesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{119}
}

func (m *ListDeviceInstancesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceInstancesReq.Unmarshal(m, b)
}
func (m *ListDeviceInstancesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceInstancesReq.Marshal(b, m, deterministic)
}
func (m *ListDeviceInstancesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceInstancesReq.Merge(m, src)
}
func (m *ListDeviceInstancesReq) XXX_Size() int {
	return xxx_messageInfo_ListDeviceInstancesReq.Size(m)
}
func (m *ListDeviceInstancesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceInstancesReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceInstancesReq proto.InternalMessageInfo

func (m *ListDeviceInstancesReq) GetProjectID() string {
	if m != nil && m.ProjectID != nil {
		return *m.ProjectID
	}
	return ""
}

func (m *ListDeviceInstancesReq) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *ListDeviceInstancesReq) GetRegion() string {
	if m != nil && m.Region != nil {
		return *m.Region
	}
	return ""
}

func (m *ListDeviceInstancesReq) GetCpu() uint32 {
	if m != nil && m.Cpu != nil {
		return *m.Cpu
	}
	return 0
}

func (m *ListDeviceInstancesReq) GetMemory() uint32 {
	if m != nil && m.Memory != nil {
		return *m.Memory
	}
	return 0
}

func (m *ListDeviceInstancesReq) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

type ListDeviceInstancesResp struct {
	Code                 *uint32           `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string           `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool             `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 []*DeviceInstance `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListDeviceInstancesResp) Reset()         { *m = ListDeviceInstancesResp{} }
func (m *ListDeviceInstancesResp) String() string { return proto.CompactTextString(m) }
func (*ListDeviceInstancesResp) ProtoMessage()    {}
func (*ListDeviceInstancesResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{120}
}

func (m *ListDeviceInstancesResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceInstancesResp.Unmarshal(m, b)
}
func (m *ListDeviceInstancesResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceInstancesResp.Marshal(b, m, deterministic)
}
func (m *ListDeviceInstancesResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceInstancesResp.Merge(m, src)
}
func (m *ListDeviceInstancesResp) XXX_Size() int {
	return xxx_messageInfo_ListDeviceInstancesResp.Size(m)
}
func (m *ListDeviceInstancesResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceInstancesResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceInstancesResp proto.InternalMessageInfo

func (m *ListDeviceInstancesResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ListDeviceInstancesResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ListDeviceInstancesResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ListDeviceInstancesResp) GetData() []*DeviceInstance {
	if m != nil {
		return m.Data
	}
	return nil
}

type EnableDeviceConsumerReq struct {
	ProjectID            *string  `protobuf:"bytes,1,opt,name=projectID" json:"projectID,omitempty"`
	ClusterID            *string  `protobuf:"bytes,2,opt,name=clusterID" json:"clusterID,omitempty"`
	Region               *string  `protobuf:"bytes,3,opt,name=region" json:"region,omitempty"`
	Vpc                  *string  `protobuf:"bytes,4,opt,name=vpc" json:"vpc,omitempty"`
	DeviceInstanceID     *string  `protobuf:"bytes,5,opt,name=deviceInstanceID" json:"deviceInstanceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnableDeviceConsumerReq) Reset()         { *m = EnableDeviceConsumerReq{} }
func (m *EnableDeviceConsumerReq) String() string { return proto.CompactTextString(m) }
func (*EnableDeviceConsumerReq) ProtoMessage()    {}
func (*EnableDeviceConsumerReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{121}
}

func (m *EnableDeviceConsumerReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnableDeviceConsumerReq.Unmarshal(m, b)
}
func (m *EnableDeviceConsumerReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnableDeviceConsumerReq.Marshal(b, m, deterministic)
}
func (m *EnableDeviceConsumerReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnableDeviceConsumerReq.Merge(m, src)
}
func (m *EnableDeviceConsumerReq) XXX_Size() int {
	return xxx_messageInfo_EnableDeviceConsumerReq.Size(m)
}
func (m *EnableDeviceConsumerReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EnableDeviceConsumerReq.DiscardUnknown(m)
}

var xxx_messageInfo_EnableDeviceConsumerReq proto.InternalMessageInfo

func (m *EnableDeviceConsumerReq) GetProjectID() string {
	if m != nil && m.ProjectID != nil {
		return *m.ProjectID
	}
	return ""
}

func (m *EnableDeviceConsumerReq) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *EnableDeviceConsumerReq) GetRegion() string {
	if m != nil && m.Region != nil {
		return *m.Region
	}
	return ""
}

func (m *EnableDeviceConsumerReq) GetVpc() string {
	if m != nil && m.Vpc != nil {
		return *m.Vpc
	}
	return ""
}

func (m *EnableDeviceConsumerReq) GetDeviceInstanceID() string {
	if m != nil && m.DeviceInstanceID != nil {
		return *m.DeviceInstanceID
	}
	return ""
}

type EnableDeviceConsumerResp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *DeviceConsumer `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *EnableDeviceConsumerResp) Reset()         { *m = EnableDeviceConsumerResp{} }
func (m *EnableDeviceConsumerResp) String() string { return proto.CompactTextString(m) }
func (*EnableDeviceConsumerResp) ProtoMessage()    {}
func (*EnableDeviceConsumerResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{122}
}

func (m *EnableDeviceConsumerResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnableDeviceConsumerResp.Unmarshal(m, b)
}
func (m *EnableDeviceConsumerResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnableDeviceConsumerResp.Marshal(b, m, deterministic)
}
func (m *EnableDeviceConsumerResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnableDeviceConsumerResp.Merge(m, src)
}
func (m *EnableDeviceConsumerResp) XXX_Size() int {
	return xxx_messageInfo_EnableDeviceConsumerResp.Size(m)
}
func (m *EnableDeviceConsumerResp) XXX_DiscardUnknown() {
	xxx_messageInfo_EnableDeviceConsumerResp.DiscardUnknown(m)
}

var xxx_messageInfo_EnableDeviceConsumerResp proto.InternalMessageInfo

func (m *EnableDeviceConsumerResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *EnableDeviceConsumerResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *EnableDeviceConsumerResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *EnableDeviceConsumerResp) GetData() *DeviceConsumer {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeviceInstance struct {
	Id                   *string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	InstanceType         *string  `protobuf:"bytes,3,opt,name=instanceType" json:"instanceType,omitempty"`
	Region               *string  `protobuf:"bytes,4,opt,name=region" json:"region,omitempty"`
	Zone                 []string `protobuf:"bytes,5,rep,name=zone" json:"zone,omitempty"`
	Cpu                  *uint32  `protobuf:"varint,6,opt,name=cpu" json:"cpu,omitempty"`
	Memory               *uint32  `protobuf:"varint,7,opt,name=memory" json:"memory,omitempty"`
	Provider             *string  `protobuf:"bytes,8,opt,name=provider" json:"provider,omitempty"`
	Status               *string  `protobuf:"bytes,9,opt,name=status" json:"status,omitempty"`
	Num                  *uint32  `protobuf:"varint,10,opt,name=num" json:"num,omitempty"`
	CreateTime           *int64   `protobuf:"varint,11,opt,name=createTime" json:"createTime,omitempty"`
	UpdateTime           *int64   `protobuf:"varint,12,opt,name=updateTime" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceInstance) Reset()         { *m = DeviceInstance{} }
func (m *DeviceInstance) String() string { return proto.CompactTextString(m) }
func (*DeviceInstance) ProtoMessage()    {}
func (*DeviceInstance) Descriptor() ([]byte, []int) {
	return fileDescriptor_e026e78035051498, []int{123}
}

func (m *DeviceInstance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceInstance.Unmarshal(m, b)
}
func (m *DeviceInstance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceInstance.Marshal(b, m, deterministic)
}
func (m *DeviceInstance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceInstance.Merge(m, src)
}
func (m *DeviceInstance) XXX_Size() int {
	return xxx_messageInfo_DeviceInstance.Size(m)
}
func (m *DeviceInstance) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceInstance.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceInstance proto.InternalMessageInfo

func (m *DeviceInstance) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *DeviceInstance) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *DeviceInstance) GetInstanceType() string {
	if m != nil && m.InstanceType != nil {
		return *m.InstanceType
	}
	return ""
}

func (m *DeviceInstance) GetRegion() string {
	if m != nil && m.Region != nil {
		return *m.Region
	}
	return ""
}

func (m *DeviceInstance) GetZone() []string {
	if m != nil {
		return m.Zone
	}
	return nil
}

func (m *DeviceInstance) GetCpu() uint32 {
	if m != nil && m.Cpu != nil {
		return *m.Cpu
	}
	return 0
}

func (m *DeviceInstance) GetMemory() uint32 {
	if m != nil && m.Memory != nil {
		return *m.Memory
	}
	return 0
}

func (m *DeviceInstance) GetProvider() string {
	if m != nil && m.Provider != nil {
		return *m.Provider
	}
	return ""
}

func (m *DeviceInstance) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

func (m *DeviceInstance) GetNum() uint32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *DeviceInstance) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *DeviceInstance) GetUpdateTime() int64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func init() {
	proto.RegisterType((*AvailableReq)(nil), "resourcemanager.AvailableReq")
	proto.RegisterType((*AvailableResp)(nil), "resourcemanager.AvailableResp")
	proto.RegisterType((*CreateObsCostReq)(nil), "resourcemanager.CreateObsCostReq")
	proto.RegisterType((*CreateObsCostResp)(nil), "resourcemanager.CreateObsCostResp")
	proto.RegisterType((*ObsCost)(nil), "resourcemanager.ObsCost")
	proto.RegisterType((*QueryObsBillReq)(nil), "resourcemanager.QueryObsBillReq")
	proto.RegisterType((*QueryObsBillResp)(nil), "resourcemanager.QueryObsBillResp")
	proto.RegisterType((*ObsBill)(nil), "resourcemanager.ObsBill")
	proto.RegisterType((*CreateDeviceConsumerReq)(nil), "resourcemanager.CreateDeviceConsumerReq")
	proto.RegisterMapType((map[string]string)(nil), "resourcemanager.CreateDeviceConsumerReq.LabelsEntry")
	proto.RegisterType((*CreateDeviceConsumerResp)(nil), "resourcemanager.CreateDeviceConsumerResp")
	proto.RegisterType((*GetDeviceConsumerReq)(nil), "resourcemanager.GetDeviceConsumerReq")
	proto.RegisterType((*GetDeviceConsumerResp)(nil), "resourcemanager.GetDeviceConsumerResp")
	proto.RegisterType((*ListDeviceConsumerReq)(nil), "resourcemanager.ListDeviceConsumerReq")
	proto.RegisterType((*ListDeviceConsumerResp)(nil), "resourcemanager.ListDeviceConsumerResp")
	proto.RegisterType((*UpdateDeviceConsumerReq)(nil), "resourcemanager.UpdateDeviceConsumerReq")
	proto.RegisterType((*ListString)(nil), "resourcemanager.ListString")
	proto.RegisterType((*Labels)(nil), "resourcemanager.Labels")
	proto.RegisterMapType((map[string]string)(nil), "resourcemanager.Labels.DataEntry")
	proto.RegisterType((*Annotations)(nil), "resourcemanager.Annotations")
	proto.RegisterMapType((map[string]string)(nil), "resourcemanager.Annotations.DataEntry")
	proto.RegisterType((*ListQuota)(nil), "resourcemanager.ListQuota")
	proto.RegisterType((*UpdateDeviceConsumerResp)(nil), "resourcemanager.UpdateDeviceConsumerResp")
	proto.RegisterType((*DeleteDeviceConsumerReq)(nil), "resourcemanager.DeleteDeviceConsumerReq")
	proto.RegisterType((*DeleteDeviceConsumerResp)(nil), "resourcemanager.DeleteDeviceConsumerResp")
	proto.RegisterType((*ConsumeDeviceReq)(nil), "resourcemanager.ConsumeDeviceReq")
	proto.RegisterType((*ConsumeDeviceResp)(nil), "resourcemanager.ConsumeDeviceResp")
	proto.RegisterType((*ReturnDeviceReq)(nil), "resourcemanager.ReturnDeviceReq")
	proto.RegisterType((*ReturnDeviceResp)(nil), "resourcemanager.ReturnDeviceResp")
	proto.RegisterType((*RecordData)(nil), "resourcemanager.RecordData")
	proto.RegisterType((*ConsumeDesire)(nil), "resourcemanager.ConsumeDesire")
	proto.RegisterMapType((map[string]string)(nil), "resourcemanager.ConsumeDesire.LabelsEntry")
	proto.RegisterType((*DeviceDisk)(nil), "resourcemanager.DeviceDisk")
	proto.RegisterType((*ConsumerQuota)(nil), "resourcemanager.ConsumerQuota")
	proto.RegisterType((*DeviceConsumer)(nil), "resourcemanager.DeviceConsumer")
	proto.RegisterMapType((map[string]string)(nil), "resourcemanager.DeviceConsumer.LabelsEntry")
	proto.RegisterType((*CreateDevicePoolReq)(nil), "resourcemanager.CreateDevicePoolReq")
	proto.RegisterMapType((map[string]string)(nil), "resourcemanager.CreateDevicePoolReq.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "resourcemanager.CreateDevicePoolReq.LabelsEntry")
	proto.RegisterType((*CreateDevicePoolResp)(nil), "resourcemanager.CreateDevicePoolResp")
	proto.RegisterType((*GetDevicePoolReq)(nil), "resourcemanager.GetDevicePoolReq")
	proto.RegisterType((*GetDevicePoolResp)(nil), "resourcemanager.GetDevicePoolResp")
	proto.RegisterType((*GetDevicePoolEventReq)(nil), "resourcemanager.GetDevicePoolEventReq")
	proto.RegisterType((*GetDevicePoolEventResp)(nil), "resourcemanager.GetDevicePoolEventResp")
	proto.RegisterType((*DevicePoolEvent)(nil), "resourcemanager.DevicePoolEvent")
	proto.RegisterType((*ListDevicePoolReq)(nil), "resourcemanager.ListDevicePoolReq")
	proto.RegisterType((*ListDevicePoolResp)(nil), "resourcemanager.ListDevicePoolResp")
	proto.RegisterType((*UpdateDevicePoolReq)(nil), "resourcemanager.UpdateDevicePoolReq")
	proto.RegisterType((*UpdateDevicePoolResp)(nil), "resourcemanager.UpdateDevicePoolResp")
	proto.RegisterType((*DeleteDevicePoolReq)(nil), "resourcemanager.DeleteDevicePoolReq")
	proto.RegisterType((*DeleteDevicePoolResp)(nil), "resourcemanager.DeleteDevicePoolResp")
	proto.RegisterType((*ImportDeviceToDevicePoolReq)(nil), "resourcemanager.ImportDeviceToDevicePoolReq")
	proto.RegisterType((*ImportDevicesToDevicePoolByBkAssetIDsReq)(nil), "resourcemanager.ImportDevicesToDevicePoolByBkAssetIDsReq")
	proto.RegisterType((*ImportDevicesToDevicePoolByBkAssetIDsResp)(nil), "resourcemanager.ImportDevicesToDevicePoolByBkAssetIDsResp")
	proto.RegisterType((*ImportDevicesData)(nil), "resourcemanager.ImportDevicesData")
	proto.RegisterType((*ImportDeviceToDevicePoolByBkAssetIDReq)(nil), "resourcemanager.ImportDeviceToDevicePoolByBkAssetIDReq")
	proto.RegisterType((*ImportDeviceToDevicePoolResp)(nil), "resourcemanager.ImportDeviceToDevicePoolResp")
	proto.RegisterType((*CreateProviderReq)(nil), "resourcemanager.CreateProviderReq")
	proto.RegisterMapType((map[string]string)(nil), "resourcemanager.CreateProviderReq.LabelsEntry")
	proto.RegisterType((*CreateProviderResp)(nil), "resourcemanager.CreateProviderResp")
	proto.RegisterType((*GetProviderReq)(nil), "resourcemanager.GetProviderReq")
	proto.RegisterType((*GetProviderResp)(nil), "resourcemanager.GetProviderResp")
	proto.RegisterType((*ListProviderReq)(nil), "resourcemanager.ListProviderReq")
	proto.RegisterType((*ListProviderResp)(nil), "resourcemanager.ListProviderResp")
	proto.RegisterType((*UpdateProviderReq)(nil), "resourcemanager.UpdateProviderReq")
	proto.RegisterType((*UpdateProviderResp)(nil), "resourcemanager.UpdateProviderResp")
	proto.RegisterType((*DeleteProviderReq)(nil), "resourcemanager.DeleteProviderReq")
	proto.RegisterType((*DeleteProviderResp)(nil), "resourcemanager.DeleteProviderResp")
	proto.RegisterType((*QueryProviderOrderReq)(nil), "resourcemanager.QueryProviderOrderReq")
	proto.RegisterType((*QueryProviderOrderResp)(nil), "resourcemanager.QueryProviderOrderResp")
	proto.RegisterType((*ProviderOrder)(nil), "resourcemanager.ProviderOrder")
	proto.RegisterType((*QueryProviderNetworkReq)(nil), "resourcemanager.QueryProviderNetworkReq")
	proto.RegisterType((*QueryProviderNetworkResp)(nil), "resourcemanager.QueryProviderNetworkResp")
	proto.RegisterType((*ProviderNetwork)(nil), "resourcemanager.ProviderNetwork")
	proto.RegisterType((*ProviderSubnet)(nil), "resourcemanager.ProviderSubnet")
	proto.RegisterType((*GetDeviceRecordReq)(nil), "resourcemanager.GetDeviceRecordReq")
	proto.RegisterType((*GetDeviceRecordResp)(nil), "resourcemanager.GetDeviceRecordResp")
	proto.RegisterType((*CreateDeviceRecordReq)(nil), "resourcemanager.CreateDeviceRecordReq")
	proto.RegisterType((*CreateDeviceRecordResp)(nil), "resourcemanager.CreateDeviceRecordResp")
	proto.RegisterType((*ListDeviceRecordReq)(nil), "resourcemanager.ListDeviceRecordReq")
	proto.RegisterType((*ListDeviceRecordResp)(nil), "resourcemanager.ListDeviceRecordResp")
	proto.RegisterType((*ListDeviceBillReq)(nil), "resourcemanager.ListDeviceBillReq")
	proto.RegisterType((*ListDeviceBillResp)(nil), "resourcemanager.ListDeviceBillResp")
	proto.RegisterType((*DevicePool)(nil), "resourcemanager.DevicePool")
	proto.RegisterMapType((map[string]string)(nil), "resourcemanager.DevicePool.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "resourcemanager.DevicePool.LabelsEntry")
	proto.RegisterType((*DevicePoolAutoScalerOption)(nil), "resourcemanager.DevicePoolAutoScalerOption")
	proto.RegisterMapType((map[string]float64)(nil), "resourcemanager.DevicePoolAutoScalerOption.SettingsEntry")
	proto.RegisterType((*Device)(nil), "resourcemanager.Device")
	proto.RegisterMapType((map[string]string)(nil), "resourcemanager.Device.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "resourcemanager.Device.LabelsEntry")
	proto.RegisterType((*DeviceEvent)(nil), "resourcemanager.DeviceEvent")
	proto.RegisterType((*DeviceInfo)(nil), "resourcemanager.DeviceInfo")
	proto.RegisterType((*DeviceSecurity)(nil), "resourcemanager.DeviceSecurity")
	proto.RegisterType((*DeviceImage)(nil), "resourcemanager.DeviceImage")
	proto.RegisterType((*DeviceZone)(nil), "resourcemanager.DeviceZone")
	proto.RegisterType((*DeviceRecord)(nil), "resourcemanager.DeviceRecord")
	proto.RegisterMapType((map[string]string)(nil), "resourcemanager.DeviceRecord.ConsumerLabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "resourcemanager.DeviceRecord.ExtraLabelsEntry")
	proto.RegisterType((*DeviceBill)(nil), "resourcemanager.DeviceBill")
	proto.RegisterMapType((map[string]string)(nil), "resourcemanager.DeviceBill.ConsumerLabelsEntry")
	proto.RegisterType((*Provider)(nil), "resourcemanager.Provider")
	proto.RegisterMapType((map[string]string)(nil), "resourcemanager.Provider.LabelsEntry")
	proto.RegisterType((*CreateResourcePoolReq)(nil), "resourcemanager.CreateResourcePoolReq")
	proto.RegisterMapType((map[string]string)(nil), "resourcemanager.CreateResourcePoolReq.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "resourcemanager.CreateResourcePoolReq.LabelsEntry")
	proto.RegisterType((*CreateResourcePoolResp)(nil), "resourcemanager.CreateResourcePoolResp")
	proto.RegisterType((*ListResourcePoolReq)(nil), "resourcemanager.ListResourcePoolReq")
	proto.RegisterType((*ListResourcePoolResp)(nil), "resourcemanager.ListResourcePoolResp")
	proto.RegisterType((*ResourcePool)(nil), "resourcemanager.ResourcePool")
	proto.RegisterMapType((map[string]string)(nil), "resourcemanager.ResourcePool.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "resourcemanager.ResourcePool.LabelsEntry")
	proto.RegisterType((*ImportResourceReq)(nil), "resourcemanager.ImportResourceReq")
	proto.RegisterType((*ImportResourceResp)(nil), "resourcemanager.ImportResourceResp")
	proto.RegisterType((*Resource)(nil), "resourcemanager.Resource")
	proto.RegisterMapType((map[string]string)(nil), "resourcemanager.Resource.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "resourcemanager.Resource.LabelsEntry")
	proto.RegisterType((*ResourceStatus)(nil), "resourcemanager.ResourceStatus")
	proto.RegisterType((*ListResourceReq)(nil), "resourcemanager.ListResourceReq")
	proto.RegisterType((*ListDeviceRecordByPoolReq)(nil), "resourcemanager.ListDeviceRecordByPoolReq")
	proto.RegisterType((*ListDeviceRecordByDevicePoolReq)(nil), "resourcemanager.ListDeviceRecordByDevicePoolReq")
	proto.RegisterType((*ListResourceResp)(nil), "resourcemanager.ListResourceResp")
	proto.RegisterType((*CreateDeviceRecordByPoolReq)(nil), "resourcemanager.CreateDeviceRecordByPoolReq")
	proto.RegisterType((*UpdateDeviceRecordReq)(nil), "resourcemanager.UpdateDeviceRecordReq")
	proto.RegisterType((*UpdateDeviceRecordResp)(nil), "resourcemanager.UpdateDeviceRecordResp")
	proto.RegisterType((*CreateDeviceRecordByDevicePoolReq)(nil), "resourcemanager.CreateDeviceRecordByDevicePoolReq")
	proto.RegisterType((*CreateDeviceRecordByPoolResp)(nil), "resourcemanager.CreateDeviceRecordByPoolResp")
	proto.RegisterType((*CreateDeviceRecordByDevicePoolResp)(nil), "resourcemanager.CreateDeviceRecordByDevicePoolResp")
	proto.RegisterType((*GetDeviceReq)(nil), "resourcemanager.GetDeviceReq")
	proto.RegisterType((*GetDeviceResp)(nil), "resourcemanager.GetDeviceResp")
	proto.RegisterType((*ListDevicesReq)(nil), "resourcemanager.ListDevicesReq")
	proto.RegisterType((*ListDevicesResp)(nil), "resourcemanager.ListDevicesResp")
	proto.RegisterType((*UpdateDeviceReq)(nil), "resourcemanager.UpdateDeviceReq")
	proto.RegisterMapType((map[string]string)(nil), "resourcemanager.UpdateDeviceReq.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "resourcemanager.UpdateDeviceReq.LabelsEntry")
	proto.RegisterType((*UpdateDeviceResp)(nil), "resourcemanager.UpdateDeviceResp")
	proto.RegisterType((*DeleteDevicesReq)(nil), "resourcemanager.DeleteDevicesReq")
	proto.RegisterType((*DeleteDevicesResp)(nil), "resourcemanager.DeleteDevicesResp")
	proto.RegisterType((*CreateDeviceInstanceReq)(nil), "resourcemanager.CreateDeviceInstanceReq")
	proto.RegisterType((*CreateDeviceInstanceResp)(nil), "resourcemanager.CreateDeviceInstanceResp")
	proto.RegisterType((*UpdateDeviceInstanceReq)(nil), "resourcemanager.UpdateDeviceInstanceReq")
	proto.RegisterType((*UpdateDeviceInstanceResp)(nil), "resourcemanager.UpdateDeviceInstanceResp")
	proto.RegisterType((*DeleteDeviceInstanceReq)(nil), "resourcemanager.DeleteDeviceInstanceReq")
	proto.RegisterType((*DeleteDeviceInstanceResp)(nil), "resourcemanager.DeleteDeviceInstanceResp")
	proto.RegisterType((*ListDeviceInstancesReq)(nil), "resourcemanager.ListDeviceInstancesReq")
	proto.RegisterType((*ListDeviceInstancesResp)(nil), "resourcemanager.ListDeviceInstancesResp")
	proto.RegisterType((*EnableDeviceConsumerReq)(nil), "resourcemanager.EnableDeviceConsumerReq")
	proto.RegisterType((*EnableDeviceConsumerResp)(nil), "resourcemanager.EnableDeviceConsumerResp")
	proto.RegisterType((*DeviceInstance)(nil), "resourcemanager.DeviceInstance")
}

func init() { proto.RegisterFile("bcs-resource-manager.proto", fileDescriptor_e026e78035051498) }

var fileDescriptor_e026e78035051498 = []byte{
	// 12453 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x7d, 0x6b, 0x70, 0x14, 0x47,
	0x9a, 0x60, 0x54, 0xeb, 0xd9, 0x89, 0x5e, 0x24, 0x60, 0xc9, 0x8d, 0x0d, 0x4d, 0x01, 0x46, 0x14,
	0x42, 0x82, 0x02, 0x1b, 0x5b, 0x1e, 0x3f, 0x4a, 0x88, 0xf5, 0xc8, 0x63, 0x1b, 0x5c, 0x60, 0xef,
	0xcc, 0x78, 0xd6, 0xb3, 0x2d, 0xa9, 0xc0, 0x3d, 0x96, 0xd4, 0xed, 0xae, 0x16, 0x5e, 0x66, 0xd6,
	0xb1, 0x80, 0x79, 0x3f, 0x2c, 0x5c, 0x03, 0x06, 0x83, 0xcc, 0xc3, 0xc3, 0x6b, 0xc6, 0x63, 0x09,
	0xc6, 0x8c, 0xc1, 0x12, 0x98, 0xbd, 0xd7, 0xee, 0xcc, 0xdd, 0xde, 0xdd, 0x1e, 0x1b, 0x7b, 0x11,
	0x77, 0x71, 0x17, 0xb7, 0x1b, 0xab, 0xea, 0x96, 0x2e, 0x36, 0x6e, 0xf7, 0x6e, 0x26, 0xe2, 0xe2,
	0x26, 0x2e, 0x2e, 0x2e, 0x2a, 0x1f, 0x55, 0x99, 0xf5, 0xe8, 0x6e, 0x3d, 0xb0, 0x85, 0xbd, 0x7f,
	0xa4, 0xae, 0xcc, 0x2f, 0xb3, 0xf2, 0xfb, 0xf2, 0xfb, 0xbe, 0xfc, 0x32, 0xf3, 0xfb, 0xbe, 0x02,
	0x91, 0xf6, 0x0e, 0x7d, 0x79, 0x4a, 0xd3, 0x13, 0xbd, 0xa9, 0x0e, 0x6d, 0x79, 0x77, 0xac, 0x27,
	0xb6, 0x45, 0x4b, 0x35, 0x26, 0x53, 0x89, 0x74, 0x02, 0x56, 0xd3, 0x72, 0x52, 0x1c, 0x79, 0x60,
	0x4b, 0x22, 0xb1, 0xa5, 0x4b, 0x6b, 0x8a, 0x25, 0xe3, 0x4d, 0xb1, 0x9e, 0x9e, 0x44, 0x3a, 0x96,
	0x8e, 0x27, 0x7a, 0x74, 0x0c, 0x1e, 0x69, 0x40, 0xff, 0x3a, 0x96, 0x6f, 0xd1, 0x7a, 0x96, 0xeb,
	0x6f, 0xc6, 0xb6, 0x6c, 0xd1, 0x52, 0x4d, 0x89, 0x24, 0x82, 0xf0, 0x81, 0xae, 0xdd, 0x1a, 0xeb,
	0x8a, 0x77, 0xc6, 0xd2, 0x5a, 0x13, 0xfd, 0x81, 0x2b, 0xc4, 0x8d, 0xa0, 0x42, 0xd9, 0x1a, 0x8b,
	0x77, 0xc5, 0xda, 0xbb, 0x34, 0x55, 0x7b, 0xa3, 0x79, 0xad, 0xa1, 0x3c, 0x0d, 0x9e, 0x94, 0xb8,
	0x42, 0xb9, 0x31, 0x73, 0xe6, 0xc2, 0xe8, 0xe0, 0x87, 0xee, 0x81, 0x67, 0xfa, 0x0f, 0x9b, 0x07,
	0xce, 0x65, 0x4e, 0x0c, 0x9a, 0x47, 0x2e, 0x9a, 0x7d, 0x83, 0xd9, 0xa3, 0x97, 0xcd, 0xbe, 0x9d,
	0x99, 0x63, 0x57, 0xc4, 0xdf, 0x0a, 0xa0, 0x92, 0xe9, 0x40, 0x4f, 0xc2, 0x46, 0x50, 0xdc, 0x91,
	0xe8, 0xd4, 0xea, 0x84, 0xa8, 0x50, 0x5f, 0xd9, 0x12, 0x31, 0x94, 0x5a, 0x09, 0x15, 0xc8, 0xd5,
	0xa3, 0xb7, 0x8f, 0x9a, 0xa7, 0x4e, 0x8f, 0x1d, 0x7d, 0x7f, 0x74, 0x70, 0x30, 0x7b, 0x76, 0x87,
	0x8a, 0x8a, 0x61, 0x33, 0x28, 0xeb, 0xd6, 0x74, 0x3d, 0xb6, 0x45, 0xab, 0x0b, 0x45, 0x85, 0xfa,
	0x70, 0x4b, 0xd4, 0x50, 0x1e, 0x94, 0x68, 0x99, 0x0c, 0xd9, 0x56, 0x23, 0xb7, 0xcf, 0x65, 0x76,
	0x0c, 0xaa, 0xb4, 0x12, 0xae, 0x04, 0xa5, 0x29, 0x4d, 0xef, 0xed, 0x4a, 0xd7, 0x15, 0x45, 0x85,
	0xfa, 0xf2, 0x96, 0xfb, 0x0d, 0xe5, 0x3e, 0x89, 0x14, 0xc9, 0x15, 0xb8, 0x65, 0x76, 0xf8, 0xc7,
	0x99, 0xd3, 0xfd, 0x2a, 0x29, 0x6d, 0x6e, 0x35, 0x14, 0x05, 0x3c, 0x25, 0xf1, 0x83, 0x2e, 0x1c,
	0x6d, 0xdc, 0xa7, 0xf8, 0xff, 0x42, 0xa0, 0x66, 0x6d, 0x4a, 0x8b, 0xa5, 0xb5, 0xf5, 0xed, 0xfa,
	0xda, 0x84, 0x9e, 0x56, 0xb5, 0x37, 0xe0, 0x1a, 0x50, 0xae, 0x27, 0xb5, 0x8e, 0x17, 0x62, 0xdd,
	0x18, 0xfb, 0x70, 0xcb, 0x5c, 0x43, 0xa9, 0x93, 0xec, 0x42, 0xb9, 0x62, 0xf4, 0x97, 0xbb, 0x32,
	0x43, 0x47, 0x46, 0x2f, 0xed, 0xca, 0x9c, 0xbd, 0xa9, 0xda, 0xe5, 0x56, 0xc3, 0xf4, 0xb6, 0xa4,
	0x86, 0x1a, 0x86, 0x98, 0x86, 0xb4, 0x90, 0x36, 0xcc, 0x5e, 0x1d, 0x36, 0x4f, 0x1f, 0x54, 0xed,
	0x72, 0xb8, 0x1c, 0x14, 0x5b, 0xbf, 0x11, 0xf6, 0x61, 0x8c, 0x3d, 0x2a, 0x90, 0xab, 0x12, 0xed,
	0x7a, 0xb4, 0x23, 0xa1, 0xa7, 0x49, 0x13, 0x54, 0x0a, 0x97, 0x81, 0xe2, 0xde, 0x9e, 0x78, 0xba,
	0xae, 0x18, 0x81, 0xd7, 0x1a, 0xca, 0x6c, 0x09, 0x15, 0xd0, 0xfe, 0xcd, 0xc3, 0xc7, 0x46, 0x6e,
	0x1d, 0x56, 0x51, 0x19, 0x6c, 0x06, 0x61, 0xeb, 0xff, 0x86, 0x54, 0xbc, 0x43, 0xab, 0x2b, 0x89,
	0x0a, 0xf5, 0x42, 0xcb, 0x03, 0x86, 0x72, 0xbf, 0xe4, 0x94, 0xca, 0x15, 0xb8, 0xc1, 0xc8, 0xf0,
	0x75, 0x0b, 0x1f, 0xa7, 0x02, 0xcf, 0xcb, 0x96, 0x78, 0xa2, 0xa7, 0xae, 0xd4, 0x19, 0x19, 0x29,
	0x92, 0x2b, 0xcc, 0x43, 0x43, 0xe6, 0x99, 0x33, 0x64, 0x2e, 0x49, 0x69, 0xf3, 0x72, 0x43, 0x91,
	0x40, 0xbd, 0xe4, 0xa1, 0xaa, 0x3c, 0xdb, 0xdc, 0x77, 0xca, 0x1c, 0x1e, 0xa2, 0x08, 0x11, 0xbe,
	0x1b, 0x08, 0x81, 0x99, 0x2e, 0xd0, 0x69, 0xcf, 0x7b, 0xf0, 0x59, 0x50, 0xdc, 0x19, 0x4b, 0xc7,
	0x10, 0xfd, 0x67, 0xc8, 0x75, 0x8d, 0x2e, 0x35, 0xd0, 0x48, 0x50, 0xc1, 0x74, 0x46, 0xa0, 0xf2,
	0x4c, 0x8c, 0x7d, 0xf6, 0xe4, 0x2e, 0x4a, 0x00, 0x15, 0x55, 0x34, 0x37, 0x1a, 0xca, 0x32, 0xb0,
	0x54, 0xf2, 0x12, 0x21, 0x80, 0x60, 0x7f, 0x16, 0x02, 0x65, 0x04, 0xea, 0x9f, 0x18, 0x75, 0x12,
	0x8c, 0x2a, 0xf6, 0x85, 0x40, 0xf5, 0x8b, 0xbd, 0x5a, 0x6a, 0xdb, 0xfa, 0x76, 0xbd, 0x25, 0xde,
	0xd5, 0x65, 0x49, 0xbe, 0x08, 0x8a, 0xb7, 0x69, 0xb1, 0x14, 0xe1, 0xbb, 0x2a, 0x43, 0x99, 0x21,
	0xa1, 0x02, 0xb9, 0xc8, 0xfc, 0xec, 0x9a, 0x8a, 0x7e, 0xc2, 0x46, 0x50, 0xd2, 0x9d, 0xe8, 0x49,
	0xbf, 0x86, 0x08, 0x57, 0xd9, 0x52, 0x67, 0x28, 0x15, 0x12, 0x2e, 0x91, 0x8b, 0x32, 0xfd, 0xfb,
	0x7e, 0xd7, 0x52, 0x2a, 0x15, 0xd7, 0x55, 0xd4, 0x0b, 0x2a, 0x2e, 0x84, 0xcd, 0xa0, 0xbc, 0x4b,
	0xdb, 0x9c, 0xde, 0x14, 0xef, 0xc6, 0x64, 0x2b, 0x6e, 0x99, 0x67, 0x28, 0x73, 0x25, 0xbb, 0x50,
	0xae, 0xce, 0x1c, 0xff, 0x74, 0xec, 0xf8, 0x35, 0xf3, 0xfa, 0x45, 0xf3, 0xd0, 0xd0, 0xd8, 0xf1,
	0x6b, 0xaa, 0x5d, 0x05, 0x9f, 0x00, 0xe1, 0x54, 0x7c, 0xcb, 0x6b, 0xb8, 0x71, 0x31, 0x6a, 0x3c,
	0xdf, 0x50, 0x1e, 0x90, 0x9c, 0x52, 0xbb, 0x75, 0xdf, 0x27, 0xa4, 0xb5, 0x53, 0x47, 0x65, 0xd1,
	0x8d, 0xa6, 0x3c, 0x07, 0x6b, 0xc9, 0x44, 0xbb, 0x3e, 0x7a, 0xed, 0xa2, 0x79, 0xf8, 0x18, 0x61,
	0xad, 0x7f, 0x1f, 0x02, 0x35, 0x3c, 0xe8, 0xf4, 0x17, 0xc5, 0x6f, 0xd9, 0xa2, 0x58, 0x14, 0x24,
	0x8a, 0x16, 0x2a, 0x2d, 0x0f, 0x1a, 0x4a, 0x84, 0x88, 0x22, 0xc4, 0xd8, 0x9b, 0xfb, 0xae, 0x64,
	0x4f, 0xee, 0xc2, 0x04, 0x20, 0xb2, 0xb8, 0xde, 0x50, 0x9e, 0x03, 0xcf, 0x4a, 0x1e, 0x22, 0x78,
	0x08, 0x86, 0x87, 0x72, 0x47, 0x40, 0x28, 0xdf, 0x11, 0x28, 0x02, 0x77, 0x04, 0x32, 0xac, 0x3b,
	0x02, 0xea, 0x50, 0xfc, 0x6d, 0x19, 0x12, 0x56, 0xab, 0x9f, 0x82, 0x78, 0x6b, 0x31, 0xcf, 0x5b,
	0xd5, 0x2e, 0xde, 0x0a, 0x62, 0xa9, 0xca, 0xc9, 0xb0, 0x54, 0xe5, 0x78, 0x58, 0x0a, 0xae, 0x03,
	0x15, 0xc9, 0x54, 0xa2, 0xb3, 0xb7, 0xc3, 0x32, 0x55, 0xda, 0x5a, 0x91, 0x9c, 0x86, 0x5b, 0x16,
	0x18, 0xca, 0x3c, 0x89, 0xab, 0x90, 0xab, 0x46, 0x6f, 0x1f, 0x19, 0x3d, 0x72, 0x61, 0x64, 0xe8,
	0x92, 0xf9, 0xe3, 0x1d, 0x6d, 0xad, 0x2a, 0x57, 0x0b, 0xd7, 0x83, 0x2a, 0xe7, 0x19, 0xa9, 0x21,
	0x2c, 0xb7, 0x4b, 0x0c, 0x65, 0x91, 0xe4, 0xaa, 0xb2, 0x78, 0xc6, 0xe9, 0xca, 0x3c, 0x72, 0x38,
	0x7b, 0xe9, 0x8a, 0xea, 0x82, 0x81, 0x6b, 0x41, 0x05, 0x9d, 0xfa, 0x4d, 0x96, 0x82, 0x2a, 0x43,
	0xdd, 0x21, 0xcc, 0xb8, 0x0a, 0x97, 0x66, 0xe3, 0xea, 0xd8, 0x4e, 0x36, 0x26, 0xb5, 0x8e, 0xba,
	0x72, 0x9f, 0x4e, 0xac, 0x0a, 0x97, 0x5e, 0xe5, 0xea, 0xd8, 0x4e, 0x5e, 0xb2, 0x74, 0x5f, 0xd8,
	0xa7, 0x93, 0x97, 0xbc, 0x3a, 0x90, 0xab, 0x83, 0x6d, 0xa0, 0x8a, 0x3e, 0x2b, 0xdd, 0x89, 0xde,
	0x9e, 0x74, 0x1d, 0x40, 0x53, 0x85, 0x08, 0xed, 0xaa, 0xa2, 0x1d, 0x65, 0x8e, 0x5d, 0x19, 0xdb,
	0xdb, 0xa7, 0xba, 0x6a, 0xa1, 0x0a, 0x66, 0xb2, 0x5d, 0x63, 0xf5, 0x3a, 0x03, 0xa9, 0xd7, 0x45,
	0x86, 0xb2, 0x40, 0xf2, 0xd6, 0xb2, 0x23, 0x1b, 0xbe, 0xae, 0x7a, 0x01, 0xe0, 0x13, 0x00, 0xa4,
	0x13, 0xe9, 0x58, 0x17, 0xee, 0xac, 0x02, 0x75, 0x86, 0x24, 0x8c, 0x29, 0x96, 0x2b, 0xb2, 0xc3,
	0x3f, 0xce, 0x0e, 0x1c, 0x1f, 0xdb, 0xfb, 0xee, 0xd8, 0x87, 0x1f, 0xa8, 0x4c, 0x0d, 0x8c, 0x83,
	0xd9, 0x1d, 0x89, 0x1e, 0xbd, 0xb7, 0x5b, 0x4b, 0x6d, 0x60, 0x99, 0xa9, 0x12, 0x91, 0xea, 0x61,
	0x43, 0x91, 0x25, 0x5f, 0x00, 0x39, 0x62, 0xee, 0xdb, 0x93, 0x79, 0xf7, 0x40, 0x66, 0xff, 0x4f,
	0xc6, 0xde, 0x3f, 0xef, 0x62, 0x30, 0xdf, 0x16, 0x50, 0x07, 0xf7, 0x79, 0xcb, 0x11, 0xc3, 0x55,
	0xa1, 0x97, 0x3d, 0x6e, 0x28, 0x8f, 0x4a, 0x01, 0x20, 0xf2, 0xbc, 0xa0, 0xd7, 0x11, 0x26, 0x0c,
	0x68, 0x27, 0xf6, 0x95, 0x82, 0x5a, 0xbc, 0x9e, 0xb7, 0x6a, 0x5b, 0xe3, 0x1d, 0xda, 0x5a, 0x02,
	0x86, 0x8d, 0xcb, 0xe2, 0x1e, 0x67, 0xbd, 0x5e, 0x88, 0xf4, 0xa9, 0x55, 0x20, 0x57, 0x67, 0x3e,
	0xdd, 0x37, 0x7a, 0xed, 0xb3, 0xd1, 0xed, 0xbb, 0x71, 0xef, 0xbf, 0x6b, 0x29, 0x4d, 0x15, 0xd7,
	0x84, 0xea, 0x9e, 0x56, 0x51, 0x3d, 0x5c, 0x0b, 0xca, 0x93, 0xa9, 0xc4, 0xd6, 0x78, 0xa7, 0x96,
	0x22, 0x9a, 0x15, 0x09, 0x8b, 0x5d, 0x28, 0xd7, 0x99, 0x37, 0x0e, 0x65, 0xfa, 0x4f, 0x59, 0x4a,
	0x6d, 0xe0, 0x73, 0xf3, 0xfc, 0xde, 0x4c, 0xdf, 0x91, 0x91, 0xcf, 0x4f, 0x8d, 0x6e, 0xdf, 0xad,
	0xda, 0x30, 0x70, 0x1d, 0x08, 0x77, 0x74, 0xf5, 0xea, 0x69, 0x2d, 0xd5, 0xd6, 0x4a, 0x16, 0x71,
	0xd4, 0x8b, 0x53, 0x2a, 0xd7, 0xda, 0xe3, 0xc8, 0xec, 0xdf, 0x6e, 0x5e, 0x3d, 0x3d, 0x76, 0x6a,
	0x4f, 0xf6, 0xf3, 0xf3, 0x6d, 0xad, 0xaa, 0x03, 0x03, 0x4f, 0x08, 0x60, 0x76, 0x4c, 0xd7, 0x13,
	0x1d, 0xf1, 0x58, 0x5a, 0xeb, 0xc4, 0x48, 0x6e, 0x48, 0x24, 0xba, 0x90, 0x1a, 0x0e, 0xb7, 0x74,
	0x1a, 0x4a, 0x4c, 0xf2, 0x05, 0x90, 0xdb, 0x32, 0xfd, 0x67, 0x32, 0xfd, 0xa7, 0xcc, 0xdd, 0x9f,
	0x8c, 0xee, 0x38, 0xea, 0x0c, 0xf5, 0xea, 0xd9, 0xb6, 0x56, 0x73, 0xdf, 0xf1, 0xd1, 0x73, 0x97,
	0x1b, 0xa2, 0xa3, 0x07, 0x2f, 0x8c, 0xdc, 0x18, 0xca, 0xfe, 0x74, 0xc8, 0xdc, 0xf7, 0x7e, 0x66,
	0xff, 0xf6, 0x4c, 0xff, 0x7e, 0x1b, 0xc8, 0xfc, 0x60, 0xaf, 0xd9, 0x37, 0x98, 0x79, 0xe7, 0x82,
	0xd9, 0x77, 0x5c, 0xf5, 0x7d, 0x01, 0x4c, 0x82, 0xd2, 0xae, 0x58, 0xbb, 0xd6, 0xa5, 0xd7, 0x95,
	0xa0, 0x25, 0x61, 0xb5, 0x67, 0x49, 0x08, 0x98, 0x99, 0xc6, 0xe7, 0x50, 0xb3, 0x75, 0x3d, 0xe9,
	0xd4, 0xb6, 0x16, 0xd1, 0x50, 0xe6, 0x4b, 0xa4, 0x23, 0x79, 0x8e, 0x4d, 0x11, 0xbc, 0x60, 0x65,
	0xce, 0xee, 0xcd, 0x7e, 0xfc, 0xb9, 0x4a, 0xaa, 0xe1, 0x6a, 0x50, 0x9e, 0x48, 0x6a, 0xa9, 0x58,
	0x3a, 0x91, 0x22, 0x5a, 0xac, 0xce, 0x50, 0xe6, 0x48, 0x76, 0xa1, 0x1c, 0xce, 0xfc, 0xf8, 0xf0,
	0xc8, 0xad, 0x7e, 0x34, 0x13, 0xb4, 0x10, 0xbe, 0x08, 0x4a, 0xdf, 0xe8, 0x4d, 0xa4, 0x63, 0x7a,
	0x5d, 0x19, 0x1a, 0xe7, 0x3c, 0xef, 0x38, 0xc9, 0xd8, 0x5e, 0xb4, 0xc0, 0xc8, 0x5a, 0x88, 0x9b,
	0x50, 0x01, 0x1d, 0xdb, 0x7d, 0xd8, 0x12, 0x2d, 0x52, 0x1a, 0x79, 0x0c, 0xcc, 0x60, 0x70, 0x80,
	0x35, 0xa0, 0xe8, 0x75, 0x6d, 0x1b, 0x66, 0x34, 0xd5, 0xfa, 0x09, 0x67, 0x83, 0x92, 0xad, 0xb1,
	0xae, 0x5e, 0xb2, 0x32, 0xab, 0xf8, 0xa1, 0x39, 0xf4, 0xa8, 0xd0, 0xfc, 0xaa, 0xa1, 0xbc, 0x02,
	0xbe, 0x23, 0x05, 0x71, 0xad, 0x3c, 0x07, 0xdb, 0xa2, 0x36, 0x21, 0x46, 0x07, 0xaf, 0x67, 0xae,
	0xee, 0xbc, 0x23, 0x20, 0xd6, 0xbc, 0x23, 0xd8, 0x0c, 0x76, 0x47, 0x70, 0xb8, 0xe4, 0x8e, 0x60,
	0x63, 0x2b, 0xfe, 0x9b, 0x10, 0xa8, 0xf3, 0xef, 0x7b, 0xfa, 0x9b, 0x18, 0xdf, 0xe6, 0xac, 0xfd,
	0xf9, 0x9e, 0x79, 0xe2, 0x31, 0xb2, 0x44, 0x3a, 0x4a, 0x2c, 0x8d, 0x3a, 0xdb, 0xe8, 0xef, 0x44,
	0x30, 0x51, 0xaa, 0x2f, 0x88, 0xbd, 0xf1, 0x88, 0xa1, 0xac, 0x02, 0x2b, 0xa5, 0x40, 0xca, 0x78,
	0xc9, 0x8e, 0x77, 0xad, 0x9f, 0x08, 0x60, 0xf6, 0x33, 0x5a, 0xda, 0xab, 0x5c, 0xba, 0x41, 0x4d,
	0x27, 0x57, 0xd8, 0xd6, 0x4a, 0x14, 0x8d, 0x62, 0x49, 0xb9, 0xa7, 0x52, 0xf6, 0x94, 0xfc, 0xae,
	0xa5, 0x36, 0x35, 0xa7, 0x26, 0x54, 0x37, 0x4f, 0xae, 0x7e, 0xf5, 0x95, 0x15, 0xcb, 0x1f, 0x8b,
	0x2d, 0xff, 0xa1, 0xb2, 0xfc, 0xbb, 0xcb, 0xff, 0x60, 0xd9, 0x22, 0xd5, 0x03, 0xdb, 0xdc, 0x60,
	0x28, 0x4b, 0xc1, 0x12, 0xc9, 0x77, 0x2c, 0x72, 0x35, 0xb6, 0x99, 0xec, 0xb1, 0x8b, 0xbf, 0x0a,
	0x81, 0x39, 0x3e, 0x90, 0xd3, 0x9f, 0x01, 0x5e, 0x19, 0x1f, 0x03, 0x3c, 0x64, 0x28, 0x0b, 0x09,
	0x03, 0xcc, 0x65, 0x4d, 0x4d, 0x7f, 0x1e, 0x58, 0x65, 0x28, 0x2b, 0x40, 0xa3, 0xe4, 0x4f, 0x19,
	0x6a, 0x78, 0xba, 0x19, 0xe0, 0xaf, 0x8b, 0xc0, 0x9c, 0xe7, 0xe2, 0xba, 0x0f, 0x07, 0x2c, 0x03,
	0xc5, 0x7a, 0x22, 0x95, 0x26, 0xb3, 0x8e, 0x77, 0x5c, 0x56, 0x81, 0x5c, 0x91, 0x79, 0xc7, 0x30,
	0x87, 0xfa, 0xc6, 0xce, 0x0d, 0x99, 0x43, 0x7d, 0x2a, 0x2a, 0x83, 0xeb, 0x41, 0x71, 0xa7, 0xa6,
	0x77, 0x20, 0x22, 0x96, 0xe3, 0xa5, 0x10, 0x15, 0xc8, 0x2b, 0x30, 0x30, 0x3e, 0x30, 0x19, 0xb9,
	0x31, 0x64, 0x6e, 0xb7, 0x1e, 0x1b, 0xa2, 0x23, 0xc3, 0xbb, 0xcd, 0xfe, 0xcb, 0x56, 0xdb, 0xcc,
	0xa1, 0xbd, 0xe6, 0xc0, 0xc9, 0xcc, 0xf1, 0x4f, 0x33, 0xfd, 0xfb, 0x33, 0xc7, 0xf6, 0xa9, 0xa8,
	0x1d, 0x6c, 0x04, 0xa5, 0x89, 0xcd, 0x9b, 0x75, 0x0d, 0x13, 0xb7, 0xa8, 0xe5, 0x3e, 0x43, 0x99,
	0x25, 0x91, 0x22, 0x39, 0x6c, 0xee, 0xe8, 0xcb, 0x5e, 0x1a, 0xb6, 0x6c, 0x14, 0x52, 0x04, 0xeb,
	0x41, 0x49, 0x57, 0xbc, 0x9b, 0x6c, 0x10, 0x8b, 0x5a, 0xa0, 0xa1, 0x54, 0x4b, 0xb8, 0x44, 0x2e,
	0x1d, 0x3b, 0x76, 0xdb, 0x1c, 0xba, 0xa8, 0xe2, 0x47, 0x8b, 0x45, 0xd0, 0xb2, 0x59, 0x82, 0x16,
	0x98, 0x48, 0xf0, 0xb2, 0x49, 0x56, 0xcb, 0x66, 0x66, 0xb5, 0x2c, 0x45, 0x6d, 0xb0, 0x89, 0x6c,
	0xaf, 0x96, 0xd5, 0x05, 0x2e, 0x92, 0x65, 0xa8, 0xf1, 0x04, 0x16, 0xc9, 0xe6, 0x95, 0x86, 0xd2,
	0x08, 0x1a, 0x24, 0xff, 0x89, 0x92, 0x67, 0x75, 0xc5, 0xf5, 0xb4, 0x33, 0x76, 0xbc, 0x03, 0xfb,
	0x55, 0x08, 0xdc, 0xe7, 0x07, 0x7e, 0x2f, 0xc9, 0x48, 0xd1, 0xd4, 0xcb, 0x88, 0x6c, 0x28, 0x4d,
	0x60, 0xb9, 0x14, 0x40, 0x1a, 0x17, 0x29, 0x89, 0x88, 0xfc, 0xdb, 0x12, 0x50, 0xfb, 0x52, 0xb2,
	0xd3, 0xd7, 0x06, 0x7b, 0x21, 0x50, 0x4d, 0xa2, 0x75, 0xdf, 0xab, 0x26, 0x67, 0xd8, 0xbd, 0xb7,
	0xb5, 0x7a, 0xf5, 0xa0, 0xcd, 0x9c, 0x98, 0xd0, 0xf9, 0x99, 0x93, 0x35, 0xe5, 0x8a, 0xa6, 0xc4,
	0x94, 0x2b, 0x9e, 0xb0, 0x29, 0xf7, 0x6e, 0x90, 0x29, 0x57, 0x82, 0xb4, 0xdd, 0x5c, 0xcf, 0x4c,
	0x5a, 0x93, 0xb0, 0x31, 0x9d, 0x8a, 0xf7, 0x6c, 0x69, 0x79, 0xda, 0x50, 0x9e, 0x08, 0xb0, 0xf3,
	0x16, 0xdb, 0x16, 0x1e, 0x99, 0xd2, 0x64, 0x22, 0xd1, 0xd5, 0x10, 0x1d, 0x1b, 0x3e, 0x31, 0x3a,
	0x70, 0x7e, 0xe4, 0xc6, 0x10, 0x36, 0xec, 0x02, 0x6c, 0xb8, 0x8d, 0xb6, 0x0d, 0x57, 0x8a, 0x06,
	0x51, 0xeb, 0x1d, 0x04, 0xaa, 0x9e, 0xb0, 0x99, 0x56, 0x56, 0xb0, 0x99, 0xf6, 0xbc, 0x6d, 0xa6,
	0x95, 0xa3, 0xa1, 0x44, 0x7c, 0xe9, 0x51, 0xa8, 0x89, 0xd6, 0xfc, 0xa8, 0xa1, 0x3c, 0x0c, 0x56,
	0x49, 0x41, 0x9c, 0x29, 0xd7, 0x65, 0x4e, 0x5d, 0xcb, 0xbc, 0x77, 0xc5, 0xc6, 0x24, 0x7b, 0x72,
	0x17, 0x51, 0x0d, 0x4f, 0x00, 0xe0, 0x50, 0x1e, 0x36, 0x11, 0x71, 0x13, 0x90, 0x76, 0x42, 0x87,
	0x77, 0x58, 0x9a, 0x6a, 0x2c, 0x59, 0x88, 0xea, 0x08, 0x2a, 0x6a, 0x95, 0x60, 0x11, 0x12, 0x0f,
	0x0a, 0xa0, 0x14, 0x13, 0x0d, 0x7e, 0x93, 0x69, 0x3b, 0x43, 0x5e, 0x10, 0x40, 0xdb, 0xc6, 0xd6,
	0x58, 0x3a, 0x86, 0x8d, 0xe1, 0x99, 0x86, 0x52, 0x45, 0xba, 0x27, 0xc4, 0xc4, 0x9d, 0x46, 0xd6,
	0x80, 0xb0, 0x0d, 0x35, 0x1e, 0x73, 0x53, 0x3c, 0x29, 0x80, 0x19, 0x8a, 0x73, 0xe3, 0x01, 0x55,
	0x6e, 0x48, 0x0f, 0x79, 0x86, 0xc4, 0xc0, 0x32, 0xe3, 0x42, 0xab, 0x0b, 0x1e, 0xd7, 0x0c, 0xe6,
	0xfe, 0x64, 0xb2, 0x83, 0xfb, 0x3e, 0x08, 0xdb, 0x73, 0xea, 0x1a, 0x59, 0x3e, 0x23, 0x1d, 0xad,
	0x31, 0x78, 0x44, 0x48, 0x29, 0xd9, 0x8a, 0x2c, 0x8a, 0xe6, 0x9f, 0xcc, 0xc5, 0xbf, 0x0b, 0x81,
	0x3a, 0x7f, 0x06, 0xf8, 0x4a, 0x1b, 0xc3, 0x98, 0xb5, 0x03, 0x95, 0xfc, 0x63, 0x86, 0xf2, 0x08,
	0x58, 0x2d, 0x05, 0x52, 0xc6, 0x4f, 0x36, 0x88, 0xae, 0xff, 0xe7, 0x02, 0xa8, 0x6d, 0xd5, 0xba,
	0x34, 0x3f, 0x5d, 0xff, 0x05, 0x9b, 0xc4, 0x54, 0xc0, 0x03, 0x86, 0x63, 0x6d, 0x09, 0xce, 0x8e,
	0xbd, 0x7f, 0xde, 0x47, 0xc0, 0x7f, 0x2b, 0x80, 0x3a, 0xff, 0x56, 0xd3, 0xff, 0x32, 0x8e, 0xce,
	0x5d, 0xd0, 0xf8, 0xfd, 0xd0, 0xa6, 0x7b, 0x99, 0x22, 0x50, 0x43, 0x40, 0x71, 0x3b, 0x6b, 0xd2,
	0x36, 0x06, 0x4e, 0xda, 0x92, 0x02, 0x27, 0xcd, 0x67, 0x95, 0x5e, 0x09, 0x8a, 0x7a, 0x7a, 0xbb,
	0xc9, 0xd1, 0x2a, 0x3a, 0x8f, 0xb3, 0x9e, 0xe9, 0xb2, 0xe1, 0xac, 0xb5, 0xf8, 0x18, 0xcd, 0xaa,
	0x83, 0x6f, 0x0b, 0xa0, 0xb4, 0x53, 0xd3, 0xe3, 0x29, 0xad, 0xae, 0x28, 0xb7, 0x02, 0x68, 0x45,
	0x50, 0x2d, 0xdf, 0x32, 0x94, 0x6f, 0x4a, 0xa4, 0x89, 0xfc, 0xa4, 0x39, 0xf8, 0x19, 0xc1, 0x18,
	0xf5, 0x6c, 0xbd, 0xe2, 0xe2, 0x8e, 0xcc, 0xd5, 0x9d, 0x0d, 0xd1, 0xcc, 0xa1, 0xfd, 0x63, 0x27,
	0xce, 0x98, 0xfb, 0x8e, 0x63, 0x7b, 0x7c, 0xe4, 0xe6, 0x09, 0x73, 0xf7, 0xbe, 0xec, 0xd0, 0x25,
	0xf3, 0xca, 0x07, 0xa3, 0x83, 0xc7, 0x32, 0xc3, 0xe7, 0x46, 0x3f, 0xfd, 0x44, 0x25, 0xfd, 0x70,
	0x2b, 0x57, 0x71, 0xa1, 0x2b, 0x57, 0xf3, 0x2b, 0x86, 0xf2, 0x6d, 0xf0, 0xb2, 0xe4, 0x21, 0xae,
	0xbd, 0x4e, 0xd2, 0x31, 0x61, 0xfe, 0xbb, 0x23, 0x78, 0x28, 0x76, 0x47, 0xb0, 0x88, 0x70, 0x47,
	0x20, 0xe3, 0x60, 0xf7, 0xf3, 0x1f, 0x87, 0xc0, 0x4c, 0x57, 0xc7, 0xd3, 0x5f, 0x77, 0x7d, 0x93,
	0xd3, 0x5d, 0x5e, 0xcb, 0x46, 0xd5, 0x3a, 0x12, 0xa9, 0x4e, 0x6b, 0xd1, 0x20, 0x1b, 0x27, 0xa4,
	0xb7, 0x2a, 0x70, 0x2f, 0xe4, 0xfd, 0x58, 0x57, 0x35, 0x19, 0x4a, 0x03, 0x90, 0x24, 0x2f, 0x09,
	0x3c, 0xc4, 0x25, 0x5c, 0x7e, 0xb5, 0x08, 0x54, 0xab, 0x5a, 0xba, 0x37, 0xd5, 0xe3, 0x30, 0xf9,
	0x17, 0xab, 0x99, 0x60, 0x0b, 0x28, 0xc3, 0x65, 0x7a, 0x5d, 0x08, 0x59, 0x0d, 0xf5, 0x88, 0xd8,
	0xa4, 0x4c, 0x86, 0xa3, 0x17, 0x77, 0x98, 0xb7, 0x8c, 0xd1, 0xdb, 0x27, 0x6c, 0x49, 0xf8, 0x5d,
	0x4b, 0x89, 0x21, 0x84, 0xca, 0x05, 0x95, 0x02, 0x71, 0x9c, 0x58, 0x54, 0xb0, 0x0d, 0xf5, 0x2a,
	0xa8, 0xd4, 0xfe, 0x28, 0x9d, 0x8a, 0x6d, 0xdc, 0xa6, 0xa7, 0xb5, 0x6e, 0xdb, 0x5a, 0xb5, 0x54,
	0xa5, 0xc4, 0xd7, 0xc8, 0x8b, 0xc6, 0x3e, 0xfc, 0xc0, 0x3c, 0xff, 0x1e, 0xde, 0x5d, 0x66, 0x4f,
	0xee, 0xd2, 0x49, 0x45, 0x43, 0x74, 0x5b, 0x6f, 0x4f, 0x3a, 0x3e, 0x72, 0xe3, 0xc7, 0xd9, 0xa3,
	0x97, 0x55, 0xbe, 0x51, 0xf3, 0x4b, 0x86, 0xa2, 0x82, 0x0d, 0x92, 0x9b, 0xc0, 0xf2, 0x1c, 0x8c,
	0x4f, 0x21, 0x8c, 0x4e, 0x31, 0x64, 0x79, 0xfc, 0xa3, 0x10, 0xa8, 0xe1, 0xbb, 0xfc, 0x3a, 0xb1,
	0x38, 0xb9, 0x97, 0xf6, 0x50, 0xc0, 0x43, 0x55, 0xc2, 0xe1, 0x4b, 0x01, 0x70, 0x3a, 0x87, 0x73,
	0x41, 0xc8, 0xe6, 0xe6, 0x19, 0x86, 0x52, 0x2e, 0x85, 0xda, 0x5a, 0xe5, 0x50, 0x5b, 0xab, 0x1a,
	0x6a, 0x6b, 0x15, 0xff, 0xbc, 0x1c, 0x54, 0x72, 0x6a, 0x13, 0x7e, 0x17, 0x54, 0xc4, 0x7b, 0xf4,
	0x74, 0xac, 0x87, 0xdc, 0xde, 0xe0, 0x86, 0x8f, 0x18, 0xca, 0x2a, 0x89, 0xab, 0x90, 0x17, 0x66,
	0xfa, 0x87, 0xcc, 0xd3, 0x07, 0xf1, 0x48, 0xcd, 0x8f, 0x8f, 0x67, 0x7f, 0x7e, 0x71, 0xe4, 0xc6,
	0x2f, 0x1a, 0xa2, 0x66, 0xdf, 0xe0, 0xe8, 0xdb, 0xb7, 0xf0, 0xb1, 0xb1, 0xca, 0x35, 0x81, 0xcb,
	0x40, 0x51, 0x47, 0xb2, 0x97, 0xa8, 0x7d, 0x44, 0x42, 0xeb, 0x99, 0xee, 0xff, 0xd7, 0x6e, 0x78,
	0x89, 0xa0, 0x6d, 0x95, 0xc2, 0x46, 0x50, 0xd4, 0xad, 0x75, 0x93, 0x4b, 0x35, 0x74, 0xfb, 0x6c,
	0x3d, 0xcb, 0x10, 0x03, 0x9b, 0x7b, 0x76, 0x9b, 0x1f, 0x9f, 0xa0, 0xf0, 0xdd, 0x5a, 0xb7, 0xd5,
	0xf9, 0x96, 0x64, 0x2f, 0xb9, 0x47, 0xc3, 0x9d, 0x6f, 0x71, 0x3a, 0x7f, 0xc6, 0xe9, 0x7c, 0x4b,
	0xb2, 0x17, 0x76, 0x00, 0x80, 0xf9, 0xb9, 0x35, 0xae, 0xbf, 0x1e, 0xb8, 0xbf, 0xc2, 0xa4, 0xb6,
	0x40, 0xf0, 0x2e, 0x99, 0x69, 0x23, 0xcf, 0x21, 0x54, 0xff, 0x64, 0x38, 0x3b, 0x7c, 0x26, 0x7b,
	0x8a, 0x0e, 0x85, 0x01, 0x81, 0x7f, 0x08, 0xc2, 0xd6, 0xfc, 0x59, 0xbf, 0x75, 0x74, 0xf2, 0x91,
	0xe7, 0x1d, 0x8b, 0x0d, 0x45, 0x94, 0x9c, 0x26, 0xf4, 0x15, 0x99, 0x63, 0x57, 0x32, 0x87, 0x07,
	0x9c, 0x57, 0x38, 0x10, 0xb0, 0x13, 0x94, 0xeb, 0x5a, 0x47, 0x6f, 0x2a, 0x9e, 0xde, 0x86, 0x36,
	0x52, 0xc1, 0x66, 0xe0, 0x46, 0x02, 0x46, 0xb6, 0xb7, 0xb4, 0x95, 0x5c, 0x47, 0xde, 0x81, 0x36,
	0xa5, 0xe6, 0xc0, 0x7e, 0x73, 0xf7, 0x65, 0xf2, 0x1a, 0x1b, 0x06, 0xaa, 0xa0, 0x24, 0xde, 0x6d,
	0x89, 0x0d, 0xde, 0x77, 0x3d, 0x10, 0xf0, 0x8a, 0x36, 0x0b, 0x06, 0xdb, 0xdd, 0x18, 0x9e, 0xce,
	0xd5, 0xd8, 0xb1, 0x7e, 0xf3, 0xed, 0x3e, 0xd2, 0x2d, 0xae, 0xb2, 0x66, 0x77, 0x6b, 0xb2, 0x83,
	0xdc, 0xc8, 0xe1, 0xd9, 0xdd, 0x9a, 0xec, 0xa0, 0x2d, 0xf0, 0x70, 0x5e, 0xde, 0xb0, 0x36, 0xda,
	0xd6, 0xaa, 0x5a, 0x15, 0x70, 0x13, 0x28, 0xfe, 0x61, 0xa2, 0x47, 0x43, 0x77, 0x6f, 0xc1, 0x64,
	0xfc, 0x6e, 0xa2, 0x47, 0x23, 0x86, 0xae, 0x05, 0xed, 0xc2, 0x8e, 0x75, 0x3d, 0x40, 0xf5, 0xf0,
	0x71, 0x00, 0xda, 0x7b, 0xf5, 0x78, 0x8f, 0xa6, 0xeb, 0x6d, 0xad, 0xe8, 0x26, 0xae, 0x08, 0xef,
	0xe0, 0x98, 0x62, 0x99, 0xf9, 0xad, 0x32, 0xbf, 0xe1, 0x2a, 0x50, 0x1e, 0xd3, 0x75, 0x2d, 0xdd,
	0xd6, 0xaa, 0xd7, 0x55, 0x20, 0x35, 0x8e, 0xe4, 0xd8, 0x2e, 0x94, 0xed, 0x5f, 0xaa, 0xfd, 0x0b,
	0xae, 0x01, 0xe1, 0xee, 0x44, 0x67, 0x6f, 0x97, 0x66, 0xb5, 0xaa, 0x8c, 0x16, 0xd5, 0x17, 0x61,
	0x5e, 0x75, 0x4a, 0x65, 0xe7, 0xa7, 0xea, 0xfc, 0x84, 0x1d, 0xf6, 0x46, 0xbc, 0x0a, 0x71, 0x92,
	0x94, 0xdb, 0xfc, 0xe1, 0xae, 0x50, 0x90, 0x85, 0x45, 0xf7, 0xe6, 0x10, 0x2f, 0x8b, 0x7e, 0x1b,
	0xf3, 0x49, 0x5c, 0x5b, 0x88, 0x29, 0x00, 0x1c, 0x56, 0x86, 0x2b, 0x89, 0x73, 0x0a, 0xd6, 0x1e,
	0xf8, 0xc6, 0x1f, 0x39, 0xa7, 0x90, 0x09, 0xce, 0xfe, 0x64, 0x47, 0xf6, 0xd4, 0x09, 0xce, 0x41,
	0x65, 0x25, 0x28, 0xd6, 0xe3, 0x3f, 0xa4, 0xba, 0x19, 0x37, 0xb1, 0x0a, 0xf8, 0x26, 0xe6, 0xf9,
	0x4b, 0xe6, 0x95, 0x3e, 0x15, 0xd5, 0x88, 0xff, 0x59, 0xb0, 0xb5, 0x17, 0xde, 0xf5, 0xc1, 0x65,
	0xdc, 0x7b, 0xb1, 0x5e, 0x45, 0xef, 0xad, 0xc0, 0xbb, 0x7f, 0xee, 0x8d, 0x2d, 0xa0, 0xa2, 0xd3,
	0x3e, 0xe9, 0x68, 0x6b, 0x25, 0x6f, 0x46, 0x0c, 0xcc, 0x55, 0xc8, 0x33, 0xc8, 0xad, 0xee, 0xd5,
	0xb3, 0x6d, 0xad, 0x2a, 0x57, 0x65, 0xbd, 0x10, 0x9d, 0x37, 0x15, 0x31, 0x2f, 0x44, 0xe7, 0x4d,
	0xe4, 0x85, 0xdc, 0x61, 0xd3, 0x32, 0x50, 0x82, 0x36, 0x9f, 0x44, 0x49, 0xcd, 0x31, 0x14, 0x28,
	0xe1, 0x12, 0x39, 0x8c, 0xc1, 0x2d, 0x73, 0x17, 0x97, 0x88, 0x07, 0xca, 0x40, 0x15, 0x6f, 0xbe,
	0xc3, 0x45, 0x20, 0x14, 0xef, 0x24, 0xb8, 0xcd, 0x36, 0x94, 0x99, 0x52, 0x28, 0xde, 0xc9, 0x1f,
	0x88, 0x85, 0xe2, 0x9d, 0xe3, 0x3e, 0x02, 0x7b, 0xc5, 0x73, 0x04, 0xf6, 0x94, 0xa1, 0x7c, 0x83,
	0x39, 0x02, 0x5b, 0xc1, 0x9e, 0x7c, 0x65, 0xde, 0xfb, 0xac, 0x21, 0x6a, 0x5e, 0xdc, 0x39, 0xba,
	0xf7, 0x67, 0xd9, 0xb3, 0x47, 0x47, 0x86, 0xde, 0x6d, 0x88, 0x8e, 0xee, 0xfe, 0x7c, 0x74, 0x60,
	0x10, 0xfd, 0x54, 0x7e, 0x7f, 0x63, 0xf6, 0xe3, 0xfd, 0xcc, 0xd1, 0xd8, 0x37, 0xbd, 0x47, 0x63,
	0x92, 0xa1, 0x2c, 0x61, 0x8f, 0xc6, 0x22, 0xb8, 0xfb, 0xd1, 0xc1, 0xfd, 0x99, 0xab, 0x3b, 0x33,
	0xef, 0x59, 0xe6, 0xff, 0xb8, 0x2e, 0x3a, 0x4b, 0xbe, 0xf4, 0x8b, 0xce, 0x2d, 0xcc, 0x21, 0x99,
	0x25, 0x9b, 0xcb, 0xf2, 0xec, 0xc5, 0x27, 0x7c, 0xbf, 0xf9, 0x2c, 0x00, 0x1d, 0xe8, 0x82, 0x0a,
	0xb9, 0x8c, 0x94, 0x21, 0x7d, 0x85, 0xc8, 0xc9, 0x14, 0xcb, 0xf7, 0x93, 0x9b, 0x2a, 0xe4, 0x39,
	0xd2, 0x10, 0xed, 0x4d, 0x77, 0x44, 0x75, 0xad, 0x23, 0xd1, 0xd3, 0xa9, 0xab, 0x0c, 0x98, 0xd5,
	0x57, 0x2f, 0xda, 0xdf, 0xa3, 0xbe, 0xca, 0x99, 0xbe, 0x9c, 0x62, 0xf9, 0x7e, 0xb2, 0xd1, 0xf7,
	0xeb, 0xcb, 0x01, 0x63, 0x6e, 0x50, 0xc3, 0x53, 0x74, 0x83, 0x6a, 0x75, 0xd9, 0x6b, 0x99, 0x5e,
	0x7a, 0x1d, 0x18, 0x47, 0x97, 0xb8, 0x89, 0x2d, 0xed, 0x47, 0x2f, 0xa3, 0x2b, 0x0e, 0x5c, 0x3a,
	0x19, 0xed, 0xf6, 0x8f, 0x61, 0x30, 0x8b, 0xbd, 0x1a, 0xb4, 0xa6, 0x7d, 0x52, 0x2e, 0x04, 0xaf,
	0x78, 0x5c, 0x08, 0xa6, 0x50, 0xe8, 0xe2, 0x00, 0xb4, 0xc7, 0x74, 0x8b, 0xdd, 0x36, 0xc7, 0xb7,
	0x20, 0x99, 0xce, 0xbf, 0x5d, 0x5e, 0x6a, 0x28, 0x0f, 0x49, 0x4c, 0x33, 0xba, 0x76, 0x9a, 0x67,
	0x86, 0xb2, 0xe7, 0xb6, 0x8f, 0xed, 0x3e, 0x9c, 0xbd, 0x35, 0x40, 0x6d, 0x1c, 0x07, 0x0a, 0xfe,
	0x00, 0xcc, 0x89, 0x75, 0x75, 0x25, 0xde, 0xa4, 0xf2, 0x40, 0x27, 0x85, 0xb8, 0x1f, 0xac, 0x36,
	0x94, 0x95, 0x92, 0x3f, 0x84, 0x5c, 0x67, 0xee, 0xde, 0x31, 0x3a, 0x70, 0xc3, 0x16, 0x4b, 0x9b,
	0x62, 0xaa, 0x7f, 0x03, 0xd8, 0xe5, 0xf2, 0x27, 0x58, 0x91, 0xd3, 0x9f, 0x80, 0x4c, 0x51, 0x0e,
	0x59, 0xb3, 0x45, 0x7c, 0x0a, 0x7d, 0x09, 0x1e, 0x07, 0xe5, 0x5a, 0x4f, 0xac, 0xbd, 0x4b, 0x53,
	0x36, 0x22, 0xf9, 0x2c, 0xc7, 0x8b, 0xaf, 0x5d, 0x28, 0xd7, 0x98, 0x37, 0xb7, 0x9b, 0x47, 0x06,
	0x63, 0xbd, 0xe9, 0x84, 0xde, 0x11, 0xeb, 0xd2, 0x52, 0xaa, 0x5d, 0x07, 0x5f, 0xb3, 0x2c, 0x8a,
	0xf5, 0xc8, 0x0d, 0x9d, 0xd8, 0x5a, 0x41, 0x9a, 0xc4, 0x42, 0x4e, 0xe9, 0x4d, 0x27, 0x36, 0xa2,
	0x2e, 0x70, 0x13, 0xf2, 0x26, 0xda, 0x83, 0x5c, 0xe3, 0xbc, 0x03, 0x4f, 0x9f, 0x6a, 0xd7, 0xc1,
	0xef, 0x81, 0xf2, 0x94, 0xa6, 0x6b, 0xa9, 0xad, 0x5a, 0x27, 0xb2, 0xc1, 0xca, 0xf1, 0x05, 0x82,
	0x5d, 0x28, 0xaf, 0xa4, 0xbf, 0xd0, 0x6d, 0x41, 0xb4, 0x23, 0xd6, 0x13, 0xed, 0x49, 0xa4, 0xa3,
	0xed, 0x5a, 0x34, 0x19, 0xef, 0x78, 0x5d, 0xeb, 0x8c, 0xbe, 0x19, 0x4f, 0xbf, 0x96, 0xe8, 0x4d,
	0x47, 0xf5, 0xa4, 0xd6, 0x11, 0xdf, 0x1c, 0xd7, 0x3a, 0x55, 0xbb, 0xb1, 0xb5, 0x02, 0xa1, 0x55,
	0x18, 0x30, 0x2b, 0x10, 0x5a, 0x85, 0xab, 0xed, 0x85, 0x94, 0x5b, 0x88, 0x9b, 0x41, 0x19, 0x52,
	0x4c, 0x89, 0x14, 0xb2, 0xc1, 0xe8, 0xce, 0x8c, 0x94, 0xc9, 0xd0, 0x6e, 0x85, 0x35, 0x9b, 0x45,
	0x71, 0x5a, 0x09, 0xff, 0x04, 0xb0, 0x07, 0xce, 0xc8, 0x10, 0x9b, 0x21, 0x3f, 0x5c, 0x10, 0x67,
	0x30, 0x47, 0xd9, 0x98, 0x3d, 0x90, 0x91, 0xcf, 0x76, 0x27, 0xcf, 0xb6, 0x79, 0x84, 0x3d, 0xd5,
	0x66, 0x41, 0x26, 0xa1, 0x55, 0x22, 0x4f, 0x82, 0x1a, 0xf7, 0x18, 0xc6, 0xe5, 0x2a, 0x42, 0xce,
	0x95, 0xfc, 0x34, 0x13, 0xf5, 0x57, 0xb0, 0xc7, 0x1f, 0xec, 0x26, 0xc2, 0x88, 0x33, 0xbb, 0xe7,
	0x1e, 0x0e, 0x81, 0xd9, 0xde, 0x8e, 0xa7, 0xff, 0xbe, 0x7b, 0x43, 0x9e, 0x7d, 0xb7, 0x83, 0x0d,
	0x16, 0x18, 0xbc, 0xef, 0x9e, 0xed, 0xf6, 0x0f, 0xb1, 0xd8, 0x9e, 0xbf, 0xf3, 0xf4, 0xa5, 0x86,
	0x97, 0xce, 0x78, 0x0f, 0x7e, 0x4a, 0x00, 0x35, 0xb6, 0x1f, 0x01, 0x5d, 0x2d, 0xfe, 0xc0, 0x65,
	0x70, 0xe2, 0x55, 0xe3, 0x31, 0xe4, 0x8f, 0xc8, 0x19, 0x9c, 0xdc, 0x53, 0x8e, 0xa3, 0x25, 0x0e,
	0xae, 0xb9, 0xde, 0x50, 0x16, 0x83, 0x85, 0x92, 0xe7, 0xbd, 0xd4, 0xff, 0xc3, 0x1e, 0xa3, 0x78,
	0x23, 0x04, 0x66, 0xba, 0xa0, 0xa6, 0xff, 0xc4, 0x6e, 0x2c, 0x7c, 0x62, 0x91, 0x9e, 0xc7, 0x13,
	0x5b, 0xeb, 0x73, 0xa7, 0xcd, 0xcc, 0x2d, 0x3d, 0x3e, 0xf4, 0x50, 0x83, 0xfa, 0x7b, 0xb8, 0x27,
	0xf6, 0x26, 0xeb, 0x3a, 0x63, 0x01, 0xaf, 0xdb, 0xaa, 0xf5, 0xa4, 0xef, 0xfe, 0xec, 0x3a, 0x0e,
	0x1a, 0xa1, 0x7c, 0x0e, 0x1a, 0x6b, 0x40, 0x58, 0x4f, 0xc7, 0x52, 0x8e, 0x53, 0x32, 0xdd, 0x63,
	0xda, 0xa5, 0xb2, 0xf3, 0x53, 0x75, 0x7e, 0xc2, 0x26, 0x50, 0xa6, 0xf5, 0x74, 0xda, 0xee, 0xc8,
	0x45, 0x78, 0x87, 0x42, 0xcb, 0x64, 0xfa, 0x43, 0xa5, 0x3f, 0x9a, 0x57, 0x18, 0xca, 0x72, 0xb0,
	0x4c, 0xf2, 0x27, 0x08, 0xf5, 0xee, 0xc6, 0x14, 0x1c, 0x19, 0x3a, 0x38, 0x32, 0xfc, 0xa9, 0xf8,
	0x17, 0x21, 0x70, 0x9f, 0x1f, 0xf4, 0xf4, 0x67, 0xbf, 0x57, 0x39, 0xb7, 0x8a, 0x68, 0x0e, 0xf6,
	0x43, 0x28, 0xb5, 0x58, 0xd2, 0x48, 0x78, 0xf0, 0xc1, 0x00, 0x1e, 0x8c, 0x6a, 0x08, 0x79, 0xce,
	0xfb, 0x28, 0x80, 0x3a, 0xcc, 0x4a, 0x84, 0x1a, 0x11, 0x6e, 0x34, 0x43, 0xa0, 0xda, 0x05, 0x0d,
	0x57, 0x81, 0x72, 0xfc, 0x0e, 0x9b, 0x07, 0xf1, 0xb9, 0x04, 0x2d, 0x94, 0xcb, 0x71, 0x57, 0x6d,
	0xad, 0xaa, 0x5d, 0x66, 0x4d, 0x3d, 0x39, 0xa3, 0x20, 0xc4, 0xc4, 0x53, 0x4f, 0xca, 0x64, 0xfa,
	0x43, 0xa5, 0x3f, 0xe0, 0x53, 0x00, 0x74, 0x38, 0x87, 0xe5, 0x45, 0x8e, 0x67, 0x35, 0x53, 0x2c,
	0x57, 0xb1, 0xb7, 0x4c, 0x6d, 0xad, 0x2a, 0x53, 0xc7, 0x0c, 0x73, 0x03, 0x1b, 0x94, 0x62, 0x17,
	0xca, 0xf6, 0x2f, 0x7b, 0x98, 0x1b, 0x60, 0x33, 0x08, 0x23, 0xf4, 0xd1, 0xd1, 0x64, 0x89, 0x73,
	0x78, 0xe4, 0x94, 0xca, 0x15, 0x98, 0xd3, 0x88, 0x81, 0xe1, 0x54, 0x38, 0x6d, 0xe3, 0xc4, 0xc7,
	0xbd, 0x88, 0x6b, 0x6b, 0x71, 0x38, 0x69, 0x8b, 0xb7, 0x3b, 0xaa, 0x53, 0x21, 0xfe, 0x65, 0x31,
	0x98, 0xe9, 0xb8, 0xbc, 0x50, 0x7d, 0xfe, 0xf5, 0xf3, 0xf0, 0x72, 0x76, 0xc5, 0x53, 0xe5, 0xe1,
	0xb5, 0x12, 0x94, 0x26, 0x7a, 0xf4, 0x58, 0x97, 0x46, 0xcc, 0x65, 0x2c, 0x89, 0xb8, 0x48, 0xae,
	0x20, 0x71, 0x82, 0xfd, 0x97, 0xcd, 0xa3, 0x03, 0x2a, 0x29, 0x85, 0xcb, 0xec, 0x08, 0x23, 0x1c,
	0x15, 0x30, 0xcb, 0x50, 0x6a, 0xec, 0x08, 0xa3, 0x52, 0xb3, 0xff, 0x8a, 0x79, 0xe6, 0x0c, 0x8d,
	0x2d, 0x72, 0x1d, 0xf1, 0x85, 0xd1, 0x89, 0x5b, 0xc1, 0x47, 0x7c, 0xcb, 0x40, 0xa9, 0x9e, 0x8e,
	0xa5, 0x7b, 0xf1, 0x26, 0xb4, 0x88, 0xbc, 0x09, 0x17, 0xc9, 0xa5, 0xd9, 0x03, 0x9f, 0x66, 0xb6,
	0xef, 0x50, 0xc9, 0x33, 0x0d, 0xf1, 0xf1, 0xf2, 0x09, 0x76, 0x40, 0x70, 0x48, 0x87, 0x2f, 0x99,
	0x6f, 0x84, 0x00, 0x74, 0x83, 0xde, 0x4b, 0x8b, 0x70, 0xd1, 0xd4, 0x2d, 0xc2, 0xe4, 0x82, 0xc3,
	0x87, 0x1c, 0x2e, 0xd2, 0x11, 0xad, 0x77, 0x20, 0x0c, 0x66, 0xb1, 0xbe, 0x09, 0x54, 0x1e, 0x5b,
	0x7c, 0x57, 0x60, 0xdf, 0x03, 0x3d, 0xe7, 0x08, 0xc8, 0xb5, 0xcc, 0x06, 0x9f, 0x9e, 0xf9, 0xf3,
	0xfe, 0x94, 0x38, 0x90, 0xf1, 0x1b, 0xf6, 0xe2, 0xbb, 0xb9, 0x61, 0xdf, 0x2b, 0x04, 0xed, 0xd8,
	0x0b, 0xf0, 0x32, 0x9b, 0xd2, 0xed, 0xfc, 0x04, 0x5d, 0xcb, 0x0a, 0xdf, 0xb5, 0x97, 0x4d, 0x68,
	0xd7, 0x5e, 0x3e, 0x99, 0x5d, 0x7b, 0xf8, 0x0b, 0xdb, 0xb5, 0x83, 0xbb, 0xb6, 0x6b, 0x9f, 0x51,
	0xe0, 0xae, 0x7d, 0x25, 0x28, 0xc3, 0x47, 0x80, 0x29, 0x14, 0x76, 0x44, 0x16, 0x40, 0x5a, 0x26,
	0x87, 0xf1, 0xd1, 0x21, 0xda, 0xac, 0x93, 0x32, 0xb8, 0xda, 0xd6, 0xa7, 0x95, 0xce, 0xfa, 0x4b,
	0xf5, 0xa9, 0x23, 0x60, 0xbc, 0x62, 0x85, 0x9b, 0xf9, 0x2d, 0x7e, 0x55, 0xc0, 0x2d, 0x14, 0xb3,
	0x95, 0x9e, 0xd0, 0x4e, 0xbe, 0xd9, 0xe2, 0x6e, 0xd0, 0x24, 0xf9, 0xa9, 0x96, 0x1c, 0xde, 0x80,
	0x9f, 0x87, 0xc0, 0x6c, 0x6f, 0x8b, 0xaf, 0xec, 0x3e, 0xd9, 0xed, 0x3a, 0xc6, 0xa8, 0xf1, 0x87,
	0x0d, 0x45, 0x06, 0x2b, 0x24, 0x5f, 0x6a, 0xe4, 0x70, 0x19, 0xfb, 0x99, 0x00, 0x66, 0xb1, 0xde,
	0x4a, 0x5f, 0xd0, 0x6e, 0x99, 0xce, 0xb6, 0xcf, 0xab, 0xa9, 0x8f, 0x94, 0xc3, 0x90, 0xf6, 0x6c,
	0xff, 0xbd, 0x00, 0x66, 0x7b, 0x5b, 0x4c, 0x7f, 0xb7, 0x30, 0x3a, 0x37, 0x7e, 0x63, 0xf7, 0x43,
	0x97, 0xcc, 0xcd, 0x95, 0x10, 0x98, 0xdb, 0xd6, 0x9d, 0x4c, 0xa4, 0xc8, 0xba, 0xbc, 0x29, 0xc1,
	0xcf, 0x51, 0xab, 0xef, 0x1c, 0x21, 0x54, 0x42, 0xf1, 0x4e, 0xb9, 0x76, 0xf4, 0xe2, 0x0e, 0x73,
	0xf0, 0xa6, 0xb9, 0xfb, 0x02, 0x7f, 0xed, 0xe2, 0x5a, 0x73, 0x5f, 0xe0, 0xfd, 0x61, 0xfc, 0x96,
	0x02, 0xfc, 0x5a, 0x6c, 0xb9, 0x59, 0x3d, 0x43, 0x6f, 0xcf, 0x93, 0xf4, 0x8d, 0x69, 0x5e, 0x67,
	0x28, 0x2d, 0xe0, 0x69, 0x29, 0x17, 0xbe, 0xf2, 0x02, 0xf3, 0xca, 0x1e, 0xb2, 0xcc, 0xa2, 0x97,
	0xfb, 0x70, 0xc8, 0xaf, 0x42, 0xa0, 0x9e, 0xed, 0x42, 0x67, 0xfb, 0x68, 0xd9, 0xd6, 0xf2, 0xba,
	0x42, 0x6f, 0x85, 0xa7, 0x8c, 0x7e, 0xcf, 0x01, 0xd0, 0x6e, 0x77, 0x4b, 0x5c, 0x8a, 0x1a, 0x0c,
	0x65, 0xa9, 0xc4, 0x14, 0xcb, 0x73, 0xbd, 0x7d, 0x99, 0xa7, 0x86, 0x46, 0x7f, 0xb9, 0xcb, 0xec,
	0xbb, 0xae, 0x32, 0x80, 0x13, 0xa4, 0x9e, 0x6a, 0x28, 0xeb, 0xc1, 0xf3, 0x52, 0xc1, 0xa8, 0x17,
	0x42, 0xca, 0x91, 0x10, 0x58, 0x5a, 0x60, 0x7f, 0xd3, 0x5f, 0xdf, 0xae, 0xe7, 0xf4, 0xad, 0xe8,
	0xe1, 0x70, 0x0e, 0xd1, 0x42, 0xdc, 0x82, 0x9e, 0x31, 0x94, 0x56, 0xd0, 0x22, 0x15, 0x4e, 0x21,
	0x79, 0x0e, 0x4b, 0x69, 0x47, 0xc8, 0x77, 0x09, 0x60, 0xa6, 0xe7, 0xed, 0xf0, 0x51, 0x50, 0xa6,
	0xf7, 0x76, 0x74, 0x68, 0xba, 0x4e, 0x5c, 0xdb, 0x91, 0x1d, 0x4d, 0xcb, 0xe4, 0x9a, 0xcc, 0xbe,
	0x23, 0xe6, 0x81, 0x33, 0xd9, 0x93, 0xbb, 0x48, 0x23, 0x95, 0x56, 0xc1, 0x87, 0x41, 0xe9, 0xe6,
	0x58, 0xbc, 0x4b, 0xeb, 0x24, 0xac, 0x88, 0xee, 0xf2, 0x49, 0x91, 0x5c, 0x63, 0x9e, 0xbf, 0x3a,
	0x7a, 0xed, 0x02, 0xd3, 0x8e, 0xd4, 0x88, 0xff, 0x35, 0x04, 0x1e, 0x0a, 0x92, 0x3d, 0x06, 0x15,
	0x1c, 0x35, 0xe2, 0x27, 0x36, 0xe8, 0xf6, 0x92, 0x5f, 0x1a, 0x0a, 0x16, 0xa0, 0xb0, 0x2d, 0x00,
	0x84, 0x19, 0xac, 0x3d, 0x89, 0xe4, 0x94, 0xca, 0xf3, 0xbc, 0x3d, 0x65, 0x4f, 0xee, 0xb2, 0xeb,
	0x55, 0x07, 0x74, 0x82, 0x02, 0xf4, 0x7d, 0x43, 0xf9, 0x1e, 0xf8, 0xae, 0x54, 0x20, 0x09, 0xe4,
	0x15, 0x63, 0xdb, 0x4f, 0x8e, 0xde, 0xde, 0x6b, 0xbf, 0x35, 0xbf, 0x34, 0xed, 0x0e, 0x81, 0x07,
	0x82, 0x75, 0xdb, 0xf4, 0x5f, 0xc2, 0x7e, 0xcf, 0x50, 0xd6, 0x02, 0x45, 0xca, 0x89, 0x43, 0x4e,
	0xad, 0x42, 0xd8, 0xfd, 0x72, 0x11, 0xcd, 0x73, 0xb3, 0x81, 0xec, 0xbf, 0x2c, 0x96, 0x6a, 0xe0,
	0x6e, 0x72, 0xd1, 0x84, 0xe1, 0x7d, 0x5f, 0x25, 0xdd, 0xa5, 0x45, 0xad, 0x47, 0xb2, 0xeb, 0xab,
	0xc7, 0xb7, 0x34, 0x18, 0x6d, 0x74, 0xf0, 0x62, 0x3d, 0xcb, 0x15, 0x36, 0xec, 0xeb, 0xda, 0x36,
	0x7c, 0x7b, 0x63, 0x99, 0xbc, 0x5a, 0x47, 0x8a, 0x9c, 0xd2, 0x84, 0xa9, 0xc9, 0x8b, 0x8a, 0xe4,
	0x6a, 0x1b, 0x1e, 0x17, 0xa8, 0xa4, 0x02, 0x76, 0xda, 0x7b, 0x23, 0xbc, 0xd1, 0x6e, 0x0c, 0xb8,
	0xd0, 0x62, 0x30, 0xe0, 0x2e, 0x3a, 0xf1, 0x5b, 0xc8, 0x96, 0xc9, 0x79, 0x0b, 0x09, 0x19, 0xf1,
	0xdb, 0x2c, 0x95, 0x14, 0xca, 0xa8, 0x93, 0x89, 0x6d, 0xe6, 0x33, 0xec, 0x30, 0x83, 0xa7, 0xf7,
	0x2f, 0x74, 0xa4, 0x84, 0x65, 0xaf, 0x86, 0x00, 0x74, 0xc3, 0xde, 0x4b, 0x89, 0x50, 0x2c, 0x4d,
	0x7f, 0xbf, 0x67, 0xea, 0x28, 0x2e, 0xfe, 0x49, 0x89, 0x28, 0x09, 0xf8, 0x0b, 0x0a, 0x1f, 0x32,
	0xb8, 0x69, 0x46, 0xd8, 0xfb, 0x75, 0x50, 0xf5, 0x8c, 0x96, 0x9e, 0x30, 0x6b, 0x37, 0x2f, 0x33,
	0x94, 0x7a, 0xf0, 0x90, 0xe4, 0xea, 0x44, 0x9e, 0x8d, 0x8f, 0x70, 0x5c, 0x13, 0xf4, 0x51, 0x08,
	0x54, 0x73, 0x80, 0x5f, 0xd1, 0xd9, 0xc1, 0xc8, 0x7b, 0x67, 0x87, 0x84, 0x5d, 0xbb, 0x69, 0xe0,
	0xa6, 0x16, 0x99, 0x9a, 0xf7, 0x42, 0xa0, 0xfa, 0xb9, 0xb8, 0xce, 0x4d, 0xce, 0x57, 0xf4, 0x0c,
	0x99, 0xb2, 0x91, 0x1b, 0x5f, 0x12, 0x8c, 0xe5, 0x62, 0xa3, 0x9f, 0x85, 0x40, 0x0d, 0x0f, 0x38,
	0xfd, 0xf9, 0xa8, 0x8d, 0x3b, 0x09, 0xcd, 0xc1, 0x47, 0x78, 0xe4, 0x88, 0x8f, 0xaa, 0x2d, 0xe4,
	0x03, 0xb9, 0xc8, 0x43, 0x02, 0x17, 0xb1, 0x08, 0x17, 0xfd, 0xc7, 0x10, 0x98, 0x89, 0xb7, 0xd8,
	0xd3, 0x77, 0xfd, 0x7a, 0x9e, 0x59, 0xbf, 0x72, 0x9e, 0xed, 0xdd, 0xc5, 0x85, 0xca, 0x5e, 0x6d,
	0x3c, 0xc4, 0xa2, 0xa7, 0x18, 0x3e, 0xab, 0x8d, 0x1b, 0xf6, 0xab, 0xaa, 0xcf, 0xe8, 0x29, 0x4e,
	0xc0, 0x6a, 0xe3, 0x25, 0x83, 0x9b, 0x66, 0x84, 0x19, 0xdf, 0x00, 0x33, 0xf1, 0x91, 0xc2, 0xc4,
	0x17, 0x1c, 0x3a, 0x4d, 0x9e, 0x7e, 0xac, 0x05, 0xee, 0xec, 0xd8, 0xfb, 0xe7, 0x5d, 0xd3, 0x34,
	0x22, 0x00, 0xe8, 0x86, 0x9d, 0xfe, 0xd6, 0x2b, 0xa5, 0xac, 0x77, 0xe4, 0x6e, 0x34, 0x09, 0x65,
	0x7f, 0x23, 0x80, 0x39, 0x28, 0xfb, 0x19, 0x85, 0x5d, 0x9f, 0x22, 0xe4, 0xad, 0xe7, 0xc8, 0x8b,
	0x1c, 0x81, 0x31, 0x79, 0xc3, 0xf8, 0x6e, 0xc1, 0x3c, 0xb6, 0x87, 0x88, 0xf9, 0x4a, 0x50, 0x96,
	0xb0, 0x5a, 0xd9, 0xbb, 0x1a, 0x7c, 0x44, 0x4b, 0xca, 0xe4, 0xf0, 0xe8, 0xc0, 0x87, 0x28, 0xe7,
	0xdc, 0x75, 0x95, 0x96, 0xc1, 0x66, 0x10, 0x46, 0x3f, 0x37, 0x39, 0xb9, 0x05, 0xf1, 0x2d, 0xa9,
	0x5d, 0x2a, 0x57, 0xe0, 0x66, 0xf4, 0x86, 0xd5, 0xae, 0x68, 0x56, 0x0c, 0xe5, 0x49, 0xf0, 0x0d,
	0xc9, 0x7f, 0xd8, 0xf2, 0x42, 0xb2, 0x88, 0x0e, 0xbf, 0x8f, 0x03, 0x8a, 0x6c, 0x5e, 0x40, 0x1d,
	0x30, 0x69, 0x17, 0xfc, 0x9a, 0xdf, 0x6b, 0x72, 0x38, 0x2f, 0x50, 0x0e, 0x11, 0x42, 0xdc, 0xde,
	0x9e, 0xcc, 0xc2, 0x9e, 0xdd, 0xe6, 0xc0, 0x67, 0x44, 0x0e, 0x5b, 0x0c, 0xe5, 0x29, 0xf0, 0x84,
	0x14, 0x40, 0x8a, 0x3c, 0xa4, 0x24, 0x0c, 0xf4, 0x3f, 0x04, 0x50, 0xc9, 0x35, 0xc5, 0x17, 0xa7,
	0x08, 0x2b, 0x01, 0x61, 0x45, 0x2f, 0x4e, 0x11, 0x56, 0xa5, 0x2e, 0x7c, 0x9c, 0xbb, 0xcf, 0x10,
	0x73, 0xcb, 0xea, 0x7f, 0xf7, 0x09, 0x57, 0x3b, 0xb4, 0x2e, 0x72, 0xae, 0x0f, 0x6c, 0x5a, 0x57,
	0x8c, 0x0e, 0x5e, 0xcc, 0x0e, 0xef, 0x71, 0x53, 0xf9, 0x79, 0xe7, 0xdc, 0xaf, 0x38, 0xf7, 0xb9,
	0x1f, 0xee, 0x8e, 0x06, 0xc8, 0x55, 0x10, 0x97, 0x12, 0xd2, 0x1d, 0x29, 0x16, 0x77, 0x86, 0x40,
	0x2d, 0x47, 0xb0, 0x17, 0xb4, 0xf4, 0x9b, 0x89, 0xd4, 0xeb, 0xe3, 0x93, 0x99, 0xf9, 0x38, 0x32,
	0x05, 0x23, 0x5d, 0x69, 0x28, 0x00, 0x47, 0xa6, 0x58, 0x7f, 0x70, 0x28, 0x4a, 0x3d, 0x09, 0x45,
	0x29, 0x62, 0xba, 0x42, 0xd1, 0x26, 0x61, 0x92, 0xc6, 0xf7, 0xd0, 0x10, 0x09, 0x2f, 0x71, 0x2e,
	0xaa, 0x8b, 0xfd, 0x2e, 0xaa, 0x51, 0x3c, 0x8a, 0x9d, 0xad, 0x95, 0x1c, 0x3f, 0x06, 0x61, 0x20,
	0x2f, 0x0e, 0x9a, 0xf3, 0x1e, 0x0c, 0x43, 0x04, 0xe8, 0x2f, 0x43, 0xa0, 0xce, 0xbf, 0x8b, 0xe9,
	0x2f, 0x42, 0xcf, 0x73, 0x22, 0x14, 0x0d, 0x14, 0x21, 0x82, 0x12, 0x27, 0x44, 0x24, 0x0e, 0x8d,
	0x15, 0x22, 0x72, 0x60, 0x10, 0x48, 0x8e, 0xbc, 0x24, 0x25, 0x82, 0xf4, 0x7d, 0x50, 0xed, 0x6a,
	0x0d, 0x9f, 0x03, 0xa5, 0x7a, 0x6f, 0x7b, 0x8f, 0x96, 0x26, 0xd9, 0x08, 0xe6, 0x07, 0x8e, 0x75,
	0x23, 0x02, 0xa3, 0xd2, 0x83, 0x1e, 0xe4, 0x52, 0xf3, 0xe3, 0x23, 0xd9, 0x5b, 0xef, 0xaa, 0xe4,
	0x59, 0xfc, 0x48, 0x00, 0x55, 0x3c, 0x3c, 0x92, 0x3e, 0xfa, 0x02, 0x46, 0xfa, 0x7c, 0xdb, 0xdb,
	0x41, 0x28, 0x21, 0x4f, 0x10, 0x0a, 0x06, 0xe4, 0x2e, 0xac, 0x9f, 0x02, 0xe1, 0x2e, 0x6d, 0x73,
	0xba, 0x6d, 0xc3, 0x0b, 0xbd, 0x34, 0xba, 0x0e, 0xa5, 0x32, 0x74, 0x4a, 0xe5, 0x99, 0xe6, 0xfe,
	0x9f, 0x8e, 0xdc, 0x38, 0x98, 0x3d, 0xb9, 0xab, 0x6d, 0x03, 0x89, 0xc1, 0x76, 0x6a, 0xc5, 0x93,
	0x02, 0x80, 0xb6, 0x93, 0x12, 0x0e, 0x34, 0xb4, 0x24, 0xec, 0x5b, 0xa0, 0xaa, 0x93, 0x29, 0xb2,
	0x4f, 0xe5, 0x50, 0x38, 0x96, 0xab, 0x4a, 0x76, 0x3d, 0xab, 0xae, 0xe7, 0xe6, 0x35, 0x86, 0xb2,
	0x1a, 0xc8, 0x92, 0xcf, 0x7b, 0xe4, 0x07, 0xf0, 0xa4, 0x91, 0xeb, 0xa7, 0x14, 0x2a, 0x77, 0x0e,
	0xb9, 0xfe, 0x3c, 0x04, 0x66, 0x79, 0x1a, 0x4d, 0x7f, 0xce, 0xff, 0x7d, 0x8e, 0xf3, 0x1f, 0x0c,
	0x50, 0x83, 0x18, 0x1f, 0x9c, 0x2b, 0x12, 0xb3, 0xfd, 0xfd, 0x3e, 0x8e, 0x15, 0x98, 0x24, 0x44,
	0x06, 0x48, 0x12, 0x04, 0x3f, 0x9a, 0x04, 0x51, 0x92, 0x70, 0xfd, 0xfb, 0x02, 0x98, 0xc3, 0x7a,
	0xbc, 0xb2, 0x33, 0x4d, 0x13, 0x71, 0x14, 0x30, 0x58, 0x6c, 0xfd, 0xa1, 0xc1, 0x56, 0xfa, 0x0d,
	0x90, 0x26, 0xdd, 0xf2, 0x7d, 0x95, 0xec, 0x5f, 0x2c, 0xfe, 0xb3, 0x10, 0xb8, 0xcf, 0xaf, 0xe6,
	0x5e, 0xb3, 0x12, 0x26, 0x49, 0xbb, 0xc7, 0x0d, 0xe5, 0x51, 0xf0, 0x88, 0x14, 0x40, 0x0a, 0xf9,
	0x01, 0x7c, 0x3e, 0x14, 0x30, 0xbf, 0xb7, 0x8a, 0xc0, 0x2c, 0xc7, 0xe1, 0xc6, 0x99, 0xdd, 0xaf,
	0xaa, 0x53, 0xdb, 0x32, 0x50, 0x9c, 0x74, 0xc2, 0xc5, 0x30, 0x5e, 0x56, 0x01, 0x7f, 0x7d, 0xac,
	0xa2, 0x32, 0xd8, 0x44, 0x7c, 0x21, 0x4a, 0x1d, 0x7f, 0x31, 0xec, 0x0b, 0x51, 0xc3, 0x2a, 0x2a,
	0xcb, 0xe8, 0x25, 0xce, 0x10, 0x6b, 0x6c, 0x6b, 0xa9, 0x0c, 0x35, 0xc1, 0x21, 0x97, 0xc4, 0x5a,
	0x82, 0x6c, 0xa3, 0x8d, 0xa8, 0xcc, 0xf6, 0x1a, 0x23, 0x9a, 0xce, 0x6f, 0x2a, 0xe4, 0xb9, 0x68,
	0xfb, 0x1f, 0xa0, 0xe9, 0xfe, 0x2c, 0x04, 0x66, 0x7b, 0x1b, 0x4d, 0x7f, 0x09, 0x78, 0x89, 0x3b,
	0x37, 0xc9, 0x23, 0x01, 0xac, 0x0f, 0x99, 0x45, 0x8c, 0xbc, 0x8a, 0xce, 0x97, 0x24, 0x01, 0x84,
	0x24, 0x82, 0xf0, 0x67, 0x25, 0xac, 0x6f, 0x27, 0xcd, 0x3f, 0xfe, 0x55, 0x15, 0x83, 0xef, 0xf9,
	0xa4, 0xba, 0xc0, 0x22, 0xb1, 0xc2, 0x50, 0x96, 0xfb, 0xa4, 0xba, 0xb8, 0x1f, 0x47, 0x4f, 0xdb,
	0x64, 0xcf, 0x99, 0xd8, 0xe5, 0x1b, 0x8c, 0xef, 0x31, 0xf6, 0x04, 0x45, 0xcc, 0xe4, 0xf8, 0x1e,
	0xcf, 0x74, 0xf5, 0xc6, 0x39, 0x21, 0x6f, 0xf2, 0x98, 0x10, 0x65, 0xce, 0x5d, 0xb6, 0xdb, 0x84,
	0xa8, 0x75, 0xf5, 0x14, 0x64, 0x4b, 0xc0, 0x35, 0xa0, 0x7c, 0x73, 0xbc, 0x27, 0xae, 0xbf, 0xa6,
	0x75, 0x12, 0xe7, 0x2e, 0x9c, 0x61, 0x9f, 0x16, 0xda, 0x5e, 0xa6, 0x03, 0x87, 0x32, 0xfb, 0x8e,
	0xa8, 0x76, 0x39, 0x97, 0xdb, 0x3b, 0x8c, 0xe8, 0x3a, 0xc1, 0xdc, 0xde, 0x00, 0x35, 0x1e, 0x4f,
	0xba, 0x78, 0xb2, 0x2a, 0x7a, 0xf9, 0x52, 0xbe, 0x9f, 0x65, 0xe5, 0xf6, 0x78, 0x57, 0x97, 0xa3,
	0x11, 0x6e, 0x72, 0x1e, 0xa5, 0xf7, 0x4a, 0xda, 0xf8, 0x17, 0x0b, 0xf2, 0x28, 0x45, 0x99, 0xe3,
	0xd1, 0x40, 0xb0, 0x36, 0x98, 0xe3, 0xd1, 0x06, 0x16, 0x2d, 0x88, 0x2e, 0x20, 0xae, 0x3d, 0x3e,
	0xc4, 0xf0, 0x25, 0x1f, 0xd1, 0x03, 0xd7, 0x2a, 0x68, 0x08, 0x3b, 0x0a, 0xea, 0xf5, 0x0f, 0xb6,
	0x66, 0xef, 0x90, 0x73, 0x07, 0x5b, 0xfb, 0xbb, 0x8b, 0xde, 0xd5, 0x60, 0xeb, 0x2f, 0xd0, 0x8d,
	0xf4, 0x07, 0xc1, 0x5e, 0xa4, 0x53, 0x1e, 0xf7, 0xd9, 0xe1, 0x0a, 0xaf, 0x5e, 0x92, 0xc3, 0x57,
	0x6d, 0xc2, 0xe1, 0x9e, 0xd3, 0x35, 0xb4, 0x9a, 0x75, 0x4d, 0x0d, 0x4f, 0xc6, 0x35, 0x15, 0xdc,
	0x55, 0xd7, 0xd4, 0xc7, 0xad, 0x37, 0x61, 0xd3, 0x86, 0x38, 0x90, 0xd2, 0xc6, 0xb8, 0x90, 0x6d,
	0x4c, 0xce, 0x8e, 0xec, 0x3a, 0xf8, 0x22, 0xa8, 0x8c, 0xe9, 0x0a, 0x4a, 0xda, 0x8e, 0x0e, 0xaa,
	0x88, 0x3f, 0xe9, 0x32, 0x43, 0xa9, 0x97, 0xf8, 0x1a, 0xb9, 0xd6, 0xe9, 0x26, 0x1a, 0x43, 0xe5,
	0xf8, 0xcc, 0x4b, 0xe5, 0xe1, 0x38, 0x57, 0xd9, 0xca, 0x29, 0x77, 0x95, 0xdd, 0x48, 0xcc, 0xc3,
	0x2a, 0x47, 0x82, 0xb1, 0x79, 0xb8, 0xda, 0xe5, 0x2a, 0xfb, 0x0f, 0x37, 0x0f, 0x99, 0x7d, 0x83,
	0x23, 0xc3, 0x17, 0x32, 0x27, 0x06, 0x33, 0xfd, 0x43, 0xe6, 0xfb, 0x97, 0x33, 0x57, 0xcf, 0xfe,
	0xdd, 0xf6, 0x1d, 0x1d, 0xdd, 0x9d, 0xed, 0x99, 0xcb, 0xe7, 0xcc, 0x0f, 0x8e, 0x5b, 0x12, 0x8c,
	0x4d, 0xc8, 0x55, 0xcc, 0x25, 0x47, 0x35, 0x13, 0x10, 0x63, 0x5f, 0x72, 0xd8, 0xbf, 0x18, 0xcf,
	0xe5, 0x26, 0x27, 0x74, 0xb6, 0x86, 0x89, 0xdb, 0xa1, 0xa1, 0xb3, 0xf4, 0x87, 0x13, 0x2f, 0xdb,
	0xe4, 0x78, 0xed, 0xce, 0x64, 0x1a, 0x50, 0xaf, 0x5d, 0xfa, 0xc3, 0xf1, 0xd9, 0x75, 0xce, 0x01,
	0xa1, 0xcf, 0x39, 0xa0, 0xce, 0x59, 0xb3, 0x70, 0x2b, 0xef, 0xaa, 0x3b, 0x0b, 0xc9, 0x6b, 0x43,
	0x2e, 0x79, 0xbd, 0xd7, 0x83, 0x70, 0xc5, 0x77, 0x42, 0x20, 0x12, 0x2c, 0x43, 0xf0, 0x61, 0x2e,
	0x23, 0x09, 0x3a, 0x69, 0xc1, 0xac, 0x72, 0x1f, 0x23, 0x10, 0x1f, 0xbf, 0x97, 0x3d, 0x76, 0x81,
	0x73, 0xae, 0xfe, 0x63, 0x50, 0xae, 0x6b, 0xe9, 0x74, 0xbc, 0x67, 0x0b, 0xf5, 0x89, 0x7c, 0x6c,
	0x1c, 0x92, 0xdb, 0xb8, 0x91, 0xb4, 0xc5, 0x24, 0x45, 0x89, 0x85, 0xec, 0xfe, 0xbc, 0x6f, 0xa6,
	0xd2, 0x4c, 0x21, 0x22, 0x8f, 0x83, 0x4a, 0xae, 0x87, 0x7c, 0x04, 0x11, 0x58, 0x82, 0xfc, 0x1a,
	0x80, 0x52, 0x3c, 0x34, 0xb8, 0x80, 0x59, 0x43, 0x51, 0xea, 0x52, 0x6b, 0x0d, 0x75, 0xc2, 0xcf,
	0xac, 0x05, 0xf4, 0xae, 0x26, 0x42, 0xf8, 0x26, 0x28, 0x8e, 0xf7, 0x6c, 0x4e, 0x90, 0x14, 0x08,
	0x41, 0xb6, 0x45, 0x5b, 0xcf, 0xe6, 0x04, 0xb1, 0xf0, 0x2d, 0x68, 0xd7, 0xf1, 0x32, 0x2a, 0x83,
	0xdf, 0x73, 0x39, 0xe4, 0x2c, 0x0c, 0xe8, 0x2b, 0x47, 0xde, 0x1d, 0xb6, 0x57, 0xd7, 0xe2, 0xb3,
	0xd2, 0x96, 0xb1, 0x12, 0xe6, 0x9b, 0x49, 0x44, 0xc6, 0xc8, 0x70, 0x5c, 0x27, 0xee, 0x1b, 0xb8,
	0xf5, 0x0a, 0x87, 0xb3, 0x21, 0x0b, 0x9e, 0x5d, 0xaf, 0xe6, 0x93, 0xb5, 0xbc, 0xa0, 0x55, 0x6b,
	0x03, 0xb7, 0x6a, 0x95, 0x31, 0x3d, 0x32, 0xab, 0x16, 0xe9, 0xb1, 0xb0, 0xb5, 0xab, 0x1d, 0xd4,
	0x74, 0xc5, 0xf4, 0x34, 0x59, 0xc8, 0x3b, 0x99, 0xd5, 0x10, 0xe5, 0x13, 0xf3, 0x54, 0xca, 0xf3,
	0x47, 0x6e, 0x1c, 0xc8, 0xfc, 0xfc, 0x1c, 0xb6, 0x08, 0xfc, 0x7a, 0xf7, 0x34, 0xa1, 0xef, 0xc0,
	0xb9, 0xd1, 0xc8, 0x3b, 0xc2, 0xae, 0x77, 0xb0, 0x95, 0xf4, 0x1d, 0x38, 0x75, 0x5a, 0xe0, 0x3b,
	0xd8, 0x26, 0xf0, 0x45, 0x50, 0xc5, 0xbc, 0xd7, 0xda, 0x31, 0xe1, 0xcc, 0x06, 0xc8, 0x76, 0x72,
	0x55, 0xc9, 0xb3, 0x59, 0x1c, 0xec, 0xc8, 0x47, 0x17, 0x14, 0xfc, 0x26, 0xa8, 0xc0, 0xaf, 0x21,
	0x1b, 0x1d, 0xbc, 0x66, 0xa2, 0x93, 0x3d, 0xae, 0x42, 0x9e, 0x89, 0xbb, 0x23, 0x57, 0x6e, 0xa8,
	0x2f, 0x0e, 0x00, 0xfe, 0x21, 0x80, 0xce, 0x80, 0xed, 0xfe, 0xf0, 0x0a, 0x8a, 0xa6, 0xcf, 0xa7,
	0x5a, 0xae, 0x65, 0x89, 0xc0, 0xf6, 0xed, 0x03, 0xec, 0x09, 0xab, 0xaa, 0x9c, 0x40, 0x58, 0x55,
	0x1b, 0xb7, 0x62, 0xa2, 0xef, 0xca, 0x60, 0x35, 0x28, 0xb1, 0x1f, 0x01, 0xf2, 0x2e, 0x97, 0x7f,
	0xb7, 0x7d, 0x47, 0xf6, 0xdc, 0xcf, 0xb3, 0xa7, 0x4e, 0x38, 0xeb, 0x64, 0x82, 0x5f, 0x63, 0xaa,
	0x91, 0x3c, 0xd6, 0x07, 0xc9, 0xa3, 0x67, 0x7d, 0x41, 0xe7, 0xd1, 0xdc, 0xfa, 0x32, 0x13, 0x0f,
	0x7b, 0x3a, 0x2e, 0x2e, 0x17, 0x42, 0x60, 0x06, 0x46, 0x04, 0xc7, 0xf6, 0x2e, 0x61, 0x14, 0x2a,
	0xd2, 0x58, 0x96, 0x42, 0xad, 0x62, 0x23, 0xac, 0x89, 0x5a, 0x65, 0x37, 0xe2, 0xcc, 0x2e, 0x8e,
	0xd9, 0x88, 0x9b, 0x83, 0x9f, 0x99, 0x43, 0x4e, 0x3a, 0x24, 0x6e, 0x23, 0xbe, 0x92, 0xfb, 0xb6,
	0x9c, 0x37, 0x7d, 0x17, 0x17, 0x62, 0x6b, 0xe7, 0xf0, 0xa0, 0xbb, 0xc6, 0x62, 0xdf, 0x5d, 0x23,
	0xd3, 0xd0, 0xbd, 0x6b, 0x7c, 0x9a, 0x8d, 0xcc, 0x2d, 0x41, 0xc2, 0x8b, 0x4c, 0x77, 0x26, 0x32,
	0x17, 0xd2, 0xcd, 0xf2, 0xbb, 0xd9, 0xa3, 0x67, 0xbc, 0xf1, 0xb9, 0xa7, 0x01, 0xdd, 0xbb, 0x59,
	0xca, 0x1c, 0x3e, 0x01, 0xca, 0x69, 0xe2, 0x41, 0x76, 0xe1, 0xb5, 0x0b, 0xed, 0x2c, 0x82, 0x03,
	0xa7, 0x47, 0x3e, 0x3f, 0x98, 0x39, 0xbb, 0x77, 0x74, 0xe0, 0x8a, 0x6a, 0xd7, 0xc2, 0xc7, 0x40,
	0x59, 0xbc, 0xa7, 0x47, 0x4b, 0xb5, 0x6d, 0x20, 0xb4, 0x43, 0x8a, 0x9c, 0x96, 0x51, 0x7e, 0x31,
	0xf7, 0xec, 0xce, 0xde, 0x7a, 0x77, 0xe4, 0xc6, 0x70, 0xdb, 0x06, 0x95, 0xd6, 0x79, 0xd2, 0x27,
	0x16, 0x4d, 0x7d, 0xfa, 0xc4, 0xe2, 0xf1, 0xa4, 0x4f, 0x2c, 0x19, 0x67, 0xfa, 0xc4, 0xd2, 0x82,
	0xd2, 0x27, 0x7e, 0x9f, 0x5c, 0x81, 0x96, 0xe5, 0xcf, 0xc6, 0x87, 0xfc, 0xa8, 0xf1, 0xfd, 0xe8,
	0x42, 0xf2, 0x6e, 0x7a, 0x4b, 0x8a, 0x7b, 0x74, 0xa1, 0x8c, 0x6f, 0x4e, 0xd9, 0xc4, 0x86, 0xe5,
	0x77, 0x3f, 0xb1, 0x61, 0x78, 0xca, 0x13, 0x1b, 0x82, 0x42, 0x13, 0x1b, 0x7e, 0xdb, 0xbe, 0x23,
	0xc6, 0x4b, 0x00, 0xda, 0xa6, 0xd0, 0x3b, 0xe2, 0x55, 0xde, 0xfc, 0x85, 0x0d, 0xd1, 0x91, 0xcf,
	0x0f, 0x9a, 0x17, 0x77, 0x9a, 0x9f, 0xdd, 0x36, 0xaf, 0x9f, 0x6e, 0x88, 0x66, 0xae, 0x5f, 0x35,
	0xfb, 0x3f, 0x69, 0x88, 0x9a, 0x07, 0xce, 0x9a, 0xd7, 0x4f, 0x5b, 0x5a, 0x92, 0x46, 0x3e, 0x6f,
	0x02, 0xe5, 0xc9, 0x98, 0xae, 0xbf, 0x99, 0x48, 0x75, 0x92, 0xe5, 0x00, 0xa5, 0x79, 0xb5, 0x0b,
	0xe5, 0xa5, 0x98, 0xfd, 0xcd, 0x7d, 0x1f, 0x98, 0x97, 0x0e, 0x9a, 0x87, 0xde, 0x33, 0x07, 0xf7,
	0x64, 0xcf, 0xee, 0x68, 0x88, 0x8e, 0xf5, 0x6f, 0x1f, 0xbd, 0xb8, 0x63, 0xf4, 0xf6, 0xa9, 0xd1,
	0x73, 0x87, 0x46, 0x2f, 0xfd, 0xc4, 0x1c, 0xdc, 0xa3, 0xda, 0x8d, 0x5c, 0x99, 0x33, 0x2b, 0xbf,
	0x80, 0xcc, 0x99, 0x55, 0x77, 0x23, 0x73, 0x26, 0x93, 0xef, 0xa0, 0xba, 0xa0, 0x7c, 0x07, 0x7c,
	0x1c, 0x79, 0xcd, 0xf8, 0x52, 0x45, 0x3e, 0x05, 0x66, 0x74, 0x74, 0x25, 0x7a, 0x3b, 0x5f, 0xd6,
	0x7a, 0x3a, 0x13, 0x74, 0xe3, 0x85, 0xd4, 0x2a, 0x5b, 0x2e, 0xb3, 0x0f, 0x2a, 0xfb, 0x60, 0x77,
	0xa0, 0x62, 0x56, 0x81, 0xee, 0x0e, 0x70, 0xb9, 0xcc, 0x3e, 0xa8, 0xec, 0x83, 0xf8, 0x5b, 0x81,
	0x66, 0x13, 0xa4, 0x02, 0x03, 0xd7, 0x80, 0x92, 0x2d, 0xa9, 0x44, 0x6f, 0x92, 0xd5, 0x90, 0xb8,
	0xc4, 0xa6, 0x1f, 0x23, 0x3c, 0xd9, 0xe1, 0x5d, 0x2a, 0xae, 0x85, 0x6d, 0x20, 0x8c, 0x7e, 0x30,
	0xdf, 0x2c, 0x45, 0x5b, 0x75, 0xa7, 0x54, 0x9e, 0xeb, 0xdb, 0x01, 0x39, 0x09, 0x73, 0xe0, 0xe0,
	0xab, 0xa0, 0x06, 0x3d, 0xb4, 0x6a, 0x7a, 0x47, 0x2a, 0x8e, 0x0f, 0x2a, 0xb0, 0xca, 0x94, 0x0d,
	0xa5, 0x49, 0xf2, 0x54, 0x06, 0x74, 0x9c, 0xe9, 0xeb, 0x1b, 0xbd, 0x7d, 0x45, 0xf5, 0x80, 0x8b,
	0x9d, 0x74, 0xf9, 0x44, 0x32, 0x0c, 0xeb, 0xa9, 0xc0, 0x63, 0x94, 0xf1, 0x31, 0x39, 0x16, 0xe9,
	0x52, 0x2c, 0xcc, 0x54, 0x8c, 0x83, 0xaf, 0xd4, 0x31, 0x1c, 0x7b, 0xa8, 0x27, 0x5e, 0x13, 0xe8,
	0xea, 0x63, 0xa9, 0x3c, 0xb8, 0xc6, 0x16, 0x69, 0xc1, 0x59, 0x3d, 0xa8, 0x48, 0x73, 0x8a, 0xc0,
	0x95, 0xab, 0x60, 0x35, 0x51, 0xab, 0xcc, 0x82, 0x8d, 0x35, 0x27, 0x3f, 0x1f, 0x2e, 0x2f, 0x93,
	0x35, 0xb6, 0xab, 0x00, 0x93, 0x85, 0x83, 0xba, 0x0a, 0xf0, 0xaf, 0xe3, 0xdd, 0x0e, 0xfe, 0x75,
	0x05, 0xa8, 0x60, 0xaf, 0x4a, 0x02, 0xb7, 0x6b, 0x57, 0xcc, 0x5b, 0xc7, 0x88, 0x5d, 0xe1, 0xf7,
	0xbd, 0x96, 0xd0, 0x24, 0xbe, 0xd7, 0xb2, 0x11, 0xcc, 0x48, 0x69, 0x6f, 0xf4, 0x6a, 0x3a, 0x9b,
	0xad, 0x66, 0xa5, 0xa1, 0x34, 0x4a, 0x6c, 0xb9, 0x3c, 0x1f, 0xa7, 0xaf, 0x32, 0xf7, 0x5d, 0x19,
	0xfd, 0xfc, 0x73, 0x3f, 0xa3, 0x9d, 0x85, 0x86, 0xdf, 0x02, 0x00, 0x1f, 0xe2, 0x33, 0xa9, 0x6c,
	0x10, 0x87, 0xce, 0x20, 0xf9, 0x47, 0xc8, 0x61, 0x1e, 0x3a, 0xf0, 0xf7, 0xdd, 0xc4, 0x38, 0xcd,
	0xed, 0x94, 0xa2, 0x25, 0x9e, 0x94, 0xa2, 0x98, 0x30, 0xae, 0x98, 0x68, 0xba, 0x91, 0x2b, 0xf5,
	0xdd, 0xc8, 0xa1, 0x06, 0xfc, 0x46, 0x6e, 0x9d, 0x63, 0x38, 0x95, 0x39, 0xb2, 0x64, 0x1b, 0x4e,
	0x0f, 0x62, 0x70, 0x7b, 0xad, 0xbc, 0xb8, 0x13, 0x07, 0x50, 0x99, 0xef, 0x9c, 0x31, 0x4f, 0x9d,
	0x75, 0x6c, 0xa8, 0x56, 0xc7, 0x97, 0xaa, 0x1c, 0x1d, 0xc1, 0xa2, 0x03, 0xc7, 0x6a, 0x82, 0x30,
	0x39, 0x52, 0xd5, 0xe5, 0xd9, 0xd9, 0x53, 0xe8, 0xe4, 0x95, 0xd8, 0x7c, 0x38, 0xff, 0xa5, 0x13,
	0x39, 0x49, 0x12, 0xf3, 0x87, 0xc7, 0x91, 0x98, 0x7f, 0x8f, 0x60, 0xbd, 0x59, 0x8f, 0xa7, 0xf2,
	0xa7, 0x6a, 0x24, 0x47, 0xce, 0xcf, 0x19, 0x4a, 0x9b, 0x44, 0xdb, 0x4c, 0x3a, 0x35, 0x3f, 0xed,
	0x08, 0xae, 0x06, 0x25, 0xc9, 0x44, 0xa2, 0x4b, 0xaf, 0x9b, 0xe1, 0x84, 0xab, 0xe1, 0x12, 0x19,
	0x9a, 0x87, 0x3e, 0x1b, 0xdb, 0x7d, 0x98, 0x8d, 0x01, 0x53, 0x71, 0x15, 0x6c, 0x03, 0x15, 0xba,
	0xd6, 0xa5, 0x75, 0xa4, 0xb5, 0x4e, 0x94, 0x4d, 0x14, 0xaf, 0x94, 0x68, 0x41, 0xe1, 0x2a, 0x64,
	0x38, 0xb6, 0x7d, 0x7f, 0xe6, 0xe0, 0x4f, 0xb9, 0x3e, 0x38, 0x08, 0xd7, 0x11, 0x72, 0xe5, 0x14,
	0x1e, 0x21, 0x57, 0x4d, 0xea, 0x08, 0xf9, 0x4f, 0x40, 0x15, 0xcd, 0xbb, 0x83, 0xf7, 0x31, 0x64,
	0xcf, 0xb4, 0x32, 0xe7, 0xdd, 0xab, 0x9d, 0x5f, 0x93, 0x3d, 0xd1, 0x40, 0x1b, 0x54, 0x57, 0x6f,
	0x72, 0xb5, 0xfd, 0x69, 0x15, 0xe2, 0xb6, 0xed, 0x02, 0x80, 0x31, 0x40, 0xdc, 0x17, 0x5a, 0xb5,
	0x74, 0x2c, 0xde, 0xa5, 0xd7, 0xd5, 0xe4, 0xf6, 0xf6, 0x43, 0xaa, 0x84, 0x6f, 0x42, 0x3d, 0x86,
	0xa2, 0x9d, 0xf8, 0x59, 0xe5, 0xab, 0xe1, 0x56, 0x30, 0x03, 0x65, 0xa2, 0x27, 0x08, 0xce, 0x0c,
	0x88, 0x9a, 0xe2, 0x10, 0x5c, 0xe7, 0x34, 0x60, 0xb0, 0x63, 0xfb, 0x91, 0x21, 0xf3, 0x40, 0xb1,
	0x63, 0x01, 0xe0, 0x7a, 0x50, 0xa1, 0xf7, 0xc4, 0x92, 0xfa, 0x6b, 0x89, 0x34, 0x62, 0x1f, 0xe8,
	0x88, 0x30, 0x57, 0x21, 0xd7, 0x79, 0xd3, 0xcf, 0x9a, 0xb7, 0x3f, 0xca, 0xee, 0xbe, 0xa4, 0x72,
	0x70, 0x70, 0x15, 0x73, 0x1e, 0x36, 0x8b, 0x39, 0x05, 0xb6, 0xcf, 0xc3, 0xec, 0x5f, 0xce, 0x39,
	0x57, 0x44, 0x01, 0xb3, 0x7c, 0x66, 0x6b, 0xbc, 0x3b, 0x55, 0x37, 0x3d, 0xc6, 0xb5, 0x53, 0xfd,
	0xef, 0x65, 0x74, 0x0d, 0x44, 0x9f, 0x58, 0x0e, 0x58, 0x4a, 0xd0, 0x27, 0x9b, 0xc9, 0x52, 0xd2,
	0xe2, 0xd9, 0xa2, 0x22, 0x53, 0xd1, 0xd9, 0xa2, 0xd6, 0x92, 0x4f, 0x62, 0xe7, 0xd8, 0xa8, 0xfa,
	0x2d, 0x47, 0x45, 0x93, 0x58, 0x8e, 0x5e, 0x01, 0x90, 0xf0, 0xae, 0xca, 0xac, 0x4a, 0xcc, 0x0a,
	0xe2, 0x53, 0x4d, 0x33, 0x6a, 0xe3, 0x25, 0x8a, 0xec, 0x4d, 0x7d, 0xe0, 0xe0, 0xd3, 0x80, 0x5d,
	0x7f, 0xc8, 0x46, 0x17, 0xa9, 0x29, 0x6e, 0x5d, 0xaa, 0x60, 0x8f, 0xbf, 0x54, 0xb6, 0x0a, 0x7e,
	0x07, 0xcc, 0x4c, 0x91, 0xb3, 0x19, 0x67, 0x74, 0xa5, 0x79, 0x46, 0x47, 0x0e, 0x79, 0xd8, 0xd1,
	0x79, 0x7b, 0x81, 0x4f, 0x00, 0x80, 0x0b, 0x99, 0xd3, 0x3f, 0xfc, 0x1d, 0x61, 0xa7, 0x58, 0xae,
	0x60, 0x4f, 0xcd, 0x54, 0xa6, 0x06, 0xae, 0xf5, 0x5c, 0xb2, 0xe3, 0xfd, 0x98, 0x7d, 0xc9, 0x5e,
	0x87, 0x27, 0x93, 0x5c, 0xb5, 0x5f, 0xff, 0x45, 0x76, 0xb8, 0xcf, 0x73, 0xe1, 0xfe, 0x96, 0x47,
	0x51, 0xe1, 0x74, 0xc2, 0x4d, 0x39, 0x2e, 0x85, 0xa7, 0x50, 0x4d, 0x79, 0xdd, 0x0f, 0xf0, 0x2e,
	0xce, 0xdf, 0xfd, 0xc0, 0xc3, 0x9c, 0x1f, 0x62, 0xd6, 0x76, 0xbb, 0x1f, 0x7c, 0x17, 0x80, 0x4e,
	0xfb, 0x64, 0x02, 0x6d, 0xf2, 0xf2, 0x9c, 0x44, 0x63, 0xaa, 0x3b, 0x6d, 0x5c, 0xe7, 0xd1, 0x4c,
	0x0d, 0xa7, 0x2c, 0x2a, 0xbe, 0x38, 0x65, 0x21, 0xfe, 0xaa, 0x08, 0x94, 0x53, 0x87, 0xd5, 0x69,
	0x16, 0x79, 0xf4, 0x8a, 0xeb, 0xa0, 0x7e, 0x71, 0xa0, 0x67, 0xee, 0x04, 0x02, 0x66, 0xf9, 0x15,
	0xbe, 0x64, 0x0a, 0x57, 0xf8, 0xd2, 0xc9, 0xac, 0xf0, 0x93, 0xc9, 0x6c, 0x7d, 0xab, 0x98, 0xba,
	0x79, 0xaa, 0x84, 0x4e, 0xf9, 0x73, 0x5b, 0x3b, 0xf9, 0x78, 0x7d, 0x73, 0x5b, 0xf7, 0xd8, 0x53,
	0x80, 0x6f, 0xae, 0xe4, 0x80, 0xe0, 0x65, 0xd7, 0x0b, 0x73, 0x5d, 0xdd, 0xd3, 0x17, 0xfa, 0xde,
	0x9e, 0xbc, 0xc5, 0x1f, 0x08, 0xe3, 0xcf, 0x43, 0xad, 0x29, 0xf0, 0xa5, 0x9e, 0xf3, 0xe1, 0xdc,
	0x6f, 0xfe, 0xe4, 0xf2, 0xe8, 0xa5, 0x9f, 0x70, 0xc7, 0xc3, 0xb0, 0x11, 0x94, 0x75, 0x24, 0xba,
	0xbb, 0xb5, 0x9e, 0x34, 0x39, 0xf9, 0x44, 0xde, 0x22, 0xb4, 0x4c, 0x2e, 0xcd, 0x7c, 0x72, 0x79,
	0x6c, 0xef, 0x01, 0x95, 0x16, 0x7c, 0x99, 0x09, 0x83, 0x5f, 0x34, 0x94, 0x17, 0xc0, 0x73, 0x92,
	0xff, 0x84, 0xdb, 0xa9, 0x6c, 0x29, 0xca, 0xae, 0x94, 0xc1, 0x2c, 0xd2, 0x77, 0x04, 0x42, 0x21,
	0xf1, 0x86, 0xed, 0x8a, 0xcb, 0x77, 0xc7, 0x39, 0x1e, 0x85, 0xc6, 0xef, 0x78, 0x14, 0x9a, 0xb8,
	0xe3, 0x51, 0x68, 0x6a, 0x5c, 0x71, 0x59, 0x7c, 0x38, 0x57, 0x5c, 0x9b, 0x40, 0x93, 0xcc, 0x11,
	0xbc, 0x5d, 0xc0, 0x1e, 0xb8, 0x6e, 0xc1, 0x6b, 0xe4, 0x04, 0x2f, 0x12, 0x2c, 0x78, 0x24, 0x80,
	0x8e, 0x7c, 0xf2, 0xcd, 0xaf, 0x2f, 0x9a, 0x7a, 0x94, 0xc9, 0xa0, 0x6d, 0x6d, 0xf8, 0xea, 0x47,
	0xf7, 0xfe, 0xcc, 0x1c, 0x1e, 0x5a, 0x2a, 0x7e, 0x4a, 0x9c, 0x48, 0xef, 0xdd, 0xb9, 0x2b, 0xfa,
	0x72, 0xe6, 0x6e, 0x57, 0x09, 0xa8, 0x60, 0x5f, 0x12, 0xe4, 0x2e, 0xc6, 0x7c, 0x38, 0x84, 0x77,
	0x17, 0x0b, 0x15, 0x32, 0xb5, 0xac, 0x6e, 0x29, 0xf2, 0xd3, 0x2d, 0xd6, 0x98, 0x3e, 0xb9, 0x6c,
	0xeb, 0x16, 0xa8, 0xb9, 0x56, 0xbf, 0xa5, 0x39, 0x29, 0x33, 0x61, 0x8d, 0x9b, 0xe6, 0x35, 0x6e,
	0x49, 0xc0, 0x6e, 0x8b, 0x7b, 0xd7, 0x38, 0x15, 0x2d, 0x7e, 0x21, 0xa7, 0x68, 0x9f, 0xf5, 0xb9,
	0xf2, 0x9e, 0x9a, 0xd5, 0xb7, 0xec, 0x4b, 0x5a, 0x7d, 0x27, 0x7d, 0x3f, 0x78, 0x2e, 0x44, 0x53,
	0xf7, 0x50, 0x5a, 0x5b, 0x0a, 0x64, 0x1d, 0x28, 0x4d, 0xb2, 0x89, 0x71, 0x96, 0x23, 0x97, 0x1d,
	0x5c, 0x24, 0x93, 0xff, 0x39, 0xf2, 0xa4, 0x11, 0x08, 0xf8, 0x7b, 0x44, 0xc8, 0x42, 0x01, 0x11,
	0xee, 0xf4, 0x95, 0x7c, 0x30, 0x23, 0x9a, 0x47, 0x72, 0xae, 0x84, 0xca, 0x26, 0x98, 0x0f, 0x87,
	0xa4, 0x37, 0xf2, 0xa2, 0x27, 0xcf, 0x25, 0xa9, 0x5d, 0xd0, 0x9b, 0xbc, 0xab, 0x95, 0xf5, 0x4e,
	0xd7, 0xc7, 0xe3, 0xa0, 0xbb, 0x93, 0xe9, 0xaf, 0xe1, 0x9e, 0xc9, 0x93, 0x5e, 0xc0, 0x26, 0x7e,
	0x3e, 0xed, 0x46, 0xd2, 0xd2, 0xfa, 0x90, 0x40, 0x86, 0x1c, 0x21, 0xb1, 0x62, 0xbb, 0x5d, 0x06,
	0xca, 0x29, 0x50, 0xd0, 0x2e, 0x1e, 0xc1, 0x13, 0x8d, 0xf6, 0x08, 0x7b, 0x57, 0x1a, 0xa2, 0x66,
	0xba, 0x7d, 0x57, 0x5a, 0x85, 0x6f, 0x49, 0xdb, 0x36, 0x98, 0xfd, 0x57, 0xcc, 0x0f, 0xb6, 0x3b,
	0x17, 0xa5, 0x4f, 0x82, 0x30, 0xf9, 0xb9, 0xf5, 0x11, 0xc2, 0x15, 0x88, 0xa0, 0x4e, 0xa9, 0x5c,
	0x43, 0xdb, 0x6e, 0x7d, 0x84, 0xb4, 0x76, 0x2a, 0xe1, 0xcb, 0xa0, 0x82, 0x92, 0x04, 0x5d, 0xb4,
	0x16, 0xa3, 0x97, 0xa3, 0x5b, 0x03, 0xae, 0x42, 0x9e, 0xcf, 0x3a, 0x18, 0x34, 0x47, 0xcd, 0x8b,
	0x3b, 0xd7, 0xbe, 0xfc, 0x7c, 0x43, 0x34, 0xbb, 0xff, 0xa7, 0xd9, 0x23, 0x7b, 0x32, 0xfd, 0x43,
	0x2a, 0x07, 0x0e, 0xff, 0x00, 0xd4, 0xd0, 0x67, 0xba, 0x51, 0xa8, 0x2b, 0x41, 0x7d, 0xa3, 0x53,
	0x69, 0x4f, 0xa5, 0x1c, 0x21, 0x44, 0xff, 0xe0, 0x42, 0x66, 0xe8, 0x08, 0xea, 0x7f, 0x64, 0xe8,
	0xdd, 0xcc, 0x87, 0x83, 0xd9, 0x8f, 0xf7, 0xab, 0x1e, 0x68, 0xb8, 0xcc, 0x16, 0xcd, 0x52, 0xc6,
	0x9b, 0x8e, 0x17, 0x4d, 0x5b, 0x00, 0x5f, 0xb5, 0xb5, 0x79, 0x59, 0xc0, 0x5e, 0x86, 0xce, 0x54,
	0x2e, 0xb7, 0x23, 0x34, 0x3c, 0x5f, 0x35, 0xde, 0xcd, 0xab, 0xf1, 0xf2, 0x80, 0x0f, 0x8b, 0xd9,
	0x2f, 0xf1, 0xa8, 0xf0, 0x1c, 0x6f, 0xf2, 0x31, 0x94, 0x79, 0xfd, 0x1d, 0x9e, 0x42, 0xfd, 0x0d,
	0x26, 0x75, 0x3e, 0xaa, 0xda, 0x87, 0xf6, 0x33, 0x02, 0xae, 0x9a, 0x29, 0x05, 0xb0, 0xbf, 0xaa,
	0xfb, 0x54, 0x1f, 0xf3, 0x17, 0x77, 0xaa, 0xff, 0x65, 0xae, 0x09, 0x1f, 0x16, 0x83, 0x2a, 0x7e,
	0xc0, 0x70, 0x50, 0x00, 0x25, 0xc9, 0xd7, 0x62, 0x3a, 0xd6, 0x76, 0xe1, 0x96, 0x13, 0x82, 0xa1,
	0x1c, 0x15, 0x24, 0x12, 0xc5, 0x2d, 0xef, 0x17, 0xf0, 0x8f, 0x86, 0x68, 0xf6, 0xd4, 0x80, 0xb9,
	0xff, 0xb0, 0x79, 0x68, 0xb7, 0x79, 0xe4, 0x23, 0x7c, 0x2f, 0x9c, 0xd9, 0xbe, 0xa3, 0xbe, 0xed,
	0x85, 0xb6, 0x4d, 0x4b, 0x1b, 0xa2, 0x6d, 0xad, 0xcf, 0xad, 0xab, 0xcf, 0xfe, 0x74, 0x68, 0xec,
	0xf8, 0x2f, 0xfe, 0xe1, 0xe6, 0x21, 0xf3, 0xe8, 0xe0, 0xc8, 0x8d, 0xed, 0xd8, 0x5d, 0x67, 0xf4,
	0xc3, 0x8f, 0x9c, 0x1b, 0x02, 0x44, 0x8e, 0xa5, 0x0d, 0x51, 0x7c, 0xc8, 0x33, 0x72, 0xe3, 0x40,
	0xe6, 0xf4, 0xa7, 0xf5, 0x6b, 0xd7, 0xbf, 0xb0, 0xf1, 0xa5, 0xe7, 0xd7, 0xb5, 0x32, 0xe5, 0x07,
	0x33, 0xa7, 0x3f, 0x6d, 0xc2, 0xdd, 0xd5, 0xab, 0xeb, 0x36, 0xbd, 0xa4, 0xbe, 0xb0, 0xae, 0x75,
	0xa9, 0x8a, 0xc7, 0xe9, 0x9a, 0x5f, 0x4b, 0xb3, 0x4c, 0x7c, 0x7e, 0xbf, 0x65, 0x1f, 0x2b, 0xad,
	0x27, 0xc9, 0x10, 0x8a, 0x98, 0xc8, 0x54, 0xbe, 0x4a, 0x76, 0x3d, 0xab, 0xae, 0x67, 0xb8, 0xd6,
	0xe5, 0x0c, 0x55, 0xec, 0xdc, 0xb9, 0xe5, 0xc8, 0x4a, 0xea, 0xf2, 0x86, 0x5a, 0xc3, 0x7e, 0x15,
	0x8d, 0x71, 0xf9, 0x63, 0xbe, 0x8a, 0xe6, 0xfc, 0x64, 0x3f, 0x82, 0xf6, 0x0c, 0xa8, 0xc4, 0x87,
	0x6e, 0x14, 0x93, 0x52, 0xe7, 0xee, 0x96, 0xaf, 0x91, 0xf9, 0x47, 0x95, 0x7f, 0x14, 0xff, 0xb2,
	0x08, 0xa7, 0x22, 0x0a, 0x32, 0x1b, 0x42, 0x13, 0x37, 0x1b, 0xd6, 0xd3, 0x2f, 0x03, 0xc4, 0xda,
	0xbb, 0xe8, 0x5d, 0x66, 0x93, 0xa1, 0x34, 0x48, 0x4c, 0xb1, 0x3c, 0x6f, 0xf4, 0xf6, 0xde, 0xcc,
	0xf0, 0x79, 0xb3, 0xef, 0x67, 0xa3, 0x6f, 0xdf, 0xf2, 0xb2, 0x8f, 0xca, 0xc0, 0xc2, 0x2e, 0x50,
	0xdd, 0x1d, 0x4b, 0x77, 0xbc, 0xe6, 0x39, 0xe3, 0x6d, 0x31, 0x94, 0xa7, 0x24, 0x77, 0x9d, 0xdc,
	0xe0, 0xea, 0x3a, 0xbb, 0xff, 0x33, 0x73, 0xe0, 0x24, 0x05, 0x70, 0xbf, 0xc8, 0xdd, 0x1c, 0xfe,
	0x31, 0x98, 0x85, 0x8a, 0x5a, 0xf9, 0xa3, 0x40, 0x3c, 0xcf, 0xcf, 0x1a, 0xca, 0x33, 0x92, 0x5f,
	0xbd, 0xbc, 0xc2, 0xf7, 0xad, 0x2c, 0x90, 0xfb, 0xcd, 0x7e, 0xdd, 0x4c, 0x66, 0x2f, 0xf7, 0x9b,
	0x10, 0xb8, 0xdf, 0x1d, 0xfd, 0xd6, 0xb2, 0x8d, 0x6e, 0x2a, 0xa7, 0x68, 0x72, 0x69, 0x58, 0x5c,
	0x68, 0x3c, 0x61, 0x71, 0x45, 0x53, 0x1f, 0x16, 0x57, 0x3c, 0xbe, 0xb0, 0xb8, 0x92, 0x7c, 0xe9,
	0xaa, 0x26, 0x1c, 0x86, 0xb9, 0xbb, 0x08, 0xcc, 0xf7, 0x52, 0x9d, 0xcf, 0x92, 0xfb, 0x4f, 0xb4,
	0xcf, 0x49, 0xfb, 0xb5, 0x86, 0xf2, 0x34, 0x78, 0x52, 0xca, 0x47, 0xc6, 0xdc, 0xf3, 0x30, 0x40,
	0x52, 0x88, 0x7d, 0x2d, 0x6d, 0xfc, 0x89, 0x9c, 0x60, 0xfc, 0xa4, 0x08, 0xcc, 0xf5, 0x06, 0x8e,
	0x4f, 0xb9, 0xc2, 0xa8, 0x67, 0x3f, 0xf5, 0x8f, 0xcf, 0xfb, 0x7b, 0x7a, 0xbb, 0xe9, 0x9d, 0x06,
	0xeb, 0x48, 0xf0, 0x16, 0xf3, 0x81, 0xff, 0x42, 0x22, 0xd7, 0xd6, 0x19, 0x4a, 0x8b, 0xfd, 0x81,
	0xff, 0x47, 0xcd, 0xc1, 0x49, 0x7e, 0xda, 0xff, 0x65, 0x00, 0x3a, 0x53, 0xb1, 0x78, 0x4f, 0xab,
	0xd6, 0x15, 0xdb, 0x46, 0xd4, 0x3d, 0xf2, 0xdb, 0x64, 0x8a, 0xe5, 0xc5, 0x99, 0xfe, 0xed, 0xe6,
	0xf9, 0x4b, 0x99, 0x03, 0xb7, 0xb2, 0x17, 0x87, 0xcd, 0xe1, 0x4f, 0x47, 0x6f, 0x9f, 0xa1, 0xd6,
	0x47, 0xe6, 0xec, 0x4d, 0xf3, 0x66, 0x9f, 0x79, 0x71, 0xe7, 0xea, 0xd7, 0x54, 0xa6, 0x49, 0xf3,
	0x37, 0x0c, 0xe5, 0x31, 0xb0, 0x46, 0xca, 0x45, 0x6b, 0xb9, 0x8e, 0x9d, 0x22, 0x7c, 0x93, 0x44,
	0x66, 0xe9, 0x9d, 0x10, 0x98, 0xc3, 0xe6, 0x53, 0x77, 0xe2, 0xf4, 0x35, 0x9f, 0x7c, 0x1b, 0xd6,
	0x3c, 0x3d, 0x51, 0x40, 0xbe, 0x8d, 0x1c, 0xf3, 0xe6, 0xbe, 0xbe, 0xfa, 0x0e, 0x9b, 0x9b, 0x3b,
	0xef, 0x07, 0x22, 0xd0, 0x99, 0x8e, 0x9d, 0xa7, 0x27, 0xb7, 0xb3, 0x89, 0x9d, 0xfa, 0xc1, 0x17,
	0x3f, 0xd9, 0xbf, 0x58, 0xfc, 0x97, 0x21, 0x70, 0x9f, 0x5f, 0xcd, 0xf4, 0x0f, 0x74, 0xdd, 0x34,
	0x9e, 0xd4, 0x0f, 0x38, 0x50, 0x08, 0x49, 0xfc, 0x7d, 0xee, 0x94, 0xfb, 0x5c, 0xdc, 0x3b, 0x49,
	0xec, 0x1e, 0x40, 0x13, 0x39, 0xa0, 0x5c, 0x1c, 0x2c, 0x02, 0x0b, 0xfc, 0x38, 0xf2, 0xae, 0x2c,
	0x5c, 0x5f, 0x7b, 0x1d, 0x40, 0xd2, 0x79, 0xe5, 0xa7, 0x78, 0x0e, 0x4d, 0x70, 0x35, 0x04, 0x1e,
	0x08, 0xd6, 0x21, 0xd3, 0x9f, 0xfd, 0x9f, 0x1d, 0x0f, 0xfb, 0xf3, 0xe9, 0xd1, 0xd8, 0x68, 0x2c,
	0xc4, 0xf4, 0x0f, 0x19, 0xca, 0x42, 0xb0, 0x40, 0xca, 0x49, 0x0f, 0x59, 0xd8, 0x2c, 0xde, 0x0a,
	0x01, 0x31, 0x1f, 0xcd, 0xbf, 0x5e, 0x94, 0x23, 0xa9, 0x46, 0x0b, 0xa0, 0x8a, 0x45, 0xbf, 0x3d,
	0x02, 0xa8, 0x60, 0x32, 0x07, 0xbd, 0x01, 0x9f, 0xf7, 0x7c, 0x5b, 0x6e, 0x65, 0xc0, 0xb7, 0xe5,
	0x72, 0xa8, 0x05, 0x1b, 0xba, 0x79, 0x89, 0xa1, 0x2c, 0x02, 0xa2, 0xc4, 0xbd, 0x43, 0x86, 0xa3,
	0xef, 0x5c, 0x37, 0xfb, 0xde, 0xa3, 0x5f, 0x05, 0xbf, 0x9e, 0xb9, 0xba, 0x53, 0x3c, 0x1d, 0x02,
	0x95, 0x0c, 0xd0, 0xf4, 0x9f, 0xb3, 0x56, 0x6e, 0xce, 0x02, 0x3d, 0xdd, 0xf2, 0xcc, 0x16, 0xf9,
	0xa2, 0x27, 0x8f, 0xba, 0x8b, 0x40, 0x58, 0x3b, 0x5c, 0x2a, 0x06, 0x55, 0x8e, 0xfd, 0xac, 0x8f,
	0x3b, 0x83, 0xc9, 0xcb, 0x5c, 0x06, 0x13, 0xb4, 0xb1, 0xc6, 0xdb, 0x85, 0x35, 0x3e, 0xdb, 0x85,
	0xbe, 0xf7, 0xff, 0xe1, 0xe6, 0x21, 0x67, 0xbf, 0x60, 0x7e, 0x7c, 0x3c, 0x33, 0xf0, 0xcb, 0x2f,
	0x3a, 0x91, 0x09, 0xfb, 0xd1, 0xb9, 0x92, 0xbc, 0x1f, 0x9d, 0x33, 0x8f, 0xed, 0x61, 0xe2, 0x42,
	0xeb, 0x49, 0x2e, 0x20, 0x9c, 0xa2, 0x04, 0xa7, 0xf0, 0x43, 0xb9, 0x80, 0xc2, 0x8e, 0x6f, 0x27,
	0x4e, 0x04, 0xb4, 0xd2, 0x95, 0xd7, 0xa7, 0x80, 0xc8, 0xcc, 0x35, 0x4e, 0x68, 0x41, 0xb9, 0xf3,
	0xfd, 0x03, 0x3b, 0xb4, 0xa0, 0xda, 0xfd, 0xed, 0x0d, 0x3b, 0xc4, 0x60, 0x15, 0x28, 0xa7, 0x1e,
	0x49, 0xc8, 0xf1, 0x89, 0x7a, 0xf3, 0xd0, 0x42, 0xd9, 0xfe, 0xa5, 0xda, 0xbf, 0x68, 0x5e, 0x51,
	0xd7, 0xe4, 0xcb, 0x75, 0x2c, 0x8f, 0x60, 0xc3, 0x8b, 0x88, 0xd2, 0x25, 0x92, 0x84, 0xda, 0x06,
	0xbe, 0x97, 0x84, 0xa9, 0x68, 0x7c, 0xc2, 0xc4, 0x5e, 0x43, 0xf9, 0x50, 0x0a, 0x7f, 0xfc, 0xc6,
	0x87, 0x52, 0x58, 0xa6, 0xee, 0x94, 0x82, 0x6a, 0xde, 0x7c, 0x9a, 0x6a, 0x05, 0xc8, 0x31, 0x71,
	0xc8, 0x09, 0xab, 0x1c, 0x17, 0x13, 0xb3, 0x79, 0x28, 0xf3, 0x31, 0x71, 0xb1, 0xf3, 0x35, 0xd8,
	0xdc, 0x4c, 0xfc, 0x6d, 0x50, 0x8e, 0xe3, 0x71, 0xec, 0x03, 0x4a, 0x6b, 0x1f, 0x23, 0xd9, 0x85,
	0xf2, 0xf2, 0xec, 0xd1, 0xcb, 0x23, 0x43, 0xef, 0x8c, 0xdc, 0xb8, 0x66, 0x89, 0x3c, 0x92, 0xfd,
	0xe8, 0xb6, 0xde, 0x9e, 0x74, 0x3c, 0x9a, 0x3d, 0xb9, 0xcb, 0x32, 0x51, 0xb7, 0x75, 0x74, 0x69,
	0x51, 0x0a, 0xae, 0xda, 0x0d, 0x99, 0x2b, 0xea, 0xd2, 0x80, 0xec, 0x00, 0x2e, 0x9a, 0x4f, 0x2c,
	0xa4, 0x9a, 0x86, 0x7e, 0x97, 0x4d, 0x3a, 0xf4, 0x9b, 0x06, 0x00, 0x94, 0x7b, 0x03, 0x00, 0x98,
	0x9b, 0x25, 0x12, 0x00, 0xf0, 0x47, 0xfc, 0x95, 0x4a, 0x38, 0xc0, 0xd1, 0xda, 0x8d, 0xe2, 0x3d,
	0x1d, 0xa5, 0xda, 0x2c, 0x19, 0xca, 0x12, 0xb0, 0x58, 0x72, 0x0b, 0x8b, 0x0c, 0xc9, 0x27, 0xe0,
	0xd8, 0x95, 0xfc, 0x7c, 0x08, 0xd4, 0xf0, 0x70, 0x5f, 0x97, 0xc5, 0x9c, 0x64, 0xc4, 0xf7, 0x60,
	0xef, 0x22, 0x13, 0xd6, 0x3d, 0x47, 0x05, 0x50, 0xc3, 0x7e, 0xab, 0x0b, 0xad, 0xe8, 0x1b, 0x41,
	0x98, 0x6a, 0x0e, 0xfa, 0x51, 0x1e, 0x14, 0x49, 0x5d, 0x6b, 0x97, 0x46, 0xd3, 0x89, 0x68, 0xbb,
	0x16, 0xed, 0x44, 0x2d, 0x3b, 0xe5, 0xa0, 0x0a, 0xd5, 0xe9, 0xc7, 0x1e, 0x96, 0xfb, 0x6d, 0x32,
	0x64, 0xbf, 0x0a, 0x46, 0x66, 0xef, 0x6f, 0x04, 0x9a, 0xef, 0xfb, 0xde, 0x59, 0x3e, 0xa8, 0xcd,
	0xeb, 0x1d, 0xb8, 0x0b, 0x45, 0x4c, 0xf9, 0xdd, 0xc5, 0xa0, 0x96, 0xb5, 0x8e, 0xdb, 0x48, 0x08,
	0x2e, 0x31, 0xa9, 0x18, 0xcf, 0x2c, 0x36, 0x2a, 0x0c, 0x47, 0xf3, 0xba, 0xbe, 0x0c, 0xca, 0x87,
	0x02, 0x33, 0xa1, 0xc4, 0x7c, 0x28, 0x30, 0xf7, 0xe4, 0x89, 0xf9, 0xa5, 0xb1, 0x64, 0x45, 0xf9,
	0xbf, 0x75, 0x4b, 0x33, 0x13, 0x17, 0x33, 0x66, 0x8d, 0x7f, 0x66, 0x62, 0x09, 0x87, 0x12, 0xe3,
	0xe8, 0x60, 0x74, 0xba, 0x88, 0x42, 0x89, 0xab, 0x3a, 0x92, 0xbd, 0xf5, 0x99, 0xb3, 0x37, 0xcc,
	0xdb, 0x6f, 0x67, 0x8e, 0x5d, 0x59, 0x4a, 0x23, 0x89, 0x4b, 0xbb, 0xb5, 0xee, 0x44, 0x6a, 0x1b,
	0x09, 0x0e, 0xc6, 0x26, 0x1c, 0x2e, 0x92, 0xc3, 0x38, 0x92, 0xb8, 0xfe, 0x99, 0xa5, 0x2a, 0x29,
	0xe2, 0xd6, 0xb4, 0x32, 0xff, 0x35, 0x0d, 0x1f, 0x61, 0xd2, 0x8c, 0x1e, 0xcc, 0x9a, 0xe6, 0x24,
	0x9b, 0x29, 0x47, 0xef, 0xca, 0x99, 0x74, 0xba, 0x11, 0x1f, 0x2b, 0x00, 0x26, 0xc4, 0xb9, 0xa7,
	0xb7, 0x5b, 0x86, 0x18, 0x59, 0xf2, 0x12, 0xe7, 0x70, 0x81, 0xf2, 0x41, 0xd0, 0xec, 0xca, 0x15,
	0xe4, 0xea, 0x19, 0x4d, 0xa5, 0x78, 0x33, 0x04, 0xea, 0xfc, 0x21, 0xa7, 0xbf, 0xc2, 0x7a, 0x8e,
	0x53, 0x58, 0xf3, 0x03, 0x17, 0x3f, 0x8c, 0x11, 0xa7, 0xb8, 0xd8, 0xb0, 0x74, 0x3e, 0x45, 0x6b,
	0x20, 0x35, 0x2c, 0x31, 0x72, 0x08, 0x47, 0x8d, 0xa7, 0x62, 0x50, 0xcb, 0x6a, 0x3a, 0x56, 0x8c,
	0xbe, 0x45, 0xa3, 0x36, 0x68, 0xa1, 0x6d, 0x4c, 0x21, 0xe9, 0xf0, 0x54, 0xca, 0xe5, 0xb8, 0x6b,
	0x27, 0x64, 0xc3, 0xa9, 0xcb, 0x11, 0xa9, 0x59, 0x80, 0x4c, 0x16, 0x4d, 0x4e, 0x26, 0x8b, 0x0b,
	0x97, 0xc9, 0x92, 0x42, 0x65, 0xb2, 0x74, 0x7c, 0x32, 0x59, 0x36, 0x6e, 0x99, 0x2c, 0x9f, 0xb0,
	0x4c, 0x86, 0xef, 0x9e, 0x4c, 0x06, 0xb0, 0x8a, 0x5c, 0x31, 0x72, 0x7b, 0x20, 0x73, 0xf4, 0x33,
	0x22, 0x93, 0xc3, 0x21, 0x50, 0xe7, 0x0f, 0xf9, 0x75, 0x93, 0x49, 0x72, 0xe3, 0x43, 0xe8, 0xe6,
	0x23, 0x92, 0xc4, 0x35, 0x82, 0x15, 0xc9, 0x9b, 0x02, 0xa8, 0x65, 0xd7, 0x40, 0x56, 0x24, 0xbb,
	0x03, 0x45, 0x52, 0x31, 0x94, 0x45, 0x3e, 0x22, 0xe9, 0x29, 0xc9, 0xb1, 0xdf, 0xf1, 0xc0, 0xda,
	0xc3, 0x0f, 0x18, 0x0e, 0x5d, 0x98, 0xc9, 0xf0, 0xb1, 0xed, 0xf1, 0x3f, 0x05, 0x50, 0xe7, 0x0f,
	0x3f, 0xfd, 0x4d, 0x90, 0x47, 0x0c, 0x65, 0x15, 0x58, 0x29, 0x05, 0x8e, 0x5f, 0x9e, 0xc3, 0x22,
	0xec, 0xe4, 0xa4, 0xfc, 0xdf, 0x21, 0x70, 0x9f, 0xb3, 0x5f, 0xa5, 0x2d, 0x90, 0x31, 0xf8, 0x08,
	0x08, 0x27, 0x53, 0x89, 0x1f, 0x68, 0x1d, 0x69, 0x7b, 0xaa, 0x90, 0xd2, 0x70, 0x4a, 0xe5, 0xf2,
	0xb1, 0x73, 0x9f, 0x65, 0x4f, 0x0d, 0xb4, 0xb5, 0xaa, 0x4e, 0xa1, 0xd5, 0xce, 0xf1, 0x3d, 0x09,
	0x31, 0xed, 0x1c, 0xdf, 0x93, 0xf2, 0xb1, 0x53, 0x7b, 0xb2, 0x9f, 0x9f, 0xe7, 0x5d, 0x4f, 0xc6,
	0x65, 0x89, 0x48, 0x6c, 0xaa, 0x92, 0x82, 0x75, 0x59, 0x49, 0x41, 0xba, 0x6c, 0x19, 0x17, 0x63,
	0x9d, 0x5b, 0x1f, 0xd1, 0x7b, 0xfd, 0x00, 0x22, 0xca, 0x75, 0xd8, 0xa5, 0x82, 0xac, 0x14, 0xec,
	0x31, 0xc9, 0x9f, 0x86, 0x40, 0xad, 0x6f, 0xa3, 0x7b, 0x49, 0xd3, 0x14, 0x4d, 0x81, 0xa6, 0x21,
	0x89, 0x95, 0x83, 0x88, 0xe1, 0x4b, 0x42, 0xcc, 0xbc, 0x1f, 0x14, 0x81, 0xda, 0x75, 0x28, 0x15,
	0x25, 0x9f, 0xd0, 0x73, 0xda, 0x73, 0x2f, 0xf9, 0x04, 0x48, 0x71, 0xe0, 0x27, 0x40, 0xfc, 0x0c,
	0x98, 0x92, 0x09, 0x1a, 0x30, 0xcd, 0x6f, 0x1a, 0x4a, 0x1a, 0xa4, 0xa4, 0x20, 0x52, 0xc9, 0x0f,
	0x66, 0xde, 0xb9, 0x60, 0xee, 0xbe, 0x40, 0x1c, 0x1f, 0x96, 0xdb, 0x51, 0x8c, 0xd4, 0xe1, 0xd9,
	0xa1, 0xce, 0x1d, 0xc1, 0xc1, 0xf8, 0x8e, 0x40, 0xb0, 0xb9, 0x23, 0x58, 0x43, 0xbe, 0x23, 0x78,
	0x5e, 0x2c, 0xfe, 0x3a, 0x04, 0xea, 0xfc, 0x5f, 0x3a, 0xfd, 0x79, 0xfc, 0x85, 0x82, 0x56, 0x53,
	0x8a, 0x11, 0xee, 0x11, 0xf3, 0x78, 0x15, 0x1f, 0xf4, 0x4b, 0xb8, 0xfc, 0x49, 0x43, 0x79, 0x1c,
	0x3c, 0x26, 0x05, 0xd2, 0x23, 0x78, 0x16, 0x30, 0xaf, 0xbf, 0x5d, 0x42, 0xf3, 0xab, 0x50, 0x02,
	0x07, 0x38, 0x4f, 0xdb, 0x8c, 0x10, 0x8a, 0x77, 0x8e, 0xcf, 0x76, 0x7d, 0xc2, 0xd7, 0x76, 0x45,
	0x98, 0xf1, 0xb6, 0x6b, 0x29, 0x6e, 0xfc, 0xe5, 0x5a, 0xad, 0x6b, 0x37, 0xbc, 0xf4, 0x05, 0x5b,
	0xad, 0x28, 0x7c, 0xc0, 0xb6, 0x5a, 0x57, 0x72, 0x56, 0xab, 0x3b, 0x13, 0x87, 0xd9, 0x7f, 0xd9,
	0x3c, 0x3a, 0xe0, 0xb2, 0x5d, 0xeb, 0x59, 0xdb, 0x95, 0xbd, 0xa6, 0x76, 0x5b, 0xad, 0x2e, 0x4f,
	0xe6, 0x19, 0x53, 0xe8, 0xc9, 0x5c, 0x31, 0x19, 0x4f, 0x66, 0xf9, 0x27, 0x2a, 0xa8, 0xa6, 0x4e,
	0x43, 0xcf, 0x63, 0x49, 0x80, 0xbf, 0x12, 0x40, 0x58, 0xd9, 0x1a, 0x8b, 0x77, 0x21, 0x5f, 0x4a,
	0xef, 0xed, 0xa1, 0x5d, 0xa7, 0x6a, 0x6f, 0x44, 0xe6, 0xe5, 0xaa, 0xd6, 0x93, 0xe2, 0x1f, 0x1b,
	0xca, 0x26, 0x58, 0x8f, 0x35, 0x3e, 0x85, 0x5c, 0x4e, 0x40, 0x33, 0xfd, 0x87, 0xcd, 0x03, 0xe7,
	0x48, 0x80, 0x37, 0xe2, 0x92, 0x48, 0xc1, 0x90, 0x3b, 0xff, 0x6a, 0xe4, 0xc7, 0xa1, 0xf9, 0xf0,
	0xc1, 0x26, 0xd7, 0xeb, 0x9b, 0xb6, 0xae, 0x6c, 0x8a, 0xd9, 0x83, 0xff, 0x8d, 0x00, 0x38, 0x17,
	0x27, 0x3b, 0x43, 0x74, 0x7d, 0x40, 0xb0, 0xa7, 0x47, 0x99, 0x46, 0x96, 0x16, 0x08, 0xa9, 0x27,
	0xc5, 0xdd, 0x82, 0x85, 0xec, 0x1c, 0xee, 0x23, 0x1a, 0x54, 0xec, 0x23, 0x8f, 0xfb, 0x16, 0x37,
	0x44, 0xf1, 0xa9, 0xb8, 0x79, 0xe4, 0x9d, 0xec, 0xf0, 0xc7, 0xb6, 0xab, 0x27, 0xf6, 0xfc, 0x34,
	0x8d, 0x43, 0x38, 0x7c, 0x1e, 0x21, 0x5b, 0x2f, 0x2e, 0xf4, 0x43, 0x16, 0x77, 0xd8, 0x64, 0x5f,
	0xef, 0x08, 0x12, 0xfc, 0x5f, 0x02, 0x98, 0x69, 0x5f, 0x00, 0xda, 0x28, 0x7b, 0x63, 0x01, 0x3c,
	0x30, 0x16, 0xbe, 0x0f, 0x15, 0x02, 0xa6, 0x27, 0xc5, 0xc3, 0x82, 0xa1, 0x3c, 0x07, 0xe7, 0x70,
	0x5f, 0x84, 0xb1, 0x91, 0x5d, 0x85, 0xbf, 0x35, 0x8d, 0xbf, 0x93, 0xe4, 0xce, 0x99, 0xd0, 0x10,
	0xf5, 0x6d, 0x84, 0x90, 0x7c, 0x14, 0x3e, 0x52, 0x00, 0x92, 0x4d, 0x3f, 0x72, 0xf7, 0xf9, 0x16,
	0xfc, 0x5b, 0x81, 0xcd, 0x65, 0x6f, 0x63, 0xfd, 0x90, 0xaf, 0xf3, 0x91, 0x17, 0xed, 0x25, 0x05,
	0xc1, 0xe9, 0x49, 0xf1, 0x87, 0x77, 0x03, 0xed, 0xc5, 0xb0, 0x90, 0xb9, 0x85, 0x7b, 0x42, 0x60,
	0x36, 0xbb, 0x9b, 0xcd, 0xc1, 0xce, 0x7e, 0x60, 0xfe, 0xec, 0xec, 0x0f, 0xa9, 0x27, 0xc5, 0x13,
	0x98, 0x9d, 0xd9, 0xb3, 0x66, 0x3b, 0x17, 0x46, 0xe4, 0x71, 0xdf, 0xe2, 0x71, 0xb0, 0xf3, 0xe3,
	0x91, 0x09, 0xce, 0xb4, 0xc5, 0xe1, 0xff, 0x4d, 0x00, 0xb3, 0xd9, 0x9d, 0x51, 0x0e, 0x42, 0xf8,
	0x81, 0xf9, 0x13, 0xc2, 0x1f, 0x52, 0x4f, 0x8a, 0x29, 0x43, 0x69, 0x84, 0x73, 0xd8, 0x93, 0x5f,
	0x87, 0x0e, 0xfe, 0xc5, 0x18, 0x43, 0x69, 0x12, 0x18, 0xfe, 0xa9, 0x00, 0x2a, 0x6d, 0xcf, 0x25,
	0x9c, 0x1a, 0x39, 0xd8, 0xb3, 0x89, 0x5c, 0x9f, 0x44, 0xc4, 0x7c, 0x20, 0x7a, 0x52, 0x7c, 0xcd,
	0x50, 0x1e, 0x80, 0x15, 0x6c, 0xfe, 0xa4, 0x08, 0xf7, 0x84, 0x86, 0xbe, 0x56, 0x7c, 0x72, 0x62,
	0x43, 0xa7, 0x75, 0x16, 0x0a, 0x37, 0x05, 0x50, 0x81, 0x13, 0xc3, 0x12, 0x0c, 0xa2, 0x3e, 0xfe,
	0xaa, 0x4e, 0xb5, 0x85, 0xc0, 0x82, 0x3c, 0x10, 0x7a, 0x52, 0xdc, 0x82, 0xc6, 0x4f, 0xf3, 0xd0,
	0xe2, 0xf1, 0xb3, 0x4f, 0x68, 0xfc, 0x2d, 0xe2, 0x13, 0x13, 0x1c, 0x3f, 0x0e, 0x7a, 0xb0, 0x86,
	0xff, 0x1f, 0x04, 0x50, 0xe3, 0x76, 0x8f, 0x85, 0x8b, 0x72, 0xae, 0x06, 0xc4, 0x27, 0x2b, 0xb2,
	0xb8, 0x00, 0x28, 0x3d, 0x29, 0x26, 0x0d, 0x65, 0x2d, 0x9c, 0xc9, 0xad, 0x0b, 0xc9, 0x44, 0xa2,
	0x2b, 0xd2, 0xe8, 0x29, 0xa2, 0x72, 0x45, 0xee, 0x0f, 0x4f, 0xee, 0xca, 0x0e, 0xef, 0xca, 0x0e,
	0xef, 0xcd, 0x0e, 0x9c, 0xcb, 0x1e, 0xd9, 0x83, 0x30, 0x5e, 0x24, 0xce, 0xcf, 0x81, 0xb1, 0xd5,
	0x07, 0xc1, 0xc9, 0x71, 0x0d, 0x41, 0x08, 0x2d, 0x08, 0x56, 0xf7, 0x14, 0x1b, 0x31, 0x1f, 0x88,
	0x9e, 0x14, 0xb7, 0x19, 0xca, 0xd3, 0x70, 0x26, 0xa7, 0xe0, 0x10, 0x2a, 0xcb, 0xbc, 0x1a, 0x11,
	0x47, 0xb4, 0xb8, 0xb4, 0xa1, 0x05, 0x8c, 0xf0, 0x58, 0x01, 0x1b, 0xf3, 0xe0, 0x41, 0x67, 0x0d,
	0xf7, 0xf3, 0x16, 0xfc, 0x2d, 0xfb, 0x75, 0x39, 0xab, 0x10, 0x27, 0xbe, 0x7d, 0x28, 0xf7, 0xa8,
	0x11, 0x90, 0xbf, 0xe2, 0xf7, 0x83, 0xd3, 0x93, 0xe2, 0x21, 0xc1, 0x50, 0x9e, 0x87, 0xb5, 0x9e,
	0x61, 0xe3, 0x0c, 0xb5, 0x11, 0x79, 0x1c, 0x98, 0x46, 0x71, 0x1b, 0x84, 0xf0, 0x23, 0x70, 0xf5,
	0xf8, 0x10, 0x6e, 0x42, 0x49, 0x6c, 0xe1, 0xbf, 0x10, 0x58, 0xff, 0x1d, 0x34, 0x97, 0x62, 0x8e,
	0x35, 0x8c, 0x4e, 0xe6, 0xc2, 0xbc, 0x30, 0x58, 0x47, 0x3c, 0x09, 0xab, 0x49, 0xf0, 0x08, 0x75,
	0x0d, 0x18, 0xff, 0x5c, 0x2e, 0x80, 0xf9, 0x78, 0x12, 0xfe, 0x17, 0x81, 0xbf, 0xdc, 0x0d, 0x10,
	0x32, 0x37, 0x88, 0xbf, 0x90, 0x79, 0xa1, 0xf4, 0xa4, 0xf8, 0x23, 0x43, 0x79, 0x0a, 0x56, 0x73,
	0xab, 0xd5, 0xd5, 0xb3, 0x91, 0x06, 0x57, 0x41, 0x7e, 0x01, 0x5b, 0x15, 0x19, 0x27, 0x63, 0x5a,
	0xf2, 0x76, 0xdb, 0x75, 0x29, 0x1b, 0x80, 0x9e, 0x1b, 0xc4, 0x1f, 0x3d, 0x2f, 0x94, 0x9e, 0x14,
	0x5f, 0x35, 0x14, 0x11, 0x56, 0x73, 0x8b, 0xd0, 0xd5, 0xb3, 0x11, 0x77, 0x01, 0xc6, 0x40, 0x9a,
	0x00, 0x06, 0xff, 0x28, 0x80, 0x3a, 0x1c, 0x08, 0x8c, 0x5f, 0xbc, 0x29, 0xc1, 0x60, 0xe2, 0xf5,
	0xc4, 0x08, 0x02, 0xb5, 0x30, 0x5a, 0x3e, 0x0e, 0x68, 0x3d, 0x29, 0xbe, 0x69, 0x28, 0xab, 0x61,
	0x1d, 0x09, 0x38, 0x26, 0xbe, 0x36, 0xcc, 0x0c, 0x06, 0xd6, 0x20, 0x5c, 0x9b, 0xc5, 0x87, 0xc7,
	0x29, 0x55, 0x71, 0x34, 0x16, 0x0b, 0xe5, 0xf3, 0x21, 0xb0, 0x98, 0x1d, 0x99, 0xce, 0x0e, 0xad,
	0x65, 0x5b, 0xcb, 0xeb, 0x0a, 0x76, 0xbf, 0xd2, 0xe1, 0x63, 0x39, 0x31, 0x0a, 0x6c, 0x67, 0x11,
	0xa3, 0x79, 0xa2, 0x4d, 0xf5, 0xa4, 0xf8, 0xb6, 0x30, 0x19, 0xd2, 0xfc, 0x9e, 0xa8, 0x4c, 0x88,
	0x34, 0xec, 0x30, 0x2c, 0x32, 0x5d, 0x09, 0x81, 0x85, 0x41, 0x13, 0xc8, 0xc0, 0xc2, 0x35, 0x05,
	0x4f, 0x3b, 0xd3, 0x6a, 0x02, 0xfc, 0x72, 0x56, 0x30, 0x14, 0x15, 0x2e, 0xc1, 0x4a, 0xaa, 0x9d,
	0x76, 0x14, 0x48, 0xa4, 0x42, 0x01, 0x11, 0xcd, 0xd6, 0x89, 0x4f, 0x4f, 0x96, 0x66, 0x16, 0xc9,
	0x7e, 0xca, 0xe9, 0x6c, 0x94, 0xf6, 0x2e, 0x97, 0xce, 0x26, 0x5f, 0xf0, 0xca, 0xa9, 0xb3, 0xe9,
	0x77, 0xaa, 0xc4, 0x17, 0x0c, 0x65, 0x11, 0xac, 0x71, 0x7f, 0xac, 0x2a, 0xe2, 0x29, 0x29, 0x40,
	0x33, 0x5b, 0x60, 0xf0, 0x5f, 0x09, 0xa0, 0xda, 0xf5, 0x0d, 0x50, 0xb8, 0x30, 0x78, 0xad, 0xb4,
	0xe3, 0x2d, 0x22, 0x8b, 0xf2, 0x03, 0x61, 0x33, 0x4e, 0x82, 0xb3, 0x7c, 0xbe, 0x27, 0x1a, 0xf1,
	0x2b, 0x44, 0x83, 0x5e, 0x0d, 0xe5, 0x1c, 0x83, 0xc6, 0x80, 0x74, 0x1a, 0x68, 0x34, 0xca, 0x5b,
	0x96, 0x21, 0x0d, 0xbd, 0xbe, 0xcb, 0x3e, 0xe6, 0x81, 0xef, 0x87, 0x43, 0x7d, 0xcc, 0x03, 0xff,
	0x6f, 0x67, 0x8a, 0xdf, 0x41, 0x08, 0xf9, 0x7c, 0x40, 0x33, 0xe2, 0x57, 0x88, 0x10, 0x7a, 0x48,
	0x5c, 0x90, 0x17, 0x21, 0x8b, 0x6d, 0x7e, 0x29, 0xe0, 0x48, 0x35, 0x0e, 0x81, 0x45, 0x39, 0x98,
	0xc2, 0x19, 0xfe, 0xe2, 0x02, 0xa0, 0xf4, 0xa4, 0xb8, 0xc9, 0x50, 0xea, 0x21, 0xf4, 0x46, 0xcb,
	0x45, 0x7c, 0xca, 0xd0, 0xd0, 0x17, 0xc2, 0xfc, 0x43, 0x87, 0x7f, 0x25, 0x00, 0xe8, 0x8d, 0x26,
	0xf1, 0x21, 0xbd, 0x6f, 0xe0, 0x8e, 0x0f, 0xe9, 0x03, 0x42, 0x53, 0xba, 0x0c, 0xa5, 0x01, 0xce,
	0xc6, 0xa7, 0x5a, 0xae, 0xf1, 0xfb, 0x96, 0x22, 0x0c, 0xd6, 0x44, 0x26, 0xc0, 0x4d, 0xd6, 0x6c,
	0xfc, 0x4a, 0x00, 0x55, 0x98, 0x07, 0xec, 0x1c, 0x0d, 0x62, 0x00, 0x93, 0x38, 0x1f, 0xed, 0xf7,
	0x13, 0x62, 0x37, 0x8c, 0x9e, 0x14, 0xbb, 0xad, 0x1d, 0xc1, 0x6c, 0xcc, 0x2f, 0xf8, 0xaf, 0x9d,
	0x84, 0x6f, 0x19, 0xff, 0x1c, 0xb0, 0xd3, 0x66, 0x0c, 0x96, 0x05, 0xe2, 0x03, 0x7e, 0x08, 0xd2,
	0x0e, 0x2c, 0x54, 0x7e, 0x21, 0x80, 0x19, 0xcf, 0x68, 0x69, 0x1b, 0x8f, 0xf9, 0x7e, 0xa2, 0xcb,
	0x22, 0x11, 0xcd, 0x0d, 0xa0, 0x27, 0xc5, 0x3f, 0x34, 0x14, 0x19, 0x56, 0x61, 0x11, 0xb6, 0xc7,
	0x1e, 0x65, 0x2d, 0xc7, 0x9e, 0x58, 0xb7, 0x46, 0x2d, 0x46, 0x0a, 0x91, 0xeb, 0x10, 0x84, 0xc2,
	0x34, 0xfd, 0xc8, 0x6a, 0xf9, 0x16, 0xec, 0x17, 0x40, 0x85, 0xc5, 0xc4, 0xf6, 0xa8, 0xa3, 0xbe,
	0x3c, 0xce, 0x0e, 0x7b, 0x41, 0x1e, 0x08, 0x3d, 0x29, 0x3e, 0x63, 0x28, 0x51, 0xcf, 0xb8, 0xab,
	0x7c, 0x46, 0x39, 0x0f, 0xe6, 0x24, 0x2b, 0xfc, 0xb5, 0x00, 0xaa, 0x30, 0x9f, 0xe6, 0x60, 0x0f,
	0x1e, 0xc0, 0x9f, 0x3d, 0xdc, 0x30, 0x7a, 0x52, 0xec, 0x31, 0x94, 0x27, 0x60, 0x15, 0x36, 0x5d,
	0x1d, 0xc6, 0xe0, 0x9f, 0xf3, 0x33, 0x46, 0x7d, 0xa4, 0x10, 0x3a, 0x5b, 0xfc, 0xf1, 0x73, 0x94,
	0x03, 0xde, 0xb2, 0x3a, 0x73, 0xe0, 0xc2, 0x03, 0xf8, 0xe3, 0xe2, 0x86, 0xd1, 0x93, 0xe2, 0x8b,
	0x88, 0xe0, 0xd8, 0x4e, 0x75, 0x08, 0xce, 0x3f, 0xe3, 0xe1, 0x4a, 0x85, 0x0e, 0xf7, 0x3f, 0x09,
	0x00, 0x72, 0x9f, 0x6e, 0xc7, 0x5f, 0x76, 0xf3, 0xea, 0x1b, 0x2f, 0x90, 0xbf, 0xbe, 0xf1, 0x83,
	0xc3, 0xe7, 0x41, 0x4f, 0xc2, 0x07, 0x79, 0xde, 0xb0, 0x13, 0x7a, 0xe2, 0xab, 0xaa, 0x48, 0xee,
	0x6a, 0x84, 0xd8, 0x32, 0xb8, 0xb4, 0x00, 0xc4, 0x9a, 0xd0, 0xd7, 0xea, 0xe0, 0xdf, 0x0a, 0x60,
	0xb6, 0xdf, 0x67, 0xe9, 0x7d, 0x4e, 0xbc, 0xfc, 0xbf, 0x5e, 0xef, 0x77, 0xe2, 0x15, 0xf4, 0x9d,
	0x7b, 0x31, 0xed, 0x8f, 0x61, 0xf6, 0xd6, 0xbb, 0xd9, 0xe1, 0xfe, 0x40, 0x0c, 0xd9, 0x6a, 0x84,
	0xe1, 0x72, 0xb8, 0xac, 0x10, 0x0c, 0xc9, 0xc7, 0xf3, 0xe1, 0x69, 0x01, 0x54, 0xa0, 0x21, 0xad,
	0x6f, 0xd7, 0x91, 0x71, 0x14, 0xf5, 0x1f, 0x31, 0xa9, 0xf6, 0x97, 0x6c, 0x1e, 0x42, 0x4f, 0x8a,
	0x6d, 0x68, 0x87, 0x84, 0x07, 0x9b, 0x68, 0xd7, 0x71, 0x16, 0xd6, 0x88, 0xbb, 0x20, 0x97, 0x6c,
	0x27, 0xda, 0x75, 0x6c, 0x13, 0x7d, 0x28, 0x80, 0x4a, 0xac, 0xb5, 0xd7, 0xb7, 0xeb, 0x6b, 0x13,
	0x7a, 0xda, 0xef, 0x50, 0x8e, 0xad, 0x0f, 0x38, 0x94, 0xe3, 0x41, 0xf4, 0xa4, 0xf8, 0x2c, 0x11,
	0x06, 0x4b, 0xc3, 0x27, 0xda, 0xf5, 0x68, 0x47, 0x42, 0x4f, 0x47, 0x5c, 0xcf, 0xb9, 0x94, 0xba,
	0x35, 0x42, 0x0b, 0xc6, 0x92, 0x82, 0x5f, 0xdb, 0x06, 0x0f, 0x97, 0x6e, 0xee, 0xa1, 0xc2, 0xd2,
	0x5b, 0x06, 0x1a, 0x3c, 0xee, 0x84, 0x7f, 0x62, 0xbb, 0xa5, 0xe9, 0x6b, 0x5d, 0x19, 0x20, 0x69,
	0x6e, 0x89, 0x48, 0x50, 0x05, 0xc2, 0x62, 0x89, 0x28, 0xfa, 0x61, 0x41, 0x8b, 0xbe, 0x8f, 0x12,
	0xad, 0x5b, 0xb8, 0xfc, 0x85, 0xc0, 0xc7, 0xe8, 0x07, 0xec, 0x9f, 0x7d, 0x72, 0x5f, 0x04, 0x58,
	0x3e, 0x1e, 0x2c, 0x5e, 0x67, 0x38, 0x3d, 0x20, 0x4f, 0x46, 0x24, 0x77, 0x35, 0x3e, 0x7e, 0x83,
	0x05, 0x60, 0x04, 0xff, 0x46, 0x00, 0x55, 0x7c, 0x56, 0x2d, 0x1f, 0x7d, 0xea, 0x49, 0x5f, 0xe6,
	0xa3, 0x4f, 0xbd, 0xa9, 0xb9, 0xc4, 0x5d, 0x82, 0xa1, 0xb4, 0xc2, 0x28, 0x9b, 0xa0, 0xcb, 0xda,
	0xc6, 0x78, 0x26, 0x26, 0x2f, 0x04, 0xb6, 0x8e, 0x44, 0x39, 0x3f, 0x3e, 0x4d, 0x3f, 0x4a, 0x7a,
	0x36, 0xcf, 0x7f, 0x4f, 0x56, 0x67, 0x1b, 0xc1, 0x68, 0xce, 0x79, 0x08, 0x5e, 0x9d, 0x39, 0xe4,
	0xde, 0x13, 0x0c, 0xe5, 0x65, 0xb8, 0xd4, 0x35, 0x0f, 0x74, 0xc4, 0x23, 0x37, 0x9c, 0x75, 0x0e,
	0xcf, 0x4d, 0xa4, 0x70, 0x50, 0x8c, 0x2e, 0x7c, 0x78, 0x3c, 0xe8, 0xd2, 0x72, 0x1d, 0x7e, 0xc4,
	0xb9, 0x5b, 0xb1, 0x11, 0xa5, 0x50, 0xca, 0x6b, 0x7a, 0xdb, 0xe1, 0xfc, 0x85, 0x9a, 0xe9, 0xb7,
	0x04, 0x43, 0xf9, 0x23, 0xd8, 0x9c, 0x1b, 0x37, 0x12, 0x08, 0x7c, 0xc5, 0xbc, 0x75, 0xac, 0x3e,
	0xf6, 0x7a, 0x0c, 0x2f, 0x3b, 0x4b, 0x09, 0x5d, 0x26, 0xd1, 0x16, 0x11, 0xea, 0x1b, 0xb0, 0x79,
	0x3c, 0x84, 0xc2, 0xe6, 0xf3, 0xf7, 0xb1, 0x35, 0xad, 0xc3, 0x01, 0x97, 0x87, 0x34, 0x47, 0xaf,
	0x86, 0x02, 0x76, 0x5a, 0x0e, 0xc5, 0x96, 0x8f, 0x03, 0x5a, 0x4f, 0x8a, 0xd7, 0x04, 0x43, 0xe9,
	0x82, 0xab, 0x33, 0xef, 0x5d, 0xf1, 0x53, 0x4a, 0x39, 0xb1, 0x8f, 0x4c, 0xa8, 0x15, 0xa2, 0xd6,
	0x53, 0xe2, 0x24, 0xa8, 0x65, 0x49, 0xd3, 0xe9, 0x10, 0x78, 0x20, 0x57, 0x92, 0x13, 0xb8, 0xa2,
	0x00, 0x26, 0xcb, 0x77, 0xae, 0xe8, 0xcb, 0x6a, 0xe7, 0x05, 0x43, 0xf9, 0x01, 0x5c, 0xc5, 0xee,
	0xc5, 0xd1, 0x61, 0x77, 0x01, 0x3c, 0x36, 0x91, 0x46, 0x88, 0x5c, 0x2b, 0x61, 0x53, 0xfe, 0x2d,
	0x19, 0x3e, 0x6c, 0x21, 0x24, 0x83, 0x97, 0x42, 0x60, 0x5e, 0xee, 0xc8, 0x64, 0x28, 0x17, 0xc4,
	0x29, 0x3c, 0x91, 0x56, 0x8d, 0xbb, 0x8d, 0x9e, 0x14, 0x4f, 0x09, 0x86, 0xf2, 0x2a, 0x5c, 0x8e,
	0xb9, 0xa5, 0x40, 0xec, 0x23, 0xe3, 0x03, 0xc7, 0xe7, 0x20, 0xe2, 0x78, 0xc9, 0x64, 0xb1, 0xd2,
	0xa8, 0xcb, 0x15, 0xc2, 0xf6, 0x3a, 0xca, 0xed, 0x0a, 0xc1, 0xf8, 0xd8, 0xe6, 0x71, 0x85, 0x60,
	0xbd, 0x53, 0xc5, 0x1f, 0x19, 0xca, 0xb3, 0xf0, 0x3e, 0x6c, 0x03, 0xd0, 0xcd, 0x37, 0x75, 0x2e,
	0x8a, 0xac, 0xf0, 0x2f, 0xb7, 0x77, 0x2e, 0x57, 0x8f, 0x65, 0xcf, 0x0f, 0x61, 0x37, 0x0f, 0xec,
	0x98, 0x54, 0x80, 0xff, 0x03, 0xed, 0xc4, 0x42, 0xf5, 0xff, 0x0a, 0xfc, 0x35, 0x79, 0x0e, 0x54,
	0x03, 0xbc, 0xc8, 0xf3, 0x5c, 0x93, 0x73, 0xa8, 0xbe, 0x23, 0x4c, 0x3d, 0xae, 0xb9, 0x2f, 0xc7,
	0x69, 0x27, 0xf4, 0x78, 0xc2, 0xf1, 0xd0, 0x43, 0x33, 0xfd, 0x7f, 0x5c, 0x97, 0xe3, 0x39, 0xd0,
	0x0f, 0xf0, 0xa6, 0xce, 0x73, 0x39, 0xce, 0xa1, 0x7f, 0xf0, 0x2e, 0xa0, 0xff, 0xa8, 0x34, 0x41,
	0xf4, 0xe1, 0x9f, 0x92, 0x0c, 0xd9, 0x2e, 0xbf, 0x53, 0x98, 0xcb, 0xbd, 0x83, 0xf5, 0xef, 0x8d,
	0xd4, 0x17, 0x06, 0xa8, 0x27, 0xc5, 0x97, 0xd1, 0x99, 0x99, 0xd7, 0x97, 0x35, 0xe2, 0x53, 0x56,
	0x80, 0x93, 0x87, 0xfd, 0x2d, 0xc9, 0xbf, 0x16, 0xc0, 0x6c, 0x3f, 0xa7, 0x42, 0x9f, 0xe9, 0x0b,
	0x70, 0x00, 0xf5, 0x99, 0xbe, 0x20, 0x2f, 0x45, 0xf1, 0x35, 0x43, 0x59, 0x01, 0xef, 0xf3, 0x77,
	0x55, 0x8c, 0x04, 0x94, 0x23, 0x6c, 0x9a, 0x44, 0xa9, 0x90, 0x2b, 0x76, 0xfc, 0x65, 0x79, 0x8b,
	0x2d, 0xaf, 0x09, 0x20, 0x6c, 0x9f, 0x04, 0xfb, 0xb8, 0x95, 0xb1, 0x29, 0x1d, 0x7c, 0xdc, 0xca,
	0xb8, 0x8c, 0x06, 0xd6, 0xb0, 0x1f, 0x85, 0x15, 0xec, 0x42, 0x13, 0xa9, 0xf7, 0x5e, 0x4f, 0xba,
	0xaf, 0x26, 0x99, 0xad, 0xe9, 0x12, 0xb8, 0x38, 0xc7, 0xf0, 0x29, 0x67, 0xb5, 0xbe, 0x05, 0x2f,
	0x0a, 0x60, 0x06, 0x13, 0xfd, 0xee, 0x73, 0x46, 0xc6, 0x07, 0xd2, 0x47, 0xa2, 0xb9, 0x01, 0xf0,
	0x69, 0x6b, 0x23, 0x75, 0x21, 0x22, 0xb4, 0xd5, 0xa3, 0x84, 0x79, 0xfc, 0x8b, 0xd1, 0x90, 0x1f,
	0x84, 0x73, 0x83, 0x87, 0xac, 0x5b, 0x03, 0xad, 0x60, 0x95, 0x94, 0x8f, 0xe5, 0xed, 0x0a, 0xb7,
	0xf5, 0xb1, 0xbc, 0xdd, 0xa1, 0xa6, 0xe2, 0x8b, 0x86, 0x32, 0x0f, 0x56, 0xe2, 0x23, 0x26, 0x32,
	0xa8, 0x08, 0xff, 0x88, 0xc6, 0x26, 0x45, 0x0a, 0x23, 0xa7, 0xc5, 0x08, 0x83, 0x02, 0xa8, 0xe4,
	0x22, 0x2b, 0x7d, 0x76, 0xd1, 0xee, 0xd8, 0xd2, 0x88, 0x98, 0x0f, 0x44, 0x4f, 0x8a, 0xbf, 0xcf,
	0xf8, 0xe9, 0x78, 0xe8, 0xea, 0x5b, 0x8c, 0xc6, 0x1e, 0x95, 0x72, 0xd1, 0xb5, 0x59, 0x90, 0x5a,
	0x62, 0x96, 0x8a, 0x5b, 0x00, 0xea, 0xe8, 0x9e, 0x24, 0x4a, 0x5c, 0x25, 0xa3, 0xca, 0x86, 0xb6,
	0x68, 0x6b, 0xa2, 0x43, 0x2e, 0x59, 0xd1, 0xb8, 0xb2, 0x71, 0x85, 0x24, 0x08, 0x72, 0x4d, 0x2c,
	0x99, 0xec, 0x8a, 0x77, 0xa0, 0xc0, 0xe8, 0xa6, 0x1f, 0xe8, 0x89, 0x9e, 0x66, 0x4f, 0xc9, 0x77,
	0x61, 0x63, 0xd3, 0xe3, 0xae, 0x17, 0xfe, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x14, 0x1b, 0xfa,
	0xd9, 0xab, 0xea, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ResourceManagerClient is the client API for ResourceManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ResourceManagerClient interface {
	//* common service
	Available(ctx context.Context, in *AvailableReq, opts ...grpc.CallOption) (*AvailableResp, error)
	//* resource service
	//* device consumer
	CreateDeviceConsumer(ctx context.Context, in *CreateDeviceConsumerReq, opts ...grpc.CallOption) (*CreateDeviceConsumerResp, error)
	GetDeviceConsumer(ctx context.Context, in *GetDeviceConsumerReq, opts ...grpc.CallOption) (*GetDeviceConsumerResp, error)
	ListDeviceConsumer(ctx context.Context, in *ListDeviceConsumerReq, opts ...grpc.CallOption) (*ListDeviceConsumerResp, error)
	UpdateDeviceConsumer(ctx context.Context, in *UpdateDeviceConsumerReq, opts ...grpc.CallOption) (*UpdateDeviceConsumerResp, error)
	DeleteDeviceConsumer(ctx context.Context, in *DeleteDeviceConsumerReq, opts ...grpc.CallOption) (*DeleteDeviceConsumerResp, error)
	ConsumeDevice(ctx context.Context, in *ConsumeDeviceReq, opts ...grpc.CallOption) (*ConsumeDeviceResp, error)
	ReturnDevice(ctx context.Context, in *ReturnDeviceReq, opts ...grpc.CallOption) (*ReturnDeviceResp, error)
	//* device pool
	CreateDevicePool(ctx context.Context, in *CreateDevicePoolReq, opts ...grpc.CallOption) (*CreateDevicePoolResp, error)
	GetDevicePool(ctx context.Context, in *GetDevicePoolReq, opts ...grpc.CallOption) (*GetDevicePoolResp, error)
	GetDevicePoolEvent(ctx context.Context, in *GetDevicePoolEventReq, opts ...grpc.CallOption) (*GetDevicePoolEventResp, error)
	ListDevicePool(ctx context.Context, in *ListDevicePoolReq, opts ...grpc.CallOption) (*ListDevicePoolResp, error)
	UpdateDevicePool(ctx context.Context, in *UpdateDevicePoolReq, opts ...grpc.CallOption) (*UpdateDevicePoolResp, error)
	DeleteDevicePool(ctx context.Context, in *DeleteDevicePoolReq, opts ...grpc.CallOption) (*DeleteDevicePoolResp, error)
	ImportDeviceToDevicePool(ctx context.Context, in *ImportDeviceToDevicePoolReq, opts ...grpc.CallOption) (*ImportDeviceToDevicePoolResp, error)
	ImportDevicesToDevicePoolByBkAssetIDs(ctx context.Context, in *ImportDevicesToDevicePoolByBkAssetIDsReq, opts ...grpc.CallOption) (*ImportDevicesToDevicePoolByBkAssetIDsResp, error)
	ImportDeviceToDevicePoolByBkAssetID(ctx context.Context, in *ImportDeviceToDevicePoolByBkAssetIDReq, opts ...grpc.CallOption) (*ImportDeviceToDevicePoolResp, error)
	// device bill
	ListDeviceBill(ctx context.Context, in *ListDeviceBillReq, opts ...grpc.CallOption) (*ListDeviceBillResp, error)
	// device record
	GetDeviceRecord(ctx context.Context, in *GetDeviceRecordReq, opts ...grpc.CallOption) (*GetDeviceRecordResp, error)
	CreateDeviceRecord(ctx context.Context, in *CreateDeviceRecordReq, opts ...grpc.CallOption) (*CreateDeviceRecordResp, error)
	ListDeviceRecord(ctx context.Context, in *ListDeviceRecordReq, opts ...grpc.CallOption) (*ListDeviceRecordResp, error)
	UpdateDeviceRecord(ctx context.Context, in *UpdateDeviceRecordReq, opts ...grpc.CallOption) (*UpdateDeviceRecordResp, error)
	// provider
	CreateProvider(ctx context.Context, in *CreateProviderReq, opts ...grpc.CallOption) (*CreateProviderResp, error)
	GetProvider(ctx context.Context, in *GetProviderReq, opts ...grpc.CallOption) (*GetProviderResp, error)
	ListProvider(ctx context.Context, in *ListProviderReq, opts ...grpc.CallOption) (*ListProviderResp, error)
	UpdateProvider(ctx context.Context, in *UpdateProviderReq, opts ...grpc.CallOption) (*UpdateProviderResp, error)
	DeleteProvider(ctx context.Context, in *DeleteProviderReq, opts ...grpc.CallOption) (*DeleteProviderResp, error)
	QueryProviderOrder(ctx context.Context, in *QueryProviderOrderReq, opts ...grpc.CallOption) (*QueryProviderOrderResp, error)
	QueryProviderNetwork(ctx context.Context, in *QueryProviderNetworkReq, opts ...grpc.CallOption) (*QueryProviderNetworkResp, error)
	// obs
	QueryObsBill(ctx context.Context, in *QueryObsBillReq, opts ...grpc.CallOption) (*QueryObsBillResp, error)
	CreateObsCost(ctx context.Context, in *CreateObsCostReq, opts ...grpc.CallOption) (*CreateObsCostResp, error)
	// 资源池
	CreateResourcePool(ctx context.Context, in *CreateResourcePoolReq, opts ...grpc.CallOption) (*CreateResourcePoolResp, error)
	ListResourcePool(ctx context.Context, in *ListResourcePoolReq, opts ...grpc.CallOption) (*ListResourcePoolResp, error)
	ImportResource(ctx context.Context, in *ImportResourceReq, opts ...grpc.CallOption) (*ImportResourceResp, error)
	ListResource(ctx context.Context, in *ListResourceReq, opts ...grpc.CallOption) (*ListResourceResp, error)
	ListDeviceRecordByPool(ctx context.Context, in *ListDeviceRecordByPoolReq, opts ...grpc.CallOption) (*ListDeviceRecordResp, error)
	CreateDeviceRecordByPool(ctx context.Context, in *CreateDeviceRecordByPoolReq, opts ...grpc.CallOption) (*CreateDeviceRecordByPoolResp, error)
	ListDeviceRecordByDevicePool(ctx context.Context, in *ListDeviceRecordByDevicePoolReq, opts ...grpc.CallOption) (*ListDeviceRecordResp, error)
	CreateDeviceRecordByDevicePool(ctx context.Context, in *CreateDeviceRecordByDevicePoolReq, opts ...grpc.CallOption) (*CreateDeviceRecordByDevicePoolResp, error)
	// rpc ReturnDeviceByDeviceRecord(ListDeviceRecordByPoolReq) returns (ListDeviceRecordResp) {
	//     option (google.api.http) = {
	//         put : "/resourcemanager/v1/resource_pools/{poolID}/device_records/{deviceRecordID}/return"
	//     };
	//     option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
	//         description : "返回资源池(自建)中的设备记录(aka订单)中的设备"
	//         summary : "返回资源池(自建)中的设备记录(aka订单)中的设备"
	//     };
	// }
	CreateDeviceInstance(ctx context.Context, in *CreateDeviceInstanceReq, opts ...grpc.CallOption) (*CreateDeviceInstanceResp, error)
	UpdateDeviceInstance(ctx context.Context, in *UpdateDeviceInstanceReq, opts ...grpc.CallOption) (*UpdateDeviceInstanceResp, error)
	DeleteDeviceInstance(ctx context.Context, in *DeleteDeviceInstanceReq, opts ...grpc.CallOption) (*DeleteDeviceInstanceResp, error)
	ListDeviceInstances(ctx context.Context, in *ListDeviceInstancesReq, opts ...grpc.CallOption) (*ListDeviceInstancesResp, error)
	EnableDeviceConsumer(ctx context.Context, in *EnableDeviceConsumerReq, opts ...grpc.CallOption) (*EnableDeviceConsumerResp, error)
	//* device
	GetDevice(ctx context.Context, in *GetDeviceReq, opts ...grpc.CallOption) (*GetDeviceResp, error)
	ListDevices(ctx context.Context, in *ListDevicesReq, opts ...grpc.CallOption) (*ListDevicesResp, error)
	UpdateDevice(ctx context.Context, in *UpdateDeviceReq, opts ...grpc.CallOption) (*UpdateDeviceResp, error)
	DeleteDevices(ctx context.Context, in *DeleteDevicesReq, opts ...grpc.CallOption) (*DeleteDevicesResp, error)
}

type resourceManagerClient struct {
	cc *grpc.ClientConn
}

func NewResourceManagerClient(cc *grpc.ClientConn) ResourceManagerClient {
	return &resourceManagerClient{cc}
}

func (c *resourceManagerClient) Available(ctx context.Context, in *AvailableReq, opts ...grpc.CallOption) (*AvailableResp, error) {
	out := new(AvailableResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/Available", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) CreateDeviceConsumer(ctx context.Context, in *CreateDeviceConsumerReq, opts ...grpc.CallOption) (*CreateDeviceConsumerResp, error) {
	out := new(CreateDeviceConsumerResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/CreateDeviceConsumer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) GetDeviceConsumer(ctx context.Context, in *GetDeviceConsumerReq, opts ...grpc.CallOption) (*GetDeviceConsumerResp, error) {
	out := new(GetDeviceConsumerResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/GetDeviceConsumer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) ListDeviceConsumer(ctx context.Context, in *ListDeviceConsumerReq, opts ...grpc.CallOption) (*ListDeviceConsumerResp, error) {
	out := new(ListDeviceConsumerResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/ListDeviceConsumer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) UpdateDeviceConsumer(ctx context.Context, in *UpdateDeviceConsumerReq, opts ...grpc.CallOption) (*UpdateDeviceConsumerResp, error) {
	out := new(UpdateDeviceConsumerResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/UpdateDeviceConsumer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) DeleteDeviceConsumer(ctx context.Context, in *DeleteDeviceConsumerReq, opts ...grpc.CallOption) (*DeleteDeviceConsumerResp, error) {
	out := new(DeleteDeviceConsumerResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/DeleteDeviceConsumer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) ConsumeDevice(ctx context.Context, in *ConsumeDeviceReq, opts ...grpc.CallOption) (*ConsumeDeviceResp, error) {
	out := new(ConsumeDeviceResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/ConsumeDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) ReturnDevice(ctx context.Context, in *ReturnDeviceReq, opts ...grpc.CallOption) (*ReturnDeviceResp, error) {
	out := new(ReturnDeviceResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/ReturnDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) CreateDevicePool(ctx context.Context, in *CreateDevicePoolReq, opts ...grpc.CallOption) (*CreateDevicePoolResp, error) {
	out := new(CreateDevicePoolResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/CreateDevicePool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) GetDevicePool(ctx context.Context, in *GetDevicePoolReq, opts ...grpc.CallOption) (*GetDevicePoolResp, error) {
	out := new(GetDevicePoolResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/GetDevicePool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) GetDevicePoolEvent(ctx context.Context, in *GetDevicePoolEventReq, opts ...grpc.CallOption) (*GetDevicePoolEventResp, error) {
	out := new(GetDevicePoolEventResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/GetDevicePoolEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) ListDevicePool(ctx context.Context, in *ListDevicePoolReq, opts ...grpc.CallOption) (*ListDevicePoolResp, error) {
	out := new(ListDevicePoolResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/ListDevicePool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) UpdateDevicePool(ctx context.Context, in *UpdateDevicePoolReq, opts ...grpc.CallOption) (*UpdateDevicePoolResp, error) {
	out := new(UpdateDevicePoolResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/UpdateDevicePool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) DeleteDevicePool(ctx context.Context, in *DeleteDevicePoolReq, opts ...grpc.CallOption) (*DeleteDevicePoolResp, error) {
	out := new(DeleteDevicePoolResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/DeleteDevicePool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) ImportDeviceToDevicePool(ctx context.Context, in *ImportDeviceToDevicePoolReq, opts ...grpc.CallOption) (*ImportDeviceToDevicePoolResp, error) {
	out := new(ImportDeviceToDevicePoolResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/ImportDeviceToDevicePool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) ImportDevicesToDevicePoolByBkAssetIDs(ctx context.Context, in *ImportDevicesToDevicePoolByBkAssetIDsReq, opts ...grpc.CallOption) (*ImportDevicesToDevicePoolByBkAssetIDsResp, error) {
	out := new(ImportDevicesToDevicePoolByBkAssetIDsResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/ImportDevicesToDevicePoolByBkAssetIDs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) ImportDeviceToDevicePoolByBkAssetID(ctx context.Context, in *ImportDeviceToDevicePoolByBkAssetIDReq, opts ...grpc.CallOption) (*ImportDeviceToDevicePoolResp, error) {
	out := new(ImportDeviceToDevicePoolResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/ImportDeviceToDevicePoolByBkAssetID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) ListDeviceBill(ctx context.Context, in *ListDeviceBillReq, opts ...grpc.CallOption) (*ListDeviceBillResp, error) {
	out := new(ListDeviceBillResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/ListDeviceBill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) GetDeviceRecord(ctx context.Context, in *GetDeviceRecordReq, opts ...grpc.CallOption) (*GetDeviceRecordResp, error) {
	out := new(GetDeviceRecordResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/GetDeviceRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) CreateDeviceRecord(ctx context.Context, in *CreateDeviceRecordReq, opts ...grpc.CallOption) (*CreateDeviceRecordResp, error) {
	out := new(CreateDeviceRecordResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/CreateDeviceRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) ListDeviceRecord(ctx context.Context, in *ListDeviceRecordReq, opts ...grpc.CallOption) (*ListDeviceRecordResp, error) {
	out := new(ListDeviceRecordResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/ListDeviceRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) UpdateDeviceRecord(ctx context.Context, in *UpdateDeviceRecordReq, opts ...grpc.CallOption) (*UpdateDeviceRecordResp, error) {
	out := new(UpdateDeviceRecordResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/UpdateDeviceRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) CreateProvider(ctx context.Context, in *CreateProviderReq, opts ...grpc.CallOption) (*CreateProviderResp, error) {
	out := new(CreateProviderResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/CreateProvider", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) GetProvider(ctx context.Context, in *GetProviderReq, opts ...grpc.CallOption) (*GetProviderResp, error) {
	out := new(GetProviderResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/GetProvider", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) ListProvider(ctx context.Context, in *ListProviderReq, opts ...grpc.CallOption) (*ListProviderResp, error) {
	out := new(ListProviderResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/ListProvider", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) UpdateProvider(ctx context.Context, in *UpdateProviderReq, opts ...grpc.CallOption) (*UpdateProviderResp, error) {
	out := new(UpdateProviderResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/UpdateProvider", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) DeleteProvider(ctx context.Context, in *DeleteProviderReq, opts ...grpc.CallOption) (*DeleteProviderResp, error) {
	out := new(DeleteProviderResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/DeleteProvider", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) QueryProviderOrder(ctx context.Context, in *QueryProviderOrderReq, opts ...grpc.CallOption) (*QueryProviderOrderResp, error) {
	out := new(QueryProviderOrderResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/QueryProviderOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) QueryProviderNetwork(ctx context.Context, in *QueryProviderNetworkReq, opts ...grpc.CallOption) (*QueryProviderNetworkResp, error) {
	out := new(QueryProviderNetworkResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/QueryProviderNetwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) QueryObsBill(ctx context.Context, in *QueryObsBillReq, opts ...grpc.CallOption) (*QueryObsBillResp, error) {
	out := new(QueryObsBillResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/QueryObsBill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) CreateObsCost(ctx context.Context, in *CreateObsCostReq, opts ...grpc.CallOption) (*CreateObsCostResp, error) {
	out := new(CreateObsCostResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/CreateObsCost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) CreateResourcePool(ctx context.Context, in *CreateResourcePoolReq, opts ...grpc.CallOption) (*CreateResourcePoolResp, error) {
	out := new(CreateResourcePoolResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/CreateResourcePool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) ListResourcePool(ctx context.Context, in *ListResourcePoolReq, opts ...grpc.CallOption) (*ListResourcePoolResp, error) {
	out := new(ListResourcePoolResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/ListResourcePool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) ImportResource(ctx context.Context, in *ImportResourceReq, opts ...grpc.CallOption) (*ImportResourceResp, error) {
	out := new(ImportResourceResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/ImportResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) ListResource(ctx context.Context, in *ListResourceReq, opts ...grpc.CallOption) (*ListResourceResp, error) {
	out := new(ListResourceResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/ListResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) ListDeviceRecordByPool(ctx context.Context, in *ListDeviceRecordByPoolReq, opts ...grpc.CallOption) (*ListDeviceRecordResp, error) {
	out := new(ListDeviceRecordResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/ListDeviceRecordByPool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) CreateDeviceRecordByPool(ctx context.Context, in *CreateDeviceRecordByPoolReq, opts ...grpc.CallOption) (*CreateDeviceRecordByPoolResp, error) {
	out := new(CreateDeviceRecordByPoolResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/CreateDeviceRecordByPool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) ListDeviceRecordByDevicePool(ctx context.Context, in *ListDeviceRecordByDevicePoolReq, opts ...grpc.CallOption) (*ListDeviceRecordResp, error) {
	out := new(ListDeviceRecordResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/ListDeviceRecordByDevicePool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) CreateDeviceRecordByDevicePool(ctx context.Context, in *CreateDeviceRecordByDevicePoolReq, opts ...grpc.CallOption) (*CreateDeviceRecordByDevicePoolResp, error) {
	out := new(CreateDeviceRecordByDevicePoolResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/CreateDeviceRecordByDevicePool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) CreateDeviceInstance(ctx context.Context, in *CreateDeviceInstanceReq, opts ...grpc.CallOption) (*CreateDeviceInstanceResp, error) {
	out := new(CreateDeviceInstanceResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/CreateDeviceInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) UpdateDeviceInstance(ctx context.Context, in *UpdateDeviceInstanceReq, opts ...grpc.CallOption) (*UpdateDeviceInstanceResp, error) {
	out := new(UpdateDeviceInstanceResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/UpdateDeviceInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) DeleteDeviceInstance(ctx context.Context, in *DeleteDeviceInstanceReq, opts ...grpc.CallOption) (*DeleteDeviceInstanceResp, error) {
	out := new(DeleteDeviceInstanceResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/DeleteDeviceInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) ListDeviceInstances(ctx context.Context, in *ListDeviceInstancesReq, opts ...grpc.CallOption) (*ListDeviceInstancesResp, error) {
	out := new(ListDeviceInstancesResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/ListDeviceInstances", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) EnableDeviceConsumer(ctx context.Context, in *EnableDeviceConsumerReq, opts ...grpc.CallOption) (*EnableDeviceConsumerResp, error) {
	out := new(EnableDeviceConsumerResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/EnableDeviceConsumer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) GetDevice(ctx context.Context, in *GetDeviceReq, opts ...grpc.CallOption) (*GetDeviceResp, error) {
	out := new(GetDeviceResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/GetDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) ListDevices(ctx context.Context, in *ListDevicesReq, opts ...grpc.CallOption) (*ListDevicesResp, error) {
	out := new(ListDevicesResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/ListDevices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) UpdateDevice(ctx context.Context, in *UpdateDeviceReq, opts ...grpc.CallOption) (*UpdateDeviceResp, error) {
	out := new(UpdateDeviceResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/UpdateDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) DeleteDevices(ctx context.Context, in *DeleteDevicesReq, opts ...grpc.CallOption) (*DeleteDevicesResp, error) {
	out := new(DeleteDevicesResp)
	err := c.cc.Invoke(ctx, "/resourcemanager.ResourceManager/DeleteDevices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ResourceManagerServer is the server API for ResourceManager service.
type ResourceManagerServer interface {
	//* common service
	Available(context.Context, *AvailableReq) (*AvailableResp, error)
	//* resource service
	//* device consumer
	CreateDeviceConsumer(context.Context, *CreateDeviceConsumerReq) (*CreateDeviceConsumerResp, error)
	GetDeviceConsumer(context.Context, *GetDeviceConsumerReq) (*GetDeviceConsumerResp, error)
	ListDeviceConsumer(context.Context, *ListDeviceConsumerReq) (*ListDeviceConsumerResp, error)
	UpdateDeviceConsumer(context.Context, *UpdateDeviceConsumerReq) (*UpdateDeviceConsumerResp, error)
	DeleteDeviceConsumer(context.Context, *DeleteDeviceConsumerReq) (*DeleteDeviceConsumerResp, error)
	ConsumeDevice(context.Context, *ConsumeDeviceReq) (*ConsumeDeviceResp, error)
	ReturnDevice(context.Context, *ReturnDeviceReq) (*ReturnDeviceResp, error)
	//* device pool
	CreateDevicePool(context.Context, *CreateDevicePoolReq) (*CreateDevicePoolResp, error)
	GetDevicePool(context.Context, *GetDevicePoolReq) (*GetDevicePoolResp, error)
	GetDevicePoolEvent(context.Context, *GetDevicePoolEventReq) (*GetDevicePoolEventResp, error)
	ListDevicePool(context.Context, *ListDevicePoolReq) (*ListDevicePoolResp, error)
	UpdateDevicePool(context.Context, *UpdateDevicePoolReq) (*UpdateDevicePoolResp, error)
	DeleteDevicePool(context.Context, *DeleteDevicePoolReq) (*DeleteDevicePoolResp, error)
	ImportDeviceToDevicePool(context.Context, *ImportDeviceToDevicePoolReq) (*ImportDeviceToDevicePoolResp, error)
	ImportDevicesToDevicePoolByBkAssetIDs(context.Context, *ImportDevicesToDevicePoolByBkAssetIDsReq) (*ImportDevicesToDevicePoolByBkAssetIDsResp, error)
	ImportDeviceToDevicePoolByBkAssetID(context.Context, *ImportDeviceToDevicePoolByBkAssetIDReq) (*ImportDeviceToDevicePoolResp, error)
	// device bill
	ListDeviceBill(context.Context, *ListDeviceBillReq) (*ListDeviceBillResp, error)
	// device record
	GetDeviceRecord(context.Context, *GetDeviceRecordReq) (*GetDeviceRecordResp, error)
	CreateDeviceRecord(context.Context, *CreateDeviceRecordReq) (*CreateDeviceRecordResp, error)
	ListDeviceRecord(context.Context, *ListDeviceRecordReq) (*ListDeviceRecordResp, error)
	UpdateDeviceRecord(context.Context, *UpdateDeviceRecordReq) (*UpdateDeviceRecordResp, error)
	// provider
	CreateProvider(context.Context, *CreateProviderReq) (*CreateProviderResp, error)
	GetProvider(context.Context, *GetProviderReq) (*GetProviderResp, error)
	ListProvider(context.Context, *ListProviderReq) (*ListProviderResp, error)
	UpdateProvider(context.Context, *UpdateProviderReq) (*UpdateProviderResp, error)
	DeleteProvider(context.Context, *DeleteProviderReq) (*DeleteProviderResp, error)
	QueryProviderOrder(context.Context, *QueryProviderOrderReq) (*QueryProviderOrderResp, error)
	QueryProviderNetwork(context.Context, *QueryProviderNetworkReq) (*QueryProviderNetworkResp, error)
	// obs
	QueryObsBill(context.Context, *QueryObsBillReq) (*QueryObsBillResp, error)
	CreateObsCost(context.Context, *CreateObsCostReq) (*CreateObsCostResp, error)
	// 资源池
	CreateResourcePool(context.Context, *CreateResourcePoolReq) (*CreateResourcePoolResp, error)
	ListResourcePool(context.Context, *ListResourcePoolReq) (*ListResourcePoolResp, error)
	ImportResource(context.Context, *ImportResourceReq) (*ImportResourceResp, error)
	ListResource(context.Context, *ListResourceReq) (*ListResourceResp, error)
	ListDeviceRecordByPool(context.Context, *ListDeviceRecordByPoolReq) (*ListDeviceRecordResp, error)
	CreateDeviceRecordByPool(context.Context, *CreateDeviceRecordByPoolReq) (*CreateDeviceRecordByPoolResp, error)
	ListDeviceRecordByDevicePool(context.Context, *ListDeviceRecordByDevicePoolReq) (*ListDeviceRecordResp, error)
	CreateDeviceRecordByDevicePool(context.Context, *CreateDeviceRecordByDevicePoolReq) (*CreateDeviceRecordByDevicePoolResp, error)
	// rpc ReturnDeviceByDeviceRecord(ListDeviceRecordByPoolReq) returns (ListDeviceRecordResp) {
	//     option (google.api.http) = {
	//         put : "/resourcemanager/v1/resource_pools/{poolID}/device_records/{deviceRecordID}/return"
	//     };
	//     option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
	//         description : "返回资源池(自建)中的设备记录(aka订单)中的设备"
	//         summary : "返回资源池(自建)中的设备记录(aka订单)中的设备"
	//     };
	// }
	CreateDeviceInstance(context.Context, *CreateDeviceInstanceReq) (*CreateDeviceInstanceResp, error)
	UpdateDeviceInstance(context.Context, *UpdateDeviceInstanceReq) (*UpdateDeviceInstanceResp, error)
	DeleteDeviceInstance(context.Context, *DeleteDeviceInstanceReq) (*DeleteDeviceInstanceResp, error)
	ListDeviceInstances(context.Context, *ListDeviceInstancesReq) (*ListDeviceInstancesResp, error)
	EnableDeviceConsumer(context.Context, *EnableDeviceConsumerReq) (*EnableDeviceConsumerResp, error)
	//* device
	GetDevice(context.Context, *GetDeviceReq) (*GetDeviceResp, error)
	ListDevices(context.Context, *ListDevicesReq) (*ListDevicesResp, error)
	UpdateDevice(context.Context, *UpdateDeviceReq) (*UpdateDeviceResp, error)
	DeleteDevices(context.Context, *DeleteDevicesReq) (*DeleteDevicesResp, error)
}

// UnimplementedResourceManagerServer can be embedded to have forward compatible implementations.
type UnimplementedResourceManagerServer struct {
}

func (*UnimplementedResourceManagerServer) Available(ctx context.Context, req *AvailableReq) (*AvailableResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Available not implemented")
}
func (*UnimplementedResourceManagerServer) CreateDeviceConsumer(ctx context.Context, req *CreateDeviceConsumerReq) (*CreateDeviceConsumerResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDeviceConsumer not implemented")
}
func (*UnimplementedResourceManagerServer) GetDeviceConsumer(ctx context.Context, req *GetDeviceConsumerReq) (*GetDeviceConsumerResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceConsumer not implemented")
}
func (*UnimplementedResourceManagerServer) ListDeviceConsumer(ctx context.Context, req *ListDeviceConsumerReq) (*ListDeviceConsumerResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDeviceConsumer not implemented")
}
func (*UnimplementedResourceManagerServer) UpdateDeviceConsumer(ctx context.Context, req *UpdateDeviceConsumerReq) (*UpdateDeviceConsumerResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDeviceConsumer not implemented")
}
func (*UnimplementedResourceManagerServer) DeleteDeviceConsumer(ctx context.Context, req *DeleteDeviceConsumerReq) (*DeleteDeviceConsumerResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDeviceConsumer not implemented")
}
func (*UnimplementedResourceManagerServer) ConsumeDevice(ctx context.Context, req *ConsumeDeviceReq) (*ConsumeDeviceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConsumeDevice not implemented")
}
func (*UnimplementedResourceManagerServer) ReturnDevice(ctx context.Context, req *ReturnDeviceReq) (*ReturnDeviceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReturnDevice not implemented")
}
func (*UnimplementedResourceManagerServer) CreateDevicePool(ctx context.Context, req *CreateDevicePoolReq) (*CreateDevicePoolResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDevicePool not implemented")
}
func (*UnimplementedResourceManagerServer) GetDevicePool(ctx context.Context, req *GetDevicePoolReq) (*GetDevicePoolResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDevicePool not implemented")
}
func (*UnimplementedResourceManagerServer) GetDevicePoolEvent(ctx context.Context, req *GetDevicePoolEventReq) (*GetDevicePoolEventResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDevicePoolEvent not implemented")
}
func (*UnimplementedResourceManagerServer) ListDevicePool(ctx context.Context, req *ListDevicePoolReq) (*ListDevicePoolResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDevicePool not implemented")
}
func (*UnimplementedResourceManagerServer) UpdateDevicePool(ctx context.Context, req *UpdateDevicePoolReq) (*UpdateDevicePoolResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDevicePool not implemented")
}
func (*UnimplementedResourceManagerServer) DeleteDevicePool(ctx context.Context, req *DeleteDevicePoolReq) (*DeleteDevicePoolResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDevicePool not implemented")
}
func (*UnimplementedResourceManagerServer) ImportDeviceToDevicePool(ctx context.Context, req *ImportDeviceToDevicePoolReq) (*ImportDeviceToDevicePoolResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportDeviceToDevicePool not implemented")
}
func (*UnimplementedResourceManagerServer) ImportDevicesToDevicePoolByBkAssetIDs(ctx context.Context, req *ImportDevicesToDevicePoolByBkAssetIDsReq) (*ImportDevicesToDevicePoolByBkAssetIDsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportDevicesToDevicePoolByBkAssetIDs not implemented")
}
func (*UnimplementedResourceManagerServer) ImportDeviceToDevicePoolByBkAssetID(ctx context.Context, req *ImportDeviceToDevicePoolByBkAssetIDReq) (*ImportDeviceToDevicePoolResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportDeviceToDevicePoolByBkAssetID not implemented")
}
func (*UnimplementedResourceManagerServer) ListDeviceBill(ctx context.Context, req *ListDeviceBillReq) (*ListDeviceBillResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDeviceBill not implemented")
}
func (*UnimplementedResourceManagerServer) GetDeviceRecord(ctx context.Context, req *GetDeviceRecordReq) (*GetDeviceRecordResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceRecord not implemented")
}
func (*UnimplementedResourceManagerServer) CreateDeviceRecord(ctx context.Context, req *CreateDeviceRecordReq) (*CreateDeviceRecordResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDeviceRecord not implemented")
}
func (*UnimplementedResourceManagerServer) ListDeviceRecord(ctx context.Context, req *ListDeviceRecordReq) (*ListDeviceRecordResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDeviceRecord not implemented")
}
func (*UnimplementedResourceManagerServer) UpdateDeviceRecord(ctx context.Context, req *UpdateDeviceRecordReq) (*UpdateDeviceRecordResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDeviceRecord not implemented")
}
func (*UnimplementedResourceManagerServer) CreateProvider(ctx context.Context, req *CreateProviderReq) (*CreateProviderResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProvider not implemented")
}
func (*UnimplementedResourceManagerServer) GetProvider(ctx context.Context, req *GetProviderReq) (*GetProviderResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProvider not implemented")
}
func (*UnimplementedResourceManagerServer) ListProvider(ctx context.Context, req *ListProviderReq) (*ListProviderResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProvider not implemented")
}
func (*UnimplementedResourceManagerServer) UpdateProvider(ctx context.Context, req *UpdateProviderReq) (*UpdateProviderResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProvider not implemented")
}
func (*UnimplementedResourceManagerServer) DeleteProvider(ctx context.Context, req *DeleteProviderReq) (*DeleteProviderResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProvider not implemented")
}
func (*UnimplementedResourceManagerServer) QueryProviderOrder(ctx context.Context, req *QueryProviderOrderReq) (*QueryProviderOrderResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryProviderOrder not implemented")
}
func (*UnimplementedResourceManagerServer) QueryProviderNetwork(ctx context.Context, req *QueryProviderNetworkReq) (*QueryProviderNetworkResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryProviderNetwork not implemented")
}
func (*UnimplementedResourceManagerServer) QueryObsBill(ctx context.Context, req *QueryObsBillReq) (*QueryObsBillResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryObsBill not implemented")
}
func (*UnimplementedResourceManagerServer) CreateObsCost(ctx context.Context, req *CreateObsCostReq) (*CreateObsCostResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateObsCost not implemented")
}
func (*UnimplementedResourceManagerServer) CreateResourcePool(ctx context.Context, req *CreateResourcePoolReq) (*CreateResourcePoolResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateResourcePool not implemented")
}
func (*UnimplementedResourceManagerServer) ListResourcePool(ctx context.Context, req *ListResourcePoolReq) (*ListResourcePoolResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListResourcePool not implemented")
}
func (*UnimplementedResourceManagerServer) ImportResource(ctx context.Context, req *ImportResourceReq) (*ImportResourceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportResource not implemented")
}
func (*UnimplementedResourceManagerServer) ListResource(ctx context.Context, req *ListResourceReq) (*ListResourceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListResource not implemented")
}
func (*UnimplementedResourceManagerServer) ListDeviceRecordByPool(ctx context.Context, req *ListDeviceRecordByPoolReq) (*ListDeviceRecordResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDeviceRecordByPool not implemented")
}
func (*UnimplementedResourceManagerServer) CreateDeviceRecordByPool(ctx context.Context, req *CreateDeviceRecordByPoolReq) (*CreateDeviceRecordByPoolResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDeviceRecordByPool not implemented")
}
func (*UnimplementedResourceManagerServer) ListDeviceRecordByDevicePool(ctx context.Context, req *ListDeviceRecordByDevicePoolReq) (*ListDeviceRecordResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDeviceRecordByDevicePool not implemented")
}
func (*UnimplementedResourceManagerServer) CreateDeviceRecordByDevicePool(ctx context.Context, req *CreateDeviceRecordByDevicePoolReq) (*CreateDeviceRecordByDevicePoolResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDeviceRecordByDevicePool not implemented")
}
func (*UnimplementedResourceManagerServer) CreateDeviceInstance(ctx context.Context, req *CreateDeviceInstanceReq) (*CreateDeviceInstanceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDeviceInstance not implemented")
}
func (*UnimplementedResourceManagerServer) UpdateDeviceInstance(ctx context.Context, req *UpdateDeviceInstanceReq) (*UpdateDeviceInstanceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDeviceInstance not implemented")
}
func (*UnimplementedResourceManagerServer) DeleteDeviceInstance(ctx context.Context, req *DeleteDeviceInstanceReq) (*DeleteDeviceInstanceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDeviceInstance not implemented")
}
func (*UnimplementedResourceManagerServer) ListDeviceInstances(ctx context.Context, req *ListDeviceInstancesReq) (*ListDeviceInstancesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDeviceInstances not implemented")
}
func (*UnimplementedResourceManagerServer) EnableDeviceConsumer(ctx context.Context, req *EnableDeviceConsumerReq) (*EnableDeviceConsumerResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnableDeviceConsumer not implemented")
}
func (*UnimplementedResourceManagerServer) GetDevice(ctx context.Context, req *GetDeviceReq) (*GetDeviceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDevice not implemented")
}
func (*UnimplementedResourceManagerServer) ListDevices(ctx context.Context, req *ListDevicesReq) (*ListDevicesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDevices not implemented")
}
func (*UnimplementedResourceManagerServer) UpdateDevice(ctx context.Context, req *UpdateDeviceReq) (*UpdateDeviceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDevice not implemented")
}
func (*UnimplementedResourceManagerServer) DeleteDevices(ctx context.Context, req *DeleteDevicesReq) (*DeleteDevicesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDevices not implemented")
}

func RegisterResourceManagerServer(s *grpc.Server, srv ResourceManagerServer) {
	s.RegisterService(&_ResourceManager_serviceDesc, srv)
}

func _ResourceManager_Available_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AvailableReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).Available(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/Available",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).Available(ctx, req.(*AvailableReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_CreateDeviceConsumer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDeviceConsumerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).CreateDeviceConsumer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/CreateDeviceConsumer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).CreateDeviceConsumer(ctx, req.(*CreateDeviceConsumerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_GetDeviceConsumer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceConsumerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).GetDeviceConsumer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/GetDeviceConsumer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).GetDeviceConsumer(ctx, req.(*GetDeviceConsumerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_ListDeviceConsumer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDeviceConsumerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).ListDeviceConsumer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/ListDeviceConsumer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).ListDeviceConsumer(ctx, req.(*ListDeviceConsumerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_UpdateDeviceConsumer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeviceConsumerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).UpdateDeviceConsumer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/UpdateDeviceConsumer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).UpdateDeviceConsumer(ctx, req.(*UpdateDeviceConsumerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_DeleteDeviceConsumer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDeviceConsumerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).DeleteDeviceConsumer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/DeleteDeviceConsumer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).DeleteDeviceConsumer(ctx, req.(*DeleteDeviceConsumerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_ConsumeDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConsumeDeviceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).ConsumeDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/ConsumeDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).ConsumeDevice(ctx, req.(*ConsumeDeviceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_ReturnDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReturnDeviceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).ReturnDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/ReturnDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).ReturnDevice(ctx, req.(*ReturnDeviceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_CreateDevicePool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDevicePoolReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).CreateDevicePool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/CreateDevicePool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).CreateDevicePool(ctx, req.(*CreateDevicePoolReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_GetDevicePool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDevicePoolReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).GetDevicePool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/GetDevicePool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).GetDevicePool(ctx, req.(*GetDevicePoolReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_GetDevicePoolEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDevicePoolEventReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).GetDevicePoolEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/GetDevicePoolEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).GetDevicePoolEvent(ctx, req.(*GetDevicePoolEventReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_ListDevicePool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDevicePoolReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).ListDevicePool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/ListDevicePool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).ListDevicePool(ctx, req.(*ListDevicePoolReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_UpdateDevicePool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDevicePoolReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).UpdateDevicePool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/UpdateDevicePool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).UpdateDevicePool(ctx, req.(*UpdateDevicePoolReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_DeleteDevicePool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDevicePoolReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).DeleteDevicePool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/DeleteDevicePool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).DeleteDevicePool(ctx, req.(*DeleteDevicePoolReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_ImportDeviceToDevicePool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportDeviceToDevicePoolReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).ImportDeviceToDevicePool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/ImportDeviceToDevicePool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).ImportDeviceToDevicePool(ctx, req.(*ImportDeviceToDevicePoolReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_ImportDevicesToDevicePoolByBkAssetIDs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportDevicesToDevicePoolByBkAssetIDsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).ImportDevicesToDevicePoolByBkAssetIDs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/ImportDevicesToDevicePoolByBkAssetIDs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).ImportDevicesToDevicePoolByBkAssetIDs(ctx, req.(*ImportDevicesToDevicePoolByBkAssetIDsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_ImportDeviceToDevicePoolByBkAssetID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportDeviceToDevicePoolByBkAssetIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).ImportDeviceToDevicePoolByBkAssetID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/ImportDeviceToDevicePoolByBkAssetID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).ImportDeviceToDevicePoolByBkAssetID(ctx, req.(*ImportDeviceToDevicePoolByBkAssetIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_ListDeviceBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDeviceBillReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).ListDeviceBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/ListDeviceBill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).ListDeviceBill(ctx, req.(*ListDeviceBillReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_GetDeviceRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceRecordReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).GetDeviceRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/GetDeviceRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).GetDeviceRecord(ctx, req.(*GetDeviceRecordReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_CreateDeviceRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDeviceRecordReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).CreateDeviceRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/CreateDeviceRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).CreateDeviceRecord(ctx, req.(*CreateDeviceRecordReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_ListDeviceRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDeviceRecordReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).ListDeviceRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/ListDeviceRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).ListDeviceRecord(ctx, req.(*ListDeviceRecordReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_UpdateDeviceRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeviceRecordReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).UpdateDeviceRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/UpdateDeviceRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).UpdateDeviceRecord(ctx, req.(*UpdateDeviceRecordReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_CreateProvider_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProviderReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).CreateProvider(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/CreateProvider",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).CreateProvider(ctx, req.(*CreateProviderReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_GetProvider_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProviderReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).GetProvider(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/GetProvider",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).GetProvider(ctx, req.(*GetProviderReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_ListProvider_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProviderReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).ListProvider(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/ListProvider",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).ListProvider(ctx, req.(*ListProviderReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_UpdateProvider_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProviderReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).UpdateProvider(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/UpdateProvider",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).UpdateProvider(ctx, req.(*UpdateProviderReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_DeleteProvider_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProviderReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).DeleteProvider(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/DeleteProvider",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).DeleteProvider(ctx, req.(*DeleteProviderReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_QueryProviderOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryProviderOrderReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).QueryProviderOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/QueryProviderOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).QueryProviderOrder(ctx, req.(*QueryProviderOrderReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_QueryProviderNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryProviderNetworkReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).QueryProviderNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/QueryProviderNetwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).QueryProviderNetwork(ctx, req.(*QueryProviderNetworkReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_QueryObsBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryObsBillReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).QueryObsBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/QueryObsBill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).QueryObsBill(ctx, req.(*QueryObsBillReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_CreateObsCost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateObsCostReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).CreateObsCost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/CreateObsCost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).CreateObsCost(ctx, req.(*CreateObsCostReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_CreateResourcePool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateResourcePoolReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).CreateResourcePool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/CreateResourcePool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).CreateResourcePool(ctx, req.(*CreateResourcePoolReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_ListResourcePool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListResourcePoolReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).ListResourcePool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/ListResourcePool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).ListResourcePool(ctx, req.(*ListResourcePoolReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_ImportResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportResourceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).ImportResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/ImportResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).ImportResource(ctx, req.(*ImportResourceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_ListResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListResourceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).ListResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/ListResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).ListResource(ctx, req.(*ListResourceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_ListDeviceRecordByPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDeviceRecordByPoolReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).ListDeviceRecordByPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/ListDeviceRecordByPool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).ListDeviceRecordByPool(ctx, req.(*ListDeviceRecordByPoolReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_CreateDeviceRecordByPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDeviceRecordByPoolReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).CreateDeviceRecordByPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/CreateDeviceRecordByPool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).CreateDeviceRecordByPool(ctx, req.(*CreateDeviceRecordByPoolReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_ListDeviceRecordByDevicePool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDeviceRecordByDevicePoolReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).ListDeviceRecordByDevicePool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/ListDeviceRecordByDevicePool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).ListDeviceRecordByDevicePool(ctx, req.(*ListDeviceRecordByDevicePoolReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_CreateDeviceRecordByDevicePool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDeviceRecordByDevicePoolReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).CreateDeviceRecordByDevicePool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/CreateDeviceRecordByDevicePool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).CreateDeviceRecordByDevicePool(ctx, req.(*CreateDeviceRecordByDevicePoolReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_CreateDeviceInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDeviceInstanceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).CreateDeviceInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/CreateDeviceInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).CreateDeviceInstance(ctx, req.(*CreateDeviceInstanceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_UpdateDeviceInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeviceInstanceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).UpdateDeviceInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/UpdateDeviceInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).UpdateDeviceInstance(ctx, req.(*UpdateDeviceInstanceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_DeleteDeviceInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDeviceInstanceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).DeleteDeviceInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/DeleteDeviceInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).DeleteDeviceInstance(ctx, req.(*DeleteDeviceInstanceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_ListDeviceInstances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDeviceInstancesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).ListDeviceInstances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/ListDeviceInstances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).ListDeviceInstances(ctx, req.(*ListDeviceInstancesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_EnableDeviceConsumer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnableDeviceConsumerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).EnableDeviceConsumer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/EnableDeviceConsumer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).EnableDeviceConsumer(ctx, req.(*EnableDeviceConsumerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_GetDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).GetDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/GetDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).GetDevice(ctx, req.(*GetDeviceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_ListDevices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDevicesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).ListDevices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/ListDevices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).ListDevices(ctx, req.(*ListDevicesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_UpdateDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeviceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).UpdateDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/UpdateDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).UpdateDevice(ctx, req.(*UpdateDeviceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_DeleteDevices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDevicesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).DeleteDevices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemanager.ResourceManager/DeleteDevices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).DeleteDevices(ctx, req.(*DeleteDevicesReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ResourceManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "resourcemanager.ResourceManager",
	HandlerType: (*ResourceManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Available",
			Handler:    _ResourceManager_Available_Handler,
		},
		{
			MethodName: "CreateDeviceConsumer",
			Handler:    _ResourceManager_CreateDeviceConsumer_Handler,
		},
		{
			MethodName: "GetDeviceConsumer",
			Handler:    _ResourceManager_GetDeviceConsumer_Handler,
		},
		{
			MethodName: "ListDeviceConsumer",
			Handler:    _ResourceManager_ListDeviceConsumer_Handler,
		},
		{
			MethodName: "UpdateDeviceConsumer",
			Handler:    _ResourceManager_UpdateDeviceConsumer_Handler,
		},
		{
			MethodName: "DeleteDeviceConsumer",
			Handler:    _ResourceManager_DeleteDeviceConsumer_Handler,
		},
		{
			MethodName: "ConsumeDevice",
			Handler:    _ResourceManager_ConsumeDevice_Handler,
		},
		{
			MethodName: "ReturnDevice",
			Handler:    _ResourceManager_ReturnDevice_Handler,
		},
		{
			MethodName: "CreateDevicePool",
			Handler:    _ResourceManager_CreateDevicePool_Handler,
		},
		{
			MethodName: "GetDevicePool",
			Handler:    _ResourceManager_GetDevicePool_Handler,
		},
		{
			MethodName: "GetDevicePoolEvent",
			Handler:    _ResourceManager_GetDevicePoolEvent_Handler,
		},
		{
			MethodName: "ListDevicePool",
			Handler:    _ResourceManager_ListDevicePool_Handler,
		},
		{
			MethodName: "UpdateDevicePool",
			Handler:    _ResourceManager_UpdateDevicePool_Handler,
		},
		{
			MethodName: "DeleteDevicePool",
			Handler:    _ResourceManager_DeleteDevicePool_Handler,
		},
		{
			MethodName: "ImportDeviceToDevicePool",
			Handler:    _ResourceManager_ImportDeviceToDevicePool_Handler,
		},
		{
			MethodName: "ImportDevicesToDevicePoolByBkAssetIDs",
			Handler:    _ResourceManager_ImportDevicesToDevicePoolByBkAssetIDs_Handler,
		},
		{
			MethodName: "ImportDeviceToDevicePoolByBkAssetID",
			Handler:    _ResourceManager_ImportDeviceToDevicePoolByBkAssetID_Handler,
		},
		{
			MethodName: "ListDeviceBill",
			Handler:    _ResourceManager_ListDeviceBill_Handler,
		},
		{
			MethodName: "GetDeviceRecord",
			Handler:    _ResourceManager_GetDeviceRecord_Handler,
		},
		{
			MethodName: "CreateDeviceRecord",
			Handler:    _ResourceManager_CreateDeviceRecord_Handler,
		},
		{
			MethodName: "ListDeviceRecord",
			Handler:    _ResourceManager_ListDeviceRecord_Handler,
		},
		{
			MethodName: "UpdateDeviceRecord",
			Handler:    _ResourceManager_UpdateDeviceRecord_Handler,
		},
		{
			MethodName: "CreateProvider",
			Handler:    _ResourceManager_CreateProvider_Handler,
		},
		{
			MethodName: "GetProvider",
			Handler:    _ResourceManager_GetProvider_Handler,
		},
		{
			MethodName: "ListProvider",
			Handler:    _ResourceManager_ListProvider_Handler,
		},
		{
			MethodName: "UpdateProvider",
			Handler:    _ResourceManager_UpdateProvider_Handler,
		},
		{
			MethodName: "DeleteProvider",
			Handler:    _ResourceManager_DeleteProvider_Handler,
		},
		{
			MethodName: "QueryProviderOrder",
			Handler:    _ResourceManager_QueryProviderOrder_Handler,
		},
		{
			MethodName: "QueryProviderNetwork",
			Handler:    _ResourceManager_QueryProviderNetwork_Handler,
		},
		{
			MethodName: "QueryObsBill",
			Handler:    _ResourceManager_QueryObsBill_Handler,
		},
		{
			MethodName: "CreateObsCost",
			Handler:    _ResourceManager_CreateObsCost_Handler,
		},
		{
			MethodName: "CreateResourcePool",
			Handler:    _ResourceManager_CreateResourcePool_Handler,
		},
		{
			MethodName: "ListResourcePool",
			Handler:    _ResourceManager_ListResourcePool_Handler,
		},
		{
			MethodName: "ImportResource",
			Handler:    _ResourceManager_ImportResource_Handler,
		},
		{
			MethodName: "ListResource",
			Handler:    _ResourceManager_ListResource_Handler,
		},
		{
			MethodName: "ListDeviceRecordByPool",
			Handler:    _ResourceManager_ListDeviceRecordByPool_Handler,
		},
		{
			MethodName: "CreateDeviceRecordByPool",
			Handler:    _ResourceManager_CreateDeviceRecordByPool_Handler,
		},
		{
			MethodName: "ListDeviceRecordByDevicePool",
			Handler:    _ResourceManager_ListDeviceRecordByDevicePool_Handler,
		},
		{
			MethodName: "CreateDeviceRecordByDevicePool",
			Handler:    _ResourceManager_CreateDeviceRecordByDevicePool_Handler,
		},
		{
			MethodName: "CreateDeviceInstance",
			Handler:    _ResourceManager_CreateDeviceInstance_Handler,
		},
		{
			MethodName: "UpdateDeviceInstance",
			Handler:    _ResourceManager_UpdateDeviceInstance_Handler,
		},
		{
			MethodName: "DeleteDeviceInstance",
			Handler:    _ResourceManager_DeleteDeviceInstance_Handler,
		},
		{
			MethodName: "ListDeviceInstances",
			Handler:    _ResourceManager_ListDeviceInstances_Handler,
		},
		{
			MethodName: "EnableDeviceConsumer",
			Handler:    _ResourceManager_EnableDeviceConsumer_Handler,
		},
		{
			MethodName: "GetDevice",
			Handler:    _ResourceManager_GetDevice_Handler,
		},
		{
			MethodName: "ListDevices",
			Handler:    _ResourceManager_ListDevices_Handler,
		},
		{
			MethodName: "UpdateDevice",
			Handler:    _ResourceManager_UpdateDevice_Handler,
		},
		{
			MethodName: "DeleteDevices",
			Handler:    _ResourceManager_DeleteDevices_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bcs-resource-manager.proto",
}
