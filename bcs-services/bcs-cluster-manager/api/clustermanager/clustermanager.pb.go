// Code generated by protoc-gen-go. DO NOT EDIT.
// source: clustermanager.proto

package clustermanager

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Cluster struct {
	ClusterID               string                    `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ClusterName             string                    `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	FederationClusterID     string                    `protobuf:"bytes,3,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	Provider                string                    `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	Region                  string                    `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	VpcID                   string                    `protobuf:"bytes,6,opt,name=vpcID,proto3" json:"vpcID,omitempty"`
	ProjectID               string                    `protobuf:"bytes,7,opt,name=projectID,proto3" json:"projectID,omitempty"`
	BusinessID              string                    `protobuf:"bytes,8,opt,name=businessID,proto3" json:"businessID,omitempty"`
	Environment             string                    `protobuf:"bytes,9,opt,name=environment,proto3" json:"environment,omitempty"`
	EngineType              string                    `protobuf:"bytes,10,opt,name=engineType,proto3" json:"engineType,omitempty"`
	IsExclusive             bool                      `protobuf:"varint,11,opt,name=isExclusive,proto3" json:"isExclusive,omitempty"`
	ClusterType             string                    `protobuf:"bytes,12,opt,name=clusterType,proto3" json:"clusterType,omitempty"`
	Labels                  map[string]string         `protobuf:"bytes,13,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Creator                 string                    `protobuf:"bytes,14,opt,name=creator,proto3" json:"creator,omitempty"`
	CreateTime              string                    `protobuf:"bytes,15,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime              string                    `protobuf:"bytes,16,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	BcsAddons               map[string]*BKOpsPlugin   `protobuf:"bytes,17,rep,name=bcsAddons,proto3" json:"bcsAddons,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ExtraAddons             map[string]*BKOpsPlugin   `protobuf:"bytes,18,rep,name=extraAddons,proto3" json:"extraAddons,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SystemID                string                    `protobuf:"bytes,19,opt,name=systemID,proto3" json:"systemID,omitempty"`
	ManageType              string                    `protobuf:"bytes,20,opt,name=manageType,proto3" json:"manageType,omitempty"`
	Master                  map[string]*Node          `protobuf:"bytes,21,rep,name=master,proto3" json:"master,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NetworkSettings         *NetworkSetting           `protobuf:"bytes,22,opt,name=networkSettings,proto3" json:"networkSettings,omitempty"`
	ClusterBasicSettings    *ClusterBasicSetting      `protobuf:"bytes,23,opt,name=clusterBasicSettings,proto3" json:"clusterBasicSettings,omitempty"`
	ClusterAdvanceSettings  *ClusterAdvanceSetting    `protobuf:"bytes,24,opt,name=clusterAdvanceSettings,proto3" json:"clusterAdvanceSettings,omitempty"`
	NodeSettings            *NodeSetting              `protobuf:"bytes,25,opt,name=nodeSettings,proto3" json:"nodeSettings,omitempty"`
	Status                  string                    `protobuf:"bytes,26,opt,name=status,proto3" json:"status,omitempty"`
	Updater                 string                    `protobuf:"bytes,27,opt,name=updater,proto3" json:"updater,omitempty"`
	NetworkType             string                    `protobuf:"bytes,28,opt,name=networkType,proto3" json:"networkType,omitempty"`
	AutoGenerateMasterNodes bool                      `protobuf:"varint,29,opt,name=autoGenerateMasterNodes,proto3" json:"autoGenerateMasterNodes,omitempty"`
	Template                []*InstanceTemplateConfig `protobuf:"bytes,30,rep,name=template,proto3" json:"template,omitempty"`
	ExtraInfo               map[string]string         `protobuf:"bytes,31,rep,name=extraInfo,proto3" json:"extraInfo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ModuleID                string                    `protobuf:"bytes,32,opt,name=moduleID,proto3" json:"moduleID,omitempty"`
	ExtraClusterID          string                    `protobuf:"bytes,33,opt,name=extraClusterID,proto3" json:"extraClusterID,omitempty"`
	IsCommonCluster         bool                      `protobuf:"varint,34,opt,name=isCommonCluster,proto3" json:"isCommonCluster,omitempty"`
	Description             string                    `protobuf:"bytes,35,opt,name=description,proto3" json:"description,omitempty"`
	ClusterCategory         string                    `protobuf:"bytes,36,opt,name=clusterCategory,proto3" json:"clusterCategory,omitempty"`
	IsShared                bool                      `protobuf:"varint,37,opt,name=is_shared,json=isShared,proto3" json:"is_shared,omitempty"`
	KubeConfig              string                    `protobuf:"bytes,38,opt,name=kubeConfig,proto3" json:"kubeConfig,omitempty"`
	ImportCategory          string                    `protobuf:"bytes,39,opt,name=importCategory,proto3" json:"importCategory,omitempty"`
	CloudAccountID          string                    `protobuf:"bytes,40,opt,name=cloudAccountID,proto3" json:"cloudAccountID,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                  `json:"-" bson:"-"`
	XXX_unrecognized        []byte                    `json:"-" bson:"-"`
	XXX_sizecache           int32                     `json:"-" bson:"-"`
}

func (m *Cluster) Reset()         { *m = Cluster{} }
func (m *Cluster) String() string { return proto.CompactTextString(m) }
func (*Cluster) ProtoMessage()    {}
func (*Cluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{0}
}

func (m *Cluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cluster.Unmarshal(m, b)
}
func (m *Cluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cluster.Marshal(b, m, deterministic)
}
func (m *Cluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cluster.Merge(m, src)
}
func (m *Cluster) XXX_Size() int {
	return xxx_messageInfo_Cluster.Size(m)
}
func (m *Cluster) XXX_DiscardUnknown() {
	xxx_messageInfo_Cluster.DiscardUnknown(m)
}

var xxx_messageInfo_Cluster proto.InternalMessageInfo

func (m *Cluster) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *Cluster) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *Cluster) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *Cluster) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *Cluster) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Cluster) GetVpcID() string {
	if m != nil {
		return m.VpcID
	}
	return ""
}

func (m *Cluster) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *Cluster) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *Cluster) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *Cluster) GetEngineType() string {
	if m != nil {
		return m.EngineType
	}
	return ""
}

func (m *Cluster) GetIsExclusive() bool {
	if m != nil {
		return m.IsExclusive
	}
	return false
}

func (m *Cluster) GetClusterType() string {
	if m != nil {
		return m.ClusterType
	}
	return ""
}

func (m *Cluster) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Cluster) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Cluster) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *Cluster) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *Cluster) GetBcsAddons() map[string]*BKOpsPlugin {
	if m != nil {
		return m.BcsAddons
	}
	return nil
}

func (m *Cluster) GetExtraAddons() map[string]*BKOpsPlugin {
	if m != nil {
		return m.ExtraAddons
	}
	return nil
}

func (m *Cluster) GetSystemID() string {
	if m != nil {
		return m.SystemID
	}
	return ""
}

func (m *Cluster) GetManageType() string {
	if m != nil {
		return m.ManageType
	}
	return ""
}

func (m *Cluster) GetMaster() map[string]*Node {
	if m != nil {
		return m.Master
	}
	return nil
}

func (m *Cluster) GetNetworkSettings() *NetworkSetting {
	if m != nil {
		return m.NetworkSettings
	}
	return nil
}

func (m *Cluster) GetClusterBasicSettings() *ClusterBasicSetting {
	if m != nil {
		return m.ClusterBasicSettings
	}
	return nil
}

func (m *Cluster) GetClusterAdvanceSettings() *ClusterAdvanceSetting {
	if m != nil {
		return m.ClusterAdvanceSettings
	}
	return nil
}

func (m *Cluster) GetNodeSettings() *NodeSetting {
	if m != nil {
		return m.NodeSettings
	}
	return nil
}

func (m *Cluster) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Cluster) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *Cluster) GetNetworkType() string {
	if m != nil {
		return m.NetworkType
	}
	return ""
}

func (m *Cluster) GetAutoGenerateMasterNodes() bool {
	if m != nil {
		return m.AutoGenerateMasterNodes
	}
	return false
}

func (m *Cluster) GetTemplate() []*InstanceTemplateConfig {
	if m != nil {
		return m.Template
	}
	return nil
}

func (m *Cluster) GetExtraInfo() map[string]string {
	if m != nil {
		return m.ExtraInfo
	}
	return nil
}

func (m *Cluster) GetModuleID() string {
	if m != nil {
		return m.ModuleID
	}
	return ""
}

func (m *Cluster) GetExtraClusterID() string {
	if m != nil {
		return m.ExtraClusterID
	}
	return ""
}

func (m *Cluster) GetIsCommonCluster() bool {
	if m != nil {
		return m.IsCommonCluster
	}
	return false
}

func (m *Cluster) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Cluster) GetClusterCategory() string {
	if m != nil {
		return m.ClusterCategory
	}
	return ""
}

func (m *Cluster) GetIsShared() bool {
	if m != nil {
		return m.IsShared
	}
	return false
}

func (m *Cluster) GetKubeConfig() string {
	if m != nil {
		return m.KubeConfig
	}
	return ""
}

func (m *Cluster) GetImportCategory() string {
	if m != nil {
		return m.ImportCategory
	}
	return ""
}

func (m *Cluster) GetCloudAccountID() string {
	if m != nil {
		return m.CloudAccountID
	}
	return ""
}

type Node struct {
	NodeID               string   `protobuf:"bytes,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	InnerIP              string   `protobuf:"bytes,2,opt,name=innerIP,proto3" json:"innerIP,omitempty"`
	InstanceType         string   `protobuf:"bytes,3,opt,name=instanceType,proto3" json:"instanceType,omitempty"`
	CPU                  uint32   `protobuf:"varint,4,opt,name=CPU,proto3" json:"CPU,omitempty"`
	Mem                  uint32   `protobuf:"varint,5,opt,name=mem,proto3" json:"mem,omitempty"`
	GPU                  uint32   `protobuf:"varint,6,opt,name=GPU,proto3" json:"GPU,omitempty"`
	Status               string   `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	ZoneID               string   `protobuf:"bytes,8,opt,name=zoneID,proto3" json:"zoneID,omitempty"`
	NodeGroupID          string   `protobuf:"bytes,9,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	ClusterID            string   `protobuf:"bytes,10,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	VPC                  string   `protobuf:"bytes,11,opt,name=VPC,proto3" json:"VPC,omitempty"`
	Region               string   `protobuf:"bytes,12,opt,name=region,proto3" json:"region,omitempty"`
	Passwd               string   `protobuf:"bytes,13,opt,name=passwd,proto3" json:"passwd,omitempty"`
	Zone                 uint32   `protobuf:"varint,14,opt,name=zone,proto3" json:"zone,omitempty"`
	DeviceID             string   `protobuf:"bytes,15,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	NodeTemplateID       string   `protobuf:"bytes,16,opt,name=nodeTemplateID,proto3" json:"nodeTemplateID,omitempty"`
	NodeType             string   `protobuf:"bytes,17,opt,name=nodeType,proto3" json:"nodeType,omitempty"`
	NodeName             string   `protobuf:"bytes,18,opt,name=nodeName,proto3" json:"nodeName,omitempty"`
	InnerIPv6            string   `protobuf:"bytes,19,opt,name=innerIPv6,proto3" json:"innerIPv6,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{1}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetNodeID() string {
	if m != nil {
		return m.NodeID
	}
	return ""
}

func (m *Node) GetInnerIP() string {
	if m != nil {
		return m.InnerIP
	}
	return ""
}

func (m *Node) GetInstanceType() string {
	if m != nil {
		return m.InstanceType
	}
	return ""
}

func (m *Node) GetCPU() uint32 {
	if m != nil {
		return m.CPU
	}
	return 0
}

func (m *Node) GetMem() uint32 {
	if m != nil {
		return m.Mem
	}
	return 0
}

func (m *Node) GetGPU() uint32 {
	if m != nil {
		return m.GPU
	}
	return 0
}

func (m *Node) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Node) GetZoneID() string {
	if m != nil {
		return m.ZoneID
	}
	return ""
}

func (m *Node) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *Node) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *Node) GetVPC() string {
	if m != nil {
		return m.VPC
	}
	return ""
}

func (m *Node) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Node) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

func (m *Node) GetZone() uint32 {
	if m != nil {
		return m.Zone
	}
	return 0
}

func (m *Node) GetDeviceID() string {
	if m != nil {
		return m.DeviceID
	}
	return ""
}

func (m *Node) GetNodeTemplateID() string {
	if m != nil {
		return m.NodeTemplateID
	}
	return ""
}

func (m *Node) GetNodeType() string {
	if m != nil {
		return m.NodeType
	}
	return ""
}

func (m *Node) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *Node) GetInnerIPv6() string {
	if m != nil {
		return m.InnerIPv6
	}
	return ""
}

type NetworkSetting struct {
	ClusterIPv4CIDR      string        `protobuf:"bytes,1,opt,name=clusterIPv4CIDR,proto3" json:"clusterIPv4CIDR,omitempty"`
	ServiceIPv4CIDR      string        `protobuf:"bytes,2,opt,name=serviceIPv4CIDR,proto3" json:"serviceIPv4CIDR,omitempty"`
	MaxNodePodNum        uint32        `protobuf:"varint,3,opt,name=maxNodePodNum,proto3" json:"maxNodePodNum,omitempty"`
	MaxServiceNum        uint32        `protobuf:"varint,4,opt,name=maxServiceNum,proto3" json:"maxServiceNum,omitempty"`
	EnableVPCCni         bool          `protobuf:"varint,5,opt,name=enableVPCCni,proto3" json:"enableVPCCni,omitempty"`
	EniSubnetIDs         []string      `protobuf:"bytes,6,rep,name=eniSubnetIDs,proto3" json:"eniSubnetIDs,omitempty"`
	SubnetSource         *SubnetSource `protobuf:"bytes,7,opt,name=subnetSource,proto3" json:"subnetSource,omitempty"`
	IsStaticIpMode       bool          `protobuf:"varint,8,opt,name=isStaticIpMode,proto3" json:"isStaticIpMode,omitempty"`
	ClaimExpiredSeconds  uint32        `protobuf:"varint,9,opt,name=claimExpiredSeconds,proto3" json:"claimExpiredSeconds,omitempty"`
	MultiClusterCIDR     []string      `protobuf:"bytes,10,rep,name=multiClusterCIDR,proto3" json:"multiClusterCIDR,omitempty"`
	CidrStep             uint32        `protobuf:"varint,11,opt,name=cidrStep,proto3" json:"cidrStep,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-" bson:"-"`
	XXX_unrecognized     []byte        `json:"-" bson:"-"`
	XXX_sizecache        int32         `json:"-" bson:"-"`
}

func (m *NetworkSetting) Reset()         { *m = NetworkSetting{} }
func (m *NetworkSetting) String() string { return proto.CompactTextString(m) }
func (*NetworkSetting) ProtoMessage()    {}
func (*NetworkSetting) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{2}
}

func (m *NetworkSetting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSetting.Unmarshal(m, b)
}
func (m *NetworkSetting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSetting.Marshal(b, m, deterministic)
}
func (m *NetworkSetting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSetting.Merge(m, src)
}
func (m *NetworkSetting) XXX_Size() int {
	return xxx_messageInfo_NetworkSetting.Size(m)
}
func (m *NetworkSetting) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSetting.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSetting proto.InternalMessageInfo

func (m *NetworkSetting) GetClusterIPv4CIDR() string {
	if m != nil {
		return m.ClusterIPv4CIDR
	}
	return ""
}

func (m *NetworkSetting) GetServiceIPv4CIDR() string {
	if m != nil {
		return m.ServiceIPv4CIDR
	}
	return ""
}

func (m *NetworkSetting) GetMaxNodePodNum() uint32 {
	if m != nil {
		return m.MaxNodePodNum
	}
	return 0
}

func (m *NetworkSetting) GetMaxServiceNum() uint32 {
	if m != nil {
		return m.MaxServiceNum
	}
	return 0
}

func (m *NetworkSetting) GetEnableVPCCni() bool {
	if m != nil {
		return m.EnableVPCCni
	}
	return false
}

func (m *NetworkSetting) GetEniSubnetIDs() []string {
	if m != nil {
		return m.EniSubnetIDs
	}
	return nil
}

func (m *NetworkSetting) GetSubnetSource() *SubnetSource {
	if m != nil {
		return m.SubnetSource
	}
	return nil
}

func (m *NetworkSetting) GetIsStaticIpMode() bool {
	if m != nil {
		return m.IsStaticIpMode
	}
	return false
}

func (m *NetworkSetting) GetClaimExpiredSeconds() uint32 {
	if m != nil {
		return m.ClaimExpiredSeconds
	}
	return 0
}

func (m *NetworkSetting) GetMultiClusterCIDR() []string {
	if m != nil {
		return m.MultiClusterCIDR
	}
	return nil
}

func (m *NetworkSetting) GetCidrStep() uint32 {
	if m != nil {
		return m.CidrStep
	}
	return 0
}

type SubnetSource struct {
	New                  *NewSubnet        `protobuf:"bytes,1,opt,name=new,proto3" json:"new,omitempty"`
	Existed              *ExistedSubnetIDs `protobuf:"bytes,2,opt,name=existed,proto3" json:"existed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *SubnetSource) Reset()         { *m = SubnetSource{} }
func (m *SubnetSource) String() string { return proto.CompactTextString(m) }
func (*SubnetSource) ProtoMessage()    {}
func (*SubnetSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{3}
}

func (m *SubnetSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubnetSource.Unmarshal(m, b)
}
func (m *SubnetSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubnetSource.Marshal(b, m, deterministic)
}
func (m *SubnetSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubnetSource.Merge(m, src)
}
func (m *SubnetSource) XXX_Size() int {
	return xxx_messageInfo_SubnetSource.Size(m)
}
func (m *SubnetSource) XXX_DiscardUnknown() {
	xxx_messageInfo_SubnetSource.DiscardUnknown(m)
}

var xxx_messageInfo_SubnetSource proto.InternalMessageInfo

func (m *SubnetSource) GetNew() *NewSubnet {
	if m != nil {
		return m.New
	}
	return nil
}

func (m *SubnetSource) GetExisted() *ExistedSubnetIDs {
	if m != nil {
		return m.Existed
	}
	return nil
}

type ExistedSubnetIDs struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ExistedSubnetIDs) Reset()         { *m = ExistedSubnetIDs{} }
func (m *ExistedSubnetIDs) String() string { return proto.CompactTextString(m) }
func (*ExistedSubnetIDs) ProtoMessage()    {}
func (*ExistedSubnetIDs) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{4}
}

func (m *ExistedSubnetIDs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistedSubnetIDs.Unmarshal(m, b)
}
func (m *ExistedSubnetIDs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistedSubnetIDs.Marshal(b, m, deterministic)
}
func (m *ExistedSubnetIDs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistedSubnetIDs.Merge(m, src)
}
func (m *ExistedSubnetIDs) XXX_Size() int {
	return xxx_messageInfo_ExistedSubnetIDs.Size(m)
}
func (m *ExistedSubnetIDs) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistedSubnetIDs.DiscardUnknown(m)
}

var xxx_messageInfo_ExistedSubnetIDs proto.InternalMessageInfo

func (m *ExistedSubnetIDs) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type NewSubnet struct {
	Mask                 uint32   `protobuf:"varint,1,opt,name=mask,proto3" json:"mask,omitempty"`
	Zone                 string   `protobuf:"bytes,2,opt,name=zone,proto3" json:"zone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *NewSubnet) Reset()         { *m = NewSubnet{} }
func (m *NewSubnet) String() string { return proto.CompactTextString(m) }
func (*NewSubnet) ProtoMessage()    {}
func (*NewSubnet) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{5}
}

func (m *NewSubnet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewSubnet.Unmarshal(m, b)
}
func (m *NewSubnet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewSubnet.Marshal(b, m, deterministic)
}
func (m *NewSubnet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewSubnet.Merge(m, src)
}
func (m *NewSubnet) XXX_Size() int {
	return xxx_messageInfo_NewSubnet.Size(m)
}
func (m *NewSubnet) XXX_DiscardUnknown() {
	xxx_messageInfo_NewSubnet.DiscardUnknown(m)
}

var xxx_messageInfo_NewSubnet proto.InternalMessageInfo

func (m *NewSubnet) GetMask() uint32 {
	if m != nil {
		return m.Mask
	}
	return 0
}

func (m *NewSubnet) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type ClusterBasicSetting struct {
	OS                   string            `protobuf:"bytes,1,opt,name=OS,proto3" json:"OS,omitempty"`
	Version              string            `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	ClusterTags          map[string]string `protobuf:"bytes,3,rep,name=clusterTags,proto3" json:"clusterTags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	VersionName          string            `protobuf:"bytes,4,opt,name=versionName,proto3" json:"versionName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *ClusterBasicSetting) Reset()         { *m = ClusterBasicSetting{} }
func (m *ClusterBasicSetting) String() string { return proto.CompactTextString(m) }
func (*ClusterBasicSetting) ProtoMessage()    {}
func (*ClusterBasicSetting) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{6}
}

func (m *ClusterBasicSetting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterBasicSetting.Unmarshal(m, b)
}
func (m *ClusterBasicSetting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterBasicSetting.Marshal(b, m, deterministic)
}
func (m *ClusterBasicSetting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterBasicSetting.Merge(m, src)
}
func (m *ClusterBasicSetting) XXX_Size() int {
	return xxx_messageInfo_ClusterBasicSetting.Size(m)
}
func (m *ClusterBasicSetting) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterBasicSetting.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterBasicSetting proto.InternalMessageInfo

func (m *ClusterBasicSetting) GetOS() string {
	if m != nil {
		return m.OS
	}
	return ""
}

func (m *ClusterBasicSetting) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ClusterBasicSetting) GetClusterTags() map[string]string {
	if m != nil {
		return m.ClusterTags
	}
	return nil
}

func (m *ClusterBasicSetting) GetVersionName() string {
	if m != nil {
		return m.VersionName
	}
	return ""
}

type ClusterAdvanceSetting struct {
	IPVS                 bool              `protobuf:"varint,1,opt,name=IPVS,proto3" json:"IPVS,omitempty"`
	ContainerRuntime     string            `protobuf:"bytes,2,opt,name=containerRuntime,proto3" json:"containerRuntime,omitempty"`
	RuntimeVersion       string            `protobuf:"bytes,3,opt,name=runtimeVersion,proto3" json:"runtimeVersion,omitempty"`
	ExtraArgs            map[string]string `protobuf:"bytes,4,rep,name=extraArgs,proto3" json:"extraArgs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *ClusterAdvanceSetting) Reset()         { *m = ClusterAdvanceSetting{} }
func (m *ClusterAdvanceSetting) String() string { return proto.CompactTextString(m) }
func (*ClusterAdvanceSetting) ProtoMessage()    {}
func (*ClusterAdvanceSetting) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{7}
}

func (m *ClusterAdvanceSetting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterAdvanceSetting.Unmarshal(m, b)
}
func (m *ClusterAdvanceSetting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterAdvanceSetting.Marshal(b, m, deterministic)
}
func (m *ClusterAdvanceSetting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterAdvanceSetting.Merge(m, src)
}
func (m *ClusterAdvanceSetting) XXX_Size() int {
	return xxx_messageInfo_ClusterAdvanceSetting.Size(m)
}
func (m *ClusterAdvanceSetting) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterAdvanceSetting.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterAdvanceSetting proto.InternalMessageInfo

func (m *ClusterAdvanceSetting) GetIPVS() bool {
	if m != nil {
		return m.IPVS
	}
	return false
}

func (m *ClusterAdvanceSetting) GetContainerRuntime() string {
	if m != nil {
		return m.ContainerRuntime
	}
	return ""
}

func (m *ClusterAdvanceSetting) GetRuntimeVersion() string {
	if m != nil {
		return m.RuntimeVersion
	}
	return ""
}

func (m *ClusterAdvanceSetting) GetExtraArgs() map[string]string {
	if m != nil {
		return m.ExtraArgs
	}
	return nil
}

type NodeSetting struct {
	DockerGraphPath      string            `protobuf:"bytes,1,opt,name=dockerGraphPath,proto3" json:"dockerGraphPath,omitempty"`
	MountTarget          string            `protobuf:"bytes,2,opt,name=mountTarget,proto3" json:"mountTarget,omitempty"`
	UnSchedulable        uint32            `protobuf:"varint,3,opt,name=unSchedulable,proto3" json:"unSchedulable,omitempty"`
	Labels               map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ExtraArgs            map[string]string `protobuf:"bytes,5,rep,name=extraArgs,proto3" json:"extraArgs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *NodeSetting) Reset()         { *m = NodeSetting{} }
func (m *NodeSetting) String() string { return proto.CompactTextString(m) }
func (*NodeSetting) ProtoMessage()    {}
func (*NodeSetting) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{8}
}

func (m *NodeSetting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeSetting.Unmarshal(m, b)
}
func (m *NodeSetting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeSetting.Marshal(b, m, deterministic)
}
func (m *NodeSetting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeSetting.Merge(m, src)
}
func (m *NodeSetting) XXX_Size() int {
	return xxx_messageInfo_NodeSetting.Size(m)
}
func (m *NodeSetting) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeSetting.DiscardUnknown(m)
}

var xxx_messageInfo_NodeSetting proto.InternalMessageInfo

func (m *NodeSetting) GetDockerGraphPath() string {
	if m != nil {
		return m.DockerGraphPath
	}
	return ""
}

func (m *NodeSetting) GetMountTarget() string {
	if m != nil {
		return m.MountTarget
	}
	return ""
}

func (m *NodeSetting) GetUnSchedulable() uint32 {
	if m != nil {
		return m.UnSchedulable
	}
	return 0
}

func (m *NodeSetting) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *NodeSetting) GetExtraArgs() map[string]string {
	if m != nil {
		return m.ExtraArgs
	}
	return nil
}

type ClusterCredential struct {
	ServerKey            string   `protobuf:"bytes,1,opt,name=serverKey,proto3" json:"serverKey,omitempty"`
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ClientModule         string   `protobuf:"bytes,3,opt,name=clientModule,proto3" json:"clientModule,omitempty"`
	ServerAddress        string   `protobuf:"bytes,4,opt,name=serverAddress,proto3" json:"serverAddress,omitempty"`
	CaCertData           string   `protobuf:"bytes,5,opt,name=caCertData,proto3" json:"caCertData,omitempty"`
	UserToken            string   `protobuf:"bytes,6,opt,name=userToken,proto3" json:"userToken,omitempty"`
	ClusterDomain        string   `protobuf:"bytes,7,opt,name=clusterDomain,proto3" json:"clusterDomain,omitempty"`
	ConnectMode          string   `protobuf:"bytes,8,opt,name=connectMode,proto3" json:"connectMode,omitempty"`
	CreateTime           string   `protobuf:"bytes,9,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string   `protobuf:"bytes,10,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	ClientCert           string   `protobuf:"bytes,11,opt,name=clientCert,proto3" json:"clientCert,omitempty"`
	ClientKey            string   `protobuf:"bytes,12,opt,name=clientKey,proto3" json:"clientKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ClusterCredential) Reset()         { *m = ClusterCredential{} }
func (m *ClusterCredential) String() string { return proto.CompactTextString(m) }
func (*ClusterCredential) ProtoMessage()    {}
func (*ClusterCredential) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{9}
}

func (m *ClusterCredential) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterCredential.Unmarshal(m, b)
}
func (m *ClusterCredential) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterCredential.Marshal(b, m, deterministic)
}
func (m *ClusterCredential) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterCredential.Merge(m, src)
}
func (m *ClusterCredential) XXX_Size() int {
	return xxx_messageInfo_ClusterCredential.Size(m)
}
func (m *ClusterCredential) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterCredential.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterCredential proto.InternalMessageInfo

func (m *ClusterCredential) GetServerKey() string {
	if m != nil {
		return m.ServerKey
	}
	return ""
}

func (m *ClusterCredential) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ClusterCredential) GetClientModule() string {
	if m != nil {
		return m.ClientModule
	}
	return ""
}

func (m *ClusterCredential) GetServerAddress() string {
	if m != nil {
		return m.ServerAddress
	}
	return ""
}

func (m *ClusterCredential) GetCaCertData() string {
	if m != nil {
		return m.CaCertData
	}
	return ""
}

func (m *ClusterCredential) GetUserToken() string {
	if m != nil {
		return m.UserToken
	}
	return ""
}

func (m *ClusterCredential) GetClusterDomain() string {
	if m != nil {
		return m.ClusterDomain
	}
	return ""
}

func (m *ClusterCredential) GetConnectMode() string {
	if m != nil {
		return m.ConnectMode
	}
	return ""
}

func (m *ClusterCredential) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *ClusterCredential) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *ClusterCredential) GetClientCert() string {
	if m != nil {
		return m.ClientCert
	}
	return ""
}

func (m *ClusterCredential) GetClientKey() string {
	if m != nil {
		return m.ClientKey
	}
	return ""
}

type Namespace struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FederationClusterID  string            `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ProjectID            string            `protobuf:"bytes,3,opt,name=projectID,proto3" json:"projectID,omitempty"`
	BusinessID           string            `protobuf:"bytes,4,opt,name=businessID,proto3" json:"businessID,omitempty"`
	Labels               map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MaxQuota             string            `protobuf:"bytes,6,opt,name=maxQuota,proto3" json:"maxQuota,omitempty"`
	CreateTime           string            `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string            `protobuf:"bytes,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	QuotaList            []*ResourceQuota  `protobuf:"bytes,9,rep,name=quotaList,proto3" json:"quotaList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *Namespace) Reset()         { *m = Namespace{} }
func (m *Namespace) String() string { return proto.CompactTextString(m) }
func (*Namespace) ProtoMessage()    {}
func (*Namespace) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{10}
}

func (m *Namespace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Namespace.Unmarshal(m, b)
}
func (m *Namespace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Namespace.Marshal(b, m, deterministic)
}
func (m *Namespace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Namespace.Merge(m, src)
}
func (m *Namespace) XXX_Size() int {
	return xxx_messageInfo_Namespace.Size(m)
}
func (m *Namespace) XXX_DiscardUnknown() {
	xxx_messageInfo_Namespace.DiscardUnknown(m)
}

var xxx_messageInfo_Namespace proto.InternalMessageInfo

func (m *Namespace) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Namespace) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *Namespace) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *Namespace) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *Namespace) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Namespace) GetMaxQuota() string {
	if m != nil {
		return m.MaxQuota
	}
	return ""
}

func (m *Namespace) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *Namespace) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *Namespace) GetQuotaList() []*ResourceQuota {
	if m != nil {
		return m.QuotaList
	}
	return nil
}

type ResourceQuota struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ClusterID            string   `protobuf:"bytes,3,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ResourceQuota        string   `protobuf:"bytes,4,opt,name=resourceQuota,proto3" json:"resourceQuota,omitempty"`
	Region               string   `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	CreateTime           string   `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string   `protobuf:"bytes,7,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	Status               string   `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Message              string   `protobuf:"bytes,9,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ResourceQuota) Reset()         { *m = ResourceQuota{} }
func (m *ResourceQuota) String() string { return proto.CompactTextString(m) }
func (*ResourceQuota) ProtoMessage()    {}
func (*ResourceQuota) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{11}
}

func (m *ResourceQuota) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceQuota.Unmarshal(m, b)
}
func (m *ResourceQuota) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceQuota.Marshal(b, m, deterministic)
}
func (m *ResourceQuota) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceQuota.Merge(m, src)
}
func (m *ResourceQuota) XXX_Size() int {
	return xxx_messageInfo_ResourceQuota.Size(m)
}
func (m *ResourceQuota) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceQuota.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceQuota proto.InternalMessageInfo

func (m *ResourceQuota) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ResourceQuota) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *ResourceQuota) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ResourceQuota) GetResourceQuota() string {
	if m != nil {
		return m.ResourceQuota
	}
	return ""
}

func (m *ResourceQuota) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *ResourceQuota) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *ResourceQuota) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *ResourceQuota) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ResourceQuota) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// Credential storage for cloud credential
type Credential struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Secret               string   `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	SubscriptionID       string   `protobuf:"bytes,3,opt,name=subscriptionID,proto3" json:"subscriptionID,omitempty"`
	TenantID             string   `protobuf:"bytes,4,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	ResourceGroupName    string   `protobuf:"bytes,5,opt,name=resourceGroupName,proto3" json:"resourceGroupName,omitempty"`
	ClientID             string   `protobuf:"bytes,6,opt,name=clientID,proto3" json:"clientID,omitempty"`
	ClientSecret         string   `protobuf:"bytes,7,opt,name=clientSecret,proto3" json:"clientSecret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *Credential) Reset()         { *m = Credential{} }
func (m *Credential) String() string { return proto.CompactTextString(m) }
func (*Credential) ProtoMessage()    {}
func (*Credential) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{12}
}

func (m *Credential) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Credential.Unmarshal(m, b)
}
func (m *Credential) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Credential.Marshal(b, m, deterministic)
}
func (m *Credential) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Credential.Merge(m, src)
}
func (m *Credential) XXX_Size() int {
	return xxx_messageInfo_Credential.Size(m)
}
func (m *Credential) XXX_DiscardUnknown() {
	xxx_messageInfo_Credential.DiscardUnknown(m)
}

var xxx_messageInfo_Credential proto.InternalMessageInfo

func (m *Credential) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Credential) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *Credential) GetSubscriptionID() string {
	if m != nil {
		return m.SubscriptionID
	}
	return ""
}

func (m *Credential) GetTenantID() string {
	if m != nil {
		return m.TenantID
	}
	return ""
}

func (m *Credential) GetResourceGroupName() string {
	if m != nil {
		return m.ResourceGroupName
	}
	return ""
}

func (m *Credential) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *Credential) GetClientSecret() string {
	if m != nil {
		return m.ClientSecret
	}
	return ""
}

type BKOpsPlugin struct {
	System               string            `protobuf:"bytes,1,opt,name=system,proto3" json:"system,omitempty"`
	Link                 string            `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
	Params               map[string]string `protobuf:"bytes,3,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *BKOpsPlugin) Reset()         { *m = BKOpsPlugin{} }
func (m *BKOpsPlugin) String() string { return proto.CompactTextString(m) }
func (*BKOpsPlugin) ProtoMessage()    {}
func (*BKOpsPlugin) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{13}
}

func (m *BKOpsPlugin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BKOpsPlugin.Unmarshal(m, b)
}
func (m *BKOpsPlugin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BKOpsPlugin.Marshal(b, m, deterministic)
}
func (m *BKOpsPlugin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BKOpsPlugin.Merge(m, src)
}
func (m *BKOpsPlugin) XXX_Size() int {
	return xxx_messageInfo_BKOpsPlugin.Size(m)
}
func (m *BKOpsPlugin) XXX_DiscardUnknown() {
	xxx_messageInfo_BKOpsPlugin.DiscardUnknown(m)
}

var xxx_messageInfo_BKOpsPlugin proto.InternalMessageInfo

func (m *BKOpsPlugin) GetSystem() string {
	if m != nil {
		return m.System
	}
	return ""
}

func (m *BKOpsPlugin) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *BKOpsPlugin) GetParams() map[string]string {
	if m != nil {
		return m.Params
	}
	return nil
}

type Action struct {
	PreActions           []string                `protobuf:"bytes,1,rep,name=preActions,proto3" json:"preActions,omitempty"`
	PostActions          []string                `protobuf:"bytes,2,rep,name=postActions,proto3" json:"postActions,omitempty"`
	Plugins              map[string]*BKOpsPlugin `protobuf:"bytes,3,rep,name=plugins,proto3" json:"plugins,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-" bson:"-"`
	XXX_unrecognized     []byte                  `json:"-" bson:"-"`
	XXX_sizecache        int32                   `json:"-" bson:"-"`
}

func (m *Action) Reset()         { *m = Action{} }
func (m *Action) String() string { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()    {}
func (*Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{14}
}

func (m *Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action.Unmarshal(m, b)
}
func (m *Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action.Marshal(b, m, deterministic)
}
func (m *Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action.Merge(m, src)
}
func (m *Action) XXX_Size() int {
	return xxx_messageInfo_Action.Size(m)
}
func (m *Action) XXX_DiscardUnknown() {
	xxx_messageInfo_Action.DiscardUnknown(m)
}

var xxx_messageInfo_Action proto.InternalMessageInfo

func (m *Action) GetPreActions() []string {
	if m != nil {
		return m.PreActions
	}
	return nil
}

func (m *Action) GetPostActions() []string {
	if m != nil {
		return m.PostActions
	}
	return nil
}

func (m *Action) GetPlugins() map[string]*BKOpsPlugin {
	if m != nil {
		return m.Plugins
	}
	return nil
}

type ClusterMgr struct {
	AvailableVersion       []string `protobuf:"bytes,1,rep,name=availableVersion,proto3" json:"availableVersion,omitempty"`
	CreateCluster          *Action  `protobuf:"bytes,2,opt,name=createCluster,proto3" json:"createCluster,omitempty"`
	DeleteCluster          *Action  `protobuf:"bytes,3,opt,name=deleteCluster,proto3" json:"deleteCluster,omitempty"`
	AddNodesToCluster      *Action  `protobuf:"bytes,4,opt,name=addNodesToCluster,proto3" json:"addNodesToCluster,omitempty"`
	DeleteNodesFromCluster *Action  `protobuf:"bytes,5,opt,name=deleteNodesFromCluster,proto3" json:"deleteNodesFromCluster,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-" bson:"-"`
	XXX_unrecognized       []byte   `json:"-" bson:"-"`
	XXX_sizecache          int32    `json:"-" bson:"-"`
}

func (m *ClusterMgr) Reset()         { *m = ClusterMgr{} }
func (m *ClusterMgr) String() string { return proto.CompactTextString(m) }
func (*ClusterMgr) ProtoMessage()    {}
func (*ClusterMgr) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{15}
}

func (m *ClusterMgr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterMgr.Unmarshal(m, b)
}
func (m *ClusterMgr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterMgr.Marshal(b, m, deterministic)
}
func (m *ClusterMgr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterMgr.Merge(m, src)
}
func (m *ClusterMgr) XXX_Size() int {
	return xxx_messageInfo_ClusterMgr.Size(m)
}
func (m *ClusterMgr) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterMgr.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterMgr proto.InternalMessageInfo

func (m *ClusterMgr) GetAvailableVersion() []string {
	if m != nil {
		return m.AvailableVersion
	}
	return nil
}

func (m *ClusterMgr) GetCreateCluster() *Action {
	if m != nil {
		return m.CreateCluster
	}
	return nil
}

func (m *ClusterMgr) GetDeleteCluster() *Action {
	if m != nil {
		return m.DeleteCluster
	}
	return nil
}

func (m *ClusterMgr) GetAddNodesToCluster() *Action {
	if m != nil {
		return m.AddNodesToCluster
	}
	return nil
}

func (m *ClusterMgr) GetDeleteNodesFromCluster() *Action {
	if m != nil {
		return m.DeleteNodesFromCluster
	}
	return nil
}

type NodeGroupMgr struct {
	CreateNodeGroup      *Action  `protobuf:"bytes,2,opt,name=createNodeGroup,proto3" json:"createNodeGroup,omitempty"`
	DeleteNodeGroup      *Action  `protobuf:"bytes,3,opt,name=deleteNodeGroup,proto3" json:"deleteNodeGroup,omitempty"`
	MoveNodesToGroup     *Action  `protobuf:"bytes,4,opt,name=moveNodesToGroup,proto3" json:"moveNodesToGroup,omitempty"`
	RemoveNodesFromGroup *Action  `protobuf:"bytes,5,opt,name=removeNodesFromGroup,proto3" json:"removeNodesFromGroup,omitempty"`
	CleanNodesInGroup    *Action  `protobuf:"bytes,6,opt,name=cleanNodesInGroup,proto3" json:"cleanNodesInGroup,omitempty"`
	UpdateDesiredNodes   *Action  `protobuf:"bytes,7,opt,name=updateDesiredNodes,proto3" json:"updateDesiredNodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *NodeGroupMgr) Reset()         { *m = NodeGroupMgr{} }
func (m *NodeGroupMgr) String() string { return proto.CompactTextString(m) }
func (*NodeGroupMgr) ProtoMessage()    {}
func (*NodeGroupMgr) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{16}
}

func (m *NodeGroupMgr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeGroupMgr.Unmarshal(m, b)
}
func (m *NodeGroupMgr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeGroupMgr.Marshal(b, m, deterministic)
}
func (m *NodeGroupMgr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeGroupMgr.Merge(m, src)
}
func (m *NodeGroupMgr) XXX_Size() int {
	return xxx_messageInfo_NodeGroupMgr.Size(m)
}
func (m *NodeGroupMgr) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeGroupMgr.DiscardUnknown(m)
}

var xxx_messageInfo_NodeGroupMgr proto.InternalMessageInfo

func (m *NodeGroupMgr) GetCreateNodeGroup() *Action {
	if m != nil {
		return m.CreateNodeGroup
	}
	return nil
}

func (m *NodeGroupMgr) GetDeleteNodeGroup() *Action {
	if m != nil {
		return m.DeleteNodeGroup
	}
	return nil
}

func (m *NodeGroupMgr) GetMoveNodesToGroup() *Action {
	if m != nil {
		return m.MoveNodesToGroup
	}
	return nil
}

func (m *NodeGroupMgr) GetRemoveNodesFromGroup() *Action {
	if m != nil {
		return m.RemoveNodesFromGroup
	}
	return nil
}

func (m *NodeGroupMgr) GetCleanNodesInGroup() *Action {
	if m != nil {
		return m.CleanNodesInGroup
	}
	return nil
}

func (m *NodeGroupMgr) GetUpdateDesiredNodes() *Action {
	if m != nil {
		return m.UpdateDesiredNodes
	}
	return nil
}

type OSInfo struct {
	AvailableVersion      []string          `protobuf:"bytes,1,rep,name=availableVersion,proto3" json:"availableVersion,omitempty"`
	InstanceType          []string          `protobuf:"bytes,2,rep,name=instanceType,proto3" json:"instanceType,omitempty"`
	DefaultSecurityGroups []string          `protobuf:"bytes,3,rep,name=defaultSecurityGroups,proto3" json:"defaultSecurityGroups,omitempty"`
	Regions               map[string]string `protobuf:"bytes,4,rep,name=regions,proto3" json:"regions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral  struct{}          `json:"-" bson:"-"`
	XXX_unrecognized      []byte            `json:"-" bson:"-"`
	XXX_sizecache         int32             `json:"-" bson:"-"`
}

func (m *OSInfo) Reset()         { *m = OSInfo{} }
func (m *OSInfo) String() string { return proto.CompactTextString(m) }
func (*OSInfo) ProtoMessage()    {}
func (*OSInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{17}
}

func (m *OSInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OSInfo.Unmarshal(m, b)
}
func (m *OSInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OSInfo.Marshal(b, m, deterministic)
}
func (m *OSInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OSInfo.Merge(m, src)
}
func (m *OSInfo) XXX_Size() int {
	return xxx_messageInfo_OSInfo.Size(m)
}
func (m *OSInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OSInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OSInfo proto.InternalMessageInfo

func (m *OSInfo) GetAvailableVersion() []string {
	if m != nil {
		return m.AvailableVersion
	}
	return nil
}

func (m *OSInfo) GetInstanceType() []string {
	if m != nil {
		return m.InstanceType
	}
	return nil
}

func (m *OSInfo) GetDefaultSecurityGroups() []string {
	if m != nil {
		return m.DefaultSecurityGroups
	}
	return nil
}

func (m *OSInfo) GetRegions() map[string]string {
	if m != nil {
		return m.Regions
	}
	return nil
}

// Account account info
type Account struct {
	SecretID             string   `protobuf:"bytes,1,opt,name=secretID,proto3" json:"secretID,omitempty"`
	SecretKey            string   `protobuf:"bytes,2,opt,name=secretKey,proto3" json:"secretKey,omitempty"`
	SubscriptionID       string   `protobuf:"bytes,3,opt,name=subscriptionID,proto3" json:"subscriptionID,omitempty"`
	TenantID             string   `protobuf:"bytes,4,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	ResourceGroupName    string   `protobuf:"bytes,5,opt,name=resourceGroupName,proto3" json:"resourceGroupName,omitempty"`
	ClientID             string   `protobuf:"bytes,6,opt,name=clientID,proto3" json:"clientID,omitempty"`
	ClientSecret         string   `protobuf:"bytes,7,opt,name=clientSecret,proto3" json:"clientSecret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{18}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetSecretID() string {
	if m != nil {
		return m.SecretID
	}
	return ""
}

func (m *Account) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

func (m *Account) GetSubscriptionID() string {
	if m != nil {
		return m.SubscriptionID
	}
	return ""
}

func (m *Account) GetTenantID() string {
	if m != nil {
		return m.TenantID
	}
	return ""
}

func (m *Account) GetResourceGroupName() string {
	if m != nil {
		return m.ResourceGroupName
	}
	return ""
}

func (m *Account) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *Account) GetClientSecret() string {
	if m != nil {
		return m.ClientSecret
	}
	return ""
}

// cloud account manage
type CloudAccount struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	ProjectID            string   `protobuf:"bytes,2,opt,name=projectID,proto3" json:"projectID,omitempty"`
	AccountID            string   `protobuf:"bytes,3,opt,name=accountID,proto3" json:"accountID,omitempty"`
	AccountName          string   `protobuf:"bytes,4,opt,name=accountName,proto3" json:"accountName,omitempty"`
	Desc                 string   `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`
	Account              *Account `protobuf:"bytes,6,opt,name=account,proto3" json:"account,omitempty"`
	Enable               bool     `protobuf:"varint,7,opt,name=enable,proto3" json:"enable,omitempty"`
	Creator              string   `protobuf:"bytes,8,opt,name=creator,proto3" json:"creator,omitempty"`
	Updater              string   `protobuf:"bytes,9,opt,name=updater,proto3" json:"updater,omitempty"`
	CreatTime            string   `protobuf:"bytes,10,opt,name=creatTime,proto3" json:"creatTime,omitempty"`
	UpdateTime           string   `protobuf:"bytes,11,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CloudAccount) Reset()         { *m = CloudAccount{} }
func (m *CloudAccount) String() string { return proto.CompactTextString(m) }
func (*CloudAccount) ProtoMessage()    {}
func (*CloudAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{19}
}

func (m *CloudAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudAccount.Unmarshal(m, b)
}
func (m *CloudAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudAccount.Marshal(b, m, deterministic)
}
func (m *CloudAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudAccount.Merge(m, src)
}
func (m *CloudAccount) XXX_Size() int {
	return xxx_messageInfo_CloudAccount.Size(m)
}
func (m *CloudAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudAccount.DiscardUnknown(m)
}

var xxx_messageInfo_CloudAccount proto.InternalMessageInfo

func (m *CloudAccount) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *CloudAccount) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *CloudAccount) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *CloudAccount) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *CloudAccount) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *CloudAccount) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *CloudAccount) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

func (m *CloudAccount) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CloudAccount) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *CloudAccount) GetCreatTime() string {
	if m != nil {
		return m.CreatTime
	}
	return ""
}

func (m *CloudAccount) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

type CreateCloudAccountRequest struct {
	CloudID              string              `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	AccountName          string              `protobuf:"bytes,2,opt,name=accountName,proto3" json:"accountName,omitempty"`
	Desc                 string              `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Account              *Account            `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`
	Enable               *wrappers.BoolValue `protobuf:"bytes,5,opt,name=enable,proto3" json:"enable,omitempty"`
	Creator              string              `protobuf:"bytes,6,opt,name=creator,proto3" json:"creator,omitempty"`
	ProjectID            string              `protobuf:"bytes,7,opt,name=projectID,proto3" json:"projectID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-" bson:"-"`
	XXX_unrecognized     []byte              `json:"-" bson:"-"`
	XXX_sizecache        int32               `json:"-" bson:"-"`
}

func (m *CreateCloudAccountRequest) Reset()         { *m = CreateCloudAccountRequest{} }
func (m *CreateCloudAccountRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCloudAccountRequest) ProtoMessage()    {}
func (*CreateCloudAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{20}
}

func (m *CreateCloudAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCloudAccountRequest.Unmarshal(m, b)
}
func (m *CreateCloudAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCloudAccountRequest.Marshal(b, m, deterministic)
}
func (m *CreateCloudAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCloudAccountRequest.Merge(m, src)
}
func (m *CreateCloudAccountRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCloudAccountRequest.Size(m)
}
func (m *CreateCloudAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCloudAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCloudAccountRequest proto.InternalMessageInfo

func (m *CreateCloudAccountRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *CreateCloudAccountRequest) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *CreateCloudAccountRequest) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *CreateCloudAccountRequest) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *CreateCloudAccountRequest) GetEnable() *wrappers.BoolValue {
	if m != nil {
		return m.Enable
	}
	return nil
}

func (m *CreateCloudAccountRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CreateCloudAccountRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

type CreateCloudAccountResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CreateCloudAccountResponse) Reset()         { *m = CreateCloudAccountResponse{} }
func (m *CreateCloudAccountResponse) String() string { return proto.CompactTextString(m) }
func (*CreateCloudAccountResponse) ProtoMessage()    {}
func (*CreateCloudAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{21}
}

func (m *CreateCloudAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCloudAccountResponse.Unmarshal(m, b)
}
func (m *CreateCloudAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCloudAccountResponse.Marshal(b, m, deterministic)
}
func (m *CreateCloudAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCloudAccountResponse.Merge(m, src)
}
func (m *CreateCloudAccountResponse) XXX_Size() int {
	return xxx_messageInfo_CreateCloudAccountResponse.Size(m)
}
func (m *CreateCloudAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCloudAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCloudAccountResponse proto.InternalMessageInfo

func (m *CreateCloudAccountResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateCloudAccountResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateCloudAccountResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type UpdateCloudAccountRequest struct {
	CloudID              string              `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	AccountID            string              `protobuf:"bytes,2,opt,name=accountID,proto3" json:"accountID,omitempty"`
	AccountName          string              `protobuf:"bytes,3,opt,name=accountName,proto3" json:"accountName,omitempty"`
	Desc                 string              `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	Enable               *wrappers.BoolValue `protobuf:"bytes,5,opt,name=enable,proto3" json:"enable,omitempty"`
	ProjectID            string              `protobuf:"bytes,6,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Updater              string              `protobuf:"bytes,7,opt,name=updater,proto3" json:"updater,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-" bson:"-"`
	XXX_unrecognized     []byte              `json:"-" bson:"-"`
	XXX_sizecache        int32               `json:"-" bson:"-"`
}

func (m *UpdateCloudAccountRequest) Reset()         { *m = UpdateCloudAccountRequest{} }
func (m *UpdateCloudAccountRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCloudAccountRequest) ProtoMessage()    {}
func (*UpdateCloudAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{22}
}

func (m *UpdateCloudAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCloudAccountRequest.Unmarshal(m, b)
}
func (m *UpdateCloudAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCloudAccountRequest.Marshal(b, m, deterministic)
}
func (m *UpdateCloudAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCloudAccountRequest.Merge(m, src)
}
func (m *UpdateCloudAccountRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCloudAccountRequest.Size(m)
}
func (m *UpdateCloudAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCloudAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCloudAccountRequest proto.InternalMessageInfo

func (m *UpdateCloudAccountRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *UpdateCloudAccountRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *UpdateCloudAccountRequest) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *UpdateCloudAccountRequest) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *UpdateCloudAccountRequest) GetEnable() *wrappers.BoolValue {
	if m != nil {
		return m.Enable
	}
	return nil
}

func (m *UpdateCloudAccountRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *UpdateCloudAccountRequest) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

type UpdateCloudAccountResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateCloudAccountResponse) Reset()         { *m = UpdateCloudAccountResponse{} }
func (m *UpdateCloudAccountResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateCloudAccountResponse) ProtoMessage()    {}
func (*UpdateCloudAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{23}
}

func (m *UpdateCloudAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCloudAccountResponse.Unmarshal(m, b)
}
func (m *UpdateCloudAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCloudAccountResponse.Marshal(b, m, deterministic)
}
func (m *UpdateCloudAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCloudAccountResponse.Merge(m, src)
}
func (m *UpdateCloudAccountResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateCloudAccountResponse.Size(m)
}
func (m *UpdateCloudAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCloudAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCloudAccountResponse proto.InternalMessageInfo

func (m *UpdateCloudAccountResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateCloudAccountResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateCloudAccountResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type DeleteCloudAccountRequest struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	AccountID            string   `protobuf:"bytes,2,opt,name=accountID,proto3" json:"accountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteCloudAccountRequest) Reset()         { *m = DeleteCloudAccountRequest{} }
func (m *DeleteCloudAccountRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCloudAccountRequest) ProtoMessage()    {}
func (*DeleteCloudAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{24}
}

func (m *DeleteCloudAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCloudAccountRequest.Unmarshal(m, b)
}
func (m *DeleteCloudAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCloudAccountRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCloudAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCloudAccountRequest.Merge(m, src)
}
func (m *DeleteCloudAccountRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCloudAccountRequest.Size(m)
}
func (m *DeleteCloudAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCloudAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCloudAccountRequest proto.InternalMessageInfo

func (m *DeleteCloudAccountRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *DeleteCloudAccountRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

type DeleteCloudAccountResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteCloudAccountResponse) Reset()         { *m = DeleteCloudAccountResponse{} }
func (m *DeleteCloudAccountResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteCloudAccountResponse) ProtoMessage()    {}
func (*DeleteCloudAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{25}
}

func (m *DeleteCloudAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCloudAccountResponse.Unmarshal(m, b)
}
func (m *DeleteCloudAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCloudAccountResponse.Marshal(b, m, deterministic)
}
func (m *DeleteCloudAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCloudAccountResponse.Merge(m, src)
}
func (m *DeleteCloudAccountResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteCloudAccountResponse.Size(m)
}
func (m *DeleteCloudAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCloudAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCloudAccountResponse proto.InternalMessageInfo

func (m *DeleteCloudAccountResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteCloudAccountResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteCloudAccountResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type ListCloudAccountPermRequest struct {
	ProjectID            string   `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	AccountID            []string `protobuf:"bytes,2,rep,name=accountID,proto3" json:"accountID,omitempty"`
	AccountName          string   `protobuf:"bytes,3,opt,name=accountName,proto3" json:"accountName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListCloudAccountPermRequest) Reset()         { *m = ListCloudAccountPermRequest{} }
func (m *ListCloudAccountPermRequest) String() string { return proto.CompactTextString(m) }
func (*ListCloudAccountPermRequest) ProtoMessage()    {}
func (*ListCloudAccountPermRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{26}
}

func (m *ListCloudAccountPermRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCloudAccountPermRequest.Unmarshal(m, b)
}
func (m *ListCloudAccountPermRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCloudAccountPermRequest.Marshal(b, m, deterministic)
}
func (m *ListCloudAccountPermRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCloudAccountPermRequest.Merge(m, src)
}
func (m *ListCloudAccountPermRequest) XXX_Size() int {
	return xxx_messageInfo_ListCloudAccountPermRequest.Size(m)
}
func (m *ListCloudAccountPermRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCloudAccountPermRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCloudAccountPermRequest proto.InternalMessageInfo

func (m *ListCloudAccountPermRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *ListCloudAccountPermRequest) GetAccountID() []string {
	if m != nil {
		return m.AccountID
	}
	return nil
}

func (m *ListCloudAccountPermRequest) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

type ListCloudAccountPermResponse struct {
	Code                 uint32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool            `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*CloudAccount `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" bson:"-"`
	XXX_unrecognized     []byte          `json:"-" bson:"-"`
	XXX_sizecache        int32           `json:"-" bson:"-"`
}

func (m *ListCloudAccountPermResponse) Reset()         { *m = ListCloudAccountPermResponse{} }
func (m *ListCloudAccountPermResponse) String() string { return proto.CompactTextString(m) }
func (*ListCloudAccountPermResponse) ProtoMessage()    {}
func (*ListCloudAccountPermResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{27}
}

func (m *ListCloudAccountPermResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCloudAccountPermResponse.Unmarshal(m, b)
}
func (m *ListCloudAccountPermResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCloudAccountPermResponse.Marshal(b, m, deterministic)
}
func (m *ListCloudAccountPermResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCloudAccountPermResponse.Merge(m, src)
}
func (m *ListCloudAccountPermResponse) XXX_Size() int {
	return xxx_messageInfo_ListCloudAccountPermResponse.Size(m)
}
func (m *ListCloudAccountPermResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCloudAccountPermResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCloudAccountPermResponse proto.InternalMessageInfo

func (m *ListCloudAccountPermResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListCloudAccountPermResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListCloudAccountPermResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListCloudAccountPermResponse) GetData() []*CloudAccount {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListCloudAccountRequest struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	AccountID            string   `protobuf:"bytes,2,opt,name=accountID,proto3" json:"accountID,omitempty"`
	ProjectID            string   `protobuf:"bytes,3,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Operator             string   `protobuf:"bytes,4,opt,name=operator,proto3" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListCloudAccountRequest) Reset()         { *m = ListCloudAccountRequest{} }
func (m *ListCloudAccountRequest) String() string { return proto.CompactTextString(m) }
func (*ListCloudAccountRequest) ProtoMessage()    {}
func (*ListCloudAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{28}
}

func (m *ListCloudAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCloudAccountRequest.Unmarshal(m, b)
}
func (m *ListCloudAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCloudAccountRequest.Marshal(b, m, deterministic)
}
func (m *ListCloudAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCloudAccountRequest.Merge(m, src)
}
func (m *ListCloudAccountRequest) XXX_Size() int {
	return xxx_messageInfo_ListCloudAccountRequest.Size(m)
}
func (m *ListCloudAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCloudAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCloudAccountRequest proto.InternalMessageInfo

func (m *ListCloudAccountRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *ListCloudAccountRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *ListCloudAccountRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *ListCloudAccountRequest) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

// CloudAccountInfo return account relative info
type CloudAccountInfo struct {
	Account              *CloudAccount `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Clusters             []string      `protobuf:"bytes,2,rep,name=clusters,proto3" json:"clusters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-" bson:"-"`
	XXX_unrecognized     []byte        `json:"-" bson:"-"`
	XXX_sizecache        int32         `json:"-" bson:"-"`
}

func (m *CloudAccountInfo) Reset()         { *m = CloudAccountInfo{} }
func (m *CloudAccountInfo) String() string { return proto.CompactTextString(m) }
func (*CloudAccountInfo) ProtoMessage()    {}
func (*CloudAccountInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{29}
}

func (m *CloudAccountInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudAccountInfo.Unmarshal(m, b)
}
func (m *CloudAccountInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudAccountInfo.Marshal(b, m, deterministic)
}
func (m *CloudAccountInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudAccountInfo.Merge(m, src)
}
func (m *CloudAccountInfo) XXX_Size() int {
	return xxx_messageInfo_CloudAccountInfo.Size(m)
}
func (m *CloudAccountInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudAccountInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CloudAccountInfo proto.InternalMessageInfo

func (m *CloudAccountInfo) GetAccount() *CloudAccount {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *CloudAccountInfo) GetClusters() []string {
	if m != nil {
		return m.Clusters
	}
	return nil
}

type ListCloudAccountResponse struct {
	Code                 uint32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*CloudAccountInfo `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	WebAnnotations       *WebAnnotations     `protobuf:"bytes,5,opt,name=web_annotations,json=webAnnotations,proto3" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-" bson:"-"`
	XXX_unrecognized     []byte              `json:"-" bson:"-"`
	XXX_sizecache        int32               `json:"-" bson:"-"`
}

func (m *ListCloudAccountResponse) Reset()         { *m = ListCloudAccountResponse{} }
func (m *ListCloudAccountResponse) String() string { return proto.CompactTextString(m) }
func (*ListCloudAccountResponse) ProtoMessage()    {}
func (*ListCloudAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{30}
}

func (m *ListCloudAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCloudAccountResponse.Unmarshal(m, b)
}
func (m *ListCloudAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCloudAccountResponse.Marshal(b, m, deterministic)
}
func (m *ListCloudAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCloudAccountResponse.Merge(m, src)
}
func (m *ListCloudAccountResponse) XXX_Size() int {
	return xxx_messageInfo_ListCloudAccountResponse.Size(m)
}
func (m *ListCloudAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCloudAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCloudAccountResponse proto.InternalMessageInfo

func (m *ListCloudAccountResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListCloudAccountResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListCloudAccountResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListCloudAccountResponse) GetData() []*CloudAccountInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListCloudAccountResponse) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

// cloud region VPCInfo
type CloudVPC struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	Region               string   `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	RegionName           string   `protobuf:"bytes,3,opt,name=regionName,proto3" json:"regionName,omitempty"`
	NetworkType          string   `protobuf:"bytes,4,opt,name=networkType,proto3" json:"networkType,omitempty"`
	VpcID                string   `protobuf:"bytes,5,opt,name=vpcID,proto3" json:"vpcID,omitempty"`
	VpcName              string   `protobuf:"bytes,6,opt,name=vpcName,proto3" json:"vpcName,omitempty"`
	Available            string   `protobuf:"bytes,7,opt,name=available,proto3" json:"available,omitempty"`
	Extra                string   `protobuf:"bytes,8,opt,name=extra,proto3" json:"extra,omitempty"`
	Creator              string   `protobuf:"bytes,9,opt,name=creator,proto3" json:"creator,omitempty"`
	Updater              string   `protobuf:"bytes,10,opt,name=updater,proto3" json:"updater,omitempty"`
	CreatTime            string   `protobuf:"bytes,11,opt,name=creatTime,proto3" json:"creatTime,omitempty"`
	UpdateTime           string   `protobuf:"bytes,12,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CloudVPC) Reset()         { *m = CloudVPC{} }
func (m *CloudVPC) String() string { return proto.CompactTextString(m) }
func (*CloudVPC) ProtoMessage()    {}
func (*CloudVPC) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{31}
}

func (m *CloudVPC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudVPC.Unmarshal(m, b)
}
func (m *CloudVPC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudVPC.Marshal(b, m, deterministic)
}
func (m *CloudVPC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudVPC.Merge(m, src)
}
func (m *CloudVPC) XXX_Size() int {
	return xxx_messageInfo_CloudVPC.Size(m)
}
func (m *CloudVPC) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudVPC.DiscardUnknown(m)
}

var xxx_messageInfo_CloudVPC proto.InternalMessageInfo

func (m *CloudVPC) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *CloudVPC) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *CloudVPC) GetRegionName() string {
	if m != nil {
		return m.RegionName
	}
	return ""
}

func (m *CloudVPC) GetNetworkType() string {
	if m != nil {
		return m.NetworkType
	}
	return ""
}

func (m *CloudVPC) GetVpcID() string {
	if m != nil {
		return m.VpcID
	}
	return ""
}

func (m *CloudVPC) GetVpcName() string {
	if m != nil {
		return m.VpcName
	}
	return ""
}

func (m *CloudVPC) GetAvailable() string {
	if m != nil {
		return m.Available
	}
	return ""
}

func (m *CloudVPC) GetExtra() string {
	if m != nil {
		return m.Extra
	}
	return ""
}

func (m *CloudVPC) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CloudVPC) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *CloudVPC) GetCreatTime() string {
	if m != nil {
		return m.CreatTime
	}
	return ""
}

func (m *CloudVPC) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

type CreateCloudVPCRequest struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	NetworkType          string   `protobuf:"bytes,2,opt,name=networkType,proto3" json:"networkType,omitempty"`
	Region               string   `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	RegionName           string   `protobuf:"bytes,4,opt,name=regionName,proto3" json:"regionName,omitempty"`
	VpcName              string   `protobuf:"bytes,5,opt,name=vpcName,proto3" json:"vpcName,omitempty"`
	VpcID                string   `protobuf:"bytes,6,opt,name=vpcID,proto3" json:"vpcID,omitempty"`
	Available            string   `protobuf:"bytes,7,opt,name=available,proto3" json:"available,omitempty"`
	Extra                string   `protobuf:"bytes,8,opt,name=extra,proto3" json:"extra,omitempty"`
	Creator              string   `protobuf:"bytes,9,opt,name=creator,proto3" json:"creator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CreateCloudVPCRequest) Reset()         { *m = CreateCloudVPCRequest{} }
func (m *CreateCloudVPCRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCloudVPCRequest) ProtoMessage()    {}
func (*CreateCloudVPCRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{32}
}

func (m *CreateCloudVPCRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCloudVPCRequest.Unmarshal(m, b)
}
func (m *CreateCloudVPCRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCloudVPCRequest.Marshal(b, m, deterministic)
}
func (m *CreateCloudVPCRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCloudVPCRequest.Merge(m, src)
}
func (m *CreateCloudVPCRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCloudVPCRequest.Size(m)
}
func (m *CreateCloudVPCRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCloudVPCRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCloudVPCRequest proto.InternalMessageInfo

func (m *CreateCloudVPCRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *CreateCloudVPCRequest) GetNetworkType() string {
	if m != nil {
		return m.NetworkType
	}
	return ""
}

func (m *CreateCloudVPCRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *CreateCloudVPCRequest) GetRegionName() string {
	if m != nil {
		return m.RegionName
	}
	return ""
}

func (m *CreateCloudVPCRequest) GetVpcName() string {
	if m != nil {
		return m.VpcName
	}
	return ""
}

func (m *CreateCloudVPCRequest) GetVpcID() string {
	if m != nil {
		return m.VpcID
	}
	return ""
}

func (m *CreateCloudVPCRequest) GetAvailable() string {
	if m != nil {
		return m.Available
	}
	return ""
}

func (m *CreateCloudVPCRequest) GetExtra() string {
	if m != nil {
		return m.Extra
	}
	return ""
}

func (m *CreateCloudVPCRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type CreateCloudVPCResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CreateCloudVPCResponse) Reset()         { *m = CreateCloudVPCResponse{} }
func (m *CreateCloudVPCResponse) String() string { return proto.CompactTextString(m) }
func (*CreateCloudVPCResponse) ProtoMessage()    {}
func (*CreateCloudVPCResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{33}
}

func (m *CreateCloudVPCResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCloudVPCResponse.Unmarshal(m, b)
}
func (m *CreateCloudVPCResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCloudVPCResponse.Marshal(b, m, deterministic)
}
func (m *CreateCloudVPCResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCloudVPCResponse.Merge(m, src)
}
func (m *CreateCloudVPCResponse) XXX_Size() int {
	return xxx_messageInfo_CreateCloudVPCResponse.Size(m)
}
func (m *CreateCloudVPCResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCloudVPCResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCloudVPCResponse proto.InternalMessageInfo

func (m *CreateCloudVPCResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateCloudVPCResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateCloudVPCResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type UpdateCloudVPCRequest struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	NetworkType          string   `protobuf:"bytes,2,opt,name=networkType,proto3" json:"networkType,omitempty"`
	Region               string   `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	RegionName           string   `protobuf:"bytes,4,opt,name=regionName,proto3" json:"regionName,omitempty"`
	VpcName              string   `protobuf:"bytes,5,opt,name=vpcName,proto3" json:"vpcName,omitempty"`
	VpcID                string   `protobuf:"bytes,6,opt,name=vpcID,proto3" json:"vpcID,omitempty"`
	Available            string   `protobuf:"bytes,7,opt,name=available,proto3" json:"available,omitempty"`
	Updater              string   `protobuf:"bytes,8,opt,name=updater,proto3" json:"updater,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateCloudVPCRequest) Reset()         { *m = UpdateCloudVPCRequest{} }
func (m *UpdateCloudVPCRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCloudVPCRequest) ProtoMessage()    {}
func (*UpdateCloudVPCRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{34}
}

func (m *UpdateCloudVPCRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCloudVPCRequest.Unmarshal(m, b)
}
func (m *UpdateCloudVPCRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCloudVPCRequest.Marshal(b, m, deterministic)
}
func (m *UpdateCloudVPCRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCloudVPCRequest.Merge(m, src)
}
func (m *UpdateCloudVPCRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCloudVPCRequest.Size(m)
}
func (m *UpdateCloudVPCRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCloudVPCRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCloudVPCRequest proto.InternalMessageInfo

func (m *UpdateCloudVPCRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *UpdateCloudVPCRequest) GetNetworkType() string {
	if m != nil {
		return m.NetworkType
	}
	return ""
}

func (m *UpdateCloudVPCRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *UpdateCloudVPCRequest) GetRegionName() string {
	if m != nil {
		return m.RegionName
	}
	return ""
}

func (m *UpdateCloudVPCRequest) GetVpcName() string {
	if m != nil {
		return m.VpcName
	}
	return ""
}

func (m *UpdateCloudVPCRequest) GetVpcID() string {
	if m != nil {
		return m.VpcID
	}
	return ""
}

func (m *UpdateCloudVPCRequest) GetAvailable() string {
	if m != nil {
		return m.Available
	}
	return ""
}

func (m *UpdateCloudVPCRequest) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

type UpdateCloudVPCResponse struct {
	Code                 uint32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool      `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *CloudVPC `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-" bson:"-"`
	XXX_unrecognized     []byte    `json:"-" bson:"-"`
	XXX_sizecache        int32     `json:"-" bson:"-"`
}

func (m *UpdateCloudVPCResponse) Reset()         { *m = UpdateCloudVPCResponse{} }
func (m *UpdateCloudVPCResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateCloudVPCResponse) ProtoMessage()    {}
func (*UpdateCloudVPCResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{35}
}

func (m *UpdateCloudVPCResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCloudVPCResponse.Unmarshal(m, b)
}
func (m *UpdateCloudVPCResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCloudVPCResponse.Marshal(b, m, deterministic)
}
func (m *UpdateCloudVPCResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCloudVPCResponse.Merge(m, src)
}
func (m *UpdateCloudVPCResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateCloudVPCResponse.Size(m)
}
func (m *UpdateCloudVPCResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCloudVPCResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCloudVPCResponse proto.InternalMessageInfo

func (m *UpdateCloudVPCResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateCloudVPCResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateCloudVPCResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *UpdateCloudVPCResponse) GetData() *CloudVPC {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteCloudVPCRequest struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	VpcID                string   `protobuf:"bytes,2,opt,name=vpcID,proto3" json:"vpcID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteCloudVPCRequest) Reset()         { *m = DeleteCloudVPCRequest{} }
func (m *DeleteCloudVPCRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCloudVPCRequest) ProtoMessage()    {}
func (*DeleteCloudVPCRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{36}
}

func (m *DeleteCloudVPCRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCloudVPCRequest.Unmarshal(m, b)
}
func (m *DeleteCloudVPCRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCloudVPCRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCloudVPCRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCloudVPCRequest.Merge(m, src)
}
func (m *DeleteCloudVPCRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCloudVPCRequest.Size(m)
}
func (m *DeleteCloudVPCRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCloudVPCRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCloudVPCRequest proto.InternalMessageInfo

func (m *DeleteCloudVPCRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *DeleteCloudVPCRequest) GetVpcID() string {
	if m != nil {
		return m.VpcID
	}
	return ""
}

type DeleteCloudVPCResponse struct {
	Code                 uint32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool      `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *CloudVPC `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-" bson:"-"`
	XXX_unrecognized     []byte    `json:"-" bson:"-"`
	XXX_sizecache        int32     `json:"-" bson:"-"`
}

func (m *DeleteCloudVPCResponse) Reset()         { *m = DeleteCloudVPCResponse{} }
func (m *DeleteCloudVPCResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteCloudVPCResponse) ProtoMessage()    {}
func (*DeleteCloudVPCResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{37}
}

func (m *DeleteCloudVPCResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCloudVPCResponse.Unmarshal(m, b)
}
func (m *DeleteCloudVPCResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCloudVPCResponse.Marshal(b, m, deterministic)
}
func (m *DeleteCloudVPCResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCloudVPCResponse.Merge(m, src)
}
func (m *DeleteCloudVPCResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteCloudVPCResponse.Size(m)
}
func (m *DeleteCloudVPCResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCloudVPCResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCloudVPCResponse proto.InternalMessageInfo

func (m *DeleteCloudVPCResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteCloudVPCResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteCloudVPCResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *DeleteCloudVPCResponse) GetData() *CloudVPC {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListCloudVPCRequest struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	Region               string   `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	VpcID                string   `protobuf:"bytes,3,opt,name=vpcID,proto3" json:"vpcID,omitempty"`
	NetworkType          string   `protobuf:"bytes,4,opt,name=networkType,proto3" json:"networkType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListCloudVPCRequest) Reset()         { *m = ListCloudVPCRequest{} }
func (m *ListCloudVPCRequest) String() string { return proto.CompactTextString(m) }
func (*ListCloudVPCRequest) ProtoMessage()    {}
func (*ListCloudVPCRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{38}
}

func (m *ListCloudVPCRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCloudVPCRequest.Unmarshal(m, b)
}
func (m *ListCloudVPCRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCloudVPCRequest.Marshal(b, m, deterministic)
}
func (m *ListCloudVPCRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCloudVPCRequest.Merge(m, src)
}
func (m *ListCloudVPCRequest) XXX_Size() int {
	return xxx_messageInfo_ListCloudVPCRequest.Size(m)
}
func (m *ListCloudVPCRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCloudVPCRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCloudVPCRequest proto.InternalMessageInfo

func (m *ListCloudVPCRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *ListCloudVPCRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *ListCloudVPCRequest) GetVpcID() string {
	if m != nil {
		return m.VpcID
	}
	return ""
}

func (m *ListCloudVPCRequest) GetNetworkType() string {
	if m != nil {
		return m.NetworkType
	}
	return ""
}

type ListCloudVPCResponse struct {
	Code                 uint32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool        `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*CloudVPC `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-" bson:"-"`
	XXX_unrecognized     []byte      `json:"-" bson:"-"`
	XXX_sizecache        int32       `json:"-" bson:"-"`
}

func (m *ListCloudVPCResponse) Reset()         { *m = ListCloudVPCResponse{} }
func (m *ListCloudVPCResponse) String() string { return proto.CompactTextString(m) }
func (*ListCloudVPCResponse) ProtoMessage()    {}
func (*ListCloudVPCResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{39}
}

func (m *ListCloudVPCResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCloudVPCResponse.Unmarshal(m, b)
}
func (m *ListCloudVPCResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCloudVPCResponse.Marshal(b, m, deterministic)
}
func (m *ListCloudVPCResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCloudVPCResponse.Merge(m, src)
}
func (m *ListCloudVPCResponse) XXX_Size() int {
	return xxx_messageInfo_ListCloudVPCResponse.Size(m)
}
func (m *ListCloudVPCResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCloudVPCResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCloudVPCResponse proto.InternalMessageInfo

func (m *ListCloudVPCResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListCloudVPCResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListCloudVPCResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListCloudVPCResponse) GetData() []*CloudVPC {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListCloudRegionsRequest struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListCloudRegionsRequest) Reset()         { *m = ListCloudRegionsRequest{} }
func (m *ListCloudRegionsRequest) String() string { return proto.CompactTextString(m) }
func (*ListCloudRegionsRequest) ProtoMessage()    {}
func (*ListCloudRegionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{40}
}

func (m *ListCloudRegionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCloudRegionsRequest.Unmarshal(m, b)
}
func (m *ListCloudRegionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCloudRegionsRequest.Marshal(b, m, deterministic)
}
func (m *ListCloudRegionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCloudRegionsRequest.Merge(m, src)
}
func (m *ListCloudRegionsRequest) XXX_Size() int {
	return xxx_messageInfo_ListCloudRegionsRequest.Size(m)
}
func (m *ListCloudRegionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCloudRegionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCloudRegionsRequest proto.InternalMessageInfo

func (m *ListCloudRegionsRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

type ListCloudRegionsResponse struct {
	Code                 uint32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool           `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*CloudRegion `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-" bson:"-"`
	XXX_unrecognized     []byte         `json:"-" bson:"-"`
	XXX_sizecache        int32          `json:"-" bson:"-"`
}

func (m *ListCloudRegionsResponse) Reset()         { *m = ListCloudRegionsResponse{} }
func (m *ListCloudRegionsResponse) String() string { return proto.CompactTextString(m) }
func (*ListCloudRegionsResponse) ProtoMessage()    {}
func (*ListCloudRegionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{41}
}

func (m *ListCloudRegionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCloudRegionsResponse.Unmarshal(m, b)
}
func (m *ListCloudRegionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCloudRegionsResponse.Marshal(b, m, deterministic)
}
func (m *ListCloudRegionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCloudRegionsResponse.Merge(m, src)
}
func (m *ListCloudRegionsResponse) XXX_Size() int {
	return xxx_messageInfo_ListCloudRegionsResponse.Size(m)
}
func (m *ListCloudRegionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCloudRegionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCloudRegionsResponse proto.InternalMessageInfo

func (m *ListCloudRegionsResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListCloudRegionsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListCloudRegionsResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListCloudRegionsResponse) GetData() []*CloudRegion {
	if m != nil {
		return m.Data
	}
	return nil
}

type CloudRegion struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	RegionName           string   `protobuf:"bytes,2,opt,name=regionName,proto3" json:"regionName,omitempty"`
	Region               string   `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CloudRegion) Reset()         { *m = CloudRegion{} }
func (m *CloudRegion) String() string { return proto.CompactTextString(m) }
func (*CloudRegion) ProtoMessage()    {}
func (*CloudRegion) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{42}
}

func (m *CloudRegion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudRegion.Unmarshal(m, b)
}
func (m *CloudRegion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudRegion.Marshal(b, m, deterministic)
}
func (m *CloudRegion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudRegion.Merge(m, src)
}
func (m *CloudRegion) XXX_Size() int {
	return xxx_messageInfo_CloudRegion.Size(m)
}
func (m *CloudRegion) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudRegion.DiscardUnknown(m)
}

var xxx_messageInfo_CloudRegion proto.InternalMessageInfo

func (m *CloudRegion) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *CloudRegion) GetRegionName() string {
	if m != nil {
		return m.RegionName
	}
	return ""
}

func (m *CloudRegion) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

type GetVPCCidrRequest struct {
	VpcID                string   `protobuf:"bytes,1,opt,name=vpcID,proto3" json:"vpcID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetVPCCidrRequest) Reset()         { *m = GetVPCCidrRequest{} }
func (m *GetVPCCidrRequest) String() string { return proto.CompactTextString(m) }
func (*GetVPCCidrRequest) ProtoMessage()    {}
func (*GetVPCCidrRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{43}
}

func (m *GetVPCCidrRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVPCCidrRequest.Unmarshal(m, b)
}
func (m *GetVPCCidrRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVPCCidrRequest.Marshal(b, m, deterministic)
}
func (m *GetVPCCidrRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVPCCidrRequest.Merge(m, src)
}
func (m *GetVPCCidrRequest) XXX_Size() int {
	return xxx_messageInfo_GetVPCCidrRequest.Size(m)
}
func (m *GetVPCCidrRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVPCCidrRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVPCCidrRequest proto.InternalMessageInfo

func (m *GetVPCCidrRequest) GetVpcID() string {
	if m != nil {
		return m.VpcID
	}
	return ""
}

type GetVPCCidrResponse struct {
	Code                 uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool       `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*VPCCidr `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-" bson:"-"`
	XXX_unrecognized     []byte     `json:"-" bson:"-"`
	XXX_sizecache        int32      `json:"-" bson:"-"`
}

func (m *GetVPCCidrResponse) Reset()         { *m = GetVPCCidrResponse{} }
func (m *GetVPCCidrResponse) String() string { return proto.CompactTextString(m) }
func (*GetVPCCidrResponse) ProtoMessage()    {}
func (*GetVPCCidrResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{44}
}

func (m *GetVPCCidrResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVPCCidrResponse.Unmarshal(m, b)
}
func (m *GetVPCCidrResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVPCCidrResponse.Marshal(b, m, deterministic)
}
func (m *GetVPCCidrResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVPCCidrResponse.Merge(m, src)
}
func (m *GetVPCCidrResponse) XXX_Size() int {
	return xxx_messageInfo_GetVPCCidrResponse.Size(m)
}
func (m *GetVPCCidrResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVPCCidrResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVPCCidrResponse proto.InternalMessageInfo

func (m *GetVPCCidrResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetVPCCidrResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetVPCCidrResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetVPCCidrResponse) GetData() []*VPCCidr {
	if m != nil {
		return m.Data
	}
	return nil
}

type VPCCidr struct {
	Vpc                  string   `protobuf:"bytes,1,opt,name=vpc,proto3" json:"vpc,omitempty"`
	Cidr                 string   `protobuf:"bytes,2,opt,name=cidr,proto3" json:"cidr,omitempty"`
	IPNumber             uint32   `protobuf:"varint,3,opt,name=IPNumber,proto3" json:"IPNumber,omitempty"`
	Status               string   `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *VPCCidr) Reset()         { *m = VPCCidr{} }
func (m *VPCCidr) String() string { return proto.CompactTextString(m) }
func (*VPCCidr) ProtoMessage()    {}
func (*VPCCidr) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{45}
}

func (m *VPCCidr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VPCCidr.Unmarshal(m, b)
}
func (m *VPCCidr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VPCCidr.Marshal(b, m, deterministic)
}
func (m *VPCCidr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VPCCidr.Merge(m, src)
}
func (m *VPCCidr) XXX_Size() int {
	return xxx_messageInfo_VPCCidr.Size(m)
}
func (m *VPCCidr) XXX_DiscardUnknown() {
	xxx_messageInfo_VPCCidr.DiscardUnknown(m)
}

var xxx_messageInfo_VPCCidr proto.InternalMessageInfo

func (m *VPCCidr) GetVpc() string {
	if m != nil {
		return m.Vpc
	}
	return ""
}

func (m *VPCCidr) GetCidr() string {
	if m != nil {
		return m.Cidr
	}
	return ""
}

func (m *VPCCidr) GetIPNumber() uint32 {
	if m != nil {
		return m.IPNumber
	}
	return 0
}

func (m *VPCCidr) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type Cloud struct {
	CloudID              string                  `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	Name                 string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Editable             bool                    `protobuf:"varint,3,opt,name=editable,proto3" json:"editable,omitempty"`
	OpsPlugins           map[string]*BKOpsPlugin `protobuf:"bytes,4,rep,name=opsPlugins,proto3" json:"opsPlugins,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ExtraPlugins         map[string]*BKOpsPlugin `protobuf:"bytes,5,rep,name=extraPlugins,proto3" json:"extraPlugins,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CloudCredential      *Credential             `protobuf:"bytes,6,opt,name=cloudCredential,proto3" json:"cloudCredential,omitempty"`
	OsManagement         *OSInfo                 `protobuf:"bytes,7,opt,name=osManagement,proto3" json:"osManagement,omitempty"`
	ClusterManagement    *ClusterMgr             `protobuf:"bytes,8,opt,name=clusterManagement,proto3" json:"clusterManagement,omitempty"`
	NodeGroupManagement  *NodeGroupMgr           `protobuf:"bytes,10,opt,name=nodeGroupManagement,proto3" json:"nodeGroupManagement,omitempty"`
	Creator              string                  `protobuf:"bytes,11,opt,name=creator,proto3" json:"creator,omitempty"`
	Updater              string                  `protobuf:"bytes,12,opt,name=updater,proto3" json:"updater,omitempty"`
	CreatTime            string                  `protobuf:"bytes,13,opt,name=creatTime,proto3" json:"creatTime,omitempty"`
	UpdateTime           string                  `protobuf:"bytes,14,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	CloudProvider        string                  `protobuf:"bytes,15,opt,name=cloudProvider,proto3" json:"cloudProvider,omitempty"`
	Config               string                  `protobuf:"bytes,16,opt,name=config,proto3" json:"config,omitempty"`
	Description          string                  `protobuf:"bytes,17,opt,name=description,proto3" json:"description,omitempty"`
	EngineType           string                  `protobuf:"bytes,18,opt,name=engineType,proto3" json:"engineType,omitempty"`
	Enable               string                  `protobuf:"bytes,19,opt,name=enable,proto3" json:"enable,omitempty"`
	NetworkInfo          *CloudNetworkInfo       `protobuf:"bytes,20,opt,name=networkInfo,proto3" json:"networkInfo,omitempty"`
	ConfInfo             *CloudConfigInfo        `protobuf:"bytes,21,opt,name=confInfo,proto3" json:"confInfo,omitempty"`
	PlatformInfo         map[string]string       `protobuf:"bytes,22,rep,name=platformInfo,proto3" json:"platformInfo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-" bson:"-"`
	XXX_unrecognized     []byte                  `json:"-" bson:"-"`
	XXX_sizecache        int32                   `json:"-" bson:"-"`
}

func (m *Cloud) Reset()         { *m = Cloud{} }
func (m *Cloud) String() string { return proto.CompactTextString(m) }
func (*Cloud) ProtoMessage()    {}
func (*Cloud) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{46}
}

func (m *Cloud) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cloud.Unmarshal(m, b)
}
func (m *Cloud) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cloud.Marshal(b, m, deterministic)
}
func (m *Cloud) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cloud.Merge(m, src)
}
func (m *Cloud) XXX_Size() int {
	return xxx_messageInfo_Cloud.Size(m)
}
func (m *Cloud) XXX_DiscardUnknown() {
	xxx_messageInfo_Cloud.DiscardUnknown(m)
}

var xxx_messageInfo_Cloud proto.InternalMessageInfo

func (m *Cloud) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *Cloud) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Cloud) GetEditable() bool {
	if m != nil {
		return m.Editable
	}
	return false
}

func (m *Cloud) GetOpsPlugins() map[string]*BKOpsPlugin {
	if m != nil {
		return m.OpsPlugins
	}
	return nil
}

func (m *Cloud) GetExtraPlugins() map[string]*BKOpsPlugin {
	if m != nil {
		return m.ExtraPlugins
	}
	return nil
}

func (m *Cloud) GetCloudCredential() *Credential {
	if m != nil {
		return m.CloudCredential
	}
	return nil
}

func (m *Cloud) GetOsManagement() *OSInfo {
	if m != nil {
		return m.OsManagement
	}
	return nil
}

func (m *Cloud) GetClusterManagement() *ClusterMgr {
	if m != nil {
		return m.ClusterManagement
	}
	return nil
}

func (m *Cloud) GetNodeGroupManagement() *NodeGroupMgr {
	if m != nil {
		return m.NodeGroupManagement
	}
	return nil
}

func (m *Cloud) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Cloud) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *Cloud) GetCreatTime() string {
	if m != nil {
		return m.CreatTime
	}
	return ""
}

func (m *Cloud) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *Cloud) GetCloudProvider() string {
	if m != nil {
		return m.CloudProvider
	}
	return ""
}

func (m *Cloud) GetConfig() string {
	if m != nil {
		return m.Config
	}
	return ""
}

func (m *Cloud) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Cloud) GetEngineType() string {
	if m != nil {
		return m.EngineType
	}
	return ""
}

func (m *Cloud) GetEnable() string {
	if m != nil {
		return m.Enable
	}
	return ""
}

func (m *Cloud) GetNetworkInfo() *CloudNetworkInfo {
	if m != nil {
		return m.NetworkInfo
	}
	return nil
}

func (m *Cloud) GetConfInfo() *CloudConfigInfo {
	if m != nil {
		return m.ConfInfo
	}
	return nil
}

func (m *Cloud) GetPlatformInfo() map[string]string {
	if m != nil {
		return m.PlatformInfo
	}
	return nil
}

// CloudConfigInfo storage for cloud special conf info
type CloudConfigInfo struct {
	CloudInternalEnable  bool     `protobuf:"varint,1,opt,name=cloudInternalEnable,proto3" json:"cloudInternalEnable,omitempty"`
	CloudDomain          string   `protobuf:"bytes,2,opt,name=cloudDomain,proto3" json:"cloudDomain,omitempty"`
	MachineDomain        string   `protobuf:"bytes,3,opt,name=machineDomain,proto3" json:"machineDomain,omitempty"`
	DisableCreateCluster bool     `protobuf:"varint,4,opt,name=disableCreateCluster,proto3" json:"disableCreateCluster,omitempty"`
	DisableImportCluster bool     `protobuf:"varint,5,opt,name=disableImportCluster,proto3" json:"disableImportCluster,omitempty"`
	DisableNodeGroup     bool     `protobuf:"varint,6,opt,name=disableNodeGroup,proto3" json:"disableNodeGroup,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CloudConfigInfo) Reset()         { *m = CloudConfigInfo{} }
func (m *CloudConfigInfo) String() string { return proto.CompactTextString(m) }
func (*CloudConfigInfo) ProtoMessage()    {}
func (*CloudConfigInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{47}
}

func (m *CloudConfigInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudConfigInfo.Unmarshal(m, b)
}
func (m *CloudConfigInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudConfigInfo.Marshal(b, m, deterministic)
}
func (m *CloudConfigInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudConfigInfo.Merge(m, src)
}
func (m *CloudConfigInfo) XXX_Size() int {
	return xxx_messageInfo_CloudConfigInfo.Size(m)
}
func (m *CloudConfigInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudConfigInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CloudConfigInfo proto.InternalMessageInfo

func (m *CloudConfigInfo) GetCloudInternalEnable() bool {
	if m != nil {
		return m.CloudInternalEnable
	}
	return false
}

func (m *CloudConfigInfo) GetCloudDomain() string {
	if m != nil {
		return m.CloudDomain
	}
	return ""
}

func (m *CloudConfigInfo) GetMachineDomain() string {
	if m != nil {
		return m.MachineDomain
	}
	return ""
}

func (m *CloudConfigInfo) GetDisableCreateCluster() bool {
	if m != nil {
		return m.DisableCreateCluster
	}
	return false
}

func (m *CloudConfigInfo) GetDisableImportCluster() bool {
	if m != nil {
		return m.DisableImportCluster
	}
	return false
}

func (m *CloudConfigInfo) GetDisableNodeGroup() bool {
	if m != nil {
		return m.DisableNodeGroup
	}
	return false
}

// CloudNetworkInfo storage for cloud network info
type CloudNetworkInfo struct {
	CidrStep             []uint32 `protobuf:"varint,1,rep,packed,name=cidrStep,proto3" json:"cidrStep,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CloudNetworkInfo) Reset()         { *m = CloudNetworkInfo{} }
func (m *CloudNetworkInfo) String() string { return proto.CompactTextString(m) }
func (*CloudNetworkInfo) ProtoMessage()    {}
func (*CloudNetworkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{48}
}

func (m *CloudNetworkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudNetworkInfo.Unmarshal(m, b)
}
func (m *CloudNetworkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudNetworkInfo.Marshal(b, m, deterministic)
}
func (m *CloudNetworkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudNetworkInfo.Merge(m, src)
}
func (m *CloudNetworkInfo) XXX_Size() int {
	return xxx_messageInfo_CloudNetworkInfo.Size(m)
}
func (m *CloudNetworkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudNetworkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CloudNetworkInfo proto.InternalMessageInfo

func (m *CloudNetworkInfo) GetCidrStep() []uint32 {
	if m != nil {
		return m.CidrStep
	}
	return nil
}

// NodeGroup pool for kubernetes cluster-autoscaling
type NodeGroup struct {
	NodeGroupID          string               `protobuf:"bytes,1,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ClusterID            string               `protobuf:"bytes,3,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Region               string               `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	EnableAutoscale      bool                 `protobuf:"varint,5,opt,name=enableAutoscale,proto3" json:"enableAutoscale,omitempty"`
	AutoScaling          *AutoScalingGroup    `protobuf:"bytes,6,opt,name=autoScaling,proto3" json:"autoScaling,omitempty"`
	LaunchTemplate       *LaunchConfiguration `protobuf:"bytes,7,opt,name=launchTemplate,proto3" json:"launchTemplate,omitempty"`
	Labels               map[string]string    `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Taints               map[string]string    `protobuf:"bytes,9,rep,name=taints,proto3" json:"taints,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NodeOS               string               `protobuf:"bytes,10,opt,name=nodeOS,proto3" json:"nodeOS,omitempty"`
	Creator              string               `protobuf:"bytes,11,opt,name=creator,proto3" json:"creator,omitempty"`
	Updater              string               `protobuf:"bytes,12,opt,name=updater,proto3" json:"updater,omitempty"`
	CreateTime           string               `protobuf:"bytes,13,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string               `protobuf:"bytes,14,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	ProjectID            string               `protobuf:"bytes,15,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Provider             string               `protobuf:"bytes,16,opt,name=provider,proto3" json:"provider,omitempty"`
	Status               string               `protobuf:"bytes,17,opt,name=status,proto3" json:"status,omitempty"`
	ConsumerID           string               `protobuf:"bytes,18,opt,name=consumerID,proto3" json:"consumerID,omitempty"`
	NodeTemplate         *NodeTemplate        `protobuf:"bytes,19,opt,name=nodeTemplate,proto3" json:"nodeTemplate,omitempty"`
	CloudNodeGroupID     string               `protobuf:"bytes,20,opt,name=cloudNodeGroupID,proto3" json:"cloudNodeGroupID,omitempty"`
	Tags                 map[string]string    `protobuf:"bytes,21,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NodeGroupType        string               `protobuf:"bytes,22,opt,name=nodeGroupType,proto3" json:"nodeGroupType,omitempty"`
	Area                 *CloudArea           `protobuf:"bytes,23,opt,name=area,proto3" json:"area,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *NodeGroup) Reset()         { *m = NodeGroup{} }
func (m *NodeGroup) String() string { return proto.CompactTextString(m) }
func (*NodeGroup) ProtoMessage()    {}
func (*NodeGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{49}
}

func (m *NodeGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeGroup.Unmarshal(m, b)
}
func (m *NodeGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeGroup.Marshal(b, m, deterministic)
}
func (m *NodeGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeGroup.Merge(m, src)
}
func (m *NodeGroup) XXX_Size() int {
	return xxx_messageInfo_NodeGroup.Size(m)
}
func (m *NodeGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeGroup.DiscardUnknown(m)
}

var xxx_messageInfo_NodeGroup proto.InternalMessageInfo

func (m *NodeGroup) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *NodeGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NodeGroup) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *NodeGroup) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *NodeGroup) GetEnableAutoscale() bool {
	if m != nil {
		return m.EnableAutoscale
	}
	return false
}

func (m *NodeGroup) GetAutoScaling() *AutoScalingGroup {
	if m != nil {
		return m.AutoScaling
	}
	return nil
}

func (m *NodeGroup) GetLaunchTemplate() *LaunchConfiguration {
	if m != nil {
		return m.LaunchTemplate
	}
	return nil
}

func (m *NodeGroup) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *NodeGroup) GetTaints() map[string]string {
	if m != nil {
		return m.Taints
	}
	return nil
}

func (m *NodeGroup) GetNodeOS() string {
	if m != nil {
		return m.NodeOS
	}
	return ""
}

func (m *NodeGroup) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *NodeGroup) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *NodeGroup) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *NodeGroup) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *NodeGroup) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *NodeGroup) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *NodeGroup) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *NodeGroup) GetConsumerID() string {
	if m != nil {
		return m.ConsumerID
	}
	return ""
}

func (m *NodeGroup) GetNodeTemplate() *NodeTemplate {
	if m != nil {
		return m.NodeTemplate
	}
	return nil
}

func (m *NodeGroup) GetCloudNodeGroupID() string {
	if m != nil {
		return m.CloudNodeGroupID
	}
	return ""
}

func (m *NodeGroup) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *NodeGroup) GetNodeGroupType() string {
	if m != nil {
		return m.NodeGroupType
	}
	return ""
}

func (m *NodeGroup) GetArea() *CloudArea {
	if m != nil {
		return m.Area
	}
	return nil
}

type CloudArea struct {
	BkCloudID            uint32   `protobuf:"varint,1,opt,name=bkCloudID,proto3" json:"bkCloudID,omitempty"`
	BkCloudName          string   `protobuf:"bytes,2,opt,name=bkCloudName,proto3" json:"bkCloudName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CloudArea) Reset()         { *m = CloudArea{} }
func (m *CloudArea) String() string { return proto.CompactTextString(m) }
func (*CloudArea) ProtoMessage()    {}
func (*CloudArea) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{50}
}

func (m *CloudArea) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudArea.Unmarshal(m, b)
}
func (m *CloudArea) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudArea.Marshal(b, m, deterministic)
}
func (m *CloudArea) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudArea.Merge(m, src)
}
func (m *CloudArea) XXX_Size() int {
	return xxx_messageInfo_CloudArea.Size(m)
}
func (m *CloudArea) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudArea.DiscardUnknown(m)
}

var xxx_messageInfo_CloudArea proto.InternalMessageInfo

func (m *CloudArea) GetBkCloudID() uint32 {
	if m != nil {
		return m.BkCloudID
	}
	return 0
}

func (m *CloudArea) GetBkCloudName() string {
	if m != nil {
		return m.BkCloudName
	}
	return ""
}

// AutoScalingGroup define auto scaling information
type AutoScalingGroup struct {
	AutoScalingID         string       `protobuf:"bytes,1,opt,name=autoScalingID,proto3" json:"autoScalingID,omitempty"`
	AutoScalingName       string       `protobuf:"bytes,2,opt,name=autoScalingName,proto3" json:"autoScalingName,omitempty"`
	MinSize               uint32       `protobuf:"varint,3,opt,name=minSize,proto3" json:"minSize,omitempty"`
	MaxSize               uint32       `protobuf:"varint,4,opt,name=maxSize,proto3" json:"maxSize,omitempty"`
	DesiredSize           uint32       `protobuf:"varint,5,opt,name=desiredSize,proto3" json:"desiredSize,omitempty"`
	VpcID                 string       `protobuf:"bytes,6,opt,name=vpcID,proto3" json:"vpcID,omitempty"`
	DefaultCooldown       uint32       `protobuf:"varint,7,opt,name=defaultCooldown,proto3" json:"defaultCooldown,omitempty"`
	SubnetIDs             []string     `protobuf:"bytes,8,rep,name=subnetIDs,proto3" json:"subnetIDs,omitempty"`
	Zones                 []string     `protobuf:"bytes,9,rep,name=zones,proto3" json:"zones,omitempty"`
	RetryPolicy           string       `protobuf:"bytes,10,opt,name=retryPolicy,proto3" json:"retryPolicy,omitempty"`
	MultiZoneSubnetPolicy string       `protobuf:"bytes,11,opt,name=multiZoneSubnetPolicy,proto3" json:"multiZoneSubnetPolicy,omitempty"`
	ReplaceUnhealthy      bool         `protobuf:"varint,12,opt,name=replaceUnhealthy,proto3" json:"replaceUnhealthy,omitempty"`
	ScalingMode           string       `protobuf:"bytes,13,opt,name=scalingMode,proto3" json:"scalingMode,omitempty"`
	TimeRanges            []*TimeRange `protobuf:"bytes,14,rep,name=timeRanges,proto3" json:"timeRanges,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}     `json:"-" bson:"-"`
	XXX_unrecognized      []byte       `json:"-" bson:"-"`
	XXX_sizecache         int32        `json:"-" bson:"-"`
}

func (m *AutoScalingGroup) Reset()         { *m = AutoScalingGroup{} }
func (m *AutoScalingGroup) String() string { return proto.CompactTextString(m) }
func (*AutoScalingGroup) ProtoMessage()    {}
func (*AutoScalingGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{51}
}

func (m *AutoScalingGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AutoScalingGroup.Unmarshal(m, b)
}
func (m *AutoScalingGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AutoScalingGroup.Marshal(b, m, deterministic)
}
func (m *AutoScalingGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutoScalingGroup.Merge(m, src)
}
func (m *AutoScalingGroup) XXX_Size() int {
	return xxx_messageInfo_AutoScalingGroup.Size(m)
}
func (m *AutoScalingGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_AutoScalingGroup.DiscardUnknown(m)
}

var xxx_messageInfo_AutoScalingGroup proto.InternalMessageInfo

func (m *AutoScalingGroup) GetAutoScalingID() string {
	if m != nil {
		return m.AutoScalingID
	}
	return ""
}

func (m *AutoScalingGroup) GetAutoScalingName() string {
	if m != nil {
		return m.AutoScalingName
	}
	return ""
}

func (m *AutoScalingGroup) GetMinSize() uint32 {
	if m != nil {
		return m.MinSize
	}
	return 0
}

func (m *AutoScalingGroup) GetMaxSize() uint32 {
	if m != nil {
		return m.MaxSize
	}
	return 0
}

func (m *AutoScalingGroup) GetDesiredSize() uint32 {
	if m != nil {
		return m.DesiredSize
	}
	return 0
}

func (m *AutoScalingGroup) GetVpcID() string {
	if m != nil {
		return m.VpcID
	}
	return ""
}

func (m *AutoScalingGroup) GetDefaultCooldown() uint32 {
	if m != nil {
		return m.DefaultCooldown
	}
	return 0
}

func (m *AutoScalingGroup) GetSubnetIDs() []string {
	if m != nil {
		return m.SubnetIDs
	}
	return nil
}

func (m *AutoScalingGroup) GetZones() []string {
	if m != nil {
		return m.Zones
	}
	return nil
}

func (m *AutoScalingGroup) GetRetryPolicy() string {
	if m != nil {
		return m.RetryPolicy
	}
	return ""
}

func (m *AutoScalingGroup) GetMultiZoneSubnetPolicy() string {
	if m != nil {
		return m.MultiZoneSubnetPolicy
	}
	return ""
}

func (m *AutoScalingGroup) GetReplaceUnhealthy() bool {
	if m != nil {
		return m.ReplaceUnhealthy
	}
	return false
}

func (m *AutoScalingGroup) GetScalingMode() string {
	if m != nil {
		return m.ScalingMode
	}
	return ""
}

func (m *AutoScalingGroup) GetTimeRanges() []*TimeRange {
	if m != nil {
		return m.TimeRanges
	}
	return nil
}

type TimeRange struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Schedule             string   `protobuf:"bytes,2,opt,name=schedule,proto3" json:"schedule,omitempty"`
	Zone                 string   `protobuf:"bytes,3,opt,name=zone,proto3" json:"zone,omitempty"`
	DesiredNum           uint32   `protobuf:"varint,4,opt,name=desiredNum,proto3" json:"desiredNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *TimeRange) Reset()         { *m = TimeRange{} }
func (m *TimeRange) String() string { return proto.CompactTextString(m) }
func (*TimeRange) ProtoMessage()    {}
func (*TimeRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{52}
}

func (m *TimeRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeRange.Unmarshal(m, b)
}
func (m *TimeRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeRange.Marshal(b, m, deterministic)
}
func (m *TimeRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeRange.Merge(m, src)
}
func (m *TimeRange) XXX_Size() int {
	return xxx_messageInfo_TimeRange.Size(m)
}
func (m *TimeRange) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeRange.DiscardUnknown(m)
}

var xxx_messageInfo_TimeRange proto.InternalMessageInfo

func (m *TimeRange) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TimeRange) GetSchedule() string {
	if m != nil {
		return m.Schedule
	}
	return ""
}

func (m *TimeRange) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *TimeRange) GetDesiredNum() uint32 {
	if m != nil {
		return m.DesiredNum
	}
	return 0
}

// DataDisk 数据盘定义
type DataDisk struct {
	DiskType             string   `protobuf:"bytes,1,opt,name=diskType,proto3" json:"diskType,omitempty"`
	DiskSize             string   `protobuf:"bytes,2,opt,name=diskSize,proto3" json:"diskSize,omitempty"`
	FileSystem           string   `protobuf:"bytes,3,opt,name=fileSystem,proto3" json:"fileSystem,omitempty"`
	AutoFormatAndMount   bool     `protobuf:"varint,4,opt,name=autoFormatAndMount,proto3" json:"autoFormatAndMount,omitempty"`
	MountTarget          string   `protobuf:"bytes,5,opt,name=mountTarget,proto3" json:"mountTarget,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DataDisk) Reset()         { *m = DataDisk{} }
func (m *DataDisk) String() string { return proto.CompactTextString(m) }
func (*DataDisk) ProtoMessage()    {}
func (*DataDisk) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{53}
}

func (m *DataDisk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataDisk.Unmarshal(m, b)
}
func (m *DataDisk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataDisk.Marshal(b, m, deterministic)
}
func (m *DataDisk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataDisk.Merge(m, src)
}
func (m *DataDisk) XXX_Size() int {
	return xxx_messageInfo_DataDisk.Size(m)
}
func (m *DataDisk) XXX_DiscardUnknown() {
	xxx_messageInfo_DataDisk.DiscardUnknown(m)
}

var xxx_messageInfo_DataDisk proto.InternalMessageInfo

func (m *DataDisk) GetDiskType() string {
	if m != nil {
		return m.DiskType
	}
	return ""
}

func (m *DataDisk) GetDiskSize() string {
	if m != nil {
		return m.DiskSize
	}
	return ""
}

func (m *DataDisk) GetFileSystem() string {
	if m != nil {
		return m.FileSystem
	}
	return ""
}

func (m *DataDisk) GetAutoFormatAndMount() bool {
	if m != nil {
		return m.AutoFormatAndMount
	}
	return false
}

func (m *DataDisk) GetMountTarget() string {
	if m != nil {
		return m.MountTarget
	}
	return ""
}

// InternetAccessible 公网带宽设置
type InternetAccessible struct {
	InternetChargeType   string   `protobuf:"bytes,1,opt,name=internetChargeType,proto3" json:"internetChargeType,omitempty"`
	InternetMaxBandwidth string   `protobuf:"bytes,2,opt,name=internetMaxBandwidth,proto3" json:"internetMaxBandwidth,omitempty"`
	PublicIPAssigned     bool     `protobuf:"varint,3,opt,name=publicIPAssigned,proto3" json:"publicIPAssigned,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *InternetAccessible) Reset()         { *m = InternetAccessible{} }
func (m *InternetAccessible) String() string { return proto.CompactTextString(m) }
func (*InternetAccessible) ProtoMessage()    {}
func (*InternetAccessible) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{54}
}

func (m *InternetAccessible) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternetAccessible.Unmarshal(m, b)
}
func (m *InternetAccessible) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternetAccessible.Marshal(b, m, deterministic)
}
func (m *InternetAccessible) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternetAccessible.Merge(m, src)
}
func (m *InternetAccessible) XXX_Size() int {
	return xxx_messageInfo_InternetAccessible.Size(m)
}
func (m *InternetAccessible) XXX_DiscardUnknown() {
	xxx_messageInfo_InternetAccessible.DiscardUnknown(m)
}

var xxx_messageInfo_InternetAccessible proto.InternalMessageInfo

func (m *InternetAccessible) GetInternetChargeType() string {
	if m != nil {
		return m.InternetChargeType
	}
	return ""
}

func (m *InternetAccessible) GetInternetMaxBandwidth() string {
	if m != nil {
		return m.InternetMaxBandwidth
	}
	return ""
}

func (m *InternetAccessible) GetPublicIPAssigned() bool {
	if m != nil {
		return m.PublicIPAssigned
	}
	return false
}

// InstanceTemplateConfig instance config info
type InstanceTemplateConfig struct {
	Region               string      `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Zone                 string      `protobuf:"bytes,2,opt,name=zone,proto3" json:"zone,omitempty"`
	VpcID                string      `protobuf:"bytes,3,opt,name=vpcID,proto3" json:"vpcID,omitempty"`
	SubnetID             string      `protobuf:"bytes,4,opt,name=subnetID,proto3" json:"subnetID,omitempty"`
	ApplyNum             uint32      `protobuf:"varint,5,opt,name=applyNum,proto3" json:"applyNum,omitempty"`
	CPU                  uint32      `protobuf:"varint,6,opt,name=CPU,proto3" json:"CPU,omitempty"`
	Mem                  uint32      `protobuf:"varint,7,opt,name=Mem,proto3" json:"Mem,omitempty"`
	GPU                  uint32      `protobuf:"varint,8,opt,name=GPU,proto3" json:"GPU,omitempty"`
	InstanceType         string      `protobuf:"bytes,9,opt,name=instanceType,proto3" json:"instanceType,omitempty"`
	InstanceChargeType   string      `protobuf:"bytes,10,opt,name=instanceChargeType,proto3" json:"instanceChargeType,omitempty"`
	SystemDisk           *DataDisk   `protobuf:"bytes,11,opt,name=systemDisk,proto3" json:"systemDisk,omitempty"`
	DataDisks            []*DataDisk `protobuf:"bytes,12,rep,name=dataDisks,proto3" json:"dataDisks,omitempty"`
	ImageInfo            *ImageInfo  `protobuf:"bytes,13,opt,name=imageInfo,proto3" json:"imageInfo,omitempty"`
	InitLoginPassword    string      `protobuf:"bytes,14,opt,name=initLoginPassword,proto3" json:"initLoginPassword,omitempty"`
	SecurityGroupIDs     []string    `protobuf:"bytes,15,rep,name=securityGroupIDs,proto3" json:"securityGroupIDs,omitempty"`
	IsSecurityService    bool        `protobuf:"varint,16,opt,name=isSecurityService,proto3" json:"isSecurityService,omitempty"`
	IsMonitorService     bool        `protobuf:"varint,17,opt,name=isMonitorService,proto3" json:"isMonitorService,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-" bson:"-"`
	XXX_unrecognized     []byte      `json:"-" bson:"-"`
	XXX_sizecache        int32       `json:"-" bson:"-"`
}

func (m *InstanceTemplateConfig) Reset()         { *m = InstanceTemplateConfig{} }
func (m *InstanceTemplateConfig) String() string { return proto.CompactTextString(m) }
func (*InstanceTemplateConfig) ProtoMessage()    {}
func (*InstanceTemplateConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{55}
}

func (m *InstanceTemplateConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceTemplateConfig.Unmarshal(m, b)
}
func (m *InstanceTemplateConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceTemplateConfig.Marshal(b, m, deterministic)
}
func (m *InstanceTemplateConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceTemplateConfig.Merge(m, src)
}
func (m *InstanceTemplateConfig) XXX_Size() int {
	return xxx_messageInfo_InstanceTemplateConfig.Size(m)
}
func (m *InstanceTemplateConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceTemplateConfig.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceTemplateConfig proto.InternalMessageInfo

func (m *InstanceTemplateConfig) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *InstanceTemplateConfig) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *InstanceTemplateConfig) GetVpcID() string {
	if m != nil {
		return m.VpcID
	}
	return ""
}

func (m *InstanceTemplateConfig) GetSubnetID() string {
	if m != nil {
		return m.SubnetID
	}
	return ""
}

func (m *InstanceTemplateConfig) GetApplyNum() uint32 {
	if m != nil {
		return m.ApplyNum
	}
	return 0
}

func (m *InstanceTemplateConfig) GetCPU() uint32 {
	if m != nil {
		return m.CPU
	}
	return 0
}

func (m *InstanceTemplateConfig) GetMem() uint32 {
	if m != nil {
		return m.Mem
	}
	return 0
}

func (m *InstanceTemplateConfig) GetGPU() uint32 {
	if m != nil {
		return m.GPU
	}
	return 0
}

func (m *InstanceTemplateConfig) GetInstanceType() string {
	if m != nil {
		return m.InstanceType
	}
	return ""
}

func (m *InstanceTemplateConfig) GetInstanceChargeType() string {
	if m != nil {
		return m.InstanceChargeType
	}
	return ""
}

func (m *InstanceTemplateConfig) GetSystemDisk() *DataDisk {
	if m != nil {
		return m.SystemDisk
	}
	return nil
}

func (m *InstanceTemplateConfig) GetDataDisks() []*DataDisk {
	if m != nil {
		return m.DataDisks
	}
	return nil
}

func (m *InstanceTemplateConfig) GetImageInfo() *ImageInfo {
	if m != nil {
		return m.ImageInfo
	}
	return nil
}

func (m *InstanceTemplateConfig) GetInitLoginPassword() string {
	if m != nil {
		return m.InitLoginPassword
	}
	return ""
}

func (m *InstanceTemplateConfig) GetSecurityGroupIDs() []string {
	if m != nil {
		return m.SecurityGroupIDs
	}
	return nil
}

func (m *InstanceTemplateConfig) GetIsSecurityService() bool {
	if m != nil {
		return m.IsSecurityService
	}
	return false
}

func (m *InstanceTemplateConfig) GetIsMonitorService() bool {
	if m != nil {
		return m.IsMonitorService
	}
	return false
}

//LaunchConfigure template for scaling node
type LaunchConfiguration struct {
	LaunchConfigurationID string              `protobuf:"bytes,1,opt,name=launchConfigurationID,proto3" json:"launchConfigurationID,omitempty"`
	LaunchConfigureName   string              `protobuf:"bytes,2,opt,name=launchConfigureName,proto3" json:"launchConfigureName,omitempty"`
	ProjectID             string              `protobuf:"bytes,3,opt,name=projectID,proto3" json:"projectID,omitempty"`
	CPU                   uint32              `protobuf:"varint,4,opt,name=CPU,proto3" json:"CPU,omitempty"`
	Mem                   uint32              `protobuf:"varint,5,opt,name=Mem,proto3" json:"Mem,omitempty"`
	GPU                   uint32              `protobuf:"varint,6,opt,name=GPU,proto3" json:"GPU,omitempty"`
	InstanceType          string              `protobuf:"bytes,7,opt,name=instanceType,proto3" json:"instanceType,omitempty"`
	InstanceChargeType    string              `protobuf:"bytes,8,opt,name=instanceChargeType,proto3" json:"instanceChargeType,omitempty"`
	SystemDisk            *DataDisk           `protobuf:"bytes,9,opt,name=systemDisk,proto3" json:"systemDisk,omitempty"`
	DataDisks             []*DataDisk         `protobuf:"bytes,10,rep,name=dataDisks,proto3" json:"dataDisks,omitempty"`
	InternetAccess        *InternetAccessible `protobuf:"bytes,11,opt,name=internetAccess,proto3" json:"internetAccess,omitempty"`
	InitLoginPassword     string              `protobuf:"bytes,12,opt,name=initLoginPassword,proto3" json:"initLoginPassword,omitempty"`
	SecurityGroupIDs      []string            `protobuf:"bytes,13,rep,name=securityGroupIDs,proto3" json:"securityGroupIDs,omitempty"`
	ImageInfo             *ImageInfo          `protobuf:"bytes,14,opt,name=imageInfo,proto3" json:"imageInfo,omitempty"`
	IsSecurityService     bool                `protobuf:"varint,15,opt,name=isSecurityService,proto3" json:"isSecurityService,omitempty"`
	IsMonitorService      bool                `protobuf:"varint,16,opt,name=isMonitorService,proto3" json:"isMonitorService,omitempty"`
	UserData              string              `protobuf:"bytes,17,opt,name=userData,proto3" json:"userData,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}            `json:"-" bson:"-"`
	XXX_unrecognized      []byte              `json:"-" bson:"-"`
	XXX_sizecache         int32               `json:"-" bson:"-"`
}

func (m *LaunchConfiguration) Reset()         { *m = LaunchConfiguration{} }
func (m *LaunchConfiguration) String() string { return proto.CompactTextString(m) }
func (*LaunchConfiguration) ProtoMessage()    {}
func (*LaunchConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{56}
}

func (m *LaunchConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LaunchConfiguration.Unmarshal(m, b)
}
func (m *LaunchConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LaunchConfiguration.Marshal(b, m, deterministic)
}
func (m *LaunchConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LaunchConfiguration.Merge(m, src)
}
func (m *LaunchConfiguration) XXX_Size() int {
	return xxx_messageInfo_LaunchConfiguration.Size(m)
}
func (m *LaunchConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_LaunchConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_LaunchConfiguration proto.InternalMessageInfo

func (m *LaunchConfiguration) GetLaunchConfigurationID() string {
	if m != nil {
		return m.LaunchConfigurationID
	}
	return ""
}

func (m *LaunchConfiguration) GetLaunchConfigureName() string {
	if m != nil {
		return m.LaunchConfigureName
	}
	return ""
}

func (m *LaunchConfiguration) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *LaunchConfiguration) GetCPU() uint32 {
	if m != nil {
		return m.CPU
	}
	return 0
}

func (m *LaunchConfiguration) GetMem() uint32 {
	if m != nil {
		return m.Mem
	}
	return 0
}

func (m *LaunchConfiguration) GetGPU() uint32 {
	if m != nil {
		return m.GPU
	}
	return 0
}

func (m *LaunchConfiguration) GetInstanceType() string {
	if m != nil {
		return m.InstanceType
	}
	return ""
}

func (m *LaunchConfiguration) GetInstanceChargeType() string {
	if m != nil {
		return m.InstanceChargeType
	}
	return ""
}

func (m *LaunchConfiguration) GetSystemDisk() *DataDisk {
	if m != nil {
		return m.SystemDisk
	}
	return nil
}

func (m *LaunchConfiguration) GetDataDisks() []*DataDisk {
	if m != nil {
		return m.DataDisks
	}
	return nil
}

func (m *LaunchConfiguration) GetInternetAccess() *InternetAccessible {
	if m != nil {
		return m.InternetAccess
	}
	return nil
}

func (m *LaunchConfiguration) GetInitLoginPassword() string {
	if m != nil {
		return m.InitLoginPassword
	}
	return ""
}

func (m *LaunchConfiguration) GetSecurityGroupIDs() []string {
	if m != nil {
		return m.SecurityGroupIDs
	}
	return nil
}

func (m *LaunchConfiguration) GetImageInfo() *ImageInfo {
	if m != nil {
		return m.ImageInfo
	}
	return nil
}

func (m *LaunchConfiguration) GetIsSecurityService() bool {
	if m != nil {
		return m.IsSecurityService
	}
	return false
}

func (m *LaunchConfiguration) GetIsMonitorService() bool {
	if m != nil {
		return m.IsMonitorService
	}
	return false
}

func (m *LaunchConfiguration) GetUserData() string {
	if m != nil {
		return m.UserData
	}
	return ""
}

// ImageInfo 创建cvm实例的镜像信息
type ImageInfo struct {
	ImageID              string   `protobuf:"bytes,1,opt,name=imageID,proto3" json:"imageID,omitempty"`
	ImageName            string   `protobuf:"bytes,2,opt,name=imageName,proto3" json:"imageName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ImageInfo) Reset()         { *m = ImageInfo{} }
func (m *ImageInfo) String() string { return proto.CompactTextString(m) }
func (*ImageInfo) ProtoMessage()    {}
func (*ImageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{57}
}

func (m *ImageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageInfo.Unmarshal(m, b)
}
func (m *ImageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageInfo.Marshal(b, m, deterministic)
}
func (m *ImageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageInfo.Merge(m, src)
}
func (m *ImageInfo) XXX_Size() int {
	return xxx_messageInfo_ImageInfo.Size(m)
}
func (m *ImageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ImageInfo proto.InternalMessageInfo

func (m *ImageInfo) GetImageID() string {
	if m != nil {
		return m.ImageID
	}
	return ""
}

func (m *ImageInfo) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

// ClusterAutoScalingOption cluster autoScaler module parameter
type ClusterAutoScalingOption struct {
	IsScaleDownEnable                bool     `protobuf:"varint,1,opt,name=isScaleDownEnable,proto3" json:"isScaleDownEnable,omitempty"`
	Expander                         string   `protobuf:"bytes,2,opt,name=expander,proto3" json:"expander,omitempty"`
	MaxEmptyBulkDelete               uint32   `protobuf:"varint,3,opt,name=maxEmptyBulkDelete,proto3" json:"maxEmptyBulkDelete,omitempty"`
	ScaleDownDelay                   uint32   `protobuf:"varint,4,opt,name=scaleDownDelay,proto3" json:"scaleDownDelay,omitempty"`
	ScaleDownUnneededTime            uint32   `protobuf:"varint,5,opt,name=scaleDownUnneededTime,proto3" json:"scaleDownUnneededTime,omitempty"`
	ScaleDownUtilizationThreahold    uint32   `protobuf:"varint,6,opt,name=scaleDownUtilizationThreahold,proto3" json:"scaleDownUtilizationThreahold,omitempty"`
	SkipNodesWithLocalStorage        bool     `protobuf:"varint,7,opt,name=skipNodesWithLocalStorage,proto3" json:"skipNodesWithLocalStorage,omitempty"`
	SkipNodesWithSystemPods          bool     `protobuf:"varint,8,opt,name=skipNodesWithSystemPods,proto3" json:"skipNodesWithSystemPods,omitempty"`
	IgnoreDaemonSetsUtilization      bool     `protobuf:"varint,9,opt,name=ignoreDaemonSetsUtilization,proto3" json:"ignoreDaemonSetsUtilization,omitempty"`
	OkTotalUnreadyCount              uint32   `protobuf:"varint,10,opt,name=okTotalUnreadyCount,proto3" json:"okTotalUnreadyCount,omitempty"`
	MaxTotalUnreadyPercentage        uint32   `protobuf:"varint,11,opt,name=maxTotalUnreadyPercentage,proto3" json:"maxTotalUnreadyPercentage,omitempty"`
	ScaleDownUnreadyTime             uint32   `protobuf:"varint,12,opt,name=scaleDownUnreadyTime,proto3" json:"scaleDownUnreadyTime,omitempty"`
	UnregisteredNodeRemovalTime      uint32   `protobuf:"varint,13,opt,name=unregisteredNodeRemovalTime,proto3" json:"unregisteredNodeRemovalTime,omitempty"`
	ProjectID                        string   `protobuf:"bytes,14,opt,name=projectID,proto3" json:"projectID,omitempty"`
	ClusterID                        string   `protobuf:"bytes,15,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Creator                          string   `protobuf:"bytes,16,opt,name=creator,proto3" json:"creator,omitempty"`
	CreateTime                       string   `protobuf:"bytes,17,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Updater                          string   `protobuf:"bytes,18,opt,name=updater,proto3" json:"updater,omitempty"`
	UpdateTime                       string   `protobuf:"bytes,19,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	Provider                         string   `protobuf:"bytes,20,opt,name=provider,proto3" json:"provider,omitempty"`
	EnableAutoscale                  bool     `protobuf:"varint,21,opt,name=enableAutoscale,proto3" json:"enableAutoscale,omitempty"`
	BufferResourceRatio              uint32   `protobuf:"varint,22,opt,name=bufferResourceRatio,proto3" json:"bufferResourceRatio,omitempty"`
	MaxGracefulTerminationSec        uint32   `protobuf:"varint,23,opt,name=maxGracefulTerminationSec,proto3" json:"maxGracefulTerminationSec,omitempty"`
	ScanInterval                     uint32   `protobuf:"varint,24,opt,name=scanInterval,proto3" json:"scanInterval,omitempty"`
	MaxNodeProvisionTime             uint32   `protobuf:"varint,25,opt,name=maxNodeProvisionTime,proto3" json:"maxNodeProvisionTime,omitempty"`
	ScaleUpFromZero                  bool     `protobuf:"varint,26,opt,name=scaleUpFromZero,proto3" json:"scaleUpFromZero,omitempty"`
	ScaleDownDelayAfterAdd           uint32   `protobuf:"varint,27,opt,name=scaleDownDelayAfterAdd,proto3" json:"scaleDownDelayAfterAdd,omitempty"`
	ScaleDownDelayAfterDelete        uint32   `protobuf:"varint,28,opt,name=scaleDownDelayAfterDelete,proto3" json:"scaleDownDelayAfterDelete,omitempty"`
	ScaleDownDelayAfterFailure       uint32   `protobuf:"varint,29,opt,name=scaleDownDelayAfterFailure,proto3" json:"scaleDownDelayAfterFailure,omitempty"`
	ScaleDownGpuUtilizationThreshold uint32   `protobuf:"varint,30,opt,name=scaleDownGpuUtilizationThreshold,proto3" json:"scaleDownGpuUtilizationThreshold,omitempty"`
	Status                           string   `protobuf:"bytes,31,opt,name=status,proto3" json:"status,omitempty"`
	ErrorMessage                     string   `protobuf:"bytes,32,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	XXX_NoUnkeyedLiteral             struct{} `json:"-" bson:"-"`
	XXX_unrecognized                 []byte   `json:"-" bson:"-"`
	XXX_sizecache                    int32    `json:"-" bson:"-"`
}

func (m *ClusterAutoScalingOption) Reset()         { *m = ClusterAutoScalingOption{} }
func (m *ClusterAutoScalingOption) String() string { return proto.CompactTextString(m) }
func (*ClusterAutoScalingOption) ProtoMessage()    {}
func (*ClusterAutoScalingOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{58}
}

func (m *ClusterAutoScalingOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterAutoScalingOption.Unmarshal(m, b)
}
func (m *ClusterAutoScalingOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterAutoScalingOption.Marshal(b, m, deterministic)
}
func (m *ClusterAutoScalingOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterAutoScalingOption.Merge(m, src)
}
func (m *ClusterAutoScalingOption) XXX_Size() int {
	return xxx_messageInfo_ClusterAutoScalingOption.Size(m)
}
func (m *ClusterAutoScalingOption) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterAutoScalingOption.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterAutoScalingOption proto.InternalMessageInfo

func (m *ClusterAutoScalingOption) GetIsScaleDownEnable() bool {
	if m != nil {
		return m.IsScaleDownEnable
	}
	return false
}

func (m *ClusterAutoScalingOption) GetExpander() string {
	if m != nil {
		return m.Expander
	}
	return ""
}

func (m *ClusterAutoScalingOption) GetMaxEmptyBulkDelete() uint32 {
	if m != nil {
		return m.MaxEmptyBulkDelete
	}
	return 0
}

func (m *ClusterAutoScalingOption) GetScaleDownDelay() uint32 {
	if m != nil {
		return m.ScaleDownDelay
	}
	return 0
}

func (m *ClusterAutoScalingOption) GetScaleDownUnneededTime() uint32 {
	if m != nil {
		return m.ScaleDownUnneededTime
	}
	return 0
}

func (m *ClusterAutoScalingOption) GetScaleDownUtilizationThreahold() uint32 {
	if m != nil {
		return m.ScaleDownUtilizationThreahold
	}
	return 0
}

func (m *ClusterAutoScalingOption) GetSkipNodesWithLocalStorage() bool {
	if m != nil {
		return m.SkipNodesWithLocalStorage
	}
	return false
}

func (m *ClusterAutoScalingOption) GetSkipNodesWithSystemPods() bool {
	if m != nil {
		return m.SkipNodesWithSystemPods
	}
	return false
}

func (m *ClusterAutoScalingOption) GetIgnoreDaemonSetsUtilization() bool {
	if m != nil {
		return m.IgnoreDaemonSetsUtilization
	}
	return false
}

func (m *ClusterAutoScalingOption) GetOkTotalUnreadyCount() uint32 {
	if m != nil {
		return m.OkTotalUnreadyCount
	}
	return 0
}

func (m *ClusterAutoScalingOption) GetMaxTotalUnreadyPercentage() uint32 {
	if m != nil {
		return m.MaxTotalUnreadyPercentage
	}
	return 0
}

func (m *ClusterAutoScalingOption) GetScaleDownUnreadyTime() uint32 {
	if m != nil {
		return m.ScaleDownUnreadyTime
	}
	return 0
}

func (m *ClusterAutoScalingOption) GetUnregisteredNodeRemovalTime() uint32 {
	if m != nil {
		return m.UnregisteredNodeRemovalTime
	}
	return 0
}

func (m *ClusterAutoScalingOption) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *ClusterAutoScalingOption) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ClusterAutoScalingOption) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *ClusterAutoScalingOption) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *ClusterAutoScalingOption) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *ClusterAutoScalingOption) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *ClusterAutoScalingOption) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *ClusterAutoScalingOption) GetEnableAutoscale() bool {
	if m != nil {
		return m.EnableAutoscale
	}
	return false
}

func (m *ClusterAutoScalingOption) GetBufferResourceRatio() uint32 {
	if m != nil {
		return m.BufferResourceRatio
	}
	return 0
}

func (m *ClusterAutoScalingOption) GetMaxGracefulTerminationSec() uint32 {
	if m != nil {
		return m.MaxGracefulTerminationSec
	}
	return 0
}

func (m *ClusterAutoScalingOption) GetScanInterval() uint32 {
	if m != nil {
		return m.ScanInterval
	}
	return 0
}

func (m *ClusterAutoScalingOption) GetMaxNodeProvisionTime() uint32 {
	if m != nil {
		return m.MaxNodeProvisionTime
	}
	return 0
}

func (m *ClusterAutoScalingOption) GetScaleUpFromZero() bool {
	if m != nil {
		return m.ScaleUpFromZero
	}
	return false
}

func (m *ClusterAutoScalingOption) GetScaleDownDelayAfterAdd() uint32 {
	if m != nil {
		return m.ScaleDownDelayAfterAdd
	}
	return 0
}

func (m *ClusterAutoScalingOption) GetScaleDownDelayAfterDelete() uint32 {
	if m != nil {
		return m.ScaleDownDelayAfterDelete
	}
	return 0
}

func (m *ClusterAutoScalingOption) GetScaleDownDelayAfterFailure() uint32 {
	if m != nil {
		return m.ScaleDownDelayAfterFailure
	}
	return 0
}

func (m *ClusterAutoScalingOption) GetScaleDownGpuUtilizationThreshold() uint32 {
	if m != nil {
		return m.ScaleDownGpuUtilizationThreshold
	}
	return 0
}

func (m *ClusterAutoScalingOption) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ClusterAutoScalingOption) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

// Taint for node taints
type Taint struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Effect               string   `protobuf:"bytes,3,opt,name=effect,proto3" json:"effect,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *Taint) Reset()         { *m = Taint{} }
func (m *Taint) String() string { return proto.CompactTextString(m) }
func (*Taint) ProtoMessage()    {}
func (*Taint) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{59}
}

func (m *Taint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Taint.Unmarshal(m, b)
}
func (m *Taint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Taint.Marshal(b, m, deterministic)
}
func (m *Taint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Taint.Merge(m, src)
}
func (m *Taint) XXX_Size() int {
	return xxx_messageInfo_Taint.Size(m)
}
func (m *Taint) XXX_DiscardUnknown() {
	xxx_messageInfo_Taint.DiscardUnknown(m)
}

var xxx_messageInfo_Taint proto.InternalMessageInfo

func (m *Taint) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Taint) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Taint) GetEffect() string {
	if m != nil {
		return m.Effect
	}
	return ""
}

// NodeTemplate for kubernetes cluster node common setting
type NodeTemplate struct {
	NodeTemplateID       string            `protobuf:"bytes,1,opt,name=nodeTemplateID,proto3" json:"nodeTemplateID,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ProjectID            string            `protobuf:"bytes,3,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Labels               map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Taints               []*Taint          `protobuf:"bytes,5,rep,name=taints,proto3" json:"taints,omitempty"`
	DockerGraphPath      string            `protobuf:"bytes,6,opt,name=dockerGraphPath,proto3" json:"dockerGraphPath,omitempty"`
	MountTarget          string            `protobuf:"bytes,7,opt,name=mountTarget,proto3" json:"mountTarget,omitempty"`
	UserScript           string            `protobuf:"bytes,8,opt,name=userScript,proto3" json:"userScript,omitempty"`
	UnSchedulable        uint32            `protobuf:"varint,9,opt,name=unSchedulable,proto3" json:"unSchedulable,omitempty"`
	DataDisks            []*DataDisk       `protobuf:"bytes,10,rep,name=dataDisks,proto3" json:"dataDisks,omitempty"`
	ExtraArgs            map[string]string `protobuf:"bytes,11,rep,name=extraArgs,proto3" json:"extraArgs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PreStartUserScript   string            `protobuf:"bytes,12,opt,name=preStartUserScript,proto3" json:"preStartUserScript,omitempty"`
	BcsScaleOutAddons    *Action           `protobuf:"bytes,13,opt,name=bcsScaleOutAddons,proto3" json:"bcsScaleOutAddons,omitempty"`
	BcsScaleInAddons     *Action           `protobuf:"bytes,14,opt,name=bcsScaleInAddons,proto3" json:"bcsScaleInAddons,omitempty"`
	ScaleOutExtraAddons  *Action           `protobuf:"bytes,15,opt,name=scaleOutExtraAddons,proto3" json:"scaleOutExtraAddons,omitempty"`
	ScaleInExtraAddons   *Action           `protobuf:"bytes,16,opt,name=scaleInExtraAddons,proto3" json:"scaleInExtraAddons,omitempty"`
	NodeOS               string            `protobuf:"bytes,17,opt,name=nodeOS,proto3" json:"nodeOS,omitempty"`
	ModuleID             string            `protobuf:"bytes,18,opt,name=moduleID,proto3" json:"moduleID,omitempty"`
	Creator              string            `protobuf:"bytes,19,opt,name=creator,proto3" json:"creator,omitempty"`
	Updater              string            `protobuf:"bytes,20,opt,name=updater,proto3" json:"updater,omitempty"`
	CreateTime           string            `protobuf:"bytes,21,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string            `protobuf:"bytes,22,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	Desc                 string            `protobuf:"bytes,23,opt,name=desc,proto3" json:"desc,omitempty"`
	Runtime              *RunTimeInfo      `protobuf:"bytes,24,opt,name=runtime,proto3" json:"runtime,omitempty"`
	Module               *ModuleInfo       `protobuf:"bytes,25,opt,name=module,proto3" json:"module,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *NodeTemplate) Reset()         { *m = NodeTemplate{} }
func (m *NodeTemplate) String() string { return proto.CompactTextString(m) }
func (*NodeTemplate) ProtoMessage()    {}
func (*NodeTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{60}
}

func (m *NodeTemplate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeTemplate.Unmarshal(m, b)
}
func (m *NodeTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeTemplate.Marshal(b, m, deterministic)
}
func (m *NodeTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeTemplate.Merge(m, src)
}
func (m *NodeTemplate) XXX_Size() int {
	return xxx_messageInfo_NodeTemplate.Size(m)
}
func (m *NodeTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_NodeTemplate proto.InternalMessageInfo

func (m *NodeTemplate) GetNodeTemplateID() string {
	if m != nil {
		return m.NodeTemplateID
	}
	return ""
}

func (m *NodeTemplate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NodeTemplate) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *NodeTemplate) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *NodeTemplate) GetTaints() []*Taint {
	if m != nil {
		return m.Taints
	}
	return nil
}

func (m *NodeTemplate) GetDockerGraphPath() string {
	if m != nil {
		return m.DockerGraphPath
	}
	return ""
}

func (m *NodeTemplate) GetMountTarget() string {
	if m != nil {
		return m.MountTarget
	}
	return ""
}

func (m *NodeTemplate) GetUserScript() string {
	if m != nil {
		return m.UserScript
	}
	return ""
}

func (m *NodeTemplate) GetUnSchedulable() uint32 {
	if m != nil {
		return m.UnSchedulable
	}
	return 0
}

func (m *NodeTemplate) GetDataDisks() []*DataDisk {
	if m != nil {
		return m.DataDisks
	}
	return nil
}

func (m *NodeTemplate) GetExtraArgs() map[string]string {
	if m != nil {
		return m.ExtraArgs
	}
	return nil
}

func (m *NodeTemplate) GetPreStartUserScript() string {
	if m != nil {
		return m.PreStartUserScript
	}
	return ""
}

func (m *NodeTemplate) GetBcsScaleOutAddons() *Action {
	if m != nil {
		return m.BcsScaleOutAddons
	}
	return nil
}

func (m *NodeTemplate) GetBcsScaleInAddons() *Action {
	if m != nil {
		return m.BcsScaleInAddons
	}
	return nil
}

func (m *NodeTemplate) GetScaleOutExtraAddons() *Action {
	if m != nil {
		return m.ScaleOutExtraAddons
	}
	return nil
}

func (m *NodeTemplate) GetScaleInExtraAddons() *Action {
	if m != nil {
		return m.ScaleInExtraAddons
	}
	return nil
}

func (m *NodeTemplate) GetNodeOS() string {
	if m != nil {
		return m.NodeOS
	}
	return ""
}

func (m *NodeTemplate) GetModuleID() string {
	if m != nil {
		return m.ModuleID
	}
	return ""
}

func (m *NodeTemplate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *NodeTemplate) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *NodeTemplate) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *NodeTemplate) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *NodeTemplate) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *NodeTemplate) GetRuntime() *RunTimeInfo {
	if m != nil {
		return m.Runtime
	}
	return nil
}

func (m *NodeTemplate) GetModule() *ModuleInfo {
	if m != nil {
		return m.Module
	}
	return nil
}

// ModuleInfo 业务模块信息,主要涉及到节点模块转移
type ModuleInfo struct {
	ScaleOutModuleID     string   `protobuf:"bytes,1,opt,name=scaleOutModuleID,proto3" json:"scaleOutModuleID,omitempty"`
	ScaleInModuleID      string   `protobuf:"bytes,2,opt,name=scaleInModuleID,proto3" json:"scaleInModuleID,omitempty"`
	ScaleOutBizID        string   `protobuf:"bytes,3,opt,name=scaleOutBizID,proto3" json:"scaleOutBizID,omitempty"`
	ScaleInBizID         string   `protobuf:"bytes,4,opt,name=scaleInBizID,proto3" json:"scaleInBizID,omitempty"`
	ScaleOutModuleName   string   `protobuf:"bytes,5,opt,name=scaleOutModuleName,proto3" json:"scaleOutModuleName,omitempty"`
	ScaleInModuleName    string   `protobuf:"bytes,6,opt,name=scaleInModuleName,proto3" json:"scaleInModuleName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ModuleInfo) Reset()         { *m = ModuleInfo{} }
func (m *ModuleInfo) String() string { return proto.CompactTextString(m) }
func (*ModuleInfo) ProtoMessage()    {}
func (*ModuleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{61}
}

func (m *ModuleInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModuleInfo.Unmarshal(m, b)
}
func (m *ModuleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModuleInfo.Marshal(b, m, deterministic)
}
func (m *ModuleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleInfo.Merge(m, src)
}
func (m *ModuleInfo) XXX_Size() int {
	return xxx_messageInfo_ModuleInfo.Size(m)
}
func (m *ModuleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleInfo proto.InternalMessageInfo

func (m *ModuleInfo) GetScaleOutModuleID() string {
	if m != nil {
		return m.ScaleOutModuleID
	}
	return ""
}

func (m *ModuleInfo) GetScaleInModuleID() string {
	if m != nil {
		return m.ScaleInModuleID
	}
	return ""
}

func (m *ModuleInfo) GetScaleOutBizID() string {
	if m != nil {
		return m.ScaleOutBizID
	}
	return ""
}

func (m *ModuleInfo) GetScaleInBizID() string {
	if m != nil {
		return m.ScaleInBizID
	}
	return ""
}

func (m *ModuleInfo) GetScaleOutModuleName() string {
	if m != nil {
		return m.ScaleOutModuleName
	}
	return ""
}

func (m *ModuleInfo) GetScaleInModuleName() string {
	if m != nil {
		return m.ScaleInModuleName
	}
	return ""
}

// RunTimeInfo cluster runTime info
type RunTimeInfo struct {
	ContainerRuntime     string   `protobuf:"bytes,1,opt,name=containerRuntime,proto3" json:"containerRuntime,omitempty"`
	RuntimeVersion       string   `protobuf:"bytes,2,opt,name=runtimeVersion,proto3" json:"runtimeVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *RunTimeInfo) Reset()         { *m = RunTimeInfo{} }
func (m *RunTimeInfo) String() string { return proto.CompactTextString(m) }
func (*RunTimeInfo) ProtoMessage()    {}
func (*RunTimeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{62}
}

func (m *RunTimeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunTimeInfo.Unmarshal(m, b)
}
func (m *RunTimeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunTimeInfo.Marshal(b, m, deterministic)
}
func (m *RunTimeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunTimeInfo.Merge(m, src)
}
func (m *RunTimeInfo) XXX_Size() int {
	return xxx_messageInfo_RunTimeInfo.Size(m)
}
func (m *RunTimeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RunTimeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RunTimeInfo proto.InternalMessageInfo

func (m *RunTimeInfo) GetContainerRuntime() string {
	if m != nil {
		return m.ContainerRuntime
	}
	return ""
}

func (m *RunTimeInfo) GetRuntimeVersion() string {
	if m != nil {
		return m.RuntimeVersion
	}
	return ""
}

type Project struct {
	ProjectID            string                 `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Name                 string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	EnglishName          string                 `protobuf:"bytes,3,opt,name=englishName,proto3" json:"englishName,omitempty"`
	Creator              string                 `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`
	Updater              string                 `protobuf:"bytes,5,opt,name=updater,proto3" json:"updater,omitempty"`
	ProjectType          uint32                 `protobuf:"varint,6,opt,name=projectType,proto3" json:"projectType,omitempty"`
	UseBKRes             bool                   `protobuf:"varint,7,opt,name=useBKRes,proto3" json:"useBKRes,omitempty"`
	Description          string                 `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	IsOffline            bool                   `protobuf:"varint,9,opt,name=isOffline,proto3" json:"isOffline,omitempty"`
	Kind                 string                 `protobuf:"bytes,10,opt,name=kind,proto3" json:"kind,omitempty"`
	BusinessID           string                 `protobuf:"bytes,11,opt,name=businessID,proto3" json:"businessID,omitempty"`
	DeployType           uint32                 `protobuf:"varint,12,opt,name=deployType,proto3" json:"deployType,omitempty"`
	BgID                 string                 `protobuf:"bytes,13,opt,name=bgID,proto3" json:"bgID,omitempty"`
	BgName               string                 `protobuf:"bytes,14,opt,name=bgName,proto3" json:"bgName,omitempty"`
	DeptID               string                 `protobuf:"bytes,15,opt,name=deptID,proto3" json:"deptID,omitempty"`
	DeptName             string                 `protobuf:"bytes,16,opt,name=deptName,proto3" json:"deptName,omitempty"`
	CenterID             string                 `protobuf:"bytes,17,opt,name=centerID,proto3" json:"centerID,omitempty"`
	CenterName           string                 `protobuf:"bytes,18,opt,name=centerName,proto3" json:"centerName,omitempty"`
	IsSecret             bool                   `protobuf:"varint,19,opt,name=isSecret,proto3" json:"isSecret,omitempty"`
	Credentials          map[string]*Credential `protobuf:"bytes,20,rep,name=credentials,proto3" json:"credentials,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreatTime            string                 `protobuf:"bytes,21,opt,name=creatTime,proto3" json:"creatTime,omitempty"`
	UpdateTime           string                 `protobuf:"bytes,22,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-" bson:"-"`
	XXX_unrecognized     []byte                 `json:"-" bson:"-"`
	XXX_sizecache        int32                  `json:"-" bson:"-"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()    {}
func (*Project) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{63}
}

func (m *Project) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Project.Unmarshal(m, b)
}
func (m *Project) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Project.Marshal(b, m, deterministic)
}
func (m *Project) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Project.Merge(m, src)
}
func (m *Project) XXX_Size() int {
	return xxx_messageInfo_Project.Size(m)
}
func (m *Project) XXX_DiscardUnknown() {
	xxx_messageInfo_Project.DiscardUnknown(m)
}

var xxx_messageInfo_Project proto.InternalMessageInfo

func (m *Project) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *Project) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Project) GetEnglishName() string {
	if m != nil {
		return m.EnglishName
	}
	return ""
}

func (m *Project) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Project) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *Project) GetProjectType() uint32 {
	if m != nil {
		return m.ProjectType
	}
	return 0
}

func (m *Project) GetUseBKRes() bool {
	if m != nil {
		return m.UseBKRes
	}
	return false
}

func (m *Project) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Project) GetIsOffline() bool {
	if m != nil {
		return m.IsOffline
	}
	return false
}

func (m *Project) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Project) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *Project) GetDeployType() uint32 {
	if m != nil {
		return m.DeployType
	}
	return 0
}

func (m *Project) GetBgID() string {
	if m != nil {
		return m.BgID
	}
	return ""
}

func (m *Project) GetBgName() string {
	if m != nil {
		return m.BgName
	}
	return ""
}

func (m *Project) GetDeptID() string {
	if m != nil {
		return m.DeptID
	}
	return ""
}

func (m *Project) GetDeptName() string {
	if m != nil {
		return m.DeptName
	}
	return ""
}

func (m *Project) GetCenterID() string {
	if m != nil {
		return m.CenterID
	}
	return ""
}

func (m *Project) GetCenterName() string {
	if m != nil {
		return m.CenterName
	}
	return ""
}

func (m *Project) GetIsSecret() bool {
	if m != nil {
		return m.IsSecret
	}
	return false
}

func (m *Project) GetCredentials() map[string]*Credential {
	if m != nil {
		return m.Credentials
	}
	return nil
}

func (m *Project) GetCreatTime() string {
	if m != nil {
		return m.CreatTime
	}
	return ""
}

func (m *Project) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

type Task struct {
	TaskID               string            `protobuf:"bytes,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	TaskType             string            `protobuf:"bytes,2,opt,name=taskType,proto3" json:"taskType,omitempty"`
	Status               string            `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Message              string            `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Start                string            `protobuf:"bytes,5,opt,name=start,proto3" json:"start,omitempty"`
	End                  string            `protobuf:"bytes,6,opt,name=end,proto3" json:"end,omitempty"`
	ExecutionTime        uint32            `protobuf:"varint,7,opt,name=executionTime,proto3" json:"executionTime,omitempty"`
	CurrentStep          string            `protobuf:"bytes,8,opt,name=currentStep,proto3" json:"currentStep,omitempty"`
	StepSequence         []string          `protobuf:"bytes,9,rep,name=stepSequence,proto3" json:"stepSequence,omitempty"`
	Steps                map[string]*Step  `protobuf:"bytes,10,rep,name=steps,proto3" json:"steps,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ClusterID            string            `protobuf:"bytes,11,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ProjectID            string            `protobuf:"bytes,12,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Creator              string            `protobuf:"bytes,13,opt,name=creator,proto3" json:"creator,omitempty"`
	LastUpdate           string            `protobuf:"bytes,14,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	Updater              string            `protobuf:"bytes,15,opt,name=updater,proto3" json:"updater,omitempty"`
	ForceTerminate       bool              `protobuf:"varint,16,opt,name=forceTerminate,proto3" json:"forceTerminate,omitempty"`
	CommonParams         map[string]string `protobuf:"bytes,17,rep,name=commonParams,proto3" json:"commonParams,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TaskName             string            `protobuf:"bytes,18,opt,name=taskName,proto3" json:"taskName,omitempty"`
	NodeIPList           []string          `protobuf:"bytes,19,rep,name=nodeIPList,proto3" json:"nodeIPList,omitempty"`
	NodeGroupID          string            `protobuf:"bytes,20,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{64}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetTaskID() string {
	if m != nil {
		return m.TaskID
	}
	return ""
}

func (m *Task) GetTaskType() string {
	if m != nil {
		return m.TaskType
	}
	return ""
}

func (m *Task) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Task) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Task) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *Task) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

func (m *Task) GetExecutionTime() uint32 {
	if m != nil {
		return m.ExecutionTime
	}
	return 0
}

func (m *Task) GetCurrentStep() string {
	if m != nil {
		return m.CurrentStep
	}
	return ""
}

func (m *Task) GetStepSequence() []string {
	if m != nil {
		return m.StepSequence
	}
	return nil
}

func (m *Task) GetSteps() map[string]*Step {
	if m != nil {
		return m.Steps
	}
	return nil
}

func (m *Task) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *Task) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *Task) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Task) GetLastUpdate() string {
	if m != nil {
		return m.LastUpdate
	}
	return ""
}

func (m *Task) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *Task) GetForceTerminate() bool {
	if m != nil {
		return m.ForceTerminate
	}
	return false
}

func (m *Task) GetCommonParams() map[string]string {
	if m != nil {
		return m.CommonParams
	}
	return nil
}

func (m *Task) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *Task) GetNodeIPList() []string {
	if m != nil {
		return m.NodeIPList
	}
	return nil
}

func (m *Task) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

type Step struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	System               string            `protobuf:"bytes,2,opt,name=system,proto3" json:"system,omitempty"`
	Link                 string            `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	Params               map[string]string `protobuf:"bytes,4,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Retry                uint32            `protobuf:"varint,5,opt,name=retry,proto3" json:"retry,omitempty"`
	Start                string            `protobuf:"bytes,6,opt,name=start,proto3" json:"start,omitempty"`
	End                  string            `protobuf:"bytes,7,opt,name=end,proto3" json:"end,omitempty"`
	ExecutionTime        uint32            `protobuf:"varint,8,opt,name=executionTime,proto3" json:"executionTime,omitempty"`
	Status               string            `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	Message              string            `protobuf:"bytes,10,opt,name=message,proto3" json:"message,omitempty"`
	LastUpdate           string            `protobuf:"bytes,11,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	TaskMethod           string            `protobuf:"bytes,12,opt,name=taskMethod,proto3" json:"taskMethod,omitempty"`
	TaskName             string            `protobuf:"bytes,13,opt,name=taskName,proto3" json:"taskName,omitempty"`
	SkipOnFailed         bool              `protobuf:"varint,14,opt,name=skipOnFailed,proto3" json:"skipOnFailed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *Step) Reset()         { *m = Step{} }
func (m *Step) String() string { return proto.CompactTextString(m) }
func (*Step) ProtoMessage()    {}
func (*Step) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{65}
}

func (m *Step) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Step.Unmarshal(m, b)
}
func (m *Step) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Step.Marshal(b, m, deterministic)
}
func (m *Step) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Step.Merge(m, src)
}
func (m *Step) XXX_Size() int {
	return xxx_messageInfo_Step.Size(m)
}
func (m *Step) XXX_DiscardUnknown() {
	xxx_messageInfo_Step.DiscardUnknown(m)
}

var xxx_messageInfo_Step proto.InternalMessageInfo

func (m *Step) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Step) GetSystem() string {
	if m != nil {
		return m.System
	}
	return ""
}

func (m *Step) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *Step) GetParams() map[string]string {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *Step) GetRetry() uint32 {
	if m != nil {
		return m.Retry
	}
	return 0
}

func (m *Step) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *Step) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

func (m *Step) GetExecutionTime() uint32 {
	if m != nil {
		return m.ExecutionTime
	}
	return 0
}

func (m *Step) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Step) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Step) GetLastUpdate() string {
	if m != nil {
		return m.LastUpdate
	}
	return ""
}

func (m *Step) GetTaskMethod() string {
	if m != nil {
		return m.TaskMethod
	}
	return ""
}

func (m *Step) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *Step) GetSkipOnFailed() bool {
	if m != nil {
		return m.SkipOnFailed
	}
	return false
}

type TkeCidr struct {
	VPC                  string   `protobuf:"bytes,1,opt,name=VPC,proto3" json:"VPC,omitempty"`
	CIDR                 string   `protobuf:"bytes,2,opt,name=CIDR,proto3" json:"CIDR,omitempty"`
	IPNumber             uint32   `protobuf:"varint,3,opt,name=IPNumber,proto3" json:"IPNumber,omitempty"`
	Status               string   `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Cluster              string   `protobuf:"bytes,5,opt,name=cluster,proto3" json:"cluster,omitempty"`
	CreateTime           string   `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string   `protobuf:"bytes,7,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *TkeCidr) Reset()         { *m = TkeCidr{} }
func (m *TkeCidr) String() string { return proto.CompactTextString(m) }
func (*TkeCidr) ProtoMessage()    {}
func (*TkeCidr) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{66}
}

func (m *TkeCidr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TkeCidr.Unmarshal(m, b)
}
func (m *TkeCidr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TkeCidr.Marshal(b, m, deterministic)
}
func (m *TkeCidr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TkeCidr.Merge(m, src)
}
func (m *TkeCidr) XXX_Size() int {
	return xxx_messageInfo_TkeCidr.Size(m)
}
func (m *TkeCidr) XXX_DiscardUnknown() {
	xxx_messageInfo_TkeCidr.DiscardUnknown(m)
}

var xxx_messageInfo_TkeCidr proto.InternalMessageInfo

func (m *TkeCidr) GetVPC() string {
	if m != nil {
		return m.VPC
	}
	return ""
}

func (m *TkeCidr) GetCIDR() string {
	if m != nil {
		return m.CIDR
	}
	return ""
}

func (m *TkeCidr) GetIPNumber() uint32 {
	if m != nil {
		return m.IPNumber
	}
	return 0
}

func (m *TkeCidr) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TkeCidr) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *TkeCidr) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *TkeCidr) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

type TkeCidrCount struct {
	Count                uint32   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	VPC                  string   `protobuf:"bytes,2,opt,name=VPC,proto3" json:"VPC,omitempty"`
	IPNumber             uint32   `protobuf:"varint,3,opt,name=IPNumber,proto3" json:"IPNumber,omitempty"`
	Status               string   `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *TkeCidrCount) Reset()         { *m = TkeCidrCount{} }
func (m *TkeCidrCount) String() string { return proto.CompactTextString(m) }
func (*TkeCidrCount) ProtoMessage()    {}
func (*TkeCidrCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{67}
}

func (m *TkeCidrCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TkeCidrCount.Unmarshal(m, b)
}
func (m *TkeCidrCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TkeCidrCount.Marshal(b, m, deterministic)
}
func (m *TkeCidrCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TkeCidrCount.Merge(m, src)
}
func (m *TkeCidrCount) XXX_Size() int {
	return xxx_messageInfo_TkeCidrCount.Size(m)
}
func (m *TkeCidrCount) XXX_DiscardUnknown() {
	xxx_messageInfo_TkeCidrCount.DiscardUnknown(m)
}

var xxx_messageInfo_TkeCidrCount proto.InternalMessageInfo

func (m *TkeCidrCount) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *TkeCidrCount) GetVPC() string {
	if m != nil {
		return m.VPC
	}
	return ""
}

func (m *TkeCidrCount) GetIPNumber() uint32 {
	if m != nil {
		return m.IPNumber
	}
	return 0
}

func (m *TkeCidrCount) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type CreateClusterReq struct {
	ClusterID           string            `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ClusterName         string            `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Provider            string            `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
	Region              string            `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	VpcID               string            `protobuf:"bytes,5,opt,name=vpcID,proto3" json:"vpcID,omitempty"`
	ProjectID           string            `protobuf:"bytes,6,opt,name=projectID,proto3" json:"projectID,omitempty"`
	BusinessID          string            `protobuf:"bytes,7,opt,name=businessID,proto3" json:"businessID,omitempty"`
	Environment         string            `protobuf:"bytes,8,opt,name=environment,proto3" json:"environment,omitempty"`
	EngineType          string            `protobuf:"bytes,9,opt,name=engineType,proto3" json:"engineType,omitempty"`
	IsExclusive         bool              `protobuf:"varint,10,opt,name=isExclusive,proto3" json:"isExclusive,omitempty"`
	ClusterType         string            `protobuf:"bytes,11,opt,name=clusterType,proto3" json:"clusterType,omitempty"`
	FederationClusterID string            `protobuf:"bytes,12,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	Labels              map[string]string `protobuf:"bytes,13,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Creator             string            `protobuf:"bytes,14,opt,name=creator,proto3" json:"creator,omitempty"`
	//集群创建的控制信息
	OnlyCreateInfo          bool                      `protobuf:"varint,15,opt,name=onlyCreateInfo,proto3" json:"onlyCreateInfo,omitempty"`
	BcsAddons               map[string]*BKOpsPlugin   `protobuf:"bytes,17,rep,name=bcsAddons,proto3" json:"bcsAddons,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ExtraAddons             map[string]*BKOpsPlugin   `protobuf:"bytes,18,rep,name=extraAddons,proto3" json:"extraAddons,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CloudID                 string                    `protobuf:"bytes,19,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	ManageType              string                    `protobuf:"bytes,20,opt,name=manageType,proto3" json:"manageType,omitempty"`
	Master                  []string                  `protobuf:"bytes,21,rep,name=master,proto3" json:"master,omitempty"`
	Nodes                   []string                  `protobuf:"bytes,22,rep,name=nodes,proto3" json:"nodes,omitempty"`
	NetworkSettings         *NetworkSetting           `protobuf:"bytes,23,opt,name=networkSettings,proto3" json:"networkSettings,omitempty"`
	ClusterBasicSettings    *ClusterBasicSetting      `protobuf:"bytes,24,opt,name=clusterBasicSettings,proto3" json:"clusterBasicSettings,omitempty"`
	ClusterAdvanceSettings  *ClusterAdvanceSetting    `protobuf:"bytes,25,opt,name=clusterAdvanceSettings,proto3" json:"clusterAdvanceSettings,omitempty"`
	NodeSettings            *NodeSetting              `protobuf:"bytes,26,opt,name=nodeSettings,proto3" json:"nodeSettings,omitempty"`
	SystemReinstall         bool                      `protobuf:"varint,27,opt,name=systemReinstall,proto3" json:"systemReinstall,omitempty"`
	InitLoginPassword       string                    `protobuf:"bytes,28,opt,name=initLoginPassword,proto3" json:"initLoginPassword,omitempty"`
	NetworkType             string                    `protobuf:"bytes,29,opt,name=networkType,proto3" json:"networkType,omitempty"`
	AutoGenerateMasterNodes bool                      `protobuf:"varint,30,opt,name=autoGenerateMasterNodes,proto3" json:"autoGenerateMasterNodes,omitempty"`
	Instances               []*InstanceTemplateConfig `protobuf:"bytes,31,rep,name=instances,proto3" json:"instances,omitempty"`
	ExtraInfo               map[string]string         `protobuf:"bytes,32,rep,name=extraInfo,proto3" json:"extraInfo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ModuleID                string                    `protobuf:"bytes,33,opt,name=moduleID,proto3" json:"moduleID,omitempty"`
	ExtraClusterID          string                    `protobuf:"bytes,34,opt,name=extraClusterID,proto3" json:"extraClusterID,omitempty"`
	IsCommonCluster         bool                      `protobuf:"varint,35,opt,name=isCommonCluster,proto3" json:"isCommonCluster,omitempty"`
	Description             string                    `protobuf:"bytes,36,opt,name=description,proto3" json:"description,omitempty"`
	ClusterCategory         string                    `protobuf:"bytes,37,opt,name=clusterCategory,proto3" json:"clusterCategory,omitempty"`
	IsShared                bool                      `protobuf:"varint,38,opt,name=is_shared,json=isShared,proto3" json:"is_shared,omitempty"`
	CloudAccountID          string                    `protobuf:"bytes,39,opt,name=cloudAccountID,proto3" json:"cloudAccountID,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                  `json:"-" bson:"-"`
	XXX_unrecognized        []byte                    `json:"-" bson:"-"`
	XXX_sizecache           int32                     `json:"-" bson:"-"`
}

func (m *CreateClusterReq) Reset()         { *m = CreateClusterReq{} }
func (m *CreateClusterReq) String() string { return proto.CompactTextString(m) }
func (*CreateClusterReq) ProtoMessage()    {}
func (*CreateClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{68}
}

func (m *CreateClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClusterReq.Unmarshal(m, b)
}
func (m *CreateClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClusterReq.Marshal(b, m, deterministic)
}
func (m *CreateClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClusterReq.Merge(m, src)
}
func (m *CreateClusterReq) XXX_Size() int {
	return xxx_messageInfo_CreateClusterReq.Size(m)
}
func (m *CreateClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClusterReq proto.InternalMessageInfo

func (m *CreateClusterReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *CreateClusterReq) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *CreateClusterReq) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *CreateClusterReq) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *CreateClusterReq) GetVpcID() string {
	if m != nil {
		return m.VpcID
	}
	return ""
}

func (m *CreateClusterReq) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *CreateClusterReq) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *CreateClusterReq) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *CreateClusterReq) GetEngineType() string {
	if m != nil {
		return m.EngineType
	}
	return ""
}

func (m *CreateClusterReq) GetIsExclusive() bool {
	if m != nil {
		return m.IsExclusive
	}
	return false
}

func (m *CreateClusterReq) GetClusterType() string {
	if m != nil {
		return m.ClusterType
	}
	return ""
}

func (m *CreateClusterReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *CreateClusterReq) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateClusterReq) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CreateClusterReq) GetOnlyCreateInfo() bool {
	if m != nil {
		return m.OnlyCreateInfo
	}
	return false
}

func (m *CreateClusterReq) GetBcsAddons() map[string]*BKOpsPlugin {
	if m != nil {
		return m.BcsAddons
	}
	return nil
}

func (m *CreateClusterReq) GetExtraAddons() map[string]*BKOpsPlugin {
	if m != nil {
		return m.ExtraAddons
	}
	return nil
}

func (m *CreateClusterReq) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *CreateClusterReq) GetManageType() string {
	if m != nil {
		return m.ManageType
	}
	return ""
}

func (m *CreateClusterReq) GetMaster() []string {
	if m != nil {
		return m.Master
	}
	return nil
}

func (m *CreateClusterReq) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *CreateClusterReq) GetNetworkSettings() *NetworkSetting {
	if m != nil {
		return m.NetworkSettings
	}
	return nil
}

func (m *CreateClusterReq) GetClusterBasicSettings() *ClusterBasicSetting {
	if m != nil {
		return m.ClusterBasicSettings
	}
	return nil
}

func (m *CreateClusterReq) GetClusterAdvanceSettings() *ClusterAdvanceSetting {
	if m != nil {
		return m.ClusterAdvanceSettings
	}
	return nil
}

func (m *CreateClusterReq) GetNodeSettings() *NodeSetting {
	if m != nil {
		return m.NodeSettings
	}
	return nil
}

func (m *CreateClusterReq) GetSystemReinstall() bool {
	if m != nil {
		return m.SystemReinstall
	}
	return false
}

func (m *CreateClusterReq) GetInitLoginPassword() string {
	if m != nil {
		return m.InitLoginPassword
	}
	return ""
}

func (m *CreateClusterReq) GetNetworkType() string {
	if m != nil {
		return m.NetworkType
	}
	return ""
}

func (m *CreateClusterReq) GetAutoGenerateMasterNodes() bool {
	if m != nil {
		return m.AutoGenerateMasterNodes
	}
	return false
}

func (m *CreateClusterReq) GetInstances() []*InstanceTemplateConfig {
	if m != nil {
		return m.Instances
	}
	return nil
}

func (m *CreateClusterReq) GetExtraInfo() map[string]string {
	if m != nil {
		return m.ExtraInfo
	}
	return nil
}

func (m *CreateClusterReq) GetModuleID() string {
	if m != nil {
		return m.ModuleID
	}
	return ""
}

func (m *CreateClusterReq) GetExtraClusterID() string {
	if m != nil {
		return m.ExtraClusterID
	}
	return ""
}

func (m *CreateClusterReq) GetIsCommonCluster() bool {
	if m != nil {
		return m.IsCommonCluster
	}
	return false
}

func (m *CreateClusterReq) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateClusterReq) GetClusterCategory() string {
	if m != nil {
		return m.ClusterCategory
	}
	return ""
}

func (m *CreateClusterReq) GetIsShared() bool {
	if m != nil {
		return m.IsShared
	}
	return false
}

func (m *CreateClusterReq) GetCloudAccountID() string {
	if m != nil {
		return m.CloudAccountID
	}
	return ""
}

type CreateClusterResp struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Cluster `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Task                 *Task    `protobuf:"bytes,5,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CreateClusterResp) Reset()         { *m = CreateClusterResp{} }
func (m *CreateClusterResp) String() string { return proto.CompactTextString(m) }
func (*CreateClusterResp) ProtoMessage()    {}
func (*CreateClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{69}
}

func (m *CreateClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClusterResp.Unmarshal(m, b)
}
func (m *CreateClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClusterResp.Marshal(b, m, deterministic)
}
func (m *CreateClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClusterResp.Merge(m, src)
}
func (m *CreateClusterResp) XXX_Size() int {
	return xxx_messageInfo_CreateClusterResp.Size(m)
}
func (m *CreateClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClusterResp proto.InternalMessageInfo

func (m *CreateClusterResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateClusterResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateClusterResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *CreateClusterResp) GetData() *Cluster {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateClusterResp) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type KubeConfigReq struct {
	KubeConfig           string   `protobuf:"bytes,1,opt,name=kubeConfig,proto3" json:"kubeConfig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *KubeConfigReq) Reset()         { *m = KubeConfigReq{} }
func (m *KubeConfigReq) String() string { return proto.CompactTextString(m) }
func (*KubeConfigReq) ProtoMessage()    {}
func (*KubeConfigReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{70}
}

func (m *KubeConfigReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KubeConfigReq.Unmarshal(m, b)
}
func (m *KubeConfigReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KubeConfigReq.Marshal(b, m, deterministic)
}
func (m *KubeConfigReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubeConfigReq.Merge(m, src)
}
func (m *KubeConfigReq) XXX_Size() int {
	return xxx_messageInfo_KubeConfigReq.Size(m)
}
func (m *KubeConfigReq) XXX_DiscardUnknown() {
	xxx_messageInfo_KubeConfigReq.DiscardUnknown(m)
}

var xxx_messageInfo_KubeConfigReq proto.InternalMessageInfo

func (m *KubeConfigReq) GetKubeConfig() string {
	if m != nil {
		return m.KubeConfig
	}
	return ""
}

type KubeConfigResp struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *KubeConfigResp) Reset()         { *m = KubeConfigResp{} }
func (m *KubeConfigResp) String() string { return proto.CompactTextString(m) }
func (*KubeConfigResp) ProtoMessage()    {}
func (*KubeConfigResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{71}
}

func (m *KubeConfigResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KubeConfigResp.Unmarshal(m, b)
}
func (m *KubeConfigResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KubeConfigResp.Marshal(b, m, deterministic)
}
func (m *KubeConfigResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubeConfigResp.Merge(m, src)
}
func (m *KubeConfigResp) XXX_Size() int {
	return xxx_messageInfo_KubeConfigResp.Size(m)
}
func (m *KubeConfigResp) XXX_DiscardUnknown() {
	xxx_messageInfo_KubeConfigResp.DiscardUnknown(m)
}

var xxx_messageInfo_KubeConfigResp proto.InternalMessageInfo

func (m *KubeConfigResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *KubeConfigResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *KubeConfigResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type ImportCloudMode struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	KubeConfig           string   `protobuf:"bytes,2,opt,name=kubeConfig,proto3" json:"kubeConfig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ImportCloudMode) Reset()         { *m = ImportCloudMode{} }
func (m *ImportCloudMode) String() string { return proto.CompactTextString(m) }
func (*ImportCloudMode) ProtoMessage()    {}
func (*ImportCloudMode) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{72}
}

func (m *ImportCloudMode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportCloudMode.Unmarshal(m, b)
}
func (m *ImportCloudMode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportCloudMode.Marshal(b, m, deterministic)
}
func (m *ImportCloudMode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportCloudMode.Merge(m, src)
}
func (m *ImportCloudMode) XXX_Size() int {
	return xxx_messageInfo_ImportCloudMode.Size(m)
}
func (m *ImportCloudMode) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportCloudMode.DiscardUnknown(m)
}

var xxx_messageInfo_ImportCloudMode proto.InternalMessageInfo

func (m *ImportCloudMode) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *ImportCloudMode) GetKubeConfig() string {
	if m != nil {
		return m.KubeConfig
	}
	return ""
}

type ImportClusterReq struct {
	ClusterID            string              `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ClusterName          string              `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Description          string              `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Provider             string              `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	Region               string              `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	ProjectID            string              `protobuf:"bytes,6,opt,name=projectID,proto3" json:"projectID,omitempty"`
	BusinessID           string              `protobuf:"bytes,7,opt,name=businessID,proto3" json:"businessID,omitempty"`
	Environment          string              `protobuf:"bytes,8,opt,name=environment,proto3" json:"environment,omitempty"`
	EngineType           string              `protobuf:"bytes,9,opt,name=engineType,proto3" json:"engineType,omitempty"`
	IsExclusive          *wrappers.BoolValue `protobuf:"bytes,10,opt,name=isExclusive,proto3" json:"isExclusive,omitempty"`
	ClusterType          string              `protobuf:"bytes,11,opt,name=clusterType,proto3" json:"clusterType,omitempty"`
	Labels               map[string]string   `protobuf:"bytes,12,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Creator              string              `protobuf:"bytes,13,opt,name=creator,proto3" json:"creator,omitempty"`
	CloudMode            *ImportCloudMode    `protobuf:"bytes,14,opt,name=cloudMode,proto3" json:"cloudMode,omitempty"`
	ManageType           string              `protobuf:"bytes,15,opt,name=manageType,proto3" json:"manageType,omitempty"`
	NetworkType          string              `protobuf:"bytes,16,opt,name=networkType,proto3" json:"networkType,omitempty"`
	ExtraInfo            map[string]string   `protobuf:"bytes,17,rep,name=extraInfo,proto3" json:"extraInfo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ExtraClusterID       string              `protobuf:"bytes,18,opt,name=extraClusterID,proto3" json:"extraClusterID,omitempty"`
	ClusterCategory      string              `protobuf:"bytes,19,opt,name=clusterCategory,proto3" json:"clusterCategory,omitempty"`
	IsShared             bool                `protobuf:"varint,20,opt,name=is_shared,json=isShared,proto3" json:"is_shared,omitempty"`
	Version              string              `protobuf:"bytes,21,opt,name=version,proto3" json:"version,omitempty"`
	AccountID            string              `protobuf:"bytes,22,opt,name=accountID,proto3" json:"accountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-" bson:"-"`
	XXX_unrecognized     []byte              `json:"-" bson:"-"`
	XXX_sizecache        int32               `json:"-" bson:"-"`
}

func (m *ImportClusterReq) Reset()         { *m = ImportClusterReq{} }
func (m *ImportClusterReq) String() string { return proto.CompactTextString(m) }
func (*ImportClusterReq) ProtoMessage()    {}
func (*ImportClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{73}
}

func (m *ImportClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportClusterReq.Unmarshal(m, b)
}
func (m *ImportClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportClusterReq.Marshal(b, m, deterministic)
}
func (m *ImportClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportClusterReq.Merge(m, src)
}
func (m *ImportClusterReq) XXX_Size() int {
	return xxx_messageInfo_ImportClusterReq.Size(m)
}
func (m *ImportClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_ImportClusterReq proto.InternalMessageInfo

func (m *ImportClusterReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ImportClusterReq) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *ImportClusterReq) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ImportClusterReq) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *ImportClusterReq) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *ImportClusterReq) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *ImportClusterReq) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *ImportClusterReq) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *ImportClusterReq) GetEngineType() string {
	if m != nil {
		return m.EngineType
	}
	return ""
}

func (m *ImportClusterReq) GetIsExclusive() *wrappers.BoolValue {
	if m != nil {
		return m.IsExclusive
	}
	return nil
}

func (m *ImportClusterReq) GetClusterType() string {
	if m != nil {
		return m.ClusterType
	}
	return ""
}

func (m *ImportClusterReq) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *ImportClusterReq) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *ImportClusterReq) GetCloudMode() *ImportCloudMode {
	if m != nil {
		return m.CloudMode
	}
	return nil
}

func (m *ImportClusterReq) GetManageType() string {
	if m != nil {
		return m.ManageType
	}
	return ""
}

func (m *ImportClusterReq) GetNetworkType() string {
	if m != nil {
		return m.NetworkType
	}
	return ""
}

func (m *ImportClusterReq) GetExtraInfo() map[string]string {
	if m != nil {
		return m.ExtraInfo
	}
	return nil
}

func (m *ImportClusterReq) GetExtraClusterID() string {
	if m != nil {
		return m.ExtraClusterID
	}
	return ""
}

func (m *ImportClusterReq) GetClusterCategory() string {
	if m != nil {
		return m.ClusterCategory
	}
	return ""
}

func (m *ImportClusterReq) GetIsShared() bool {
	if m != nil {
		return m.IsShared
	}
	return false
}

func (m *ImportClusterReq) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ImportClusterReq) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

type ImportClusterResp struct {
	Code                 uint32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool            `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *_struct.Struct `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" bson:"-"`
	XXX_unrecognized     []byte          `json:"-" bson:"-"`
	XXX_sizecache        int32           `json:"-" bson:"-"`
}

func (m *ImportClusterResp) Reset()         { *m = ImportClusterResp{} }
func (m *ImportClusterResp) String() string { return proto.CompactTextString(m) }
func (*ImportClusterResp) ProtoMessage()    {}
func (*ImportClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{74}
}

func (m *ImportClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportClusterResp.Unmarshal(m, b)
}
func (m *ImportClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportClusterResp.Marshal(b, m, deterministic)
}
func (m *ImportClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportClusterResp.Merge(m, src)
}
func (m *ImportClusterResp) XXX_Size() int {
	return xxx_messageInfo_ImportClusterResp.Size(m)
}
func (m *ImportClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_ImportClusterResp proto.InternalMessageInfo

func (m *ImportClusterResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ImportClusterResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ImportClusterResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ImportClusterResp) GetData() *_struct.Struct {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteClusterReq struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	IsForced             bool     `protobuf:"varint,2,opt,name=isForced,proto3" json:"isForced,omitempty"`
	InstanceDeleteMode   string   `protobuf:"bytes,3,opt,name=instanceDeleteMode,proto3" json:"instanceDeleteMode,omitempty"`
	OnlyDeleteInfo       bool     `protobuf:"varint,4,opt,name=onlyDeleteInfo,proto3" json:"onlyDeleteInfo,omitempty"`
	Operator             string   `protobuf:"bytes,5,opt,name=operator,proto3" json:"operator,omitempty"`
	DeleteClusterRecord  bool     `protobuf:"varint,6,opt,name=deleteClusterRecord,proto3" json:"deleteClusterRecord,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteClusterReq) Reset()         { *m = DeleteClusterReq{} }
func (m *DeleteClusterReq) String() string { return proto.CompactTextString(m) }
func (*DeleteClusterReq) ProtoMessage()    {}
func (*DeleteClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{75}
}

func (m *DeleteClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteClusterReq.Unmarshal(m, b)
}
func (m *DeleteClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteClusterReq.Marshal(b, m, deterministic)
}
func (m *DeleteClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteClusterReq.Merge(m, src)
}
func (m *DeleteClusterReq) XXX_Size() int {
	return xxx_messageInfo_DeleteClusterReq.Size(m)
}
func (m *DeleteClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteClusterReq proto.InternalMessageInfo

func (m *DeleteClusterReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *DeleteClusterReq) GetIsForced() bool {
	if m != nil {
		return m.IsForced
	}
	return false
}

func (m *DeleteClusterReq) GetInstanceDeleteMode() string {
	if m != nil {
		return m.InstanceDeleteMode
	}
	return ""
}

func (m *DeleteClusterReq) GetOnlyDeleteInfo() bool {
	if m != nil {
		return m.OnlyDeleteInfo
	}
	return false
}

func (m *DeleteClusterReq) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *DeleteClusterReq) GetDeleteClusterRecord() bool {
	if m != nil {
		return m.DeleteClusterRecord
	}
	return false
}

type DeleteClusterResp struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Cluster `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Task                 *Task    `protobuf:"bytes,5,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteClusterResp) Reset()         { *m = DeleteClusterResp{} }
func (m *DeleteClusterResp) String() string { return proto.CompactTextString(m) }
func (*DeleteClusterResp) ProtoMessage()    {}
func (*DeleteClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{76}
}

func (m *DeleteClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteClusterResp.Unmarshal(m, b)
}
func (m *DeleteClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteClusterResp.Marshal(b, m, deterministic)
}
func (m *DeleteClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteClusterResp.Merge(m, src)
}
func (m *DeleteClusterResp) XXX_Size() int {
	return xxx_messageInfo_DeleteClusterResp.Size(m)
}
func (m *DeleteClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteClusterResp proto.InternalMessageInfo

func (m *DeleteClusterResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteClusterResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteClusterResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *DeleteClusterResp) GetData() *Cluster {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *DeleteClusterResp) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type UpdateClusterReq struct {
	ClusterID              string                  `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ClusterName            string                  `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Provider               string                  `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
	Region                 string                  `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	VpcID                  string                  `protobuf:"bytes,5,opt,name=vpcID,proto3" json:"vpcID,omitempty"`
	ProjectID              string                  `protobuf:"bytes,6,opt,name=projectID,proto3" json:"projectID,omitempty"`
	BusinessID             string                  `protobuf:"bytes,7,opt,name=businessID,proto3" json:"businessID,omitempty"`
	Environment            string                  `protobuf:"bytes,8,opt,name=environment,proto3" json:"environment,omitempty"`
	EngineType             string                  `protobuf:"bytes,9,opt,name=engineType,proto3" json:"engineType,omitempty"`
	IsExclusive            *wrappers.BoolValue     `protobuf:"bytes,10,opt,name=isExclusive,proto3" json:"isExclusive,omitempty"`
	ClusterType            string                  `protobuf:"bytes,11,opt,name=clusterType,proto3" json:"clusterType,omitempty"`
	FederationClusterID    string                  `protobuf:"bytes,12,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	Labels                 map[string]string       `protobuf:"bytes,13,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Updater                string                  `protobuf:"bytes,14,opt,name=updater,proto3" json:"updater,omitempty"`
	Status                 string                  `protobuf:"bytes,15,opt,name=status,proto3" json:"status,omitempty"`
	BcsAddons              map[string]*BKOpsPlugin `protobuf:"bytes,17,rep,name=bcsAddons,proto3" json:"bcsAddons,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ExtraAddons            map[string]*BKOpsPlugin `protobuf:"bytes,18,rep,name=extraAddons,proto3" json:"extraAddons,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SystemID               string                  `protobuf:"bytes,19,opt,name=systemID,proto3" json:"systemID,omitempty"`
	ManageType             string                  `protobuf:"bytes,20,opt,name=manageType,proto3" json:"manageType,omitempty"`
	Master                 []string                `protobuf:"bytes,21,rep,name=master,proto3" json:"master,omitempty"`
	NetworkSettings        *NetworkSetting         `protobuf:"bytes,22,opt,name=networkSettings,proto3" json:"networkSettings,omitempty"`
	ClusterBasicSettings   *ClusterBasicSetting    `protobuf:"bytes,23,opt,name=clusterBasicSettings,proto3" json:"clusterBasicSettings,omitempty"`
	ClusterAdvanceSettings *ClusterAdvanceSetting  `protobuf:"bytes,24,opt,name=clusterAdvanceSettings,proto3" json:"clusterAdvanceSettings,omitempty"`
	NodeSettings           *NodeSetting            `protobuf:"bytes,25,opt,name=nodeSettings,proto3" json:"nodeSettings,omitempty"`
	NetworkType            string                  `protobuf:"bytes,26,opt,name=networkType,proto3" json:"networkType,omitempty"`
	ExtraInfo              map[string]string       `protobuf:"bytes,27,rep,name=ExtraInfo,proto3" json:"ExtraInfo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ModuleID               string                  `protobuf:"bytes,28,opt,name=moduleID,proto3" json:"moduleID,omitempty"`
	ExtraClusterID         string                  `protobuf:"bytes,29,opt,name=extraClusterID,proto3" json:"extraClusterID,omitempty"`
	IsCommonCluster        *wrappers.BoolValue     `protobuf:"bytes,30,opt,name=isCommonCluster,proto3" json:"isCommonCluster,omitempty"`
	Description            string                  `protobuf:"bytes,31,opt,name=description,proto3" json:"description,omitempty"`
	ClusterCategory        string                  `protobuf:"bytes,32,opt,name=clusterCategory,proto3" json:"clusterCategory,omitempty"`
	IsShared               *wrappers.BoolValue     `protobuf:"bytes,33,opt,name=is_shared,json=isShared,proto3" json:"is_shared,omitempty"`
	CreateTime             string                  `protobuf:"bytes,34,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Creator                string                  `protobuf:"bytes,35,opt,name=creator,proto3" json:"creator,omitempty"`
	ImportCategory         string                  `protobuf:"bytes,36,opt,name=importCategory,proto3" json:"importCategory,omitempty"`
	CloudAccountID         string                  `protobuf:"bytes,37,opt,name=cloudAccountID,proto3" json:"cloudAccountID,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                `json:"-" bson:"-"`
	XXX_unrecognized       []byte                  `json:"-" bson:"-"`
	XXX_sizecache          int32                   `json:"-" bson:"-"`
}

func (m *UpdateClusterReq) Reset()         { *m = UpdateClusterReq{} }
func (m *UpdateClusterReq) String() string { return proto.CompactTextString(m) }
func (*UpdateClusterReq) ProtoMessage()    {}
func (*UpdateClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{77}
}

func (m *UpdateClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateClusterReq.Unmarshal(m, b)
}
func (m *UpdateClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateClusterReq.Marshal(b, m, deterministic)
}
func (m *UpdateClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateClusterReq.Merge(m, src)
}
func (m *UpdateClusterReq) XXX_Size() int {
	return xxx_messageInfo_UpdateClusterReq.Size(m)
}
func (m *UpdateClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateClusterReq proto.InternalMessageInfo

func (m *UpdateClusterReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *UpdateClusterReq) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *UpdateClusterReq) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *UpdateClusterReq) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *UpdateClusterReq) GetVpcID() string {
	if m != nil {
		return m.VpcID
	}
	return ""
}

func (m *UpdateClusterReq) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *UpdateClusterReq) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *UpdateClusterReq) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *UpdateClusterReq) GetEngineType() string {
	if m != nil {
		return m.EngineType
	}
	return ""
}

func (m *UpdateClusterReq) GetIsExclusive() *wrappers.BoolValue {
	if m != nil {
		return m.IsExclusive
	}
	return nil
}

func (m *UpdateClusterReq) GetClusterType() string {
	if m != nil {
		return m.ClusterType
	}
	return ""
}

func (m *UpdateClusterReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *UpdateClusterReq) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *UpdateClusterReq) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *UpdateClusterReq) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *UpdateClusterReq) GetBcsAddons() map[string]*BKOpsPlugin {
	if m != nil {
		return m.BcsAddons
	}
	return nil
}

func (m *UpdateClusterReq) GetExtraAddons() map[string]*BKOpsPlugin {
	if m != nil {
		return m.ExtraAddons
	}
	return nil
}

func (m *UpdateClusterReq) GetSystemID() string {
	if m != nil {
		return m.SystemID
	}
	return ""
}

func (m *UpdateClusterReq) GetManageType() string {
	if m != nil {
		return m.ManageType
	}
	return ""
}

func (m *UpdateClusterReq) GetMaster() []string {
	if m != nil {
		return m.Master
	}
	return nil
}

func (m *UpdateClusterReq) GetNetworkSettings() *NetworkSetting {
	if m != nil {
		return m.NetworkSettings
	}
	return nil
}

func (m *UpdateClusterReq) GetClusterBasicSettings() *ClusterBasicSetting {
	if m != nil {
		return m.ClusterBasicSettings
	}
	return nil
}

func (m *UpdateClusterReq) GetClusterAdvanceSettings() *ClusterAdvanceSetting {
	if m != nil {
		return m.ClusterAdvanceSettings
	}
	return nil
}

func (m *UpdateClusterReq) GetNodeSettings() *NodeSetting {
	if m != nil {
		return m.NodeSettings
	}
	return nil
}

func (m *UpdateClusterReq) GetNetworkType() string {
	if m != nil {
		return m.NetworkType
	}
	return ""
}

func (m *UpdateClusterReq) GetExtraInfo() map[string]string {
	if m != nil {
		return m.ExtraInfo
	}
	return nil
}

func (m *UpdateClusterReq) GetModuleID() string {
	if m != nil {
		return m.ModuleID
	}
	return ""
}

func (m *UpdateClusterReq) GetExtraClusterID() string {
	if m != nil {
		return m.ExtraClusterID
	}
	return ""
}

func (m *UpdateClusterReq) GetIsCommonCluster() *wrappers.BoolValue {
	if m != nil {
		return m.IsCommonCluster
	}
	return nil
}

func (m *UpdateClusterReq) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdateClusterReq) GetClusterCategory() string {
	if m != nil {
		return m.ClusterCategory
	}
	return ""
}

func (m *UpdateClusterReq) GetIsShared() *wrappers.BoolValue {
	if m != nil {
		return m.IsShared
	}
	return nil
}

func (m *UpdateClusterReq) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *UpdateClusterReq) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *UpdateClusterReq) GetImportCategory() string {
	if m != nil {
		return m.ImportCategory
	}
	return ""
}

func (m *UpdateClusterReq) GetCloudAccountID() string {
	if m != nil {
		return m.CloudAccountID
	}
	return ""
}

type UpdateClusterResp struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Cluster `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateClusterResp) Reset()         { *m = UpdateClusterResp{} }
func (m *UpdateClusterResp) String() string { return proto.CompactTextString(m) }
func (*UpdateClusterResp) ProtoMessage()    {}
func (*UpdateClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{78}
}

func (m *UpdateClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateClusterResp.Unmarshal(m, b)
}
func (m *UpdateClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateClusterResp.Marshal(b, m, deterministic)
}
func (m *UpdateClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateClusterResp.Merge(m, src)
}
func (m *UpdateClusterResp) XXX_Size() int {
	return xxx_messageInfo_UpdateClusterResp.Size(m)
}
func (m *UpdateClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateClusterResp proto.InternalMessageInfo

func (m *UpdateClusterResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateClusterResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateClusterResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *UpdateClusterResp) GetData() *Cluster {
	if m != nil {
		return m.Data
	}
	return nil
}

type RetryCreateClusterReq struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Operator             string   `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *RetryCreateClusterReq) Reset()         { *m = RetryCreateClusterReq{} }
func (m *RetryCreateClusterReq) String() string { return proto.CompactTextString(m) }
func (*RetryCreateClusterReq) ProtoMessage()    {}
func (*RetryCreateClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{79}
}

func (m *RetryCreateClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetryCreateClusterReq.Unmarshal(m, b)
}
func (m *RetryCreateClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetryCreateClusterReq.Marshal(b, m, deterministic)
}
func (m *RetryCreateClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetryCreateClusterReq.Merge(m, src)
}
func (m *RetryCreateClusterReq) XXX_Size() int {
	return xxx_messageInfo_RetryCreateClusterReq.Size(m)
}
func (m *RetryCreateClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RetryCreateClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_RetryCreateClusterReq proto.InternalMessageInfo

func (m *RetryCreateClusterReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *RetryCreateClusterReq) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type RetryCreateClusterResp struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Cluster `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Task                 *Task    `protobuf:"bytes,5,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *RetryCreateClusterResp) Reset()         { *m = RetryCreateClusterResp{} }
func (m *RetryCreateClusterResp) String() string { return proto.CompactTextString(m) }
func (*RetryCreateClusterResp) ProtoMessage()    {}
func (*RetryCreateClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{80}
}

func (m *RetryCreateClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetryCreateClusterResp.Unmarshal(m, b)
}
func (m *RetryCreateClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetryCreateClusterResp.Marshal(b, m, deterministic)
}
func (m *RetryCreateClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetryCreateClusterResp.Merge(m, src)
}
func (m *RetryCreateClusterResp) XXX_Size() int {
	return xxx_messageInfo_RetryCreateClusterResp.Size(m)
}
func (m *RetryCreateClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RetryCreateClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_RetryCreateClusterResp proto.InternalMessageInfo

func (m *RetryCreateClusterResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RetryCreateClusterResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *RetryCreateClusterResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *RetryCreateClusterResp) GetData() *Cluster {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *RetryCreateClusterResp) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type GetClusterReq struct {
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetClusterReq) Reset()         { *m = GetClusterReq{} }
func (m *GetClusterReq) String() string { return proto.CompactTextString(m) }
func (*GetClusterReq) ProtoMessage()    {}
func (*GetClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{81}
}

func (m *GetClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterReq.Unmarshal(m, b)
}
func (m *GetClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterReq.Marshal(b, m, deterministic)
}
func (m *GetClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterReq.Merge(m, src)
}
func (m *GetClusterReq) XXX_Size() int {
	return xxx_messageInfo_GetClusterReq.Size(m)
}
func (m *GetClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterReq proto.InternalMessageInfo

func (m *GetClusterReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

type GetClusterResp struct {
	Code                 uint32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool              `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Cluster          `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Extra                *ExtraClusterInfo `protobuf:"bytes,5,opt,name=extra,proto3" json:"extra,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *GetClusterResp) Reset()         { *m = GetClusterResp{} }
func (m *GetClusterResp) String() string { return proto.CompactTextString(m) }
func (*GetClusterResp) ProtoMessage()    {}
func (*GetClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{82}
}

func (m *GetClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterResp.Unmarshal(m, b)
}
func (m *GetClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterResp.Marshal(b, m, deterministic)
}
func (m *GetClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterResp.Merge(m, src)
}
func (m *GetClusterResp) XXX_Size() int {
	return xxx_messageInfo_GetClusterResp.Size(m)
}
func (m *GetClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterResp proto.InternalMessageInfo

func (m *GetClusterResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetClusterResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetClusterResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetClusterResp) GetData() *Cluster {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetClusterResp) GetExtra() *ExtraClusterInfo {
	if m != nil {
		return m.Extra
	}
	return nil
}

type ExtraClusterInfo struct {
	ProviderType         string   `protobuf:"bytes,1,opt,name=providerType,proto3" json:"providerType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ExtraClusterInfo) Reset()         { *m = ExtraClusterInfo{} }
func (m *ExtraClusterInfo) String() string { return proto.CompactTextString(m) }
func (*ExtraClusterInfo) ProtoMessage()    {}
func (*ExtraClusterInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{83}
}

func (m *ExtraClusterInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtraClusterInfo.Unmarshal(m, b)
}
func (m *ExtraClusterInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtraClusterInfo.Marshal(b, m, deterministic)
}
func (m *ExtraClusterInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtraClusterInfo.Merge(m, src)
}
func (m *ExtraClusterInfo) XXX_Size() int {
	return xxx_messageInfo_ExtraClusterInfo.Size(m)
}
func (m *ExtraClusterInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtraClusterInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ExtraClusterInfo proto.InternalMessageInfo

func (m *ExtraClusterInfo) GetProviderType() string {
	if m != nil {
		return m.ProviderType
	}
	return ""
}

type CheckNodesRequest struct {
	InnerIPs             []string `protobuf:"bytes,1,rep,name=innerIPs,proto3" json:"innerIPs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CheckNodesRequest) Reset()         { *m = CheckNodesRequest{} }
func (m *CheckNodesRequest) String() string { return proto.CompactTextString(m) }
func (*CheckNodesRequest) ProtoMessage()    {}
func (*CheckNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{84}
}

func (m *CheckNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckNodesRequest.Unmarshal(m, b)
}
func (m *CheckNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckNodesRequest.Marshal(b, m, deterministic)
}
func (m *CheckNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckNodesRequest.Merge(m, src)
}
func (m *CheckNodesRequest) XXX_Size() int {
	return xxx_messageInfo_CheckNodesRequest.Size(m)
}
func (m *CheckNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckNodesRequest proto.InternalMessageInfo

func (m *CheckNodesRequest) GetInnerIPs() []string {
	if m != nil {
		return m.InnerIPs
	}
	return nil
}

type CheckNodesResponse struct {
	Code                 uint32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                   `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 map[string]*NodeResult `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-" bson:"-"`
	XXX_unrecognized     []byte                 `json:"-" bson:"-"`
	XXX_sizecache        int32                  `json:"-" bson:"-"`
}

func (m *CheckNodesResponse) Reset()         { *m = CheckNodesResponse{} }
func (m *CheckNodesResponse) String() string { return proto.CompactTextString(m) }
func (*CheckNodesResponse) ProtoMessage()    {}
func (*CheckNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{85}
}

func (m *CheckNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckNodesResponse.Unmarshal(m, b)
}
func (m *CheckNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckNodesResponse.Marshal(b, m, deterministic)
}
func (m *CheckNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckNodesResponse.Merge(m, src)
}
func (m *CheckNodesResponse) XXX_Size() int {
	return xxx_messageInfo_CheckNodesResponse.Size(m)
}
func (m *CheckNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckNodesResponse proto.InternalMessageInfo

func (m *CheckNodesResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CheckNodesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CheckNodesResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *CheckNodesResponse) GetData() map[string]*NodeResult {
	if m != nil {
		return m.Data
	}
	return nil
}

type NodeResult struct {
	IsExist              bool     `protobuf:"varint,1,opt,name=isExist,proto3" json:"isExist,omitempty"`
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ClusterName          string   `protobuf:"bytes,3,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *NodeResult) Reset()         { *m = NodeResult{} }
func (m *NodeResult) String() string { return proto.CompactTextString(m) }
func (*NodeResult) ProtoMessage()    {}
func (*NodeResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{86}
}

func (m *NodeResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeResult.Unmarshal(m, b)
}
func (m *NodeResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeResult.Marshal(b, m, deterministic)
}
func (m *NodeResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeResult.Merge(m, src)
}
func (m *NodeResult) XXX_Size() int {
	return xxx_messageInfo_NodeResult.Size(m)
}
func (m *NodeResult) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeResult.DiscardUnknown(m)
}

var xxx_messageInfo_NodeResult proto.InternalMessageInfo

func (m *NodeResult) GetIsExist() bool {
	if m != nil {
		return m.IsExist
	}
	return false
}

func (m *NodeResult) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *NodeResult) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

type UnCordonNodeRequest struct {
	InnerIPs             []string `protobuf:"bytes,1,rep,name=innerIPs,proto3" json:"innerIPs,omitempty"`
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Nodes                []string `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UnCordonNodeRequest) Reset()         { *m = UnCordonNodeRequest{} }
func (m *UnCordonNodeRequest) String() string { return proto.CompactTextString(m) }
func (*UnCordonNodeRequest) ProtoMessage()    {}
func (*UnCordonNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{87}
}

func (m *UnCordonNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnCordonNodeRequest.Unmarshal(m, b)
}
func (m *UnCordonNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnCordonNodeRequest.Marshal(b, m, deterministic)
}
func (m *UnCordonNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnCordonNodeRequest.Merge(m, src)
}
func (m *UnCordonNodeRequest) XXX_Size() int {
	return xxx_messageInfo_UnCordonNodeRequest.Size(m)
}
func (m *UnCordonNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnCordonNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnCordonNodeRequest proto.InternalMessageInfo

func (m *UnCordonNodeRequest) GetInnerIPs() []string {
	if m != nil {
		return m.InnerIPs
	}
	return nil
}

func (m *UnCordonNodeRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *UnCordonNodeRequest) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type UnCordonNodeResponse struct {
	Code                 uint32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                 `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *NodeOperationStatus `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *UnCordonNodeResponse) Reset()         { *m = UnCordonNodeResponse{} }
func (m *UnCordonNodeResponse) String() string { return proto.CompactTextString(m) }
func (*UnCordonNodeResponse) ProtoMessage()    {}
func (*UnCordonNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{88}
}

func (m *UnCordonNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnCordonNodeResponse.Unmarshal(m, b)
}
func (m *UnCordonNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnCordonNodeResponse.Marshal(b, m, deterministic)
}
func (m *UnCordonNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnCordonNodeResponse.Merge(m, src)
}
func (m *UnCordonNodeResponse) XXX_Size() int {
	return xxx_messageInfo_UnCordonNodeResponse.Size(m)
}
func (m *UnCordonNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnCordonNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnCordonNodeResponse proto.InternalMessageInfo

func (m *UnCordonNodeResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UnCordonNodeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UnCordonNodeResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *UnCordonNodeResponse) GetData() *NodeOperationStatus {
	if m != nil {
		return m.Data
	}
	return nil
}

type CordonNodeRequest struct {
	InnerIPs             []string `protobuf:"bytes,1,rep,name=innerIPs,proto3" json:"innerIPs,omitempty"`
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Nodes                []string `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CordonNodeRequest) Reset()         { *m = CordonNodeRequest{} }
func (m *CordonNodeRequest) String() string { return proto.CompactTextString(m) }
func (*CordonNodeRequest) ProtoMessage()    {}
func (*CordonNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{89}
}

func (m *CordonNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CordonNodeRequest.Unmarshal(m, b)
}
func (m *CordonNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CordonNodeRequest.Marshal(b, m, deterministic)
}
func (m *CordonNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CordonNodeRequest.Merge(m, src)
}
func (m *CordonNodeRequest) XXX_Size() int {
	return xxx_messageInfo_CordonNodeRequest.Size(m)
}
func (m *CordonNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CordonNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CordonNodeRequest proto.InternalMessageInfo

func (m *CordonNodeRequest) GetInnerIPs() []string {
	if m != nil {
		return m.InnerIPs
	}
	return nil
}

func (m *CordonNodeRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *CordonNodeRequest) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type CordonNodeResponse struct {
	Code                 uint32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                 `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *NodeOperationStatus `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *CordonNodeResponse) Reset()         { *m = CordonNodeResponse{} }
func (m *CordonNodeResponse) String() string { return proto.CompactTextString(m) }
func (*CordonNodeResponse) ProtoMessage()    {}
func (*CordonNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{90}
}

func (m *CordonNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CordonNodeResponse.Unmarshal(m, b)
}
func (m *CordonNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CordonNodeResponse.Marshal(b, m, deterministic)
}
func (m *CordonNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CordonNodeResponse.Merge(m, src)
}
func (m *CordonNodeResponse) XXX_Size() int {
	return xxx_messageInfo_CordonNodeResponse.Size(m)
}
func (m *CordonNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CordonNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CordonNodeResponse proto.InternalMessageInfo

func (m *CordonNodeResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CordonNodeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CordonNodeResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *CordonNodeResponse) GetData() *NodeOperationStatus {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateNodeRequest struct {
	InnerIPs             []string `protobuf:"bytes,1,rep,name=innerIPs,proto3" json:"innerIPs,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	NodeGroupID          string   `protobuf:"bytes,3,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	ClusterID            string   `protobuf:"bytes,4,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Updater              string   `protobuf:"bytes,5,opt,name=updater,proto3" json:"updater,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateNodeRequest) Reset()         { *m = UpdateNodeRequest{} }
func (m *UpdateNodeRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateNodeRequest) ProtoMessage()    {}
func (*UpdateNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{91}
}

func (m *UpdateNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNodeRequest.Unmarshal(m, b)
}
func (m *UpdateNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNodeRequest.Marshal(b, m, deterministic)
}
func (m *UpdateNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNodeRequest.Merge(m, src)
}
func (m *UpdateNodeRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateNodeRequest.Size(m)
}
func (m *UpdateNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNodeRequest proto.InternalMessageInfo

func (m *UpdateNodeRequest) GetInnerIPs() []string {
	if m != nil {
		return m.InnerIPs
	}
	return nil
}

func (m *UpdateNodeRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *UpdateNodeRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *UpdateNodeRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *UpdateNodeRequest) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

type UpdateNodeResponse struct {
	Code                 uint32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool        `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *NodeStatus `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-" bson:"-"`
	XXX_unrecognized     []byte      `json:"-" bson:"-"`
	XXX_sizecache        int32       `json:"-" bson:"-"`
}

func (m *UpdateNodeResponse) Reset()         { *m = UpdateNodeResponse{} }
func (m *UpdateNodeResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateNodeResponse) ProtoMessage()    {}
func (*UpdateNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{92}
}

func (m *UpdateNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNodeResponse.Unmarshal(m, b)
}
func (m *UpdateNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNodeResponse.Marshal(b, m, deterministic)
}
func (m *UpdateNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNodeResponse.Merge(m, src)
}
func (m *UpdateNodeResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateNodeResponse.Size(m)
}
func (m *UpdateNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNodeResponse proto.InternalMessageInfo

func (m *UpdateNodeResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateNodeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateNodeResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *UpdateNodeResponse) GetData() *NodeStatus {
	if m != nil {
		return m.Data
	}
	return nil
}

type NodeStatus struct {
	Success              []string `protobuf:"bytes,1,rep,name=success,proto3" json:"success,omitempty"`
	Failed               []string `protobuf:"bytes,2,rep,name=failed,proto3" json:"failed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *NodeStatus) Reset()         { *m = NodeStatus{} }
func (m *NodeStatus) String() string { return proto.CompactTextString(m) }
func (*NodeStatus) ProtoMessage()    {}
func (*NodeStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{93}
}

func (m *NodeStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeStatus.Unmarshal(m, b)
}
func (m *NodeStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeStatus.Marshal(b, m, deterministic)
}
func (m *NodeStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeStatus.Merge(m, src)
}
func (m *NodeStatus) XXX_Size() int {
	return xxx_messageInfo_NodeStatus.Size(m)
}
func (m *NodeStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeStatus.DiscardUnknown(m)
}

var xxx_messageInfo_NodeStatus proto.InternalMessageInfo

func (m *NodeStatus) GetSuccess() []string {
	if m != nil {
		return m.Success
	}
	return nil
}

func (m *NodeStatus) GetFailed() []string {
	if m != nil {
		return m.Failed
	}
	return nil
}

type GetNodeRequest struct {
	InnerIP              string   `protobuf:"bytes,1,opt,name=innerIP,proto3" json:"innerIP,omitempty"`
	ShowPwd              bool     `protobuf:"varint,2,opt,name=showPwd,proto3" json:"showPwd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetNodeRequest) Reset()         { *m = GetNodeRequest{} }
func (m *GetNodeRequest) String() string { return proto.CompactTextString(m) }
func (*GetNodeRequest) ProtoMessage()    {}
func (*GetNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{94}
}

func (m *GetNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeRequest.Unmarshal(m, b)
}
func (m *GetNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeRequest.Marshal(b, m, deterministic)
}
func (m *GetNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeRequest.Merge(m, src)
}
func (m *GetNodeRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodeRequest.Size(m)
}
func (m *GetNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeRequest proto.InternalMessageInfo

func (m *GetNodeRequest) GetInnerIP() string {
	if m != nil {
		return m.InnerIP
	}
	return ""
}

func (m *GetNodeRequest) GetShowPwd() bool {
	if m != nil {
		return m.ShowPwd
	}
	return false
}

type GetNodeResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*Node  `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetNodeResponse) Reset()         { *m = GetNodeResponse{} }
func (m *GetNodeResponse) String() string { return proto.CompactTextString(m) }
func (*GetNodeResponse) ProtoMessage()    {}
func (*GetNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{95}
}

func (m *GetNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeResponse.Unmarshal(m, b)
}
func (m *GetNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeResponse.Marshal(b, m, deterministic)
}
func (m *GetNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeResponse.Merge(m, src)
}
func (m *GetNodeResponse) XXX_Size() int {
	return xxx_messageInfo_GetNodeResponse.Size(m)
}
func (m *GetNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeResponse proto.InternalMessageInfo

func (m *GetNodeResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetNodeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetNodeResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetNodeResponse) GetData() []*Node {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListCommonClusterReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListCommonClusterReq) Reset()         { *m = ListCommonClusterReq{} }
func (m *ListCommonClusterReq) String() string { return proto.CompactTextString(m) }
func (*ListCommonClusterReq) ProtoMessage()    {}
func (*ListCommonClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{96}
}

func (m *ListCommonClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCommonClusterReq.Unmarshal(m, b)
}
func (m *ListCommonClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCommonClusterReq.Marshal(b, m, deterministic)
}
func (m *ListCommonClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCommonClusterReq.Merge(m, src)
}
func (m *ListCommonClusterReq) XXX_Size() int {
	return xxx_messageInfo_ListCommonClusterReq.Size(m)
}
func (m *ListCommonClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCommonClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListCommonClusterReq proto.InternalMessageInfo

type ListCommonClusterResp struct {
	Code                 uint32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool            `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*Cluster      `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,6,opt,name=web_annotations,json=webAnnotations,proto3" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" bson:"-"`
	XXX_unrecognized     []byte          `json:"-" bson:"-"`
	XXX_sizecache        int32           `json:"-" bson:"-"`
}

func (m *ListCommonClusterResp) Reset()         { *m = ListCommonClusterResp{} }
func (m *ListCommonClusterResp) String() string { return proto.CompactTextString(m) }
func (*ListCommonClusterResp) ProtoMessage()    {}
func (*ListCommonClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{97}
}

func (m *ListCommonClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCommonClusterResp.Unmarshal(m, b)
}
func (m *ListCommonClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCommonClusterResp.Marshal(b, m, deterministic)
}
func (m *ListCommonClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCommonClusterResp.Merge(m, src)
}
func (m *ListCommonClusterResp) XXX_Size() int {
	return xxx_messageInfo_ListCommonClusterResp.Size(m)
}
func (m *ListCommonClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCommonClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListCommonClusterResp proto.InternalMessageInfo

func (m *ListCommonClusterResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListCommonClusterResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListCommonClusterResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListCommonClusterResp) GetData() []*Cluster {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListCommonClusterResp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type ListClusterReq struct {
	ClusterName          string   `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Provider             string   `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
	Region               string   `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	VpcID                string   `protobuf:"bytes,5,opt,name=vpcID,proto3" json:"vpcID,omitempty"`
	ProjectID            string   `protobuf:"bytes,6,opt,name=projectID,proto3" json:"projectID,omitempty"`
	BusinessID           string   `protobuf:"bytes,7,opt,name=businessID,proto3" json:"businessID,omitempty"`
	Environment          string   `protobuf:"bytes,8,opt,name=environment,proto3" json:"environment,omitempty"`
	EngineType           string   `protobuf:"bytes,9,opt,name=engineType,proto3" json:"engineType,omitempty"`
	IsExclusive          bool     `protobuf:"varint,10,opt,name=isExclusive,proto3" json:"isExclusive,omitempty"`
	ClusterType          string   `protobuf:"bytes,11,opt,name=clusterType,proto3" json:"clusterType,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,12,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	Status               string   `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	Offset               uint32   `protobuf:"varint,14,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                uint32   `protobuf:"varint,15,opt,name=limit,proto3" json:"limit,omitempty"`
	Operator             string   `protobuf:"bytes,16,opt,name=operator,proto3" json:"operator,omitempty"`
	SystemID             string   `protobuf:"bytes,17,opt,name=systemID,proto3" json:"systemID,omitempty"`
	ExtraClusterID       string   `protobuf:"bytes,18,opt,name=extraClusterID,proto3" json:"extraClusterID,omitempty"`
	IsCommonCluster      bool     `protobuf:"varint,19,opt,name=isCommonCluster,proto3" json:"isCommonCluster,omitempty"`
	ClusterID            string   `protobuf:"bytes,20,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListClusterReq) Reset()         { *m = ListClusterReq{} }
func (m *ListClusterReq) String() string { return proto.CompactTextString(m) }
func (*ListClusterReq) ProtoMessage()    {}
func (*ListClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{98}
}

func (m *ListClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClusterReq.Unmarshal(m, b)
}
func (m *ListClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClusterReq.Marshal(b, m, deterministic)
}
func (m *ListClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClusterReq.Merge(m, src)
}
func (m *ListClusterReq) XXX_Size() int {
	return xxx_messageInfo_ListClusterReq.Size(m)
}
func (m *ListClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListClusterReq proto.InternalMessageInfo

func (m *ListClusterReq) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *ListClusterReq) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *ListClusterReq) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *ListClusterReq) GetVpcID() string {
	if m != nil {
		return m.VpcID
	}
	return ""
}

func (m *ListClusterReq) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *ListClusterReq) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *ListClusterReq) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *ListClusterReq) GetEngineType() string {
	if m != nil {
		return m.EngineType
	}
	return ""
}

func (m *ListClusterReq) GetIsExclusive() bool {
	if m != nil {
		return m.IsExclusive
	}
	return false
}

func (m *ListClusterReq) GetClusterType() string {
	if m != nil {
		return m.ClusterType
	}
	return ""
}

func (m *ListClusterReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *ListClusterReq) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ListClusterReq) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListClusterReq) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListClusterReq) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *ListClusterReq) GetSystemID() string {
	if m != nil {
		return m.SystemID
	}
	return ""
}

func (m *ListClusterReq) GetExtraClusterID() string {
	if m != nil {
		return m.ExtraClusterID
	}
	return ""
}

func (m *ListClusterReq) GetIsCommonCluster() bool {
	if m != nil {
		return m.IsCommonCluster
	}
	return false
}

func (m *ListClusterReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

type ListClusterResp struct {
	Code                 uint32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                  `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*Cluster            `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	ClusterExtraInfo     map[string]*ExtraInfo `protobuf:"bytes,6,rep,name=clusterExtraInfo,proto3" json:"clusterExtraInfo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	WebAnnotations       *WebAnnotations       `protobuf:"bytes,8,opt,name=web_annotations,json=webAnnotations,proto3" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-" bson:"-"`
	XXX_unrecognized     []byte                `json:"-" bson:"-"`
	XXX_sizecache        int32                 `json:"-" bson:"-"`
}

func (m *ListClusterResp) Reset()         { *m = ListClusterResp{} }
func (m *ListClusterResp) String() string { return proto.CompactTextString(m) }
func (*ListClusterResp) ProtoMessage()    {}
func (*ListClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{99}
}

func (m *ListClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClusterResp.Unmarshal(m, b)
}
func (m *ListClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClusterResp.Marshal(b, m, deterministic)
}
func (m *ListClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClusterResp.Merge(m, src)
}
func (m *ListClusterResp) XXX_Size() int {
	return xxx_messageInfo_ListClusterResp.Size(m)
}
func (m *ListClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListClusterResp proto.InternalMessageInfo

func (m *ListClusterResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListClusterResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListClusterResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListClusterResp) GetData() []*Cluster {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListClusterResp) GetClusterExtraInfo() map[string]*ExtraInfo {
	if m != nil {
		return m.ClusterExtraInfo
	}
	return nil
}

func (m *ListClusterResp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type ExtraInfo struct {
	CanDeleted           bool     `protobuf:"varint,1,opt,name=canDeleted,proto3" json:"canDeleted,omitempty"`
	ProviderType         string   `protobuf:"bytes,2,opt,name=providerType,proto3" json:"providerType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ExtraInfo) Reset()         { *m = ExtraInfo{} }
func (m *ExtraInfo) String() string { return proto.CompactTextString(m) }
func (*ExtraInfo) ProtoMessage()    {}
func (*ExtraInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{100}
}

func (m *ExtraInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtraInfo.Unmarshal(m, b)
}
func (m *ExtraInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtraInfo.Marshal(b, m, deterministic)
}
func (m *ExtraInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtraInfo.Merge(m, src)
}
func (m *ExtraInfo) XXX_Size() int {
	return xxx_messageInfo_ExtraInfo.Size(m)
}
func (m *ExtraInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtraInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ExtraInfo proto.InternalMessageInfo

func (m *ExtraInfo) GetCanDeleted() bool {
	if m != nil {
		return m.CanDeleted
	}
	return false
}

func (m *ExtraInfo) GetProviderType() string {
	if m != nil {
		return m.ProviderType
	}
	return ""
}

// https://github.com/golang/protobuf/issues/1118
// https://pkg.go.dev/google.golang.org/protobuf/types/known/structpb#Struct
type WebAnnotations struct {
	Perms                map[string]*_struct.Struct `protobuf:"bytes,1,rep,name=perms,proto3" json:"perms,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-" bson:"-"`
	XXX_unrecognized     []byte                     `json:"-" bson:"-"`
	XXX_sizecache        int32                      `json:"-" bson:"-"`
}

func (m *WebAnnotations) Reset()         { *m = WebAnnotations{} }
func (m *WebAnnotations) String() string { return proto.CompactTextString(m) }
func (*WebAnnotations) ProtoMessage()    {}
func (*WebAnnotations) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{101}
}

func (m *WebAnnotations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WebAnnotations.Unmarshal(m, b)
}
func (m *WebAnnotations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WebAnnotations.Marshal(b, m, deterministic)
}
func (m *WebAnnotations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebAnnotations.Merge(m, src)
}
func (m *WebAnnotations) XXX_Size() int {
	return xxx_messageInfo_WebAnnotations.Size(m)
}
func (m *WebAnnotations) XXX_DiscardUnknown() {
	xxx_messageInfo_WebAnnotations.DiscardUnknown(m)
}

var xxx_messageInfo_WebAnnotations proto.InternalMessageInfo

func (m *WebAnnotations) GetPerms() map[string]*_struct.Struct {
	if m != nil {
		return m.Perms
	}
	return nil
}

type ListNodesInClusterRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Region               string   `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	VpcID                string   `protobuf:"bytes,3,opt,name=vpcID,proto3" json:"vpcID,omitempty"`
	NodeGroupID          string   `protobuf:"bytes,4,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	InstanceType         string   `protobuf:"bytes,5,opt,name=instanceType,proto3" json:"instanceType,omitempty"`
	Status               string   `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Offset               uint32   `protobuf:"varint,7,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                uint32   `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
	ShowPwd              bool     `protobuf:"varint,9,opt,name=showPwd,proto3" json:"showPwd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListNodesInClusterRequest) Reset()         { *m = ListNodesInClusterRequest{} }
func (m *ListNodesInClusterRequest) String() string { return proto.CompactTextString(m) }
func (*ListNodesInClusterRequest) ProtoMessage()    {}
func (*ListNodesInClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{102}
}

func (m *ListNodesInClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodesInClusterRequest.Unmarshal(m, b)
}
func (m *ListNodesInClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodesInClusterRequest.Marshal(b, m, deterministic)
}
func (m *ListNodesInClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodesInClusterRequest.Merge(m, src)
}
func (m *ListNodesInClusterRequest) XXX_Size() int {
	return xxx_messageInfo_ListNodesInClusterRequest.Size(m)
}
func (m *ListNodesInClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodesInClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodesInClusterRequest proto.InternalMessageInfo

func (m *ListNodesInClusterRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ListNodesInClusterRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *ListNodesInClusterRequest) GetVpcID() string {
	if m != nil {
		return m.VpcID
	}
	return ""
}

func (m *ListNodesInClusterRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *ListNodesInClusterRequest) GetInstanceType() string {
	if m != nil {
		return m.InstanceType
	}
	return ""
}

func (m *ListNodesInClusterRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ListNodesInClusterRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListNodesInClusterRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListNodesInClusterRequest) GetShowPwd() bool {
	if m != nil {
		return m.ShowPwd
	}
	return false
}

type ListNodesInClusterResponse struct {
	Code                 uint32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool           `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*ClusterNode `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-" bson:"-"`
	XXX_unrecognized     []byte         `json:"-" bson:"-"`
	XXX_sizecache        int32          `json:"-" bson:"-"`
}

func (m *ListNodesInClusterResponse) Reset()         { *m = ListNodesInClusterResponse{} }
func (m *ListNodesInClusterResponse) String() string { return proto.CompactTextString(m) }
func (*ListNodesInClusterResponse) ProtoMessage()    {}
func (*ListNodesInClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{103}
}

func (m *ListNodesInClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodesInClusterResponse.Unmarshal(m, b)
}
func (m *ListNodesInClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodesInClusterResponse.Marshal(b, m, deterministic)
}
func (m *ListNodesInClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodesInClusterResponse.Merge(m, src)
}
func (m *ListNodesInClusterResponse) XXX_Size() int {
	return xxx_messageInfo_ListNodesInClusterResponse.Size(m)
}
func (m *ListNodesInClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodesInClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodesInClusterResponse proto.InternalMessageInfo

func (m *ListNodesInClusterResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListNodesInClusterResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListNodesInClusterResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListNodesInClusterResponse) GetData() []*ClusterNode {
	if m != nil {
		return m.Data
	}
	return nil
}

type ClusterNode struct {
	NodeID               string            `protobuf:"bytes,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	InnerIP              string            `protobuf:"bytes,2,opt,name=innerIP,proto3" json:"innerIP,omitempty"`
	InstanceType         string            `protobuf:"bytes,3,opt,name=instanceType,proto3" json:"instanceType,omitempty"`
	CPU                  uint32            `protobuf:"varint,4,opt,name=CPU,proto3" json:"CPU,omitempty"`
	Mem                  uint32            `protobuf:"varint,5,opt,name=mem,proto3" json:"mem,omitempty"`
	GPU                  uint32            `protobuf:"varint,6,opt,name=GPU,proto3" json:"GPU,omitempty"`
	Status               string            `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	ZoneID               string            `protobuf:"bytes,8,opt,name=zoneID,proto3" json:"zoneID,omitempty"`
	NodeGroupID          string            `protobuf:"bytes,9,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	ClusterID            string            `protobuf:"bytes,10,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	VPC                  string            `protobuf:"bytes,11,opt,name=VPC,proto3" json:"VPC,omitempty"`
	Region               string            `protobuf:"bytes,12,opt,name=region,proto3" json:"region,omitempty"`
	Passwd               string            `protobuf:"bytes,13,opt,name=passwd,proto3" json:"passwd,omitempty"`
	Zone                 uint32            `protobuf:"varint,14,opt,name=zone,proto3" json:"zone,omitempty"`
	DeviceID             string            `protobuf:"bytes,15,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	Labels               map[string]string `protobuf:"bytes,16,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Taints               []*Taint          `protobuf:"bytes,17,rep,name=taints,proto3" json:"taints,omitempty"`
	UnSchedulable        uint32            `protobuf:"varint,18,opt,name=unSchedulable,proto3" json:"unSchedulable,omitempty"`
	NodeName             string            `protobuf:"bytes,19,opt,name=nodeName,proto3" json:"nodeName,omitempty"`
	Agent                uint32            `protobuf:"varint,20,opt,name=agent,proto3" json:"agent,omitempty"`
	Idc                  string            `protobuf:"bytes,21,opt,name=idc,proto3" json:"idc,omitempty"`
	Rack                 string            `protobuf:"bytes,22,opt,name=rack,proto3" json:"rack,omitempty"`
	DeviceClass          string            `protobuf:"bytes,23,opt,name=deviceClass,proto3" json:"deviceClass,omitempty"`
	InnerIPv6            string            `protobuf:"bytes,24,opt,name=innerIPv6,proto3" json:"innerIPv6,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *ClusterNode) Reset()         { *m = ClusterNode{} }
func (m *ClusterNode) String() string { return proto.CompactTextString(m) }
func (*ClusterNode) ProtoMessage()    {}
func (*ClusterNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{104}
}

func (m *ClusterNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterNode.Unmarshal(m, b)
}
func (m *ClusterNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterNode.Marshal(b, m, deterministic)
}
func (m *ClusterNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterNode.Merge(m, src)
}
func (m *ClusterNode) XXX_Size() int {
	return xxx_messageInfo_ClusterNode.Size(m)
}
func (m *ClusterNode) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterNode.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterNode proto.InternalMessageInfo

func (m *ClusterNode) GetNodeID() string {
	if m != nil {
		return m.NodeID
	}
	return ""
}

func (m *ClusterNode) GetInnerIP() string {
	if m != nil {
		return m.InnerIP
	}
	return ""
}

func (m *ClusterNode) GetInstanceType() string {
	if m != nil {
		return m.InstanceType
	}
	return ""
}

func (m *ClusterNode) GetCPU() uint32 {
	if m != nil {
		return m.CPU
	}
	return 0
}

func (m *ClusterNode) GetMem() uint32 {
	if m != nil {
		return m.Mem
	}
	return 0
}

func (m *ClusterNode) GetGPU() uint32 {
	if m != nil {
		return m.GPU
	}
	return 0
}

func (m *ClusterNode) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ClusterNode) GetZoneID() string {
	if m != nil {
		return m.ZoneID
	}
	return ""
}

func (m *ClusterNode) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *ClusterNode) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ClusterNode) GetVPC() string {
	if m != nil {
		return m.VPC
	}
	return ""
}

func (m *ClusterNode) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *ClusterNode) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

func (m *ClusterNode) GetZone() uint32 {
	if m != nil {
		return m.Zone
	}
	return 0
}

func (m *ClusterNode) GetDeviceID() string {
	if m != nil {
		return m.DeviceID
	}
	return ""
}

func (m *ClusterNode) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *ClusterNode) GetTaints() []*Taint {
	if m != nil {
		return m.Taints
	}
	return nil
}

func (m *ClusterNode) GetUnSchedulable() uint32 {
	if m != nil {
		return m.UnSchedulable
	}
	return 0
}

func (m *ClusterNode) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *ClusterNode) GetAgent() uint32 {
	if m != nil {
		return m.Agent
	}
	return 0
}

func (m *ClusterNode) GetIdc() string {
	if m != nil {
		return m.Idc
	}
	return ""
}

func (m *ClusterNode) GetRack() string {
	if m != nil {
		return m.Rack
	}
	return ""
}

func (m *ClusterNode) GetDeviceClass() string {
	if m != nil {
		return m.DeviceClass
	}
	return ""
}

func (m *ClusterNode) GetInnerIPv6() string {
	if m != nil {
		return m.InnerIPv6
	}
	return ""
}

type ListMastersInClusterRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListMastersInClusterRequest) Reset()         { *m = ListMastersInClusterRequest{} }
func (m *ListMastersInClusterRequest) String() string { return proto.CompactTextString(m) }
func (*ListMastersInClusterRequest) ProtoMessage()    {}
func (*ListMastersInClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{105}
}

func (m *ListMastersInClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMastersInClusterRequest.Unmarshal(m, b)
}
func (m *ListMastersInClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMastersInClusterRequest.Marshal(b, m, deterministic)
}
func (m *ListMastersInClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMastersInClusterRequest.Merge(m, src)
}
func (m *ListMastersInClusterRequest) XXX_Size() int {
	return xxx_messageInfo_ListMastersInClusterRequest.Size(m)
}
func (m *ListMastersInClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMastersInClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListMastersInClusterRequest proto.InternalMessageInfo

func (m *ListMastersInClusterRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

type ListMastersInClusterResponse struct {
	Code                 uint32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool           `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*ClusterNode `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-" bson:"-"`
	XXX_unrecognized     []byte         `json:"-" bson:"-"`
	XXX_sizecache        int32          `json:"-" bson:"-"`
}

func (m *ListMastersInClusterResponse) Reset()         { *m = ListMastersInClusterResponse{} }
func (m *ListMastersInClusterResponse) String() string { return proto.CompactTextString(m) }
func (*ListMastersInClusterResponse) ProtoMessage()    {}
func (*ListMastersInClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{106}
}

func (m *ListMastersInClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMastersInClusterResponse.Unmarshal(m, b)
}
func (m *ListMastersInClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMastersInClusterResponse.Marshal(b, m, deterministic)
}
func (m *ListMastersInClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMastersInClusterResponse.Merge(m, src)
}
func (m *ListMastersInClusterResponse) XXX_Size() int {
	return xxx_messageInfo_ListMastersInClusterResponse.Size(m)
}
func (m *ListMastersInClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMastersInClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListMastersInClusterResponse proto.InternalMessageInfo

func (m *ListMastersInClusterResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListMastersInClusterResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListMastersInClusterResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListMastersInClusterResponse) GetData() []*ClusterNode {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetClusterCredentialReq struct {
	ServerKey            string   `protobuf:"bytes,1,opt,name=serverKey,proto3" json:"serverKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetClusterCredentialReq) Reset()         { *m = GetClusterCredentialReq{} }
func (m *GetClusterCredentialReq) String() string { return proto.CompactTextString(m) }
func (*GetClusterCredentialReq) ProtoMessage()    {}
func (*GetClusterCredentialReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{107}
}

func (m *GetClusterCredentialReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterCredentialReq.Unmarshal(m, b)
}
func (m *GetClusterCredentialReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterCredentialReq.Marshal(b, m, deterministic)
}
func (m *GetClusterCredentialReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterCredentialReq.Merge(m, src)
}
func (m *GetClusterCredentialReq) XXX_Size() int {
	return xxx_messageInfo_GetClusterCredentialReq.Size(m)
}
func (m *GetClusterCredentialReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterCredentialReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterCredentialReq proto.InternalMessageInfo

func (m *GetClusterCredentialReq) GetServerKey() string {
	if m != nil {
		return m.ServerKey
	}
	return ""
}

type GetClusterCredentialResp struct {
	Code                 uint32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool               `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *ClusterCredential `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-" bson:"-"`
	XXX_unrecognized     []byte             `json:"-" bson:"-"`
	XXX_sizecache        int32              `json:"-" bson:"-"`
}

func (m *GetClusterCredentialResp) Reset()         { *m = GetClusterCredentialResp{} }
func (m *GetClusterCredentialResp) String() string { return proto.CompactTextString(m) }
func (*GetClusterCredentialResp) ProtoMessage()    {}
func (*GetClusterCredentialResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{108}
}

func (m *GetClusterCredentialResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterCredentialResp.Unmarshal(m, b)
}
func (m *GetClusterCredentialResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterCredentialResp.Marshal(b, m, deterministic)
}
func (m *GetClusterCredentialResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterCredentialResp.Merge(m, src)
}
func (m *GetClusterCredentialResp) XXX_Size() int {
	return xxx_messageInfo_GetClusterCredentialResp.Size(m)
}
func (m *GetClusterCredentialResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterCredentialResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterCredentialResp proto.InternalMessageInfo

func (m *GetClusterCredentialResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetClusterCredentialResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetClusterCredentialResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetClusterCredentialResp) GetData() *ClusterCredential {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateClusterCredentialReq struct {
	ServerKey            string   `protobuf:"bytes,1,opt,name=serverKey,proto3" json:"serverKey,omitempty"`
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ClientModule         string   `protobuf:"bytes,3,opt,name=clientModule,proto3" json:"clientModule,omitempty"`
	ServerAddress        string   `protobuf:"bytes,4,opt,name=serverAddress,proto3" json:"serverAddress,omitempty"`
	CaCertData           string   `protobuf:"bytes,5,opt,name=caCertData,proto3" json:"caCertData,omitempty"`
	UserToken            string   `protobuf:"bytes,6,opt,name=userToken,proto3" json:"userToken,omitempty"`
	ClusterDomain        string   `protobuf:"bytes,7,opt,name=clusterDomain,proto3" json:"clusterDomain,omitempty"`
	ClientCert           string   `protobuf:"bytes,8,opt,name=clientCert,proto3" json:"clientCert,omitempty"`
	ClientKey            string   `protobuf:"bytes,9,opt,name=clientKey,proto3" json:"clientKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateClusterCredentialReq) Reset()         { *m = UpdateClusterCredentialReq{} }
func (m *UpdateClusterCredentialReq) String() string { return proto.CompactTextString(m) }
func (*UpdateClusterCredentialReq) ProtoMessage()    {}
func (*UpdateClusterCredentialReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{109}
}

func (m *UpdateClusterCredentialReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateClusterCredentialReq.Unmarshal(m, b)
}
func (m *UpdateClusterCredentialReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateClusterCredentialReq.Marshal(b, m, deterministic)
}
func (m *UpdateClusterCredentialReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateClusterCredentialReq.Merge(m, src)
}
func (m *UpdateClusterCredentialReq) XXX_Size() int {
	return xxx_messageInfo_UpdateClusterCredentialReq.Size(m)
}
func (m *UpdateClusterCredentialReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateClusterCredentialReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateClusterCredentialReq proto.InternalMessageInfo

func (m *UpdateClusterCredentialReq) GetServerKey() string {
	if m != nil {
		return m.ServerKey
	}
	return ""
}

func (m *UpdateClusterCredentialReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *UpdateClusterCredentialReq) GetClientModule() string {
	if m != nil {
		return m.ClientModule
	}
	return ""
}

func (m *UpdateClusterCredentialReq) GetServerAddress() string {
	if m != nil {
		return m.ServerAddress
	}
	return ""
}

func (m *UpdateClusterCredentialReq) GetCaCertData() string {
	if m != nil {
		return m.CaCertData
	}
	return ""
}

func (m *UpdateClusterCredentialReq) GetUserToken() string {
	if m != nil {
		return m.UserToken
	}
	return ""
}

func (m *UpdateClusterCredentialReq) GetClusterDomain() string {
	if m != nil {
		return m.ClusterDomain
	}
	return ""
}

func (m *UpdateClusterCredentialReq) GetClientCert() string {
	if m != nil {
		return m.ClientCert
	}
	return ""
}

func (m *UpdateClusterCredentialReq) GetClientKey() string {
	if m != nil {
		return m.ClientKey
	}
	return ""
}

type UpdateClusterCredentialResp struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateClusterCredentialResp) Reset()         { *m = UpdateClusterCredentialResp{} }
func (m *UpdateClusterCredentialResp) String() string { return proto.CompactTextString(m) }
func (*UpdateClusterCredentialResp) ProtoMessage()    {}
func (*UpdateClusterCredentialResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{110}
}

func (m *UpdateClusterCredentialResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateClusterCredentialResp.Unmarshal(m, b)
}
func (m *UpdateClusterCredentialResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateClusterCredentialResp.Marshal(b, m, deterministic)
}
func (m *UpdateClusterCredentialResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateClusterCredentialResp.Merge(m, src)
}
func (m *UpdateClusterCredentialResp) XXX_Size() int {
	return xxx_messageInfo_UpdateClusterCredentialResp.Size(m)
}
func (m *UpdateClusterCredentialResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateClusterCredentialResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateClusterCredentialResp proto.InternalMessageInfo

func (m *UpdateClusterCredentialResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateClusterCredentialResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateClusterCredentialResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type DeleteClusterCredentialReq struct {
	ServerKey            string   `protobuf:"bytes,1,opt,name=serverKey,proto3" json:"serverKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteClusterCredentialReq) Reset()         { *m = DeleteClusterCredentialReq{} }
func (m *DeleteClusterCredentialReq) String() string { return proto.CompactTextString(m) }
func (*DeleteClusterCredentialReq) ProtoMessage()    {}
func (*DeleteClusterCredentialReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{111}
}

func (m *DeleteClusterCredentialReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteClusterCredentialReq.Unmarshal(m, b)
}
func (m *DeleteClusterCredentialReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteClusterCredentialReq.Marshal(b, m, deterministic)
}
func (m *DeleteClusterCredentialReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteClusterCredentialReq.Merge(m, src)
}
func (m *DeleteClusterCredentialReq) XXX_Size() int {
	return xxx_messageInfo_DeleteClusterCredentialReq.Size(m)
}
func (m *DeleteClusterCredentialReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteClusterCredentialReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteClusterCredentialReq proto.InternalMessageInfo

func (m *DeleteClusterCredentialReq) GetServerKey() string {
	if m != nil {
		return m.ServerKey
	}
	return ""
}

type DeleteClusterCredentialResp struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteClusterCredentialResp) Reset()         { *m = DeleteClusterCredentialResp{} }
func (m *DeleteClusterCredentialResp) String() string { return proto.CompactTextString(m) }
func (*DeleteClusterCredentialResp) ProtoMessage()    {}
func (*DeleteClusterCredentialResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{112}
}

func (m *DeleteClusterCredentialResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteClusterCredentialResp.Unmarshal(m, b)
}
func (m *DeleteClusterCredentialResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteClusterCredentialResp.Marshal(b, m, deterministic)
}
func (m *DeleteClusterCredentialResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteClusterCredentialResp.Merge(m, src)
}
func (m *DeleteClusterCredentialResp) XXX_Size() int {
	return xxx_messageInfo_DeleteClusterCredentialResp.Size(m)
}
func (m *DeleteClusterCredentialResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteClusterCredentialResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteClusterCredentialResp proto.InternalMessageInfo

func (m *DeleteClusterCredentialResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteClusterCredentialResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteClusterCredentialResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type ListClusterCredentialReq struct {
	ServerKey            string   `protobuf:"bytes,1,opt,name=serverKey,proto3" json:"serverKey,omitempty"`
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ClientMode           string   `protobuf:"bytes,3,opt,name=clientMode,proto3" json:"clientMode,omitempty"`
	ConnectMode          string   `protobuf:"bytes,4,opt,name=connectMode,proto3" json:"connectMode,omitempty"`
	Offset               uint32   `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                uint32   `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListClusterCredentialReq) Reset()         { *m = ListClusterCredentialReq{} }
func (m *ListClusterCredentialReq) String() string { return proto.CompactTextString(m) }
func (*ListClusterCredentialReq) ProtoMessage()    {}
func (*ListClusterCredentialReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{113}
}

func (m *ListClusterCredentialReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClusterCredentialReq.Unmarshal(m, b)
}
func (m *ListClusterCredentialReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClusterCredentialReq.Marshal(b, m, deterministic)
}
func (m *ListClusterCredentialReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClusterCredentialReq.Merge(m, src)
}
func (m *ListClusterCredentialReq) XXX_Size() int {
	return xxx_messageInfo_ListClusterCredentialReq.Size(m)
}
func (m *ListClusterCredentialReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClusterCredentialReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListClusterCredentialReq proto.InternalMessageInfo

func (m *ListClusterCredentialReq) GetServerKey() string {
	if m != nil {
		return m.ServerKey
	}
	return ""
}

func (m *ListClusterCredentialReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ListClusterCredentialReq) GetClientMode() string {
	if m != nil {
		return m.ClientMode
	}
	return ""
}

func (m *ListClusterCredentialReq) GetConnectMode() string {
	if m != nil {
		return m.ConnectMode
	}
	return ""
}

func (m *ListClusterCredentialReq) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListClusterCredentialReq) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ListClusterCredentialResp struct {
	Code                 uint32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                 `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*ClusterCredential `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *ListClusterCredentialResp) Reset()         { *m = ListClusterCredentialResp{} }
func (m *ListClusterCredentialResp) String() string { return proto.CompactTextString(m) }
func (*ListClusterCredentialResp) ProtoMessage()    {}
func (*ListClusterCredentialResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{114}
}

func (m *ListClusterCredentialResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClusterCredentialResp.Unmarshal(m, b)
}
func (m *ListClusterCredentialResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClusterCredentialResp.Marshal(b, m, deterministic)
}
func (m *ListClusterCredentialResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClusterCredentialResp.Merge(m, src)
}
func (m *ListClusterCredentialResp) XXX_Size() int {
	return xxx_messageInfo_ListClusterCredentialResp.Size(m)
}
func (m *ListClusterCredentialResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClusterCredentialResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListClusterCredentialResp proto.InternalMessageInfo

func (m *ListClusterCredentialResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListClusterCredentialResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListClusterCredentialResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListClusterCredentialResp) GetData() []*ClusterCredential {
	if m != nil {
		return m.Data
	}
	return nil
}

type InitFederationClusterReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *InitFederationClusterReq) Reset()         { *m = InitFederationClusterReq{} }
func (m *InitFederationClusterReq) String() string { return proto.CompactTextString(m) }
func (*InitFederationClusterReq) ProtoMessage()    {}
func (*InitFederationClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{115}
}

func (m *InitFederationClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitFederationClusterReq.Unmarshal(m, b)
}
func (m *InitFederationClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitFederationClusterReq.Marshal(b, m, deterministic)
}
func (m *InitFederationClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitFederationClusterReq.Merge(m, src)
}
func (m *InitFederationClusterReq) XXX_Size() int {
	return xxx_messageInfo_InitFederationClusterReq.Size(m)
}
func (m *InitFederationClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InitFederationClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_InitFederationClusterReq proto.InternalMessageInfo

type InitFederationClusterResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *InitFederationClusterResp) Reset()         { *m = InitFederationClusterResp{} }
func (m *InitFederationClusterResp) String() string { return proto.CompactTextString(m) }
func (*InitFederationClusterResp) ProtoMessage()    {}
func (*InitFederationClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{116}
}

func (m *InitFederationClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitFederationClusterResp.Unmarshal(m, b)
}
func (m *InitFederationClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitFederationClusterResp.Marshal(b, m, deterministic)
}
func (m *InitFederationClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitFederationClusterResp.Merge(m, src)
}
func (m *InitFederationClusterResp) XXX_Size() int {
	return xxx_messageInfo_InitFederationClusterResp.Size(m)
}
func (m *InitFederationClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_InitFederationClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_InitFederationClusterResp proto.InternalMessageInfo

type AddFederatedClusterReq struct {
	FederationClusterID  string   `protobuf:"bytes,1,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *AddFederatedClusterReq) Reset()         { *m = AddFederatedClusterReq{} }
func (m *AddFederatedClusterReq) String() string { return proto.CompactTextString(m) }
func (*AddFederatedClusterReq) ProtoMessage()    {}
func (*AddFederatedClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{117}
}

func (m *AddFederatedClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFederatedClusterReq.Unmarshal(m, b)
}
func (m *AddFederatedClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFederatedClusterReq.Marshal(b, m, deterministic)
}
func (m *AddFederatedClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFederatedClusterReq.Merge(m, src)
}
func (m *AddFederatedClusterReq) XXX_Size() int {
	return xxx_messageInfo_AddFederatedClusterReq.Size(m)
}
func (m *AddFederatedClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFederatedClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddFederatedClusterReq proto.InternalMessageInfo

func (m *AddFederatedClusterReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *AddFederatedClusterReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

type AddFederatedClusterResp struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *AddFederatedClusterResp) Reset()         { *m = AddFederatedClusterResp{} }
func (m *AddFederatedClusterResp) String() string { return proto.CompactTextString(m) }
func (*AddFederatedClusterResp) ProtoMessage()    {}
func (*AddFederatedClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{118}
}

func (m *AddFederatedClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFederatedClusterResp.Unmarshal(m, b)
}
func (m *AddFederatedClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFederatedClusterResp.Marshal(b, m, deterministic)
}
func (m *AddFederatedClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFederatedClusterResp.Merge(m, src)
}
func (m *AddFederatedClusterResp) XXX_Size() int {
	return xxx_messageInfo_AddFederatedClusterResp.Size(m)
}
func (m *AddFederatedClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFederatedClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_AddFederatedClusterResp proto.InternalMessageInfo

func (m *AddFederatedClusterResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AddFederatedClusterResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AddFederatedClusterResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type CreateNamespaceReq struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FederationClusterID  string            `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ProjectID            string            `protobuf:"bytes,3,opt,name=projectID,proto3" json:"projectID,omitempty"`
	BusinessID           string            `protobuf:"bytes,4,opt,name=businessID,proto3" json:"businessID,omitempty"`
	Labels               map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MaxQuota             string            `protobuf:"bytes,6,opt,name=maxQuota,proto3" json:"maxQuota,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *CreateNamespaceReq) Reset()         { *m = CreateNamespaceReq{} }
func (m *CreateNamespaceReq) String() string { return proto.CompactTextString(m) }
func (*CreateNamespaceReq) ProtoMessage()    {}
func (*CreateNamespaceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{119}
}

func (m *CreateNamespaceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceReq.Unmarshal(m, b)
}
func (m *CreateNamespaceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceReq.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceReq.Merge(m, src)
}
func (m *CreateNamespaceReq) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceReq.Size(m)
}
func (m *CreateNamespaceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceReq proto.InternalMessageInfo

func (m *CreateNamespaceReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateNamespaceReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *CreateNamespaceReq) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *CreateNamespaceReq) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *CreateNamespaceReq) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateNamespaceReq) GetMaxQuota() string {
	if m != nil {
		return m.MaxQuota
	}
	return ""
}

type CreateNamespaceResp struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CreateNamespaceResp) Reset()         { *m = CreateNamespaceResp{} }
func (m *CreateNamespaceResp) String() string { return proto.CompactTextString(m) }
func (*CreateNamespaceResp) ProtoMessage()    {}
func (*CreateNamespaceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{120}
}

func (m *CreateNamespaceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceResp.Unmarshal(m, b)
}
func (m *CreateNamespaceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceResp.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceResp.Merge(m, src)
}
func (m *CreateNamespaceResp) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceResp.Size(m)
}
func (m *CreateNamespaceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceResp proto.InternalMessageInfo

func (m *CreateNamespaceResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateNamespaceResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateNamespaceResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type DeleteNamespaceReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	IsForced             bool     `protobuf:"varint,3,opt,name=isForced,proto3" json:"isForced,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteNamespaceReq) Reset()         { *m = DeleteNamespaceReq{} }
func (m *DeleteNamespaceReq) String() string { return proto.CompactTextString(m) }
func (*DeleteNamespaceReq) ProtoMessage()    {}
func (*DeleteNamespaceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{121}
}

func (m *DeleteNamespaceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNamespaceReq.Unmarshal(m, b)
}
func (m *DeleteNamespaceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNamespaceReq.Marshal(b, m, deterministic)
}
func (m *DeleteNamespaceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNamespaceReq.Merge(m, src)
}
func (m *DeleteNamespaceReq) XXX_Size() int {
	return xxx_messageInfo_DeleteNamespaceReq.Size(m)
}
func (m *DeleteNamespaceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNamespaceReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNamespaceReq proto.InternalMessageInfo

func (m *DeleteNamespaceReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteNamespaceReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *DeleteNamespaceReq) GetIsForced() bool {
	if m != nil {
		return m.IsForced
	}
	return false
}

type DeleteNamespaceResp struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteNamespaceResp) Reset()         { *m = DeleteNamespaceResp{} }
func (m *DeleteNamespaceResp) String() string { return proto.CompactTextString(m) }
func (*DeleteNamespaceResp) ProtoMessage()    {}
func (*DeleteNamespaceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{122}
}

func (m *DeleteNamespaceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNamespaceResp.Unmarshal(m, b)
}
func (m *DeleteNamespaceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNamespaceResp.Marshal(b, m, deterministic)
}
func (m *DeleteNamespaceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNamespaceResp.Merge(m, src)
}
func (m *DeleteNamespaceResp) XXX_Size() int {
	return xxx_messageInfo_DeleteNamespaceResp.Size(m)
}
func (m *DeleteNamespaceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNamespaceResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNamespaceResp proto.InternalMessageInfo

func (m *DeleteNamespaceResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteNamespaceResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteNamespaceResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type UpdateNamespaceReq struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FederationClusterID  string            `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	Labels               map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MaxQuota             string            `protobuf:"bytes,4,opt,name=maxQuota,proto3" json:"maxQuota,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *UpdateNamespaceReq) Reset()         { *m = UpdateNamespaceReq{} }
func (m *UpdateNamespaceReq) String() string { return proto.CompactTextString(m) }
func (*UpdateNamespaceReq) ProtoMessage()    {}
func (*UpdateNamespaceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{123}
}

func (m *UpdateNamespaceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNamespaceReq.Unmarshal(m, b)
}
func (m *UpdateNamespaceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNamespaceReq.Marshal(b, m, deterministic)
}
func (m *UpdateNamespaceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNamespaceReq.Merge(m, src)
}
func (m *UpdateNamespaceReq) XXX_Size() int {
	return xxx_messageInfo_UpdateNamespaceReq.Size(m)
}
func (m *UpdateNamespaceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNamespaceReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNamespaceReq proto.InternalMessageInfo

func (m *UpdateNamespaceReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateNamespaceReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *UpdateNamespaceReq) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *UpdateNamespaceReq) GetMaxQuota() string {
	if m != nil {
		return m.MaxQuota
	}
	return ""
}

type UpdateNamespaceResp struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateNamespaceResp) Reset()         { *m = UpdateNamespaceResp{} }
func (m *UpdateNamespaceResp) String() string { return proto.CompactTextString(m) }
func (*UpdateNamespaceResp) ProtoMessage()    {}
func (*UpdateNamespaceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{124}
}

func (m *UpdateNamespaceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNamespaceResp.Unmarshal(m, b)
}
func (m *UpdateNamespaceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNamespaceResp.Marshal(b, m, deterministic)
}
func (m *UpdateNamespaceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNamespaceResp.Merge(m, src)
}
func (m *UpdateNamespaceResp) XXX_Size() int {
	return xxx_messageInfo_UpdateNamespaceResp.Size(m)
}
func (m *UpdateNamespaceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNamespaceResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNamespaceResp proto.InternalMessageInfo

func (m *UpdateNamespaceResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateNamespaceResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateNamespaceResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type GetNamespaceReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetNamespaceReq) Reset()         { *m = GetNamespaceReq{} }
func (m *GetNamespaceReq) String() string { return proto.CompactTextString(m) }
func (*GetNamespaceReq) ProtoMessage()    {}
func (*GetNamespaceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{125}
}

func (m *GetNamespaceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNamespaceReq.Unmarshal(m, b)
}
func (m *GetNamespaceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNamespaceReq.Marshal(b, m, deterministic)
}
func (m *GetNamespaceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNamespaceReq.Merge(m, src)
}
func (m *GetNamespaceReq) XXX_Size() int {
	return xxx_messageInfo_GetNamespaceReq.Size(m)
}
func (m *GetNamespaceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNamespaceReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetNamespaceReq proto.InternalMessageInfo

func (m *GetNamespaceReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetNamespaceReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

type GetNamespaceResp struct {
	Code                 uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool       `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Namespace `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-" bson:"-"`
	XXX_unrecognized     []byte     `json:"-" bson:"-"`
	XXX_sizecache        int32      `json:"-" bson:"-"`
}

func (m *GetNamespaceResp) Reset()         { *m = GetNamespaceResp{} }
func (m *GetNamespaceResp) String() string { return proto.CompactTextString(m) }
func (*GetNamespaceResp) ProtoMessage()    {}
func (*GetNamespaceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{126}
}

func (m *GetNamespaceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNamespaceResp.Unmarshal(m, b)
}
func (m *GetNamespaceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNamespaceResp.Marshal(b, m, deterministic)
}
func (m *GetNamespaceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNamespaceResp.Merge(m, src)
}
func (m *GetNamespaceResp) XXX_Size() int {
	return xxx_messageInfo_GetNamespaceResp.Size(m)
}
func (m *GetNamespaceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNamespaceResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetNamespaceResp proto.InternalMessageInfo

func (m *GetNamespaceResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetNamespaceResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetNamespaceResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetNamespaceResp) GetData() *Namespace {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListNamespaceReq struct {
	FederationClusterID  string   `protobuf:"bytes,1,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ProjectID            string   `protobuf:"bytes,2,opt,name=projectID,proto3" json:"projectID,omitempty"`
	BusinessID           string   `protobuf:"bytes,3,opt,name=businessID,proto3" json:"businessID,omitempty"`
	Offset               uint32   `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                uint32   `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListNamespaceReq) Reset()         { *m = ListNamespaceReq{} }
func (m *ListNamespaceReq) String() string { return proto.CompactTextString(m) }
func (*ListNamespaceReq) ProtoMessage()    {}
func (*ListNamespaceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{127}
}

func (m *ListNamespaceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNamespaceReq.Unmarshal(m, b)
}
func (m *ListNamespaceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNamespaceReq.Marshal(b, m, deterministic)
}
func (m *ListNamespaceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNamespaceReq.Merge(m, src)
}
func (m *ListNamespaceReq) XXX_Size() int {
	return xxx_messageInfo_ListNamespaceReq.Size(m)
}
func (m *ListNamespaceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNamespaceReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListNamespaceReq proto.InternalMessageInfo

func (m *ListNamespaceReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *ListNamespaceReq) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *ListNamespaceReq) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *ListNamespaceReq) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListNamespaceReq) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ListNamespaceResp struct {
	Code                 uint32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool         `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*Namespace `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-" bson:"-"`
	XXX_unrecognized     []byte       `json:"-" bson:"-"`
	XXX_sizecache        int32        `json:"-" bson:"-"`
}

func (m *ListNamespaceResp) Reset()         { *m = ListNamespaceResp{} }
func (m *ListNamespaceResp) String() string { return proto.CompactTextString(m) }
func (*ListNamespaceResp) ProtoMessage()    {}
func (*ListNamespaceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{128}
}

func (m *ListNamespaceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNamespaceResp.Unmarshal(m, b)
}
func (m *ListNamespaceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNamespaceResp.Marshal(b, m, deterministic)
}
func (m *ListNamespaceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNamespaceResp.Merge(m, src)
}
func (m *ListNamespaceResp) XXX_Size() int {
	return xxx_messageInfo_ListNamespaceResp.Size(m)
}
func (m *ListNamespaceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNamespaceResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListNamespaceResp proto.InternalMessageInfo

func (m *ListNamespaceResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListNamespaceResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListNamespaceResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListNamespaceResp) GetData() []*Namespace {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateNamespaceQuotaReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ClusterID            string   `protobuf:"bytes,3,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Region               string   `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	ResourceQuota        string   `protobuf:"bytes,5,opt,name=resourceQuota,proto3" json:"resourceQuota,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CreateNamespaceQuotaReq) Reset()         { *m = CreateNamespaceQuotaReq{} }
func (m *CreateNamespaceQuotaReq) String() string { return proto.CompactTextString(m) }
func (*CreateNamespaceQuotaReq) ProtoMessage()    {}
func (*CreateNamespaceQuotaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{129}
}

func (m *CreateNamespaceQuotaReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceQuotaReq.Unmarshal(m, b)
}
func (m *CreateNamespaceQuotaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceQuotaReq.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceQuotaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceQuotaReq.Merge(m, src)
}
func (m *CreateNamespaceQuotaReq) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceQuotaReq.Size(m)
}
func (m *CreateNamespaceQuotaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceQuotaReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceQuotaReq proto.InternalMessageInfo

func (m *CreateNamespaceQuotaReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *CreateNamespaceQuotaReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *CreateNamespaceQuotaReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *CreateNamespaceQuotaReq) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *CreateNamespaceQuotaReq) GetResourceQuota() string {
	if m != nil {
		return m.ResourceQuota
	}
	return ""
}

type CreateNamespaceQuotaResp struct {
	Code                 uint32                                                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                                                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                                                   `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                               `json:"-" bson:"-"`
	XXX_unrecognized     []byte                                                 `json:"-" bson:"-"`
	XXX_sizecache        int32                                                  `json:"-" bson:"-"`
}

func (m *CreateNamespaceQuotaResp) Reset()         { *m = CreateNamespaceQuotaResp{} }
func (m *CreateNamespaceQuotaResp) String() string { return proto.CompactTextString(m) }
func (*CreateNamespaceQuotaResp) ProtoMessage()    {}
func (*CreateNamespaceQuotaResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{130}
}

func (m *CreateNamespaceQuotaResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceQuotaResp.Unmarshal(m, b)
}
func (m *CreateNamespaceQuotaResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceQuotaResp.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceQuotaResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceQuotaResp.Merge(m, src)
}
func (m *CreateNamespaceQuotaResp) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceQuotaResp.Size(m)
}
func (m *CreateNamespaceQuotaResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceQuotaResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceQuotaResp proto.InternalMessageInfo

func (m *CreateNamespaceQuotaResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateNamespaceQuotaResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateNamespaceQuotaResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *CreateNamespaceQuotaResp) GetData() *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) Reset() {
	*m = CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData{}
}
func (m *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) String() string {
	return proto.CompactTextString(m)
}
func (*CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) ProtoMessage() {}
func (*CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{130, 0}
}

func (m *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData.Unmarshal(m, b)
}
func (m *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData.Merge(m, src)
}
func (m *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData.Size(m)
}
func (m *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData proto.InternalMessageInfo

func (m *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

type DeleteNamespaceQuotaReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ClusterID            string   `protobuf:"bytes,3,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	IsForced             bool     `protobuf:"varint,5,opt,name=isForced,proto3" json:"isForced,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteNamespaceQuotaReq) Reset()         { *m = DeleteNamespaceQuotaReq{} }
func (m *DeleteNamespaceQuotaReq) String() string { return proto.CompactTextString(m) }
func (*DeleteNamespaceQuotaReq) ProtoMessage()    {}
func (*DeleteNamespaceQuotaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{131}
}

func (m *DeleteNamespaceQuotaReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNamespaceQuotaReq.Unmarshal(m, b)
}
func (m *DeleteNamespaceQuotaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNamespaceQuotaReq.Marshal(b, m, deterministic)
}
func (m *DeleteNamespaceQuotaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNamespaceQuotaReq.Merge(m, src)
}
func (m *DeleteNamespaceQuotaReq) XXX_Size() int {
	return xxx_messageInfo_DeleteNamespaceQuotaReq.Size(m)
}
func (m *DeleteNamespaceQuotaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNamespaceQuotaReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNamespaceQuotaReq proto.InternalMessageInfo

func (m *DeleteNamespaceQuotaReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *DeleteNamespaceQuotaReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *DeleteNamespaceQuotaReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *DeleteNamespaceQuotaReq) GetIsForced() bool {
	if m != nil {
		return m.IsForced
	}
	return false
}

type DeleteNamespaceQuotaResp struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteNamespaceQuotaResp) Reset()         { *m = DeleteNamespaceQuotaResp{} }
func (m *DeleteNamespaceQuotaResp) String() string { return proto.CompactTextString(m) }
func (*DeleteNamespaceQuotaResp) ProtoMessage()    {}
func (*DeleteNamespaceQuotaResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{132}
}

func (m *DeleteNamespaceQuotaResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNamespaceQuotaResp.Unmarshal(m, b)
}
func (m *DeleteNamespaceQuotaResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNamespaceQuotaResp.Marshal(b, m, deterministic)
}
func (m *DeleteNamespaceQuotaResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNamespaceQuotaResp.Merge(m, src)
}
func (m *DeleteNamespaceQuotaResp) XXX_Size() int {
	return xxx_messageInfo_DeleteNamespaceQuotaResp.Size(m)
}
func (m *DeleteNamespaceQuotaResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNamespaceQuotaResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNamespaceQuotaResp proto.InternalMessageInfo

func (m *DeleteNamespaceQuotaResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteNamespaceQuotaResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteNamespaceQuotaResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type UpdateNamespaceQuotaReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ClusterID            string   `protobuf:"bytes,3,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ResourceQuota        string   `protobuf:"bytes,4,opt,name=resourceQuota,proto3" json:"resourceQuota,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateNamespaceQuotaReq) Reset()         { *m = UpdateNamespaceQuotaReq{} }
func (m *UpdateNamespaceQuotaReq) String() string { return proto.CompactTextString(m) }
func (*UpdateNamespaceQuotaReq) ProtoMessage()    {}
func (*UpdateNamespaceQuotaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{133}
}

func (m *UpdateNamespaceQuotaReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNamespaceQuotaReq.Unmarshal(m, b)
}
func (m *UpdateNamespaceQuotaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNamespaceQuotaReq.Marshal(b, m, deterministic)
}
func (m *UpdateNamespaceQuotaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNamespaceQuotaReq.Merge(m, src)
}
func (m *UpdateNamespaceQuotaReq) XXX_Size() int {
	return xxx_messageInfo_UpdateNamespaceQuotaReq.Size(m)
}
func (m *UpdateNamespaceQuotaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNamespaceQuotaReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNamespaceQuotaReq proto.InternalMessageInfo

func (m *UpdateNamespaceQuotaReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *UpdateNamespaceQuotaReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *UpdateNamespaceQuotaReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *UpdateNamespaceQuotaReq) GetResourceQuota() string {
	if m != nil {
		return m.ResourceQuota
	}
	return ""
}

type UpdateNamespaceQuotaResp struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateNamespaceQuotaResp) Reset()         { *m = UpdateNamespaceQuotaResp{} }
func (m *UpdateNamespaceQuotaResp) String() string { return proto.CompactTextString(m) }
func (*UpdateNamespaceQuotaResp) ProtoMessage()    {}
func (*UpdateNamespaceQuotaResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{134}
}

func (m *UpdateNamespaceQuotaResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNamespaceQuotaResp.Unmarshal(m, b)
}
func (m *UpdateNamespaceQuotaResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNamespaceQuotaResp.Marshal(b, m, deterministic)
}
func (m *UpdateNamespaceQuotaResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNamespaceQuotaResp.Merge(m, src)
}
func (m *UpdateNamespaceQuotaResp) XXX_Size() int {
	return xxx_messageInfo_UpdateNamespaceQuotaResp.Size(m)
}
func (m *UpdateNamespaceQuotaResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNamespaceQuotaResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNamespaceQuotaResp proto.InternalMessageInfo

func (m *UpdateNamespaceQuotaResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateNamespaceQuotaResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateNamespaceQuotaResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type GetNamespaceQuotaReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ClusterID            string   `protobuf:"bytes,3,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetNamespaceQuotaReq) Reset()         { *m = GetNamespaceQuotaReq{} }
func (m *GetNamespaceQuotaReq) String() string { return proto.CompactTextString(m) }
func (*GetNamespaceQuotaReq) ProtoMessage()    {}
func (*GetNamespaceQuotaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{135}
}

func (m *GetNamespaceQuotaReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNamespaceQuotaReq.Unmarshal(m, b)
}
func (m *GetNamespaceQuotaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNamespaceQuotaReq.Marshal(b, m, deterministic)
}
func (m *GetNamespaceQuotaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNamespaceQuotaReq.Merge(m, src)
}
func (m *GetNamespaceQuotaReq) XXX_Size() int {
	return xxx_messageInfo_GetNamespaceQuotaReq.Size(m)
}
func (m *GetNamespaceQuotaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNamespaceQuotaReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetNamespaceQuotaReq proto.InternalMessageInfo

func (m *GetNamespaceQuotaReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GetNamespaceQuotaReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *GetNamespaceQuotaReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

type GetNamespaceQuotaResp struct {
	Code                 uint32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool           `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *ResourceQuota `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-" bson:"-"`
	XXX_unrecognized     []byte         `json:"-" bson:"-"`
	XXX_sizecache        int32          `json:"-" bson:"-"`
}

func (m *GetNamespaceQuotaResp) Reset()         { *m = GetNamespaceQuotaResp{} }
func (m *GetNamespaceQuotaResp) String() string { return proto.CompactTextString(m) }
func (*GetNamespaceQuotaResp) ProtoMessage()    {}
func (*GetNamespaceQuotaResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{136}
}

func (m *GetNamespaceQuotaResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNamespaceQuotaResp.Unmarshal(m, b)
}
func (m *GetNamespaceQuotaResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNamespaceQuotaResp.Marshal(b, m, deterministic)
}
func (m *GetNamespaceQuotaResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNamespaceQuotaResp.Merge(m, src)
}
func (m *GetNamespaceQuotaResp) XXX_Size() int {
	return xxx_messageInfo_GetNamespaceQuotaResp.Size(m)
}
func (m *GetNamespaceQuotaResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNamespaceQuotaResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetNamespaceQuotaResp proto.InternalMessageInfo

func (m *GetNamespaceQuotaResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetNamespaceQuotaResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetNamespaceQuotaResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetNamespaceQuotaResp) GetData() *ResourceQuota {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListNamespaceQuotaReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	Offset               uint32   `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                uint32   `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListNamespaceQuotaReq) Reset()         { *m = ListNamespaceQuotaReq{} }
func (m *ListNamespaceQuotaReq) String() string { return proto.CompactTextString(m) }
func (*ListNamespaceQuotaReq) ProtoMessage()    {}
func (*ListNamespaceQuotaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{137}
}

func (m *ListNamespaceQuotaReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNamespaceQuotaReq.Unmarshal(m, b)
}
func (m *ListNamespaceQuotaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNamespaceQuotaReq.Marshal(b, m, deterministic)
}
func (m *ListNamespaceQuotaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNamespaceQuotaReq.Merge(m, src)
}
func (m *ListNamespaceQuotaReq) XXX_Size() int {
	return xxx_messageInfo_ListNamespaceQuotaReq.Size(m)
}
func (m *ListNamespaceQuotaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNamespaceQuotaReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListNamespaceQuotaReq proto.InternalMessageInfo

func (m *ListNamespaceQuotaReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ListNamespaceQuotaReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *ListNamespaceQuotaReq) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListNamespaceQuotaReq) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ListNamespaceQuotaResp struct {
	Code                 uint32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool             `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*ResourceQuota `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-" bson:"-"`
	XXX_unrecognized     []byte           `json:"-" bson:"-"`
	XXX_sizecache        int32            `json:"-" bson:"-"`
}

func (m *ListNamespaceQuotaResp) Reset()         { *m = ListNamespaceQuotaResp{} }
func (m *ListNamespaceQuotaResp) String() string { return proto.CompactTextString(m) }
func (*ListNamespaceQuotaResp) ProtoMessage()    {}
func (*ListNamespaceQuotaResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{138}
}

func (m *ListNamespaceQuotaResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNamespaceQuotaResp.Unmarshal(m, b)
}
func (m *ListNamespaceQuotaResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNamespaceQuotaResp.Marshal(b, m, deterministic)
}
func (m *ListNamespaceQuotaResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNamespaceQuotaResp.Merge(m, src)
}
func (m *ListNamespaceQuotaResp) XXX_Size() int {
	return xxx_messageInfo_ListNamespaceQuotaResp.Size(m)
}
func (m *ListNamespaceQuotaResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNamespaceQuotaResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListNamespaceQuotaResp proto.InternalMessageInfo

func (m *ListNamespaceQuotaResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListNamespaceQuotaResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListNamespaceQuotaResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListNamespaceQuotaResp) GetData() []*ResourceQuota {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateNamespaceWithQuotaReq struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FederationClusterID  string            `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ProjectID            string            `protobuf:"bytes,3,opt,name=projectID,proto3" json:"projectID,omitempty"`
	BusinessID           string            `protobuf:"bytes,4,opt,name=businessID,proto3" json:"businessID,omitempty"`
	Labels               map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ClusterID            string            `protobuf:"bytes,6,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Region               string            `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"`
	MaxQuota             string            `protobuf:"bytes,8,opt,name=maxQuota,proto3" json:"maxQuota,omitempty"`
	ResourceQuota        string            `protobuf:"bytes,9,opt,name=resourceQuota,proto3" json:"resourceQuota,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *CreateNamespaceWithQuotaReq) Reset()         { *m = CreateNamespaceWithQuotaReq{} }
func (m *CreateNamespaceWithQuotaReq) String() string { return proto.CompactTextString(m) }
func (*CreateNamespaceWithQuotaReq) ProtoMessage()    {}
func (*CreateNamespaceWithQuotaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{139}
}

func (m *CreateNamespaceWithQuotaReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceWithQuotaReq.Unmarshal(m, b)
}
func (m *CreateNamespaceWithQuotaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceWithQuotaReq.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceWithQuotaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceWithQuotaReq.Merge(m, src)
}
func (m *CreateNamespaceWithQuotaReq) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceWithQuotaReq.Size(m)
}
func (m *CreateNamespaceWithQuotaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceWithQuotaReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceWithQuotaReq proto.InternalMessageInfo

func (m *CreateNamespaceWithQuotaReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateNamespaceWithQuotaReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *CreateNamespaceWithQuotaReq) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *CreateNamespaceWithQuotaReq) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *CreateNamespaceWithQuotaReq) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateNamespaceWithQuotaReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *CreateNamespaceWithQuotaReq) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *CreateNamespaceWithQuotaReq) GetMaxQuota() string {
	if m != nil {
		return m.MaxQuota
	}
	return ""
}

func (m *CreateNamespaceWithQuotaReq) GetResourceQuota() string {
	if m != nil {
		return m.ResourceQuota
	}
	return ""
}

type CreateNamespaceWithQuotaResp struct {
	Code                 uint32                                                         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                                                         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                                                           `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                       `json:"-" bson:"-"`
	XXX_unrecognized     []byte                                                         `json:"-" bson:"-"`
	XXX_sizecache        int32                                                          `json:"-" bson:"-"`
}

func (m *CreateNamespaceWithQuotaResp) Reset()         { *m = CreateNamespaceWithQuotaResp{} }
func (m *CreateNamespaceWithQuotaResp) String() string { return proto.CompactTextString(m) }
func (*CreateNamespaceWithQuotaResp) ProtoMessage()    {}
func (*CreateNamespaceWithQuotaResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{140}
}

func (m *CreateNamespaceWithQuotaResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceWithQuotaResp.Unmarshal(m, b)
}
func (m *CreateNamespaceWithQuotaResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceWithQuotaResp.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceWithQuotaResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceWithQuotaResp.Merge(m, src)
}
func (m *CreateNamespaceWithQuotaResp) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceWithQuotaResp.Size(m)
}
func (m *CreateNamespaceWithQuotaResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceWithQuotaResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceWithQuotaResp proto.InternalMessageInfo

func (m *CreateNamespaceWithQuotaResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateNamespaceWithQuotaResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateNamespaceWithQuotaResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *CreateNamespaceWithQuotaResp) GetData() *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) Reset() {
	*m = CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData{}
}
func (m *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) String() string {
	return proto.CompactTextString(m)
}
func (*CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) ProtoMessage() {}
func (*CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{140, 0}
}

func (m *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData.Unmarshal(m, b)
}
func (m *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData.Merge(m, src)
}
func (m *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData.Size(m)
}
func (m *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData proto.InternalMessageInfo

func (m *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

type CreateProjectRequest struct {
	ProjectID            string                 `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Name                 string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	EnglishName          string                 `protobuf:"bytes,3,opt,name=englishName,proto3" json:"englishName,omitempty"`
	Creator              string                 `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`
	ProjectType          uint32                 `protobuf:"varint,6,opt,name=projectType,proto3" json:"projectType,omitempty"`
	UseBKRes             bool                   `protobuf:"varint,7,opt,name=useBKRes,proto3" json:"useBKRes,omitempty"`
	Description          string                 `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	IsOffline            bool                   `protobuf:"varint,9,opt,name=isOffline,proto3" json:"isOffline,omitempty"`
	Kind                 string                 `protobuf:"bytes,10,opt,name=kind,proto3" json:"kind,omitempty"`
	BusinessID           string                 `protobuf:"bytes,11,opt,name=businessID,proto3" json:"businessID,omitempty"`
	DeployType           uint32                 `protobuf:"varint,12,opt,name=deployType,proto3" json:"deployType,omitempty"`
	BgID                 string                 `protobuf:"bytes,13,opt,name=bgID,proto3" json:"bgID,omitempty"`
	BgName               string                 `protobuf:"bytes,14,opt,name=bgName,proto3" json:"bgName,omitempty"`
	DeptID               string                 `protobuf:"bytes,15,opt,name=deptID,proto3" json:"deptID,omitempty"`
	DeptName             string                 `protobuf:"bytes,16,opt,name=deptName,proto3" json:"deptName,omitempty"`
	CenterID             string                 `protobuf:"bytes,17,opt,name=centerID,proto3" json:"centerID,omitempty"`
	CenterName           string                 `protobuf:"bytes,18,opt,name=centerName,proto3" json:"centerName,omitempty"`
	IsSecret             bool                   `protobuf:"varint,19,opt,name=isSecret,proto3" json:"isSecret,omitempty"`
	Credentials          map[string]*Credential `protobuf:"bytes,20,rep,name=credentials,proto3" json:"credentials,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-" bson:"-"`
	XXX_unrecognized     []byte                 `json:"-" bson:"-"`
	XXX_sizecache        int32                  `json:"-" bson:"-"`
}

func (m *CreateProjectRequest) Reset()         { *m = CreateProjectRequest{} }
func (m *CreateProjectRequest) String() string { return proto.CompactTextString(m) }
func (*CreateProjectRequest) ProtoMessage()    {}
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{141}
}

func (m *CreateProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProjectRequest.Unmarshal(m, b)
}
func (m *CreateProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProjectRequest.Marshal(b, m, deterministic)
}
func (m *CreateProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProjectRequest.Merge(m, src)
}
func (m *CreateProjectRequest) XXX_Size() int {
	return xxx_messageInfo_CreateProjectRequest.Size(m)
}
func (m *CreateProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProjectRequest proto.InternalMessageInfo

func (m *CreateProjectRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *CreateProjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateProjectRequest) GetEnglishName() string {
	if m != nil {
		return m.EnglishName
	}
	return ""
}

func (m *CreateProjectRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CreateProjectRequest) GetProjectType() uint32 {
	if m != nil {
		return m.ProjectType
	}
	return 0
}

func (m *CreateProjectRequest) GetUseBKRes() bool {
	if m != nil {
		return m.UseBKRes
	}
	return false
}

func (m *CreateProjectRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateProjectRequest) GetIsOffline() bool {
	if m != nil {
		return m.IsOffline
	}
	return false
}

func (m *CreateProjectRequest) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *CreateProjectRequest) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *CreateProjectRequest) GetDeployType() uint32 {
	if m != nil {
		return m.DeployType
	}
	return 0
}

func (m *CreateProjectRequest) GetBgID() string {
	if m != nil {
		return m.BgID
	}
	return ""
}

func (m *CreateProjectRequest) GetBgName() string {
	if m != nil {
		return m.BgName
	}
	return ""
}

func (m *CreateProjectRequest) GetDeptID() string {
	if m != nil {
		return m.DeptID
	}
	return ""
}

func (m *CreateProjectRequest) GetDeptName() string {
	if m != nil {
		return m.DeptName
	}
	return ""
}

func (m *CreateProjectRequest) GetCenterID() string {
	if m != nil {
		return m.CenterID
	}
	return ""
}

func (m *CreateProjectRequest) GetCenterName() string {
	if m != nil {
		return m.CenterName
	}
	return ""
}

func (m *CreateProjectRequest) GetIsSecret() bool {
	if m != nil {
		return m.IsSecret
	}
	return false
}

func (m *CreateProjectRequest) GetCredentials() map[string]*Credential {
	if m != nil {
		return m.Credentials
	}
	return nil
}

type CreateProjectResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CreateProjectResponse) Reset()         { *m = CreateProjectResponse{} }
func (m *CreateProjectResponse) String() string { return proto.CompactTextString(m) }
func (*CreateProjectResponse) ProtoMessage()    {}
func (*CreateProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{142}
}

func (m *CreateProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProjectResponse.Unmarshal(m, b)
}
func (m *CreateProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProjectResponse.Marshal(b, m, deterministic)
}
func (m *CreateProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProjectResponse.Merge(m, src)
}
func (m *CreateProjectResponse) XXX_Size() int {
	return xxx_messageInfo_CreateProjectResponse.Size(m)
}
func (m *CreateProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProjectResponse proto.InternalMessageInfo

func (m *CreateProjectResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateProjectResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateProjectResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type UpdateProjectRequest struct {
	ProjectID            string                 `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Name                 string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Updater              string                 `protobuf:"bytes,4,opt,name=updater,proto3" json:"updater,omitempty"`
	ProjectType          uint32                 `protobuf:"varint,6,opt,name=projectType,proto3" json:"projectType,omitempty"`
	UseBKRes             *wrappers.BoolValue    `protobuf:"bytes,7,opt,name=useBKRes,proto3" json:"useBKRes,omitempty"`
	Description          string                 `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	IsOffline            *wrappers.BoolValue    `protobuf:"bytes,9,opt,name=isOffline,proto3" json:"isOffline,omitempty"`
	Kind                 string                 `protobuf:"bytes,10,opt,name=kind,proto3" json:"kind,omitempty"`
	DeployType           uint32                 `protobuf:"varint,12,opt,name=deployType,proto3" json:"deployType,omitempty"`
	BgID                 string                 `protobuf:"bytes,13,opt,name=bgID,proto3" json:"bgID,omitempty"`
	BgName               string                 `protobuf:"bytes,14,opt,name=bgName,proto3" json:"bgName,omitempty"`
	DeptID               string                 `protobuf:"bytes,15,opt,name=deptID,proto3" json:"deptID,omitempty"`
	DeptName             string                 `protobuf:"bytes,16,opt,name=deptName,proto3" json:"deptName,omitempty"`
	CenterID             string                 `protobuf:"bytes,17,opt,name=centerID,proto3" json:"centerID,omitempty"`
	CenterName           string                 `protobuf:"bytes,18,opt,name=centerName,proto3" json:"centerName,omitempty"`
	IsSecret             *wrappers.BoolValue    `protobuf:"bytes,19,opt,name=isSecret,proto3" json:"isSecret,omitempty"`
	Credentials          map[string]*Credential `protobuf:"bytes,20,rep,name=credentials,proto3" json:"credentials,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	BusinessID           string                 `protobuf:"bytes,21,opt,name=businessID,proto3" json:"businessID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-" bson:"-"`
	XXX_unrecognized     []byte                 `json:"-" bson:"-"`
	XXX_sizecache        int32                  `json:"-" bson:"-"`
}

func (m *UpdateProjectRequest) Reset()         { *m = UpdateProjectRequest{} }
func (m *UpdateProjectRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateProjectRequest) ProtoMessage()    {}
func (*UpdateProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{143}
}

func (m *UpdateProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProjectRequest.Unmarshal(m, b)
}
func (m *UpdateProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProjectRequest.Marshal(b, m, deterministic)
}
func (m *UpdateProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProjectRequest.Merge(m, src)
}
func (m *UpdateProjectRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateProjectRequest.Size(m)
}
func (m *UpdateProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProjectRequest proto.InternalMessageInfo

func (m *UpdateProjectRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *UpdateProjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateProjectRequest) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *UpdateProjectRequest) GetProjectType() uint32 {
	if m != nil {
		return m.ProjectType
	}
	return 0
}

func (m *UpdateProjectRequest) GetUseBKRes() *wrappers.BoolValue {
	if m != nil {
		return m.UseBKRes
	}
	return nil
}

func (m *UpdateProjectRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdateProjectRequest) GetIsOffline() *wrappers.BoolValue {
	if m != nil {
		return m.IsOffline
	}
	return nil
}

func (m *UpdateProjectRequest) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *UpdateProjectRequest) GetDeployType() uint32 {
	if m != nil {
		return m.DeployType
	}
	return 0
}

func (m *UpdateProjectRequest) GetBgID() string {
	if m != nil {
		return m.BgID
	}
	return ""
}

func (m *UpdateProjectRequest) GetBgName() string {
	if m != nil {
		return m.BgName
	}
	return ""
}

func (m *UpdateProjectRequest) GetDeptID() string {
	if m != nil {
		return m.DeptID
	}
	return ""
}

func (m *UpdateProjectRequest) GetDeptName() string {
	if m != nil {
		return m.DeptName
	}
	return ""
}

func (m *UpdateProjectRequest) GetCenterID() string {
	if m != nil {
		return m.CenterID
	}
	return ""
}

func (m *UpdateProjectRequest) GetCenterName() string {
	if m != nil {
		return m.CenterName
	}
	return ""
}

func (m *UpdateProjectRequest) GetIsSecret() *wrappers.BoolValue {
	if m != nil {
		return m.IsSecret
	}
	return nil
}

func (m *UpdateProjectRequest) GetCredentials() map[string]*Credential {
	if m != nil {
		return m.Credentials
	}
	return nil
}

func (m *UpdateProjectRequest) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

type UpdateProjectResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Project `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateProjectResponse) Reset()         { *m = UpdateProjectResponse{} }
func (m *UpdateProjectResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateProjectResponse) ProtoMessage()    {}
func (*UpdateProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{144}
}

func (m *UpdateProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProjectResponse.Unmarshal(m, b)
}
func (m *UpdateProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProjectResponse.Marshal(b, m, deterministic)
}
func (m *UpdateProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProjectResponse.Merge(m, src)
}
func (m *UpdateProjectResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateProjectResponse.Size(m)
}
func (m *UpdateProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProjectResponse proto.InternalMessageInfo

func (m *UpdateProjectResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateProjectResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateProjectResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *UpdateProjectResponse) GetData() *Project {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteProjectRequest struct {
	ProjectID            string   `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	IsForce              bool     `protobuf:"varint,2,opt,name=isForce,proto3" json:"isForce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteProjectRequest) Reset()         { *m = DeleteProjectRequest{} }
func (m *DeleteProjectRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteProjectRequest) ProtoMessage()    {}
func (*DeleteProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{145}
}

func (m *DeleteProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteProjectRequest.Unmarshal(m, b)
}
func (m *DeleteProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteProjectRequest.Marshal(b, m, deterministic)
}
func (m *DeleteProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteProjectRequest.Merge(m, src)
}
func (m *DeleteProjectRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteProjectRequest.Size(m)
}
func (m *DeleteProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteProjectRequest proto.InternalMessageInfo

func (m *DeleteProjectRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *DeleteProjectRequest) GetIsForce() bool {
	if m != nil {
		return m.IsForce
	}
	return false
}

type DeleteProjectResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Project `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteProjectResponse) Reset()         { *m = DeleteProjectResponse{} }
func (m *DeleteProjectResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteProjectResponse) ProtoMessage()    {}
func (*DeleteProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{146}
}

func (m *DeleteProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteProjectResponse.Unmarshal(m, b)
}
func (m *DeleteProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteProjectResponse.Marshal(b, m, deterministic)
}
func (m *DeleteProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteProjectResponse.Merge(m, src)
}
func (m *DeleteProjectResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteProjectResponse.Size(m)
}
func (m *DeleteProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteProjectResponse proto.InternalMessageInfo

func (m *DeleteProjectResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteProjectResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteProjectResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *DeleteProjectResponse) GetData() *Project {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetProjectRequest struct {
	ProjectID            string   `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetProjectRequest) Reset()         { *m = GetProjectRequest{} }
func (m *GetProjectRequest) String() string { return proto.CompactTextString(m) }
func (*GetProjectRequest) ProtoMessage()    {}
func (*GetProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{147}
}

func (m *GetProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectRequest.Unmarshal(m, b)
}
func (m *GetProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectRequest.Marshal(b, m, deterministic)
}
func (m *GetProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectRequest.Merge(m, src)
}
func (m *GetProjectRequest) XXX_Size() int {
	return xxx_messageInfo_GetProjectRequest.Size(m)
}
func (m *GetProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectRequest proto.InternalMessageInfo

func (m *GetProjectRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

type GetProjectResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Project `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetProjectResponse) Reset()         { *m = GetProjectResponse{} }
func (m *GetProjectResponse) String() string { return proto.CompactTextString(m) }
func (*GetProjectResponse) ProtoMessage()    {}
func (*GetProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{148}
}

func (m *GetProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectResponse.Unmarshal(m, b)
}
func (m *GetProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectResponse.Marshal(b, m, deterministic)
}
func (m *GetProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectResponse.Merge(m, src)
}
func (m *GetProjectResponse) XXX_Size() int {
	return xxx_messageInfo_GetProjectResponse.Size(m)
}
func (m *GetProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectResponse proto.InternalMessageInfo

func (m *GetProjectResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetProjectResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetProjectResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetProjectResponse) GetData() *Project {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListProjectRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	EnglishName          string   `protobuf:"bytes,2,opt,name=englishName,proto3" json:"englishName,omitempty"`
	ProjectType          uint32   `protobuf:"varint,3,opt,name=projectType,proto3" json:"projectType,omitempty"`
	UseBKRes             bool     `protobuf:"varint,4,opt,name=useBKRes,proto3" json:"useBKRes,omitempty"`
	IsOffline            bool     `protobuf:"varint,5,opt,name=isOffline,proto3" json:"isOffline,omitempty"`
	Kind                 string   `protobuf:"bytes,6,opt,name=kind,proto3" json:"kind,omitempty"`
	BusinessID           string   `protobuf:"bytes,7,opt,name=businessID,proto3" json:"businessID,omitempty"`
	DeployType           string   `protobuf:"bytes,8,opt,name=deployType,proto3" json:"deployType,omitempty"`
	BgID                 string   `protobuf:"bytes,9,opt,name=bgID,proto3" json:"bgID,omitempty"`
	BgName               string   `protobuf:"bytes,10,opt,name=bgName,proto3" json:"bgName,omitempty"`
	DeptID               string   `protobuf:"bytes,11,opt,name=deptID,proto3" json:"deptID,omitempty"`
	DeptName             string   `protobuf:"bytes,12,opt,name=deptName,proto3" json:"deptName,omitempty"`
	CenterID             string   `protobuf:"bytes,13,opt,name=centerID,proto3" json:"centerID,omitempty"`
	CenterName           string   `protobuf:"bytes,14,opt,name=centerName,proto3" json:"centerName,omitempty"`
	IsSecret             bool     `protobuf:"varint,15,opt,name=isSecret,proto3" json:"isSecret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListProjectRequest) Reset()         { *m = ListProjectRequest{} }
func (m *ListProjectRequest) String() string { return proto.CompactTextString(m) }
func (*ListProjectRequest) ProtoMessage()    {}
func (*ListProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{149}
}

func (m *ListProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectRequest.Unmarshal(m, b)
}
func (m *ListProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectRequest.Marshal(b, m, deterministic)
}
func (m *ListProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectRequest.Merge(m, src)
}
func (m *ListProjectRequest) XXX_Size() int {
	return xxx_messageInfo_ListProjectRequest.Size(m)
}
func (m *ListProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectRequest proto.InternalMessageInfo

func (m *ListProjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListProjectRequest) GetEnglishName() string {
	if m != nil {
		return m.EnglishName
	}
	return ""
}

func (m *ListProjectRequest) GetProjectType() uint32 {
	if m != nil {
		return m.ProjectType
	}
	return 0
}

func (m *ListProjectRequest) GetUseBKRes() bool {
	if m != nil {
		return m.UseBKRes
	}
	return false
}

func (m *ListProjectRequest) GetIsOffline() bool {
	if m != nil {
		return m.IsOffline
	}
	return false
}

func (m *ListProjectRequest) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *ListProjectRequest) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *ListProjectRequest) GetDeployType() string {
	if m != nil {
		return m.DeployType
	}
	return ""
}

func (m *ListProjectRequest) GetBgID() string {
	if m != nil {
		return m.BgID
	}
	return ""
}

func (m *ListProjectRequest) GetBgName() string {
	if m != nil {
		return m.BgName
	}
	return ""
}

func (m *ListProjectRequest) GetDeptID() string {
	if m != nil {
		return m.DeptID
	}
	return ""
}

func (m *ListProjectRequest) GetDeptName() string {
	if m != nil {
		return m.DeptName
	}
	return ""
}

func (m *ListProjectRequest) GetCenterID() string {
	if m != nil {
		return m.CenterID
	}
	return ""
}

func (m *ListProjectRequest) GetCenterName() string {
	if m != nil {
		return m.CenterName
	}
	return ""
}

func (m *ListProjectRequest) GetIsSecret() bool {
	if m != nil {
		return m.IsSecret
	}
	return false
}

type ListProjectResponse struct {
	Code                 uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool       `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*Project `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-" bson:"-"`
	XXX_unrecognized     []byte     `json:"-" bson:"-"`
	XXX_sizecache        int32      `json:"-" bson:"-"`
}

func (m *ListProjectResponse) Reset()         { *m = ListProjectResponse{} }
func (m *ListProjectResponse) String() string { return proto.CompactTextString(m) }
func (*ListProjectResponse) ProtoMessage()    {}
func (*ListProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{150}
}

func (m *ListProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectResponse.Unmarshal(m, b)
}
func (m *ListProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectResponse.Marshal(b, m, deterministic)
}
func (m *ListProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectResponse.Merge(m, src)
}
func (m *ListProjectResponse) XXX_Size() int {
	return xxx_messageInfo_ListProjectResponse.Size(m)
}
func (m *ListProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectResponse proto.InternalMessageInfo

func (m *ListProjectResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListProjectResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListProjectResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListProjectResponse) GetData() []*Project {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateCloudRequest struct {
	CloudID              string                  `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	Name                 string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Editable             bool                    `protobuf:"varint,3,opt,name=editable,proto3" json:"editable,omitempty"`
	OpsPlugins           map[string]*BKOpsPlugin `protobuf:"bytes,4,rep,name=opsPlugins,proto3" json:"opsPlugins,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ExtraPlugins         map[string]*BKOpsPlugin `protobuf:"bytes,5,rep,name=extraPlugins,proto3" json:"extraPlugins,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CloudCredential      *Credential             `protobuf:"bytes,6,opt,name=cloudCredential,proto3" json:"cloudCredential,omitempty"`
	OsManagement         *OSInfo                 `protobuf:"bytes,7,opt,name=osManagement,proto3" json:"osManagement,omitempty"`
	ClusterManagement    *ClusterMgr             `protobuf:"bytes,8,opt,name=clusterManagement,proto3" json:"clusterManagement,omitempty"`
	NodeGroupManagement  *NodeGroupMgr           `protobuf:"bytes,10,opt,name=nodeGroupManagement,proto3" json:"nodeGroupManagement,omitempty"`
	Creator              string                  `protobuf:"bytes,11,opt,name=creator,proto3" json:"creator,omitempty"`
	CloudProvider        string                  `protobuf:"bytes,12,opt,name=cloudProvider,proto3" json:"cloudProvider,omitempty"`
	Config               string                  `protobuf:"bytes,13,opt,name=config,proto3" json:"config,omitempty"`
	Description          string                  `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty"`
	EngineType           string                  `protobuf:"bytes,15,opt,name=engineType,proto3" json:"engineType,omitempty"`
	Enable               string                  `protobuf:"bytes,16,opt,name=enable,proto3" json:"enable,omitempty"`
	NetworkInfo          *CloudNetworkInfo       `protobuf:"bytes,17,opt,name=networkInfo,proto3" json:"networkInfo,omitempty"`
	ConfInfo             *CloudConfigInfo        `protobuf:"bytes,18,opt,name=confInfo,proto3" json:"confInfo,omitempty"`
	PlatformInfo         map[string]string       `protobuf:"bytes,19,rep,name=platformInfo,proto3" json:"platformInfo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-" bson:"-"`
	XXX_unrecognized     []byte                  `json:"-" bson:"-"`
	XXX_sizecache        int32                   `json:"-" bson:"-"`
}

func (m *CreateCloudRequest) Reset()         { *m = CreateCloudRequest{} }
func (m *CreateCloudRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCloudRequest) ProtoMessage()    {}
func (*CreateCloudRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{151}
}

func (m *CreateCloudRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCloudRequest.Unmarshal(m, b)
}
func (m *CreateCloudRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCloudRequest.Marshal(b, m, deterministic)
}
func (m *CreateCloudRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCloudRequest.Merge(m, src)
}
func (m *CreateCloudRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCloudRequest.Size(m)
}
func (m *CreateCloudRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCloudRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCloudRequest proto.InternalMessageInfo

func (m *CreateCloudRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *CreateCloudRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateCloudRequest) GetEditable() bool {
	if m != nil {
		return m.Editable
	}
	return false
}

func (m *CreateCloudRequest) GetOpsPlugins() map[string]*BKOpsPlugin {
	if m != nil {
		return m.OpsPlugins
	}
	return nil
}

func (m *CreateCloudRequest) GetExtraPlugins() map[string]*BKOpsPlugin {
	if m != nil {
		return m.ExtraPlugins
	}
	return nil
}

func (m *CreateCloudRequest) GetCloudCredential() *Credential {
	if m != nil {
		return m.CloudCredential
	}
	return nil
}

func (m *CreateCloudRequest) GetOsManagement() *OSInfo {
	if m != nil {
		return m.OsManagement
	}
	return nil
}

func (m *CreateCloudRequest) GetClusterManagement() *ClusterMgr {
	if m != nil {
		return m.ClusterManagement
	}
	return nil
}

func (m *CreateCloudRequest) GetNodeGroupManagement() *NodeGroupMgr {
	if m != nil {
		return m.NodeGroupManagement
	}
	return nil
}

func (m *CreateCloudRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CreateCloudRequest) GetCloudProvider() string {
	if m != nil {
		return m.CloudProvider
	}
	return ""
}

func (m *CreateCloudRequest) GetConfig() string {
	if m != nil {
		return m.Config
	}
	return ""
}

func (m *CreateCloudRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateCloudRequest) GetEngineType() string {
	if m != nil {
		return m.EngineType
	}
	return ""
}

func (m *CreateCloudRequest) GetEnable() string {
	if m != nil {
		return m.Enable
	}
	return ""
}

func (m *CreateCloudRequest) GetNetworkInfo() *CloudNetworkInfo {
	if m != nil {
		return m.NetworkInfo
	}
	return nil
}

func (m *CreateCloudRequest) GetConfInfo() *CloudConfigInfo {
	if m != nil {
		return m.ConfInfo
	}
	return nil
}

func (m *CreateCloudRequest) GetPlatformInfo() map[string]string {
	if m != nil {
		return m.PlatformInfo
	}
	return nil
}

type CreateCloudResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CreateCloudResponse) Reset()         { *m = CreateCloudResponse{} }
func (m *CreateCloudResponse) String() string { return proto.CompactTextString(m) }
func (*CreateCloudResponse) ProtoMessage()    {}
func (*CreateCloudResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{152}
}

func (m *CreateCloudResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCloudResponse.Unmarshal(m, b)
}
func (m *CreateCloudResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCloudResponse.Marshal(b, m, deterministic)
}
func (m *CreateCloudResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCloudResponse.Merge(m, src)
}
func (m *CreateCloudResponse) XXX_Size() int {
	return xxx_messageInfo_CreateCloudResponse.Size(m)
}
func (m *CreateCloudResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCloudResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCloudResponse proto.InternalMessageInfo

func (m *CreateCloudResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateCloudResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateCloudResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type UpdateCloudRequest struct {
	CloudID              string                  `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	Name                 string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Editable             bool                    `protobuf:"varint,3,opt,name=editable,proto3" json:"editable,omitempty"`
	OpsPlugins           map[string]*BKOpsPlugin `protobuf:"bytes,4,rep,name=opsPlugins,proto3" json:"opsPlugins,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ExtraPlugins         map[string]*BKOpsPlugin `protobuf:"bytes,5,rep,name=extraPlugins,proto3" json:"extraPlugins,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CloudCredential      *Credential             `protobuf:"bytes,6,opt,name=cloudCredential,proto3" json:"cloudCredential,omitempty"`
	OsManagement         *OSInfo                 `protobuf:"bytes,7,opt,name=osManagement,proto3" json:"osManagement,omitempty"`
	ClusterManagement    *ClusterMgr             `protobuf:"bytes,8,opt,name=clusterManagement,proto3" json:"clusterManagement,omitempty"`
	NodeGroupManagement  *NodeGroupMgr           `protobuf:"bytes,10,opt,name=nodeGroupManagement,proto3" json:"nodeGroupManagement,omitempty"`
	Updater              string                  `protobuf:"bytes,11,opt,name=updater,proto3" json:"updater,omitempty"`
	CloudProvider        string                  `protobuf:"bytes,12,opt,name=cloudProvider,proto3" json:"cloudProvider,omitempty"`
	Config               string                  `protobuf:"bytes,13,opt,name=config,proto3" json:"config,omitempty"`
	Description          string                  `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty"`
	EngineType           string                  `protobuf:"bytes,15,opt,name=engineType,proto3" json:"engineType,omitempty"`
	Enable               string                  `protobuf:"bytes,16,opt,name=enable,proto3" json:"enable,omitempty"`
	NetworkInfo          *CloudNetworkInfo       `protobuf:"bytes,17,opt,name=networkInfo,proto3" json:"networkInfo,omitempty"`
	ConfInfo             *CloudConfigInfo        `protobuf:"bytes,18,opt,name=confInfo,proto3" json:"confInfo,omitempty"`
	PlatformInfo         map[string]string       `protobuf:"bytes,19,rep,name=platformInfo,proto3" json:"platformInfo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-" bson:"-"`
	XXX_unrecognized     []byte                  `json:"-" bson:"-"`
	XXX_sizecache        int32                   `json:"-" bson:"-"`
}

func (m *UpdateCloudRequest) Reset()         { *m = UpdateCloudRequest{} }
func (m *UpdateCloudRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCloudRequest) ProtoMessage()    {}
func (*UpdateCloudRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{153}
}

func (m *UpdateCloudRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCloudRequest.Unmarshal(m, b)
}
func (m *UpdateCloudRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCloudRequest.Marshal(b, m, deterministic)
}
func (m *UpdateCloudRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCloudRequest.Merge(m, src)
}
func (m *UpdateCloudRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCloudRequest.Size(m)
}
func (m *UpdateCloudRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCloudRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCloudRequest proto.InternalMessageInfo

func (m *UpdateCloudRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *UpdateCloudRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateCloudRequest) GetEditable() bool {
	if m != nil {
		return m.Editable
	}
	return false
}

func (m *UpdateCloudRequest) GetOpsPlugins() map[string]*BKOpsPlugin {
	if m != nil {
		return m.OpsPlugins
	}
	return nil
}

func (m *UpdateCloudRequest) GetExtraPlugins() map[string]*BKOpsPlugin {
	if m != nil {
		return m.ExtraPlugins
	}
	return nil
}

func (m *UpdateCloudRequest) GetCloudCredential() *Credential {
	if m != nil {
		return m.CloudCredential
	}
	return nil
}

func (m *UpdateCloudRequest) GetOsManagement() *OSInfo {
	if m != nil {
		return m.OsManagement
	}
	return nil
}

func (m *UpdateCloudRequest) GetClusterManagement() *ClusterMgr {
	if m != nil {
		return m.ClusterManagement
	}
	return nil
}

func (m *UpdateCloudRequest) GetNodeGroupManagement() *NodeGroupMgr {
	if m != nil {
		return m.NodeGroupManagement
	}
	return nil
}

func (m *UpdateCloudRequest) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *UpdateCloudRequest) GetCloudProvider() string {
	if m != nil {
		return m.CloudProvider
	}
	return ""
}

func (m *UpdateCloudRequest) GetConfig() string {
	if m != nil {
		return m.Config
	}
	return ""
}

func (m *UpdateCloudRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdateCloudRequest) GetEngineType() string {
	if m != nil {
		return m.EngineType
	}
	return ""
}

func (m *UpdateCloudRequest) GetEnable() string {
	if m != nil {
		return m.Enable
	}
	return ""
}

func (m *UpdateCloudRequest) GetNetworkInfo() *CloudNetworkInfo {
	if m != nil {
		return m.NetworkInfo
	}
	return nil
}

func (m *UpdateCloudRequest) GetConfInfo() *CloudConfigInfo {
	if m != nil {
		return m.ConfInfo
	}
	return nil
}

func (m *UpdateCloudRequest) GetPlatformInfo() map[string]string {
	if m != nil {
		return m.PlatformInfo
	}
	return nil
}

type UpdateCloudResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Cloud   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateCloudResponse) Reset()         { *m = UpdateCloudResponse{} }
func (m *UpdateCloudResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateCloudResponse) ProtoMessage()    {}
func (*UpdateCloudResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{154}
}

func (m *UpdateCloudResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCloudResponse.Unmarshal(m, b)
}
func (m *UpdateCloudResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCloudResponse.Marshal(b, m, deterministic)
}
func (m *UpdateCloudResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCloudResponse.Merge(m, src)
}
func (m *UpdateCloudResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateCloudResponse.Size(m)
}
func (m *UpdateCloudResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCloudResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCloudResponse proto.InternalMessageInfo

func (m *UpdateCloudResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateCloudResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateCloudResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *UpdateCloudResponse) GetData() *Cloud {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteCloudRequest struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	IsForce              bool     `protobuf:"varint,2,opt,name=isForce,proto3" json:"isForce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteCloudRequest) Reset()         { *m = DeleteCloudRequest{} }
func (m *DeleteCloudRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCloudRequest) ProtoMessage()    {}
func (*DeleteCloudRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{155}
}

func (m *DeleteCloudRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCloudRequest.Unmarshal(m, b)
}
func (m *DeleteCloudRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCloudRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCloudRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCloudRequest.Merge(m, src)
}
func (m *DeleteCloudRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCloudRequest.Size(m)
}
func (m *DeleteCloudRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCloudRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCloudRequest proto.InternalMessageInfo

func (m *DeleteCloudRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *DeleteCloudRequest) GetIsForce() bool {
	if m != nil {
		return m.IsForce
	}
	return false
}

type DeleteCloudResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Cloud   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteCloudResponse) Reset()         { *m = DeleteCloudResponse{} }
func (m *DeleteCloudResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteCloudResponse) ProtoMessage()    {}
func (*DeleteCloudResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{156}
}

func (m *DeleteCloudResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCloudResponse.Unmarshal(m, b)
}
func (m *DeleteCloudResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCloudResponse.Marshal(b, m, deterministic)
}
func (m *DeleteCloudResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCloudResponse.Merge(m, src)
}
func (m *DeleteCloudResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteCloudResponse.Size(m)
}
func (m *DeleteCloudResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCloudResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCloudResponse proto.InternalMessageInfo

func (m *DeleteCloudResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteCloudResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteCloudResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *DeleteCloudResponse) GetData() *Cloud {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetCloudRequest struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	ShowCredential       bool     `protobuf:"varint,2,opt,name=showCredential,proto3" json:"showCredential,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetCloudRequest) Reset()         { *m = GetCloudRequest{} }
func (m *GetCloudRequest) String() string { return proto.CompactTextString(m) }
func (*GetCloudRequest) ProtoMessage()    {}
func (*GetCloudRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{157}
}

func (m *GetCloudRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCloudRequest.Unmarshal(m, b)
}
func (m *GetCloudRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCloudRequest.Marshal(b, m, deterministic)
}
func (m *GetCloudRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCloudRequest.Merge(m, src)
}
func (m *GetCloudRequest) XXX_Size() int {
	return xxx_messageInfo_GetCloudRequest.Size(m)
}
func (m *GetCloudRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCloudRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCloudRequest proto.InternalMessageInfo

func (m *GetCloudRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *GetCloudRequest) GetShowCredential() bool {
	if m != nil {
		return m.ShowCredential
	}
	return false
}

type GetCloudResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Cloud   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetCloudResponse) Reset()         { *m = GetCloudResponse{} }
func (m *GetCloudResponse) String() string { return proto.CompactTextString(m) }
func (*GetCloudResponse) ProtoMessage()    {}
func (*GetCloudResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{158}
}

func (m *GetCloudResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCloudResponse.Unmarshal(m, b)
}
func (m *GetCloudResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCloudResponse.Marshal(b, m, deterministic)
}
func (m *GetCloudResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCloudResponse.Merge(m, src)
}
func (m *GetCloudResponse) XXX_Size() int {
	return xxx_messageInfo_GetCloudResponse.Size(m)
}
func (m *GetCloudResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCloudResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCloudResponse proto.InternalMessageInfo

func (m *GetCloudResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetCloudResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetCloudResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetCloudResponse) GetData() *Cloud {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListCloudRequest struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Editable             bool     `protobuf:"varint,3,opt,name=editable,proto3" json:"editable,omitempty"`
	Creator              string   `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`
	Updater              string   `protobuf:"bytes,5,opt,name=updater,proto3" json:"updater,omitempty"`
	CloudProvider        string   `protobuf:"bytes,6,opt,name=cloudProvider,proto3" json:"cloudProvider,omitempty"`
	ShowCredential       bool     `protobuf:"varint,7,opt,name=showCredential,proto3" json:"showCredential,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListCloudRequest) Reset()         { *m = ListCloudRequest{} }
func (m *ListCloudRequest) String() string { return proto.CompactTextString(m) }
func (*ListCloudRequest) ProtoMessage()    {}
func (*ListCloudRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{159}
}

func (m *ListCloudRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCloudRequest.Unmarshal(m, b)
}
func (m *ListCloudRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCloudRequest.Marshal(b, m, deterministic)
}
func (m *ListCloudRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCloudRequest.Merge(m, src)
}
func (m *ListCloudRequest) XXX_Size() int {
	return xxx_messageInfo_ListCloudRequest.Size(m)
}
func (m *ListCloudRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCloudRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCloudRequest proto.InternalMessageInfo

func (m *ListCloudRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *ListCloudRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListCloudRequest) GetEditable() bool {
	if m != nil {
		return m.Editable
	}
	return false
}

func (m *ListCloudRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *ListCloudRequest) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *ListCloudRequest) GetCloudProvider() string {
	if m != nil {
		return m.CloudProvider
	}
	return ""
}

func (m *ListCloudRequest) GetShowCredential() bool {
	if m != nil {
		return m.ShowCredential
	}
	return false
}

type ListCloudResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*Cloud `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListCloudResponse) Reset()         { *m = ListCloudResponse{} }
func (m *ListCloudResponse) String() string { return proto.CompactTextString(m) }
func (*ListCloudResponse) ProtoMessage()    {}
func (*ListCloudResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{160}
}

func (m *ListCloudResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCloudResponse.Unmarshal(m, b)
}
func (m *ListCloudResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCloudResponse.Marshal(b, m, deterministic)
}
func (m *ListCloudResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCloudResponse.Merge(m, src)
}
func (m *ListCloudResponse) XXX_Size() int {
	return xxx_messageInfo_ListCloudResponse.Size(m)
}
func (m *ListCloudResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCloudResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCloudResponse proto.InternalMessageInfo

func (m *ListCloudResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListCloudResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListCloudResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListCloudResponse) GetData() []*Cloud {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateNodeGroupRequest struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ClusterID            string               `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Region               string               `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	EnableAutoscale      bool                 `protobuf:"varint,4,opt,name=enableAutoscale,proto3" json:"enableAutoscale,omitempty"`
	AutoScaling          *AutoScalingGroup    `protobuf:"bytes,5,opt,name=autoScaling,proto3" json:"autoScaling,omitempty"`
	LaunchTemplate       *LaunchConfiguration `protobuf:"bytes,6,opt,name=launchTemplate,proto3" json:"launchTemplate,omitempty"`
	Labels               map[string]string    `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Taints               map[string]string    `protobuf:"bytes,8,rep,name=taints,proto3" json:"taints,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NodeOS               string               `protobuf:"bytes,9,opt,name=nodeOS,proto3" json:"nodeOS,omitempty"`
	Creator              string               `protobuf:"bytes,10,opt,name=creator,proto3" json:"creator,omitempty"`
	Provider             string               `protobuf:"bytes,11,opt,name=provider,proto3" json:"provider,omitempty"`
	ConsumerID           string               `protobuf:"bytes,18,opt,name=consumerID,proto3" json:"consumerID,omitempty"`
	NodeTemplate         *NodeTemplate        `protobuf:"bytes,19,opt,name=nodeTemplate,proto3" json:"nodeTemplate,omitempty"`
	Tags                 map[string]string    `protobuf:"bytes,20,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NodeGroupType        string               `protobuf:"bytes,21,opt,name=nodeGroupType,proto3" json:"nodeGroupType,omitempty"`
	BkCloudID            uint32               `protobuf:"varint,22,opt,name=bkCloudID,proto3" json:"bkCloudID,omitempty"`
	CloudAreaName        string               `protobuf:"bytes,23,opt,name=cloudAreaName,proto3" json:"cloudAreaName,omitempty"`
	Extra                *GroupExtraInfo      `protobuf:"bytes,24,opt,name=extra,proto3" json:"extra,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *CreateNodeGroupRequest) Reset()         { *m = CreateNodeGroupRequest{} }
func (m *CreateNodeGroupRequest) String() string { return proto.CompactTextString(m) }
func (*CreateNodeGroupRequest) ProtoMessage()    {}
func (*CreateNodeGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{161}
}

func (m *CreateNodeGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNodeGroupRequest.Unmarshal(m, b)
}
func (m *CreateNodeGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNodeGroupRequest.Marshal(b, m, deterministic)
}
func (m *CreateNodeGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNodeGroupRequest.Merge(m, src)
}
func (m *CreateNodeGroupRequest) XXX_Size() int {
	return xxx_messageInfo_CreateNodeGroupRequest.Size(m)
}
func (m *CreateNodeGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNodeGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNodeGroupRequest proto.InternalMessageInfo

func (m *CreateNodeGroupRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateNodeGroupRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *CreateNodeGroupRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *CreateNodeGroupRequest) GetEnableAutoscale() bool {
	if m != nil {
		return m.EnableAutoscale
	}
	return false
}

func (m *CreateNodeGroupRequest) GetAutoScaling() *AutoScalingGroup {
	if m != nil {
		return m.AutoScaling
	}
	return nil
}

func (m *CreateNodeGroupRequest) GetLaunchTemplate() *LaunchConfiguration {
	if m != nil {
		return m.LaunchTemplate
	}
	return nil
}

func (m *CreateNodeGroupRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateNodeGroupRequest) GetTaints() map[string]string {
	if m != nil {
		return m.Taints
	}
	return nil
}

func (m *CreateNodeGroupRequest) GetNodeOS() string {
	if m != nil {
		return m.NodeOS
	}
	return ""
}

func (m *CreateNodeGroupRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CreateNodeGroupRequest) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *CreateNodeGroupRequest) GetConsumerID() string {
	if m != nil {
		return m.ConsumerID
	}
	return ""
}

func (m *CreateNodeGroupRequest) GetNodeTemplate() *NodeTemplate {
	if m != nil {
		return m.NodeTemplate
	}
	return nil
}

func (m *CreateNodeGroupRequest) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *CreateNodeGroupRequest) GetNodeGroupType() string {
	if m != nil {
		return m.NodeGroupType
	}
	return ""
}

func (m *CreateNodeGroupRequest) GetBkCloudID() uint32 {
	if m != nil {
		return m.BkCloudID
	}
	return 0
}

func (m *CreateNodeGroupRequest) GetCloudAreaName() string {
	if m != nil {
		return m.CloudAreaName
	}
	return ""
}

func (m *CreateNodeGroupRequest) GetExtra() *GroupExtraInfo {
	if m != nil {
		return m.Extra
	}
	return nil
}

type GroupExtraInfo struct {
	Provider             string   `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	PoolID               string   `protobuf:"bytes,2,opt,name=poolID,proto3" json:"poolID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GroupExtraInfo) Reset()         { *m = GroupExtraInfo{} }
func (m *GroupExtraInfo) String() string { return proto.CompactTextString(m) }
func (*GroupExtraInfo) ProtoMessage()    {}
func (*GroupExtraInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{162}
}

func (m *GroupExtraInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupExtraInfo.Unmarshal(m, b)
}
func (m *GroupExtraInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupExtraInfo.Marshal(b, m, deterministic)
}
func (m *GroupExtraInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupExtraInfo.Merge(m, src)
}
func (m *GroupExtraInfo) XXX_Size() int {
	return xxx_messageInfo_GroupExtraInfo.Size(m)
}
func (m *GroupExtraInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupExtraInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GroupExtraInfo proto.InternalMessageInfo

func (m *GroupExtraInfo) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *GroupExtraInfo) GetPoolID() string {
	if m != nil {
		return m.PoolID
	}
	return ""
}

type CreateNodeGroupResponse struct {
	Code                 uint32                       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                         `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *CreateNodeGroupResponseData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-" bson:"-"`
	XXX_unrecognized     []byte                       `json:"-" bson:"-"`
	XXX_sizecache        int32                        `json:"-" bson:"-"`
}

func (m *CreateNodeGroupResponse) Reset()         { *m = CreateNodeGroupResponse{} }
func (m *CreateNodeGroupResponse) String() string { return proto.CompactTextString(m) }
func (*CreateNodeGroupResponse) ProtoMessage()    {}
func (*CreateNodeGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{163}
}

func (m *CreateNodeGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNodeGroupResponse.Unmarshal(m, b)
}
func (m *CreateNodeGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNodeGroupResponse.Marshal(b, m, deterministic)
}
func (m *CreateNodeGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNodeGroupResponse.Merge(m, src)
}
func (m *CreateNodeGroupResponse) XXX_Size() int {
	return xxx_messageInfo_CreateNodeGroupResponse.Size(m)
}
func (m *CreateNodeGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNodeGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNodeGroupResponse proto.InternalMessageInfo

func (m *CreateNodeGroupResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateNodeGroupResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateNodeGroupResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *CreateNodeGroupResponse) GetData() *CreateNodeGroupResponseData {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateNodeGroupResponseData struct {
	NodeGroup            *NodeGroup `protobuf:"bytes,1,opt,name=nodeGroup,proto3" json:"nodeGroup,omitempty"`
	Task                 *Task      `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-" bson:"-"`
	XXX_unrecognized     []byte     `json:"-" bson:"-"`
	XXX_sizecache        int32      `json:"-" bson:"-"`
}

func (m *CreateNodeGroupResponseData) Reset()         { *m = CreateNodeGroupResponseData{} }
func (m *CreateNodeGroupResponseData) String() string { return proto.CompactTextString(m) }
func (*CreateNodeGroupResponseData) ProtoMessage()    {}
func (*CreateNodeGroupResponseData) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{164}
}

func (m *CreateNodeGroupResponseData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNodeGroupResponseData.Unmarshal(m, b)
}
func (m *CreateNodeGroupResponseData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNodeGroupResponseData.Marshal(b, m, deterministic)
}
func (m *CreateNodeGroupResponseData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNodeGroupResponseData.Merge(m, src)
}
func (m *CreateNodeGroupResponseData) XXX_Size() int {
	return xxx_messageInfo_CreateNodeGroupResponseData.Size(m)
}
func (m *CreateNodeGroupResponseData) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNodeGroupResponseData.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNodeGroupResponseData proto.InternalMessageInfo

func (m *CreateNodeGroupResponseData) GetNodeGroup() *NodeGroup {
	if m != nil {
		return m.NodeGroup
	}
	return nil
}

func (m *CreateNodeGroupResponseData) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type UpdateNodeGroupRequest struct {
	NodeGroupID          string                `protobuf:"bytes,1,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	ClusterID            string                `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Name                 string                `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Region               string                `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	EnableAutoscale      *wrappers.BoolValue   `protobuf:"bytes,5,opt,name=enableAutoscale,proto3" json:"enableAutoscale,omitempty"`
	AutoScaling          *AutoScalingGroup     `protobuf:"bytes,6,opt,name=autoScaling,proto3" json:"autoScaling,omitempty"`
	LaunchTemplate       *LaunchConfiguration  `protobuf:"bytes,7,opt,name=launchTemplate,proto3" json:"launchTemplate,omitempty"`
	NodeTemplate         *NodeTemplate         `protobuf:"bytes,8,opt,name=nodeTemplate,proto3" json:"nodeTemplate,omitempty"`
	Labels               map[string]string     `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Taints               map[string]string     `protobuf:"bytes,10,rep,name=taints,proto3" json:"taints,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tags                 map[string]string     `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NodeOS               string                `protobuf:"bytes,12,opt,name=nodeOS,proto3" json:"nodeOS,omitempty"`
	Updater              string                `protobuf:"bytes,13,opt,name=updater,proto3" json:"updater,omitempty"`
	Provider             string                `protobuf:"bytes,14,opt,name=provider,proto3" json:"provider,omitempty"`
	ConsumerID           string                `protobuf:"bytes,15,opt,name=consumerID,proto3" json:"consumerID,omitempty"`
	Desc                 string                `protobuf:"bytes,16,opt,name=desc,proto3" json:"desc,omitempty"`
	BkCloudID            *wrappers.UInt32Value `protobuf:"bytes,17,opt,name=bkCloudID,proto3" json:"bkCloudID,omitempty"`
	CloudAreaName        *wrappers.StringValue `protobuf:"bytes,18,opt,name=cloudAreaName,proto3" json:"cloudAreaName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-" bson:"-"`
	XXX_unrecognized     []byte                `json:"-" bson:"-"`
	XXX_sizecache        int32                 `json:"-" bson:"-"`
}

func (m *UpdateNodeGroupRequest) Reset()         { *m = UpdateNodeGroupRequest{} }
func (m *UpdateNodeGroupRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateNodeGroupRequest) ProtoMessage()    {}
func (*UpdateNodeGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{165}
}

func (m *UpdateNodeGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNodeGroupRequest.Unmarshal(m, b)
}
func (m *UpdateNodeGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNodeGroupRequest.Marshal(b, m, deterministic)
}
func (m *UpdateNodeGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNodeGroupRequest.Merge(m, src)
}
func (m *UpdateNodeGroupRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateNodeGroupRequest.Size(m)
}
func (m *UpdateNodeGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNodeGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNodeGroupRequest proto.InternalMessageInfo

func (m *UpdateNodeGroupRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *UpdateNodeGroupRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *UpdateNodeGroupRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateNodeGroupRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *UpdateNodeGroupRequest) GetEnableAutoscale() *wrappers.BoolValue {
	if m != nil {
		return m.EnableAutoscale
	}
	return nil
}

func (m *UpdateNodeGroupRequest) GetAutoScaling() *AutoScalingGroup {
	if m != nil {
		return m.AutoScaling
	}
	return nil
}

func (m *UpdateNodeGroupRequest) GetLaunchTemplate() *LaunchConfiguration {
	if m != nil {
		return m.LaunchTemplate
	}
	return nil
}

func (m *UpdateNodeGroupRequest) GetNodeTemplate() *NodeTemplate {
	if m != nil {
		return m.NodeTemplate
	}
	return nil
}

func (m *UpdateNodeGroupRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *UpdateNodeGroupRequest) GetTaints() map[string]string {
	if m != nil {
		return m.Taints
	}
	return nil
}

func (m *UpdateNodeGroupRequest) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *UpdateNodeGroupRequest) GetNodeOS() string {
	if m != nil {
		return m.NodeOS
	}
	return ""
}

func (m *UpdateNodeGroupRequest) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *UpdateNodeGroupRequest) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *UpdateNodeGroupRequest) GetConsumerID() string {
	if m != nil {
		return m.ConsumerID
	}
	return ""
}

func (m *UpdateNodeGroupRequest) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *UpdateNodeGroupRequest) GetBkCloudID() *wrappers.UInt32Value {
	if m != nil {
		return m.BkCloudID
	}
	return nil
}

func (m *UpdateNodeGroupRequest) GetCloudAreaName() *wrappers.StringValue {
	if m != nil {
		return m.CloudAreaName
	}
	return nil
}

type UpdateNodeGroupResponse struct {
	Code                 uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool       `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *NodeGroup `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-" bson:"-"`
	XXX_unrecognized     []byte     `json:"-" bson:"-"`
	XXX_sizecache        int32      `json:"-" bson:"-"`
}

func (m *UpdateNodeGroupResponse) Reset()         { *m = UpdateNodeGroupResponse{} }
func (m *UpdateNodeGroupResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateNodeGroupResponse) ProtoMessage()    {}
func (*UpdateNodeGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{166}
}

func (m *UpdateNodeGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNodeGroupResponse.Unmarshal(m, b)
}
func (m *UpdateNodeGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNodeGroupResponse.Marshal(b, m, deterministic)
}
func (m *UpdateNodeGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNodeGroupResponse.Merge(m, src)
}
func (m *UpdateNodeGroupResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateNodeGroupResponse.Size(m)
}
func (m *UpdateNodeGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNodeGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNodeGroupResponse proto.InternalMessageInfo

func (m *UpdateNodeGroupResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateNodeGroupResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateNodeGroupResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *UpdateNodeGroupResponse) GetData() *NodeGroup {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteNodeGroupRequest struct {
	NodeGroupID           string   `protobuf:"bytes,1,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	IsForce               bool     `protobuf:"varint,2,opt,name=isForce,proto3" json:"isForce,omitempty"`
	ReserveNodesInCluster bool     `protobuf:"varint,3,opt,name=reserveNodesInCluster,proto3" json:"reserveNodesInCluster,omitempty"`
	KeepNodesInstance     bool     `protobuf:"varint,4,opt,name=keepNodesInstance,proto3" json:"keepNodesInstance,omitempty"`
	Operator              string   `protobuf:"bytes,5,opt,name=operator,proto3" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-" bson:"-"`
	XXX_unrecognized      []byte   `json:"-" bson:"-"`
	XXX_sizecache         int32    `json:"-" bson:"-"`
}

func (m *DeleteNodeGroupRequest) Reset()         { *m = DeleteNodeGroupRequest{} }
func (m *DeleteNodeGroupRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNodeGroupRequest) ProtoMessage()    {}
func (*DeleteNodeGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{167}
}

func (m *DeleteNodeGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNodeGroupRequest.Unmarshal(m, b)
}
func (m *DeleteNodeGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNodeGroupRequest.Marshal(b, m, deterministic)
}
func (m *DeleteNodeGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNodeGroupRequest.Merge(m, src)
}
func (m *DeleteNodeGroupRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNodeGroupRequest.Size(m)
}
func (m *DeleteNodeGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNodeGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNodeGroupRequest proto.InternalMessageInfo

func (m *DeleteNodeGroupRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *DeleteNodeGroupRequest) GetIsForce() bool {
	if m != nil {
		return m.IsForce
	}
	return false
}

func (m *DeleteNodeGroupRequest) GetReserveNodesInCluster() bool {
	if m != nil {
		return m.ReserveNodesInCluster
	}
	return false
}

func (m *DeleteNodeGroupRequest) GetKeepNodesInstance() bool {
	if m != nil {
		return m.KeepNodesInstance
	}
	return false
}

func (m *DeleteNodeGroupRequest) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type DeleteNodeGroupResponse struct {
	Code                 uint32                       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                         `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *DeleteNodeGroupResponseData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-" bson:"-"`
	XXX_unrecognized     []byte                       `json:"-" bson:"-"`
	XXX_sizecache        int32                        `json:"-" bson:"-"`
}

func (m *DeleteNodeGroupResponse) Reset()         { *m = DeleteNodeGroupResponse{} }
func (m *DeleteNodeGroupResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteNodeGroupResponse) ProtoMessage()    {}
func (*DeleteNodeGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{168}
}

func (m *DeleteNodeGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNodeGroupResponse.Unmarshal(m, b)
}
func (m *DeleteNodeGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNodeGroupResponse.Marshal(b, m, deterministic)
}
func (m *DeleteNodeGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNodeGroupResponse.Merge(m, src)
}
func (m *DeleteNodeGroupResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteNodeGroupResponse.Size(m)
}
func (m *DeleteNodeGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNodeGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNodeGroupResponse proto.InternalMessageInfo

func (m *DeleteNodeGroupResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteNodeGroupResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteNodeGroupResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *DeleteNodeGroupResponse) GetData() *DeleteNodeGroupResponseData {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteNodeGroupResponseData struct {
	NodeGroup            *NodeGroup `protobuf:"bytes,1,opt,name=nodeGroup,proto3" json:"nodeGroup,omitempty"`
	Task                 *Task      `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-" bson:"-"`
	XXX_unrecognized     []byte     `json:"-" bson:"-"`
	XXX_sizecache        int32      `json:"-" bson:"-"`
}

func (m *DeleteNodeGroupResponseData) Reset()         { *m = DeleteNodeGroupResponseData{} }
func (m *DeleteNodeGroupResponseData) String() string { return proto.CompactTextString(m) }
func (*DeleteNodeGroupResponseData) ProtoMessage()    {}
func (*DeleteNodeGroupResponseData) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{169}
}

func (m *DeleteNodeGroupResponseData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNodeGroupResponseData.Unmarshal(m, b)
}
func (m *DeleteNodeGroupResponseData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNodeGroupResponseData.Marshal(b, m, deterministic)
}
func (m *DeleteNodeGroupResponseData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNodeGroupResponseData.Merge(m, src)
}
func (m *DeleteNodeGroupResponseData) XXX_Size() int {
	return xxx_messageInfo_DeleteNodeGroupResponseData.Size(m)
}
func (m *DeleteNodeGroupResponseData) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNodeGroupResponseData.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNodeGroupResponseData proto.InternalMessageInfo

func (m *DeleteNodeGroupResponseData) GetNodeGroup() *NodeGroup {
	if m != nil {
		return m.NodeGroup
	}
	return nil
}

func (m *DeleteNodeGroupResponseData) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type GetNodeGroupRequest struct {
	NodeGroupID          string   `protobuf:"bytes,1,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetNodeGroupRequest) Reset()         { *m = GetNodeGroupRequest{} }
func (m *GetNodeGroupRequest) String() string { return proto.CompactTextString(m) }
func (*GetNodeGroupRequest) ProtoMessage()    {}
func (*GetNodeGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{170}
}

func (m *GetNodeGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeGroupRequest.Unmarshal(m, b)
}
func (m *GetNodeGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeGroupRequest.Marshal(b, m, deterministic)
}
func (m *GetNodeGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeGroupRequest.Merge(m, src)
}
func (m *GetNodeGroupRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodeGroupRequest.Size(m)
}
func (m *GetNodeGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeGroupRequest proto.InternalMessageInfo

func (m *GetNodeGroupRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

type GetNodeGroupResponse struct {
	Code                 uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool       `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *NodeGroup `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-" bson:"-"`
	XXX_unrecognized     []byte     `json:"-" bson:"-"`
	XXX_sizecache        int32      `json:"-" bson:"-"`
}

func (m *GetNodeGroupResponse) Reset()         { *m = GetNodeGroupResponse{} }
func (m *GetNodeGroupResponse) String() string { return proto.CompactTextString(m) }
func (*GetNodeGroupResponse) ProtoMessage()    {}
func (*GetNodeGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{171}
}

func (m *GetNodeGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeGroupResponse.Unmarshal(m, b)
}
func (m *GetNodeGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeGroupResponse.Marshal(b, m, deterministic)
}
func (m *GetNodeGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeGroupResponse.Merge(m, src)
}
func (m *GetNodeGroupResponse) XXX_Size() int {
	return xxx_messageInfo_GetNodeGroupResponse.Size(m)
}
func (m *GetNodeGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeGroupResponse proto.InternalMessageInfo

func (m *GetNodeGroupResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetNodeGroupResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetNodeGroupResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetNodeGroupResponse) GetData() *NodeGroup {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListNodeGroupRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Region               string   `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	ProjectID            string   `protobuf:"bytes,4,opt,name=projectID,proto3" json:"projectID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListNodeGroupRequest) Reset()         { *m = ListNodeGroupRequest{} }
func (m *ListNodeGroupRequest) String() string { return proto.CompactTextString(m) }
func (*ListNodeGroupRequest) ProtoMessage()    {}
func (*ListNodeGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{172}
}

func (m *ListNodeGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodeGroupRequest.Unmarshal(m, b)
}
func (m *ListNodeGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodeGroupRequest.Marshal(b, m, deterministic)
}
func (m *ListNodeGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodeGroupRequest.Merge(m, src)
}
func (m *ListNodeGroupRequest) XXX_Size() int {
	return xxx_messageInfo_ListNodeGroupRequest.Size(m)
}
func (m *ListNodeGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodeGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodeGroupRequest proto.InternalMessageInfo

func (m *ListNodeGroupRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListNodeGroupRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ListNodeGroupRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *ListNodeGroupRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

type ListNodeGroupResponse struct {
	Code                 uint32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool         `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*NodeGroup `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-" bson:"-"`
	XXX_unrecognized     []byte       `json:"-" bson:"-"`
	XXX_sizecache        int32        `json:"-" bson:"-"`
}

func (m *ListNodeGroupResponse) Reset()         { *m = ListNodeGroupResponse{} }
func (m *ListNodeGroupResponse) String() string { return proto.CompactTextString(m) }
func (*ListNodeGroupResponse) ProtoMessage()    {}
func (*ListNodeGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{173}
}

func (m *ListNodeGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodeGroupResponse.Unmarshal(m, b)
}
func (m *ListNodeGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodeGroupResponse.Marshal(b, m, deterministic)
}
func (m *ListNodeGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodeGroupResponse.Merge(m, src)
}
func (m *ListNodeGroupResponse) XXX_Size() int {
	return xxx_messageInfo_ListNodeGroupResponse.Size(m)
}
func (m *ListNodeGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodeGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodeGroupResponse proto.InternalMessageInfo

func (m *ListNodeGroupResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListNodeGroupResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListNodeGroupResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListNodeGroupResponse) GetData() []*NodeGroup {
	if m != nil {
		return m.Data
	}
	return nil
}

type AddNodesRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Nodes                []string `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	InitLoginPassword    string   `protobuf:"bytes,3,opt,name=initLoginPassword,proto3" json:"initLoginPassword,omitempty"`
	NodeGroupID          string   `protobuf:"bytes,4,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	OnlyCreateInfo       bool     `protobuf:"varint,5,opt,name=onlyCreateInfo,proto3" json:"onlyCreateInfo,omitempty"`
	Operator             string   `protobuf:"bytes,6,opt,name=operator,proto3" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *AddNodesRequest) Reset()         { *m = AddNodesRequest{} }
func (m *AddNodesRequest) String() string { return proto.CompactTextString(m) }
func (*AddNodesRequest) ProtoMessage()    {}
func (*AddNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{174}
}

func (m *AddNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddNodesRequest.Unmarshal(m, b)
}
func (m *AddNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddNodesRequest.Marshal(b, m, deterministic)
}
func (m *AddNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddNodesRequest.Merge(m, src)
}
func (m *AddNodesRequest) XXX_Size() int {
	return xxx_messageInfo_AddNodesRequest.Size(m)
}
func (m *AddNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddNodesRequest proto.InternalMessageInfo

func (m *AddNodesRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *AddNodesRequest) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *AddNodesRequest) GetInitLoginPassword() string {
	if m != nil {
		return m.InitLoginPassword
	}
	return ""
}

func (m *AddNodesRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *AddNodesRequest) GetOnlyCreateInfo() bool {
	if m != nil {
		return m.OnlyCreateInfo
	}
	return false
}

func (m *AddNodesRequest) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type AddNodesResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Task    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *AddNodesResponse) Reset()         { *m = AddNodesResponse{} }
func (m *AddNodesResponse) String() string { return proto.CompactTextString(m) }
func (*AddNodesResponse) ProtoMessage()    {}
func (*AddNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{175}
}

func (m *AddNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddNodesResponse.Unmarshal(m, b)
}
func (m *AddNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddNodesResponse.Marshal(b, m, deterministic)
}
func (m *AddNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddNodesResponse.Merge(m, src)
}
func (m *AddNodesResponse) XXX_Size() int {
	return xxx_messageInfo_AddNodesResponse.Size(m)
}
func (m *AddNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddNodesResponse proto.InternalMessageInfo

func (m *AddNodesResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AddNodesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AddNodesResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *AddNodesResponse) GetData() *Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteNodesRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Nodes                string   `protobuf:"bytes,2,opt,name=nodes,proto3" json:"nodes,omitempty"`
	DeleteMode           string   `protobuf:"bytes,3,opt,name=deleteMode,proto3" json:"deleteMode,omitempty"`
	IsForce              bool     `protobuf:"varint,4,opt,name=isForce,proto3" json:"isForce,omitempty"`
	Operator             string   `protobuf:"bytes,5,opt,name=operator,proto3" json:"operator,omitempty"`
	OnlyDeleteInfo       bool     `protobuf:"varint,6,opt,name=onlyDeleteInfo,proto3" json:"onlyDeleteInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteNodesRequest) Reset()         { *m = DeleteNodesRequest{} }
func (m *DeleteNodesRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNodesRequest) ProtoMessage()    {}
func (*DeleteNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{176}
}

func (m *DeleteNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNodesRequest.Unmarshal(m, b)
}
func (m *DeleteNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNodesRequest.Marshal(b, m, deterministic)
}
func (m *DeleteNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNodesRequest.Merge(m, src)
}
func (m *DeleteNodesRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNodesRequest.Size(m)
}
func (m *DeleteNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNodesRequest proto.InternalMessageInfo

func (m *DeleteNodesRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *DeleteNodesRequest) GetNodes() string {
	if m != nil {
		return m.Nodes
	}
	return ""
}

func (m *DeleteNodesRequest) GetDeleteMode() string {
	if m != nil {
		return m.DeleteMode
	}
	return ""
}

func (m *DeleteNodesRequest) GetIsForce() bool {
	if m != nil {
		return m.IsForce
	}
	return false
}

func (m *DeleteNodesRequest) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *DeleteNodesRequest) GetOnlyDeleteInfo() bool {
	if m != nil {
		return m.OnlyDeleteInfo
	}
	return false
}

type DeleteNodesResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Task    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteNodesResponse) Reset()         { *m = DeleteNodesResponse{} }
func (m *DeleteNodesResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteNodesResponse) ProtoMessage()    {}
func (*DeleteNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{177}
}

func (m *DeleteNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNodesResponse.Unmarshal(m, b)
}
func (m *DeleteNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNodesResponse.Marshal(b, m, deterministic)
}
func (m *DeleteNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNodesResponse.Merge(m, src)
}
func (m *DeleteNodesResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteNodesResponse.Size(m)
}
func (m *DeleteNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNodesResponse proto.InternalMessageInfo

func (m *DeleteNodesResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteNodesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteNodesResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *DeleteNodesResponse) GetData() *Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type MoveNodesToGroupRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Nodes                []string `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	NodeGroupID          string   `protobuf:"bytes,3,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *MoveNodesToGroupRequest) Reset()         { *m = MoveNodesToGroupRequest{} }
func (m *MoveNodesToGroupRequest) String() string { return proto.CompactTextString(m) }
func (*MoveNodesToGroupRequest) ProtoMessage()    {}
func (*MoveNodesToGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{178}
}

func (m *MoveNodesToGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveNodesToGroupRequest.Unmarshal(m, b)
}
func (m *MoveNodesToGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveNodesToGroupRequest.Marshal(b, m, deterministic)
}
func (m *MoveNodesToGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveNodesToGroupRequest.Merge(m, src)
}
func (m *MoveNodesToGroupRequest) XXX_Size() int {
	return xxx_messageInfo_MoveNodesToGroupRequest.Size(m)
}
func (m *MoveNodesToGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveNodesToGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MoveNodesToGroupRequest proto.InternalMessageInfo

func (m *MoveNodesToGroupRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *MoveNodesToGroupRequest) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *MoveNodesToGroupRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

type MoveNodesToGroupResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Task    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *MoveNodesToGroupResponse) Reset()         { *m = MoveNodesToGroupResponse{} }
func (m *MoveNodesToGroupResponse) String() string { return proto.CompactTextString(m) }
func (*MoveNodesToGroupResponse) ProtoMessage()    {}
func (*MoveNodesToGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{179}
}

func (m *MoveNodesToGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveNodesToGroupResponse.Unmarshal(m, b)
}
func (m *MoveNodesToGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveNodesToGroupResponse.Marshal(b, m, deterministic)
}
func (m *MoveNodesToGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveNodesToGroupResponse.Merge(m, src)
}
func (m *MoveNodesToGroupResponse) XXX_Size() int {
	return xxx_messageInfo_MoveNodesToGroupResponse.Size(m)
}
func (m *MoveNodesToGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveNodesToGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MoveNodesToGroupResponse proto.InternalMessageInfo

func (m *MoveNodesToGroupResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *MoveNodesToGroupResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *MoveNodesToGroupResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *MoveNodesToGroupResponse) GetData() *Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type RemoveNodesFromGroupRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Nodes                []string `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	NodeGroupID          string   `protobuf:"bytes,3,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *RemoveNodesFromGroupRequest) Reset()         { *m = RemoveNodesFromGroupRequest{} }
func (m *RemoveNodesFromGroupRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveNodesFromGroupRequest) ProtoMessage()    {}
func (*RemoveNodesFromGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{180}
}

func (m *RemoveNodesFromGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveNodesFromGroupRequest.Unmarshal(m, b)
}
func (m *RemoveNodesFromGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveNodesFromGroupRequest.Marshal(b, m, deterministic)
}
func (m *RemoveNodesFromGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveNodesFromGroupRequest.Merge(m, src)
}
func (m *RemoveNodesFromGroupRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveNodesFromGroupRequest.Size(m)
}
func (m *RemoveNodesFromGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveNodesFromGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveNodesFromGroupRequest proto.InternalMessageInfo

func (m *RemoveNodesFromGroupRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *RemoveNodesFromGroupRequest) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *RemoveNodesFromGroupRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

type RemoveNodesFromGroupResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Task    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *RemoveNodesFromGroupResponse) Reset()         { *m = RemoveNodesFromGroupResponse{} }
func (m *RemoveNodesFromGroupResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveNodesFromGroupResponse) ProtoMessage()    {}
func (*RemoveNodesFromGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{181}
}

func (m *RemoveNodesFromGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveNodesFromGroupResponse.Unmarshal(m, b)
}
func (m *RemoveNodesFromGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveNodesFromGroupResponse.Marshal(b, m, deterministic)
}
func (m *RemoveNodesFromGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveNodesFromGroupResponse.Merge(m, src)
}
func (m *RemoveNodesFromGroupResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveNodesFromGroupResponse.Size(m)
}
func (m *RemoveNodesFromGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveNodesFromGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveNodesFromGroupResponse proto.InternalMessageInfo

func (m *RemoveNodesFromGroupResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RemoveNodesFromGroupResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *RemoveNodesFromGroupResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *RemoveNodesFromGroupResponse) GetData() *Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type CleanNodesInGroupRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Nodes                []string `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	NodeGroupID          string   `protobuf:"bytes,3,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	Operator             string   `protobuf:"bytes,4,opt,name=operator,proto3" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CleanNodesInGroupRequest) Reset()         { *m = CleanNodesInGroupRequest{} }
func (m *CleanNodesInGroupRequest) String() string { return proto.CompactTextString(m) }
func (*CleanNodesInGroupRequest) ProtoMessage()    {}
func (*CleanNodesInGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{182}
}

func (m *CleanNodesInGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanNodesInGroupRequest.Unmarshal(m, b)
}
func (m *CleanNodesInGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanNodesInGroupRequest.Marshal(b, m, deterministic)
}
func (m *CleanNodesInGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanNodesInGroupRequest.Merge(m, src)
}
func (m *CleanNodesInGroupRequest) XXX_Size() int {
	return xxx_messageInfo_CleanNodesInGroupRequest.Size(m)
}
func (m *CleanNodesInGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanNodesInGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CleanNodesInGroupRequest proto.InternalMessageInfo

func (m *CleanNodesInGroupRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *CleanNodesInGroupRequest) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *CleanNodesInGroupRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *CleanNodesInGroupRequest) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type CleanNodesInGroupResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Task    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CleanNodesInGroupResponse) Reset()         { *m = CleanNodesInGroupResponse{} }
func (m *CleanNodesInGroupResponse) String() string { return proto.CompactTextString(m) }
func (*CleanNodesInGroupResponse) ProtoMessage()    {}
func (*CleanNodesInGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{183}
}

func (m *CleanNodesInGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanNodesInGroupResponse.Unmarshal(m, b)
}
func (m *CleanNodesInGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanNodesInGroupResponse.Marshal(b, m, deterministic)
}
func (m *CleanNodesInGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanNodesInGroupResponse.Merge(m, src)
}
func (m *CleanNodesInGroupResponse) XXX_Size() int {
	return xxx_messageInfo_CleanNodesInGroupResponse.Size(m)
}
func (m *CleanNodesInGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanNodesInGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CleanNodesInGroupResponse proto.InternalMessageInfo

func (m *CleanNodesInGroupResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CleanNodesInGroupResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CleanNodesInGroupResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *CleanNodesInGroupResponse) GetData() *Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type CleanNodesInGroupV2Request struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Nodes                string   `protobuf:"bytes,2,opt,name=nodes,proto3" json:"nodes,omitempty"`
	NodeGroupID          string   `protobuf:"bytes,3,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	Operator             string   `protobuf:"bytes,4,opt,name=operator,proto3" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CleanNodesInGroupV2Request) Reset()         { *m = CleanNodesInGroupV2Request{} }
func (m *CleanNodesInGroupV2Request) String() string { return proto.CompactTextString(m) }
func (*CleanNodesInGroupV2Request) ProtoMessage()    {}
func (*CleanNodesInGroupV2Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{184}
}

func (m *CleanNodesInGroupV2Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanNodesInGroupV2Request.Unmarshal(m, b)
}
func (m *CleanNodesInGroupV2Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanNodesInGroupV2Request.Marshal(b, m, deterministic)
}
func (m *CleanNodesInGroupV2Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanNodesInGroupV2Request.Merge(m, src)
}
func (m *CleanNodesInGroupV2Request) XXX_Size() int {
	return xxx_messageInfo_CleanNodesInGroupV2Request.Size(m)
}
func (m *CleanNodesInGroupV2Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanNodesInGroupV2Request.DiscardUnknown(m)
}

var xxx_messageInfo_CleanNodesInGroupV2Request proto.InternalMessageInfo

func (m *CleanNodesInGroupV2Request) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *CleanNodesInGroupV2Request) GetNodes() string {
	if m != nil {
		return m.Nodes
	}
	return ""
}

func (m *CleanNodesInGroupV2Request) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *CleanNodesInGroupV2Request) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type CleanNodesInGroupV2Response struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Task    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CleanNodesInGroupV2Response) Reset()         { *m = CleanNodesInGroupV2Response{} }
func (m *CleanNodesInGroupV2Response) String() string { return proto.CompactTextString(m) }
func (*CleanNodesInGroupV2Response) ProtoMessage()    {}
func (*CleanNodesInGroupV2Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{185}
}

func (m *CleanNodesInGroupV2Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanNodesInGroupV2Response.Unmarshal(m, b)
}
func (m *CleanNodesInGroupV2Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanNodesInGroupV2Response.Marshal(b, m, deterministic)
}
func (m *CleanNodesInGroupV2Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanNodesInGroupV2Response.Merge(m, src)
}
func (m *CleanNodesInGroupV2Response) XXX_Size() int {
	return xxx_messageInfo_CleanNodesInGroupV2Response.Size(m)
}
func (m *CleanNodesInGroupV2Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanNodesInGroupV2Response.DiscardUnknown(m)
}

var xxx_messageInfo_CleanNodesInGroupV2Response proto.InternalMessageInfo

func (m *CleanNodesInGroupV2Response) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CleanNodesInGroupV2Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CleanNodesInGroupV2Response) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *CleanNodesInGroupV2Response) GetData() *Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListNodesInGroupRequest struct {
	NodeGroupID          string   `protobuf:"bytes,1,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	Output               string   `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListNodesInGroupRequest) Reset()         { *m = ListNodesInGroupRequest{} }
func (m *ListNodesInGroupRequest) String() string { return proto.CompactTextString(m) }
func (*ListNodesInGroupRequest) ProtoMessage()    {}
func (*ListNodesInGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{186}
}

func (m *ListNodesInGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodesInGroupRequest.Unmarshal(m, b)
}
func (m *ListNodesInGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodesInGroupRequest.Marshal(b, m, deterministic)
}
func (m *ListNodesInGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodesInGroupRequest.Merge(m, src)
}
func (m *ListNodesInGroupRequest) XXX_Size() int {
	return xxx_messageInfo_ListNodesInGroupRequest.Size(m)
}
func (m *ListNodesInGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodesInGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodesInGroupRequest proto.InternalMessageInfo

func (m *ListNodesInGroupRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *ListNodesInGroupRequest) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

type ListNodesInGroupResponse struct {
	Code                 uint32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool             `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*NodeGroupNode `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-" bson:"-"`
	XXX_unrecognized     []byte           `json:"-" bson:"-"`
	XXX_sizecache        int32            `json:"-" bson:"-"`
}

func (m *ListNodesInGroupResponse) Reset()         { *m = ListNodesInGroupResponse{} }
func (m *ListNodesInGroupResponse) String() string { return proto.CompactTextString(m) }
func (*ListNodesInGroupResponse) ProtoMessage()    {}
func (*ListNodesInGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{187}
}

func (m *ListNodesInGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodesInGroupResponse.Unmarshal(m, b)
}
func (m *ListNodesInGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodesInGroupResponse.Marshal(b, m, deterministic)
}
func (m *ListNodesInGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodesInGroupResponse.Merge(m, src)
}
func (m *ListNodesInGroupResponse) XXX_Size() int {
	return xxx_messageInfo_ListNodesInGroupResponse.Size(m)
}
func (m *ListNodesInGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodesInGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodesInGroupResponse proto.InternalMessageInfo

func (m *ListNodesInGroupResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListNodesInGroupResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListNodesInGroupResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListNodesInGroupResponse) GetData() []*NodeGroupNode {
	if m != nil {
		return m.Data
	}
	return nil
}

type NodeGroupNode struct {
	NodeID               string   `protobuf:"bytes,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	InnerIP              string   `protobuf:"bytes,2,opt,name=innerIP,proto3" json:"innerIP,omitempty"`
	InstanceType         string   `protobuf:"bytes,3,opt,name=instanceType,proto3" json:"instanceType,omitempty"`
	CPU                  uint32   `protobuf:"varint,4,opt,name=CPU,proto3" json:"CPU,omitempty"`
	Mem                  uint32   `protobuf:"varint,5,opt,name=mem,proto3" json:"mem,omitempty"`
	GPU                  uint32   `protobuf:"varint,6,opt,name=GPU,proto3" json:"GPU,omitempty"`
	Status               string   `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	ZoneID               string   `protobuf:"bytes,8,opt,name=zoneID,proto3" json:"zoneID,omitempty"`
	NodeGroupID          string   `protobuf:"bytes,9,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	ClusterID            string   `protobuf:"bytes,10,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	VPC                  string   `protobuf:"bytes,11,opt,name=VPC,proto3" json:"VPC,omitempty"`
	Region               string   `protobuf:"bytes,12,opt,name=region,proto3" json:"region,omitempty"`
	Passwd               string   `protobuf:"bytes,13,opt,name=passwd,proto3" json:"passwd,omitempty"`
	Zone                 uint32   `protobuf:"varint,14,opt,name=zone,proto3" json:"zone,omitempty"`
	DeviceID             string   `protobuf:"bytes,15,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	InstanceRole         string   `protobuf:"bytes,16,opt,name=instanceRole,proto3" json:"instanceRole,omitempty"`
	UnSchedulable        uint32   `protobuf:"varint,17,opt,name=unSchedulable,proto3" json:"unSchedulable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *NodeGroupNode) Reset()         { *m = NodeGroupNode{} }
func (m *NodeGroupNode) String() string { return proto.CompactTextString(m) }
func (*NodeGroupNode) ProtoMessage()    {}
func (*NodeGroupNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{188}
}

func (m *NodeGroupNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeGroupNode.Unmarshal(m, b)
}
func (m *NodeGroupNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeGroupNode.Marshal(b, m, deterministic)
}
func (m *NodeGroupNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeGroupNode.Merge(m, src)
}
func (m *NodeGroupNode) XXX_Size() int {
	return xxx_messageInfo_NodeGroupNode.Size(m)
}
func (m *NodeGroupNode) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeGroupNode.DiscardUnknown(m)
}

var xxx_messageInfo_NodeGroupNode proto.InternalMessageInfo

func (m *NodeGroupNode) GetNodeID() string {
	if m != nil {
		return m.NodeID
	}
	return ""
}

func (m *NodeGroupNode) GetInnerIP() string {
	if m != nil {
		return m.InnerIP
	}
	return ""
}

func (m *NodeGroupNode) GetInstanceType() string {
	if m != nil {
		return m.InstanceType
	}
	return ""
}

func (m *NodeGroupNode) GetCPU() uint32 {
	if m != nil {
		return m.CPU
	}
	return 0
}

func (m *NodeGroupNode) GetMem() uint32 {
	if m != nil {
		return m.Mem
	}
	return 0
}

func (m *NodeGroupNode) GetGPU() uint32 {
	if m != nil {
		return m.GPU
	}
	return 0
}

func (m *NodeGroupNode) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *NodeGroupNode) GetZoneID() string {
	if m != nil {
		return m.ZoneID
	}
	return ""
}

func (m *NodeGroupNode) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *NodeGroupNode) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *NodeGroupNode) GetVPC() string {
	if m != nil {
		return m.VPC
	}
	return ""
}

func (m *NodeGroupNode) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *NodeGroupNode) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

func (m *NodeGroupNode) GetZone() uint32 {
	if m != nil {
		return m.Zone
	}
	return 0
}

func (m *NodeGroupNode) GetDeviceID() string {
	if m != nil {
		return m.DeviceID
	}
	return ""
}

func (m *NodeGroupNode) GetInstanceRole() string {
	if m != nil {
		return m.InstanceRole
	}
	return ""
}

func (m *NodeGroupNode) GetUnSchedulable() uint32 {
	if m != nil {
		return m.UnSchedulable
	}
	return 0
}

type UpdateGroupDesiredSizeRequest struct {
	NodeGroupID          string   `protobuf:"bytes,1,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	DesiredSize          uint32   `protobuf:"varint,2,opt,name=desiredSize,proto3" json:"desiredSize,omitempty"`
	Operator             string   `protobuf:"bytes,3,opt,name=operator,proto3" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateGroupDesiredSizeRequest) Reset()         { *m = UpdateGroupDesiredSizeRequest{} }
func (m *UpdateGroupDesiredSizeRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateGroupDesiredSizeRequest) ProtoMessage()    {}
func (*UpdateGroupDesiredSizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{189}
}

func (m *UpdateGroupDesiredSizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateGroupDesiredSizeRequest.Unmarshal(m, b)
}
func (m *UpdateGroupDesiredSizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateGroupDesiredSizeRequest.Marshal(b, m, deterministic)
}
func (m *UpdateGroupDesiredSizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateGroupDesiredSizeRequest.Merge(m, src)
}
func (m *UpdateGroupDesiredSizeRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateGroupDesiredSizeRequest.Size(m)
}
func (m *UpdateGroupDesiredSizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateGroupDesiredSizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateGroupDesiredSizeRequest proto.InternalMessageInfo

func (m *UpdateGroupDesiredSizeRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *UpdateGroupDesiredSizeRequest) GetDesiredSize() uint32 {
	if m != nil {
		return m.DesiredSize
	}
	return 0
}

func (m *UpdateGroupDesiredSizeRequest) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type UpdateGroupDesiredSizeResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateGroupDesiredSizeResponse) Reset()         { *m = UpdateGroupDesiredSizeResponse{} }
func (m *UpdateGroupDesiredSizeResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateGroupDesiredSizeResponse) ProtoMessage()    {}
func (*UpdateGroupDesiredSizeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{190}
}

func (m *UpdateGroupDesiredSizeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateGroupDesiredSizeResponse.Unmarshal(m, b)
}
func (m *UpdateGroupDesiredSizeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateGroupDesiredSizeResponse.Marshal(b, m, deterministic)
}
func (m *UpdateGroupDesiredSizeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateGroupDesiredSizeResponse.Merge(m, src)
}
func (m *UpdateGroupDesiredSizeResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateGroupDesiredSizeResponse.Size(m)
}
func (m *UpdateGroupDesiredSizeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateGroupDesiredSizeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateGroupDesiredSizeResponse proto.InternalMessageInfo

func (m *UpdateGroupDesiredSizeResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateGroupDesiredSizeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateGroupDesiredSizeResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type UpdateGroupDesiredNodeRequest struct {
	NodeGroupID          string   `protobuf:"bytes,1,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	DesiredNode          uint32   `protobuf:"varint,2,opt,name=desiredNode,proto3" json:"desiredNode,omitempty"`
	Operator             string   `protobuf:"bytes,3,opt,name=operator,proto3" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateGroupDesiredNodeRequest) Reset()         { *m = UpdateGroupDesiredNodeRequest{} }
func (m *UpdateGroupDesiredNodeRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateGroupDesiredNodeRequest) ProtoMessage()    {}
func (*UpdateGroupDesiredNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{191}
}

func (m *UpdateGroupDesiredNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateGroupDesiredNodeRequest.Unmarshal(m, b)
}
func (m *UpdateGroupDesiredNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateGroupDesiredNodeRequest.Marshal(b, m, deterministic)
}
func (m *UpdateGroupDesiredNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateGroupDesiredNodeRequest.Merge(m, src)
}
func (m *UpdateGroupDesiredNodeRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateGroupDesiredNodeRequest.Size(m)
}
func (m *UpdateGroupDesiredNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateGroupDesiredNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateGroupDesiredNodeRequest proto.InternalMessageInfo

func (m *UpdateGroupDesiredNodeRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *UpdateGroupDesiredNodeRequest) GetDesiredNode() uint32 {
	if m != nil {
		return m.DesiredNode
	}
	return 0
}

func (m *UpdateGroupDesiredNodeRequest) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type UpdateGroupDesiredNodeResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Task    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateGroupDesiredNodeResponse) Reset()         { *m = UpdateGroupDesiredNodeResponse{} }
func (m *UpdateGroupDesiredNodeResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateGroupDesiredNodeResponse) ProtoMessage()    {}
func (*UpdateGroupDesiredNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{192}
}

func (m *UpdateGroupDesiredNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateGroupDesiredNodeResponse.Unmarshal(m, b)
}
func (m *UpdateGroupDesiredNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateGroupDesiredNodeResponse.Marshal(b, m, deterministic)
}
func (m *UpdateGroupDesiredNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateGroupDesiredNodeResponse.Merge(m, src)
}
func (m *UpdateGroupDesiredNodeResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateGroupDesiredNodeResponse.Size(m)
}
func (m *UpdateGroupDesiredNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateGroupDesiredNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateGroupDesiredNodeResponse proto.InternalMessageInfo

func (m *UpdateGroupDesiredNodeResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateGroupDesiredNodeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateGroupDesiredNodeResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *UpdateGroupDesiredNodeResponse) GetData() *Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type EnableNodeGroupAutoScaleRequest struct {
	NodeGroupID          string   `protobuf:"bytes,1,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *EnableNodeGroupAutoScaleRequest) Reset()         { *m = EnableNodeGroupAutoScaleRequest{} }
func (m *EnableNodeGroupAutoScaleRequest) String() string { return proto.CompactTextString(m) }
func (*EnableNodeGroupAutoScaleRequest) ProtoMessage()    {}
func (*EnableNodeGroupAutoScaleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{193}
}

func (m *EnableNodeGroupAutoScaleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnableNodeGroupAutoScaleRequest.Unmarshal(m, b)
}
func (m *EnableNodeGroupAutoScaleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnableNodeGroupAutoScaleRequest.Marshal(b, m, deterministic)
}
func (m *EnableNodeGroupAutoScaleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnableNodeGroupAutoScaleRequest.Merge(m, src)
}
func (m *EnableNodeGroupAutoScaleRequest) XXX_Size() int {
	return xxx_messageInfo_EnableNodeGroupAutoScaleRequest.Size(m)
}
func (m *EnableNodeGroupAutoScaleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnableNodeGroupAutoScaleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnableNodeGroupAutoScaleRequest proto.InternalMessageInfo

func (m *EnableNodeGroupAutoScaleRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

type EnableNodeGroupAutoScaleResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *EnableNodeGroupAutoScaleResponse) Reset()         { *m = EnableNodeGroupAutoScaleResponse{} }
func (m *EnableNodeGroupAutoScaleResponse) String() string { return proto.CompactTextString(m) }
func (*EnableNodeGroupAutoScaleResponse) ProtoMessage()    {}
func (*EnableNodeGroupAutoScaleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{194}
}

func (m *EnableNodeGroupAutoScaleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnableNodeGroupAutoScaleResponse.Unmarshal(m, b)
}
func (m *EnableNodeGroupAutoScaleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnableNodeGroupAutoScaleResponse.Marshal(b, m, deterministic)
}
func (m *EnableNodeGroupAutoScaleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnableNodeGroupAutoScaleResponse.Merge(m, src)
}
func (m *EnableNodeGroupAutoScaleResponse) XXX_Size() int {
	return xxx_messageInfo_EnableNodeGroupAutoScaleResponse.Size(m)
}
func (m *EnableNodeGroupAutoScaleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EnableNodeGroupAutoScaleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EnableNodeGroupAutoScaleResponse proto.InternalMessageInfo

func (m *EnableNodeGroupAutoScaleResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *EnableNodeGroupAutoScaleResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *EnableNodeGroupAutoScaleResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type DisableNodeGroupAutoScaleRequest struct {
	NodeGroupID          string   `protobuf:"bytes,1,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DisableNodeGroupAutoScaleRequest) Reset()         { *m = DisableNodeGroupAutoScaleRequest{} }
func (m *DisableNodeGroupAutoScaleRequest) String() string { return proto.CompactTextString(m) }
func (*DisableNodeGroupAutoScaleRequest) ProtoMessage()    {}
func (*DisableNodeGroupAutoScaleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{195}
}

func (m *DisableNodeGroupAutoScaleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisableNodeGroupAutoScaleRequest.Unmarshal(m, b)
}
func (m *DisableNodeGroupAutoScaleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisableNodeGroupAutoScaleRequest.Marshal(b, m, deterministic)
}
func (m *DisableNodeGroupAutoScaleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisableNodeGroupAutoScaleRequest.Merge(m, src)
}
func (m *DisableNodeGroupAutoScaleRequest) XXX_Size() int {
	return xxx_messageInfo_DisableNodeGroupAutoScaleRequest.Size(m)
}
func (m *DisableNodeGroupAutoScaleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisableNodeGroupAutoScaleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisableNodeGroupAutoScaleRequest proto.InternalMessageInfo

func (m *DisableNodeGroupAutoScaleRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

type DisableNodeGroupAutoScaleResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DisableNodeGroupAutoScaleResponse) Reset()         { *m = DisableNodeGroupAutoScaleResponse{} }
func (m *DisableNodeGroupAutoScaleResponse) String() string { return proto.CompactTextString(m) }
func (*DisableNodeGroupAutoScaleResponse) ProtoMessage()    {}
func (*DisableNodeGroupAutoScaleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{196}
}

func (m *DisableNodeGroupAutoScaleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisableNodeGroupAutoScaleResponse.Unmarshal(m, b)
}
func (m *DisableNodeGroupAutoScaleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisableNodeGroupAutoScaleResponse.Marshal(b, m, deterministic)
}
func (m *DisableNodeGroupAutoScaleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisableNodeGroupAutoScaleResponse.Merge(m, src)
}
func (m *DisableNodeGroupAutoScaleResponse) XXX_Size() int {
	return xxx_messageInfo_DisableNodeGroupAutoScaleResponse.Size(m)
}
func (m *DisableNodeGroupAutoScaleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DisableNodeGroupAutoScaleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DisableNodeGroupAutoScaleResponse proto.InternalMessageInfo

func (m *DisableNodeGroupAutoScaleResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DisableNodeGroupAutoScaleResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DisableNodeGroupAutoScaleResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type CreateTaskRequest struct {
	TaskType             string           `protobuf:"bytes,1,opt,name=taskType,proto3" json:"taskType,omitempty"`
	Status               string           `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message              string           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Start                string           `protobuf:"bytes,4,opt,name=start,proto3" json:"start,omitempty"`
	End                  string           `protobuf:"bytes,5,opt,name=end,proto3" json:"end,omitempty"`
	ExecutionTime        uint32           `protobuf:"varint,6,opt,name=executionTime,proto3" json:"executionTime,omitempty"`
	CurrentStep          string           `protobuf:"bytes,7,opt,name=currentStep,proto3" json:"currentStep,omitempty"`
	StepSequence         []string         `protobuf:"bytes,8,rep,name=stepSequence,proto3" json:"stepSequence,omitempty"`
	Steps                map[string]*Step `protobuf:"bytes,9,rep,name=steps,proto3" json:"steps,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ClusterID            string           `protobuf:"bytes,10,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ProjectID            string           `protobuf:"bytes,11,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Creator              string           `protobuf:"bytes,12,opt,name=creator,proto3" json:"creator,omitempty"`
	LastUpdate           string           `protobuf:"bytes,13,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-" bson:"-"`
	XXX_unrecognized     []byte           `json:"-" bson:"-"`
	XXX_sizecache        int32            `json:"-" bson:"-"`
}

func (m *CreateTaskRequest) Reset()         { *m = CreateTaskRequest{} }
func (m *CreateTaskRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTaskRequest) ProtoMessage()    {}
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{197}
}

func (m *CreateTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTaskRequest.Unmarshal(m, b)
}
func (m *CreateTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTaskRequest.Marshal(b, m, deterministic)
}
func (m *CreateTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTaskRequest.Merge(m, src)
}
func (m *CreateTaskRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTaskRequest.Size(m)
}
func (m *CreateTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTaskRequest proto.InternalMessageInfo

func (m *CreateTaskRequest) GetTaskType() string {
	if m != nil {
		return m.TaskType
	}
	return ""
}

func (m *CreateTaskRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *CreateTaskRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateTaskRequest) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *CreateTaskRequest) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

func (m *CreateTaskRequest) GetExecutionTime() uint32 {
	if m != nil {
		return m.ExecutionTime
	}
	return 0
}

func (m *CreateTaskRequest) GetCurrentStep() string {
	if m != nil {
		return m.CurrentStep
	}
	return ""
}

func (m *CreateTaskRequest) GetStepSequence() []string {
	if m != nil {
		return m.StepSequence
	}
	return nil
}

func (m *CreateTaskRequest) GetSteps() map[string]*Step {
	if m != nil {
		return m.Steps
	}
	return nil
}

func (m *CreateTaskRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *CreateTaskRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *CreateTaskRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CreateTaskRequest) GetLastUpdate() string {
	if m != nil {
		return m.LastUpdate
	}
	return ""
}

type CreateTaskResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Task    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CreateTaskResponse) Reset()         { *m = CreateTaskResponse{} }
func (m *CreateTaskResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTaskResponse) ProtoMessage()    {}
func (*CreateTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{198}
}

func (m *CreateTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTaskResponse.Unmarshal(m, b)
}
func (m *CreateTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTaskResponse.Marshal(b, m, deterministic)
}
func (m *CreateTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTaskResponse.Merge(m, src)
}
func (m *CreateTaskResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTaskResponse.Size(m)
}
func (m *CreateTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTaskResponse proto.InternalMessageInfo

func (m *CreateTaskResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateTaskResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateTaskResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *CreateTaskResponse) GetData() *Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type RetryTaskRequest struct {
	TaskID               string   `protobuf:"bytes,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Updater              string   `protobuf:"bytes,2,opt,name=updater,proto3" json:"updater,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *RetryTaskRequest) Reset()         { *m = RetryTaskRequest{} }
func (m *RetryTaskRequest) String() string { return proto.CompactTextString(m) }
func (*RetryTaskRequest) ProtoMessage()    {}
func (*RetryTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{199}
}

func (m *RetryTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetryTaskRequest.Unmarshal(m, b)
}
func (m *RetryTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetryTaskRequest.Marshal(b, m, deterministic)
}
func (m *RetryTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetryTaskRequest.Merge(m, src)
}
func (m *RetryTaskRequest) XXX_Size() int {
	return xxx_messageInfo_RetryTaskRequest.Size(m)
}
func (m *RetryTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RetryTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RetryTaskRequest proto.InternalMessageInfo

func (m *RetryTaskRequest) GetTaskID() string {
	if m != nil {
		return m.TaskID
	}
	return ""
}

func (m *RetryTaskRequest) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

type RetryTaskResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Task    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *RetryTaskResponse) Reset()         { *m = RetryTaskResponse{} }
func (m *RetryTaskResponse) String() string { return proto.CompactTextString(m) }
func (*RetryTaskResponse) ProtoMessage()    {}
func (*RetryTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{200}
}

func (m *RetryTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetryTaskResponse.Unmarshal(m, b)
}
func (m *RetryTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetryTaskResponse.Marshal(b, m, deterministic)
}
func (m *RetryTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetryTaskResponse.Merge(m, src)
}
func (m *RetryTaskResponse) XXX_Size() int {
	return xxx_messageInfo_RetryTaskResponse.Size(m)
}
func (m *RetryTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RetryTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RetryTaskResponse proto.InternalMessageInfo

func (m *RetryTaskResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RetryTaskResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *RetryTaskResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *RetryTaskResponse) GetData() *Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateTaskRequest struct {
	TaskID               string           `protobuf:"bytes,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Status               string           `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message              string           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	End                  string           `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	ExecutionTime        uint32           `protobuf:"varint,5,opt,name=executionTime,proto3" json:"executionTime,omitempty"`
	CurrentStep          string           `protobuf:"bytes,6,opt,name=currentStep,proto3" json:"currentStep,omitempty"`
	Steps                map[string]*Step `protobuf:"bytes,7,rep,name=steps,proto3" json:"steps,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Updater              string           `protobuf:"bytes,8,opt,name=updater,proto3" json:"updater,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-" bson:"-"`
	XXX_unrecognized     []byte           `json:"-" bson:"-"`
	XXX_sizecache        int32            `json:"-" bson:"-"`
}

func (m *UpdateTaskRequest) Reset()         { *m = UpdateTaskRequest{} }
func (m *UpdateTaskRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTaskRequest) ProtoMessage()    {}
func (*UpdateTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{201}
}

func (m *UpdateTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTaskRequest.Unmarshal(m, b)
}
func (m *UpdateTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTaskRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTaskRequest.Merge(m, src)
}
func (m *UpdateTaskRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTaskRequest.Size(m)
}
func (m *UpdateTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTaskRequest proto.InternalMessageInfo

func (m *UpdateTaskRequest) GetTaskID() string {
	if m != nil {
		return m.TaskID
	}
	return ""
}

func (m *UpdateTaskRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *UpdateTaskRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateTaskRequest) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

func (m *UpdateTaskRequest) GetExecutionTime() uint32 {
	if m != nil {
		return m.ExecutionTime
	}
	return 0
}

func (m *UpdateTaskRequest) GetCurrentStep() string {
	if m != nil {
		return m.CurrentStep
	}
	return ""
}

func (m *UpdateTaskRequest) GetSteps() map[string]*Step {
	if m != nil {
		return m.Steps
	}
	return nil
}

func (m *UpdateTaskRequest) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

type UpdateTaskResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Task    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateTaskResponse) Reset()         { *m = UpdateTaskResponse{} }
func (m *UpdateTaskResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateTaskResponse) ProtoMessage()    {}
func (*UpdateTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{202}
}

func (m *UpdateTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTaskResponse.Unmarshal(m, b)
}
func (m *UpdateTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTaskResponse.Marshal(b, m, deterministic)
}
func (m *UpdateTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTaskResponse.Merge(m, src)
}
func (m *UpdateTaskResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateTaskResponse.Size(m)
}
func (m *UpdateTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTaskResponse proto.InternalMessageInfo

func (m *UpdateTaskResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateTaskResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateTaskResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *UpdateTaskResponse) GetData() *Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteTaskRequest struct {
	TaskID               string   `protobuf:"bytes,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	IsForce              bool     `protobuf:"varint,2,opt,name=isForce,proto3" json:"isForce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteTaskRequest) Reset()         { *m = DeleteTaskRequest{} }
func (m *DeleteTaskRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTaskRequest) ProtoMessage()    {}
func (*DeleteTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{203}
}

func (m *DeleteTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTaskRequest.Unmarshal(m, b)
}
func (m *DeleteTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTaskRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTaskRequest.Merge(m, src)
}
func (m *DeleteTaskRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTaskRequest.Size(m)
}
func (m *DeleteTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTaskRequest proto.InternalMessageInfo

func (m *DeleteTaskRequest) GetTaskID() string {
	if m != nil {
		return m.TaskID
	}
	return ""
}

func (m *DeleteTaskRequest) GetIsForce() bool {
	if m != nil {
		return m.IsForce
	}
	return false
}

type DeleteTaskResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Task    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteTaskResponse) Reset()         { *m = DeleteTaskResponse{} }
func (m *DeleteTaskResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteTaskResponse) ProtoMessage()    {}
func (*DeleteTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{204}
}

func (m *DeleteTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTaskResponse.Unmarshal(m, b)
}
func (m *DeleteTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTaskResponse.Marshal(b, m, deterministic)
}
func (m *DeleteTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTaskResponse.Merge(m, src)
}
func (m *DeleteTaskResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteTaskResponse.Size(m)
}
func (m *DeleteTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTaskResponse proto.InternalMessageInfo

func (m *DeleteTaskResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteTaskResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteTaskResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *DeleteTaskResponse) GetData() *Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetTaskRequest struct {
	TaskID               string   `protobuf:"bytes,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetTaskRequest) Reset()         { *m = GetTaskRequest{} }
func (m *GetTaskRequest) String() string { return proto.CompactTextString(m) }
func (*GetTaskRequest) ProtoMessage()    {}
func (*GetTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{205}
}

func (m *GetTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTaskRequest.Unmarshal(m, b)
}
func (m *GetTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTaskRequest.Marshal(b, m, deterministic)
}
func (m *GetTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTaskRequest.Merge(m, src)
}
func (m *GetTaskRequest) XXX_Size() int {
	return xxx_messageInfo_GetTaskRequest.Size(m)
}
func (m *GetTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTaskRequest proto.InternalMessageInfo

func (m *GetTaskRequest) GetTaskID() string {
	if m != nil {
		return m.TaskID
	}
	return ""
}

type GetTaskResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Task    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetTaskResponse) Reset()         { *m = GetTaskResponse{} }
func (m *GetTaskResponse) String() string { return proto.CompactTextString(m) }
func (*GetTaskResponse) ProtoMessage()    {}
func (*GetTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{206}
}

func (m *GetTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTaskResponse.Unmarshal(m, b)
}
func (m *GetTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTaskResponse.Marshal(b, m, deterministic)
}
func (m *GetTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTaskResponse.Merge(m, src)
}
func (m *GetTaskResponse) XXX_Size() int {
	return xxx_messageInfo_GetTaskResponse.Size(m)
}
func (m *GetTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTaskResponse proto.InternalMessageInfo

func (m *GetTaskResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetTaskResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetTaskResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetTaskResponse) GetData() *Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListTaskRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ProjectID            string   `protobuf:"bytes,2,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Creator              string   `protobuf:"bytes,3,opt,name=creator,proto3" json:"creator,omitempty"`
	Updater              string   `protobuf:"bytes,4,opt,name=updater,proto3" json:"updater,omitempty"`
	TaskType             string   `protobuf:"bytes,5,opt,name=taskType,proto3" json:"taskType,omitempty"`
	Status               string   `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	NodeIP               string   `protobuf:"bytes,7,opt,name=nodeIP,proto3" json:"nodeIP,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListTaskRequest) Reset()         { *m = ListTaskRequest{} }
func (m *ListTaskRequest) String() string { return proto.CompactTextString(m) }
func (*ListTaskRequest) ProtoMessage()    {}
func (*ListTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{207}
}

func (m *ListTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTaskRequest.Unmarshal(m, b)
}
func (m *ListTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTaskRequest.Marshal(b, m, deterministic)
}
func (m *ListTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTaskRequest.Merge(m, src)
}
func (m *ListTaskRequest) XXX_Size() int {
	return xxx_messageInfo_ListTaskRequest.Size(m)
}
func (m *ListTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTaskRequest proto.InternalMessageInfo

func (m *ListTaskRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ListTaskRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *ListTaskRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *ListTaskRequest) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *ListTaskRequest) GetTaskType() string {
	if m != nil {
		return m.TaskType
	}
	return ""
}

func (m *ListTaskRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ListTaskRequest) GetNodeIP() string {
	if m != nil {
		return m.NodeIP
	}
	return ""
}

type ListTaskResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*Task  `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	LatestTask           *Task    `protobuf:"bytes,5,opt,name=latestTask,proto3" json:"latestTask,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListTaskResponse) Reset()         { *m = ListTaskResponse{} }
func (m *ListTaskResponse) String() string { return proto.CompactTextString(m) }
func (*ListTaskResponse) ProtoMessage()    {}
func (*ListTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{208}
}

func (m *ListTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTaskResponse.Unmarshal(m, b)
}
func (m *ListTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTaskResponse.Marshal(b, m, deterministic)
}
func (m *ListTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTaskResponse.Merge(m, src)
}
func (m *ListTaskResponse) XXX_Size() int {
	return xxx_messageInfo_ListTaskResponse.Size(m)
}
func (m *ListTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTaskResponse proto.InternalMessageInfo

func (m *ListTaskResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListTaskResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListTaskResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListTaskResponse) GetData() []*Task {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListTaskResponse) GetLatestTask() *Task {
	if m != nil {
		return m.LatestTask
	}
	return nil
}

type CreateAutoScalingOptionRequest struct {
	IsScaleDownEnable                bool     `protobuf:"varint,1,opt,name=isScaleDownEnable,proto3" json:"isScaleDownEnable,omitempty"`
	Expander                         string   `protobuf:"bytes,2,opt,name=expander,proto3" json:"expander,omitempty"`
	MaxEmptyBulkDelete               uint32   `protobuf:"varint,3,opt,name=maxEmptyBulkDelete,proto3" json:"maxEmptyBulkDelete,omitempty"`
	ScaleDownDelay                   uint32   `protobuf:"varint,4,opt,name=scaleDownDelay,proto3" json:"scaleDownDelay,omitempty"`
	ScaleDownUnneededTime            uint32   `protobuf:"varint,5,opt,name=scaleDownUnneededTime,proto3" json:"scaleDownUnneededTime,omitempty"`
	ScaleDownUtilizationThreahold    uint32   `protobuf:"varint,6,opt,name=scaleDownUtilizationThreahold,proto3" json:"scaleDownUtilizationThreahold,omitempty"`
	SkipNodesWithLocalStorage        bool     `protobuf:"varint,7,opt,name=skipNodesWithLocalStorage,proto3" json:"skipNodesWithLocalStorage,omitempty"`
	SkipNodesWithSystemPods          bool     `protobuf:"varint,8,opt,name=skipNodesWithSystemPods,proto3" json:"skipNodesWithSystemPods,omitempty"`
	IgnoreDaemonSetsUtilization      bool     `protobuf:"varint,9,opt,name=ignoreDaemonSetsUtilization,proto3" json:"ignoreDaemonSetsUtilization,omitempty"`
	OkTotalUnreadyCount              uint32   `protobuf:"varint,10,opt,name=okTotalUnreadyCount,proto3" json:"okTotalUnreadyCount,omitempty"`
	MaxTotalUnreadyPercentage        uint32   `protobuf:"varint,11,opt,name=maxTotalUnreadyPercentage,proto3" json:"maxTotalUnreadyPercentage,omitempty"`
	ScaleDownUnreadyTime             uint32   `protobuf:"varint,12,opt,name=scaleDownUnreadyTime,proto3" json:"scaleDownUnreadyTime,omitempty"`
	UnregisteredNodeRemovalTime      uint32   `protobuf:"varint,13,opt,name=unregisteredNodeRemovalTime,proto3" json:"unregisteredNodeRemovalTime,omitempty"`
	ClusterID                        string   `protobuf:"bytes,14,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Creator                          string   `protobuf:"bytes,15,opt,name=creator,proto3" json:"creator,omitempty"`
	Provider                         string   `protobuf:"bytes,16,opt,name=provider,proto3" json:"provider,omitempty"`
	EnableAutoscale                  bool     `protobuf:"varint,17,opt,name=enableAutoscale,proto3" json:"enableAutoscale,omitempty"`
	BufferResourceRatio              uint32   `protobuf:"varint,18,opt,name=bufferResourceRatio,proto3" json:"bufferResourceRatio,omitempty"`
	MaxGracefulTerminationSec        uint32   `protobuf:"varint,19,opt,name=maxGracefulTerminationSec,proto3" json:"maxGracefulTerminationSec,omitempty"`
	ScanInterval                     uint32   `protobuf:"varint,20,opt,name=scanInterval,proto3" json:"scanInterval,omitempty"`
	MaxNodeProvisionTime             uint32   `protobuf:"varint,21,opt,name=maxNodeProvisionTime,proto3" json:"maxNodeProvisionTime,omitempty"`
	ScaleUpFromZero                  bool     `protobuf:"varint,22,opt,name=scaleUpFromZero,proto3" json:"scaleUpFromZero,omitempty"`
	ScaleDownDelayAfterAdd           uint32   `protobuf:"varint,23,opt,name=scaleDownDelayAfterAdd,proto3" json:"scaleDownDelayAfterAdd,omitempty"`
	ScaleDownDelayAfterDelete        uint32   `protobuf:"varint,24,opt,name=scaleDownDelayAfterDelete,proto3" json:"scaleDownDelayAfterDelete,omitempty"`
	ScaleDownDelayAfterFailure       uint32   `protobuf:"varint,25,opt,name=scaleDownDelayAfterFailure,proto3" json:"scaleDownDelayAfterFailure,omitempty"`
	ScaleDownGpuUtilizationThreshold uint32   `protobuf:"varint,26,opt,name=scaleDownGpuUtilizationThreshold,proto3" json:"scaleDownGpuUtilizationThreshold,omitempty"`
	XXX_NoUnkeyedLiteral             struct{} `json:"-" bson:"-"`
	XXX_unrecognized                 []byte   `json:"-" bson:"-"`
	XXX_sizecache                    int32    `json:"-" bson:"-"`
}

func (m *CreateAutoScalingOptionRequest) Reset()         { *m = CreateAutoScalingOptionRequest{} }
func (m *CreateAutoScalingOptionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAutoScalingOptionRequest) ProtoMessage()    {}
func (*CreateAutoScalingOptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{209}
}

func (m *CreateAutoScalingOptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAutoScalingOptionRequest.Unmarshal(m, b)
}
func (m *CreateAutoScalingOptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAutoScalingOptionRequest.Marshal(b, m, deterministic)
}
func (m *CreateAutoScalingOptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAutoScalingOptionRequest.Merge(m, src)
}
func (m *CreateAutoScalingOptionRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAutoScalingOptionRequest.Size(m)
}
func (m *CreateAutoScalingOptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAutoScalingOptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAutoScalingOptionRequest proto.InternalMessageInfo

func (m *CreateAutoScalingOptionRequest) GetIsScaleDownEnable() bool {
	if m != nil {
		return m.IsScaleDownEnable
	}
	return false
}

func (m *CreateAutoScalingOptionRequest) GetExpander() string {
	if m != nil {
		return m.Expander
	}
	return ""
}

func (m *CreateAutoScalingOptionRequest) GetMaxEmptyBulkDelete() uint32 {
	if m != nil {
		return m.MaxEmptyBulkDelete
	}
	return 0
}

func (m *CreateAutoScalingOptionRequest) GetScaleDownDelay() uint32 {
	if m != nil {
		return m.ScaleDownDelay
	}
	return 0
}

func (m *CreateAutoScalingOptionRequest) GetScaleDownUnneededTime() uint32 {
	if m != nil {
		return m.ScaleDownUnneededTime
	}
	return 0
}

func (m *CreateAutoScalingOptionRequest) GetScaleDownUtilizationThreahold() uint32 {
	if m != nil {
		return m.ScaleDownUtilizationThreahold
	}
	return 0
}

func (m *CreateAutoScalingOptionRequest) GetSkipNodesWithLocalStorage() bool {
	if m != nil {
		return m.SkipNodesWithLocalStorage
	}
	return false
}

func (m *CreateAutoScalingOptionRequest) GetSkipNodesWithSystemPods() bool {
	if m != nil {
		return m.SkipNodesWithSystemPods
	}
	return false
}

func (m *CreateAutoScalingOptionRequest) GetIgnoreDaemonSetsUtilization() bool {
	if m != nil {
		return m.IgnoreDaemonSetsUtilization
	}
	return false
}

func (m *CreateAutoScalingOptionRequest) GetOkTotalUnreadyCount() uint32 {
	if m != nil {
		return m.OkTotalUnreadyCount
	}
	return 0
}

func (m *CreateAutoScalingOptionRequest) GetMaxTotalUnreadyPercentage() uint32 {
	if m != nil {
		return m.MaxTotalUnreadyPercentage
	}
	return 0
}

func (m *CreateAutoScalingOptionRequest) GetScaleDownUnreadyTime() uint32 {
	if m != nil {
		return m.ScaleDownUnreadyTime
	}
	return 0
}

func (m *CreateAutoScalingOptionRequest) GetUnregisteredNodeRemovalTime() uint32 {
	if m != nil {
		return m.UnregisteredNodeRemovalTime
	}
	return 0
}

func (m *CreateAutoScalingOptionRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *CreateAutoScalingOptionRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CreateAutoScalingOptionRequest) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *CreateAutoScalingOptionRequest) GetEnableAutoscale() bool {
	if m != nil {
		return m.EnableAutoscale
	}
	return false
}

func (m *CreateAutoScalingOptionRequest) GetBufferResourceRatio() uint32 {
	if m != nil {
		return m.BufferResourceRatio
	}
	return 0
}

func (m *CreateAutoScalingOptionRequest) GetMaxGracefulTerminationSec() uint32 {
	if m != nil {
		return m.MaxGracefulTerminationSec
	}
	return 0
}

func (m *CreateAutoScalingOptionRequest) GetScanInterval() uint32 {
	if m != nil {
		return m.ScanInterval
	}
	return 0
}

func (m *CreateAutoScalingOptionRequest) GetMaxNodeProvisionTime() uint32 {
	if m != nil {
		return m.MaxNodeProvisionTime
	}
	return 0
}

func (m *CreateAutoScalingOptionRequest) GetScaleUpFromZero() bool {
	if m != nil {
		return m.ScaleUpFromZero
	}
	return false
}

func (m *CreateAutoScalingOptionRequest) GetScaleDownDelayAfterAdd() uint32 {
	if m != nil {
		return m.ScaleDownDelayAfterAdd
	}
	return 0
}

func (m *CreateAutoScalingOptionRequest) GetScaleDownDelayAfterDelete() uint32 {
	if m != nil {
		return m.ScaleDownDelayAfterDelete
	}
	return 0
}

func (m *CreateAutoScalingOptionRequest) GetScaleDownDelayAfterFailure() uint32 {
	if m != nil {
		return m.ScaleDownDelayAfterFailure
	}
	return 0
}

func (m *CreateAutoScalingOptionRequest) GetScaleDownGpuUtilizationThreshold() uint32 {
	if m != nil {
		return m.ScaleDownGpuUtilizationThreshold
	}
	return 0
}

type CreateAutoScalingOptionResponse struct {
	Code                 uint32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                      `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *ClusterAutoScalingOption `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-" bson:"-"`
	XXX_unrecognized     []byte                    `json:"-" bson:"-"`
	XXX_sizecache        int32                     `json:"-" bson:"-"`
}

func (m *CreateAutoScalingOptionResponse) Reset()         { *m = CreateAutoScalingOptionResponse{} }
func (m *CreateAutoScalingOptionResponse) String() string { return proto.CompactTextString(m) }
func (*CreateAutoScalingOptionResponse) ProtoMessage()    {}
func (*CreateAutoScalingOptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{210}
}

func (m *CreateAutoScalingOptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAutoScalingOptionResponse.Unmarshal(m, b)
}
func (m *CreateAutoScalingOptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAutoScalingOptionResponse.Marshal(b, m, deterministic)
}
func (m *CreateAutoScalingOptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAutoScalingOptionResponse.Merge(m, src)
}
func (m *CreateAutoScalingOptionResponse) XXX_Size() int {
	return xxx_messageInfo_CreateAutoScalingOptionResponse.Size(m)
}
func (m *CreateAutoScalingOptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAutoScalingOptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAutoScalingOptionResponse proto.InternalMessageInfo

func (m *CreateAutoScalingOptionResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateAutoScalingOptionResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateAutoScalingOptionResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *CreateAutoScalingOptionResponse) GetData() *ClusterAutoScalingOption {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateAutoScalingOptionRequest struct {
	IsScaleDownEnable                bool     `protobuf:"varint,1,opt,name=isScaleDownEnable,proto3" json:"isScaleDownEnable,omitempty"`
	Expander                         string   `protobuf:"bytes,2,opt,name=expander,proto3" json:"expander,omitempty"`
	MaxEmptyBulkDelete               uint32   `protobuf:"varint,3,opt,name=maxEmptyBulkDelete,proto3" json:"maxEmptyBulkDelete,omitempty"`
	ScaleDownDelay                   uint32   `protobuf:"varint,4,opt,name=scaleDownDelay,proto3" json:"scaleDownDelay,omitempty"`
	ScaleDownUnneededTime            uint32   `protobuf:"varint,5,opt,name=scaleDownUnneededTime,proto3" json:"scaleDownUnneededTime,omitempty"`
	ScaleDownUtilizationThreahold    uint32   `protobuf:"varint,6,opt,name=scaleDownUtilizationThreahold,proto3" json:"scaleDownUtilizationThreahold,omitempty"`
	SkipNodesWithLocalStorage        bool     `protobuf:"varint,7,opt,name=skipNodesWithLocalStorage,proto3" json:"skipNodesWithLocalStorage,omitempty"`
	SkipNodesWithSystemPods          bool     `protobuf:"varint,8,opt,name=skipNodesWithSystemPods,proto3" json:"skipNodesWithSystemPods,omitempty"`
	IgnoreDaemonSetsUtilization      bool     `protobuf:"varint,9,opt,name=ignoreDaemonSetsUtilization,proto3" json:"ignoreDaemonSetsUtilization,omitempty"`
	OkTotalUnreadyCount              uint32   `protobuf:"varint,10,opt,name=okTotalUnreadyCount,proto3" json:"okTotalUnreadyCount,omitempty"`
	MaxTotalUnreadyPercentage        uint32   `protobuf:"varint,11,opt,name=maxTotalUnreadyPercentage,proto3" json:"maxTotalUnreadyPercentage,omitempty"`
	ScaleDownUnreadyTime             uint32   `protobuf:"varint,12,opt,name=scaleDownUnreadyTime,proto3" json:"scaleDownUnreadyTime,omitempty"`
	UnregisteredNodeRemovalTime      uint32   `protobuf:"varint,13,opt,name=unregisteredNodeRemovalTime,proto3" json:"unregisteredNodeRemovalTime,omitempty"`
	ProjectID                        string   `protobuf:"bytes,14,opt,name=projectID,proto3" json:"projectID,omitempty"`
	ClusterID                        string   `protobuf:"bytes,15,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Updater                          string   `protobuf:"bytes,16,opt,name=updater,proto3" json:"updater,omitempty"`
	Provider                         string   `protobuf:"bytes,17,opt,name=provider,proto3" json:"provider,omitempty"`
	ScaleDownGpuUtilizationThreshold uint32   `protobuf:"varint,18,opt,name=scaleDownGpuUtilizationThreshold,proto3" json:"scaleDownGpuUtilizationThreshold,omitempty"`
	BufferResourceRatio              uint32   `protobuf:"varint,19,opt,name=bufferResourceRatio,proto3" json:"bufferResourceRatio,omitempty"`
	MaxGracefulTerminationSec        uint32   `protobuf:"varint,20,opt,name=maxGracefulTerminationSec,proto3" json:"maxGracefulTerminationSec,omitempty"`
	ScanInterval                     uint32   `protobuf:"varint,21,opt,name=scanInterval,proto3" json:"scanInterval,omitempty"`
	MaxNodeProvisionTime             uint32   `protobuf:"varint,22,opt,name=maxNodeProvisionTime,proto3" json:"maxNodeProvisionTime,omitempty"`
	ScaleUpFromZero                  bool     `protobuf:"varint,23,opt,name=scaleUpFromZero,proto3" json:"scaleUpFromZero,omitempty"`
	ScaleDownDelayAfterAdd           uint32   `protobuf:"varint,24,opt,name=scaleDownDelayAfterAdd,proto3" json:"scaleDownDelayAfterAdd,omitempty"`
	ScaleDownDelayAfterDelete        uint32   `protobuf:"varint,25,opt,name=scaleDownDelayAfterDelete,proto3" json:"scaleDownDelayAfterDelete,omitempty"`
	ScaleDownDelayAfterFailure       uint32   `protobuf:"varint,26,opt,name=scaleDownDelayAfterFailure,proto3" json:"scaleDownDelayAfterFailure,omitempty"`
	XXX_NoUnkeyedLiteral             struct{} `json:"-" bson:"-"`
	XXX_unrecognized                 []byte   `json:"-" bson:"-"`
	XXX_sizecache                    int32    `json:"-" bson:"-"`
}

func (m *UpdateAutoScalingOptionRequest) Reset()         { *m = UpdateAutoScalingOptionRequest{} }
func (m *UpdateAutoScalingOptionRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateAutoScalingOptionRequest) ProtoMessage()    {}
func (*UpdateAutoScalingOptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{211}
}

func (m *UpdateAutoScalingOptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAutoScalingOptionRequest.Unmarshal(m, b)
}
func (m *UpdateAutoScalingOptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAutoScalingOptionRequest.Marshal(b, m, deterministic)
}
func (m *UpdateAutoScalingOptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAutoScalingOptionRequest.Merge(m, src)
}
func (m *UpdateAutoScalingOptionRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateAutoScalingOptionRequest.Size(m)
}
func (m *UpdateAutoScalingOptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAutoScalingOptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAutoScalingOptionRequest proto.InternalMessageInfo

func (m *UpdateAutoScalingOptionRequest) GetIsScaleDownEnable() bool {
	if m != nil {
		return m.IsScaleDownEnable
	}
	return false
}

func (m *UpdateAutoScalingOptionRequest) GetExpander() string {
	if m != nil {
		return m.Expander
	}
	return ""
}

func (m *UpdateAutoScalingOptionRequest) GetMaxEmptyBulkDelete() uint32 {
	if m != nil {
		return m.MaxEmptyBulkDelete
	}
	return 0
}

func (m *UpdateAutoScalingOptionRequest) GetScaleDownDelay() uint32 {
	if m != nil {
		return m.ScaleDownDelay
	}
	return 0
}

func (m *UpdateAutoScalingOptionRequest) GetScaleDownUnneededTime() uint32 {
	if m != nil {
		return m.ScaleDownUnneededTime
	}
	return 0
}

func (m *UpdateAutoScalingOptionRequest) GetScaleDownUtilizationThreahold() uint32 {
	if m != nil {
		return m.ScaleDownUtilizationThreahold
	}
	return 0
}

func (m *UpdateAutoScalingOptionRequest) GetSkipNodesWithLocalStorage() bool {
	if m != nil {
		return m.SkipNodesWithLocalStorage
	}
	return false
}

func (m *UpdateAutoScalingOptionRequest) GetSkipNodesWithSystemPods() bool {
	if m != nil {
		return m.SkipNodesWithSystemPods
	}
	return false
}

func (m *UpdateAutoScalingOptionRequest) GetIgnoreDaemonSetsUtilization() bool {
	if m != nil {
		return m.IgnoreDaemonSetsUtilization
	}
	return false
}

func (m *UpdateAutoScalingOptionRequest) GetOkTotalUnreadyCount() uint32 {
	if m != nil {
		return m.OkTotalUnreadyCount
	}
	return 0
}

func (m *UpdateAutoScalingOptionRequest) GetMaxTotalUnreadyPercentage() uint32 {
	if m != nil {
		return m.MaxTotalUnreadyPercentage
	}
	return 0
}

func (m *UpdateAutoScalingOptionRequest) GetScaleDownUnreadyTime() uint32 {
	if m != nil {
		return m.ScaleDownUnreadyTime
	}
	return 0
}

func (m *UpdateAutoScalingOptionRequest) GetUnregisteredNodeRemovalTime() uint32 {
	if m != nil {
		return m.UnregisteredNodeRemovalTime
	}
	return 0
}

func (m *UpdateAutoScalingOptionRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *UpdateAutoScalingOptionRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *UpdateAutoScalingOptionRequest) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *UpdateAutoScalingOptionRequest) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *UpdateAutoScalingOptionRequest) GetScaleDownGpuUtilizationThreshold() uint32 {
	if m != nil {
		return m.ScaleDownGpuUtilizationThreshold
	}
	return 0
}

func (m *UpdateAutoScalingOptionRequest) GetBufferResourceRatio() uint32 {
	if m != nil {
		return m.BufferResourceRatio
	}
	return 0
}

func (m *UpdateAutoScalingOptionRequest) GetMaxGracefulTerminationSec() uint32 {
	if m != nil {
		return m.MaxGracefulTerminationSec
	}
	return 0
}

func (m *UpdateAutoScalingOptionRequest) GetScanInterval() uint32 {
	if m != nil {
		return m.ScanInterval
	}
	return 0
}

func (m *UpdateAutoScalingOptionRequest) GetMaxNodeProvisionTime() uint32 {
	if m != nil {
		return m.MaxNodeProvisionTime
	}
	return 0
}

func (m *UpdateAutoScalingOptionRequest) GetScaleUpFromZero() bool {
	if m != nil {
		return m.ScaleUpFromZero
	}
	return false
}

func (m *UpdateAutoScalingOptionRequest) GetScaleDownDelayAfterAdd() uint32 {
	if m != nil {
		return m.ScaleDownDelayAfterAdd
	}
	return 0
}

func (m *UpdateAutoScalingOptionRequest) GetScaleDownDelayAfterDelete() uint32 {
	if m != nil {
		return m.ScaleDownDelayAfterDelete
	}
	return 0
}

func (m *UpdateAutoScalingOptionRequest) GetScaleDownDelayAfterFailure() uint32 {
	if m != nil {
		return m.ScaleDownDelayAfterFailure
	}
	return 0
}

type UpdateAutoScalingOptionResponse struct {
	Code                 uint32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                      `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *ClusterAutoScalingOption `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-" bson:"-"`
	XXX_unrecognized     []byte                    `json:"-" bson:"-"`
	XXX_sizecache        int32                     `json:"-" bson:"-"`
}

func (m *UpdateAutoScalingOptionResponse) Reset()         { *m = UpdateAutoScalingOptionResponse{} }
func (m *UpdateAutoScalingOptionResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateAutoScalingOptionResponse) ProtoMessage()    {}
func (*UpdateAutoScalingOptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{212}
}

func (m *UpdateAutoScalingOptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAutoScalingOptionResponse.Unmarshal(m, b)
}
func (m *UpdateAutoScalingOptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAutoScalingOptionResponse.Marshal(b, m, deterministic)
}
func (m *UpdateAutoScalingOptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAutoScalingOptionResponse.Merge(m, src)
}
func (m *UpdateAutoScalingOptionResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateAutoScalingOptionResponse.Size(m)
}
func (m *UpdateAutoScalingOptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAutoScalingOptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAutoScalingOptionResponse proto.InternalMessageInfo

func (m *UpdateAutoScalingOptionResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateAutoScalingOptionResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateAutoScalingOptionResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *UpdateAutoScalingOptionResponse) GetData() *ClusterAutoScalingOption {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteAutoScalingOptionRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	IsForce              bool     `protobuf:"varint,2,opt,name=isForce,proto3" json:"isForce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteAutoScalingOptionRequest) Reset()         { *m = DeleteAutoScalingOptionRequest{} }
func (m *DeleteAutoScalingOptionRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAutoScalingOptionRequest) ProtoMessage()    {}
func (*DeleteAutoScalingOptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{213}
}

func (m *DeleteAutoScalingOptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAutoScalingOptionRequest.Unmarshal(m, b)
}
func (m *DeleteAutoScalingOptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAutoScalingOptionRequest.Marshal(b, m, deterministic)
}
func (m *DeleteAutoScalingOptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAutoScalingOptionRequest.Merge(m, src)
}
func (m *DeleteAutoScalingOptionRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAutoScalingOptionRequest.Size(m)
}
func (m *DeleteAutoScalingOptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAutoScalingOptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAutoScalingOptionRequest proto.InternalMessageInfo

func (m *DeleteAutoScalingOptionRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *DeleteAutoScalingOptionRequest) GetIsForce() bool {
	if m != nil {
		return m.IsForce
	}
	return false
}

type DeleteAutoScalingOptionResponse struct {
	Code                 uint32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                      `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *ClusterAutoScalingOption `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-" bson:"-"`
	XXX_unrecognized     []byte                    `json:"-" bson:"-"`
	XXX_sizecache        int32                     `json:"-" bson:"-"`
}

func (m *DeleteAutoScalingOptionResponse) Reset()         { *m = DeleteAutoScalingOptionResponse{} }
func (m *DeleteAutoScalingOptionResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteAutoScalingOptionResponse) ProtoMessage()    {}
func (*DeleteAutoScalingOptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{214}
}

func (m *DeleteAutoScalingOptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAutoScalingOptionResponse.Unmarshal(m, b)
}
func (m *DeleteAutoScalingOptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAutoScalingOptionResponse.Marshal(b, m, deterministic)
}
func (m *DeleteAutoScalingOptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAutoScalingOptionResponse.Merge(m, src)
}
func (m *DeleteAutoScalingOptionResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteAutoScalingOptionResponse.Size(m)
}
func (m *DeleteAutoScalingOptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAutoScalingOptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAutoScalingOptionResponse proto.InternalMessageInfo

func (m *DeleteAutoScalingOptionResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteAutoScalingOptionResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteAutoScalingOptionResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *DeleteAutoScalingOptionResponse) GetData() *ClusterAutoScalingOption {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetAutoScalingOptionRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Provider             string   `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetAutoScalingOptionRequest) Reset()         { *m = GetAutoScalingOptionRequest{} }
func (m *GetAutoScalingOptionRequest) String() string { return proto.CompactTextString(m) }
func (*GetAutoScalingOptionRequest) ProtoMessage()    {}
func (*GetAutoScalingOptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{215}
}

func (m *GetAutoScalingOptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAutoScalingOptionRequest.Unmarshal(m, b)
}
func (m *GetAutoScalingOptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAutoScalingOptionRequest.Marshal(b, m, deterministic)
}
func (m *GetAutoScalingOptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAutoScalingOptionRequest.Merge(m, src)
}
func (m *GetAutoScalingOptionRequest) XXX_Size() int {
	return xxx_messageInfo_GetAutoScalingOptionRequest.Size(m)
}
func (m *GetAutoScalingOptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAutoScalingOptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAutoScalingOptionRequest proto.InternalMessageInfo

func (m *GetAutoScalingOptionRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *GetAutoScalingOptionRequest) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

type GetAutoScalingOptionResponse struct {
	Code                 uint32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                      `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *ClusterAutoScalingOption `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-" bson:"-"`
	XXX_unrecognized     []byte                    `json:"-" bson:"-"`
	XXX_sizecache        int32                     `json:"-" bson:"-"`
}

func (m *GetAutoScalingOptionResponse) Reset()         { *m = GetAutoScalingOptionResponse{} }
func (m *GetAutoScalingOptionResponse) String() string { return proto.CompactTextString(m) }
func (*GetAutoScalingOptionResponse) ProtoMessage()    {}
func (*GetAutoScalingOptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{216}
}

func (m *GetAutoScalingOptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAutoScalingOptionResponse.Unmarshal(m, b)
}
func (m *GetAutoScalingOptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAutoScalingOptionResponse.Marshal(b, m, deterministic)
}
func (m *GetAutoScalingOptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAutoScalingOptionResponse.Merge(m, src)
}
func (m *GetAutoScalingOptionResponse) XXX_Size() int {
	return xxx_messageInfo_GetAutoScalingOptionResponse.Size(m)
}
func (m *GetAutoScalingOptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAutoScalingOptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAutoScalingOptionResponse proto.InternalMessageInfo

func (m *GetAutoScalingOptionResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetAutoScalingOptionResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetAutoScalingOptionResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetAutoScalingOptionResponse) GetData() *ClusterAutoScalingOption {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListAutoScalingOptionRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ProjectID            string   `protobuf:"bytes,2,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Creator              string   `protobuf:"bytes,3,opt,name=creator,proto3" json:"creator,omitempty"`
	Updater              string   `protobuf:"bytes,4,opt,name=updater,proto3" json:"updater,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListAutoScalingOptionRequest) Reset()         { *m = ListAutoScalingOptionRequest{} }
func (m *ListAutoScalingOptionRequest) String() string { return proto.CompactTextString(m) }
func (*ListAutoScalingOptionRequest) ProtoMessage()    {}
func (*ListAutoScalingOptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{217}
}

func (m *ListAutoScalingOptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAutoScalingOptionRequest.Unmarshal(m, b)
}
func (m *ListAutoScalingOptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAutoScalingOptionRequest.Marshal(b, m, deterministic)
}
func (m *ListAutoScalingOptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAutoScalingOptionRequest.Merge(m, src)
}
func (m *ListAutoScalingOptionRequest) XXX_Size() int {
	return xxx_messageInfo_ListAutoScalingOptionRequest.Size(m)
}
func (m *ListAutoScalingOptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAutoScalingOptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAutoScalingOptionRequest proto.InternalMessageInfo

func (m *ListAutoScalingOptionRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ListAutoScalingOptionRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *ListAutoScalingOptionRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *ListAutoScalingOptionRequest) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

type ListAutoScalingOptionResponse struct {
	Code                 uint32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                        `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*ClusterAutoScalingOption `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-" bson:"-"`
	XXX_unrecognized     []byte                      `json:"-" bson:"-"`
	XXX_sizecache        int32                       `json:"-" bson:"-"`
}

func (m *ListAutoScalingOptionResponse) Reset()         { *m = ListAutoScalingOptionResponse{} }
func (m *ListAutoScalingOptionResponse) String() string { return proto.CompactTextString(m) }
func (*ListAutoScalingOptionResponse) ProtoMessage()    {}
func (*ListAutoScalingOptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{218}
}

func (m *ListAutoScalingOptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAutoScalingOptionResponse.Unmarshal(m, b)
}
func (m *ListAutoScalingOptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAutoScalingOptionResponse.Marshal(b, m, deterministic)
}
func (m *ListAutoScalingOptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAutoScalingOptionResponse.Merge(m, src)
}
func (m *ListAutoScalingOptionResponse) XXX_Size() int {
	return xxx_messageInfo_ListAutoScalingOptionResponse.Size(m)
}
func (m *ListAutoScalingOptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAutoScalingOptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListAutoScalingOptionResponse proto.InternalMessageInfo

func (m *ListAutoScalingOptionResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListAutoScalingOptionResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListAutoScalingOptionResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListAutoScalingOptionResponse) GetData() []*ClusterAutoScalingOption {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateAutoScalingStatusRequest struct {
	Enable               bool     `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Updater              string   `protobuf:"bytes,3,opt,name=updater,proto3" json:"updater,omitempty"`
	Provider             string   `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateAutoScalingStatusRequest) Reset()         { *m = UpdateAutoScalingStatusRequest{} }
func (m *UpdateAutoScalingStatusRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateAutoScalingStatusRequest) ProtoMessage()    {}
func (*UpdateAutoScalingStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{219}
}

func (m *UpdateAutoScalingStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAutoScalingStatusRequest.Unmarshal(m, b)
}
func (m *UpdateAutoScalingStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAutoScalingStatusRequest.Marshal(b, m, deterministic)
}
func (m *UpdateAutoScalingStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAutoScalingStatusRequest.Merge(m, src)
}
func (m *UpdateAutoScalingStatusRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateAutoScalingStatusRequest.Size(m)
}
func (m *UpdateAutoScalingStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAutoScalingStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAutoScalingStatusRequest proto.InternalMessageInfo

func (m *UpdateAutoScalingStatusRequest) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

func (m *UpdateAutoScalingStatusRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *UpdateAutoScalingStatusRequest) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *UpdateAutoScalingStatusRequest) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

type UpdateAutoScalingStatusResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateAutoScalingStatusResponse) Reset()         { *m = UpdateAutoScalingStatusResponse{} }
func (m *UpdateAutoScalingStatusResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateAutoScalingStatusResponse) ProtoMessage()    {}
func (*UpdateAutoScalingStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{220}
}

func (m *UpdateAutoScalingStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAutoScalingStatusResponse.Unmarshal(m, b)
}
func (m *UpdateAutoScalingStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAutoScalingStatusResponse.Marshal(b, m, deterministic)
}
func (m *UpdateAutoScalingStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAutoScalingStatusResponse.Merge(m, src)
}
func (m *UpdateAutoScalingStatusResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateAutoScalingStatusResponse.Size(m)
}
func (m *UpdateAutoScalingStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAutoScalingStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAutoScalingStatusResponse proto.InternalMessageInfo

func (m *UpdateAutoScalingStatusResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateAutoScalingStatusResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateAutoScalingStatusResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type RegionInfo struct {
	Region               string   `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	RegionName           string   `protobuf:"bytes,2,opt,name=regionName,proto3" json:"regionName,omitempty"`
	RegionState          string   `protobuf:"bytes,3,opt,name=regionState,proto3" json:"regionState,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *RegionInfo) Reset()         { *m = RegionInfo{} }
func (m *RegionInfo) String() string { return proto.CompactTextString(m) }
func (*RegionInfo) ProtoMessage()    {}
func (*RegionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{221}
}

func (m *RegionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegionInfo.Unmarshal(m, b)
}
func (m *RegionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegionInfo.Marshal(b, m, deterministic)
}
func (m *RegionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegionInfo.Merge(m, src)
}
func (m *RegionInfo) XXX_Size() int {
	return xxx_messageInfo_RegionInfo.Size(m)
}
func (m *RegionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RegionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RegionInfo proto.InternalMessageInfo

func (m *RegionInfo) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *RegionInfo) GetRegionName() string {
	if m != nil {
		return m.RegionName
	}
	return ""
}

func (m *RegionInfo) GetRegionState() string {
	if m != nil {
		return m.RegionState
	}
	return ""
}

type GetCloudRegionsRequest struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	AccountID            string   `protobuf:"bytes,2,opt,name=accountID,proto3" json:"accountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetCloudRegionsRequest) Reset()         { *m = GetCloudRegionsRequest{} }
func (m *GetCloudRegionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetCloudRegionsRequest) ProtoMessage()    {}
func (*GetCloudRegionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{222}
}

func (m *GetCloudRegionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCloudRegionsRequest.Unmarshal(m, b)
}
func (m *GetCloudRegionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCloudRegionsRequest.Marshal(b, m, deterministic)
}
func (m *GetCloudRegionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCloudRegionsRequest.Merge(m, src)
}
func (m *GetCloudRegionsRequest) XXX_Size() int {
	return xxx_messageInfo_GetCloudRegionsRequest.Size(m)
}
func (m *GetCloudRegionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCloudRegionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCloudRegionsRequest proto.InternalMessageInfo

func (m *GetCloudRegionsRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *GetCloudRegionsRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

type GetCloudRegionsResponse struct {
	Code                 uint32        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool          `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*RegionInfo `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-" bson:"-"`
	XXX_unrecognized     []byte        `json:"-" bson:"-"`
	XXX_sizecache        int32         `json:"-" bson:"-"`
}

func (m *GetCloudRegionsResponse) Reset()         { *m = GetCloudRegionsResponse{} }
func (m *GetCloudRegionsResponse) String() string { return proto.CompactTextString(m) }
func (*GetCloudRegionsResponse) ProtoMessage()    {}
func (*GetCloudRegionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{223}
}

func (m *GetCloudRegionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCloudRegionsResponse.Unmarshal(m, b)
}
func (m *GetCloudRegionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCloudRegionsResponse.Marshal(b, m, deterministic)
}
func (m *GetCloudRegionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCloudRegionsResponse.Merge(m, src)
}
func (m *GetCloudRegionsResponse) XXX_Size() int {
	return xxx_messageInfo_GetCloudRegionsResponse.Size(m)
}
func (m *GetCloudRegionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCloudRegionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCloudRegionsResponse proto.InternalMessageInfo

func (m *GetCloudRegionsResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetCloudRegionsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetCloudRegionsResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetCloudRegionsResponse) GetData() []*RegionInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

type ZoneInfo struct {
	ZoneID               string   `protobuf:"bytes,1,opt,name=zoneID,proto3" json:"zoneID,omitempty"`
	Zone                 string   `protobuf:"bytes,2,opt,name=zone,proto3" json:"zone,omitempty"`
	ZoneName             string   `protobuf:"bytes,3,opt,name=zoneName,proto3" json:"zoneName,omitempty"`
	ZoneState            string   `protobuf:"bytes,4,opt,name=zoneState,proto3" json:"zoneState,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ZoneInfo) Reset()         { *m = ZoneInfo{} }
func (m *ZoneInfo) String() string { return proto.CompactTextString(m) }
func (*ZoneInfo) ProtoMessage()    {}
func (*ZoneInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{224}
}

func (m *ZoneInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZoneInfo.Unmarshal(m, b)
}
func (m *ZoneInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZoneInfo.Marshal(b, m, deterministic)
}
func (m *ZoneInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZoneInfo.Merge(m, src)
}
func (m *ZoneInfo) XXX_Size() int {
	return xxx_messageInfo_ZoneInfo.Size(m)
}
func (m *ZoneInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ZoneInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ZoneInfo proto.InternalMessageInfo

func (m *ZoneInfo) GetZoneID() string {
	if m != nil {
		return m.ZoneID
	}
	return ""
}

func (m *ZoneInfo) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *ZoneInfo) GetZoneName() string {
	if m != nil {
		return m.ZoneName
	}
	return ""
}

func (m *ZoneInfo) GetZoneState() string {
	if m != nil {
		return m.ZoneState
	}
	return ""
}

type CloudClusterInfo struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ClusterName          string   `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	ClusterDescription   string   `protobuf:"bytes,3,opt,name=clusterDescription,proto3" json:"clusterDescription,omitempty"`
	ClusterVersion       string   `protobuf:"bytes,4,opt,name=clusterVersion,proto3" json:"clusterVersion,omitempty"`
	ClusterOS            string   `protobuf:"bytes,5,opt,name=clusterOS,proto3" json:"clusterOS,omitempty"`
	ClusterType          string   `protobuf:"bytes,6,opt,name=clusterType,proto3" json:"clusterType,omitempty"`
	ClusterStatus        string   `protobuf:"bytes,7,opt,name=clusterStatus,proto3" json:"clusterStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CloudClusterInfo) Reset()         { *m = CloudClusterInfo{} }
func (m *CloudClusterInfo) String() string { return proto.CompactTextString(m) }
func (*CloudClusterInfo) ProtoMessage()    {}
func (*CloudClusterInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{225}
}

func (m *CloudClusterInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudClusterInfo.Unmarshal(m, b)
}
func (m *CloudClusterInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudClusterInfo.Marshal(b, m, deterministic)
}
func (m *CloudClusterInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudClusterInfo.Merge(m, src)
}
func (m *CloudClusterInfo) XXX_Size() int {
	return xxx_messageInfo_CloudClusterInfo.Size(m)
}
func (m *CloudClusterInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudClusterInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CloudClusterInfo proto.InternalMessageInfo

func (m *CloudClusterInfo) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *CloudClusterInfo) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *CloudClusterInfo) GetClusterDescription() string {
	if m != nil {
		return m.ClusterDescription
	}
	return ""
}

func (m *CloudClusterInfo) GetClusterVersion() string {
	if m != nil {
		return m.ClusterVersion
	}
	return ""
}

func (m *CloudClusterInfo) GetClusterOS() string {
	if m != nil {
		return m.ClusterOS
	}
	return ""
}

func (m *CloudClusterInfo) GetClusterType() string {
	if m != nil {
		return m.ClusterType
	}
	return ""
}

func (m *CloudClusterInfo) GetClusterStatus() string {
	if m != nil {
		return m.ClusterStatus
	}
	return ""
}

type ListCloudRegionClusterRequest struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	Region               string   `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	AccountID            string   `protobuf:"bytes,3,opt,name=accountID,proto3" json:"accountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListCloudRegionClusterRequest) Reset()         { *m = ListCloudRegionClusterRequest{} }
func (m *ListCloudRegionClusterRequest) String() string { return proto.CompactTextString(m) }
func (*ListCloudRegionClusterRequest) ProtoMessage()    {}
func (*ListCloudRegionClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{226}
}

func (m *ListCloudRegionClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCloudRegionClusterRequest.Unmarshal(m, b)
}
func (m *ListCloudRegionClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCloudRegionClusterRequest.Marshal(b, m, deterministic)
}
func (m *ListCloudRegionClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCloudRegionClusterRequest.Merge(m, src)
}
func (m *ListCloudRegionClusterRequest) XXX_Size() int {
	return xxx_messageInfo_ListCloudRegionClusterRequest.Size(m)
}
func (m *ListCloudRegionClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCloudRegionClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCloudRegionClusterRequest proto.InternalMessageInfo

func (m *ListCloudRegionClusterRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *ListCloudRegionClusterRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *ListCloudRegionClusterRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

type ListCloudRegionClusterResponse struct {
	Code                 uint32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*CloudClusterInfo `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-" bson:"-"`
	XXX_unrecognized     []byte              `json:"-" bson:"-"`
	XXX_sizecache        int32               `json:"-" bson:"-"`
}

func (m *ListCloudRegionClusterResponse) Reset()         { *m = ListCloudRegionClusterResponse{} }
func (m *ListCloudRegionClusterResponse) String() string { return proto.CompactTextString(m) }
func (*ListCloudRegionClusterResponse) ProtoMessage()    {}
func (*ListCloudRegionClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{227}
}

func (m *ListCloudRegionClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCloudRegionClusterResponse.Unmarshal(m, b)
}
func (m *ListCloudRegionClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCloudRegionClusterResponse.Marshal(b, m, deterministic)
}
func (m *ListCloudRegionClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCloudRegionClusterResponse.Merge(m, src)
}
func (m *ListCloudRegionClusterResponse) XXX_Size() int {
	return xxx_messageInfo_ListCloudRegionClusterResponse.Size(m)
}
func (m *ListCloudRegionClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCloudRegionClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCloudRegionClusterResponse proto.InternalMessageInfo

func (m *ListCloudRegionClusterResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListCloudRegionClusterResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListCloudRegionClusterResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListCloudRegionClusterResponse) GetData() []*CloudClusterInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetCloudRegionZonesRequest struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	Region               string   `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	AccountID            string   `protobuf:"bytes,3,opt,name=accountID,proto3" json:"accountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetCloudRegionZonesRequest) Reset()         { *m = GetCloudRegionZonesRequest{} }
func (m *GetCloudRegionZonesRequest) String() string { return proto.CompactTextString(m) }
func (*GetCloudRegionZonesRequest) ProtoMessage()    {}
func (*GetCloudRegionZonesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{228}
}

func (m *GetCloudRegionZonesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCloudRegionZonesRequest.Unmarshal(m, b)
}
func (m *GetCloudRegionZonesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCloudRegionZonesRequest.Marshal(b, m, deterministic)
}
func (m *GetCloudRegionZonesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCloudRegionZonesRequest.Merge(m, src)
}
func (m *GetCloudRegionZonesRequest) XXX_Size() int {
	return xxx_messageInfo_GetCloudRegionZonesRequest.Size(m)
}
func (m *GetCloudRegionZonesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCloudRegionZonesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCloudRegionZonesRequest proto.InternalMessageInfo

func (m *GetCloudRegionZonesRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *GetCloudRegionZonesRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *GetCloudRegionZonesRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

type GetCloudRegionZonesResponse struct {
	Code                 uint32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool        `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*ZoneInfo `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-" bson:"-"`
	XXX_unrecognized     []byte      `json:"-" bson:"-"`
	XXX_sizecache        int32       `json:"-" bson:"-"`
}

func (m *GetCloudRegionZonesResponse) Reset()         { *m = GetCloudRegionZonesResponse{} }
func (m *GetCloudRegionZonesResponse) String() string { return proto.CompactTextString(m) }
func (*GetCloudRegionZonesResponse) ProtoMessage()    {}
func (*GetCloudRegionZonesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{229}
}

func (m *GetCloudRegionZonesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCloudRegionZonesResponse.Unmarshal(m, b)
}
func (m *GetCloudRegionZonesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCloudRegionZonesResponse.Marshal(b, m, deterministic)
}
func (m *GetCloudRegionZonesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCloudRegionZonesResponse.Merge(m, src)
}
func (m *GetCloudRegionZonesResponse) XXX_Size() int {
	return xxx_messageInfo_GetCloudRegionZonesResponse.Size(m)
}
func (m *GetCloudRegionZonesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCloudRegionZonesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCloudRegionZonesResponse proto.InternalMessageInfo

func (m *GetCloudRegionZonesResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetCloudRegionZonesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetCloudRegionZonesResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetCloudRegionZonesResponse) GetData() []*ZoneInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

type OperationLog struct {
	ResourceType         string   `protobuf:"bytes,1,opt,name=resourceType,proto3" json:"resourceType,omitempty"`
	ResourceID           string   `protobuf:"bytes,2,opt,name=resourceID,proto3" json:"resourceID,omitempty"`
	TaskID               string   `protobuf:"bytes,3,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Message              string   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	OpUser               string   `protobuf:"bytes,5,opt,name=opUser,proto3" json:"opUser,omitempty"`
	CreateTime           string   `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *OperationLog) Reset()         { *m = OperationLog{} }
func (m *OperationLog) String() string { return proto.CompactTextString(m) }
func (*OperationLog) ProtoMessage()    {}
func (*OperationLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{230}
}

func (m *OperationLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperationLog.Unmarshal(m, b)
}
func (m *OperationLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperationLog.Marshal(b, m, deterministic)
}
func (m *OperationLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperationLog.Merge(m, src)
}
func (m *OperationLog) XXX_Size() int {
	return xxx_messageInfo_OperationLog.Size(m)
}
func (m *OperationLog) XXX_DiscardUnknown() {
	xxx_messageInfo_OperationLog.DiscardUnknown(m)
}

var xxx_messageInfo_OperationLog proto.InternalMessageInfo

func (m *OperationLog) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *OperationLog) GetResourceID() string {
	if m != nil {
		return m.ResourceID
	}
	return ""
}

func (m *OperationLog) GetTaskID() string {
	if m != nil {
		return m.TaskID
	}
	return ""
}

func (m *OperationLog) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *OperationLog) GetOpUser() string {
	if m != nil {
		return m.OpUser
	}
	return ""
}

func (m *OperationLog) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

type ListCloudInstanceTypeRequest struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	Region               string   `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	AccountID            string   `protobuf:"bytes,3,opt,name=accountID,proto3" json:"accountID,omitempty"`
	Zone                 string   `protobuf:"bytes,4,opt,name=zone,proto3" json:"zone,omitempty"`
	NodeFamily           string   `protobuf:"bytes,5,opt,name=nodeFamily,proto3" json:"nodeFamily,omitempty"`
	Cpu                  uint32   `protobuf:"varint,6,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory               uint32   `protobuf:"varint,7,opt,name=memory,proto3" json:"memory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListCloudInstanceTypeRequest) Reset()         { *m = ListCloudInstanceTypeRequest{} }
func (m *ListCloudInstanceTypeRequest) String() string { return proto.CompactTextString(m) }
func (*ListCloudInstanceTypeRequest) ProtoMessage()    {}
func (*ListCloudInstanceTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{231}
}

func (m *ListCloudInstanceTypeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCloudInstanceTypeRequest.Unmarshal(m, b)
}
func (m *ListCloudInstanceTypeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCloudInstanceTypeRequest.Marshal(b, m, deterministic)
}
func (m *ListCloudInstanceTypeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCloudInstanceTypeRequest.Merge(m, src)
}
func (m *ListCloudInstanceTypeRequest) XXX_Size() int {
	return xxx_messageInfo_ListCloudInstanceTypeRequest.Size(m)
}
func (m *ListCloudInstanceTypeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCloudInstanceTypeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCloudInstanceTypeRequest proto.InternalMessageInfo

func (m *ListCloudInstanceTypeRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *ListCloudInstanceTypeRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *ListCloudInstanceTypeRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *ListCloudInstanceTypeRequest) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *ListCloudInstanceTypeRequest) GetNodeFamily() string {
	if m != nil {
		return m.NodeFamily
	}
	return ""
}

func (m *ListCloudInstanceTypeRequest) GetCpu() uint32 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

func (m *ListCloudInstanceTypeRequest) GetMemory() uint32 {
	if m != nil {
		return m.Memory
	}
	return 0
}

type ListCloudInstanceTypeResponse struct {
	Code                 uint32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool            `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*InstanceType `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" bson:"-"`
	XXX_unrecognized     []byte          `json:"-" bson:"-"`
	XXX_sizecache        int32           `json:"-" bson:"-"`
}

func (m *ListCloudInstanceTypeResponse) Reset()         { *m = ListCloudInstanceTypeResponse{} }
func (m *ListCloudInstanceTypeResponse) String() string { return proto.CompactTextString(m) }
func (*ListCloudInstanceTypeResponse) ProtoMessage()    {}
func (*ListCloudInstanceTypeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{232}
}

func (m *ListCloudInstanceTypeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCloudInstanceTypeResponse.Unmarshal(m, b)
}
func (m *ListCloudInstanceTypeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCloudInstanceTypeResponse.Marshal(b, m, deterministic)
}
func (m *ListCloudInstanceTypeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCloudInstanceTypeResponse.Merge(m, src)
}
func (m *ListCloudInstanceTypeResponse) XXX_Size() int {
	return xxx_messageInfo_ListCloudInstanceTypeResponse.Size(m)
}
func (m *ListCloudInstanceTypeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCloudInstanceTypeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCloudInstanceTypeResponse proto.InternalMessageInfo

func (m *ListCloudInstanceTypeResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListCloudInstanceTypeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListCloudInstanceTypeResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListCloudInstanceTypeResponse) GetData() []*InstanceType {
	if m != nil {
		return m.Data
	}
	return nil
}

type InstanceType struct {
	NodeType             string   `protobuf:"bytes,1,opt,name=nodeType,proto3" json:"nodeType,omitempty"`
	TypeName             string   `protobuf:"bytes,2,opt,name=typeName,proto3" json:"typeName,omitempty"`
	NodeFamily           string   `protobuf:"bytes,3,opt,name=nodeFamily,proto3" json:"nodeFamily,omitempty"`
	Cpu                  uint32   `protobuf:"varint,4,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory               uint32   `protobuf:"varint,5,opt,name=memory,proto3" json:"memory,omitempty"`
	Gpu                  uint32   `protobuf:"varint,6,opt,name=gpu,proto3" json:"gpu,omitempty"`
	Status               string   `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	UnitPrice            float32  `protobuf:"fixed32,8,opt,name=unitPrice,proto3" json:"unitPrice,omitempty"`
	Zones                []string `protobuf:"bytes,9,rep,name=zones,proto3" json:"zones,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *InstanceType) Reset()         { *m = InstanceType{} }
func (m *InstanceType) String() string { return proto.CompactTextString(m) }
func (*InstanceType) ProtoMessage()    {}
func (*InstanceType) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{233}
}

func (m *InstanceType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceType.Unmarshal(m, b)
}
func (m *InstanceType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceType.Marshal(b, m, deterministic)
}
func (m *InstanceType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceType.Merge(m, src)
}
func (m *InstanceType) XXX_Size() int {
	return xxx_messageInfo_InstanceType.Size(m)
}
func (m *InstanceType) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceType.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceType proto.InternalMessageInfo

func (m *InstanceType) GetNodeType() string {
	if m != nil {
		return m.NodeType
	}
	return ""
}

func (m *InstanceType) GetTypeName() string {
	if m != nil {
		return m.TypeName
	}
	return ""
}

func (m *InstanceType) GetNodeFamily() string {
	if m != nil {
		return m.NodeFamily
	}
	return ""
}

func (m *InstanceType) GetCpu() uint32 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

func (m *InstanceType) GetMemory() uint32 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *InstanceType) GetGpu() uint32 {
	if m != nil {
		return m.Gpu
	}
	return 0
}

func (m *InstanceType) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *InstanceType) GetUnitPrice() float32 {
	if m != nil {
		return m.UnitPrice
	}
	return 0
}

func (m *InstanceType) GetZones() []string {
	if m != nil {
		return m.Zones
	}
	return nil
}

type ListCloudOsImageRequest struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	Region               string   `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	AccountID            string   `protobuf:"bytes,3,opt,name=accountID,proto3" json:"accountID,omitempty"`
	Provider             string   `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListCloudOsImageRequest) Reset()         { *m = ListCloudOsImageRequest{} }
func (m *ListCloudOsImageRequest) String() string { return proto.CompactTextString(m) }
func (*ListCloudOsImageRequest) ProtoMessage()    {}
func (*ListCloudOsImageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{234}
}

func (m *ListCloudOsImageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCloudOsImageRequest.Unmarshal(m, b)
}
func (m *ListCloudOsImageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCloudOsImageRequest.Marshal(b, m, deterministic)
}
func (m *ListCloudOsImageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCloudOsImageRequest.Merge(m, src)
}
func (m *ListCloudOsImageRequest) XXX_Size() int {
	return xxx_messageInfo_ListCloudOsImageRequest.Size(m)
}
func (m *ListCloudOsImageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCloudOsImageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCloudOsImageRequest proto.InternalMessageInfo

func (m *ListCloudOsImageRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *ListCloudOsImageRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *ListCloudOsImageRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *ListCloudOsImageRequest) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

type ListCloudOsImageResponse struct {
	Code                 uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool       `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*OsImage `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-" bson:"-"`
	XXX_unrecognized     []byte     `json:"-" bson:"-"`
	XXX_sizecache        int32      `json:"-" bson:"-"`
}

func (m *ListCloudOsImageResponse) Reset()         { *m = ListCloudOsImageResponse{} }
func (m *ListCloudOsImageResponse) String() string { return proto.CompactTextString(m) }
func (*ListCloudOsImageResponse) ProtoMessage()    {}
func (*ListCloudOsImageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{235}
}

func (m *ListCloudOsImageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCloudOsImageResponse.Unmarshal(m, b)
}
func (m *ListCloudOsImageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCloudOsImageResponse.Marshal(b, m, deterministic)
}
func (m *ListCloudOsImageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCloudOsImageResponse.Merge(m, src)
}
func (m *ListCloudOsImageResponse) XXX_Size() int {
	return xxx_messageInfo_ListCloudOsImageResponse.Size(m)
}
func (m *ListCloudOsImageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCloudOsImageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCloudOsImageResponse proto.InternalMessageInfo

func (m *ListCloudOsImageResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListCloudOsImageResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListCloudOsImageResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListCloudOsImageResponse) GetData() []*OsImage {
	if m != nil {
		return m.Data
	}
	return nil
}

type OsImage struct {
	ImageID              string   `protobuf:"bytes,1,opt,name=imageID,proto3" json:"imageID,omitempty"`
	Alias                string   `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	Arch                 string   `protobuf:"bytes,3,opt,name=arch,proto3" json:"arch,omitempty"`
	OsCustomizeType      string   `protobuf:"bytes,4,opt,name=osCustomizeType,proto3" json:"osCustomizeType,omitempty"`
	OsName               string   `protobuf:"bytes,5,opt,name=osName,proto3" json:"osName,omitempty"`
	SeriesName           string   `protobuf:"bytes,6,opt,name=seriesName,proto3" json:"seriesName,omitempty"`
	Status               string   `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	Provider             string   `protobuf:"bytes,8,opt,name=provider,proto3" json:"provider,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *OsImage) Reset()         { *m = OsImage{} }
func (m *OsImage) String() string { return proto.CompactTextString(m) }
func (*OsImage) ProtoMessage()    {}
func (*OsImage) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{236}
}

func (m *OsImage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OsImage.Unmarshal(m, b)
}
func (m *OsImage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OsImage.Marshal(b, m, deterministic)
}
func (m *OsImage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OsImage.Merge(m, src)
}
func (m *OsImage) XXX_Size() int {
	return xxx_messageInfo_OsImage.Size(m)
}
func (m *OsImage) XXX_DiscardUnknown() {
	xxx_messageInfo_OsImage.DiscardUnknown(m)
}

var xxx_messageInfo_OsImage proto.InternalMessageInfo

func (m *OsImage) GetImageID() string {
	if m != nil {
		return m.ImageID
	}
	return ""
}

func (m *OsImage) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *OsImage) GetArch() string {
	if m != nil {
		return m.Arch
	}
	return ""
}

func (m *OsImage) GetOsCustomizeType() string {
	if m != nil {
		return m.OsCustomizeType
	}
	return ""
}

func (m *OsImage) GetOsName() string {
	if m != nil {
		return m.OsName
	}
	return ""
}

func (m *OsImage) GetSeriesName() string {
	if m != nil {
		return m.SeriesName
	}
	return ""
}

func (m *OsImage) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *OsImage) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

type ListCloudSubnetsRequest struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	Region               string   `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	AccountID            string   `protobuf:"bytes,3,opt,name=accountID,proto3" json:"accountID,omitempty"`
	VpcID                string   `protobuf:"bytes,4,opt,name=vpcID,proto3" json:"vpcID,omitempty"`
	Zone                 string   `protobuf:"bytes,5,opt,name=zone,proto3" json:"zone,omitempty"`
	SubnetID             string   `protobuf:"bytes,6,opt,name=subnetID,proto3" json:"subnetID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListCloudSubnetsRequest) Reset()         { *m = ListCloudSubnetsRequest{} }
func (m *ListCloudSubnetsRequest) String() string { return proto.CompactTextString(m) }
func (*ListCloudSubnetsRequest) ProtoMessage()    {}
func (*ListCloudSubnetsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{237}
}

func (m *ListCloudSubnetsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCloudSubnetsRequest.Unmarshal(m, b)
}
func (m *ListCloudSubnetsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCloudSubnetsRequest.Marshal(b, m, deterministic)
}
func (m *ListCloudSubnetsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCloudSubnetsRequest.Merge(m, src)
}
func (m *ListCloudSubnetsRequest) XXX_Size() int {
	return xxx_messageInfo_ListCloudSubnetsRequest.Size(m)
}
func (m *ListCloudSubnetsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCloudSubnetsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCloudSubnetsRequest proto.InternalMessageInfo

func (m *ListCloudSubnetsRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *ListCloudSubnetsRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *ListCloudSubnetsRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *ListCloudSubnetsRequest) GetVpcID() string {
	if m != nil {
		return m.VpcID
	}
	return ""
}

func (m *ListCloudSubnetsRequest) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *ListCloudSubnetsRequest) GetSubnetID() string {
	if m != nil {
		return m.SubnetID
	}
	return ""
}

type ListCloudSubnetsResponse struct {
	Code                 uint32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool      `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*Subnet `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-" bson:"-"`
	XXX_unrecognized     []byte    `json:"-" bson:"-"`
	XXX_sizecache        int32     `json:"-" bson:"-"`
}

func (m *ListCloudSubnetsResponse) Reset()         { *m = ListCloudSubnetsResponse{} }
func (m *ListCloudSubnetsResponse) String() string { return proto.CompactTextString(m) }
func (*ListCloudSubnetsResponse) ProtoMessage()    {}
func (*ListCloudSubnetsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{238}
}

func (m *ListCloudSubnetsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCloudSubnetsResponse.Unmarshal(m, b)
}
func (m *ListCloudSubnetsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCloudSubnetsResponse.Marshal(b, m, deterministic)
}
func (m *ListCloudSubnetsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCloudSubnetsResponse.Merge(m, src)
}
func (m *ListCloudSubnetsResponse) XXX_Size() int {
	return xxx_messageInfo_ListCloudSubnetsResponse.Size(m)
}
func (m *ListCloudSubnetsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCloudSubnetsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCloudSubnetsResponse proto.InternalMessageInfo

func (m *ListCloudSubnetsResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListCloudSubnetsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListCloudSubnetsResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListCloudSubnetsResponse) GetData() []*Subnet {
	if m != nil {
		return m.Data
	}
	return nil
}

type Subnet struct {
	VpcID                   string   `protobuf:"bytes,1,opt,name=vpcID,proto3" json:"vpcID,omitempty"`
	SubnetID                string   `protobuf:"bytes,2,opt,name=subnetID,proto3" json:"subnetID,omitempty"`
	SubnetName              string   `protobuf:"bytes,3,opt,name=subnetName,proto3" json:"subnetName,omitempty"`
	CidrRange               string   `protobuf:"bytes,4,opt,name=cidrRange,proto3" json:"cidrRange,omitempty"`
	Ipv6CidrRange           string   `protobuf:"bytes,5,opt,name=ipv6CidrRange,proto3" json:"ipv6CidrRange,omitempty"`
	Zone                    string   `protobuf:"bytes,6,opt,name=zone,proto3" json:"zone,omitempty"`
	AvailableIPAddressCount uint64   `protobuf:"varint,7,opt,name=availableIPAddressCount,proto3" json:"availableIPAddressCount,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-" bson:"-"`
	XXX_unrecognized        []byte   `json:"-" bson:"-"`
	XXX_sizecache           int32    `json:"-" bson:"-"`
}

func (m *Subnet) Reset()         { *m = Subnet{} }
func (m *Subnet) String() string { return proto.CompactTextString(m) }
func (*Subnet) ProtoMessage()    {}
func (*Subnet) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{239}
}

func (m *Subnet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subnet.Unmarshal(m, b)
}
func (m *Subnet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subnet.Marshal(b, m, deterministic)
}
func (m *Subnet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subnet.Merge(m, src)
}
func (m *Subnet) XXX_Size() int {
	return xxx_messageInfo_Subnet.Size(m)
}
func (m *Subnet) XXX_DiscardUnknown() {
	xxx_messageInfo_Subnet.DiscardUnknown(m)
}

var xxx_messageInfo_Subnet proto.InternalMessageInfo

func (m *Subnet) GetVpcID() string {
	if m != nil {
		return m.VpcID
	}
	return ""
}

func (m *Subnet) GetSubnetID() string {
	if m != nil {
		return m.SubnetID
	}
	return ""
}

func (m *Subnet) GetSubnetName() string {
	if m != nil {
		return m.SubnetName
	}
	return ""
}

func (m *Subnet) GetCidrRange() string {
	if m != nil {
		return m.CidrRange
	}
	return ""
}

func (m *Subnet) GetIpv6CidrRange() string {
	if m != nil {
		return m.Ipv6CidrRange
	}
	return ""
}

func (m *Subnet) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *Subnet) GetAvailableIPAddressCount() uint64 {
	if m != nil {
		return m.AvailableIPAddressCount
	}
	return 0
}

type ListCloudSecurityGroupsRequest struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	Region               string   `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	AccountID            string   `protobuf:"bytes,3,opt,name=accountID,proto3" json:"accountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListCloudSecurityGroupsRequest) Reset()         { *m = ListCloudSecurityGroupsRequest{} }
func (m *ListCloudSecurityGroupsRequest) String() string { return proto.CompactTextString(m) }
func (*ListCloudSecurityGroupsRequest) ProtoMessage()    {}
func (*ListCloudSecurityGroupsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{240}
}

func (m *ListCloudSecurityGroupsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCloudSecurityGroupsRequest.Unmarshal(m, b)
}
func (m *ListCloudSecurityGroupsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCloudSecurityGroupsRequest.Marshal(b, m, deterministic)
}
func (m *ListCloudSecurityGroupsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCloudSecurityGroupsRequest.Merge(m, src)
}
func (m *ListCloudSecurityGroupsRequest) XXX_Size() int {
	return xxx_messageInfo_ListCloudSecurityGroupsRequest.Size(m)
}
func (m *ListCloudSecurityGroupsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCloudSecurityGroupsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCloudSecurityGroupsRequest proto.InternalMessageInfo

func (m *ListCloudSecurityGroupsRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *ListCloudSecurityGroupsRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *ListCloudSecurityGroupsRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

type ListCloudSecurityGroupsResponse struct {
	Code                 uint32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool             `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*SecurityGroup `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-" bson:"-"`
	XXX_unrecognized     []byte           `json:"-" bson:"-"`
	XXX_sizecache        int32            `json:"-" bson:"-"`
}

func (m *ListCloudSecurityGroupsResponse) Reset()         { *m = ListCloudSecurityGroupsResponse{} }
func (m *ListCloudSecurityGroupsResponse) String() string { return proto.CompactTextString(m) }
func (*ListCloudSecurityGroupsResponse) ProtoMessage()    {}
func (*ListCloudSecurityGroupsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{241}
}

func (m *ListCloudSecurityGroupsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCloudSecurityGroupsResponse.Unmarshal(m, b)
}
func (m *ListCloudSecurityGroupsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCloudSecurityGroupsResponse.Marshal(b, m, deterministic)
}
func (m *ListCloudSecurityGroupsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCloudSecurityGroupsResponse.Merge(m, src)
}
func (m *ListCloudSecurityGroupsResponse) XXX_Size() int {
	return xxx_messageInfo_ListCloudSecurityGroupsResponse.Size(m)
}
func (m *ListCloudSecurityGroupsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCloudSecurityGroupsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCloudSecurityGroupsResponse proto.InternalMessageInfo

func (m *ListCloudSecurityGroupsResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListCloudSecurityGroupsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListCloudSecurityGroupsResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListCloudSecurityGroupsResponse) GetData() []*SecurityGroup {
	if m != nil {
		return m.Data
	}
	return nil
}

type SecurityGroup struct {
	SecurityGroupID      string   `protobuf:"bytes,1,opt,name=securityGroupID,proto3" json:"securityGroupID,omitempty"`
	SecurityGroupName    string   `protobuf:"bytes,2,opt,name=securityGroupName,proto3" json:"securityGroupName,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *SecurityGroup) Reset()         { *m = SecurityGroup{} }
func (m *SecurityGroup) String() string { return proto.CompactTextString(m) }
func (*SecurityGroup) ProtoMessage()    {}
func (*SecurityGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{242}
}

func (m *SecurityGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecurityGroup.Unmarshal(m, b)
}
func (m *SecurityGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecurityGroup.Marshal(b, m, deterministic)
}
func (m *SecurityGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecurityGroup.Merge(m, src)
}
func (m *SecurityGroup) XXX_Size() int {
	return xxx_messageInfo_SecurityGroup.Size(m)
}
func (m *SecurityGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_SecurityGroup.DiscardUnknown(m)
}

var xxx_messageInfo_SecurityGroup proto.InternalMessageInfo

func (m *SecurityGroup) GetSecurityGroupID() string {
	if m != nil {
		return m.SecurityGroupID
	}
	return ""
}

func (m *SecurityGroup) GetSecurityGroupName() string {
	if m != nil {
		return m.SecurityGroupName
	}
	return ""
}

func (m *SecurityGroup) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type ListOperationLogsRequest struct {
	ResourceType         string   `protobuf:"bytes,1,opt,name=resourceType,proto3" json:"resourceType,omitempty"`
	ResourceID           string   `protobuf:"bytes,2,opt,name=resourceID,proto3" json:"resourceID,omitempty"`
	StartTime            uint64   `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              uint64   `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Limit                uint32   `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Page                 uint32   `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`
	Simple               bool     `protobuf:"varint,7,opt,name=simple,proto3" json:"simple,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListOperationLogsRequest) Reset()         { *m = ListOperationLogsRequest{} }
func (m *ListOperationLogsRequest) String() string { return proto.CompactTextString(m) }
func (*ListOperationLogsRequest) ProtoMessage()    {}
func (*ListOperationLogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{243}
}

func (m *ListOperationLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOperationLogsRequest.Unmarshal(m, b)
}
func (m *ListOperationLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOperationLogsRequest.Marshal(b, m, deterministic)
}
func (m *ListOperationLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOperationLogsRequest.Merge(m, src)
}
func (m *ListOperationLogsRequest) XXX_Size() int {
	return xxx_messageInfo_ListOperationLogsRequest.Size(m)
}
func (m *ListOperationLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOperationLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListOperationLogsRequest proto.InternalMessageInfo

func (m *ListOperationLogsRequest) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *ListOperationLogsRequest) GetResourceID() string {
	if m != nil {
		return m.ResourceID
	}
	return ""
}

func (m *ListOperationLogsRequest) GetStartTime() uint64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ListOperationLogsRequest) GetEndTime() uint64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *ListOperationLogsRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListOperationLogsRequest) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListOperationLogsRequest) GetSimple() bool {
	if m != nil {
		return m.Simple
	}
	return false
}

type ListOperationLogsResponse struct {
	Code                 uint32                         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                           `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *ListOperationLogsResponseData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-" bson:"-"`
	XXX_unrecognized     []byte                         `json:"-" bson:"-"`
	XXX_sizecache        int32                          `json:"-" bson:"-"`
}

func (m *ListOperationLogsResponse) Reset()         { *m = ListOperationLogsResponse{} }
func (m *ListOperationLogsResponse) String() string { return proto.CompactTextString(m) }
func (*ListOperationLogsResponse) ProtoMessage()    {}
func (*ListOperationLogsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{244}
}

func (m *ListOperationLogsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOperationLogsResponse.Unmarshal(m, b)
}
func (m *ListOperationLogsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOperationLogsResponse.Marshal(b, m, deterministic)
}
func (m *ListOperationLogsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOperationLogsResponse.Merge(m, src)
}
func (m *ListOperationLogsResponse) XXX_Size() int {
	return xxx_messageInfo_ListOperationLogsResponse.Size(m)
}
func (m *ListOperationLogsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOperationLogsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListOperationLogsResponse proto.InternalMessageInfo

func (m *ListOperationLogsResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListOperationLogsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListOperationLogsResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListOperationLogsResponse) GetData() *ListOperationLogsResponseData {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListOperationLogsResponseData struct {
	Count                uint32                `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Results              []*OperationLogDetail `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-" bson:"-"`
	XXX_unrecognized     []byte                `json:"-" bson:"-"`
	XXX_sizecache        int32                 `json:"-" bson:"-"`
}

func (m *ListOperationLogsResponseData) Reset()         { *m = ListOperationLogsResponseData{} }
func (m *ListOperationLogsResponseData) String() string { return proto.CompactTextString(m) }
func (*ListOperationLogsResponseData) ProtoMessage()    {}
func (*ListOperationLogsResponseData) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{245}
}

func (m *ListOperationLogsResponseData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOperationLogsResponseData.Unmarshal(m, b)
}
func (m *ListOperationLogsResponseData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOperationLogsResponseData.Marshal(b, m, deterministic)
}
func (m *ListOperationLogsResponseData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOperationLogsResponseData.Merge(m, src)
}
func (m *ListOperationLogsResponseData) XXX_Size() int {
	return xxx_messageInfo_ListOperationLogsResponseData.Size(m)
}
func (m *ListOperationLogsResponseData) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOperationLogsResponseData.DiscardUnknown(m)
}

var xxx_messageInfo_ListOperationLogsResponseData proto.InternalMessageInfo

func (m *ListOperationLogsResponseData) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ListOperationLogsResponseData) GetResults() []*OperationLogDetail {
	if m != nil {
		return m.Results
	}
	return nil
}

type OperationLogDetail struct {
	ResourceType         string   `protobuf:"bytes,1,opt,name=resourceType,proto3" json:"resourceType,omitempty"`
	ResourceID           string   `protobuf:"bytes,2,opt,name=resourceID,proto3" json:"resourceID,omitempty"`
	TaskID               string   `protobuf:"bytes,3,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Message              string   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	OpUser               string   `protobuf:"bytes,5,opt,name=opUser,proto3" json:"opUser,omitempty"`
	CreateTime           string   `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Task                 *Task    `protobuf:"bytes,7,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *OperationLogDetail) Reset()         { *m = OperationLogDetail{} }
func (m *OperationLogDetail) String() string { return proto.CompactTextString(m) }
func (*OperationLogDetail) ProtoMessage()    {}
func (*OperationLogDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{246}
}

func (m *OperationLogDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperationLogDetail.Unmarshal(m, b)
}
func (m *OperationLogDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperationLogDetail.Marshal(b, m, deterministic)
}
func (m *OperationLogDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperationLogDetail.Merge(m, src)
}
func (m *OperationLogDetail) XXX_Size() int {
	return xxx_messageInfo_OperationLogDetail.Size(m)
}
func (m *OperationLogDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_OperationLogDetail.DiscardUnknown(m)
}

var xxx_messageInfo_OperationLogDetail proto.InternalMessageInfo

func (m *OperationLogDetail) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *OperationLogDetail) GetResourceID() string {
	if m != nil {
		return m.ResourceID
	}
	return ""
}

func (m *OperationLogDetail) GetTaskID() string {
	if m != nil {
		return m.TaskID
	}
	return ""
}

func (m *OperationLogDetail) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *OperationLogDetail) GetOpUser() string {
	if m != nil {
		return m.OpUser
	}
	return ""
}

func (m *OperationLogDetail) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *OperationLogDetail) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type NodeOperationStatus struct {
	Fail                 []*NodeOperationStatusInfo `protobuf:"bytes,1,rep,name=fail,proto3" json:"fail,omitempty"`
	Success              []*NodeOperationStatusInfo `protobuf:"bytes,2,rep,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-" bson:"-"`
	XXX_unrecognized     []byte                     `json:"-" bson:"-"`
	XXX_sizecache        int32                      `json:"-" bson:"-"`
}

func (m *NodeOperationStatus) Reset()         { *m = NodeOperationStatus{} }
func (m *NodeOperationStatus) String() string { return proto.CompactTextString(m) }
func (*NodeOperationStatus) ProtoMessage()    {}
func (*NodeOperationStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{247}
}

func (m *NodeOperationStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeOperationStatus.Unmarshal(m, b)
}
func (m *NodeOperationStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeOperationStatus.Marshal(b, m, deterministic)
}
func (m *NodeOperationStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeOperationStatus.Merge(m, src)
}
func (m *NodeOperationStatus) XXX_Size() int {
	return xxx_messageInfo_NodeOperationStatus.Size(m)
}
func (m *NodeOperationStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeOperationStatus.DiscardUnknown(m)
}

var xxx_messageInfo_NodeOperationStatus proto.InternalMessageInfo

func (m *NodeOperationStatus) GetFail() []*NodeOperationStatusInfo {
	if m != nil {
		return m.Fail
	}
	return nil
}

func (m *NodeOperationStatus) GetSuccess() []*NodeOperationStatusInfo {
	if m != nil {
		return m.Success
	}
	return nil
}

type NodeOperationStatusInfo struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=nodeName,proto3" json:"nodeName,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *NodeOperationStatusInfo) Reset()         { *m = NodeOperationStatusInfo{} }
func (m *NodeOperationStatusInfo) String() string { return proto.CompactTextString(m) }
func (*NodeOperationStatusInfo) ProtoMessage()    {}
func (*NodeOperationStatusInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{248}
}

func (m *NodeOperationStatusInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeOperationStatusInfo.Unmarshal(m, b)
}
func (m *NodeOperationStatusInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeOperationStatusInfo.Marshal(b, m, deterministic)
}
func (m *NodeOperationStatusInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeOperationStatusInfo.Merge(m, src)
}
func (m *NodeOperationStatusInfo) XXX_Size() int {
	return xxx_messageInfo_NodeOperationStatusInfo.Size(m)
}
func (m *NodeOperationStatusInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeOperationStatusInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NodeOperationStatusInfo proto.InternalMessageInfo

func (m *NodeOperationStatusInfo) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *NodeOperationStatusInfo) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DrainNodeRequest struct {
	InnerIPs                        []string `protobuf:"bytes,1,rep,name=innerIPs,proto3" json:"innerIPs,omitempty"`
	ClusterID                       string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Nodes                           []string `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Force                           bool     `protobuf:"varint,4,opt,name=force,proto3" json:"force,omitempty"`
	GracePeriodSeconds              uint32   `protobuf:"varint,5,opt,name=gracePeriodSeconds,proto3" json:"gracePeriodSeconds,omitempty"`
	IgnoreAllDaemonSets             bool     `protobuf:"varint,6,opt,name=ignoreAllDaemonSets,proto3" json:"ignoreAllDaemonSets,omitempty"`
	Timeout                         uint32   `protobuf:"varint,7,opt,name=timeout,proto3" json:"timeout,omitempty"`
	DeleteLocalData                 bool     `protobuf:"varint,8,opt,name=deleteLocalData,proto3" json:"deleteLocalData,omitempty"`
	Selector                        string   `protobuf:"bytes,9,opt,name=selector,proto3" json:"selector,omitempty"`
	PodSelector                     string   `protobuf:"bytes,10,opt,name=podSelector,proto3" json:"podSelector,omitempty"`
	DisableEviction                 bool     `protobuf:"varint,11,opt,name=disableEviction,proto3" json:"disableEviction,omitempty"`
	SkipWaitForDeleteTimeoutSeconds uint32   `protobuf:"varint,12,opt,name=skipWaitForDeleteTimeoutSeconds,proto3" json:"skipWaitForDeleteTimeoutSeconds,omitempty"`
	DryRun                          bool     `protobuf:"varint,13,opt,name=dryRun,proto3" json:"dryRun,omitempty"`
	XXX_NoUnkeyedLiteral            struct{} `json:"-" bson:"-"`
	XXX_unrecognized                []byte   `json:"-" bson:"-"`
	XXX_sizecache                   int32    `json:"-" bson:"-"`
}

func (m *DrainNodeRequest) Reset()         { *m = DrainNodeRequest{} }
func (m *DrainNodeRequest) String() string { return proto.CompactTextString(m) }
func (*DrainNodeRequest) ProtoMessage()    {}
func (*DrainNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{249}
}

func (m *DrainNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DrainNodeRequest.Unmarshal(m, b)
}
func (m *DrainNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DrainNodeRequest.Marshal(b, m, deterministic)
}
func (m *DrainNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DrainNodeRequest.Merge(m, src)
}
func (m *DrainNodeRequest) XXX_Size() int {
	return xxx_messageInfo_DrainNodeRequest.Size(m)
}
func (m *DrainNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DrainNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DrainNodeRequest proto.InternalMessageInfo

func (m *DrainNodeRequest) GetInnerIPs() []string {
	if m != nil {
		return m.InnerIPs
	}
	return nil
}

func (m *DrainNodeRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *DrainNodeRequest) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *DrainNodeRequest) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func (m *DrainNodeRequest) GetGracePeriodSeconds() uint32 {
	if m != nil {
		return m.GracePeriodSeconds
	}
	return 0
}

func (m *DrainNodeRequest) GetIgnoreAllDaemonSets() bool {
	if m != nil {
		return m.IgnoreAllDaemonSets
	}
	return false
}

func (m *DrainNodeRequest) GetTimeout() uint32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *DrainNodeRequest) GetDeleteLocalData() bool {
	if m != nil {
		return m.DeleteLocalData
	}
	return false
}

func (m *DrainNodeRequest) GetSelector() string {
	if m != nil {
		return m.Selector
	}
	return ""
}

func (m *DrainNodeRequest) GetPodSelector() string {
	if m != nil {
		return m.PodSelector
	}
	return ""
}

func (m *DrainNodeRequest) GetDisableEviction() bool {
	if m != nil {
		return m.DisableEviction
	}
	return false
}

func (m *DrainNodeRequest) GetSkipWaitForDeleteTimeoutSeconds() uint32 {
	if m != nil {
		return m.SkipWaitForDeleteTimeoutSeconds
	}
	return 0
}

func (m *DrainNodeRequest) GetDryRun() bool {
	if m != nil {
		return m.DryRun
	}
	return false
}

type DrainNodeResponse struct {
	Code                 uint32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                 `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *NodeOperationStatus `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *DrainNodeResponse) Reset()         { *m = DrainNodeResponse{} }
func (m *DrainNodeResponse) String() string { return proto.CompactTextString(m) }
func (*DrainNodeResponse) ProtoMessage()    {}
func (*DrainNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{250}
}

func (m *DrainNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DrainNodeResponse.Unmarshal(m, b)
}
func (m *DrainNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DrainNodeResponse.Marshal(b, m, deterministic)
}
func (m *DrainNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DrainNodeResponse.Merge(m, src)
}
func (m *DrainNodeResponse) XXX_Size() int {
	return xxx_messageInfo_DrainNodeResponse.Size(m)
}
func (m *DrainNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DrainNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DrainNodeResponse proto.InternalMessageInfo

func (m *DrainNodeResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DrainNodeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DrainNodeResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *DrainNodeResponse) GetData() *NodeOperationStatus {
	if m != nil {
		return m.Data
	}
	return nil
}

type NodeLabel struct {
	NodeName             string            `protobuf:"bytes,1,opt,name=nodeName,proto3" json:"nodeName,omitempty"`
	Labels               map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *NodeLabel) Reset()         { *m = NodeLabel{} }
func (m *NodeLabel) String() string { return proto.CompactTextString(m) }
func (*NodeLabel) ProtoMessage()    {}
func (*NodeLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{251}
}

func (m *NodeLabel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeLabel.Unmarshal(m, b)
}
func (m *NodeLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeLabel.Marshal(b, m, deterministic)
}
func (m *NodeLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeLabel.Merge(m, src)
}
func (m *NodeLabel) XXX_Size() int {
	return xxx_messageInfo_NodeLabel.Size(m)
}
func (m *NodeLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeLabel.DiscardUnknown(m)
}

var xxx_messageInfo_NodeLabel proto.InternalMessageInfo

func (m *NodeLabel) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *NodeLabel) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type UpdateNodeLabelsRequest struct {
	Nodes                []*NodeLabel `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	ClusterID            string       `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-" bson:"-"`
	XXX_unrecognized     []byte       `json:"-" bson:"-"`
	XXX_sizecache        int32        `json:"-" bson:"-"`
}

func (m *UpdateNodeLabelsRequest) Reset()         { *m = UpdateNodeLabelsRequest{} }
func (m *UpdateNodeLabelsRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateNodeLabelsRequest) ProtoMessage()    {}
func (*UpdateNodeLabelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{252}
}

func (m *UpdateNodeLabelsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNodeLabelsRequest.Unmarshal(m, b)
}
func (m *UpdateNodeLabelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNodeLabelsRequest.Marshal(b, m, deterministic)
}
func (m *UpdateNodeLabelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNodeLabelsRequest.Merge(m, src)
}
func (m *UpdateNodeLabelsRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateNodeLabelsRequest.Size(m)
}
func (m *UpdateNodeLabelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNodeLabelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNodeLabelsRequest proto.InternalMessageInfo

func (m *UpdateNodeLabelsRequest) GetNodes() []*NodeLabel {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *UpdateNodeLabelsRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

type UpdateNodeLabelsResponse struct {
	Code                 uint32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                 `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *NodeOperationStatus `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *UpdateNodeLabelsResponse) Reset()         { *m = UpdateNodeLabelsResponse{} }
func (m *UpdateNodeLabelsResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateNodeLabelsResponse) ProtoMessage()    {}
func (*UpdateNodeLabelsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{253}
}

func (m *UpdateNodeLabelsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNodeLabelsResponse.Unmarshal(m, b)
}
func (m *UpdateNodeLabelsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNodeLabelsResponse.Marshal(b, m, deterministic)
}
func (m *UpdateNodeLabelsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNodeLabelsResponse.Merge(m, src)
}
func (m *UpdateNodeLabelsResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateNodeLabelsResponse.Size(m)
}
func (m *UpdateNodeLabelsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNodeLabelsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNodeLabelsResponse proto.InternalMessageInfo

func (m *UpdateNodeLabelsResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateNodeLabelsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateNodeLabelsResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *UpdateNodeLabelsResponse) GetData() *NodeOperationStatus {
	if m != nil {
		return m.Data
	}
	return nil
}

type NodeTaint struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=nodeName,proto3" json:"nodeName,omitempty"`
	Taints               []*Taint `protobuf:"bytes,2,rep,name=taints,proto3" json:"taints,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *NodeTaint) Reset()         { *m = NodeTaint{} }
func (m *NodeTaint) String() string { return proto.CompactTextString(m) }
func (*NodeTaint) ProtoMessage()    {}
func (*NodeTaint) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{254}
}

func (m *NodeTaint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeTaint.Unmarshal(m, b)
}
func (m *NodeTaint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeTaint.Marshal(b, m, deterministic)
}
func (m *NodeTaint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeTaint.Merge(m, src)
}
func (m *NodeTaint) XXX_Size() int {
	return xxx_messageInfo_NodeTaint.Size(m)
}
func (m *NodeTaint) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeTaint.DiscardUnknown(m)
}

var xxx_messageInfo_NodeTaint proto.InternalMessageInfo

func (m *NodeTaint) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *NodeTaint) GetTaints() []*Taint {
	if m != nil {
		return m.Taints
	}
	return nil
}

type UpdateNodeTaintsRequest struct {
	Nodes                []*NodeTaint `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	ClusterID            string       `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-" bson:"-"`
	XXX_unrecognized     []byte       `json:"-" bson:"-"`
	XXX_sizecache        int32        `json:"-" bson:"-"`
}

func (m *UpdateNodeTaintsRequest) Reset()         { *m = UpdateNodeTaintsRequest{} }
func (m *UpdateNodeTaintsRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateNodeTaintsRequest) ProtoMessage()    {}
func (*UpdateNodeTaintsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{255}
}

func (m *UpdateNodeTaintsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNodeTaintsRequest.Unmarshal(m, b)
}
func (m *UpdateNodeTaintsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNodeTaintsRequest.Marshal(b, m, deterministic)
}
func (m *UpdateNodeTaintsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNodeTaintsRequest.Merge(m, src)
}
func (m *UpdateNodeTaintsRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateNodeTaintsRequest.Size(m)
}
func (m *UpdateNodeTaintsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNodeTaintsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNodeTaintsRequest proto.InternalMessageInfo

func (m *UpdateNodeTaintsRequest) GetNodes() []*NodeTaint {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *UpdateNodeTaintsRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

type UpdateNodeTaintsResponse struct {
	Code                 uint32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                 `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *NodeOperationStatus `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *UpdateNodeTaintsResponse) Reset()         { *m = UpdateNodeTaintsResponse{} }
func (m *UpdateNodeTaintsResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateNodeTaintsResponse) ProtoMessage()    {}
func (*UpdateNodeTaintsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{256}
}

func (m *UpdateNodeTaintsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNodeTaintsResponse.Unmarshal(m, b)
}
func (m *UpdateNodeTaintsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNodeTaintsResponse.Marshal(b, m, deterministic)
}
func (m *UpdateNodeTaintsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNodeTaintsResponse.Merge(m, src)
}
func (m *UpdateNodeTaintsResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateNodeTaintsResponse.Size(m)
}
func (m *UpdateNodeTaintsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNodeTaintsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNodeTaintsResponse proto.InternalMessageInfo

func (m *UpdateNodeTaintsResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateNodeTaintsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateNodeTaintsResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *UpdateNodeTaintsResponse) GetData() *NodeOperationStatus {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListResourceSchemaRequest struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListResourceSchemaRequest) Reset()         { *m = ListResourceSchemaRequest{} }
func (m *ListResourceSchemaRequest) String() string { return proto.CompactTextString(m) }
func (*ListResourceSchemaRequest) ProtoMessage()    {}
func (*ListResourceSchemaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{257}
}

func (m *ListResourceSchemaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResourceSchemaRequest.Unmarshal(m, b)
}
func (m *ListResourceSchemaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResourceSchemaRequest.Marshal(b, m, deterministic)
}
func (m *ListResourceSchemaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResourceSchemaRequest.Merge(m, src)
}
func (m *ListResourceSchemaRequest) XXX_Size() int {
	return xxx_messageInfo_ListResourceSchemaRequest.Size(m)
}
func (m *ListResourceSchemaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResourceSchemaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListResourceSchemaRequest proto.InternalMessageInfo

func (m *ListResourceSchemaRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

type GetResourceSchemaRequest struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetResourceSchemaRequest) Reset()         { *m = GetResourceSchemaRequest{} }
func (m *GetResourceSchemaRequest) String() string { return proto.CompactTextString(m) }
func (*GetResourceSchemaRequest) ProtoMessage()    {}
func (*GetResourceSchemaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{258}
}

func (m *GetResourceSchemaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResourceSchemaRequest.Unmarshal(m, b)
}
func (m *GetResourceSchemaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResourceSchemaRequest.Marshal(b, m, deterministic)
}
func (m *GetResourceSchemaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResourceSchemaRequest.Merge(m, src)
}
func (m *GetResourceSchemaRequest) XXX_Size() int {
	return xxx_messageInfo_GetResourceSchemaRequest.Size(m)
}
func (m *GetResourceSchemaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResourceSchemaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetResourceSchemaRequest proto.InternalMessageInfo

func (m *GetResourceSchemaRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *GetResourceSchemaRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type QueryPermByActionIDReqData struct {
	ProjectId            string   `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ClusterId            string   `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	TemplateId           string   `protobuf:"bytes,4,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	AccountId            string   `protobuf:"bytes,5,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Operator             string   `protobuf:"bytes,6,opt,name=operator,proto3" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *QueryPermByActionIDReqData) Reset()         { *m = QueryPermByActionIDReqData{} }
func (m *QueryPermByActionIDReqData) String() string { return proto.CompactTextString(m) }
func (*QueryPermByActionIDReqData) ProtoMessage()    {}
func (*QueryPermByActionIDReqData) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{259}
}

func (m *QueryPermByActionIDReqData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryPermByActionIDReqData.Unmarshal(m, b)
}
func (m *QueryPermByActionIDReqData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryPermByActionIDReqData.Marshal(b, m, deterministic)
}
func (m *QueryPermByActionIDReqData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryPermByActionIDReqData.Merge(m, src)
}
func (m *QueryPermByActionIDReqData) XXX_Size() int {
	return xxx_messageInfo_QueryPermByActionIDReqData.Size(m)
}
func (m *QueryPermByActionIDReqData) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryPermByActionIDReqData.DiscardUnknown(m)
}

var xxx_messageInfo_QueryPermByActionIDReqData proto.InternalMessageInfo

func (m *QueryPermByActionIDReqData) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *QueryPermByActionIDReqData) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *QueryPermByActionIDReqData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *QueryPermByActionIDReqData) GetTemplateId() string {
	if m != nil {
		return m.TemplateId
	}
	return ""
}

func (m *QueryPermByActionIDReqData) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *QueryPermByActionIDReqData) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type QueryPermByActionIDRequest struct {
	ActionID             string                      `protobuf:"bytes,1,opt,name=actionID,proto3" json:"actionID,omitempty"`
	PermCtx              *QueryPermByActionIDReqData `protobuf:"bytes,2,opt,name=perm_ctx,json=permCtx,proto3" json:"perm_ctx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-" bson:"-"`
	XXX_unrecognized     []byte                      `json:"-" bson:"-"`
	XXX_sizecache        int32                       `json:"-" bson:"-"`
}

func (m *QueryPermByActionIDRequest) Reset()         { *m = QueryPermByActionIDRequest{} }
func (m *QueryPermByActionIDRequest) String() string { return proto.CompactTextString(m) }
func (*QueryPermByActionIDRequest) ProtoMessage()    {}
func (*QueryPermByActionIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{260}
}

func (m *QueryPermByActionIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryPermByActionIDRequest.Unmarshal(m, b)
}
func (m *QueryPermByActionIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryPermByActionIDRequest.Marshal(b, m, deterministic)
}
func (m *QueryPermByActionIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryPermByActionIDRequest.Merge(m, src)
}
func (m *QueryPermByActionIDRequest) XXX_Size() int {
	return xxx_messageInfo_QueryPermByActionIDRequest.Size(m)
}
func (m *QueryPermByActionIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryPermByActionIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryPermByActionIDRequest proto.InternalMessageInfo

func (m *QueryPermByActionIDRequest) GetActionID() string {
	if m != nil {
		return m.ActionID
	}
	return ""
}

func (m *QueryPermByActionIDRequest) GetPermCtx() *QueryPermByActionIDReqData {
	if m != nil {
		return m.PermCtx
	}
	return nil
}

type Perms struct {
	Perms                map[string]*_struct.Value `protobuf:"bytes,1,rep,name=perms,proto3" json:"perms,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-" bson:"-"`
	XXX_unrecognized     []byte                    `json:"-" bson:"-"`
	XXX_sizecache        int32                     `json:"-" bson:"-"`
}

func (m *Perms) Reset()         { *m = Perms{} }
func (m *Perms) String() string { return proto.CompactTextString(m) }
func (*Perms) ProtoMessage()    {}
func (*Perms) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{261}
}

func (m *Perms) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Perms.Unmarshal(m, b)
}
func (m *Perms) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Perms.Marshal(b, m, deterministic)
}
func (m *Perms) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Perms.Merge(m, src)
}
func (m *Perms) XXX_Size() int {
	return xxx_messageInfo_Perms.Size(m)
}
func (m *Perms) XXX_DiscardUnknown() {
	xxx_messageInfo_Perms.DiscardUnknown(m)
}

var xxx_messageInfo_Perms proto.InternalMessageInfo

func (m *Perms) GetPerms() map[string]*_struct.Value {
	if m != nil {
		return m.Perms
	}
	return nil
}

type QueryPermByActionIDResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Data                 *Perms   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *QueryPermByActionIDResponse) Reset()         { *m = QueryPermByActionIDResponse{} }
func (m *QueryPermByActionIDResponse) String() string { return proto.CompactTextString(m) }
func (*QueryPermByActionIDResponse) ProtoMessage()    {}
func (*QueryPermByActionIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{262}
}

func (m *QueryPermByActionIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryPermByActionIDResponse.Unmarshal(m, b)
}
func (m *QueryPermByActionIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryPermByActionIDResponse.Marshal(b, m, deterministic)
}
func (m *QueryPermByActionIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryPermByActionIDResponse.Merge(m, src)
}
func (m *QueryPermByActionIDResponse) XXX_Size() int {
	return xxx_messageInfo_QueryPermByActionIDResponse.Size(m)
}
func (m *QueryPermByActionIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryPermByActionIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryPermByActionIDResponse proto.InternalMessageInfo

func (m *QueryPermByActionIDResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *QueryPermByActionIDResponse) GetData() *Perms {
	if m != nil {
		return m.Data
	}
	return nil
}

type CommonResp struct {
	Code                 uint32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool            `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *_struct.Struct `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" bson:"-"`
	XXX_unrecognized     []byte          `json:"-" bson:"-"`
	XXX_sizecache        int32           `json:"-" bson:"-"`
}

func (m *CommonResp) Reset()         { *m = CommonResp{} }
func (m *CommonResp) String() string { return proto.CompactTextString(m) }
func (*CommonResp) ProtoMessage()    {}
func (*CommonResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{263}
}

func (m *CommonResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonResp.Unmarshal(m, b)
}
func (m *CommonResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonResp.Marshal(b, m, deterministic)
}
func (m *CommonResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonResp.Merge(m, src)
}
func (m *CommonResp) XXX_Size() int {
	return xxx_messageInfo_CommonResp.Size(m)
}
func (m *CommonResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonResp.DiscardUnknown(m)
}

var xxx_messageInfo_CommonResp proto.InternalMessageInfo

func (m *CommonResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CommonResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CommonResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *CommonResp) GetData() *_struct.Struct {
	if m != nil {
		return m.Data
	}
	return nil
}

type CommonListResp struct {
	Code                 uint32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool               `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *_struct.ListValue `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-" bson:"-"`
	XXX_unrecognized     []byte             `json:"-" bson:"-"`
	XXX_sizecache        int32              `json:"-" bson:"-"`
}

func (m *CommonListResp) Reset()         { *m = CommonListResp{} }
func (m *CommonListResp) String() string { return proto.CompactTextString(m) }
func (*CommonListResp) ProtoMessage()    {}
func (*CommonListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{264}
}

func (m *CommonListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonListResp.Unmarshal(m, b)
}
func (m *CommonListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonListResp.Marshal(b, m, deterministic)
}
func (m *CommonListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonListResp.Merge(m, src)
}
func (m *CommonListResp) XXX_Size() int {
	return xxx_messageInfo_CommonListResp.Size(m)
}
func (m *CommonListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonListResp.DiscardUnknown(m)
}

var xxx_messageInfo_CommonListResp proto.InternalMessageInfo

func (m *CommonListResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CommonListResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CommonListResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *CommonListResp) GetData() *_struct.ListValue {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListBKCloudRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListBKCloudRequest) Reset()         { *m = ListBKCloudRequest{} }
func (m *ListBKCloudRequest) String() string { return proto.CompactTextString(m) }
func (*ListBKCloudRequest) ProtoMessage()    {}
func (*ListBKCloudRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{265}
}

func (m *ListBKCloudRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBKCloudRequest.Unmarshal(m, b)
}
func (m *ListBKCloudRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBKCloudRequest.Marshal(b, m, deterministic)
}
func (m *ListBKCloudRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBKCloudRequest.Merge(m, src)
}
func (m *ListBKCloudRequest) XXX_Size() int {
	return xxx_messageInfo_ListBKCloudRequest.Size(m)
}
func (m *ListBKCloudRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBKCloudRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListBKCloudRequest proto.InternalMessageInfo

type ListCCTopologyRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListCCTopologyRequest) Reset()         { *m = ListCCTopologyRequest{} }
func (m *ListCCTopologyRequest) String() string { return proto.CompactTextString(m) }
func (*ListCCTopologyRequest) ProtoMessage()    {}
func (*ListCCTopologyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{266}
}

func (m *ListCCTopologyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCCTopologyRequest.Unmarshal(m, b)
}
func (m *ListCCTopologyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCCTopologyRequest.Marshal(b, m, deterministic)
}
func (m *ListCCTopologyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCCTopologyRequest.Merge(m, src)
}
func (m *ListCCTopologyRequest) XXX_Size() int {
	return xxx_messageInfo_ListCCTopologyRequest.Size(m)
}
func (m *ListCCTopologyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCCTopologyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCCTopologyRequest proto.InternalMessageInfo

func (m *ListCCTopologyRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func init() {
	proto.RegisterType((*Cluster)(nil), "clustermanager.Cluster")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.Cluster.BcsAddonsEntry")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.Cluster.ExtraAddonsEntry")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.Cluster.ExtraInfoEntry")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.Cluster.LabelsEntry")
	proto.RegisterMapType((map[string]*Node)(nil), "clustermanager.Cluster.MasterEntry")
	proto.RegisterType((*Node)(nil), "clustermanager.Node")
	proto.RegisterType((*NetworkSetting)(nil), "clustermanager.NetworkSetting")
	proto.RegisterType((*SubnetSource)(nil), "clustermanager.SubnetSource")
	proto.RegisterType((*ExistedSubnetIDs)(nil), "clustermanager.ExistedSubnetIDs")
	proto.RegisterType((*NewSubnet)(nil), "clustermanager.NewSubnet")
	proto.RegisterType((*ClusterBasicSetting)(nil), "clustermanager.ClusterBasicSetting")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.ClusterBasicSetting.ClusterTagsEntry")
	proto.RegisterType((*ClusterAdvanceSetting)(nil), "clustermanager.ClusterAdvanceSetting")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.ClusterAdvanceSetting.ExtraArgsEntry")
	proto.RegisterType((*NodeSetting)(nil), "clustermanager.NodeSetting")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.NodeSetting.ExtraArgsEntry")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.NodeSetting.LabelsEntry")
	proto.RegisterType((*ClusterCredential)(nil), "clustermanager.ClusterCredential")
	proto.RegisterType((*Namespace)(nil), "clustermanager.Namespace")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.Namespace.LabelsEntry")
	proto.RegisterType((*ResourceQuota)(nil), "clustermanager.ResourceQuota")
	proto.RegisterType((*Credential)(nil), "clustermanager.Credential")
	proto.RegisterType((*BKOpsPlugin)(nil), "clustermanager.BKOpsPlugin")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.BKOpsPlugin.ParamsEntry")
	proto.RegisterType((*Action)(nil), "clustermanager.Action")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.Action.PluginsEntry")
	proto.RegisterType((*ClusterMgr)(nil), "clustermanager.ClusterMgr")
	proto.RegisterType((*NodeGroupMgr)(nil), "clustermanager.NodeGroupMgr")
	proto.RegisterType((*OSInfo)(nil), "clustermanager.OSInfo")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.OSInfo.RegionsEntry")
	proto.RegisterType((*Account)(nil), "clustermanager.Account")
	proto.RegisterType((*CloudAccount)(nil), "clustermanager.CloudAccount")
	proto.RegisterType((*CreateCloudAccountRequest)(nil), "clustermanager.CreateCloudAccountRequest")
	proto.RegisterType((*CreateCloudAccountResponse)(nil), "clustermanager.CreateCloudAccountResponse")
	proto.RegisterType((*UpdateCloudAccountRequest)(nil), "clustermanager.UpdateCloudAccountRequest")
	proto.RegisterType((*UpdateCloudAccountResponse)(nil), "clustermanager.UpdateCloudAccountResponse")
	proto.RegisterType((*DeleteCloudAccountRequest)(nil), "clustermanager.DeleteCloudAccountRequest")
	proto.RegisterType((*DeleteCloudAccountResponse)(nil), "clustermanager.DeleteCloudAccountResponse")
	proto.RegisterType((*ListCloudAccountPermRequest)(nil), "clustermanager.ListCloudAccountPermRequest")
	proto.RegisterType((*ListCloudAccountPermResponse)(nil), "clustermanager.ListCloudAccountPermResponse")
	proto.RegisterType((*ListCloudAccountRequest)(nil), "clustermanager.ListCloudAccountRequest")
	proto.RegisterType((*CloudAccountInfo)(nil), "clustermanager.CloudAccountInfo")
	proto.RegisterType((*ListCloudAccountResponse)(nil), "clustermanager.ListCloudAccountResponse")
	proto.RegisterType((*CloudVPC)(nil), "clustermanager.CloudVPC")
	proto.RegisterType((*CreateCloudVPCRequest)(nil), "clustermanager.CreateCloudVPCRequest")
	proto.RegisterType((*CreateCloudVPCResponse)(nil), "clustermanager.CreateCloudVPCResponse")
	proto.RegisterType((*UpdateCloudVPCRequest)(nil), "clustermanager.UpdateCloudVPCRequest")
	proto.RegisterType((*UpdateCloudVPCResponse)(nil), "clustermanager.UpdateCloudVPCResponse")
	proto.RegisterType((*DeleteCloudVPCRequest)(nil), "clustermanager.DeleteCloudVPCRequest")
	proto.RegisterType((*DeleteCloudVPCResponse)(nil), "clustermanager.DeleteCloudVPCResponse")
	proto.RegisterType((*ListCloudVPCRequest)(nil), "clustermanager.ListCloudVPCRequest")
	proto.RegisterType((*ListCloudVPCResponse)(nil), "clustermanager.ListCloudVPCResponse")
	proto.RegisterType((*ListCloudRegionsRequest)(nil), "clustermanager.ListCloudRegionsRequest")
	proto.RegisterType((*ListCloudRegionsResponse)(nil), "clustermanager.ListCloudRegionsResponse")
	proto.RegisterType((*CloudRegion)(nil), "clustermanager.CloudRegion")
	proto.RegisterType((*GetVPCCidrRequest)(nil), "clustermanager.GetVPCCidrRequest")
	proto.RegisterType((*GetVPCCidrResponse)(nil), "clustermanager.GetVPCCidrResponse")
	proto.RegisterType((*VPCCidr)(nil), "clustermanager.VPCCidr")
	proto.RegisterType((*Cloud)(nil), "clustermanager.Cloud")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.Cloud.ExtraPluginsEntry")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.Cloud.OpsPluginsEntry")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.Cloud.PlatformInfoEntry")
	proto.RegisterType((*CloudConfigInfo)(nil), "clustermanager.CloudConfigInfo")
	proto.RegisterType((*CloudNetworkInfo)(nil), "clustermanager.CloudNetworkInfo")
	proto.RegisterType((*NodeGroup)(nil), "clustermanager.NodeGroup")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.NodeGroup.LabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.NodeGroup.TagsEntry")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.NodeGroup.TaintsEntry")
	proto.RegisterType((*CloudArea)(nil), "clustermanager.CloudArea")
	proto.RegisterType((*AutoScalingGroup)(nil), "clustermanager.AutoScalingGroup")
	proto.RegisterType((*TimeRange)(nil), "clustermanager.TimeRange")
	proto.RegisterType((*DataDisk)(nil), "clustermanager.DataDisk")
	proto.RegisterType((*InternetAccessible)(nil), "clustermanager.InternetAccessible")
	proto.RegisterType((*InstanceTemplateConfig)(nil), "clustermanager.InstanceTemplateConfig")
	proto.RegisterType((*LaunchConfiguration)(nil), "clustermanager.LaunchConfiguration")
	proto.RegisterType((*ImageInfo)(nil), "clustermanager.ImageInfo")
	proto.RegisterType((*ClusterAutoScalingOption)(nil), "clustermanager.ClusterAutoScalingOption")
	proto.RegisterType((*Taint)(nil), "clustermanager.Taint")
	proto.RegisterType((*NodeTemplate)(nil), "clustermanager.NodeTemplate")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.NodeTemplate.ExtraArgsEntry")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.NodeTemplate.LabelsEntry")
	proto.RegisterType((*ModuleInfo)(nil), "clustermanager.ModuleInfo")
	proto.RegisterType((*RunTimeInfo)(nil), "clustermanager.RunTimeInfo")
	proto.RegisterType((*Project)(nil), "clustermanager.Project")
	proto.RegisterMapType((map[string]*Credential)(nil), "clustermanager.Project.CredentialsEntry")
	proto.RegisterType((*Task)(nil), "clustermanager.Task")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.Task.CommonParamsEntry")
	proto.RegisterMapType((map[string]*Step)(nil), "clustermanager.Task.StepsEntry")
	proto.RegisterType((*Step)(nil), "clustermanager.Step")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.Step.ParamsEntry")
	proto.RegisterType((*TkeCidr)(nil), "clustermanager.TkeCidr")
	proto.RegisterType((*TkeCidrCount)(nil), "clustermanager.TkeCidrCount")
	proto.RegisterType((*CreateClusterReq)(nil), "clustermanager.CreateClusterReq")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.CreateClusterReq.BcsAddonsEntry")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.CreateClusterReq.ExtraAddonsEntry")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.CreateClusterReq.ExtraInfoEntry")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.CreateClusterReq.LabelsEntry")
	proto.RegisterType((*CreateClusterResp)(nil), "clustermanager.CreateClusterResp")
	proto.RegisterType((*KubeConfigReq)(nil), "clustermanager.KubeConfigReq")
	proto.RegisterType((*KubeConfigResp)(nil), "clustermanager.KubeConfigResp")
	proto.RegisterType((*ImportCloudMode)(nil), "clustermanager.ImportCloudMode")
	proto.RegisterType((*ImportClusterReq)(nil), "clustermanager.ImportClusterReq")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.ImportClusterReq.ExtraInfoEntry")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.ImportClusterReq.LabelsEntry")
	proto.RegisterType((*ImportClusterResp)(nil), "clustermanager.ImportClusterResp")
	proto.RegisterType((*DeleteClusterReq)(nil), "clustermanager.DeleteClusterReq")
	proto.RegisterType((*DeleteClusterResp)(nil), "clustermanager.DeleteClusterResp")
	proto.RegisterType((*UpdateClusterReq)(nil), "clustermanager.UpdateClusterReq")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.UpdateClusterReq.BcsAddonsEntry")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.UpdateClusterReq.ExtraAddonsEntry")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.UpdateClusterReq.ExtraInfoEntry")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.UpdateClusterReq.LabelsEntry")
	proto.RegisterType((*UpdateClusterResp)(nil), "clustermanager.UpdateClusterResp")
	proto.RegisterType((*RetryCreateClusterReq)(nil), "clustermanager.RetryCreateClusterReq")
	proto.RegisterType((*RetryCreateClusterResp)(nil), "clustermanager.RetryCreateClusterResp")
	proto.RegisterType((*GetClusterReq)(nil), "clustermanager.GetClusterReq")
	proto.RegisterType((*GetClusterResp)(nil), "clustermanager.GetClusterResp")
	proto.RegisterType((*ExtraClusterInfo)(nil), "clustermanager.ExtraClusterInfo")
	proto.RegisterType((*CheckNodesRequest)(nil), "clustermanager.CheckNodesRequest")
	proto.RegisterType((*CheckNodesResponse)(nil), "clustermanager.CheckNodesResponse")
	proto.RegisterMapType((map[string]*NodeResult)(nil), "clustermanager.CheckNodesResponse.DataEntry")
	proto.RegisterType((*NodeResult)(nil), "clustermanager.NodeResult")
	proto.RegisterType((*UnCordonNodeRequest)(nil), "clustermanager.UnCordonNodeRequest")
	proto.RegisterType((*UnCordonNodeResponse)(nil), "clustermanager.UnCordonNodeResponse")
	proto.RegisterType((*CordonNodeRequest)(nil), "clustermanager.CordonNodeRequest")
	proto.RegisterType((*CordonNodeResponse)(nil), "clustermanager.CordonNodeResponse")
	proto.RegisterType((*UpdateNodeRequest)(nil), "clustermanager.UpdateNodeRequest")
	proto.RegisterType((*UpdateNodeResponse)(nil), "clustermanager.UpdateNodeResponse")
	proto.RegisterType((*NodeStatus)(nil), "clustermanager.NodeStatus")
	proto.RegisterType((*GetNodeRequest)(nil), "clustermanager.GetNodeRequest")
	proto.RegisterType((*GetNodeResponse)(nil), "clustermanager.GetNodeResponse")
	proto.RegisterType((*ListCommonClusterReq)(nil), "clustermanager.ListCommonClusterReq")
	proto.RegisterType((*ListCommonClusterResp)(nil), "clustermanager.ListCommonClusterResp")
	proto.RegisterType((*ListClusterReq)(nil), "clustermanager.ListClusterReq")
	proto.RegisterType((*ListClusterResp)(nil), "clustermanager.ListClusterResp")
	proto.RegisterMapType((map[string]*ExtraInfo)(nil), "clustermanager.ListClusterResp.ClusterExtraInfoEntry")
	proto.RegisterType((*ExtraInfo)(nil), "clustermanager.ExtraInfo")
	proto.RegisterType((*WebAnnotations)(nil), "clustermanager.WebAnnotations")
	proto.RegisterMapType((map[string]*_struct.Struct)(nil), "clustermanager.WebAnnotations.PermsEntry")
	proto.RegisterType((*ListNodesInClusterRequest)(nil), "clustermanager.ListNodesInClusterRequest")
	proto.RegisterType((*ListNodesInClusterResponse)(nil), "clustermanager.ListNodesInClusterResponse")
	proto.RegisterType((*ClusterNode)(nil), "clustermanager.ClusterNode")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.ClusterNode.LabelsEntry")
	proto.RegisterType((*ListMastersInClusterRequest)(nil), "clustermanager.ListMastersInClusterRequest")
	proto.RegisterType((*ListMastersInClusterResponse)(nil), "clustermanager.ListMastersInClusterResponse")
	proto.RegisterType((*GetClusterCredentialReq)(nil), "clustermanager.GetClusterCredentialReq")
	proto.RegisterType((*GetClusterCredentialResp)(nil), "clustermanager.GetClusterCredentialResp")
	proto.RegisterType((*UpdateClusterCredentialReq)(nil), "clustermanager.UpdateClusterCredentialReq")
	proto.RegisterType((*UpdateClusterCredentialResp)(nil), "clustermanager.UpdateClusterCredentialResp")
	proto.RegisterType((*DeleteClusterCredentialReq)(nil), "clustermanager.DeleteClusterCredentialReq")
	proto.RegisterType((*DeleteClusterCredentialResp)(nil), "clustermanager.DeleteClusterCredentialResp")
	proto.RegisterType((*ListClusterCredentialReq)(nil), "clustermanager.ListClusterCredentialReq")
	proto.RegisterType((*ListClusterCredentialResp)(nil), "clustermanager.ListClusterCredentialResp")
	proto.RegisterType((*InitFederationClusterReq)(nil), "clustermanager.InitFederationClusterReq")
	proto.RegisterType((*InitFederationClusterResp)(nil), "clustermanager.InitFederationClusterResp")
	proto.RegisterType((*AddFederatedClusterReq)(nil), "clustermanager.AddFederatedClusterReq")
	proto.RegisterType((*AddFederatedClusterResp)(nil), "clustermanager.AddFederatedClusterResp")
	proto.RegisterType((*CreateNamespaceReq)(nil), "clustermanager.CreateNamespaceReq")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.CreateNamespaceReq.LabelsEntry")
	proto.RegisterType((*CreateNamespaceResp)(nil), "clustermanager.CreateNamespaceResp")
	proto.RegisterType((*DeleteNamespaceReq)(nil), "clustermanager.DeleteNamespaceReq")
	proto.RegisterType((*DeleteNamespaceResp)(nil), "clustermanager.DeleteNamespaceResp")
	proto.RegisterType((*UpdateNamespaceReq)(nil), "clustermanager.UpdateNamespaceReq")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.UpdateNamespaceReq.LabelsEntry")
	proto.RegisterType((*UpdateNamespaceResp)(nil), "clustermanager.UpdateNamespaceResp")
	proto.RegisterType((*GetNamespaceReq)(nil), "clustermanager.GetNamespaceReq")
	proto.RegisterType((*GetNamespaceResp)(nil), "clustermanager.GetNamespaceResp")
	proto.RegisterType((*ListNamespaceReq)(nil), "clustermanager.ListNamespaceReq")
	proto.RegisterType((*ListNamespaceResp)(nil), "clustermanager.ListNamespaceResp")
	proto.RegisterType((*CreateNamespaceQuotaReq)(nil), "clustermanager.CreateNamespaceQuotaReq")
	proto.RegisterType((*CreateNamespaceQuotaResp)(nil), "clustermanager.CreateNamespaceQuotaResp")
	proto.RegisterType((*CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData)(nil), "clustermanager.CreateNamespaceQuotaResp.CreateNamespaceQuotaRespData")
	proto.RegisterType((*DeleteNamespaceQuotaReq)(nil), "clustermanager.DeleteNamespaceQuotaReq")
	proto.RegisterType((*DeleteNamespaceQuotaResp)(nil), "clustermanager.DeleteNamespaceQuotaResp")
	proto.RegisterType((*UpdateNamespaceQuotaReq)(nil), "clustermanager.UpdateNamespaceQuotaReq")
	proto.RegisterType((*UpdateNamespaceQuotaResp)(nil), "clustermanager.UpdateNamespaceQuotaResp")
	proto.RegisterType((*GetNamespaceQuotaReq)(nil), "clustermanager.GetNamespaceQuotaReq")
	proto.RegisterType((*GetNamespaceQuotaResp)(nil), "clustermanager.GetNamespaceQuotaResp")
	proto.RegisterType((*ListNamespaceQuotaReq)(nil), "clustermanager.ListNamespaceQuotaReq")
	proto.RegisterType((*ListNamespaceQuotaResp)(nil), "clustermanager.ListNamespaceQuotaResp")
	proto.RegisterType((*CreateNamespaceWithQuotaReq)(nil), "clustermanager.CreateNamespaceWithQuotaReq")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.CreateNamespaceWithQuotaReq.LabelsEntry")
	proto.RegisterType((*CreateNamespaceWithQuotaResp)(nil), "clustermanager.CreateNamespaceWithQuotaResp")
	proto.RegisterType((*CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData)(nil), "clustermanager.CreateNamespaceWithQuotaResp.CreateNamespaceWithQuotaRespData")
	proto.RegisterType((*CreateProjectRequest)(nil), "clustermanager.CreateProjectRequest")
	proto.RegisterMapType((map[string]*Credential)(nil), "clustermanager.CreateProjectRequest.CredentialsEntry")
	proto.RegisterType((*CreateProjectResponse)(nil), "clustermanager.CreateProjectResponse")
	proto.RegisterType((*UpdateProjectRequest)(nil), "clustermanager.UpdateProjectRequest")
	proto.RegisterMapType((map[string]*Credential)(nil), "clustermanager.UpdateProjectRequest.CredentialsEntry")
	proto.RegisterType((*UpdateProjectResponse)(nil), "clustermanager.UpdateProjectResponse")
	proto.RegisterType((*DeleteProjectRequest)(nil), "clustermanager.DeleteProjectRequest")
	proto.RegisterType((*DeleteProjectResponse)(nil), "clustermanager.DeleteProjectResponse")
	proto.RegisterType((*GetProjectRequest)(nil), "clustermanager.GetProjectRequest")
	proto.RegisterType((*GetProjectResponse)(nil), "clustermanager.GetProjectResponse")
	proto.RegisterType((*ListProjectRequest)(nil), "clustermanager.ListProjectRequest")
	proto.RegisterType((*ListProjectResponse)(nil), "clustermanager.ListProjectResponse")
	proto.RegisterType((*CreateCloudRequest)(nil), "clustermanager.CreateCloudRequest")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.CreateCloudRequest.ExtraPluginsEntry")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.CreateCloudRequest.OpsPluginsEntry")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.CreateCloudRequest.PlatformInfoEntry")
	proto.RegisterType((*CreateCloudResponse)(nil), "clustermanager.CreateCloudResponse")
	proto.RegisterType((*UpdateCloudRequest)(nil), "clustermanager.UpdateCloudRequest")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.UpdateCloudRequest.ExtraPluginsEntry")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.UpdateCloudRequest.OpsPluginsEntry")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.UpdateCloudRequest.PlatformInfoEntry")
	proto.RegisterType((*UpdateCloudResponse)(nil), "clustermanager.UpdateCloudResponse")
	proto.RegisterType((*DeleteCloudRequest)(nil), "clustermanager.DeleteCloudRequest")
	proto.RegisterType((*DeleteCloudResponse)(nil), "clustermanager.DeleteCloudResponse")
	proto.RegisterType((*GetCloudRequest)(nil), "clustermanager.GetCloudRequest")
	proto.RegisterType((*GetCloudResponse)(nil), "clustermanager.GetCloudResponse")
	proto.RegisterType((*ListCloudRequest)(nil), "clustermanager.ListCloudRequest")
	proto.RegisterType((*ListCloudResponse)(nil), "clustermanager.ListCloudResponse")
	proto.RegisterType((*CreateNodeGroupRequest)(nil), "clustermanager.CreateNodeGroupRequest")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.CreateNodeGroupRequest.LabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.CreateNodeGroupRequest.TagsEntry")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.CreateNodeGroupRequest.TaintsEntry")
	proto.RegisterType((*GroupExtraInfo)(nil), "clustermanager.GroupExtraInfo")
	proto.RegisterType((*CreateNodeGroupResponse)(nil), "clustermanager.CreateNodeGroupResponse")
	proto.RegisterType((*CreateNodeGroupResponseData)(nil), "clustermanager.CreateNodeGroupResponseData")
	proto.RegisterType((*UpdateNodeGroupRequest)(nil), "clustermanager.UpdateNodeGroupRequest")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.UpdateNodeGroupRequest.LabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.UpdateNodeGroupRequest.TagsEntry")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.UpdateNodeGroupRequest.TaintsEntry")
	proto.RegisterType((*UpdateNodeGroupResponse)(nil), "clustermanager.UpdateNodeGroupResponse")
	proto.RegisterType((*DeleteNodeGroupRequest)(nil), "clustermanager.DeleteNodeGroupRequest")
	proto.RegisterType((*DeleteNodeGroupResponse)(nil), "clustermanager.DeleteNodeGroupResponse")
	proto.RegisterType((*DeleteNodeGroupResponseData)(nil), "clustermanager.DeleteNodeGroupResponseData")
	proto.RegisterType((*GetNodeGroupRequest)(nil), "clustermanager.GetNodeGroupRequest")
	proto.RegisterType((*GetNodeGroupResponse)(nil), "clustermanager.GetNodeGroupResponse")
	proto.RegisterType((*ListNodeGroupRequest)(nil), "clustermanager.ListNodeGroupRequest")
	proto.RegisterType((*ListNodeGroupResponse)(nil), "clustermanager.ListNodeGroupResponse")
	proto.RegisterType((*AddNodesRequest)(nil), "clustermanager.AddNodesRequest")
	proto.RegisterType((*AddNodesResponse)(nil), "clustermanager.AddNodesResponse")
	proto.RegisterType((*DeleteNodesRequest)(nil), "clustermanager.DeleteNodesRequest")
	proto.RegisterType((*DeleteNodesResponse)(nil), "clustermanager.DeleteNodesResponse")
	proto.RegisterType((*MoveNodesToGroupRequest)(nil), "clustermanager.MoveNodesToGroupRequest")
	proto.RegisterType((*MoveNodesToGroupResponse)(nil), "clustermanager.MoveNodesToGroupResponse")
	proto.RegisterType((*RemoveNodesFromGroupRequest)(nil), "clustermanager.RemoveNodesFromGroupRequest")
	proto.RegisterType((*RemoveNodesFromGroupResponse)(nil), "clustermanager.RemoveNodesFromGroupResponse")
	proto.RegisterType((*CleanNodesInGroupRequest)(nil), "clustermanager.CleanNodesInGroupRequest")
	proto.RegisterType((*CleanNodesInGroupResponse)(nil), "clustermanager.CleanNodesInGroupResponse")
	proto.RegisterType((*CleanNodesInGroupV2Request)(nil), "clustermanager.CleanNodesInGroupV2Request")
	proto.RegisterType((*CleanNodesInGroupV2Response)(nil), "clustermanager.CleanNodesInGroupV2Response")
	proto.RegisterType((*ListNodesInGroupRequest)(nil), "clustermanager.ListNodesInGroupRequest")
	proto.RegisterType((*ListNodesInGroupResponse)(nil), "clustermanager.ListNodesInGroupResponse")
	proto.RegisterType((*NodeGroupNode)(nil), "clustermanager.NodeGroupNode")
	proto.RegisterType((*UpdateGroupDesiredSizeRequest)(nil), "clustermanager.UpdateGroupDesiredSizeRequest")
	proto.RegisterType((*UpdateGroupDesiredSizeResponse)(nil), "clustermanager.UpdateGroupDesiredSizeResponse")
	proto.RegisterType((*UpdateGroupDesiredNodeRequest)(nil), "clustermanager.UpdateGroupDesiredNodeRequest")
	proto.RegisterType((*UpdateGroupDesiredNodeResponse)(nil), "clustermanager.UpdateGroupDesiredNodeResponse")
	proto.RegisterType((*EnableNodeGroupAutoScaleRequest)(nil), "clustermanager.EnableNodeGroupAutoScaleRequest")
	proto.RegisterType((*EnableNodeGroupAutoScaleResponse)(nil), "clustermanager.EnableNodeGroupAutoScaleResponse")
	proto.RegisterType((*DisableNodeGroupAutoScaleRequest)(nil), "clustermanager.DisableNodeGroupAutoScaleRequest")
	proto.RegisterType((*DisableNodeGroupAutoScaleResponse)(nil), "clustermanager.DisableNodeGroupAutoScaleResponse")
	proto.RegisterType((*CreateTaskRequest)(nil), "clustermanager.CreateTaskRequest")
	proto.RegisterMapType((map[string]*Step)(nil), "clustermanager.CreateTaskRequest.StepsEntry")
	proto.RegisterType((*CreateTaskResponse)(nil), "clustermanager.CreateTaskResponse")
	proto.RegisterType((*RetryTaskRequest)(nil), "clustermanager.RetryTaskRequest")
	proto.RegisterType((*RetryTaskResponse)(nil), "clustermanager.RetryTaskResponse")
	proto.RegisterType((*UpdateTaskRequest)(nil), "clustermanager.UpdateTaskRequest")
	proto.RegisterMapType((map[string]*Step)(nil), "clustermanager.UpdateTaskRequest.StepsEntry")
	proto.RegisterType((*UpdateTaskResponse)(nil), "clustermanager.UpdateTaskResponse")
	proto.RegisterType((*DeleteTaskRequest)(nil), "clustermanager.DeleteTaskRequest")
	proto.RegisterType((*DeleteTaskResponse)(nil), "clustermanager.DeleteTaskResponse")
	proto.RegisterType((*GetTaskRequest)(nil), "clustermanager.GetTaskRequest")
	proto.RegisterType((*GetTaskResponse)(nil), "clustermanager.GetTaskResponse")
	proto.RegisterType((*ListTaskRequest)(nil), "clustermanager.ListTaskRequest")
	proto.RegisterType((*ListTaskResponse)(nil), "clustermanager.ListTaskResponse")
	proto.RegisterType((*CreateAutoScalingOptionRequest)(nil), "clustermanager.CreateAutoScalingOptionRequest")
	proto.RegisterType((*CreateAutoScalingOptionResponse)(nil), "clustermanager.CreateAutoScalingOptionResponse")
	proto.RegisterType((*UpdateAutoScalingOptionRequest)(nil), "clustermanager.UpdateAutoScalingOptionRequest")
	proto.RegisterType((*UpdateAutoScalingOptionResponse)(nil), "clustermanager.UpdateAutoScalingOptionResponse")
	proto.RegisterType((*DeleteAutoScalingOptionRequest)(nil), "clustermanager.DeleteAutoScalingOptionRequest")
	proto.RegisterType((*DeleteAutoScalingOptionResponse)(nil), "clustermanager.DeleteAutoScalingOptionResponse")
	proto.RegisterType((*GetAutoScalingOptionRequest)(nil), "clustermanager.GetAutoScalingOptionRequest")
	proto.RegisterType((*GetAutoScalingOptionResponse)(nil), "clustermanager.GetAutoScalingOptionResponse")
	proto.RegisterType((*ListAutoScalingOptionRequest)(nil), "clustermanager.ListAutoScalingOptionRequest")
	proto.RegisterType((*ListAutoScalingOptionResponse)(nil), "clustermanager.ListAutoScalingOptionResponse")
	proto.RegisterType((*UpdateAutoScalingStatusRequest)(nil), "clustermanager.UpdateAutoScalingStatusRequest")
	proto.RegisterType((*UpdateAutoScalingStatusResponse)(nil), "clustermanager.UpdateAutoScalingStatusResponse")
	proto.RegisterType((*RegionInfo)(nil), "clustermanager.RegionInfo")
	proto.RegisterType((*GetCloudRegionsRequest)(nil), "clustermanager.GetCloudRegionsRequest")
	proto.RegisterType((*GetCloudRegionsResponse)(nil), "clustermanager.GetCloudRegionsResponse")
	proto.RegisterType((*ZoneInfo)(nil), "clustermanager.ZoneInfo")
	proto.RegisterType((*CloudClusterInfo)(nil), "clustermanager.CloudClusterInfo")
	proto.RegisterType((*ListCloudRegionClusterRequest)(nil), "clustermanager.ListCloudRegionClusterRequest")
	proto.RegisterType((*ListCloudRegionClusterResponse)(nil), "clustermanager.ListCloudRegionClusterResponse")
	proto.RegisterType((*GetCloudRegionZonesRequest)(nil), "clustermanager.GetCloudRegionZonesRequest")
	proto.RegisterType((*GetCloudRegionZonesResponse)(nil), "clustermanager.GetCloudRegionZonesResponse")
	proto.RegisterType((*OperationLog)(nil), "clustermanager.OperationLog")
	proto.RegisterType((*ListCloudInstanceTypeRequest)(nil), "clustermanager.ListCloudInstanceTypeRequest")
	proto.RegisterType((*ListCloudInstanceTypeResponse)(nil), "clustermanager.ListCloudInstanceTypeResponse")
	proto.RegisterType((*InstanceType)(nil), "clustermanager.InstanceType")
	proto.RegisterType((*ListCloudOsImageRequest)(nil), "clustermanager.ListCloudOsImageRequest")
	proto.RegisterType((*ListCloudOsImageResponse)(nil), "clustermanager.ListCloudOsImageResponse")
	proto.RegisterType((*OsImage)(nil), "clustermanager.OsImage")
	proto.RegisterType((*ListCloudSubnetsRequest)(nil), "clustermanager.ListCloudSubnetsRequest")
	proto.RegisterType((*ListCloudSubnetsResponse)(nil), "clustermanager.ListCloudSubnetsResponse")
	proto.RegisterType((*Subnet)(nil), "clustermanager.Subnet")
	proto.RegisterType((*ListCloudSecurityGroupsRequest)(nil), "clustermanager.ListCloudSecurityGroupsRequest")
	proto.RegisterType((*ListCloudSecurityGroupsResponse)(nil), "clustermanager.ListCloudSecurityGroupsResponse")
	proto.RegisterType((*SecurityGroup)(nil), "clustermanager.SecurityGroup")
	proto.RegisterType((*ListOperationLogsRequest)(nil), "clustermanager.ListOperationLogsRequest")
	proto.RegisterType((*ListOperationLogsResponse)(nil), "clustermanager.ListOperationLogsResponse")
	proto.RegisterType((*ListOperationLogsResponseData)(nil), "clustermanager.ListOperationLogsResponseData")
	proto.RegisterType((*OperationLogDetail)(nil), "clustermanager.OperationLogDetail")
	proto.RegisterType((*NodeOperationStatus)(nil), "clustermanager.NodeOperationStatus")
	proto.RegisterType((*NodeOperationStatusInfo)(nil), "clustermanager.NodeOperationStatusInfo")
	proto.RegisterType((*DrainNodeRequest)(nil), "clustermanager.DrainNodeRequest")
	proto.RegisterType((*DrainNodeResponse)(nil), "clustermanager.DrainNodeResponse")
	proto.RegisterType((*NodeLabel)(nil), "clustermanager.NodeLabel")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.NodeLabel.LabelsEntry")
	proto.RegisterType((*UpdateNodeLabelsRequest)(nil), "clustermanager.UpdateNodeLabelsRequest")
	proto.RegisterType((*UpdateNodeLabelsResponse)(nil), "clustermanager.UpdateNodeLabelsResponse")
	proto.RegisterType((*NodeTaint)(nil), "clustermanager.NodeTaint")
	proto.RegisterType((*UpdateNodeTaintsRequest)(nil), "clustermanager.UpdateNodeTaintsRequest")
	proto.RegisterType((*UpdateNodeTaintsResponse)(nil), "clustermanager.UpdateNodeTaintsResponse")
	proto.RegisterType((*ListResourceSchemaRequest)(nil), "clustermanager.ListResourceSchemaRequest")
	proto.RegisterType((*GetResourceSchemaRequest)(nil), "clustermanager.GetResourceSchemaRequest")
	proto.RegisterType((*QueryPermByActionIDReqData)(nil), "clustermanager.QueryPermByActionIDReqData")
	proto.RegisterType((*QueryPermByActionIDRequest)(nil), "clustermanager.QueryPermByActionIDRequest")
	proto.RegisterType((*Perms)(nil), "clustermanager.Perms")
	proto.RegisterMapType((map[string]*_struct.Value)(nil), "clustermanager.Perms.PermsEntry")
	proto.RegisterType((*QueryPermByActionIDResponse)(nil), "clustermanager.QueryPermByActionIDResponse")
	proto.RegisterType((*CommonResp)(nil), "clustermanager.CommonResp")
	proto.RegisterType((*CommonListResp)(nil), "clustermanager.CommonListResp")
	proto.RegisterType((*ListBKCloudRequest)(nil), "clustermanager.ListBKCloudRequest")
	proto.RegisterType((*ListCCTopologyRequest)(nil), "clustermanager.ListCCTopologyRequest")
}

func init() { proto.RegisterFile("clustermanager.proto", fileDescriptor_d789ea45d40d7a6b) }

var fileDescriptor_d789ea45d40d7a6b = []byte{
	// 50558 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0xfd, 0x7b, 0x74, 0x14, 0xc7,
	0x9a, 0x20, 0x88, 0x4f, 0x0a, 0x01, 0x52, 0x48, 0xbc, 0x92, 0x87, 0x65, 0x6c, 0xe3, 0xb2, 0xfc,
	0x12, 0x65, 0x09, 0x41, 0xda, 0xd7, 0x0f, 0xf9, 0xfa, 0xda, 0x59, 0x25, 0x81, 0xcb, 0x80, 0x90,
	0x53, 0x02, 0x5f, 0xdb, 0xd7, 0xd7, 0x53, 0x54, 0x25, 0xa2, 0x8c, 0x54, 0xa5, 0x5b, 0x55, 0x92,
	0xc1, 0xb7, 0xfb, 0xde, 0x92, 0x90, 0x40, 0x02, 0xbd, 0x48, 0x23, 0x1e, 0x42, 0x3c, 0x84, 0x79,
	0xc8, 0x06, 0x49, 0x60, 0x63, 0x28, 0x95, 0x24, 0x73, 0x7a, 0x7e, 0xdd, 0xbf, 0xd9, 0xd9, 0xd9,
	0xb3, 0x7f, 0x78, 0x7a, 0xf7, 0x9c, 0xdd, 0xe9, 0xd9, 0xed, 0x1d, 0x2a, 0xb3, 0x4a, 0xbd, 0x7d,
	0x56, 0x7d, 0xe6, 0x9c, 0xfd, 0x63, 0xfd, 0xcf, 0xec, 0xc9, 0xf8, 0x22, 0x23, 0x23, 0xb3, 0x4a,
	0x32, 0xd8, 0x6e, 0x4f, 0x7b, 0x7d, 0x7c, 0x0e, 0xaa, 0x2f, 0x22, 0xbe, 0x78, 0x64, 0xc4, 0x17,
	0xdf, 0xf7, 0xc5, 0xf7, 0x40, 0xab, 0x7c, 0x0d, 0xcd, 0x91, 0xa8, 0x1c, 0x6e, 0xf4, 0x06, 0xbd,
	0xf5, 0x72, 0x78, 0x43, 0x53, 0x38, 0x14, 0x0d, 0xf1, 0x4b, 0xad, 0xd0, 0xb5, 0x8f, 0xd6, 0x87,
	0x42, 0xf5, 0x0d, 0x72, 0xb9, 0xb7, 0x29, 0x50, 0xee, 0x0d, 0x06, 0x43, 0x51, 0x6f, 0x34, 0x10,
	0x0a, 0x46, 0xa0, 0x36, 0x2d, 0xc5, 0xbf, 0x76, 0x37, 0xef, 0x29, 0x8f, 0x44, 0xc3, 0xcd, 0xbe,
	0x28, 0x29, 0x2d, 0xc5, 0xff, 0xf8, 0xca, 0xea, 0xe5, 0x60, 0x59, 0xe4, 0x63, 0x6f, 0x7d, 0xbd,
	0x1c, 0x2e, 0x0f, 0x35, 0xe1, 0xf6, 0x59, 0x70, 0x3d, 0xd4, 0xe2, 0x6d, 0x08, 0xf8, 0xbd, 0x51,
	0xb9, 0xdc, 0xf8, 0x83, 0x14, 0xac, 0xb3, 0x77, 0xf2, 0x71, 0xd8, 0xdb, 0xd4, 0x24, 0x87, 0x49,
	0xc3, 0xe2, 0xae, 0xe7, 0xd0, 0x62, 0x37, 0x8c, 0x9a, 0xff, 0x3d, 0xca, 0x27, 0x13, 0xf0, 0x54,
	0x16, 0x71, 0x0e, 0xae, 0x24, 0xdf, 0xf5, 0x86, 0x22, 0xbe, 0xe6, 0x34, 0xa1, 0xc2, 0x46, 0x97,
	0xbb, 0x56, 0x3d, 0xd4, 0x31, 0x73, 0x70, 0x24, 0x39, 0x7d, 0x37, 0x75, 0x7c, 0x64, 0xe6, 0xcc,
	0xa1, 0xd4, 0x37, 0x97, 0x3c, 0x95, 0xb3, 0x53, 0xdd, 0xda, 0x85, 0x29, 0x75, 0xaa, 0x2f, 0x19,
	0x4f, 0xb8, 0xdc, 0xb5, 0x65, 0x5b, 0x5f, 0xae, 0x2d, 0xfb, 0xad, 0xfe, 0x9f, 0x64, 0x36, 0xe6,
	0xdf, 0x40, 0x05, 0xe4, 0x47, 0xb5, 0xb7, 0x51, 0x2e, 0xca, 0xc1, 0x3d, 0xac, 0x53, 0xc4, 0x47,
	0x9c, 0x2c, 0x5c, 0x28, 0x04, 0xa4, 0x6a, 0x7f, 0x4f, 0xea, 0xea, 0x0d, 0x89, 0x2d, 0xe2, 0x4f,
	0x72, 0x68, 0xe5, 0x1e, 0xd9, 0x2f, 0x87, 0xf1, 0xe4, 0xdd, 0x74, 0xb0, 0x0b, 0x30, 0x2a, 0x59,
	0x11, 0x77, 0x3b, 0xb3, 0x95, 0x0b, 0x5b, 0xd5, 0x2b, 0x6d, 0xda, 0xb9, 0xa1, 0xf4, 0xf8, 0x65,
	0xc0, 0x9d, 0x8c, 0x27, 0xd2, 0xad, 0xc7, 0x67, 0xda, 0xae, 0xc0, 0xcf, 0xd4, 0x60, 0x7b, 0x32,
	0x1e, 0x9b, 0x39, 0x38, 0xa2, 0x76, 0x1e, 0x9a, 0x9d, 0xea, 0x4e, 0x1d, 0x1f, 0x49, 0x8f, 0x5f,
	0xf6, 0x54, 0xa6, 0xc7, 0x6e, 0xa8, 0xd3, 0x03, 0x50, 0xf1, 0xcd, 0x50, 0x24, 0x9a, 0xbc, 0x3b,
	0xac, 0xb5, 0x8e, 0x4b, 0xd9, 0x7a, 0xe0, 0xb7, 0xa2, 0xbc, 0xa6, 0x70, 0xa8, 0x25, 0xe0, 0x97,
	0xc3, 0x45, 0xb9, 0x78, 0x34, 0xe5, 0x8a, 0x58, 0xea, 0xa4, 0x40, 0xc1, 0x41, 0x7a, 0x4e, 0x1c,
	0x9b, 0xe9, 0xe8, 0x49, 0x4d, 0x8f, 0xcd, 0x4e, 0x75, 0x27, 0xe3, 0x89, 0x64, 0xe2, 0x58, 0xea,
	0xe6, 0xa4, 0x7a, 0xee, 0xa8, 0xa7, 0x52, 0xa2, 0x75, 0xf9, 0x97, 0xd0, 0xa2, 0xb0, 0x5c, 0x1f,
	0x08, 0x05, 0x8b, 0x16, 0x62, 0x54, 0x8f, 0x2b, 0xe2, 0xa3, 0x4e, 0x02, 0x12, 0x78, 0xb2, 0x3c,
	0xdd, 0x09, 0xf5, 0xfc, 0x79, 0x32, 0x24, 0x52, 0xc6, 0x6f, 0x43, 0x0b, 0x5b, 0x9a, 0x7c, 0x9e,
	0xca, 0xa2, 0x45, 0xb8, 0xdd, 0x8b, 0x8a, 0xf8, 0xbc, 0x13, 0x20, 0x82, 0x13, 0x9a, 0x69, 0x5d,
	0x31, 0x75, 0x68, 0xa4, 0xa5, 0xc9, 0x37, 0x3b, 0xd5, 0x0d, 0x13, 0x4e, 0xf5, 0x8e, 0xab, 0x17,
	0x0f, 0x26, 0xe3, 0x47, 0x67, 0xce, 0x9e, 0x53, 0xef, 0x76, 0xa8, 0xc3, 0xd7, 0x24, 0x68, 0xc2,
	0xbf, 0x89, 0xf2, 0x9b, 0xc2, 0xa1, 0x8f, 0x64, 0x5f, 0xd4, 0x53, 0x59, 0xb4, 0x18, 0x63, 0x74,
	0x2a, 0xe2, 0xb3, 0x4e, 0x13, 0x2a, 0xac, 0x35, 0xb1, 0x76, 0x7c, 0x95, 0x6e, 0x3d, 0x9e, 0x1a,
	0x6c, 0x9f, 0x19, 0x9e, 0x48, 0x9d, 0x19, 0xf3, 0x54, 0x4a, 0x66, 0x35, 0xfe, 0x00, 0x42, 0xbb,
	0x9b, 0x23, 0x81, 0xa0, 0x1c, 0x89, 0x78, 0x2a, 0x8b, 0xf2, 0x30, 0xaa, 0x77, 0x15, 0x71, 0x97,
	0x93, 0x01, 0x0b, 0x6f, 0x42, 0xcb, 0xd4, 0xe4, 0x31, 0x75, 0x6c, 0x10, 0x7f, 0x92, 0x41, 0xf5,
	0xc8, 0xb0, 0xa7, 0xb2, 0xd4, 0x91, 0xd9, 0x89, 0x51, 0x36, 0x3b, 0xd5, 0x8d, 0x3f, 0x95, 0x76,
	0xf6, 0xb2, 0x96, 0xe8, 0x4f, 0x26, 0x7a, 0xdd, 0xdb, 0x2b, 0x5d, 0x12, 0x83, 0x95, 0xdf, 0x8b,
	0x0a, 0xe4, 0x60, 0x4b, 0x20, 0x1c, 0x0a, 0x36, 0xca, 0xc1, 0x68, 0x51, 0x3e, 0xee, 0x7b, 0xb3,
	0x22, 0xba, 0x9d, 0x2c, 0x5c, 0x78, 0xc1, 0xec, 0x63, 0x7c, 0x42, 0x4d, 0xe8, 0x7d, 0x90, 0x85,
	0xc1, 0x2b, 0x3c, 0x3b, 0xd5, 0x1d, 0x89, 0x7a, 0xeb, 0x67, 0xa7, 0xba, 0xfd, 0xf2, 0xee, 0x66,
	0xfd, 0xdf, 0xa6, 0x70, 0xc8, 0x2f, 0xb1, 0x28, 0xf8, 0xb7, 0x11, 0x92, 0x83, 0xf5, 0x81, 0xa0,
	0x5c, 0x77, 0xa0, 0x49, 0x2e, 0x42, 0xb8, 0xa3, 0x4d, 0x8a, 0xb8, 0xc1, 0xc9, 0x80, 0x8d, 0x6d,
	0x90, 0x9a, 0x3a, 0xa1, 0xf5, 0x2a, 0xea, 0xd4, 0x80, 0xf6, 0x69, 0xef, 0xec, 0x54, 0xf7, 0xbe,
	0x97, 0x23, 0xf7, 0x62, 0xad, 0x8d, 0x72, 0x24, 0x14, 0x91, 0x98, 0xda, 0xfc, 0x07, 0xa8, 0x20,
	0x10, 0xa9, 0xda, 0xaf, 0x1f, 0x81, 0x40, 0x8b, 0x5c, 0x54, 0xe0, 0xe0, 0x4a, 0xf2, 0x5c, 0xaf,
	0x2a, 0xe2, 0xcb, 0x4e, 0x16, 0x2e, 0xac, 0xd7, 0x4e, 0x8d, 0xab, 0xfd, 0x57, 0x60, 0x51, 0x52,
	0x47, 0xaf, 0xab, 0x3d, 0x17, 0xa0, 0x1b, 0xfd, 0x23, 0x4f, 0x9e, 0x4a, 0x8f, 0xe9, 0x1b, 0x7e,
	0x8f, 0xb7, 0x21, 0x22, 0x4b, 0x6c, 0x3b, 0x7e, 0x17, 0x3d, 0x90, 0x78, 0xc8, 0x85, 0x78, 0xc8,
	0x2f, 0x28, 0xe2, 0x26, 0x27, 0x0b, 0x17, 0x8a, 0xc9, 0x98, 0xf1, 0x46, 0x9d, 0x9d, 0xea, 0x36,
	0xf7, 0xff, 0xbd, 0x58, 0x6b, 0x24, 0x10, 0xac, 0x6f, 0x90, 0x25, 0xb6, 0x01, 0xbf, 0x0b, 0x2d,
	0x6a, 0xf0, 0xee, 0x96, 0x1b, 0x22, 0x45, 0x4b, 0x1c, 0x0b, 0x4a, 0x0a, 0x84, 0x27, 0x37, 0xd8,
	0xc8, 0x25, 0x39, 0x37, 0x1b, 0xb6, 0xe1, 0x5a, 0x55, 0xc1, 0x68, 0xf8, 0x80, 0xeb, 0x61, 0x45,
	0x5c, 0xe3, 0x24, 0xed, 0x0c, 0x1a, 0xa0, 0x5d, 0x38, 0x9c, 0x1a, 0xfd, 0x46, 0x22, 0x50, 0xfe,
	0x35, 0xb4, 0xd8, 0x17, 0x96, 0xbd, 0xd1, 0x50, 0xb8, 0x68, 0x29, 0x1e, 0xeb, 0x93, 0x8a, 0xe8,
	0x70, 0x1a, 0x30, 0x61, 0x35, 0x39, 0x62, 0xf8, 0x8b, 0xa9, 0x9d, 0x67, 0xd4, 0xc9, 0x44, 0x3a,
	0xd6, 0x21, 0x19, 0xe5, 0xfc, 0x3a, 0x84, 0xf0, 0x9f, 0x72, 0x5d, 0xa0, 0x51, 0x2e, 0x5a, 0xa6,
	0x63, 0x90, 0x18, 0x88, 0x5e, 0xde, 0xdc, 0xe4, 0x37, 0xca, 0x97, 0x43, 0xb9, 0x09, 0xe1, 0x5b,
	0x73, 0x50, 0xfe, 0x6e, 0x5f, 0x44, 0xf4, 0xfb, 0x43, 0xc1, 0x48, 0xd1, 0x0a, 0x3c, 0xb5, 0x67,
	0xe6, 0x9a, 0x9a, 0xcb, 0xa8, 0x08, 0xb3, 0x4b, 0x70, 0x8a, 0x78, 0x9b, 0x73, 0x9a, 0xed, 0x85,
	0x11, 0x0e, 0x86, 0x48, 0x66, 0x7a, 0xf2, 0x76, 0xfa, 0xee, 0x99, 0xf4, 0x70, 0x37, 0x10, 0xd8,
	0xd4, 0xf4, 0x98, 0xd6, 0xa7, 0x24, 0x27, 0x6f, 0xab, 0x63, 0x5d, 0xe9, 0xcf, 0x3a, 0x60, 0x9b,
	0xc3, 0xc4, 0x92, 0x53, 0x83, 0xa9, 0x5b, 0x17, 0xd5, 0xa9, 0x81, 0x64, 0xe2, 0x58, 0x32, 0x7e,
	0x04, 0xbe, 0x2f, 0xd0, 0x14, 0xa8, 0x00, 0x78, 0xd4, 0xf1, 0x09, 0x6d, 0xfc, 0x78, 0x32, 0xde,
	0x9b, 0x1e, 0xbe, 0xac, 0x76, 0xe8, 0x18, 0xa0, 0x5f, 0xa8, 0xaf, 0x0e, 0x11, 0xd2, 0xad, 0x8d,
	0x7e, 0xa6, 0xc6, 0xe3, 0x6a, 0xe7, 0x59, 0xf5, 0xea, 0x51, 0xb5, 0xfb, 0x44, 0x72, 0xe2, 0xa8,
	0xda, 0xdf, 0x0b, 0x18, 0xd2, 0x37, 0x0e, 0xa6, 0x8e, 0x8f, 0xdc, 0x8b, 0xb5, 0x49, 0xe6, 0xa8,
	0xf9, 0x8e, 0x1c, 0x54, 0x20, 0xef, 0x8f, 0x86, 0xbd, 0x64, 0x15, 0x78, 0xbc, 0x0a, 0x25, 0x73,
	0xad, 0x42, 0x95, 0x59, 0x15, 0xd6, 0x21, 0xce, 0x29, 0xe2, 0x2d, 0xce, 0xc9, 0xe2, 0x10, 0x2e,
	0xd9, 0x57, 0x62, 0xe6, 0xe2, 0x59, 0xf5, 0xd2, 0x09, 0xad, 0xeb, 0x73, 0xf5, 0xe6, 0x40, 0x72,
	0xea, 0xc2, 0x4c, 0x4c, 0xd1, 0x8f, 0xbc, 0x71, 0x10, 0x75, 0x2a, 0x8e, 0x29, 0x57, 0x32, 0x9e,
	0x98, 0xb9, 0xd8, 0x9e, 0x1a, 0x38, 0x9d, 0x4c, 0x74, 0x6b, 0x27, 0x26, 0xca, 0x93, 0xf1, 0x2e,
	0xfd, 0x1f, 0x6d, 0xa8, 0x47, 0x3d, 0x32, 0xac, 0x0e, 0x1c, 0x22, 0x08, 0xf0, 0x45, 0x35, 0xd7,
	0xfc, 0x53, 0x47, 0x6e, 0x6b, 0xb1, 0x56, 0x58, 0x85, 0xcc, 0xc9, 0x27, 0xe3, 0xbd, 0xf0, 0x01,
	0xf4, 0x55, 0x60, 0xc7, 0xcc, 0xef, 0x44, 0x79, 0x91, 0x03, 0x91, 0xa8, 0xdc, 0xe8, 0xa9, 0x2c,
	0x5a, 0x89, 0xf7, 0xe2, 0x2b, 0x8a, 0xf8, 0xa2, 0x93, 0x02, 0x05, 0xe7, 0xbe, 0xe6, 0xdd, 0x72,
	0x38, 0x28, 0x47, 0xe5, 0x08, 0x21, 0xd8, 0x43, 0x23, 0x6a, 0x7f, 0x7b, 0x32, 0x71, 0x4c, 0x9d,
	0xf8, 0x4a, 0xed, 0xbb, 0x91, 0x8c, 0x1f, 0x49, 0x7f, 0xdd, 0xae, 0x25, 0xfa, 0x75, 0xca, 0x6f,
	0xb4, 0xe2, 0x6f, 0x71, 0x08, 0xc1, 0x1a, 0xe2, 0x13, 0xb9, 0x0a, 0x63, 0xfe, 0x94, 0x53, 0xc4,
	0x3e, 0xce, 0xc9, 0x14, 0x08, 0x31, 0x8e, 0x0c, 0x7f, 0x6c, 0x38, 0xd5, 0x7f, 0x88, 0x9e, 0x4c,
	0xb5, 0xe3, 0xba, 0x36, 0xd4, 0x95, 0x4c, 0x1c, 0xd3, 0x4e, 0xde, 0x4e, 0x1d, 0x3f, 0xaf, 0x0d,
	0x74, 0xce, 0x4e, 0x75, 0x6f, 0x17, 0xab, 0xc5, 0x2d, 0x55, 0x95, 0x1f, 0xba, 0xb7, 0xed, 0xac,
	0xad, 0xab, 0x92, 0x4a, 0x60, 0xdf, 0x68, 0x5d, 0xa7, 0x52, 0x63, 0xc3, 0x80, 0x65, 0xfd, 0xec,
	0x54, 0xb7, 0xa7, 0xba, 0xb2, 0xaa, 0xa6, 0xaa, 0xba, 0xb2, 0xaa, 0xba, 0x8e, 0xd6, 0x4c, 0x1d,
	0xbd, 0x9e, 0xba, 0x76, 0x94, 0x92, 0x92, 0xf4, 0xe1, 0x2f, 0xd2, 0xc3, 0xdd, 0xa9, 0xc9, 0x5b,
	0xda, 0x91, 0x4b, 0xeb, 0x25, 0x66, 0x38, 0xfc, 0x87, 0x68, 0x51, 0xa3, 0x57, 0xff, 0xe0, 0x45,
	0xab, 0xe7, 0x3f, 0xf0, 0xdb, 0x71, 0x2d, 0xd8, 0x0a, 0xc5, 0x8a, 0xf8, 0xb8, 0x93, 0xb4, 0x33,
	0xce, 0x2e, 0xfc, 0x72, 0x78, 0x6a, 0xd4, 0xce, 0x93, 0xe9, 0xe1, 0x11, 0x89, 0x14, 0xf3, 0xfd,
	0x1c, 0x5a, 0x16, 0x94, 0xa3, 0x1f, 0x87, 0xc2, 0xfb, 0x6a, 0xe5, 0x68, 0x34, 0x10, 0xac, 0x8f,
	0x14, 0xad, 0x71, 0x70, 0x25, 0x05, 0xc2, 0x3a, 0x7b, 0x57, 0xd5, 0x96, 0x6a, 0x40, 0xea, 0xed,
	0x6d, 0x85, 0x8d, 0x64, 0xf9, 0xa6, 0x8f, 0xa5, 0x26, 0x87, 0xd4, 0xf3, 0x89, 0xd4, 0x70, 0x2c,
	0x3d, 0xf6, 0x0d, 0x5c, 0xcb, 0x33, 0x43, 0xb1, 0xf4, 0x95, 0x56, 0xd8, 0x00, 0xda, 0x89, 0x09,
	0x80, 0x4b, 0x76, 0x14, 0xfc, 0xbf, 0xe7, 0x28, 0x17, 0xe8, 0xf2, 0x46, 0x02, 0x3e, 0x3a, 0xae,
	0x87, 0xf0, 0xb8, 0xe6, 0x5a, 0x02, 0xb6, 0xae, 0x2b, 0xac, 0x88, 0x21, 0x67, 0x56, 0x2c, 0xc2,
	0x3b, 0x64, 0xd7, 0xe0, 0xb1, 0x91, 0x83, 0x6d, 0x8c, 0x30, 0xf9, 0xcd, 0x51, 0xf5, 0x4a, 0x1b,
	0x6c, 0xec, 0x54, 0x57, 0xa7, 0x36, 0x74, 0x1d, 0x7f, 0x7b, 0x72, 0x37, 0xb6, 0x34, 0xf9, 0x52,
	0xa3, 0x5d, 0xfa, 0xf7, 0x32, 0xa6, 0x40, 0x66, 0x04, 0x13, 0xc9, 0xda, 0x1d, 0xff, 0xbf, 0x71,
	0x68, 0x0d, 0x29, 0x10, 0xfd, 0x2d, 0xde, 0xa0, 0x4f, 0xa6, 0xf3, 0x29, 0xc2, 0xf3, 0x79, 0x7a,
	0x8e, 0xf9, 0x58, 0x6b, 0xbb, 0xfe, 0xac, 0x88, 0x7f, 0xe1, 0x7c, 0x48, 0xaf, 0x2a, 0x67, 0xa2,
	0x12, 0xbc, 0x30, 0xa9, 0xf4, 0xdd, 0x33, 0x33, 0xa7, 0x6e, 0xa7, 0xba, 0x26, 0xb4, 0xd8, 0x55,
	0xdb, 0xa4, 0xd4, 0xfe, 0xf1, 0xd4, 0xf1, 0x91, 0x40, 0x53, 0x4b, 0x04, 0x8a, 0xf5, 0x89, 0x8d,
	0x4d, 0xa8, 0xa7, 0x47, 0xd2, 0x77, 0xfb, 0xd3, 0xc3, 0xdd, 0x3a, 0x99, 0xc4, 0x0d, 0x52, 0xa3,
	0x5d, 0xf7, 0x62, 0x6d, 0x3a, 0x5b, 0x77, 0xf2, 0x42, 0xaa, 0x6b, 0x42, 0xed, 0xbc, 0x36, 0x33,
	0x14, 0xd3, 0x6e, 0xb6, 0x49, 0x73, 0xcc, 0x82, 0xff, 0x5b, 0x0e, 0x15, 0x06, 0x43, 0x7e, 0x73,
	0x5a, 0x0f, 0xe3, 0x69, 0x3d, 0x92, 0xb1, 0x7d, 0xcc, 0x3a, 0x2e, 0x85, 0x53, 0xc4, 0x5e, 0xce,
	0x69, 0x69, 0x27, 0xfc, 0x89, 0xcc, 0xe1, 0x48, 0x5b, 0xaa, 0x6d, 0xc2, 0x36, 0x7a, 0xad, 0xbb,
	0x2d, 0x3d, 0x3d, 0x9d, 0x3a, 0x33, 0xa6, 0x4e, 0x0f, 0xe8, 0xbc, 0x42, 0xc8, 0xb7, 0x4f, 0x0e,
	0x6b, 0x03, 0x37, 0xb4, 0x9e, 0x31, 0x00, 0xc2, 0x87, 0xc9, 0x1c, 0xb6, 0x0e, 0xec, 0x1b, 0x4f,
	0x4e, 0x5e, 0x4e, 0xc6, 0x7b, 0x28, 0x4e, 0x97, 0xbb, 0x56, 0xeb, 0xeb, 0x4f, 0x7e, 0x73, 0x86,
	0xd0, 0xac, 0xbe, 0x36, 0x6d, 0xe0, 0x86, 0x64, 0x19, 0x0d, 0xff, 0x25, 0x87, 0x16, 0x45, 0xa2,
	0xde, 0x68, 0x73, 0xa4, 0x68, 0x2d, 0x26, 0x16, 0xa7, 0x39, 0x45, 0xfc, 0x9d, 0x93, 0xc0, 0x04,
	0x89, 0xa5, 0x72, 0xd0, 0x49, 0xfa, 0xe0, 0x34, 0xfc, 0x74, 0x4b, 0x55, 0x62, 0x9d, 0xa7, 0x7a,
	0xcb, 0xec, 0x54, 0xb7, 0xb4, 0xb3, 0xba, 0x1a, 0xfe, 0xaa, 0xac, 0xda, 0x56, 0x45, 0x80, 0x9b,
	0xc5, 0x6d, 0x3b, 0xa5, 0x2a, 0x4c, 0x1a, 0x3c, 0x75, 0x1e, 0x71, 0x9b, 0xe7, 0x3d, 0xb1, 0xce,
	0xb3, 0xa3, 0xfa, 0x3b, 0xd7, 0x4b, 0xe1, 0x5f, 0x49, 0x79, 0x46, 0x6b, 0x69, 0x31, 0x69, 0x2c,
	0xe5, 0x19, 0x6d, 0xa5, 0x45, 0xd0, 0x54, 0x5a, 0x6a, 0x6d, 0x29, 0x91, 0x51, 0xe9, 0xf7, 0x38,
	0x5c, 0xab, 0xe1, 0xa2, 0x47, 0x98, 0x7b, 0x9c, 0xc0, 0xac, 0xf7, 0xb8, 0x76, 0xe6, 0x96, 0x76,
	0xe2, 0x06, 0xbe, 0xc7, 0x49, 0x39, 0xdf, 0x8c, 0x0a, 0xc8, 0x61, 0xc4, 0x44, 0xf2, 0x51, 0x8c,
	0xa2, 0x56, 0x27, 0xbf, 0x2c, 0x5c, 0x78, 0x96, 0x3d, 0xe3, 0x94, 0x44, 0x96, 0x34, 0x07, 0xfd,
	0x72, 0xb8, 0xc1, 0x7b, 0xa0, 0x3c, 0xd4, 0x82, 0xff, 0x5d, 0xff, 0x9d, 0xeb, 0xa1, 0xf0, 0x6a,
	0x29, 0xcf, 0x80, 0x4b, 0x8b, 0x49, 0x81, 0xf4, 0xaf, 0x24, 0x16, 0x1f, 0xff, 0x3f, 0x72, 0xe8,
	0x21, 0x6f, 0x73, 0x34, 0xb4, 0x45, 0x0e, 0xea, 0xec, 0x8f, 0x0c, 0xb4, 0x4c, 0xdf, 0x2f, 0x91,
	0xa2, 0xc7, 0x30, 0x67, 0x46, 0x08, 0xf5, 0x5c, 0xb5, 0x84, 0xa8, 0xe5, 0x9e, 0x03, 0x9e, 0x0d,
	0x1f, 0x62, 0xf5, 0xce, 0x97, 0xea, 0xe8, 0x29, 0x75, 0x68, 0x04, 0x76, 0x55, 0xa9, 0x03, 0xbe,
	0x38, 0x66, 0xd9, 0x4a, 0x1d, 0x6a, 0xcf, 0x57, 0xb4, 0x5a, 0x6a, 0xb2, 0x0f, 0x6a, 0xa6, 0x06,
	0xdb, 0x8d, 0xca, 0xc9, 0xc9, 0x5e, 0x16, 0x31, 0xec, 0x93, 0x64, 0x7c, 0x34, 0xdd, 0x7b, 0x47,
	0xed, 0x3b, 0x21, 0xcd, 0x35, 0x1c, 0x7d, 0xef, 0xe4, 0x45, 0xe5, 0xc6, 0xa6, 0x06, 0x6f, 0x54,
	0x2e, 0x5a, 0x97, 0x9d, 0x9d, 0xf1, 0x04, 0x23, 0x51, 0xfd, 0x1c, 0xd5, 0x91, 0x7a, 0xee, 0x50,
	0x70, 0x4f, 0xa0, 0xde, 0x15, 0x54, 0xc4, 0x7d, 0x4e, 0xda, 0x58, 0xf8, 0x70, 0x8e, 0x2e, 0x92,
	0xf1, 0x44, 0x34, 0xdc, 0x2c, 0x6b, 0x27, 0x6f, 0x97, 0x3a, 0xd8, 0x21, 0xa6, 0x0f, 0x7f, 0xa1,
	0x1e, 0x19, 0xd1, 0x6f, 0xa8, 0xce, 0xfe, 0x00, 0xe9, 0xa1, 0xd4, 0x01, 0x4c, 0x8c, 0xf1, 0x5b,
	0x1b, 0x19, 0xd6, 0xce, 0xde, 0x25, 0x02, 0x0e, 0xed, 0x8a, 0xbf, 0xc6, 0xa1, 0x7c, 0x7c, 0x11,
	0x7b, 0x82, 0x7b, 0x42, 0x45, 0x8f, 0xcf, 0xcf, 0x84, 0x55, 0x19, 0x15, 0xe1, 0xc6, 0xc1, 0x02,
	0xa2, 0xd9, 0x5a, 0xd8, 0xa9, 0x2f, 0x65, 0x9b, 0xc1, 0x09, 0x01, 0xb7, 0x80, 0xfb, 0x2b, 0x75,
	0xc0, 0x79, 0x96, 0x23, 0xbb, 0x3f, 0x6c, 0x0e, 0x37, 0x94, 0x7f, 0x2c, 0xef, 0xde, 0x1b, 0x0a,
	0xed, 0xfb, 0x30, 0xd0, 0xe8, 0xad, 0xd7, 0x65, 0xe9, 0x40, 0x4b, 0xa0, 0x41, 0xf6, 0xd7, 0xcb,
	0x00, 0x48, 0x8d, 0x76, 0xb1, 0x8d, 0x25, 0xb3, 0x07, 0xfe, 0xb7, 0x28, 0xaf, 0x31, 0xe4, 0x6f,
	0x6e, 0x90, 0x3d, 0x95, 0x45, 0x0e, 0xbc, 0x4f, 0x7f, 0xad, 0x88, 0xaf, 0x38, 0x29, 0x50, 0x28,
	0x23, 0x9d, 0x8f, 0x0c, 0xab, 0x67, 0x4f, 0x7a, 0x2a, 0x4b, 0xdc, 0xa2, 0x76, 0x67, 0x52, 0x3d,
	0x72, 0x01, 0xbe, 0xad, 0x76, 0xf2, 0x36, 0x94, 0xa4, 0xa7, 0xaf, 0xa7, 0xae, 0x4e, 0xae, 0x97,
	0x68, 0x43, 0xbe, 0x05, 0x2d, 0xc5, 0xdd, 0x98, 0x42, 0xf0, 0x13, 0x18, 0x7f, 0xb5, 0x22, 0x6e,
	0x75, 0xda, 0x8a, 0x84, 0x57, 0xd4, 0xf1, 0x29, 0xb5, 0xe3, 0x32, 0x95, 0x76, 0x81, 0xc1, 0x32,
	0x84, 0x77, 0xed, 0xc2, 0xe1, 0xf4, 0xf8, 0x21, 0x32, 0x73, 0xd8, 0x79, 0x3a, 0xff, 0xf0, 0x79,
	0x42, 0x8d, 0x4d, 0x49, 0x36, 0x54, 0xbc, 0x17, 0x2d, 0x0b, 0x44, 0xdc, 0xa1, 0xc6, 0x46, 0x2a,
	0xfd, 0x16, 0x15, 0xe3, 0xcd, 0xff, 0x92, 0x22, 0xbe, 0xe0, 0xb4, 0x97, 0x09, 0x4f, 0x18, 0xa2,
	0x49, 0x42, 0xed, 0xb8, 0xae, 0x76, 0xdc, 0x84, 0x3e, 0x4b, 0x99, 0xfd, 0x2d, 0xd9, 0xdb, 0xf0,
	0x9b, 0x51, 0x81, 0x5f, 0x8e, 0xf8, 0xc2, 0x01, 0xac, 0xee, 0x28, 0x7a, 0x12, 0xcf, 0xeb, 0x29,
	0x45, 0x7c, 0xc2, 0xc9, 0xc2, 0x0d, 0x41, 0x38, 0x35, 0xa6, 0x5f, 0x6e, 0x5a, 0x5f, 0x5f, 0xfa,
	0xee, 0x0d, 0x89, 0xad, 0xc0, 0x5f, 0xe6, 0xd0, 0x32, 0xb2, 0x31, 0xdc, 0xde, 0xa8, 0x5c, 0x1f,
	0x0a, 0x1f, 0x28, 0x7a, 0x0a, 0x23, 0xfb, 0xa3, 0x22, 0xee, 0x77, 0xda, 0xcb, 0x04, 0xd9, 0x94,
	0x73, 0x3a, 0xaf, 0x61, 0xf9, 0x7c, 0x32, 0x7d, 0xa5, 0x55, 0x67, 0x03, 0x13, 0xbd, 0xba, 0xb8,
	0xdd, 0x79, 0x88, 0x2a, 0x10, 0x60, 0x56, 0xda, 0xa9, 0x71, 0x7d, 0x27, 0x4f, 0x26, 0xee, 0xc5,
	0x5a, 0x61, 0x85, 0x4b, 0x76, 0x37, 0x07, 0x1a, 0xfc, 0x72, 0xb8, 0x3c, 0xd0, 0xd8, 0x14, 0x0a,
	0x47, 0xe5, 0xf0, 0x7a, 0xe3, 0x2c, 0xd3, 0xba, 0x92, 0xbd, 0x5f, 0xbe, 0x1a, 0xe5, 0x07, 0x22,
	0x1f, 0x46, 0xf6, 0x7a, 0xc3, 0xb2, 0xbf, 0xe8, 0x69, 0xbc, 0x98, 0x58, 0x6e, 0x34, 0xa1, 0x96,
	0x65, 0xbc, 0x99, 0x4c, 0x5c, 0xcb, 0xb2, 0x8c, 0x79, 0x81, 0x48, 0x2d, 0xae, 0xcc, 0x7f, 0x88,
	0x90, 0xce, 0x7c, 0xc2, 0x51, 0x2d, 0x7a, 0x06, 0xcf, 0xf8, 0x75, 0x45, 0xfc, 0xb5, 0x93, 0x01,
	0x0b, 0x1b, 0xd8, 0x2d, 0xa1, 0x5f, 0xab, 0x47, 0x2f, 0x6b, 0xa7, 0xc6, 0xcd, 0x0a, 0x50, 0xac,
	0x76, 0x9e, 0x86, 0x33, 0x22, 0x31, 0x6d, 0xf9, 0x2b, 0x1c, 0x5a, 0x0a, 0x13, 0xa4, 0xeb, 0xfa,
	0x2c, 0xee, 0xe5, 0x4f, 0x8a, 0xf8, 0x47, 0xa7, 0xad, 0x48, 0x08, 0xa8, 0xd3, 0x9f, 0xda, 0xa6,
	0x6c, 0x90, 0xa8, 0x84, 0xb1, 0x4c, 0x98, 0x42, 0xcc, 0xbf, 0xde, 0x66, 0xff, 0xe5, 0xbe, 0x86,
	0x50, 0xb3, 0x1f, 0x06, 0x58, 0x4a, 0xe5, 0xdb, 0xd4, 0xe7, 0x09, 0xc9, 0xd6, 0x35, 0xff, 0x0f,
	0x1c, 0x5a, 0x8a, 0x2b, 0x8b, 0x3e, 0x5f, 0xa8, 0x39, 0x18, 0xf5, 0x54, 0x16, 0x95, 0xe0, 0x81,
	0xfe, 0x15, 0xa7, 0x88, 0xd3, 0x9c, 0xd3, 0x56, 0x28, 0x7c, 0x41, 0xd8, 0x6a, 0x53, 0xcf, 0x90,
	0x38, 0x96, 0xbe, 0x75, 0x45, 0xed, 0xbb, 0xe3, 0xa9, 0xb4, 0xf4, 0x74, 0x2f, 0xd6, 0x06, 0xa3,
	0x55, 0x8f, 0x9c, 0x4f, 0x1f, 0x9c, 0xd6, 0x3f, 0x2e, 0x26, 0xb6, 0xb4, 0xbe, 0x7a, 0x78, 0x34,
	0x3d, 0xde, 0x7a, 0x2f, 0xd6, 0x96, 0xba, 0xda, 0x0a, 0x2c, 0xb9, 0x3a, 0x94, 0xd0, 0x4e, 0x8f,
	0x27, 0xe3, 0x47, 0x53, 0x93, 0xe7, 0x93, 0xf1, 0x18, 0x70, 0xee, 0xb8, 0x7f, 0x68, 0xa1, 0x33,
	0x6c, 0x31, 0x93, 0x83, 0x87, 0xea, 0xa9, 0xc4, 0x57, 0xa9, 0xb1, 0xe1, 0x64, 0xbc, 0x47, 0xed,
	0xef, 0xb6, 0xe1, 0x96, 0x6c, 0x83, 0x5f, 0xfb, 0x0a, 0x2a, 0x60, 0xe4, 0x69, 0x7e, 0x39, 0x5a,
	0xb0, 0x4f, 0x3e, 0x00, 0x7a, 0x3c, 0x49, 0xff, 0x93, 0x5f, 0x85, 0x16, 0xb6, 0x78, 0x1b, 0x9a,
	0x89, 0xe6, 0x4d, 0x82, 0x1f, 0x15, 0x39, 0x2f, 0x73, 0x6b, 0xdf, 0x45, 0x4b, 0xad, 0xf2, 0x6a,
	0x96, 0xd6, 0x9b, 0xd8, 0xd6, 0x59, 0x18, 0x27, 0xd7, 0xd6, 0x1d, 0x4d, 0x91, 0x9a, 0x86, 0xe6,
	0xfa, 0x40, 0x90, 0x45, 0xfd, 0x3e, 0x5a, 0x6e, 0x17, 0x02, 0x7f, 0x3a, 0xe4, 0x3b, 0x50, 0x01,
	0x23, 0x51, 0x64, 0xc1, 0xeb, 0xb4, 0xe2, 0x5d, 0x95, 0x8d, 0xdb, 0x63, 0x11, 0xfe, 0x1a, 0x2d,
	0xb5, 0xde, 0x19, 0x0f, 0xb2, 0x8c, 0x15, 0xaf, 0x29, 0x62, 0x05, 0x7a, 0xd9, 0x69, 0x28, 0x54,
	0x85, 0x32, 0xd0, 0x20, 0xb2, 0xec, 0x0c, 0xa8, 0x17, 0x93, 0x89, 0x5e, 0x10, 0xa3, 0x58, 0xf6,
	0xac, 0xf8, 0xdf, 0x15, 0xa2, 0x5c, 0x7d, 0x40, 0xfc, 0xcb, 0x68, 0x91, 0xce, 0xe4, 0x51, 0x2d,
	0xac, 0x43, 0x11, 0x1f, 0x73, 0x12, 0x90, 0xb0, 0x12, 0xae, 0x86, 0x64, 0xe2, 0x98, 0x71, 0x53,
	0x7a, 0x2a, 0x25, 0x52, 0xc8, 0xbf, 0x82, 0x16, 0x07, 0x82, 0x41, 0x39, 0xec, 0xa9, 0x21, 0xea,
	0x55, 0xac, 0x3a, 0x34, 0x60, 0xc2, 0x0a, 0x68, 0x8b, 0x15, 0x0c, 0xc7, 0x92, 0xf1, 0x49, 0x4f,
	0x8d, 0x64, 0x94, 0xf1, 0xef, 0xa3, 0x42, 0x03, 0x21, 0x66, 0xab, 0x40, 0xa7, 0x8a, 0xa9, 0xba,
	0xa5, 0x40, 0x78, 0x4a, 0x1b, 0x4a, 0xa8, 0xe7, 0x8e, 0x12, 0x35, 0xcb, 0xe8, 0xc9, 0xd4, 0xf5,
	0x2b, 0xc9, 0xf8, 0x97, 0x94, 0xb9, 0x24, 0x47, 0xd1, 0xd2, 0x86, 0x7f, 0x0e, 0x2d, 0x70, 0xd7,
	0xec, 0xc4, 0x9a, 0xd1, 0x25, 0xa0, 0xe9, 0xd1, 0x7f, 0x0b, 0xcb, 0x60, 0x3c, 0xee, 0x9a, 0x9d,
	0xe4, 0xea, 0xd4, 0xa1, 0xfc, 0x06, 0xb4, 0xa0, 0x51, 0x6e, 0xc4, 0xba, 0xcf, 0x25, 0xae, 0x47,
	0x15, 0xf1, 0x61, 0xa7, 0xfe, 0x5b, 0xe0, 0xe9, 0xe0, 0xd5, 0xd1, 0x53, 0x46, 0xfd, 0x46, 0xb9,
	0x91, 0x7f, 0x19, 0x2d, 0xd8, 0x52, 0xb3, 0x13, 0xeb, 0x3c, 0x97, 0xb8, 0x9e, 0x51, 0xc4, 0x27,
	0x9d, 0xfa, 0x6f, 0xe1, 0x51, 0xa8, 0xbf, 0xc5, 0x40, 0xce, 0x8e, 0x70, 0xa3, 0xa4, 0x57, 0xe1,
	0xfb, 0x4c, 0xee, 0x19, 0xf4, 0x9b, 0x1f, 0x2b, 0x62, 0x94, 0x32, 0xcf, 0x1f, 0x01, 0x02, 0xf8,
	0x3a, 0x06, 0x8e, 0x4e, 0xed, 0xc2, 0x84, 0xd6, 0x33, 0xa6, 0x4e, 0xe9, 0xd2, 0x49, 0x72, 0x2a,
	0x9e, 0x9a, 0xfa, 0x5c, 0x1d, 0x1b, 0x4c, 0x4e, 0x74, 0xa5, 0x06, 0xdb, 0x67, 0xa7, 0xba, 0x4c,
	0x66, 0xba, 0xd4, 0x81, 0xf9, 0xe1, 0x2a, 0xfc, 0xa7, 0xc1, 0x2d, 0x97, 0x3a, 0x36, 0x8b, 0x9e,
	0x6d, 0x55, 0x95, 0xa5, 0x8e, 0x39, 0x58, 0x63, 0x11, 0x2d, 0xfa, 0x24, 0x14, 0x94, 0xa9, 0x96,
	0x74, 0xbd, 0x22, 0x3e, 0xe3, 0xcc, 0xd5, 0x41, 0xc2, 0x3a, 0x32, 0xff, 0x3e, 0x5d, 0x42, 0x52,
	0xbb, 0x13, 0xf6, 0x15, 0x27, 0x0d, 0xf9, 0xbf, 0x40, 0x05, 0xfa, 0x6e, 0xd8, 0x12, 0x0e, 0x35,
	0x37, 0x79, 0x2a, 0x89, 0xc6, 0xf3, 0x3d, 0x45, 0x7c, 0xc7, 0xc9, 0xc2, 0x85, 0x37, 0x09, 0x8b,
	0xd1, 0x15, 0x53, 0x6f, 0x9e, 0x4b, 0x0d, 0xb6, 0x57, 0x1b, 0x65, 0x0e, 0x4f, 0x65, 0xa9, 0x83,
	0xc5, 0x5c, 0x92, 0x9c, 0xec, 0x70, 0x8b, 0xa4, 0xf7, 0x69, 0x45, 0xbd, 0x79, 0x2e, 0x99, 0xe8,
	0xa5, 0xa8, 0xd6, 0x4b, 0x2c, 0x5a, 0x7e, 0x33, 0xfb, 0x88, 0x00, 0x4a, 0xd0, 0x12, 0x45, 0x7c,
	0x9a, 0x7d, 0x44, 0x28, 0xb2, 0xf5, 0x4c, 0x99, 0x0b, 0xf6, 0xb1, 0x60, 0x13, 0x5a, 0xb0, 0xab,
	0xc6, 0x8d, 0x55, 0x9e, 0x64, 0x17, 0xeb, 0xbf, 0x85, 0xd5, 0xb6, 0xb6, 0xbb, 0x6a, 0xdc, 0x0e,
	0x4f, 0xa5, 0xa4, 0x97, 0xf1, 0xef, 0x53, 0xb5, 0x39, 0x68, 0x32, 0xdd, 0x8a, 0xf8, 0x06, 0x55,
	0x9b, 0xbf, 0xc8, 0x36, 0x04, 0xe5, 0xb9, 0x29, 0x74, 0x4e, 0xdc, 0x55, 0xef, 0x9c, 0x9b, 0x9d,
	0xea, 0xd6, 0xee, 0xdc, 0x54, 0x87, 0xbe, 0xd2, 0x17, 0xf6, 0xc8, 0x05, 0xf5, 0xce, 0xb9, 0xd4,
	0x68, 0x17, 0x55, 0xad, 0x57, 0xa3, 0x45, 0x4d, 0xde, 0x48, 0xe4, 0x63, 0x7f, 0xd1, 0x12, 0x53,
	0xb7, 0x4e, 0x40, 0xc2, 0x7a, 0x75, 0xec, 0x9c, 0x8e, 0xca, 0x50, 0xa3, 0xa9, 0xe3, 0x87, 0x52,
	0x17, 0x5a, 0x4b, 0x1d, 0x44, 0xf0, 0x06, 0x8d, 0xd2, 0xd5, 0xcf, 0xd4, 0xf1, 0x43, 0x12, 0x69,
	0xc2, 0x7f, 0x80, 0xf0, 0x57, 0xc5, 0x8a, 0xcc, 0x25, 0x2e, 0x8f, 0x22, 0x6e, 0x76, 0x92, 0x0f,
	0x28, 0xfc, 0xda, 0xf6, 0xa1, 0xb1, 0x9a, 0x9b, 0xfd, 0x20, 0xaf, 0x3a, 0x4c, 0x6d, 0x20, 0xbe,
	0x85, 0x40, 0x3c, 0x48, 0x26, 0x7a, 0xdd, 0xa2, 0x84, 0xd1, 0xf2, 0x22, 0xca, 0xf3, 0xcb, 0x2d,
	0x01, 0x9d, 0x38, 0x80, 0xa6, 0xd3, 0xf5, 0xb4, 0x22, 0x16, 0x3b, 0x29, 0x50, 0x58, 0xe3, 0x16,
	0x1d, 0xc6, 0x11, 0x4d, 0x8f, 0x7d, 0xa3, 0x5e, 0x3a, 0xec, 0xa9, 0x54, 0xfb, 0xee, 0x48, 0xb4,
	0x06, 0x2f, 0xa3, 0xa5, 0xfa, 0x87, 0x35, 0x38, 0x7f, 0x4f, 0x25, 0xa8, 0x44, 0x5d, 0x3a, 0x95,
	0x73, 0xda, 0x8a, 0x84, 0x12, 0x32, 0x66, 0xe3, 0xe2, 0x24, 0xab, 0x8d, 0x79, 0x78, 0xb2, 0x9f,
	0x8c, 0x3b, 0xda, 0xda, 0x92, 0xf7, 0xa1, 0x3c, 0x0c, 0xd1, 0x69, 0xce, 0x0a, 0xdc, 0xc1, 0x16,
	0x45, 0xac, 0x74, 0x52, 0xa0, 0xf0, 0x32, 0x39, 0x86, 0x58, 0x82, 0x33, 0xb8, 0x04, 0xb5, 0xbb,
	0x43, 0xed, 0xbf, 0xe6, 0xde, 0xb5, 0xbd, 0xdc, 0x53, 0xe9, 0x66, 0xd0, 0x53, 0x66, 0xcb, 0xbd,
	0x6b, 0xbb, 0x44, 0x71, 0xf0, 0x75, 0xd0, 0x09, 0x7e, 0x77, 0xe2, 0x71, 0x27, 0x2f, 0x2b, 0xe2,
	0xaf, 0x9c, 0x14, 0x28, 0xac, 0x27, 0xe3, 0xc7, 0x8f, 0x4e, 0xa5, 0x0e, 0x60, 0x7a, 0xd4, 0xfe,
	0xf6, 0x64, 0xfc, 0x0b, 0xfd, 0xde, 0x65, 0x0a, 0x25, 0xda, 0x88, 0xff, 0x0d, 0xca, 0x27, 0xd4,
	0xb3, 0xe5, 0x45, 0xa2, 0x05, 0xc4, 0xa4, 0xda, 0x84, 0x0a, 0xcb, 0xa1, 0x69, 0xa0, 0xa9, 0xe5,
	0x45, 0x75, 0xe8, 0x86, 0x7a, 0x36, 0x26, 0x99, 0x85, 0x15, 0xef, 0x2a, 0xe2, 0x2e, 0x54, 0xe7,
	0xc4, 0x44, 0x5f, 0xd8, 0x46, 0x9e, 0x9b, 0x80, 0xba, 0x67, 0xbb, 0x2c, 0x58, 0x72, 0xa4, 0x73,
	0x0b, 0x17, 0xaf, 0x91, 0xe3, 0x92, 0x8c, 0xe3, 0xe3, 0x58, 0xaf, 0x1f, 0x41, 0xd8, 0x0a, 0xc5,
	0xff, 0x4f, 0x3e, 0x5a, 0x6a, 0xd5, 0x84, 0xf1, 0xbb, 0x28, 0x37, 0xec, 0xa9, 0x69, 0x79, 0xc1,
	0xed, 0xa9, 0x94, 0xc8, 0xf5, 0x52, 0xaa, 0x88, 0xeb, 0x9d, 0xf6, 0x32, 0x61, 0x0d, 0xe1, 0xbc,
	0x62, 0x93, 0x3a, 0x08, 0x06, 0xaf, 0xdd, 0xbc, 0x20, 0xd9, 0x2b, 0xf2, 0x3e, 0xb4, 0x2c, 0x22,
	0x87, 0xf1, 0xa6, 0x31, 0xf0, 0xe6, 0x98, 0x1a, 0x51, 0x7b, 0x99, 0xf0, 0x24, 0xe0, 0x25, 0x60,
	0xa2, 0xc4, 0x1a, 0x6c, 0xb7, 0x75, 0x62, 0x6b, 0xc5, 0x4b, 0x68, 0x49, 0xa3, 0x77, 0xbf, 0xbe,
	0x50, 0x35, 0x21, 0x7f, 0x75, 0x73, 0x23, 0xbe, 0x9e, 0x96, 0xc0, 0xd0, 0xad, 0x25, 0x06, 0x79,
	0x49, 0xc6, 0x8f, 0x68, 0x43, 0x31, 0xf5, 0xd2, 0xd5, 0x9a, 0x90, 0x5f, 0x1b, 0xb8, 0x31, 0x73,
	0xb8, 0x4f, 0xb2, 0x56, 0xe4, 0x77, 0x61, 0x9c, 0xb5, 0xd0, 0x93, 0x8e, 0x13, 0xae, 0xa7, 0x8d,
	0x8a, 0x58, 0xe6, 0xb4, 0x96, 0x08, 0x8f, 0x92, 0xc5, 0xc0, 0x08, 0x53, 0x83, 0xed, 0xa4, 0x88,
	0xc1, 0x6b, 0x56, 0xe6, 0x7b, 0x38, 0x54, 0x28, 0x07, 0xbd, 0xbb, 0x1b, 0xe4, 0x5d, 0x35, 0x6e,
	0x77, 0x30, 0x80, 0x6f, 0xb2, 0x3c, 0x57, 0x40, 0x11, 0xf7, 0x38, 0x2d, 0x05, 0xc2, 0x2e, 0xf6,
	0x17, 0xb0, 0xf8, 0xea, 0x54, 0x4c, 0xed, 0x1f, 0xdf, 0x55, 0xe3, 0x2e, 0x73, 0x57, 0x7b, 0x40,
	0x77, 0xa1, 0x8b, 0x80, 0x53, 0x7d, 0x25, 0xc9, 0xe9, 0xbb, 0xe9, 0x83, 0xd3, 0x2d, 0x4d, 0xbe,
	0x32, 0x5f, 0x30, 0x00, 0x30, 0x9d, 0x6d, 0xd6, 0x4e, 0xdc, 0x50, 0x2f, 0x9e, 0xd3, 0xbe, 0x6e,
	0x4d, 0x8d, 0x1c, 0x85, 0xc6, 0xeb, 0x25, 0x4b, 0x2f, 0xbc, 0xac, 0x0f, 0x27, 0x50, 0xdb, 0xbc,
	0x3b, 0x28, 0x47, 0x3d, 0x95, 0x91, 0xa2, 0x45, 0x8e, 0x05, 0x25, 0xf9, 0x2e, 0x51, 0x11, 0x7f,
	0xe3, 0xb4, 0x14, 0x08, 0x1b, 0xb2, 0x74, 0x9b, 0x8c, 0x1f, 0x2d, 0x85, 0xcb, 0x2e, 0x35, 0x7d,
	0x4c, 0xed, 0x19, 0x4e, 0x0d, 0xb6, 0xab, 0xa3, 0xfd, 0xa9, 0xe9, 0x63, 0x9e, 0x4a, 0xc9, 0xd2,
	0x9a, 0x3f, 0xcb, 0xa1, 0xc2, 0x08, 0xfe, 0x55, 0x1b, 0x6a, 0x0e, 0xfb, 0x64, 0x7c, 0xa5, 0x16,
	0x08, 0x8f, 0xda, 0x79, 0xae, 0x5a, 0xa6, 0x8e, 0xeb, 0x7d, 0x45, 0xfc, 0xad, 0x73, 0x45, 0x20,
	0x52, 0x1d, 0x0a, 0xd6, 0x46, 0xbd, 0xd1, 0x80, 0xcf, 0xd3, 0xb4, 0x5d, 0x3f, 0x0d, 0x6e, 0x58,
	0x70, 0x32, 0x20, 0x32, 0x5b, 0x43, 0x06, 0x9a, 0x39, 0x7b, 0x4e, 0x3d, 0x93, 0x50, 0xc7, 0x06,
	0x3d, 0x35, 0xf4, 0x85, 0xab, 0xc2, 0xb1, 0x59, 0xdc, 0x56, 0x5b, 0xe5, 0x60, 0xca, 0x24, 0xcb,
	0x70, 0xf8, 0x83, 0xba, 0xd4, 0x12, 0x61, 0x7b, 0xc1, 0x77, 0x6c, 0xde, 0x3f, 0xef, 0x18, 0x6c,
	0x5d, 0xf2, 0x7f, 0x89, 0x56, 0xfa, 0x1a, 0xbc, 0x81, 0xc6, 0xaa, 0xfd, 0x4d, 0x81, 0xb0, 0xec,
	0xaf, 0x95, 0x7d, 0xa1, 0xa0, 0x3f, 0x82, 0x6f, 0xe9, 0x25, 0xae, 0xad, 0x8a, 0xf8, 0xa6, 0x33,
	0x5b, 0xb9, 0xb0, 0xe9, 0x3e, 0x3e, 0x8d, 0xa7, 0x46, 0x3d, 0x73, 0x4e, 0x3b, 0x7e, 0x5b, 0x3b,
	0x79, 0x7b, 0xe6, 0xe4, 0x2d, 0x29, 0x1b, 0x1e, 0x7e, 0x1f, 0x5a, 0xde, 0xd8, 0xdc, 0x10, 0x0d,
	0x90, 0x3b, 0x17, 0x9f, 0x56, 0x84, 0xf7, 0x03, 0x96, 0x10, 0x33, 0x0a, 0x85, 0x12, 0x56, 0x3b,
	0xa2, 0x43, 0x4a, 0x41, 0x1a, 0xc1, 0xc2, 0x07, 0x79, 0x76, 0xc2, 0x00, 0x29, 0xa3, 0x2d, 0xdf,
	0x8c, 0xf2, 0x7c, 0x01, 0x7f, 0xb8, 0x36, 0x2a, 0x37, 0xe1, 0x8b, 0x7c, 0x09, 0x3c, 0xfa, 0x52,
	0xa0, 0xf0, 0x16, 0x28, 0x82, 0xd4, 0xce, 0x43, 0x33, 0x1d, 0x3d, 0x3a, 0x54, 0x1b, 0xbd, 0x3c,
	0x33, 0x70, 0x17, 0x34, 0xa0, 0x25, 0x94, 0x96, 0xa7, 0x8e, 0x9f, 0x4f, 0x26, 0xae, 0xc2, 0x7b,
	0xec, 0x0b, 0x1b, 0x5f, 0x79, 0x51, 0x17, 0xb7, 0x3b, 0x6e, 0x27, 0x27, 0x4f, 0x00, 0x48, 0xd8,
	0xf8, 0xc2, 0xcb, 0xeb, 0x25, 0x8a, 0xb5, 0xf8, 0xef, 0x39, 0x54, 0xc8, 0x6e, 0x32, 0xfe, 0x5d,
	0xb4, 0x20, 0x28, 0x7f, 0x8c, 0xa9, 0x5d, 0x81, 0xf0, 0x70, 0xe6, 0x83, 0xc1, 0xc7, 0x50, 0x1b,
	0xa8, 0x89, 0x5e, 0x55, 0x28, 0xce, 0xbe, 0xdc, 0xa9, 0xe3, 0x5f, 0xa5, 0xc7, 0xef, 0xc0, 0xae,
	0x92, 0xf4, 0x8a, 0x7c, 0x33, 0x5a, 0x2c, 0xef, 0x0f, 0x44, 0xa2, 0xb2, 0x9f, 0x88, 0x18, 0x0e,
	0x3b, 0xfa, 0x2a, 0x28, 0xa6, 0xe7, 0x04, 0xc8, 0xa2, 0xd1, 0x4a, 0x78, 0x2e, 0x5b, 0x4f, 0x56,
	0xa5, 0x60, 0x6a, 0xb0, 0x9d, 0x74, 0x69, 0xb4, 0x2a, 0xae, 0xd6, 0xa5, 0x2a, 0x2b, 0x5e, 0xbe,
	0x02, 0x2d, 0x08, 0xf8, 0x23, 0x45, 0x1c, 0xfe, 0x9a, 0x98, 0xe7, 0xd2, 0x7f, 0x0b, 0xeb, 0x52,
	0x67, 0x6e, 0x69, 0xbd, 0x97, 0x6d, 0x38, 0x8d, 0x33, 0x1c, 0x91, 0xf4, 0x4a, 0xc5, 0xe3, 0x1c,
	0xca, 0xa7, 0xeb, 0xc0, 0xd7, 0xa0, 0xdc, 0x46, 0x6f, 0x64, 0x1f, 0x5e, 0xb0, 0x25, 0xa0, 0xb1,
	0xc2, 0x00, 0x61, 0x13, 0x2c, 0x00, 0xa1, 0x41, 0x30, 0x64, 0x18, 0x9a, 0x76, 0xf2, 0x76, 0x6a,
	0xb0, 0x9d, 0x4c, 0xa2, 0xf7, 0xf3, 0xd4, 0x85, 0x56, 0xf5, 0xd2, 0x55, 0xf5, 0x46, 0x9f, 0x84,
	0x1b, 0xea, 0x18, 0x31, 0xb7, 0x93, 0x63, 0xea, 0xc0, 0x80, 0xa9, 0x9d, 0x17, 0x23, 0xb0, 0x5e,
	0xfa, 0xba, 0x0f, 0xb6, 0x53, 0x6e, 0x08, 0x18, 0x9c, 0xe2, 0x7f, 0xc8, 0x45, 0x2b, 0xb3, 0x3c,
	0xa9, 0xf0, 0x3e, 0x94, 0xb3, 0xa3, 0x96, 0x5c, 0x6c, 0xb5, 0x8a, 0x58, 0xe3, 0xcc, 0xd9, 0x51,
	0x2b, 0xbc, 0x45, 0x44, 0x30, 0xbc, 0x06, 0x3b, 0x6a, 0xe1, 0x76, 0x2d, 0x99, 0x19, 0x18, 0x52,
	0x0f, 0xf6, 0x79, 0x2a, 0xcb, 0x89, 0x6a, 0x0a, 0xff, 0xd4, 0x19, 0x0c, 0x9d, 0x91, 0xd0, 0x4e,
	0xde, 0x26, 0x26, 0x2e, 0xf0, 0xc0, 0x4a, 0xea, 0xae, 0x97, 0x72, 0x76, 0xd4, 0xf2, 0x22, 0x5a,
	0xdc, 0x22, 0x87, 0x23, 0x3a, 0xab, 0x09, 0x33, 0x7a, 0x56, 0x11, 0x9f, 0x72, 0x1a, 0x30, 0xe1,
	0x61, 0xf3, 0xed, 0x8f, 0xde, 0x6f, 0xf0, 0x4e, 0x23, 0x19, 0x75, 0xf8, 0x81, 0x1c, 0xf3, 0xf1,
	0xdd, 0x5b, 0x1f, 0x29, 0x5a, 0x80, 0x35, 0x99, 0x2f, 0xdc, 0xc7, 0xab, 0x91, 0x01, 0xd3, 0x9b,
	0x81, 0x5e, 0x73, 0x8a, 0x53, 0xc4, 0x38, 0xe7, 0x64, 0xf1, 0x09, 0x23, 0xc6, 0x0b, 0xe1, 0x99,
	0xb8, 0xda, 0xf1, 0x55, 0xd4, 0x5b, 0x6f, 0x63, 0x29, 0xd8, 0xf7, 0x43, 0x78, 0x66, 0x27, 0xfa,
	0xf6, 0xaf, 0x46, 0xd4, 0x8e, 0xcb, 0x1b, 0xb0, 0x00, 0x70, 0xf8, 0x0b, 0x10, 0x6d, 0xe0, 0x3c,
	0x62, 0x2e, 0x0b, 0xa4, 0x1f, 0xaa, 0x90, 0x50, 0xc7, 0xce, 0xa5, 0x7a, 0x6f, 0x80, 0xe1, 0x81,
	0x3a, 0x36, 0xa8, 0x76, 0xde, 0x8e, 0x7a, 0xeb, 0x23, 0x25, 0xc0, 0x56, 0x57, 0xd0, 0xfa, 0xa6,
	0x3d, 0x06, 0x58, 0x77, 0x40, 0x03, 0xe8, 0x70, 0xbd, 0xc4, 0x8e, 0x9b, 0xaf, 0x45, 0x05, 0x64,
	0x89, 0x30, 0xb3, 0x96, 0x6b, 0x9a, 0x51, 0xb0, 0x70, 0xe1, 0xf1, 0x39, 0x97, 0xd8, 0xb0, 0x1b,
	0x62, 0x6a, 0xaf, 0xfd, 0x0d, 0x5a, 0x6e, 0x5f, 0xb4, 0x07, 0x11, 0xec, 0x8b, 0x27, 0x17, 0xa2,
	0xd5, 0x59, 0xdf, 0xbb, 0xf8, 0xb7, 0x50, 0xae, 0xa7, 0x66, 0x17, 0x6c, 0xb8, 0x3c, 0x10, 0x0a,
	0x30, 0x40, 0x78, 0x6e, 0xab, 0xed, 0xfd, 0x57, 0x87, 0xd2, 0x37, 0x2d, 0x9b, 0x55, 0x06, 0x6e,
	0xc2, 0x7f, 0x82, 0x96, 0xfb, 0x42, 0xc1, 0xa8, 0x37, 0x10, 0x94, 0xc3, 0x52, 0x73, 0x30, 0x1a,
	0xa0, 0x46, 0x52, 0x58, 0xa9, 0x9b, 0x51, 0x28, 0xbc, 0x44, 0xb4, 0x55, 0xd6, 0x07, 0x32, 0xf8,
	0x26, 0x20, 0x32, 0xcc, 0xc4, 0xba, 0x2a, 0xf1, 0x23, 0xd4, 0xbd, 0x58, 0xab, 0xdb, 0x68, 0xee,
	0x97, 0x32, 0x50, 0xf1, 0x12, 0x5a, 0x1a, 0x86, 0x3f, 0x77, 0x91, 0x8d, 0xbd, 0xc0, 0x34, 0xf8,
	0xb1, 0x15, 0x09, 0xab, 0x6d, 0x3d, 0x92, 0xbd, 0x6d, 0xab, 0xc6, 0xff, 0xdb, 0x1c, 0xa2, 0xaa,
	0x17, 0xc3, 0xf5, 0x91, 0xa2, 0xdc, 0x79, 0x37, 0xb8, 0x75, 0x59, 0x89, 0xdd, 0x40, 0xd8, 0xd8,
	0xe0, 0xff, 0x85, 0x53, 0xc4, 0xff, 0x8b, 0x73, 0x9a, 0xd8, 0x84, 0xbf, 0xe7, 0xe0, 0xee, 0x51,
	0xfb, 0xdb, 0x89, 0x86, 0xdc, 0xd8, 0xac, 0xa0, 0x5b, 0xd4, 0xd7, 0xf8, 0x62, 0x3b, 0x95, 0xcc,
	0xf7, 0xc9, 0x07, 0x92, 0xf1, 0x84, 0xfe, 0x49, 0xc4, 0x1a, 0x8f, 0xce, 0xaa, 0xc9, 0xe1, 0xd9,
	0xa9, 0xee, 0xad, 0xa0, 0x52, 0x8c, 0x86, 0x43, 0x0d, 0x0d, 0x18, 0x50, 0x15, 0xf5, 0xf9, 0x09,
	0xbc, 0xd6, 0xb7, 0x57, 0xf6, 0x37, 0x37, 0xe8, 0x2b, 0xd7, 0x86, 0x37, 0x42, 0x32, 0x9e, 0x30,
	0x3b, 0xbb, 0x7b, 0x46, 0xe7, 0xb6, 0xfa, 0xc7, 0xf5, 0xcb, 0xcb, 0xe8, 0x4f, 0xbd, 0x34, 0x98,
	0x8c, 0x7f, 0x41, 0x54, 0x9b, 0x13, 0x47, 0x67, 0x4e, 0xde, 0x82, 0x9d, 0xf9, 0xea, 0xcc, 0xc9,
	0x5b, 0x33, 0x83, 0xc7, 0xa9, 0xb4, 0xa9, 0x77, 0x52, 0xe1, 0xd0, 0x19, 0xf6, 0x32, 0xbf, 0x37,
	0xea, 0x2d, 0xf3, 0x07, 0xc2, 0xaf, 0x95, 0xeb, 0x7f, 0x95, 0xef, 0xf6, 0x45, 0xca, 0x1b, 0x02,
	0xbb, 0xcb, 0xe5, 0xa8, 0xcf, 0xff, 0xaa, 0x64, 0xce, 0x96, 0xaa, 0xa5, 0xe8, 0x8a, 0x3c, 0xd0,
	0xee, 0x9d, 0x5e, 0x8c, 0x0a, 0x98, 0x67, 0x4d, 0x9d, 0x51, 0x5b, 0x06, 0x4f, 0x93, 0x5b, 0xc2,
	0xde, 0xa6, 0xbd, 0x35, 0xde, 0xe8, 0x5e, 0x42, 0x30, 0x23, 0x8a, 0xd8, 0xe4, 0xb4, 0x97, 0x09,
	0x1f, 0x90, 0xb7, 0x4e, 0xe3, 0x73, 0x27, 0xe3, 0x09, 0xf2, 0xb2, 0x69, 0xbc, 0xc6, 0x12, 0xd2,
	0xc1, 0x3c, 0x74, 0xc2, 0xf3, 0x25, 0x6c, 0x73, 0xa8, 0x63, 0x4e, 0x91, 0xf0, 0xf6, 0xe5, 0x80,
	0x44, 0xb2, 0xf7, 0xc7, 0x7f, 0x80, 0x0a, 0x1a, 0x43, 0xcd, 0xc1, 0x68, 0x9d, 0x37, 0x5c, 0x2f,
	0x47, 0xc9, 0x11, 0x00, 0xab, 0x27, 0x06, 0x6e, 0x88, 0x6c, 0xe4, 0x61, 0xf5, 0xcc, 0x29, 0xf2,
	0xf8, 0xda, 0x36, 0xc1, 0xf6, 0x8d, 0x7b, 0x95, 0xd8, 0x76, 0xfc, 0x5d, 0x0e, 0x2d, 0x69, 0x0e,
	0x92, 0xef, 0xab, 0xb3, 0xc9, 0x44, 0x96, 0x38, 0xc5, 0x29, 0xe2, 0x71, 0xce, 0x69, 0x2d, 0x13,
	0xda, 0x38, 0x18, 0xbe, 0x7a, 0xe4, 0x82, 0xda, 0x71, 0xd9, 0x94, 0x6c, 0x81, 0x59, 0xef, 0x6b,
	0x4b, 0xc6, 0x7b, 0xd3, 0x37, 0x0e, 0xaa, 0x89, 0x2b, 0xf4, 0x54, 0xab, 0xb1, 0xa9, 0x8d, 0xe9,
	0xe1, 0x91, 0xd4, 0xa5, 0x84, 0xbd, 0xf8, 0xec, 0x39, 0x52, 0xa0, 0xd3, 0x4f, 0xa6, 0xac, 0x04,
	0x90, 0xd3, 0x37, 0x1f, 0x9d, 0xf6, 0x5e, 0x39, 0x94, 0x3a, 0x73, 0x02, 0x36, 0xd3, 0x7a, 0xc9,
	0x3a, 0x26, 0x3e, 0x40, 0xed, 0xab, 0xe0, 0x50, 0x3d, 0x3b, 0xcf, 0x23, 0xb6, 0xc5, 0xc6, 0x0a,
	0x73, 0x05, 0x86, 0x8d, 0xd5, 0x23, 0xd0, 0xdf, 0x4c, 0x6c, 0x10, 0xc8, 0x27, 0x80, 0x89, 0x95,
	0x80, 0x61, 0x72, 0xd5, 0x69, 0x39, 0xc3, 0x0b, 0x71, 0x77, 0xce, 0xf9, 0xba, 0xb3, 0x9d, 0xdc,
	0x69, 0x4e, 0x11, 0x27, 0x2c, 0x27, 0xf7, 0xda, 0x0f, 0x39, 0xb9, 0x3a, 0xb5, 0x6f, 0x90, 0xa3,
	0x3f, 0xed, 0x41, 0xdc, 0x0a, 0x48, 0x2b, 0x1c, 0xe1, 0x50, 0x28, 0x0a, 0xc7, 0xb0, 0xc5, 0x1b,
	0xc6, 0x27, 0x90, 0xf4, 0x67, 0x39, 0x84, 0x3f, 0x42, 0xbf, 0xfe, 0xe3, 0xce, 0xef, 0xdf, 0x2d,
	0x40, 0x2b, 0x0c, 0xb6, 0x3a, 0x2c, 0xfb, 0xe5, 0x60, 0x34, 0xe0, 0x6d, 0xe0, 0x1f, 0x45, 0xf9,
	0x11, 0x4c, 0xc8, 0xb6, 0x52, 0x3c, 0x26, 0x40, 0x2f, 0x35, 0xd5, 0x70, 0x80, 0x91, 0x51, 0xae,
	0x15, 0xa3, 0x42, 0x5f, 0x43, 0x40, 0x0e, 0x46, 0xb7, 0xe3, 0xe7, 0x44, 0xa0, 0xf5, 0x92, 0x05,
	0xc6, 0x3f, 0x85, 0x96, 0x00, 0x3a, 0xd1, 0xef, 0x0f, 0xcb, 0x91, 0x08, 0x5c, 0xc5, 0x92, 0x15,
	0x88, 0x6d, 0xea, 0xbc, 0x6e, 0x39, 0x1c, 0xad, 0xf4, 0x46, 0xbd, 0x60, 0xae, 0x2a, 0x31, 0x10,
	0x7d, 0x1c, 0xcd, 0x11, 0x39, 0x5c, 0x17, 0xda, 0x27, 0x07, 0xc1, 0x2a, 0x55, 0x32, 0x01, 0x7a,
	0x1f, 0x64, 0x50, 0x95, 0xa1, 0x46, 0x6f, 0x20, 0x08, 0x5a, 0x58, 0xc9, 0x0a, 0xe4, 0x1d, 0xa8,
	0xc0, 0x17, 0x0a, 0x06, 0x65, 0x5f, 0x94, 0x0a, 0x6d, 0xf9, 0x12, 0x0b, 0xb2, 0x59, 0xf6, 0xe5,
	0x7f, 0x8f, 0x65, 0x1f, 0xca, 0xb0, 0xec, 0xd3, 0xdb, 0xe3, 0xb9, 0xeb, 0xe3, 0x06, 0x9d, 0xa3,
	0xc4, 0x40, 0x60, 0x35, 0xf5, 0x5f, 0xfa, 0x5a, 0x17, 0x1a, 0xab, 0x49, 0x00, 0x86, 0xda, 0x3f,
	0xf3, 0x1b, 0x09, 0x4f, 0xee, 0xf6, 0x45, 0xca, 0xf4, 0xbd, 0x54, 0xe6, 0xad, 0x97, 0x83, 0xd1,
	0x64, 0xfc, 0x88, 0x76, 0x44, 0xa7, 0x21, 0xec, 0x8b, 0x40, 0xf1, 0x7f, 0xbf, 0x00, 0xe5, 0xeb,
	0x5c, 0x4a, 0xa4, 0xc9, 0xeb, 0x93, 0x79, 0x1e, 0xe5, 0x06, 0x75, 0xc6, 0x07, 0xbe, 0x28, 0xfe,
	0x9b, 0xdf, 0x98, 0xdd, 0xea, 0x19, 0x3e, 0x6b, 0x56, 0x73, 0xe4, 0x47, 0x59, 0xd3, 0x5d, 0xf8,
	0xba, 0x8c, 0x39, 0xee, 0x3a, 0x8b, 0x39, 0x2e, 0x7c, 0x57, 0xd6, 0x66, 0xf6, 0x35, 0x4a, 0x5f,
	0xe0, 0xc0, 0x67, 0xd8, 0xfe, 0xd0, 0xe1, 0xb2, 0xd4, 0x85, 0xd2, 0x8c, 0xb5, 0x28, 0xaf, 0xd1,
	0xbb, 0xff, 0xed, 0xe6, 0x50, 0xd4, 0x4b, 0x3e, 0x39, 0xfd, 0x6d, 0xfb, 0x52, 0x8b, 0xbf, 0xe7,
	0x4b, 0xe5, 0x65, 0x7c, 0xa9, 0x57, 0x51, 0xfe, 0x1f, 0x74, 0x44, 0xdb, 0x02, 0x91, 0x68, 0x51,
	0x3e, 0x1e, 0xdd, 0x63, 0xf6, 0xd1, 0x49, 0x72, 0x04, 0xcb, 0x7d, 0xb8, 0x47, 0xc9, 0xac, 0xff,
	0x23, 0x4e, 0x70, 0xc5, 0x33, 0x8a, 0xf8, 0x24, 0x7a, 0xc2, 0x69, 0x7e, 0x28, 0x61, 0x15, 0x6b,
	0x1e, 0x1e, 0x8c, 0x90, 0x8f, 0xf9, 0x9f, 0x72, 0xd0, 0x12, 0x4b, 0xff, 0xfa, 0xa7, 0x08, 0x1a,
	0x8d, 0x8c, 0x73, 0x4a, 0x01, 0x3f, 0xec, 0xd3, 0xfa, 0xac, 0x86, 0xef, 0xec, 0xc9, 0x7e, 0x0a,
	0x2d, 0x09, 0xb3, 0xdd, 0x1b, 0xa7, 0xd6, 0x02, 0xe4, 0xd7, 0x58, 0x0d, 0xcc, 0xa9, 0x92, 0xdb,
	0xfa, 0x75, 0x16, 0x7d, 0xcf, 0xd7, 0x59, 0x9c, 0xf1, 0x75, 0xd6, 0xd0, 0xe7, 0x14, 0xf8, 0x72,
	0xc6, 0xab, 0x46, 0x11, 0x5a, 0xdc, 0x28, 0x47, 0x22, 0xde, 0x7a, 0xe3, 0x70, 0x1a, 0x3f, 0x2b,
	0x36, 0x28, 0xe2, 0x73, 0x68, 0xbd, 0xd3, 0xba, 0x66, 0x42, 0x11, 0xbb, 0xb6, 0x60, 0x26, 0x39,
	0xd3, 0xd1, 0x33, 0x73, 0xf1, 0x6c, 0xf1, 0x40, 0x0e, 0x42, 0x0c, 0x11, 0xcc, 0xfc, 0x84, 0xfa,
	0x10, 0x64, 0x5f, 0xd8, 0xe0, 0x1b, 0x24, 0xf2, 0x8b, 0x7f, 0x06, 0x2d, 0x8d, 0x34, 0xef, 0xa6,
	0xc6, 0x01, 0x74, 0xed, 0x6c, 0x50, 0x7d, 0xf3, 0x46, 0xe5, 0xa0, 0x17, 0xbf, 0x15, 0xc3, 0xda,
	0xd1, 0xdf, 0x7c, 0x29, 0x5a, 0x61, 0xac, 0x23, 0x7e, 0xee, 0xc0, 0x12, 0x0a, 0xac, 0x60, 0x66,
	0x81, 0x8e, 0x09, 0x68, 0x84, 0x61, 0x8f, 0x2f, 0xd1, 0xdf, 0x26, 0x01, 0xae, 0x85, 0xb1, 0x2e,
	0x66, 0x09, 0x30, 0xc0, 0x2a, 0x9e, 0x53, 0xc4, 0x12, 0xf4, 0x8c, 0x93, 0x99, 0xae, 0x50, 0x04,
	0xb2, 0x1b, 0x59, 0x9d, 0x5b, 0x57, 0xb4, 0xce, 0x3b, 0x64, 0xdf, 0xfd, 0xd3, 0x02, 0x54, 0xc0,
	0x3c, 0x92, 0xf2, 0x9b, 0xd1, 0x22, 0x30, 0x2a, 0x25, 0x9c, 0x9d, 0xbe, 0xce, 0x4e, 0x02, 0x12,
	0x9e, 0x00, 0xdb, 0xe2, 0xd4, 0x57, 0x93, 0xa9, 0xc9, 0xf3, 0xb3, 0x53, 0xdd, 0xda, 0xd0, 0x75,
	0x80, 0x24, 0xe3, 0x89, 0xdd, 0xfb, 0x22, 0xa1, 0xa6, 0x88, 0x44, 0xaa, 0xf2, 0xbf, 0x47, 0xb9,
	0x0d, 0x81, 0xe0, 0x3e, 0xc2, 0x84, 0xbd, 0xa5, 0x88, 0x5b, 0x9c, 0x18, 0x20, 0xbc, 0x0e, 0x15,
	0x41, 0xc3, 0x3f, 0xf3, 0xe9, 0x37, 0x5a, 0xef, 0x65, 0x2a, 0x5b, 0xaa, 0x7d, 0xc7, 0xd2, 0x5f,
	0xdf, 0xd1, 0x2e, 0x1c, 0x56, 0x0f, 0x1f, 0x4a, 0xdf, 0xed, 0x4f, 0x4d, 0xde, 0x4a, 0x26, 0x8e,
	0xaa, 0x47, 0x86, 0xd3, 0x77, 0x87, 0x52, 0x23, 0x47, 0xc1, 0x2c, 0x51, 0xc2, 0x68, 0xf8, 0xcb,
	0x1c, 0x5a, 0xd4, 0xe4, 0x0d, 0x7b, 0x1b, 0x0d, 0x09, 0xf8, 0xd9, 0x79, 0x9e, 0x7e, 0x37, 0xd4,
	0xe0, 0x9a, 0xc0, 0x59, 0xf8, 0x15, 0xd1, 0xeb, 0x24, 0x6d, 0x85, 0x77, 0x2c, 0xa3, 0x01, 0x89,
	0x1d, 0xf3, 0x35, 0x26, 0x53, 0x30, 0x76, 0x6e, 0xe6, 0x74, 0x07, 0x31, 0x89, 0x3c, 0x79, 0x9b,
	0xbc, 0xe2, 0x01, 0x70, 0xb8, 0x5b, 0xe7, 0x29, 0x0c, 0xa6, 0x4b, 0xeb, 0x3c, 0x01, 0xa2, 0xac,
	0xda, 0x7d, 0x42, 0x22, 0x1d, 0xe8, 0xa4, 0x83, 0xe9, 0xfc, 0x81, 0x48, 0xc7, 0x2e, 0x45, 0xac,
	0x45, 0x6f, 0x3b, 0xd9, 0xcf, 0x23, 0xb8, 0xd8, 0xc5, 0x61, 0x2d, 0x9d, 0xe0, 0xd3, 0xd2, 0x95,
	0x24, 0xfa, 0xb1, 0xee, 0x13, 0xea, 0x9d, 0xcb, 0xc9, 0xe9, 0x21, 0xd0, 0xf2, 0x42, 0x9d, 0xe2,
	0x2f, 0x17, 0xa2, 0x45, 0xa2, 0x0f, 0x5b, 0xba, 0xb4, 0x20, 0xd4, 0x14, 0x96, 0xe1, 0x87, 0xa1,
	0x01, 0xd2, 0xbb, 0x75, 0x32, 0x60, 0xa1, 0x8a, 0xcc, 0xb3, 0x4b, 0xe7, 0xbe, 0x28, 0x62, 0xe8,
	0x1c, 0xcc, 0x6d, 0x67, 0xa7, 0xba, 0xbd, 0xb8, 0xb2, 0x3a, 0x34, 0xa2, 0x7d, 0xda, 0x93, 0x9c,
	0x1e, 0x62, 0x9b, 0x68, 0x5d, 0x57, 0xd3, 0xc3, 0xdd, 0x12, 0x83, 0x92, 0xdf, 0x8f, 0x0a, 0x9a,
	0x42, 0x91, 0xa8, 0xd1, 0x71, 0xce, 0xfc, 0x1d, 0xf7, 0xf7, 0x3e, 0x70, 0xc7, 0xb8, 0x09, 0xe9,
	0x98, 0xed, 0x8a, 0xdf, 0x87, 0x16, 0x37, 0xe1, 0xa5, 0x34, 0xf6, 0x4d, 0x86, 0xbd, 0x2d, 0xd4,
	0xdc, 0x00, 0x0b, 0x4e, 0xf6, 0x0c, 0x56, 0xf0, 0x19, 0x0d, 0x85, 0x75, 0x6a, 0xc7, 0x9d, 0xe4,
	0xf4, 0xa7, 0xd0, 0x15, 0x51, 0xa0, 0x1f, 0x19, 0x49, 0x4e, 0x0f, 0x01, 0xf3, 0x29, 0x19, 0x15,
	0xd7, 0xbe, 0x83, 0x0a, 0x59, 0x34, 0x3f, 0x99, 0xfd, 0x42, 0xc5, 0x2c, 0xa7, 0x88, 0xff, 0x27,
	0x87, 0xd2, 0x9c, 0x93, 0x7c, 0x49, 0xe1, 0x3f, 0x71, 0xf0, 0x75, 0x29, 0x87, 0x0b, 0x06, 0x26,
	0x74, 0xd5, 0xc8, 0x60, 0xf1, 0xda, 0x95, 0x3a, 0xd4, 0xf1, 0x09, 0xad, 0xf7, 0xf2, 0x47, 0xa1,
	0xdd, 0x70, 0x94, 0x4b, 0x1d, 0xea, 0x58, 0xb7, 0xd6, 0xd9, 0x4f, 0x39, 0x6a, 0x58, 0xcb, 0x57,
	0x1d, 0x33, 0x4a, 0xa7, 0x3a, 0x3e, 0x41, 0xb5, 0x36, 0xd8, 0x81, 0x46, 0xff, 0x1b, 0xca, 0xb5,
	0x91, 0xe1, 0x54, 0x57, 0x27, 0x9c, 0x94, 0x99, 0xa1, 0x18, 0x6d, 0x0d, 0xad, 0xd4, 0x4b, 0x57,
	0xc1, 0xdc, 0x1e, 0x2a, 0xeb, 0xdc, 0xf3, 0x64, 0x07, 0x3c, 0x6c, 0xc2, 0xbe, 0x80, 0x35, 0xd3,
	0x4f, 0x0d, 0xfe, 0x5a, 0x64, 0x09, 0x7b, 0xbe, 0x52, 0xfb, 0xc6, 0x0d, 0x35, 0x52, 0xea, 0xf8,
	0x4d, 0x50, 0x20, 0x17, 0xff, 0xdd, 0x22, 0x84, 0xc8, 0x5d, 0xb6, 0xbd, 0x3e, 0xcc, 0xef, 0x41,
	0xcb, 0xbd, 0x2d, 0xde, 0x00, 0x16, 0x6b, 0x0c, 0xc5, 0x03, 0x6c, 0xdf, 0x0a, 0x45, 0x7c, 0xc9,
	0x99, 0x51, 0x28, 0x3c, 0xa9, 0xde, 0xf9, 0x52, 0x3b, 0x3e, 0xae, 0x75, 0xb7, 0xea, 0xb2, 0x01,
	0x55, 0xb1, 0x38, 0x88, 0xee, 0x07, 0xac, 0xc6, 0x33, 0x9a, 0xf1, 0x7f, 0x81, 0x96, 0xc0, 0x35,
	0x66, 0xd8, 0xac, 0xc1, 0x77, 0x5a, 0x93, 0x7d, 0xd3, 0xb8, 0x7e, 0xa3, 0x88, 0xaf, 0x3a, 0xad,
	0x2d, 0x0c, 0x07, 0x2a, 0x30, 0x63, 0xd4, 0x4e, 0xde, 0x06, 0xc5, 0x9a, 0xb9, 0x9d, 0x61, 0xff,
	0xc0, 0xce, 0xb1, 0x36, 0xd5, 0x7b, 0xf7, 0xeb, 0xe2, 0x04, 0xed, 0x7d, 0xc1, 0x7d, 0xf4, 0x6e,
	0x69, 0x61, 0xf6, 0x7e, 0x61, 0xe6, 0xf4, 0xa5, 0xef, 0xeb, 0xdd, 0xd2, 0x94, 0x3f, 0xca, 0xa1,
	0x15, 0x5e, 0xbf, 0x1f, 0x1b, 0x64, 0xd6, 0x85, 0x8c, 0x21, 0xe4, 0xce, 0x3b, 0x84, 0x2a, 0x45,
	0x74, 0x39, 0x33, 0x5b, 0x09, 0x65, 0xac, 0x75, 0xa2, 0xda, 0x79, 0xc3, 0x70, 0xa7, 0x1b, 0xcd,
	0x3e, 0x92, 0x4c, 0x0c, 0xfc, 0x05, 0x0e, 0xad, 0x81, 0xf1, 0xe1, 0x82, 0xcd, 0xe1, 0x50, 0xa3,
	0x31, 0xa4, 0x85, 0xf3, 0x0e, 0xa9, 0x46, 0x11, 0xb7, 0x3b, 0xe7, 0x68, 0x2a, 0x3c, 0x9f, 0x9c,
	0xec, 0x65, 0x57, 0x88, 0x8a, 0xd2, 0xf3, 0xad, 0xd3, 0x1c, 0xc8, 0x2a, 0xc0, 0x47, 0x05, 0xdd,
	0xe4, 0x9c, 0xcc, 0x56, 0x15, 0x2e, 0x72, 0xec, 0xe5, 0x4b, 0x3a, 0xbb, 0xd9, 0x36, 0x73, 0xf6,
	0x22, 0xbc, 0xf5, 0xdc, 0x8b, 0xb5, 0xb2, 0x84, 0x5c, 0xbf, 0x72, 0xe2, 0x63, 0xea, 0x91, 0xcf,
	0xd9, 0x6d, 0x93, 0x8c, 0x93, 0xa7, 0xdc, 0x0d, 0xa9, 0x33, 0x63, 0x6a, 0x57, 0x4f, 0x72, 0xb2,
	0x03, 0x36, 0x33, 0x50, 0xbf, 0x12, 0xd6, 0x46, 0xb6, 0x1c, 0x66, 0x42, 0x7e, 0x90, 0x57, 0x18,
	0x66, 0xf5, 0xcb, 0x33, 0xe7, 0xbb, 0xbe, 0xb8, 0x1d, 0xa1, 0x42, 0x6a, 0xc8, 0xa1, 0x1f, 0xb0,
	0x0e, 0x0e, 0x2d, 0x83, 0xcd, 0x48, 0xc1, 0xdf, 0xb3, 0xf7, 0xb1, 0xd5, 0x84, 0xbd, 0x8d, 0x50,
	0x46, 0x94, 0x2d, 0x93, 0xed, 0xf7, 0x75, 0x00, 0xec, 0xed, 0xf1, 0x38, 0xcc, 0xe5, 0x86, 0x71,
	0x2c, 0xb8, 0x8f, 0x71, 0xd8, 0xda, 0x58, 0xc6, 0x71, 0x1f, 0x47, 0xc1, 0xde, 0x9e, 0x9f, 0xe4,
	0xd0, 0xf2, 0xc6, 0x50, 0x8b, 0x4c, 0x76, 0x25, 0x0c, 0x64, 0xfe, 0xb3, 0x80, 0x6d, 0x82, 0x56,
	0x31, 0x8d, 0xcc, 0xd1, 0xfc, 0x2e, 0x75, 0x75, 0x52, 0x3d, 0x42, 0xac, 0xb6, 0xd3, 0x87, 0xbf,
	0xa2, 0x83, 0x9b, 0x7f, 0x58, 0x25, 0xe6, 0x24, 0x2e, 0x9d, 0x20, 0x7f, 0x03, 0x22, 0x06, 0xc5,
	0x7a, 0x29, 0x63, 0xa0, 0xfc, 0x5f, 0x71, 0x68, 0x55, 0x58, 0xa6, 0x60, 0x7d, 0xd3, 0xc2, 0x0c,
	0xe6, 0x3f, 0x3a, 0xcd, 0x8a, 0x18, 0x76, 0x16, 0xd9, 0x1a, 0x9a, 0xb3, 0xd8, 0x95, 0x9c, 0xec,
	0xb5, 0x2d, 0xeb, 0xfd, 0x9c, 0x9f, 0xec, 0xb3, 0x98, 0x39, 0x7d, 0x29, 0x35, 0x7a, 0x22, 0x35,
	0x70, 0x79, 0xbd, 0x94, 0x75, 0xa8, 0xfc, 0x31, 0x0e, 0xad, 0xf0, 0x35, 0xc8, 0xde, 0x20, 0x86,
	0x7b, 0x82, 0x30, 0x81, 0x45, 0xf3, 0x4e, 0x00, 0xbf, 0x8b, 0x66, 0xb6, 0x12, 0x9e, 0xa7, 0x43,
	0xc0, 0x66, 0x58, 0x13, 0xf7, 0x75, 0xec, 0x33, 0xf1, 0xe8, 0x63, 0xe2, 0x41, 0x8c, 0xa9, 0x94,
	0x23, 0x81, 0xb0, 0x0c, 0x44, 0x8b, 0x3c, 0x60, 0xcf, 0x35, 0x28, 0x6c, 0xb3, 0x93, 0xa5, 0x99,
	0xb0, 0xd1, 0xdc, 0x06, 0x5d, 0xe6, 0xa8, 0xe6, 0x1b, 0x52, 0x16, 0x2c, 0x15, 0x13, 0x39, 0x8a,
	0xf8, 0x75, 0x0e, 0xfa, 0x32, 0xc7, 0x69, 0x39, 0xd1, 0xc2, 0x70, 0x4e, 0x16, 0x3a, 0xc4, 0x5a,
	0xa3, 0xdd, 0x07, 0x4d, 0xb2, 0xd4, 0xb7, 0x52, 0xa6, 0x52, 0x87, 0xaa, 0x74, 0x03, 0x63, 0x94,
	0x1a, 0x6c, 0x07, 0x4b, 0x5b, 0x6c, 0xd4, 0x03, 0x84, 0x8a, 0xb8, 0x55, 0x1a, 0x13, 0xbc, 0x17,
	0x6b, 0x65, 0x37, 0x0c, 0x40, 0xe6, 0x3a, 0x14, 0xf7, 0x62, 0xad, 0x73, 0xed, 0xb4, 0x7b, 0xb1,
	0xd6, 0xac, 0x8b, 0x66, 0x81, 0xc7, 0x3b, 0x52, 0xfd, 0x87, 0x58, 0xef, 0x1b, 0x75, 0xe2, 0xf6,
	0xcc, 0xf1, 0x98, 0x36, 0xde, 0xaa, 0x0d, 0x25, 0xd4, 0xd3, 0x23, 0xa9, 0x51, 0xc2, 0xf0, 0x14,
	0xff, 0x97, 0x85, 0x68, 0xd1, 0x8e, 0x5a, 0x6c, 0x81, 0xdf, 0xc6, 0xcd, 0xc9, 0x62, 0x60, 0x46,
	0x35, 0x93, 0xc5, 0x78, 0x1d, 0x9e, 0x1a, 0x81, 0xa5, 0xa2, 0x7e, 0x23, 0xe4, 0x31, 0x1a, 0xfb,
	0xe3, 0x24, 0xe3, 0xb1, 0x64, 0xe2, 0x0c, 0xb8, 0x66, 0x59, 0x2a, 0xc3, 0x3b, 0x48, 0x26, 0xfb,
	0x71, 0x8e, 0xb3, 0x19, 0x57, 0x02, 0xa7, 0xfc, 0x89, 0x22, 0x7e, 0x6c, 0x33, 0xae, 0xac, 0x07,
	0x7c, 0x64, 0x42, 0xf3, 0x74, 0x0e, 0xcf, 0xa1, 0x78, 0x08, 0x50, 0x0d, 0x9a, 0xe8, 0xd2, 0xdc,
	0x89, 0x89, 0xe4, 0x37, 0x77, 0x75, 0x24, 0x9d, 0x77, 0xd4, 0xa1, 0x11, 0x5f, 0x43, 0xe0, 0x5e,
	0xac, 0xb5, 0xd6, 0xeb, 0xad, 0x05, 0x3b, 0xb4, 0x99, 0x58, 0x97, 0x76, 0xf4, 0x73, 0x9b, 0x7d,
	0x66, 0x1f, 0x87, 0x56, 0xfb, 0xe5, 0x3d, 0xde, 0xe6, 0x06, 0x5d, 0xfa, 0x6c, 0x0e, 0x07, 0xa2,
	0x07, 0xf0, 0x86, 0x03, 0xee, 0x9a, 0x38, 0x6b, 0x67, 0xaf, 0x21, 0xbc, 0x46, 0x1e, 0xb3, 0xb0,
	0x5b, 0xa1, 0x3a, 0xd6, 0xa5, 0x76, 0x8c, 0xa4, 0x26, 0xdb, 0xef, 0x7b, 0x20, 0xd9, 0xb1, 0xf2,
	0xa7, 0x38, 0xb4, 0x18, 0xb4, 0x12, 0x86, 0x96, 0x3b, 0x83, 0xc3, 0x87, 0x2f, 0xbc, 0x41, 0x82,
	0x5a, 0xc0, 0xe1, 0xe3, 0x81, 0x1a, 0x0d, 0x85, 0xad, 0xac, 0x8f, 0xac, 0xce, 0x9b, 0x62, 0x0d,
	0x3e, 0xeb, 0x3a, 0x3f, 0x3b, 0xd5, 0xbd, 0x4f, 0x3e, 0xa0, 0x9d, 0xb2, 0x18, 0xb2, 0x62, 0x06,
	0x3d, 0xa2, 0x9d, 0x1a, 0x4f, 0xc6, 0x47, 0xb5, 0x13, 0x87, 0xd3, 0xe3, 0xb7, 0xb4, 0x53, 0xbd,
	0x92, 0x81, 0x75, 0x6d, 0x05, 0x2a, 0x64, 0xfb, 0x7c, 0x20, 0x61, 0x90, 0x98, 0x7c, 0x91, 0xdd,
	0x29, 0xbc, 0xc5, 0x9e, 0x65, 0xf2, 0x65, 0xf1, 0xc9, 0x4d, 0x0d, 0xb6, 0xc3, 0x9e, 0xb2, 0x3d,
	0xdb, 0xc2, 0xf9, 0xdd, 0x51, 0x0b, 0xa7, 0x9c, 0xd8, 0xe0, 0xde, 0x1c, 0x48, 0x5d, 0x4a, 0x14,
	0x5f, 0x5f, 0x88, 0x16, 0x13, 0x6b, 0x70, 0xfe, 0x3d, 0x94, 0x07, 0x7a, 0x0f, 0x6a, 0x43, 0xfc,
	0x1b, 0x45, 0x7c, 0xd2, 0x49, 0x81, 0xc2, 0x43, 0xe9, 0x8e, 0x6f, 0xd2, 0x63, 0xe3, 0xd4, 0xa6,
	0xdc, 0x28, 0xf8, 0xce, 0xb5, 0x3a, 0xbc, 0xb2, 0xe8, 0x0d, 0x61, 0xd9, 0xef, 0xdf, 0xdf, 0x58,
	0xf6, 0x8a, 0xb7, 0xec, 0x13, 0xb1, 0xec, 0xbd, 0xb2, 0x0f, 0x9e, 0x7b, 0x4a, 0xa2, 0x4d, 0xf9,
	0xdf, 0xa3, 0x7c, 0xf8, 0x7b, 0xab, 0x7c, 0x80, 0xe8, 0x05, 0xde, 0xc0, 0x16, 0x9e, 0x14, 0x2a,
	0x14, 0x65, 0xc5, 0xbe, 0x55, 0x3e, 0x30, 0x27, 0x7a, 0xb3, 0x31, 0xbf, 0x35, 0xbb, 0xa6, 0x06,
	0x9c, 0xc4, 0x6c, 0x45, 0xc2, 0x52, 0xf1, 0x93, 0xe6, 0xb0, 0xec, 0x48, 0x8f, 0x5d, 0x9c, 0x39,
	0xd5, 0xe1, 0xa9, 0xcc, 0x50, 0xe7, 0xbc, 0x62, 0x57, 0xe7, 0xb8, 0x1e, 0x53, 0xc4, 0xb5, 0x4e,
	0x0a, 0x34, 0x10, 0xa4, 0xae, 0x9e, 0xd7, 0x3a, 0xef, 0x78, 0x2a, 0x19, 0x6d, 0xcf, 0xfb, 0x73,
	0x6a, 0x7b, 0x5c, 0x65, 0x8a, 0xe8, 0x74, 0x66, 0x96, 0x0a, 0xab, 0xc9, 0x68, 0xb0, 0xc6, 0x4a,
	0x27, 0x71, 0xf0, 0x16, 0x9d, 0x45, 0x39, 0xb4, 0xd5, 0xae, 0x1c, 0x22, 0xf1, 0x22, 0x0c, 0xa0,
	0xe0, 0x00, 0x54, 0xc4, 0xac, 0xcc, 0x51, 0x13, 0x0e, 0x04, 0x7d, 0x81, 0x26, 0x6f, 0x83, 0xc3,
	0x4d, 0x6a, 0x30, 0xda, 0xa4, 0xf7, 0xb3, 0x69, 0x93, 0x88, 0xe9, 0x36, 0x5b, 0x20, 0x3c, 0x35,
	0x3f, 0x52, 0xa8, 0x65, 0x53, 0x43, 0x11, 0xf5, 0x85, 0xb1, 0xb5, 0x84, 0xcd, 0x64, 0x23, 0x62,
	0x0b, 0x49, 0xc6, 0x16, 0x28, 0x35, 0xd8, 0x0e, 0x1f, 0x9b, 0xee, 0x58, 0xa6, 0x10, 0x82, 0x83,
	0xa8, 0x1d, 0x53, 0xea, 0xd8, 0x84, 0x7a, 0xa9, 0x3d, 0xd5, 0x7f, 0xa8, 0xf8, 0xc4, 0x62, 0x54,
	0xe8, 0x66, 0x3c, 0x18, 0xf8, 0x9d, 0x68, 0x31, 0xae, 0x4b, 0xb7, 0x2c, 0x7e, 0xf2, 0x33, 0x60,
	0x42, 0x99, 0xcb, 0x5d, 0x0b, 0xae, 0xd3, 0x54, 0xfe, 0xa3, 0xd1, 0x33, 0x66, 0xa7, 0xba, 0xd3,
	0x47, 0x6f, 0x6a, 0x27, 0x0e, 0xd3, 0x53, 0x2c, 0x19, 0xed, 0xf8, 0x7a, 0x56, 0x15, 0x0e, 0xdb,
	0x15, 0xdf, 0xdc, 0x4c, 0x14, 0x8b, 0x57, 0xd8, 0x71, 0x50, 0xd3, 0x62, 0x08, 0x47, 0x61, 0xce,
	0xe6, 0x9b, 0xbb, 0xc9, 0x44, 0xaf, 0x76, 0xfe, 0x72, 0x7a, 0xfc, 0xa2, 0xaa, 0x74, 0xa7, 0xef,
	0x1e, 0xd6, 0x26, 0x2f, 0xb1, 0x5a, 0x75, 0x2f, 0xca, 0xf7, 0x52, 0x37, 0x93, 0x05, 0xa6, 0x05,
	0xb2, 0x09, 0x15, 0x9e, 0xa7, 0x73, 0x00, 0xdf, 0x37, 0xba, 0x66, 0x9e, 0xca, 0x52, 0x07, 0x0d,
	0xa0, 0x52, 0xe2, 0x72, 0xd7, 0x96, 0xe1, 0x21, 0x95, 0x79, 0x2a, 0xd7, 0x4b, 0x66, 0x7b, 0xbe,
	0x0a, 0x15, 0x90, 0x1f, 0x8c, 0x71, 0x04, 0x3e, 0x17, 0x2c, 0x5c, 0x58, 0xc1, 0xb8, 0x95, 0x18,
	0xe6, 0x10, 0x4c, 0x39, 0xff, 0x22, 0xca, 0xf5, 0xcb, 0x11, 0x1f, 0xd9, 0xcc, 0xd8, 0x0f, 0x1b,
	0x03, 0x84, 0x87, 0x98, 0x86, 0xe0, 0x51, 0x45, 0xec, 0xec, 0x71, 0x31, 0xbf, 0x03, 0x2d, 0x26,
	0x68, 0x08, 0xbf, 0xf6, 0x50, 0x26, 0x6b, 0x84, 0x8b, 0xc1, 0x6a, 0x1f, 0x70, 0xb2, 0x83, 0x21,
	0xd8, 0x0c, 0x2c, 0xfc, 0x0e, 0xb4, 0x08, 0x2c, 0x15, 0xf1, 0x96, 0x25, 0x3e, 0x64, 0x04, 0x24,
	0x38, 0xd9, 0xc1, 0xc0, 0x73, 0x2b, 0x76, 0x0e, 0x2e, 0xa5, 0x76, 0x61, 0xf0, 0x3b, 0x35, 0xd8,
	0x2e, 0x91, 0x36, 0xfc, 0x4b, 0x66, 0x84, 0x88, 0x3c, 0xf3, 0xb4, 0xd3, 0x08, 0x11, 0xcb, 0xe6,
	0x8c, 0x0d, 0xf1, 0x92, 0xe9, 0x92, 0x9a, 0xcf, 0x34, 0x34, 0x5c, 0x52, 0x97, 0xcd, 0xe9, 0x8c,
	0x5a, 0x81, 0xf2, 0x31, 0x0e, 0xf3, 0x65, 0x09, 0x26, 0x6f, 0x42, 0x85, 0x42, 0x2a, 0x32, 0xcd,
	0x9c, 0xbc, 0x25, 0x99, 0x05, 0xfc, 0x6b, 0x16, 0x75, 0x7a, 0x81, 0xd9, 0x2f, 0x03, 0x16, 0x0a,
	0xa1, 0x53, 0xd2, 0x9a, 0x29, 0xa9, 0xd8, 0xa9, 0x88, 0x12, 0xaa, 0x71, 0x5a, 0x4e, 0x91, 0xf0,
	0x06, 0xb1, 0x18, 0xc6, 0x86, 0x3d, 0x73, 0x1f, 0xcf, 0x92, 0xe4, 0x64, 0x87, 0x5e, 0x73, 0x7a,
	0x08, 0x6a, 0xaa, 0x4a, 0x37, 0x3c, 0x92, 0xae, 0x2f, 0xfe, 0xbf, 0x17, 0xa2, 0x87, 0xdd, 0x44,
	0x7f, 0x61, 0x22, 0x96, 0xe4, 0x3f, 0x34, 0xcb, 0x91, 0x28, 0xff, 0xb6, 0xfd, 0x94, 0xbe, 0xa4,
	0xcf, 0x96, 0x9e, 0x52, 0x70, 0x4a, 0xa2, 0x07, 0xf3, 0x3b, 0x57, 0x51, 0x78, 0xcd, 0xf2, 0x9c,
	0xa2, 0x58, 0x5e, 0x26, 0xc9, 0xa7, 0x27, 0x74, 0x9b, 0x75, 0x57, 0xe7, 0x18, 0x86, 0x27, 0xdf,
	0xbb, 0xab, 0xbf, 0x73, 0xe5, 0x86, 0x73, 0x96, 0x73, 0xd9, 0x37, 0xf7, 0x82, 0x07, 0xdc, 0xdc,
	0x7f, 0x36, 0x37, 0x77, 0xee, 0xfc, 0x9b, 0x7b, 0x9b, 0x22, 0x7a, 0x9c, 0x46, 0x65, 0xe1, 0x37,
	0xc6, 0x8c, 0xd9, 0xe5, 0x65, 0x8d, 0x24, 0x81, 0xdb, 0xd1, 0x86, 0xba, 0xb4, 0x81, 0x4e, 0x2d,
	0x76, 0x55, 0xed, 0x3b, 0xc2, 0xd2, 0x41, 0xf3, 0x30, 0x7c, 0x44, 0x0f, 0x03, 0x48, 0x73, 0x6b,
	0x37, 0x40, 0xec, 0xa6, 0x0d, 0x46, 0xec, 0xa6, 0x0d, 0xae, 0x50, 0xa8, 0x61, 0x97, 0xce, 0x4a,
	0x10, 0xef, 0x03, 0x72, 0x50, 0xd6, 0x5b, 0x47, 0xc0, 0xda, 0x11, 0x9b, 0x46, 0x09, 0xf8, 0x27,
	0x3d, 0x27, 0xef, 0x98, 0xe7, 0x64, 0x91, 0x61, 0xd4, 0xff, 0xb8, 0x79, 0x4e, 0x56, 0xb1, 0x4b,
	0x6d, 0x1c, 0x96, 0xf9, 0xbf, 0x25, 0x39, 0x47, 0xbb, 0x32, 0x63, 0x06, 0xbd, 0x8c, 0x7d, 0x19,
	0x4d, 0x6a, 0xfb, 0xc4, 0xf7, 0x52, 0x5b, 0xf8, 0xae, 0x39, 0x0c, 0x71, 0xad, 0xf0, 0x2a, 0xe2,
	0xef, 0xd1, 0xef, 0x9c, 0x73, 0x6f, 0x4c, 0x61, 0x25, 0x38, 0x04, 0xe2, 0x91, 0x3b, 0xc8, 0x9a,
	0x7e, 0xcb, 0x19, 0x9b, 0xec, 0x5b, 0x8e, 0xdd, 0x24, 0xdf, 0x72, 0x8b, 0x99, 0x1a, 0x30, 0xf4,
	0xe2, 0x49, 0x0e, 0xad, 0xcd, 0x86, 0x3e, 0xd2, 0x14, 0x0a, 0x46, 0x64, 0x7e, 0x03, 0xca, 0xf5,
	0x85, 0xfc, 0x32, 0x31, 0x8a, 0x5c, 0xab, 0x88, 0x0f, 0x39, 0x31, 0x40, 0x58, 0x96, 0xbe, 0x7b,
	0x5c, 0x3d, 0x73, 0x6e, 0xe6, 0xf8, 0xe9, 0xf4, 0xf8, 0x78, 0xea, 0x42, 0xab, 0x84, 0xc1, 0x7c,
	0x85, 0xf9, 0xe6, 0x95, 0x63, 0xba, 0x06, 0x18, 0x30, 0x81, 0x67, 0x5b, 0x19, 0x74, 0x91, 0x14,
	0xf2, 0x9b, 0xd0, 0xa2, 0xb0, 0x1c, 0x69, 0x6e, 0x88, 0xe2, 0x5d, 0x9c, 0x47, 0x62, 0xe3, 0x00,
	0x48, 0x28, 0x84, 0x96, 0xa9, 0xc9, 0x4f, 0xb5, 0x73, 0x43, 0x12, 0x81, 0x16, 0xff, 0xd7, 0x85,
	0xe8, 0xe1, 0x9d, 0x98, 0x36, 0x64, 0x3b, 0xb5, 0xbf, 0xb7, 0x9f, 0xda, 0x4a, 0x45, 0x7c, 0xc6,
	0x3c, 0xb5, 0x8f, 0xcc, 0x73, 0x93, 0xde, 0xd7, 0x11, 0x7e, 0x97, 0xbd, 0xfb, 0xa8, 0xc1, 0xce,
	0x63, 0xec, 0xdd, 0xb7, 0xdc, 0xba, 0x4b, 0x75, 0x56, 0x73, 0x6e, 0xc4, 0x73, 0xdf, 0x79, 0x0b,
	0x7e, 0xe4, 0x9d, 0x97, 0xfb, 0x80, 0x64, 0xe1, 0xe7, 0x3c, 0x95, 0x3b, 0xd8, 0xc3, 0xb3, 0xc8,
	0xb4, 0x7c, 0x7c, 0xa0, 0xc3, 0xc3, 0xb2, 0x24, 0x5b, 0xcd, 0x5b, 0x6d, 0xb1, 0x81, 0x6e, 0x95,
	0x79, 0xab, 0xe5, 0xd3, 0xfb, 0x0c, 0xc7, 0x40, 0x80, 0x6f, 0xb1, 0x94, 0xf9, 0x16, 0xf8, 0x1b,
	0x93, 0xda, 0x15, 0x67, 0x39, 0x45, 0x3c, 0xcd, 0xa1, 0x13, 0x9c, 0x73, 0xee, 0x8d, 0x26, 0xbc,
	0x0b, 0x28, 0x99, 0x35, 0x4d, 0x8f, 0xdf, 0x81, 0x00, 0x17, 0x3a, 0x49, 0xec, 0x68, 0x4d, 0x8f,
	0xc5, 0xf5, 0x2a, 0xc7, 0x27, 0x6c, 0xcc, 0xe2, 0xcc, 0xa9, 0x2f, 0xb5, 0xd1, 0x8b, 0xea, 0xf8,
	0x84, 0x3a, 0x7a, 0x6a, 0xe6, 0x70, 0x9f, 0x11, 0x2d, 0xed, 0x6a, 0xea, 0xf8, 0x79, 0x75, 0xfa,
	0xa6, 0xfa, 0x69, 0x0f, 0x7b, 0x96, 0xcd, 0xed, 0xf1, 0x2d, 0x67, 0x8c, 0x0f, 0x9f, 0xdf, 0x6c,
	0x03, 0xfb, 0x65, 0x9c, 0xdf, 0xbf, 0xce, 0x41, 0x0f, 0x57, 0x12, 0xbd, 0xfd, 0xcf, 0x7f, 0x7e,
	0xdf, 0xcb, 0x3c, 0xbf, 0xbf, 0x56, 0xc4, 0x75, 0xec, 0xf9, 0xa5, 0x07, 0x8c, 0x3e, 0x3a, 0xdf,
	0xdf, 0x01, 0xae, 0xd8, 0xa7, 0x88, 0x7b, 0xd1, 0x1e, 0xe7, 0xdc, 0xb3, 0x13, 0x5e, 0x02, 0x55,
	0x10, 0xd3, 0x01, 0x6c, 0x9a, 0x52, 0x47, 0xfa, 0xe8, 0x65, 0xd0, 0x3e, 0x19, 0x0f, 0x0d, 0x64,
	0x0b, 0x41, 0x03, 0x76, 0x4b, 0x40, 0xcc, 0x3a, 0xbc, 0x09, 0xb2, 0x75, 0xf4, 0xcb, 0xd8, 0x04,
	0xff, 0x7e, 0x01, 0x7a, 0x64, 0x5b, 0x20, 0x12, 0x65, 0xc7, 0x5e, 0x23, 0x87, 0x1b, 0x8d, 0x6d,
	0xd0, 0xc2, 0x12, 0x08, 0xd8, 0x08, 0xbf, 0x55, 0xc4, 0x9d, 0x2c, 0x81, 0x78, 0xf3, 0x7e, 0x64,
	0x19, 0xe0, 0x11, 0x41, 0x96, 0x81, 0x3a, 0x24, 0xf6, 0x1e, 0x96, 0xa9, 0x88, 0x7f, 0x39, 0x43,
	0x47, 0x5e, 0xb3, 0x6e, 0x8f, 0x05, 0x86, 0x4b, 0x26, 0xb3, 0x3d, 0x96, 0x99, 0xee, 0xe9, 0xf0,
	0x08, 0xc7, 0x90, 0xf0, 0xb7, 0xb3, 0x91, 0x70, 0x2c, 0xef, 0x5a, 0x48, 0xf8, 0x63, 0x44, 0xb8,
	0xc2, 0xca, 0x47, 0x0b, 0x05, 0xb9, 0xa2, 0x1d, 0xec, 0xb0, 0x90, 0xf3, 0x8a, 0x61, 0x4e, 0x11,
	0xcf, 0x72, 0x68, 0x90, 0x73, 0xce, 0xb7, 0x60, 0xc2, 0x1f, 0x01, 0x25, 0x1d, 0x1b, 0x25, 0x46,
	0x10, 0x10, 0x52, 0x1d, 0xbe, 0xa6, 0x1e, 0x3a, 0x9d, 0x4c, 0x1c, 0x4a, 0x9d, 0x19, 0xd3, 0x2e,
	0xe8, 0x67, 0x46, 0x1b, 0xfb, 0x5a, 0x2f, 0xed, 0x3c, 0x8d, 0xa5, 0xf7, 0x4e, 0x80, 0x13, 0xe6,
	0x1f, 0xa3, 0x32, 0xdb, 0x76, 0x8c, 0x80, 0xa7, 0x80, 0xda, 0x79, 0x3a, 0x19, 0x4f, 0x18, 0x63,
	0x1f, 0x99, 0x39, 0xdc, 0x47, 0x6c, 0x32, 0xb4, 0x1c, 0xf4, 0x68, 0xf6, 0xc1, 0xfd, 0x22, 0x76,
	0x23, 0x5f, 0x8d, 0x72, 0xfd, 0x5e, 0x6c, 0x42, 0xb4, 0x20, 0x9b, 0x1f, 0x17, 0x3b, 0x2d, 0x43,
	0xe0, 0xf3, 0x46, 0xbd, 0xd6, 0x9b, 0x18, 0xf6, 0x02, 0x2e, 0xa8, 0x78, 0x47, 0x11, 0xeb, 0x90,
	0xe4, 0x9c, 0x77, 0x4d, 0x84, 0x27, 0x6c, 0x5f, 0x4c, 0x3b, 0x7b, 0x70, 0xe6, 0x74, 0x3f, 0x98,
	0x16, 0xc3, 0x28, 0xbf, 0xe5, 0xf0, 0x6a, 0x7c, 0xcb, 0x19, 0x73, 0x2b, 0xee, 0xcb, 0x45, 0x0f,
	0xd9, 0x91, 0x1a, 0x47, 0x66, 0xab, 0x9d, 0x72, 0x6e, 0x7a, 0x00, 0xca, 0xb9, 0x30, 0xbc, 0xa0,
	0x28, 0x96, 0x67, 0x92, 0xc9, 0xaa, 0x4c, 0x32, 0x89, 0x3d, 0x3f, 0x98, 0x73, 0xf0, 0xd0, 0x1c,
	0x9b, 0x98, 0x3d, 0x0f, 0x2d, 0x19, 0xd6, 0x79, 0x3f, 0xcf, 0x31, 0x7e, 0x13, 0xe5, 0x85, 0x9a,
	0xe4, 0x30, 0x66, 0xfb, 0x73, 0x4d, 0xd7, 0x4f, 0x0a, 0x14, 0x1e, 0x33, 0xfe, 0xb2, 0x2d, 0x3f,
	0xf9, 0x8c, 0xb4, 0x22, 0xc3, 0x0b, 0xcc, 0xb5, 0xf0, 0xff, 0x6d, 0x8f, 0xde, 0x1e, 0xb4, 0x9c,
	0x1d, 0x13, 0x7e, 0x09, 0x78, 0xd1, 0x14, 0xf0, 0xb8, 0xec, 0x9e, 0x89, 0x96, 0x69, 0x50, 0xb9,
	0x0c, 0xdb, 0x71, 0xe1, 0x7a, 0xc4, 0xc2, 0x45, 0xa2, 0xbf, 0x8b, 0xff, 0x6e, 0x01, 0x2a, 0xca,
	0x5c, 0x80, 0x5f, 0xc6, 0xf1, 0x96, 0x2c, 0xc7, 0xdb, 0x31, 0xdf, 0x62, 0xe8, 0xeb, 0x77, 0x3f,
	0x47, 0x9c, 0x3f, 0xc8, 0xa1, 0x65, 0x1f, 0xcb, 0xbb, 0x3f, 0x64, 0x22, 0x14, 0x13, 0xbe, 0x39,
	0x23, 0x4e, 0xdf, 0x3b, 0xf2, 0x6e, 0xd1, 0xac, 0x05, 0xf6, 0x1e, 0xf6, 0xb6, 0xc2, 0x53, 0xf0,
	0x7a, 0x90, 0xb9, 0xb9, 0xd9, 0xdd, 0x29, 0x2d, 0xfd, 0xd8, 0x82, 0xab, 0x62, 0x8b, 0x22, 0x56,
	0x22, 0x97, 0x73, 0xce, 0x2f, 0x23, 0xac, 0xb6, 0xef, 0xcd, 0x39, 0x08, 0xcb, 0x7f, 0x5c, 0x84,
	0xf2, 0x30, 0x82, 0x5d, 0x35, 0x6e, 0x7e, 0xb3, 0x9d, 0x92, 0x80, 0x35, 0x91, 0x41, 0x49, 0xd6,
	0xcd, 0x43, 0x49, 0x66, 0xa7, 0xba, 0x4d, 0x22, 0x52, 0x41, 0x8d, 0x2f, 0x73, 0x4c, 0x59, 0xc4,
	0x08, 0x53, 0xb0, 0xba, 0xa5, 0xc9, 0xc7, 0xc6, 0x28, 0xb0, 0x05, 0xf8, 0x75, 0x23, 0x04, 0x7f,
	0xd9, 0x65, 0x21, 0x06, 0x2c, 0xf0, 0xf0, 0x37, 0x20, 0x20, 0xb2, 0x10, 0x53, 0xce, 0x7f, 0x60,
	0x8d, 0x9f, 0x96, 0xcb, 0xf8, 0x57, 0xb0, 0xf1, 0xd3, 0xd6, 0x33, 0x3f, 0xd8, 0x20, 0x6a, 0x25,
	0x24, 0x3e, 0x5a, 0xb9, 0x11, 0x31, 0x6d, 0xbd, 0x35, 0x4e, 0x5a, 0x99, 0x11, 0x84, 0x18, 0xd4,
	0x8b, 0x0f, 0xe9, 0x22, 0x07, 0x09, 0x42, 0x5c, 0x80, 0xff, 0x21, 0x73, 0x22, 0x51, 0x86, 0x37,
	0xa1, 0xc5, 0x2d, 0x4d, 0x3e, 0x3c, 0x9f, 0x45, 0x66, 0x03, 0x03, 0x26, 0xe4, 0xb7, 0x34, 0xf9,
	0xc8, 0x1c, 0x0c, 0x18, 0xff, 0x01, 0xca, 0xa7, 0x4f, 0x6c, 0x44, 0xb0, 0xc1, 0xde, 0xab, 0x26,
	0x54, 0x28, 0x4f, 0x8f, 0x5f, 0xd6, 0x97, 0x92, 0xb8, 0x69, 0x8c, 0xa7, 0x8e, 0x8f, 0x94, 0x44,
	0xc3, 0xcd, 0x32, 0xfc, 0x39, 0x3b, 0xd5, 0x8d, 0x1d, 0xaf, 0xb0, 0x1f, 0x86, 0x0e, 0x58, 0x2f,
	0x99, 0x6d, 0xf9, 0x97, 0xd0, 0x42, 0x6c, 0xf5, 0x4f, 0x54, 0x88, 0x4f, 0xe8, 0x8c, 0x30, 0x40,
	0xe0, 0xf3, 0x60, 0x21, 0x51, 0xbb, 0x70, 0x38, 0x3d, 0x66, 0x88, 0x8a, 0x50, 0xca, 0x6a, 0x1f,
	0xf3, 0x7f, 0xa8, 0xf6, 0x11, 0xfd, 0x70, 0xed, 0x63, 0xc1, 0x8f, 0xd1, 0x3e, 0x16, 0x3e, 0xa8,
	0xf6, 0xf1, 0x0d, 0x45, 0x7c, 0x0d, 0xbd, 0xea, 0xa4, 0xe7, 0x43, 0x28, 0x67, 0xdf, 0xb2, 0x48,
	0x88, 0xa6, 0x09, 0x35, 0x71, 0x1c, 0x54, 0x61, 0xb0, 0x1b, 0x21, 0x3c, 0x25, 0x21, 0xd2, 0x07,
	0x17, 0xa3, 0xd5, 0x8c, 0xc2, 0x65, 0x57, 0x8d, 0xdb, 0xb8, 0xb4, 0x3f, 0xb0, 0x1f, 0x35, 0xf7,
	0x03, 0x5c, 0xda, 0x20, 0xc9, 0xfa, 0xe7, 0x91, 0x76, 0x6c, 0x01, 0x04, 0x73, 0x0c, 0x67, 0xd1,
	0x1f, 0x7c, 0x00, 0xf0, 0xb3, 0x96, 0x19, 0x38, 0xd0, 0x8c, 0x25, 0x68, 0x39, 0x18, 0x75, 0xf4,
	0xe0, 0x2f, 0x30, 0x24, 0xac, 0xef, 0x3b, 0xf8, 0xf3, 0xcc, 0x26, 0x3b, 0x49, 0xc8, 0xfd, 0x61,
	0x24, 0x61, 0xab, 0x79, 0x08, 0x17, 0x32, 0x8a, 0x82, 0xcc, 0x43, 0x38, 0xdf, 0xf2, 0x1a, 0xc7,
	0x73, 0x8b, 0x35, 0x0a, 0xf9, 0xa6, 0x39, 0x08, 0xc0, 0x3c, 0xa8, 0x08, 0x69, 0x08, 0x65, 0x9e,
	0xf3, 0xb7, 0x7f, 0xe4, 0x39, 0xff, 0xce, 0xb5, 0x2c, 0xbc, 0x44, 0xca, 0xd5, 0xab, 0x48, 0x0b,
	0xc1, 0xf9, 0xf2, 0xa7, 0x38, 0xf9, 0x6f, 0xdb, 0x4f, 0xfe, 0x4b, 0xf3, 0x9e, 0xfc, 0x79, 0x37,
	0x29, 0xb4, 0xa9, 0xd8, 0xa3, 0x88, 0x3e, 0xe4, 0x75, 0x66, 0x3f, 0x21, 0xc2, 0x6a, 0xc0, 0x05,
	0xda, 0xce, 0x96, 0x26, 0x1f, 0x70, 0x57, 0x16, 0x7d, 0x27, 0xb3, 0xf5, 0xbe, 0xe5, 0xc8, 0x6e,
	0xf9, 0x96, 0x33, 0xbe, 0x12, 0x95, 0x98, 0xef, 0x70, 0x68, 0x8d, 0xbd, 0x8f, 0x5f, 0x86, 0xb4,
	0xfc, 0xbf, 0x2f, 0x44, 0xab, 0x19, 0x85, 0xcf, 0xcf, 0x47, 0x3f, 0x3e, 0xc8, 0x46, 0x3f, 0x7e,
	0xba, 0x0b, 0xb4, 0xc2, 0x46, 0x27, 0x7e, 0x38, 0x83, 0xf0, 0x03, 0xa9, 0xc1, 0x26, 0x3b, 0x35,
	0xf8, 0xfe, 0x2b, 0xf9, 0x27, 0x3b, 0xf3, 0x7f, 0xc8, 0x3c, 0xf3, 0xb5, 0x3f, 0xfa, 0xcc, 0xaf,
	0x08, 0x2f, 0x93, 0xfe, 0xd5, 0x9c, 0xa7, 0xfe, 0x2d, 0xf3, 0xf6, 0x85, 0x73, 0xbf, 0x71, 0x4e,
	0x2d, 0xe9, 0x9a, 0xf0, 0x2a, 0x3c, 0xfa, 0x39, 0x95, 0xa4, 0xdb, 0x14, 0xd1, 0x83, 0xb6, 0x38,
	0xb3, 0xef, 0x4b, 0x81, 0x07, 0x54, 0xc9, 0xc4, 0xb1, 0x5d, 0x35, 0xee, 0xcc, 0x23, 0x0b, 0x4b,
	0xc0, 0xa8, 0x34, 0x8f, 0xe4, 0xa0, 0x35, 0x76, 0x4c, 0xbf, 0x0c, 0xe1, 0xe2, 0x6d, 0x2a, 0x5c,
	0xe8, 0xcc, 0x7f, 0x51, 0x56, 0xe1, 0x62, 0x57, 0x8d, 0x1b, 0xf6, 0x26, 0x08, 0x15, 0x45, 0xb0,
	0x38, 0x6a, 0x7f, 0x2f, 0xb0, 0xf8, 0xbb, 0x6a, 0xdc, 0x54, 0x13, 0xef, 0x8d, 0x7a, 0x8b, 0x0f,
	0xe6, 0xa0, 0xd5, 0x8c, 0x6a, 0xef, 0xe7, 0x3b, 0xee, 0x74, 0x6f, 0xe7, 0xfc, 0xb8, 0xbd, 0x5d,
	0xe1, 0x52, 0xc4, 0xd7, 0xd1, 0x6b, 0xce, 0xec, 0xb3, 0x10, 0x78, 0x50, 0x6a, 0xce, 0xbf, 0x39,
	0xf0, 0x96, 0xb0, 0xb7, 0xff, 0xff, 0xee, 0x96, 0x50, 0xef, 0x7c, 0x09, 0xab, 0x92, 0x7d, 0x4b,
	0xfc, 0xdd, 0x02, 0xb4, 0x92, 0x0a, 0x79, 0xcc, 0x86, 0x78, 0xcb, 0xbe, 0x21, 0x36, 0x3e, 0xc0,
	0x86, 0xc8, 0x0d, 0xe7, 0x14, 0xad, 0xfa, 0x69, 0xc4, 0x35, 0x2a, 0x0a, 0x2d, 0xb8, 0x2f, 0x51,
	0xa8, 0x39, 0x9b, 0x60, 0xf6, 0xcf, 0xce, 0x97, 0x56, 0x9c, 0xe0, 0x14, 0x51, 0xe1, 0x50, 0x1f,
	0xe7, 0xcc, 0xb6, 0x98, 0xc2, 0x7e, 0x2a, 0x2c, 0xd3, 0x7d, 0xf9, 0x33, 0x69, 0x71, 0xfe, 0x3a,
	0x07, 0xad, 0xb2, 0x8e, 0xe8, 0x97, 0xb1, 0xd3, 0xb7, 0x5a, 0x34, 0x2b, 0x73, 0xef, 0x74, 0x2c,
	0x6d, 0xc1, 0x4e, 0xe7, 0x21, 0x7e, 0xac, 0xda, 0x79, 0x83, 0xa6, 0xba, 0x20, 0x5a, 0x53, 0x22,
	0x67, 0x65, 0x5d, 0x08, 0x81, 0xb7, 0x7c, 0x9b, 0x39, 0xb4, 0x18, 0xc3, 0x1c, 0xa3, 0x1e, 0x25,
	0x96, 0x8b, 0xff, 0x0c, 0x27, 0xa5, 0xa2, 0x42, 0x11, 0x5f, 0x42, 0xbf, 0x72, 0xce, 0xd5, 0x97,
	0xb0, 0x16, 0x06, 0x6b, 0x98, 0xa3, 0xa8, 0x43, 0x37, 0xe8, 0x89, 0x29, 0xfe, 0x5f, 0x73, 0x18,
	0x45, 0x1a, 0x6d, 0xf7, 0x4b, 0xd4, 0x93, 0x3f, 0x92, 0xf5, 0x73, 0xc3, 0x94, 0xee, 0xef, 0x8b,
	0xef, 0x50, 0xc4, 0x6d, 0xe8, 0x2d, 0xe7, 0x9c, 0xeb, 0x61, 0x3c, 0x94, 0x80, 0x8c, 0xcd, 0xac,
	0xe2, 0x5c, 0x1b, 0xe0, 0x43, 0x54, 0xc0, 0xe0, 0xe1, 0x8b, 0x6c, 0xdf, 0xdc, 0xa4, 0x75, 0xeb,
	0x2c, 0xdc, 0x23, 0x18, 0xaf, 0xb2, 0x8c, 0xe1, 0x1a, 0x2b, 0x67, 0x6a, 0xd0, 0xb9, 0xe2, 0x6e,
	0x0e, 0xad, 0xd8, 0x22, 0x47, 0x77, 0xd5, 0xb8, 0xdd, 0x01, 0x7f, 0xd8, 0xd8, 0x5b, 0x55, 0x06,
	0xf5, 0xe3, 0xcc, 0x07, 0x1f, 0x42, 0xfd, 0x9e, 0x04, 0xa2, 0x09, 0xcd, 0x41, 0x29, 0xe0, 0xf0,
	0x05, 0xfc, 0x61, 0x50, 0x26, 0x92, 0xc0, 0xf5, 0xe4, 0xd6, 0xdc, 0xa8, 0x88, 0x65, 0xe8, 0x39,
	0x67, 0x66, 0x07, 0xc2, 0x1a, 0x58, 0x87, 0x96, 0x26, 0x5f, 0x6a, 0xb0, 0x5d, 0x6f, 0x4e, 0x36,
	0xd3, 0xbf, 0xcd, 0x41, 0x3c, 0x5b, 0xfb, 0x97, 0xb1, 0x8d, 0xde, 0xb2, 0x6c, 0xa3, 0x0c, 0xeb,
	0x23, 0x32, 0x9b, 0xfb, 0xdb, 0x42, 0x9b, 0x15, 0xd1, 0x8d, 0x44, 0x67, 0x96, 0x55, 0x30, 0x4e,
	0xe1, 0xae, 0x1a, 0xb7, 0xc3, 0x5c, 0xb2, 0xb9, 0x76, 0x8e, 0x0f, 0x2d, 0x26, 0xed, 0xf9, 0xe5,
	0x68, 0x41, 0x4b, 0x93, 0xcf, 0xb0, 0x72, 0x6e, 0x69, 0xf2, 0xf1, 0x3c, 0xca, 0xd5, 0x31, 0x90,
	0x7d, 0x82, 0xff, 0xe6, 0xd7, 0xa2, 0x3c, 0x4f, 0x4d, 0x75, 0x73, 0xe3, 0x6e, 0xe2, 0xe5, 0xb6,
	0x44, 0xa2, 0xbf, 0x19, 0xef, 0xf0, 0x5c, 0xd6, 0x3b, 0xbc, 0xf8, 0x7f, 0x5e, 0x8d, 0x16, 0xe2,
	0xfd, 0xc9, 0x57, 0xd9, 0xa9, 0xd1, 0x73, 0x8a, 0x58, 0xe2, 0xcc, 0xc7, 0x30, 0x7c, 0xf5, 0x3d,
	0x72, 0x5f, 0x26, 0x9f, 0x2f, 0x90, 0x18, 0x0a, 0xcc, 0x57, 0xc3, 0x00, 0x61, 0x35, 0x6d, 0x0e,
	0x96, 0xdd, 0x44, 0x8a, 0x81, 0x28, 0x0b, 0x07, 0x39, 0x94, 0x27, 0xfb, 0x03, 0x51, 0x1a, 0x12,
	0x26, 0xcf, 0x55, 0xaf, 0x88, 0x7e, 0x27, 0x05, 0x0a, 0xbf, 0x55, 0xc7, 0x27, 0x92, 0x89, 0xde,
	0x5a, 0xaf, 0x97, 0xd8, 0x5f, 0xd3, 0x30, 0xac, 0xa6, 0x2c, 0x32, 0x75, 0x22, 0xfd, 0xcd, 0x31,
	0x36, 0x02, 0x0d, 0x58, 0xed, 0xe3, 0xa0, 0xfb, 0x24, 0xaa, 0x89, 0x11, 0xb9, 0xb5, 0x87, 0xd4,
	0x1f, 0x3f, 0x26, 0xd1, 0x3e, 0xf8, 0xa3, 0x1c, 0x42, 0x21, 0xc3, 0x57, 0xd4, 0x30, 0x7d, 0x7f,
	0x3a, 0x2b, 0x4d, 0xd9, 0x40, 0x7d, 0x4a, 0x89, 0xf1, 0x7b, 0xa5, 0x22, 0x8a, 0x4e, 0xa6, 0xb5,
	0xf0, 0xfc, 0x4c, 0x6c, 0x30, 0x7d, 0xf7, 0x30, 0xeb, 0x6c, 0x0c, 0xd1, 0xa1, 0x52, 0x83, 0xed,
	0xe0, 0x90, 0x09, 0x6e, 0x28, 0x5a, 0xe7, 0x89, 0x74, 0xac, 0x03, 0x7c, 0xc0, 0x25, 0x06, 0x01,
	0x3f, 0xc2, 0xa1, 0x42, 0xac, 0xe1, 0x30, 0xc6, 0xb3, 0x30, 0xbb, 0x93, 0x36, 0x8c, 0xa7, 0x8a,
	0xa9, 0x09, 0x23, 0xc2, 0xa1, 0x15, 0x2d, 0x18, 0x84, 0x37, 0xd9, 0xec, 0x4e, 0xd0, 0xbd, 0xc5,
	0xdd, 0x19, 0x1c, 0x57, 0x71, 0x29, 0x9b, 0xec, 0x09, 0xde, 0xfd, 0xe1, 0x39, 0x00, 0x16, 0x59,
	0xb2, 0xe0, 0xe5, 0xff, 0x33, 0x8e, 0xf6, 0x1f, 0x6a, 0xf6, 0x9b, 0xfe, 0xf2, 0xc4, 0x4a, 0x75,
	0x6d, 0xc6, 0x68, 0x69, 0x0d, 0xd7, 0x19, 0x4e, 0x11, 0x4f, 0x72, 0x4e, 0x7b, 0x4b, 0xe1, 0x20,
	0xa7, 0x7f, 0xdb, 0xc4, 0x31, 0x1a, 0xaf, 0x9d, 0x06, 0xa4, 0x61, 0x2d, 0x20, 0x98, 0xb4, 0x2d,
	0x3a, 0x23, 0x43, 0x59, 0x1b, 0x6d, 0xa8, 0x8b, 0x66, 0xf9, 0x53, 0x3b, 0x4f, 0xab, 0xd3, 0x9f,
	0x12, 0x47, 0xc2, 0x7b, 0xb1, 0xd6, 0x1a, 0x78, 0x8e, 0x4b, 0xc6, 0x8f, 0x6a, 0x5f, 0x0e, 0x6b,
	0x43, 0x24, 0xb8, 0x9a, 0x76, 0xf2, 0x76, 0x72, 0x6a, 0x10, 0x4c, 0x30, 0xf5, 0x39, 0xe3, 0xd6,
	0x92, 0x7d, 0x58, 0xfc, 0x1f, 0x51, 0x61, 0x28, 0xb2, 0x1d, 0x4f, 0x03, 0xa7, 0xb3, 0x9b, 0xc3,
	0x43, 0x09, 0xbc, 0x0b, 0x40, 0x29, 0x6e, 0x69, 0x20, 0x94, 0xd2, 0x69, 0x19, 0x3e, 0x04, 0x74,
	0x62, 0x6c, 0x5c, 0x7a, 0x42, 0x4c, 0x2c, 0x6d, 0x79, 0x05, 0x7b, 0x6e, 0x81, 0x43, 0xa4, 0x39,
	0x84, 0xbc, 0x39, 0xd6, 0x98, 0x7a, 0x4e, 0xba, 0xde, 0x54, 0xc4, 0x2a, 0x67, 0x66, 0x4b, 0x61,
	0x23, 0x1d, 0x0b, 0x1b, 0x8c, 0x0e, 0x46, 0xa5, 0x6f, 0x50, 0xbc, 0x37, 0x2c, 0xe3, 0xc9, 0x44,
	0xa2, 0x9f, 0x97, 0x95, 0x34, 0xfe, 0x34, 0x33, 0x2c, 0x94, 0xfd, 0x89, 0x8f, 0x75, 0xa5, 0x02,
	0x95, 0x4d, 0xb6, 0xd6, 0xc2, 0x13, 0x74, 0x68, 0xac, 0xab, 0x94, 0x65, 0x2c, 0xd9, 0xda, 0xb1,
	0x2f, 0x00, 0x05, 0x3f, 0xf4, 0x05, 0xa0, 0xf0, 0x87, 0xbf, 0x00, 0x2c, 0xf9, 0x31, 0x2f, 0x00,
	0x4b, 0x1f, 0xf0, 0x05, 0x80, 0x1f, 0xe3, 0xd0, 0x12, 0xbc, 0x41, 0x6b, 0x8c, 0xcc, 0x97, 0x10,
	0x69, 0xfa, 0x30, 0xa7, 0x88, 0x07, 0x39, 0xa7, 0xb5, 0x4c, 0x08, 0x83, 0x27, 0x3b, 0x3c, 0x8c,
	0x9b, 0x31, 0xea, 0xa6, 0x3f, 0x55, 0xbb, 0x7a, 0xe0, 0x27, 0x89, 0xb0, 0x3a, 0xd4, 0xf5, 0x07,
	0xdc, 0xb2, 0x7c, 0x77, 0x43, 0xb3, 0xbc, 0x2f, 0x10, 0xac, 0x2f, 0x87, 0xe0, 0x0e, 0xe5, 0xde,
	0x8f, 0x23, 0x10, 0xc8, 0x21, 0xd5, 0x7b, 0x43, 0xed, 0x6b, 0x4b, 0xc7, 0x0e, 0x92, 0x8f, 0x5b,
	0x46, 0xbe, 0x6e, 0x32, 0x7e, 0x14, 0xb7, 0x34, 0x12, 0x69, 0x4a, 0xd6, 0x21, 0xf0, 0x31, 0x0e,
	0x2d, 0xf2, 0x41, 0x56, 0x0c, 0x08, 0x65, 0xbd, 0x57, 0x11, 0x65, 0x27, 0x01, 0x09, 0xef, 0x03,
	0xd1, 0x01, 0x19, 0xa6, 0xd4, 0x91, 0xbc, 0x7b, 0x56, 0x1d, 0x3d, 0x35, 0x13, 0x6b, 0x9b, 0xe9,
	0xe8, 0x51, 0xfb, 0xdb, 0x53, 0x57, 0x7b, 0x0c, 0xc6, 0x95, 0x4d, 0xb6, 0x57, 0xea, 0x00, 0x12,
	0x0b, 0x8f, 0x1c, 0x86, 0xc7, 0x9c, 0xe3, 0xa3, 0x48, 0x28, 0x98, 0xbe, 0xfa, 0x99, 0x76, 0xae,
	0x9f, 0x9c, 0x64, 0xd2, 0x09, 0xff, 0xb6, 0x35, 0xb7, 0xc9, 0x0a, 0xc6, 0x14, 0x86, 0xcd, 0x6d,
	0xf2, 0x18, 0xa8, 0x9a, 0xe1, 0x99, 0x75, 0xfc, 0x4a, 0x6a, 0xf2, 0x50, 0x72, 0xf2, 0x68, 0x6a,
	0xb2, 0x87, 0xec, 0x3d, 0x4b, 0x9a, 0x93, 0x6d, 0x96, 0xbc, 0x93, 0xbc, 0xf9, 0x34, 0xc9, 0xe6,
	0x9d, 0x7c, 0x44, 0x4d, 0x0c, 0xa8, 0x37, 0xdb, 0x68, 0xac, 0x44, 0x48, 0x3d, 0x09, 0x77, 0xa1,
	0x2d, 0xe5, 0xa4, 0x61, 0xef, 0x08, 0x01, 0xad, 0xb1, 0x27, 0xb8, 0x61, 0xd3, 0xf8, 0x72, 0x32,
	0x71, 0x0c, 0xa2, 0x05, 0xc0, 0x85, 0x67, 0xf0, 0x31, 0xa7, 0x89, 0x93, 0x57, 0xdf, 0x78, 0xfa,
	0x6a, 0x6b, 0x89, 0x1a, 0x9b, 0x32, 0x12, 0xff, 0x74, 0x9e, 0xc0, 0xda, 0xb6, 0xf5, 0xd4, 0xc4,
	0xf1, 0x2f, 0xa9, 0x88, 0x8b, 0xf3, 0xf7, 0xac, 0xca, 0x1e, 0x33, 0x15, 0x5f, 0x27, 0xd5, 0x66,
	0x3d, 0x88, 0x99, 0xca, 0xb6, 0x14, 0x9e, 0xcd, 0x4e, 0x9f, 0xb1, 0x38, 0xcc, 0x7e, 0x20, 0x89,
	0x6d, 0xc5, 0x7f, 0x84, 0xf2, 0xf4, 0x0f, 0x81, 0xfb, 0x5e, 0x8d, 0xfb, 0x7e, 0x3c, 0x6b, 0xdf,
	0x90, 0x68, 0x04, 0x77, 0x8d, 0x7d, 0x7d, 0x68, 0x2b, 0x61, 0x9d, 0xad, 0x5f, 0x9a, 0xd0, 0xd5,
	0xc8, 0x54, 0x64, 0xd4, 0xe4, 0xff, 0x84, 0x0a, 0x9b, 0x1a, 0xbc, 0xd1, 0x3d, 0xa1, 0x70, 0x23,
	0xee, 0x6f, 0xcd, 0x7c, 0x57, 0x67, 0x0d, 0x53, 0x13, 0xae, 0x4e, 0x6c, 0xf9, 0x69, 0xc1, 0x20,
	0xac, 0x33, 0x52, 0x07, 0x9a, 0x71, 0x1c, 0x2c, 0x7d, 0x5b, 0x6a, 0xaf, 0x7d, 0x0f, 0x2d, 0xb3,
	0x31, 0x08, 0x3f, 0x5d, 0xe2, 0x8d, 0xdf, 0xa1, 0x15, 0x19, 0x97, 0xfd, 0x4f, 0x87, 0xfd, 0x75,
	0xb4, 0x22, 0x63, 0x3d, 0x1e, 0xc8, 0xcb, 0xae, 0x9d, 0x53, 0xc4, 0x18, 0x87, 0xfe, 0xe4, 0x04,
	0xbe, 0x52, 0x68, 0xd6, 0xbf, 0x18, 0xbd, 0xb1, 0x2f, 0x0d, 0xea, 0x6b, 0x47, 0x1c, 0x24, 0x8e,
	0x12, 0x77, 0x26, 0x88, 0x40, 0x87, 0x93, 0xeb, 0xd0, 0x9a, 0x94, 0x87, 0x53, 0x87, 0x6e, 0x00,
	0x1b, 0x97, 0xfe, 0xf4, 0xec, 0xcc, 0x97, 0x71, 0xfd, 0x9b, 0x1b, 0xcc, 0x9c, 0xce, 0xa3, 0x18,
	0xce, 0x6e, 0x36, 0x0e, 0xaf, 0xf8, 0xcb, 0x85, 0x68, 0x99, 0x6d, 0x3b, 0xf1, 0x01, 0xb4, 0x12,
	0xd8, 0xd4, 0x60, 0x54, 0x0e, 0x07, 0xbd, 0x0d, 0x55, 0x70, 0xd8, 0x38, 0xd3, 0xff, 0x25, 0x5b,
	0xb9, 0xf0, 0x18, 0xb8, 0x51, 0x31, 0x46, 0xc4, 0x90, 0x86, 0x99, 0x90, 0x97, 0x6c, 0x6d, 0x74,
	0x5a, 0x83, 0xc1, 0x24, 0xb6, 0x5a, 0x0e, 0x43, 0x6b, 0x18, 0x38, 0x41, 0x0d, 0x3f, 0x00, 0x29,
	0xbc, 0x0a, 0x10, 0xd4, 0x6c, 0x5d, 0xfe, 0x5d, 0xb4, 0xa4, 0xd1, 0xeb, 0xdb, 0x1b, 0x08, 0xca,
	0x04, 0x29, 0x28, 0xb6, 0x9e, 0x57, 0xc4, 0x8d, 0x4e, 0x6b, 0x89, 0xf0, 0xb8, 0xe5, 0x67, 0x16,
	0xc4, 0xd6, 0xfa, 0x7c, 0x18, 0xad, 0xf2, 0x07, 0x22, 0xfa, 0xc0, 0xdd, 0x96, 0x48, 0x1d, 0xb9,
	0x78, 0x65, 0x70, 0x4c, 0x8c, 0xac, 0x15, 0x84, 0x27, 0xd9, 0xa5, 0xe9, 0xf8, 0x6a, 0xe6, 0xe4,
	0x28, 0x1b, 0x46, 0x01, 0x42, 0xae, 0x4a, 0x59, 0x9b, 0x32, 0x7d, 0x7a, 0x20, 0x71, 0x10, 0x13,
	0x89, 0xc2, 0xd6, 0xa7, 0xa5, 0x42, 0xb6, 0x3e, 0xd9, 0x0c, 0x5b, 0xd6, 0x3e, 0x2d, 0x4d, 0x79,
	0x1f, 0x5a, 0x4e, 0xe0, 0x66, 0x24, 0x84, 0x45, 0xe6, 0xd7, 0xcf, 0x28, 0x14, 0x1c, 0x19, 0x7d,
	0x11, 0x37, 0xf7, 0x9b, 0x17, 0x48, 0x47, 0x19, 0x6d, 0x2a, 0x74, 0x7a, 0x89, 0x5e, 0x70, 0xda,
	0x77, 0x9f, 0xf0, 0x84, 0xc5, 0xdf, 0x34, 0x71, 0x8c, 0x44, 0x3e, 0x66, 0x88, 0x48, 0xf1, 0x20,
	0x47, 0x6c, 0xa7, 0x18, 0xfa, 0xcb, 0x6f, 0x61, 0x22, 0x79, 0x73, 0x8e, 0x05, 0x25, 0x4b, 0x40,
	0x32, 0x33, 0x23, 0x79, 0x3f, 0xaa, 0xff, 0x05, 0xce, 0xed, 0xe0, 0xbf, 0xcd, 0x46, 0xf2, 0x36,
	0x63, 0x73, 0x1b, 0xb1, 0xf2, 0x32, 0x7a, 0xc0, 0x96, 0x3e, 0x74, 0x64, 0x30, 0xac, 0x4c, 0x62,
	0x5e, 0xfc, 0x1f, 0x57, 0xa1, 0x7c, 0x33, 0x98, 0xc3, 0xeb, 0xd6, 0x4c, 0x27, 0x9c, 0xc9, 0xc0,
	0x58, 0x32, 0x9d, 0x14, 0x50, 0x17, 0x72, 0x4f, 0xa5, 0x35, 0x59, 0xc9, 0x06, 0x8b, 0xa0, 0x08,
	0x1a, 0x01, 0x2c, 0x28, 0x2e, 0x33, 0xbd, 0xd4, 0x59, 0x11, 0xf1, 0xcf, 0x19, 0xb1, 0xd7, 0x5c,
	0x5e, 0x45, 0xfc, 0x0d, 0x9b, 0xdc, 0x64, 0x13, 0xe3, 0xc7, 0xce, 0x24, 0xc5, 0xa6, 0x39, 0x54,
	0xc7, 0x2f, 0x7b, 0x2a, 0x21, 0x49, 0xba, 0x91, 0x7e, 0xed, 0x3b, 0xd7, 0x63, 0xe1, 0x47, 0xb2,
	0xbe, 0x1b, 0x54, 0xe4, 0xba, 0xdc, 0xb5, 0x65, 0x6c, 0x78, 0x37, 0x37, 0x55, 0xc0, 0xe4, 0x9a,
	0xf2, 0xb1, 0xa1, 0x8c, 0x5e, 0x97, 0xd9, 0x75, 0x56, 0xad, 0xf4, 0x1e, 0xb4, 0x0c, 0x6e, 0x63,
	0xb1, 0x39, 0x1a, 0x8a, 0xf8, 0xbc, 0xc4, 0xb7, 0x21, 0x0f, 0xe2, 0x72, 0xdb, 0xcb, 0x84, 0x67,
	0x2c, 0x54, 0x87, 0x61, 0x87, 0xa9, 0x1b, 0x03, 0xc9, 0xe3, 0x66, 0x6b, 0xc8, 0x07, 0x51, 0x81,
	0xb7, 0x39, 0x1a, 0xaa, 0xf5, 0x79, 0x1b, 0x02, 0xc1, 0x7a, 0x22, 0x8c, 0x65, 0xdc, 0xf5, 0xa2,
	0x59, 0x05, 0x7f, 0x16, 0x08, 0x39, 0xcc, 0xb6, 0x14, 0x8a, 0x2c, 0xf1, 0x0a, 0x30, 0x03, 0x69,
	0x10, 0x27, 0xa6, 0x1a, 0xdf, 0xcd, 0xa1, 0xa5, 0x0d, 0xde, 0xe6, 0xa0, 0x6f, 0xaf, 0x91, 0x5e,
	0x84, 0xc8, 0x47, 0x19, 0x9e, 0xe3, 0xdb, 0x70, 0x2d, 0x38, 0x17, 0xcd, 0x10, 0x60, 0x0f, 0x84,
	0x25, 0x5b, 0x7b, 0xc1, 0x09, 0x7d, 0x6a, 0x27, 0x6f, 0x03, 0x4d, 0xa1, 0xdc, 0x6b, 0xf2, 0x9b,
	0xa3, 0xf4, 0xf6, 0x85, 0x10, 0x0b, 0x92, 0xad, 0x2d, 0x13, 0xa5, 0x35, 0x6f, 0x8e, 0x28, 0x8a,
	0xc6, 0x4e, 0xb4, 0xc4, 0x68, 0xc5, 0xd3, 0x37, 0x62, 0xb4, 0x3e, 0xa6, 0x9d, 0xb8, 0x61, 0xcb,
	0x2d, 0x83, 0x4b, 0x8c, 0x2f, 0x4a, 0x22, 0x2e, 0x36, 0xa2, 0x45, 0x51, 0x6f, 0x20, 0x18, 0x8d,
	0x90, 0x90, 0x88, 0xf3, 0x74, 0x55, 0x87, 0xeb, 0x41, 0x57, 0x10, 0x14, 0x0e, 0x5a, 0x0a, 0x4f,
	0x64, 0x76, 0xa5, 0x0b, 0x61, 0x37, 0x87, 0x69, 0x3a, 0x12, 0x89, 0x54, 0xe5, 0xf7, 0x40, 0x7e,
	0xaa, 0x1d, 0xb5, 0xc4, 0x5a, 0x09, 0x87, 0xa7, 0x26, 0x20, 0x41, 0xa4, 0x78, 0x66, 0x62, 0x5d,
	0x24, 0x30, 0x37, 0xf6, 0x64, 0xdf, 0x51, 0x8b, 0xc5, 0xe5, 0xb6, 0x54, 0xc7, 0x55, 0x7a, 0x1d,
	0x27, 0xe3, 0xa3, 0xb0, 0x86, 0xfa, 0x62, 0x1a, 0xd1, 0x73, 0x25, 0x82, 0x0a, 0x2b, 0x2a, 0x59,
	0x69, 0xca, 0x14, 0x97, 0x8a, 0x6c, 0xe2, 0x92, 0x29, 0x0f, 0x59, 0x43, 0x18, 0x2e, 0xf9, 0x9e,
	0x10, 0x86, 0x4b, 0x33, 0x42, 0x18, 0x76, 0x71, 0xac, 0x71, 0x2e, 0x08, 0x34, 0xfb, 0x14, 0x71,
	0x2f, 0x6b, 0x9c, 0xfb, 0x3e, 0x5d, 0xce, 0x07, 0x72, 0x16, 0xa6, 0xb9, 0x85, 0x93, 0xf1, 0x5e,
	0xf2, 0x7d, 0xa0, 0x7d, 0xf2, 0xee, 0x59, 0xad, 0xbb, 0x35, 0x19, 0x8f, 0xa5, 0x0f, 0xdf, 0x62,
	0xed, 0x75, 0xff, 0x03, 0x87, 0xf2, 0x0c, 0x59, 0x86, 0x48, 0x2c, 0xb7, 0x39, 0x45, 0xfc, 0x92,
	0x73, 0x52, 0xb0, 0x70, 0x99, 0xa3, 0x83, 0xb1, 0x89, 0x56, 0x84, 0xa0, 0x42, 0x4c, 0x3b, 0xdc,
	0x0f, 0x4d, 0x17, 0x33, 0x4a, 0x85, 0x7e, 0x03, 0x0f, 0x51, 0x03, 0xde, 0x38, 0xa8, 0x0d, 0x98,
	0x2a, 0xa2, 0xd4, 0xe4, 0xa1, 0xf4, 0x91, 0xb6, 0x7b, 0xb1, 0x36, 0x98, 0x8e, 0x3a, 0x34, 0xa2,
	0x33, 0xbc, 0x38, 0x23, 0x0e, 0x49, 0x8e, 0x1f, 0x1f, 0x05, 0xa1, 0x89, 0x2a, 0x6e, 0xf4, 0x2d,
	0x83, 0x8f, 0x83, 0xbe, 0x08, 0x90, 0x95, 0x08, 0xb2, 0x43, 0xd0, 0x11, 0xf3, 0xd7, 0xcc, 0xa4,
	0x5b, 0x20, 0xfe, 0x28, 0x9c, 0x22, 0xbe, 0x47, 0xb3, 0x6e, 0xd5, 0x98, 0x31, 0x5d, 0x7e, 0x48,
	0xd6, 0xda, 0x9d, 0x35, 0x95, 0x46, 0x39, 0xe4, 0xdf, 0xaa, 0xfc, 0xce, 0x25, 0x84, 0x37, 0xce,
	0x9f, 0xb0, 0x36, 0xcf, 0x68, 0x25, 0x2d, 0x26, 0x8d, 0x68, 0xe8, 0xca, 0xbd, 0x08, 0xf9, 0x42,
	0xc1, 0x48, 0x73, 0x23, 0xa6, 0xf9, 0x20, 0x5d, 0x61, 0x85, 0x06, 0x03, 0x16, 0x5e, 0x32, 0xff,
	0x86, 0x90, 0x6c, 0x86, 0xc3, 0x3f, 0xa8, 0x06, 0xc2, 0x10, 0xca, 0x0d, 0x52, 0x1d, 0x40, 0x70,
	0x00, 0x58, 0x1b, 0x89, 0x41, 0xc2, 0x87, 0x21, 0x41, 0x31, 0xa5, 0x5d, 0x2b, 0xe7, 0xd6, 0x60,
	0x18, 0x75, 0x5c, 0x1b, 0x15, 0xf1, 0x69, 0xa7, 0xa5, 0x99, 0x91, 0x21, 0x4b, 0xbf, 0xba, 0xf0,
	0x29, 0x84, 0x2b, 0xf8, 0x3b, 0xd7, 0xc2, 0x23, 0x5c, 0xce, 0x72, 0x4e, 0xb2, 0x54, 0xe6, 0x77,
	0x23, 0x70, 0xcb, 0xab, 0x66, 0xae, 0xd1, 0x55, 0x66, 0x7e, 0xab, 0x8c, 0x42, 0xe1, 0x71, 0x33,
	0x4d, 0x18, 0x49, 0x68, 0x8e, 0xb7, 0x43, 0x32, 0x7e, 0x24, 0x35, 0xd8, 0xee, 0xf0, 0x54, 0x4a,
	0x19, 0x4d, 0xf8, 0x7d, 0x28, 0x37, 0xea, 0xad, 0x8f, 0xcc, 0x95, 0x1a, 0x9c, 0x25, 0x4d, 0x46,
	0xd4, 0x68, 0x41, 0x11, 0xcb, 0x9d, 0xb8, 0x95, 0xf0, 0x6c, 0x56, 0xb2, 0x04, 0x8b, 0xc8, 0xe6,
	0x2d, 0x90, 0x70, 0x75, 0xfe, 0x6b, 0x0e, 0x2d, 0xa1, 0x37, 0x3c, 0x16, 0x88, 0xd7, 0xe0, 0xe9,
	0xf4, 0x72, 0x8a, 0x78, 0x84, 0x73, 0x5a, 0xcb, 0x84, 0x03, 0x26, 0x27, 0x05, 0x2f, 0xa8, 0xc1,
	0x50, 0xb8, 0xd1, 0xdb, 0x50, 0x2e, 0xef, 0x07, 0x46, 0x7a, 0xfd, 0xbd, 0x58, 0x9b, 0x76, 0x7a,
	0x6c, 0x26, 0x36, 0xc8, 0xde, 0x40, 0xb4, 0x91, 0xaa, 0x74, 0xa7, 0xae, 0x5f, 0x87, 0xb4, 0xf3,
	0x59, 0x2b, 0xe0, 0xdc, 0xbd, 0xee, 0x5d, 0xdb, 0x09, 0xa0, 0xf3, 0x84, 0xa7, 0xd2, 0x0d, 0x7f,
	0x4b, 0xd6, 0x91, 0xf0, 0x31, 0x0e, 0xe5, 0x7a, 0xc3, 0xb2, 0x97, 0x64, 0x0f, 0x7f, 0x38, 0xbb,
	0x35, 0x76, 0x58, 0xf6, 0xba, 0xde, 0x56, 0xc4, 0x6a, 0x27, 0xae, 0x2b, 0x6c, 0x36, 0x73, 0x9a,
	0x0d, 0x8d, 0xe8, 0xdc, 0x1c, 0x73, 0xdb, 0x97, 0x80, 0x48, 0x9e, 0x8c, 0xf7, 0x68, 0xdd, 0x87,
	0xd5, 0xb1, 0xc1, 0x52, 0x87, 0xda, 0x79, 0x9a, 0xcd, 0x68, 0x41, 0xeb, 0xaf, 0x97, 0x30, 0xb6,
	0x1f, 0x13, 0xdf, 0xfa, 0x15, 0x54, 0xc0, 0xdc, 0x2b, 0x0f, 0xd4, 0xf4, 0x25, 0x94, 0xff, 0x83,
	0x72, 0x32, 0x54, 0xe8, 0xeb, 0x80, 0xb6, 0x39, 0x4d, 0x76, 0x50, 0x78, 0x9d, 0xee, 0x7c, 0x9d,
	0x66, 0x8c, 0x4f, 0x80, 0xb0, 0x76, 0x2f, 0xd6, 0x4a, 0x05, 0xb4, 0x7b, 0xb1, 0x56, 0xf1, 0x9d,
	0x5a, 0xcb, 0xa7, 0x3a, 0x38, 0xad, 0x1e, 0x39, 0xa3, 0xde, 0x68, 0x4d, 0x7f, 0xd6, 0x51, 0xdc,
	0xcd, 0xa1, 0x7c, 0xba, 0xd0, 0x7c, 0x05, 0xca, 0xdf, 0xbd, 0xcf, 0xcd, 0x3c, 0x47, 0x90, 0x64,
	0x84, 0x26, 0x54, 0x28, 0xa4, 0x8b, 0xa8, 0x6f, 0x7d, 0xb3, 0x80, 0x77, 0xa3, 0x02, 0xf2, 0x83,
	0x71, 0x69, 0xc7, 0xe6, 0x84, 0x2c, 0x1c, 0x3b, 0x4d, 0x59, 0xac, 0xb0, 0xd8, 0xd2, 0xe2, 0xa1,
	0xe5, 0x68, 0xb9, 0x9d, 0x3b, 0xe2, 0x0f, 0x73, 0x68, 0x09, 0xc3, 0xf4, 0x50, 0xb6, 0xd7, 0xab,
	0x88, 0xbf, 0x77, 0x5a, 0x4b, 0x84, 0xed, 0x16, 0xe5, 0xa5, 0xce, 0xfe, 0xea, 0x54, 0x99, 0x51,
	0x41, 0xea, 0x7c, 0xcd, 0xdd, 0xe9, 0xd4, 0xc0, 0x65, 0x86, 0x33, 0x85, 0x2c, 0xb5, 0x9e, 0x4a,
	0x78, 0x13, 0x48, 0x26, 0x8e, 0xa5, 0xc7, 0xbe, 0xd1, 0x4e, 0x4c, 0x7b, 0x2a, 0x25, 0x2b, 0x76,
	0x7e, 0x27, 0x5a, 0xc6, 0x00, 0x98, 0x79, 0x62, 0xa6, 0xd4, 0x5e, 0x26, 0xac, 0xb6, 0x0d, 0x86,
	0xcc, 0xd8, 0x5e, 0x8f, 0xdf, 0x8a, 0x16, 0x37, 0x06, 0x82, 0xb5, 0x81, 0x4f, 0x8c, 0xb8, 0xfc,
	0x9b, 0x14, 0xf1, 0x49, 0xa7, 0x01, 0x13, 0x8a, 0x28, 0x02, 0x6d, 0x28, 0xa6, 0xde, 0xe8, 0x03,
	0xda, 0xa0, 0x0d, 0xdc, 0xf8, 0xce, 0x95, 0xe7, 0x5c, 0xb4, 0x3c, 0xf6, 0xd7, 0x2b, 0x4b, 0xfe,
	0x95, 0x64, 0xd4, 0xe6, 0xdf, 0x46, 0x8b, 0x1b, 0xbd, 0xfb, 0x31, 0x32, 0x48, 0xee, 0xf5, 0x12,
	0xb6, 0xd9, 0x27, 0x30, 0x61, 0x9d, 0x6d, 0x4c, 0x90, 0xdf, 0x6b, 0x0e, 0x94, 0xd0, 0x86, 0xdf,
	0x81, 0x35, 0x78, 0x38, 0xa7, 0x92, 0x8e, 0x16, 0xb2, 0x54, 0x62, 0x25, 0x11, 0x0b, 0x17, 0x1e,
	0x61, 0x51, 0x6b, 0x43, 0xe7, 0xb5, 0xa1, 0x33, 0x14, 0xaf, 0xc4, 0xd6, 0xe4, 0x5f, 0xb3, 0x9a,
	0xce, 0x61, 0x87, 0x22, 0xf2, 0x4c, 0xfa, 0x88, 0x7d, 0x7c, 0xf8, 0x1a, 0x27, 0x39, 0x0f, 0x89,
	0xd1, 0xc8, 0x01, 0xb4, 0x8c, 0x44, 0x50, 0x72, 0x87, 0x42, 0x0d, 0xfe, 0xd0, 0xc7, 0x10, 0x45,
	0x7d, 0x89, 0x6b, 0x87, 0x22, 0x6e, 0x73, 0xda, 0xcb, 0x84, 0x57, 0x6c, 0x28, 0xc9, 0x23, 0x55,
	0xd7, 0xe7, 0x10, 0x41, 0x4d, 0x3d, 0x74, 0x47, 0xed, 0xb9, 0xa5, 0x1e, 0x1b, 0xd1, 0x86, 0xce,
	0x53, 0xfe, 0xfe, 0xf9, 0x8d, 0x1b, 0x53, 0x57, 0x15, 0xc9, 0x8e, 0x8b, 0xbf, 0xc2, 0xa1, 0xfc,
	0x08, 0x4d, 0x2b, 0x96, 0x87, 0xfd, 0x02, 0x89, 0xf2, 0xd7, 0x84, 0x0b, 0x2d, 0x19, 0x93, 0xc0,
	0x1d, 0x01, 0x8b, 0x78, 0xe5, 0x84, 0xce, 0x25, 0x0e, 0xb6, 0x33, 0x69, 0xc5, 0xcc, 0x08, 0xfe,
	0x04, 0xa0, 0x75, 0x77, 0xa5, 0x3a, 0xae, 0xaa, 0x1d, 0x9d, 0x6a, 0x7f, 0xef, 0xcc, 0x70, 0x42,
	0x4d, 0xf4, 0xa5, 0x86, 0xc7, 0x74, 0x0a, 0x36, 0x75, 0x4a, 0xed, 0xe8, 0x4c, 0x25, 0x70, 0x42,
	0x95, 0xb3, 0x17, 0xd4, 0xae, 0x1e, 0x0a, 0x99, 0xb9, 0x76, 0x4a, 0x32, 0x87, 0xc0, 0x9f, 0xe1,
	0xd0, 0xc2, 0x4f, 0x42, 0x41, 0x19, 0xf8, 0xe3, 0x7c, 0x17, 0xe8, 0x87, 0x9c, 0x00, 0x13, 0x3e,
	0xbe, 0x9f, 0x01, 0xda, 0xb2, 0x31, 0x92, 0x14, 0x03, 0x04, 0xf6, 0x03, 0x47, 0x08, 0xfd, 0xf3,
	0xb7, 0x73, 0x50, 0x41, 0x58, 0x8e, 0x86, 0x0f, 0xd4, 0x84, 0x1a, 0x02, 0xbe, 0x03, 0x84, 0xa9,
	0xfe, 0x34, 0x47, 0x11, 0xfb, 0x72, 0x9c, 0x6c, 0x89, 0xf0, 0x5f, 0x39, 0x22, 0x86, 0xc0, 0x85,
	0x78, 0xe9, 0x66, 0xfa, 0xd6, 0x65, 0xc8, 0xbc, 0x34, 0x73, 0xb8, 0x27, 0x3d, 0x3e, 0x00, 0x91,
	0xf7, 0x66, 0xa7, 0x06, 0x3d, 0xdb, 0xb7, 0x57, 0x55, 0x7a, 0xc4, 0xba, 0xaa, 0x0f, 0xa5, 0xaa,
	0x3a, 0xe9, 0xdd, 0x12, 0xd8, 0xd8, 0xbf, 0xd2, 0xae, 0x0f, 0xaf, 0xc7, 0x09, 0xfd, 0xdd, 0x52,
	0xd5, 0xf6, 0xaa, 0xea, 0x3a, 0x71, 0xdb, 0x87, 0x9e, 0xea, 0xba, 0x2a, 0x69, 0x97, 0xb8, 0x4d,
	0x67, 0xce, 0xab, 0x77, 0x40, 0xf5, 0x7b, 0xb1, 0x36, 0xca, 0x8c, 0x27, 0xe3, 0x09, 0x1b, 0x32,
	0xfd, 0x4e, 0x04, 0x11, 0xff, 0xe4, 0x6d, 0x72, 0x95, 0x4c, 0x0d, 0x82, 0xb5, 0x0f, 0xac, 0xb8,
	0xaa, 0x74, 0xeb, 0x13, 0x03, 0x42, 0x33, 0x13, 0xeb, 0x4f, 0xc6, 0x63, 0xea, 0x8d, 0xb3, 0xe9,
	0xf1, 0x01, 0xe3, 0x1e, 0xd7, 0xa7, 0x90, 0x3a, 0x73, 0x4b, 0xed, 0xbc, 0x41, 0x0e, 0x1c, 0x4c,
	0xe4, 0xfa, 0xb0, 0x36, 0x70, 0x83, 0x3c, 0x45, 0x76, 0xc5, 0xb4, 0xa1, 0x2e, 0x40, 0xaa, 0x76,
	0x8c, 0x40, 0x85, 0x7b, 0xb1, 0x36, 0x89, 0x5d, 0x0e, 0xfe, 0x1f, 0x38, 0xb4, 0x1a, 0x27, 0x1d,
	0x7b, 0x2f, 0x14, 0x94, 0x21, 0x77, 0x15, 0x59, 0x42, 0x78, 0x7c, 0xf9, 0x8a, 0x53, 0xc4, 0x71,
	0xce, 0x99, 0xbd, 0x8e, 0x30, 0xc0, 0x41, 0x82, 0x1c, 0x35, 0x36, 0x35, 0x3b, 0x35, 0x58, 0x23,
	0x79, 0x76, 0x48, 0x9e, 0xba, 0x77, 0x67, 0xa7, 0xba, 0xab, 0xde, 0xde, 0x29, 0x6e, 0xf3, 0xd4,
	0xe9, 0x13, 0x35, 0xa1, 0x83, 0x86, 0x26, 0x70, 0x64, 0xe6, 0xda, 0x29, 0xfa, 0x15, 0xe9, 0xb6,
	0x4d, 0xc6, 0x7b, 0xe9, 0x6e, 0x60, 0xbf, 0xd1, 0xbd, 0x58, 0x9b, 0x81, 0x6e, 0x76, 0x6a, 0x10,
	0xa6, 0x45, 0x2b, 0xde, 0x8b, 0xb5, 0x42, 0x6b, 0x6d, 0x28, 0x91, 0x9c, 0x1a, 0x54, 0xcf, 0x1e,
	0x4e, 0x0f, 0x0f, 0x4b, 0xd9, 0x87, 0xcb, 0x5f, 0xe5, 0xd0, 0xf2, 0xb0, 0xdc, 0xd4, 0xe0, 0xf5,
	0xc9, 0x3b, 0x83, 0x7b, 0x65, 0x6f, 0x43, 0x74, 0x2f, 0xe4, 0x22, 0xc8, 0x83, 0x74, 0xe6, 0x19,
	0x85, 0x82, 0x1f, 0x44, 0xf6, 0xd4, 0x99, 0x63, 0x5a, 0xef, 0x55, 0x9d, 0x0d, 0x6f, 0xbd, 0xac,
	0x26, 0xee, 0x10, 0x9e, 0xe1, 0xcc, 0x5d, 0xad, 0xe7, 0xa2, 0x36, 0xd4, 0xa3, 0x1e, 0x19, 0xb6,
	0xca, 0xf1, 0xf7, 0x62, 0x6d, 0xe9, 0xbb, 0xe7, 0x52, 0x93, 0xa3, 0x9b, 0xd4, 0xce, 0x43, 0x33,
	0xca, 0xf9, 0xa6, 0x40, 0xb0, 0x3e, 0x19, 0xef, 0xd1, 0x79, 0xa0, 0xce, 0xd3, 0xe9, 0xab, 0x87,
	0x92, 0xf1, 0x04, 0xc5, 0x35, 0x3b, 0xd5, 0x2a, 0x65, 0xf4, 0xcb, 0xff, 0x23, 0x87, 0x0a, 0x22,
	0x40, 0xd1, 0x71, 0xc2, 0x06, 0x78, 0x95, 0xfa, 0x77, 0x9c, 0x22, 0xfe, 0x0d, 0xe7, 0x64, 0x4b,
	0x84, 0xaf, 0x39, 0xb2, 0x93, 0xf0, 0xcb, 0xcf, 0xec, 0x54, 0xb7, 0x7b, 0x9b, 0x58, 0x5b, 0xeb,
	0x71, 0x7f, 0x58, 0xeb, 0x16, 0xb7, 0x79, 0xaa, 0xb7, 0x90, 0x14, 0x70, 0xeb, 0xf1, 0xd2, 0x91,
	0x2d, 0x47, 0x6e, 0x2e, 0x83, 0x2b, 0xd4, 0x05, 0x9d, 0x29, 0x63, 0x37, 0xe2, 0x60, 0x80, 0x06,
	0xfc, 0xcc, 0x3b, 0xe2, 0xd6, 0xaa, 0x0f, 0x77, 0xd6, 0x7c, 0x58, 0x5b, 0xb7, 0xa3, 0xa6, 0xa6,
	0xaa, 0xd2, 0x40, 0x3a, 0x3b, 0x35, 0x48, 0x5b, 0xa8, 0x1d, 0x5f, 0xe9, 0x6b, 0x1f, 0xef, 0x81,
	0xa6, 0xb3, 0x53, 0xdd, 0xb4, 0x1f, 0xf8, 0xc6, 0xea, 0xf1, 0x4b, 0x33, 0x87, 0x14, 0xa8, 0x46,
	0xbf, 0xa8, 0xc4, 0x4e, 0x82, 0x6f, 0x41, 0x28, 0x1a, 0x68, 0x94, 0x25, 0x6f, 0xb0, 0x5e, 0x8e,
	0x14, 0x2d, 0xc5, 0x5c, 0x6e, 0x06, 0xff, 0x56, 0x67, 0xd4, 0x80, 0x47, 0x47, 0xa6, 0x85, 0xe0,
	0x54, 0xc7, 0x06, 0xb5, 0x93, 0xb7, 0x59, 0xe5, 0x19, 0x1b, 0xe4, 0xd0, 0xa2, 0xe1, 0x67, 0xda,
	0x15, 0xdf, 0xca, 0x41, 0xf9, 0x14, 0x2d, 0xff, 0x1b, 0x36, 0x6f, 0x84, 0xcb, 0xc9, 0xd8, 0x3c,
	0x00, 0x7a, 0xa0, 0xf0, 0x1f, 0x85, 0x76, 0x1b, 0x7e, 0x1c, 0x8b, 0xc3, 0x0b, 0xb1, 0xef, 0x3e,
	0x51, 0x6d, 0x55, 0xa1, 0xbc, 0x08, 0x49, 0x79, 0x44, 0xae, 0xf1, 0xf5, 0x8a, 0xf8, 0xa8, 0x93,
	0x02, 0x85, 0xe5, 0x80, 0xc7, 0x17, 0x0e, 0x05, 0xe1, 0x2d, 0x90, 0x41, 0x41, 0x6b, 0xf1, 0xe5,
	0x24, 0xd1, 0x1b, 0x28, 0xc7, 0x1e, 0x51, 0xc4, 0x22, 0x92, 0xe8, 0xcd, 0xda, 0x9c, 0xe6, 0x71,
	0xe3, 0xdf, 0x40, 0x88, 0x5c, 0x86, 0x66, 0x06, 0x4e, 0x6c, 0xb1, 0xc1, 0x80, 0x85, 0x65, 0x70,
	0x81, 0x92, 0xad, 0x3b, 0x70, 0x43, 0x62, 0x0a, 0x2b, 0xf4, 0xbb, 0x17, 0x95, 0x38, 0xcd, 0xb5,
	0x10, 0x1e, 0x31, 0x78, 0x0a, 0x99, 0x9d, 0x3b, 0x2c, 0x64, 0xf1, 0xa1, 0x5c, 0x94, 0x57, 0xe9,
	0x8d, 0x7a, 0x2b, 0x03, 0x91, 0x7d, 0xfc, 0x00, 0x87, 0xf2, 0xfc, 0x81, 0x08, 0xd8, 0x5b, 0xc2,
	0xd2, 0x1d, 0x50, 0xc4, 0x16, 0x27, 0x05, 0x0a, 0x1f, 0x19, 0x59, 0x8d, 0x4e, 0x51, 0xbb, 0x93,
	0x6d, 0x3b, 0xdc, 0xe2, 0xb6, 0x0f, 0x5d, 0x62, 0xad, 0xc7, 0x3d, 0x3b, 0xd5, 0x09, 0x5b, 0x74,
	0x76, 0xaa, 0xab, 0x14, 0xe0, 0xb5, 0xb5, 0x95, 0xa5, 0xee, 0x6d, 0x3b, 0x76, 0x56, 0xea, 0x35,
	0xaa, 0xc8, 0x9f, 0x26, 0xb0, 0x46, 0xaa, 0xda, 0xee, 0xd9, 0xb9, 0xbd, 0x64, 0xe6, 0xda, 0x29,
	0x2d, 0x76, 0x35, 0x7d, 0x70, 0x5a, 0x17, 0xa6, 0x87, 0xaf, 0xa7, 0xce, 0x9c, 0x5a, 0x2f, 0xd1,
	0x5e, 0xf9, 0x3d, 0x30, 0x2c, 0xcc, 0x61, 0x30, 0xa1, 0xf7, 0x29, 0x50, 0x78, 0x95, 0x0e, 0x0b,
	0xf2, 0xec, 0xcd, 0x4e, 0x75, 0x6f, 0xda, 0xb8, 0x25, 0xfd, 0xf5, 0x9d, 0xf4, 0x9d, 0xaf, 0xd8,
	0xfc, 0x62, 0x1b, 0x71, 0xe0, 0x8d, 0xc4, 0x46, 0x9c, 0xb6, 0xa9, 0x27, 0x7d, 0x6b, 0x34, 0x39,
	0x71, 0x43, 0xa2, 0x68, 0xf8, 0x6d, 0x08, 0xed, 0x09, 0x34, 0xc8, 0xb5, 0x90, 0x2a, 0x60, 0x01,
	0xf3, 0x76, 0x68, 0x82, 0x85, 0x47, 0xb4, 0x13, 0x87, 0x69, 0xba, 0x80, 0x12, 0x79, 0x7f, 0xf4,
	0x79, 0x5d, 0x40, 0x7a, 0xa1, 0x7c, 0xff, 0x9e, 0xc8, 0x7a, 0x89, 0xa9, 0xc8, 0x7f, 0x84, 0x78,
	0x7d, 0xe5, 0x37, 0xeb, 0x42, 0x54, 0x54, 0x0c, 0xfa, 0xb7, 0xd3, 0x68, 0x4a, 0x79, 0xe0, 0xdf,
	0x99, 0xa5, 0x58, 0x78, 0x82, 0x3c, 0x25, 0xd2, 0xc0, 0xa8, 0x38, 0x0c, 0x9a, 0x3e, 0xb1, 0x89,
	0xdb, 0x90, 0xd2, 0x49, 0xca, 0xd2, 0x8c, 0x7f, 0xc3, 0x9a, 0x24, 0x0a, 0xfc, 0x14, 0xd6, 0x29,
	0xe2, 0x23, 0xd6, 0x24, 0x51, 0x85, 0x24, 0x2b, 0x14, 0x4e, 0x12, 0x65, 0xc9, 0x03, 0x55, 0xfc,
	0x55, 0x2e, 0xe2, 0xe1, 0xc5, 0x44, 0x8e, 0x8a, 0x3e, 0x9f, 0x1c, 0x89, 0x04, 0x76, 0x37, 0xc8,
	0xfc, 0x70, 0x0e, 0xe2, 0x03, 0x04, 0xec, 0xde, 0xab, 0x57, 0x65, 0x36, 0xc7, 0x3f, 0x71, 0x8a,
	0xf8, 0x8f, 0x9c, 0x33, 0x4b, 0x05, 0xe1, 0x7f, 0xe2, 0x40, 0x5f, 0x9d, 0x1e, 0x1b, 0x4e, 0xdf,
	0x22, 0xd9, 0x8a, 0xef, 0xc5, 0xda, 0x5c, 0x62, 0x75, 0xe5, 0x3b, 0x9e, 0xca, 0xba, 0x37, 0xf5,
	0x2f, 0x5f, 0x23, 0xea, 0xdc, 0xc3, 0xe0, 0xcc, 0xc5, 0xf6, 0xe4, 0xe4, 0xa9, 0xf4, 0xad, 0x09,
	0xad, 0xbb, 0x4b, 0x8d, 0x5f, 0x51, 0xc7, 0xa6, 0x53, 0x93, 0x9f, 0xa6, 0xc6, 0x4e, 0xce, 0x4e,
	0x75, 0xd7, 0x49, 0xe2, 0xe6, 0xcd, 0x1e, 0xf7, 0x87, 0x35, 0x3b, 0x6a, 0xeb, 0xf4, 0xda, 0x1f,
	0xba, 0xde, 0xfd, 0xf0, 0xcd, 0x1d, 0x3b, 0x25, 0x9d, 0x02, 0x7e, 0xdd, 0x3a, 0x73, 0xb8, 0x4f,
	0x6f, 0x72, 0xa3, 0x4f, 0x3f, 0x42, 0xfd, 0xbd, 0x80, 0x64, 0x76, 0xaa, 0x9b, 0xe9, 0x24, 0xb3,
	0x1d, 0xf4, 0xf0, 0x7d, 0xed, 0x44, 0xf7, 0x56, 0x71, 0x4b, 0x15, 0xad, 0xae, 0x76, 0x77, 0x80,
	0x00, 0x29, 0x65, 0x99, 0x2b, 0x7f, 0x94, 0x43, 0xab, 0x0c, 0xf0, 0x76, 0xef, 0x7e, 0x97, 0x37,
	0xe8, 0xff, 0x38, 0xe0, 0x8f, 0xee, 0x25, 0x7b, 0xf5, 0x1d, 0x45, 0xac, 0x73, 0x66, 0xad, 0x20,
	0xfc, 0x5a, 0xed, 0xb8, 0x9e, 0x9a, 0x3e, 0xa6, 0x1e, 0x4e, 0x40, 0x3f, 0xc9, 0xf8, 0x91, 0x99,
	0xd3, 0xfd, 0x3a, 0x47, 0xd5, 0x33, 0x90, 0x9c, 0xee, 0x99, 0x9d, 0x1a, 0xdc, 0xbe, 0xbb, 0x29,
	0xc2, 0x32, 0x20, 0xb3, 0x53, 0x83, 0x1b, 0x09, 0x4c, 0xca, 0x8a, 0x93, 0xdf, 0x87, 0x96, 0x37,
	0x35, 0xef, 0x6e, 0x08, 0xf8, 0x3c, 0x35, 0x62, 0x24, 0x12, 0xa8, 0x0f, 0xca, 0x7e, 0x62, 0xbf,
	0x05, 0x39, 0x4d, 0xed, 0x85, 0x42, 0x09, 0xd1, 0x68, 0xe3, 0xb4, 0xa3, 0x30, 0x20, 0x4f, 0x0d,
	0xed, 0xd3, 0xc8, 0xca, 0xa7, 0x77, 0x98, 0xd1, 0xb6, 0xf8, 0xe0, 0x72, 0xb4, 0xc6, 0x63, 0x84,
	0x4e, 0x25, 0x6a, 0x14, 0x50, 0x24, 0xf3, 0xaf, 0x50, 0xe5, 0x3c, 0x67, 0xca, 0x7b, 0x86, 0x72,
	0x7e, 0x95, 0x11, 0x6f, 0x95, 0x35, 0xd8, 0xa4, 0x2a, 0xf9, 0xe7, 0x2c, 0xf9, 0x31, 0xb1, 0x9d,
	0x38, 0x90, 0xcd, 0x42, 0x93, 0xab, 0x38, 0x7f, 0x9e, 0x90, 0xcc, 0x8d, 0x56, 0xab, 0x72, 0xfc,
	0x6c, 0x41, 0x04, 0x86, 0xa5, 0xa9, 0xab, 0xad, 0x3a, 0xe3, 0x84, 0x77, 0xa2, 0x29, 0x23, 0xd4,
	0xa0, 0x3c, 0x83, 0x19, 0x26, 0x0f, 0x07, 0x2f, 0x28, 0xe2, 0x26, 0x27, 0x05, 0x0a, 0x4f, 0x1b,
	0xbc, 0x36, 0x84, 0xff, 0x65, 0xfa, 0xc4, 0x1a, 0xbf, 0x18, 0x78, 0x72, 0x4a, 0xb4, 0x01, 0xff,
	0x1a, 0xca, 0xf3, 0x36, 0x35, 0x35, 0x1c, 0xd0, 0x89, 0x36, 0x88, 0x40, 0x78, 0xb6, 0x14, 0x28,
	0xf0, 0xa0, 0xed, 0xa2, 0x32, 0xcf, 0xcc, 0xe1, 0x3e, 0x89, 0x96, 0xf2, 0xf5, 0x68, 0x81, 0x9b,
	0xa6, 0xec, 0xdf, 0xa9, 0x88, 0x92, 0x53, 0xff, 0x2d, 0x6c, 0xd5, 0x6f, 0xd9, 0x73, 0x47, 0xdd,
	0x4c, 0xca, 0xfe, 0x64, 0xbc, 0x17, 0x80, 0x6c, 0xbc, 0xda, 0x64, 0x42, 0xd1, 0x4e, 0xe8, 0x42,
	0xab, 0x36, 0x7e, 0xdc, 0x02, 0x67, 0xb9, 0x6b, 0x1d, 0xa3, 0xde, 0xd1, 0x76, 0xb9, 0x91, 0x48,
	0x44, 0xd0, 0xd1, 0x76, 0xb9, 0xd1, 0xe8, 0x68, 0xbb, 0xdc, 0xf8, 0x53, 0x74, 0xb4, 0x5d, 0x6e,
	0xe4, 0x3f, 0x46, 0x0b, 0xb6, 0xd4, 0xec, 0xc4, 0xd6, 0x50, 0x4b, 0x5c, 0xb2, 0x22, 0xee, 0x76,
	0xea, 0xbf, 0x85, 0xf7, 0x01, 0xe7, 0x96, 0x9f, 0x62, 0x46, 0xa6, 0xb5, 0xd9, 0xd4, 0xa0, 0x4e,
	0xd3, 0x25, 0xbd, 0x07, 0xfe, 0x33, 0x7b, 0x6c, 0x61, 0x70, 0x40, 0xfc, 0xb3, 0x22, 0xfe, 0x85,
	0x2d, 0xb6, 0x70, 0x03, 0x74, 0x4b, 0x14, 0x00, 0x8c, 0x6f, 0x7a, 0xfa, 0x28, 0x31, 0x38, 0x73,
	0xd7, 0xec, 0xd4, 0x3f, 0xff, 0xa1, 0x0e, 0x75, 0xf4, 0x14, 0xa8, 0x04, 0xb0, 0x04, 0xd0, 0xa3,
	0x4e, 0x25, 0xd4, 0xce, 0xdb, 0xf4, 0x5e, 0x49, 0x1f, 0xfe, 0x22, 0x3d, 0xdc, 0xad, 0xf6, 0xe3,
	0x80, 0xbf, 0x37, 0x6e, 0xa6, 0xef, 0x1e, 0x53, 0xbb, 0x75, 0x3e, 0x85, 0xc5, 0x6f, 0x0b, 0x30,
	0x7c, 0x02, 0x53, 0x55, 0x00, 0x30, 0x54, 0x15, 0x44, 0x1d, 0x95, 0x53, 0xc4, 0x3b, 0x98, 0xaa,
	0xda, 0x2b, 0x08, 0x17, 0x38, 0x40, 0x0a, 0x54, 0x55, 0xe7, 0x13, 0xf1, 0x15, 0x6c, 0x27, 0x73,
	0x59, 0xa9, 0x5b, 0x6d, 0xcd, 0x0e, 0x5c, 0x29, 0x75, 0xed, 0x5c, 0x72, 0xf2, 0x0e, 0x05, 0x13,
	0x3a, 0xac, 0x76, 0x77, 0xa8, 0x13, 0xb7, 0xd4, 0xee, 0x0e, 0x6d, 0xa8, 0xf3, 0x5e, 0xac, 0x4d,
	0xbd, 0xd2, 0xa6, 0x5f, 0x90, 0x58, 0x59, 0x0a, 0x4f, 0xff, 0xda, 0x60, 0x1b, 0x95, 0x70, 0xe0,
	0xf5, 0x9f, 0x6d, 0xa2, 0xcb, 0xac, 0x24, 0xc4, 0xe1, 0xb3, 0xe1, 0xa7, 0xa5, 0xc5, 0x04, 0xab,
	0xb4, 0xdc, 0x3e, 0x34, 0x29, 0xcf, 0x18, 0x87, 0x94, 0x65, 0x82, 0x7c, 0x0f, 0x87, 0x10, 0xe4,
	0xda, 0xd1, 0x19, 0x12, 0x2c, 0xb8, 0x64, 0x71, 0x19, 0x30, 0x18, 0x16, 0x48, 0x69, 0xcb, 0x34,
	0x10, 0x5c, 0x24, 0xf4, 0xf4, 0x99, 0x53, 0x99, 0x66, 0x0b, 0x24, 0x39, 0x63, 0x3c, 0x61, 0x61,
	0x36, 0xce, 0xe0, 0x8d, 0x84, 0xb9, 0x86, 0x64, 0x3c, 0xf1, 0xab, 0x8d, 0x5b, 0x24, 0x06, 0x1f,
	0xdf, 0x8c, 0xf2, 0xfd, 0xa4, 0xb3, 0x48, 0x51, 0x61, 0x76, 0x07, 0x06, 0x3a, 0x9a, 0xd7, 0x14,
	0xb1, 0xc2, 0x69, 0xd6, 0x17, 0xca, 0x28, 0x57, 0x42, 0x07, 0xa3, 0x9d, 0xbc, 0xc0, 0x0e, 0x06,
	0xfb, 0x7a, 0x18, 0x7c, 0x88, 0xd9, 0x92, 0x6f, 0x42, 0xf9, 0x81, 0x46, 0x6f, 0xbd, 0x8c, 0x2d,
	0x65, 0x96, 0x64, 0xd7, 0x81, 0x7a, 0x8c, 0x0a, 0xf0, 0x52, 0x6e, 0x36, 0x60, 0x95, 0xc4, 0x38,
	0x15, 0x20, 0x91, 0x89, 0xf1, 0x9e, 0x86, 0xcc, 0xbd, 0x46, 0x6c, 0x34, 0xda, 0x86, 0xef, 0xe0,
	0xd0, 0x8a, 0x40, 0x30, 0x10, 0xdd, 0x16, 0xaa, 0x0f, 0x04, 0x6b, 0xbc, 0x91, 0xc8, 0xc7, 0xa1,
	0xb0, 0x9f, 0x18, 0xc1, 0xe1, 0x0b, 0x2c, 0xb3, 0x54, 0x78, 0xdd, 0xa6, 0x8c, 0x86, 0x39, 0x35,
	0x91, 0xe2, 0x52, 0x30, 0xfe, 0xa4, 0xdb, 0x08, 0xbe, 0x0c, 0x30, 0x36, 0x10, 0xef, 0x55, 0xca,
	0xc4, 0xc9, 0x9f, 0xe7, 0xd0, 0xf2, 0x08, 0x1b, 0xfb, 0xda, 0x53, 0x19, 0x29, 0x5a, 0x86, 0xd5,
	0x14, 0x38, 0x1d, 0x67, 0x46, 0xa1, 0xf0, 0x3b, 0x73, 0x14, 0x46, 0xb4, 0x6d, 0xfa, 0xd0, 0xec,
	0xa9, 0xa4, 0x19, 0x75, 0xe8, 0x68, 0xc0, 0x49, 0x87, 0x3e, 0xc8, 0xc0, 0xb0, 0x48, 0x4c, 0xec,
	0xc1, 0x76, 0x8a, 0x83, 0x2c, 0x51, 0x46, 0x7f, 0x38, 0x81, 0x48, 0x20, 0x62, 0xc4, 0xe7, 0x26,
	0xc1, 0x83, 0xf1, 0x7b, 0x54, 0x9e, 0xeb, 0x03, 0x45, 0x7c, 0xcf, 0x99, 0x59, 0x2a, 0x54, 0x65,
	0xfd, 0x22, 0xec, 0x4b, 0x32, 0xce, 0x1e, 0xac, 0x77, 0x5d, 0xea, 0xd0, 0x85, 0xf0, 0xe1, 0x6b,
	0x0e, 0x30, 0xfb, 0xb3, 0x44, 0xc6, 0xcb, 0xc4, 0x8c, 0x03, 0xba, 0x07, 0x22, 0xdb, 0x43, 0xc1,
	0x40, 0x34, 0x14, 0x36, 0x06, 0xb3, 0x02, 0x0f, 0x06, 0x02, 0xba, 0xdb, 0x0b, 0xd9, 0xaf, 0x36,
	0xf7, 0x58, 0x40, 0x4a, 0xa6, 0x63, 0xb1, 0x8c, 0x22, 0x03, 0x65, 0x71, 0x8c, 0x47, 0x2b, 0xb3,
	0x3c, 0x22, 0xf3, 0x7f, 0x46, 0xab, 0x1b, 0x32, 0xc1, 0x54, 0x49, 0x8b, 0x03, 0x0f, 0x67, 0xaf,
	0x61, 0x64, 0xb6, 0x60, 0x9f, 0x94, 0xb1, 0xaa, 0x29, 0x43, 0x1f, 0x9b, 0x8c, 0x1f, 0xf1, 0x54,
	0x4a, 0xd9, 0xb1, 0xf0, 0xbf, 0x47, 0x2b, 0xad, 0x05, 0x32, 0xa3, 0x98, 0xc5, 0x9c, 0x7d, 0xb6,
	0x72, 0x81, 0x67, 0xbb, 0x25, 0x9a, 0xd9, 0x6c, 0x15, 0xf5, 0xbd, 0x90, 0x11, 0xbb, 0xa8, 0x51,
	0x11, 0x3f, 0x62, 0x9f, 0x47, 0x3f, 0x20, 0x2f, 0x8f, 0xc3, 0x23, 0xda, 0xa9, 0x5e, 0x6a, 0xcc,
	0xac, 0xde, 0x3c, 0x97, 0x4c, 0xf4, 0xaa, 0x9f, 0x7e, 0x91, 0x8c, 0x7f, 0x01, 0xaf, 0xa5, 0xf4,
	0x9d, 0x14, 0x7e, 0xaa, 0x97, 0x7a, 0xc0, 0x7d, 0x57, 0x6f, 0x02, 0xcf, 0xa9, 0xf1, 0x1e, 0xed,
	0xd4, 0xb8, 0x4e, 0xce, 0xe6, 0x88, 0x6f, 0x48, 0xd8, 0x88, 0xdc, 0x9f, 0x8b, 0x8d, 0x58, 0xf8,
	0x73, 0xb1, 0x11, 0x8b, 0xfe, 0xdb, 0xb3, 0x11, 0x8b, 0xff, 0x25, 0xb2, 0x11, 0xff, 0xc8, 0x65,
	0x65, 0x23, 0xc0, 0x6d, 0x7b, 0xf2, 0x97, 0xcc, 0x46, 0xdc, 0x0f, 0x73, 0x90, 0xff, 0x2f, 0x8a,
	0x39, 0x40, 0x3f, 0x1b, 0x73, 0xd0, 0xc6, 0xa1, 0xa5, 0x01, 0x8b, 0xa4, 0x4e, 0xf8, 0xa4, 0xe2,
	0x0c, 0x16, 0x21, 0x43, 0x9e, 0x87, 0x87, 0x6c, 0x5b, 0x73, 0xe1, 0x09, 0x90, 0xfa, 0x8c, 0x9c,
	0x7b, 0xe4, 0x6b, 0xa9, 0x93, 0x89, 0xf4, 0xd8, 0x18, 0xb1, 0x59, 0xb3, 0x35, 0xe1, 0x7d, 0xd9,
	0xd8, 0x05, 0xb0, 0xd5, 0xff, 0x95, 0x22, 0x0a, 0xd9, 0xd8, 0x85, 0xc7, 0xe6, 0x65, 0x17, 0xb2,
	0x31, 0x03, 0xe3, 0xd9, 0x98, 0x81, 0x25, 0x98, 0x19, 0x68, 0xe3, 0x14, 0xf1, 0xcf, 0x59, 0xb8,
	0x81, 0x7d, 0x3f, 0x94, 0x1b, 0xa0, 0x3b, 0x01, 0xd8, 0x02, 0xb5, 0xbf, 0x9d, 0x9a, 0xe5, 0x10,
	0x9d, 0x63, 0x7c, 0x74, 0xe6, 0x62, 0x7b, 0x6a, 0xe0, 0xb4, 0xe9, 0x5d, 0x96, 0xc9, 0x1c, 0x58,
	0x18, 0xb7, 0xa5, 0x3f, 0x07, 0xe3, 0x76, 0x24, 0x2b, 0x3b, 0xb2, 0x0c, 0x73, 0x00, 0xbf, 0x53,
	0xc4, 0x77, 0xb3, 0xb1, 0x23, 0x95, 0x3f, 0x80, 0x1d, 0x39, 0xd0, 0x1c, 0x8c, 0x06, 0x08, 0x1f,
	0x80, 0xcd, 0x2e, 0xef, 0x9b, 0x1b, 0x59, 0xfe, 0xf3, 0x72, 0x23, 0x7c, 0x04, 0xe5, 0x35, 0x47,
	0xe4, 0x30, 0x4e, 0xc1, 0xbc, 0xc2, 0x64, 0x60, 0x29, 0x50, 0x78, 0x33, 0x35, 0xd9, 0x97, 0xbe,
	0x7b, 0xd8, 0xe1, 0xf2, 0x46, 0xe4, 0x17, 0x5f, 0x70, 0xa4, 0xa6, 0x4e, 0xa4, 0x2e, 0xb4, 0x42,
	0xa0, 0x05, 0xd3, 0xe5, 0x0a, 0x9f, 0x4e, 0x9c, 0x0d, 0x34, 0xa6, 0x5e, 0xba, 0x3a, 0x33, 0x70,
	0x57, 0x4d, 0x5c, 0xd1, 0x8f, 0xe3, 0xed, 0x8e, 0xf4, 0xdd, 0xc3, 0x9b, 0x5e, 0xdc, 0xea, 0xba,
	0x17, 0x6b, 0x93, 0x28, 0xce, 0xe2, 0x0e, 0x0e, 0xe5, 0xd3, 0x0f, 0xcb, 0xbf, 0x8e, 0x16, 0xc3,
	0x17, 0x32, 0x58, 0x9d, 0xa7, 0x15, 0xb1, 0xd8, 0x69, 0xc0, 0x84, 0x87, 0xe0, 0x63, 0xc2, 0xdb,
	0xd9, 0xdd, 0x0e, 0x7d, 0x0f, 0x62, 0x37, 0x0b, 0xc9, 0xa8, 0xc1, 0xbf, 0x44, 0xf6, 0x11, 0xc3,
	0xae, 0x60, 0x9f, 0x49, 0x13, 0x2a, 0xe4, 0x03, 0x12, 0xb5, 0xbf, 0x47, 0x32, 0xa1, 0xc5, 0xd7,
	0x9f, 0x42, 0x45, 0xc4, 0xb6, 0x96, 0x79, 0x2c, 0xdf, 0x01, 0xbe, 0x11, 0x7f, 0xc0, 0x5b, 0xc5,
	0xe7, 0x6d, 0x90, 0x2b, 0x43, 0x1f, 0x07, 0x2d, 0xb6, 0xd6, 0x38, 0x37, 0x43, 0x66, 0xa9, 0xf0,
	0x1c, 0x36, 0x5e, 0x2c, 0xf3, 0x87, 0x3e, 0x0e, 0x96, 0x81, 0x45, 0xa3, 0xbf, 0xd4, 0x30, 0xbe,
	0xc5, 0x2e, 0x68, 0x4c, 0xa6, 0x29, 0x29, 0xb3, 0x3d, 0xdf, 0x82, 0xf2, 0xe4, 0xfd, 0x4d, 0xde,
	0xa0, 0x9f, 0x64, 0x19, 0xcc, 0x77, 0xbd, 0xa7, 0x88, 0xef, 0x38, 0x29, 0x50, 0xd8, 0x6a, 0xfc,
	0x55, 0x0a, 0xca, 0xfe, 0xd4, 0xd8, 0x49, 0xed, 0xab, 0x81, 0xd9, 0xa9, 0x6e, 0x56, 0x99, 0x1c,
	0xf6, 0x06, 0xfd, 0xa1, 0xc6, 0x52, 0x47, 0x83, 0xec, 0x8d, 0x44, 0xcb, 0x3e, 0xf6, 0x46, 0xa2,
	0x72, 0xa9, 0xa3, 0x31, 0x14, 0x89, 0x96, 0x35, 0x85, 0xfc, 0xa5, 0x8e, 0xa6, 0x70, 0x20, 0xa4,
	0x6f, 0x43, 0x89, 0xa2, 0xe5, 0x3f, 0x41, 0x7c, 0xa3, 0x77, 0x7f, 0x55, 0x63, 0x53, 0xf4, 0x80,
	0xab, 0xb9, 0x61, 0x1f, 0xc4, 0x88, 0x20, 0x4f, 0xe8, 0x58, 0x79, 0x9c, 0xa5, 0x58, 0xd8, 0xd4,
	0xe8, 0xdd, 0x5f, 0x26, 0xeb, 0xc0, 0xb2, 0xdd, 0xcd, 0x0d, 0xfb, 0xca, 0x20, 0x5d, 0x5a, 0xa9,
	0xda, 0x33, 0xa0, 0x5d, 0x1f, 0x26, 0xaf, 0x24, 0x78, 0x3b, 0x98, 0xaa, 0xf7, 0x2c, 0x68, 0xf8,
	0x3f, 0xa2, 0xa5, 0x11, 0x63, 0x19, 0x2a, 0xe5, 0x06, 0xef, 0x01, 0xc2, 0x92, 0xe1, 0x0b, 0xc9,
	0x56, 0x24, 0xfc, 0x86, 0xe4, 0xb2, 0x83, 0x57, 0xd6, 0xfe, 0x5e, 0xf5, 0xd2, 0xe0, 0xcc, 0xc0,
	0x5d, 0x78, 0x53, 0xd0, 0xb7, 0xf8, 0xd5, 0xa3, 0x6a, 0xe7, 0x25, 0x75, 0x8c, 0x3c, 0xd2, 0x50,
	0x6e, 0x61, 0xd3, 0x46, 0x78, 0x8f, 0x92, 0x6c, 0xf8, 0xf8, 0xff, 0x1f, 0x87, 0x56, 0x53, 0xd0,
	0xce, 0x60, 0x50, 0x96, 0xfd, 0xb2, 0x1f, 0x5b, 0xf7, 0x01, 0xbb, 0xd6, 0xcd, 0x29, 0x62, 0x27,
	0xe7, 0xcc, 0x5e, 0x47, 0x08, 0x31, 0x9f, 0xbb, 0x99, 0x14, 0x94, 0x45, 0x03, 0x8d, 0x72, 0x29,
	0xa4, 0x1d, 0x85, 0x51, 0xa4, 0x46, 0xbb, 0xd4, 0x6f, 0x3a, 0x60, 0x8c, 0x3a, 0x47, 0x03, 0xb9,
	0xad, 0xf0, 0x33, 0x59, 0xea, 0xf3, 0xc4, 0xcc, 0xc9, 0x2f, 0xd5, 0x4b, 0x83, 0xea, 0x8d, 0x63,
	0x30, 0x42, 0xb5, 0xbf, 0x37, 0x7d, 0xf1, 0xda, 0x5c, 0xc3, 0xcf, 0x3e, 0x0e, 0xfe, 0x9f, 0x38,
	0xf4, 0x98, 0x59, 0x12, 0x0d, 0x34, 0x04, 0x3e, 0xc1, 0x3c, 0x7d, 0xdd, 0xde, 0xb0, 0xec, 0xdd,
	0x1b, 0x6a, 0xf0, 0x13, 0x9e, 0xf0, 0x73, 0x4e, 0x11, 0x2f, 0x73, 0xce, 0xf9, 0xeb, 0x0a, 0x07,
	0x39, 0x76, 0x5a, 0x66, 0x8d, 0xb2, 0xe8, 0xde, 0xb0, 0x1c, 0xd1, 0xab, 0x94, 0xa6, 0xaf, 0x5e,
	0x51, 0xfb, 0x8e, 0x91, 0xdd, 0x0c, 0x29, 0x96, 0x4f, 0x75, 0x62, 0x7d, 0xab, 0x31, 0x3d, 0xc6,
	0x50, 0x6d, 0xe6, 0x70, 0x5f, 0x72, 0xba, 0x57, 0xe7, 0xdf, 0xf1, 0x3c, 0x53, 0xa7, 0xbf, 0x51,
	0x3b, 0x0f, 0x69, 0xe3, 0xc7, 0xe1, 0x4b, 0x81, 0xf7, 0xe3, 0xcc, 0xc9, 0x2f, 0xd9, 0x97, 0x87,
	0x5f, 0x6d, 0x94, 0xe6, 0x1f, 0xa4, 0xce, 0xdd, 0x3c, 0x1c, 0xd9, 0x17, 0x68, 0xc2, 0xf9, 0xce,
	0xde, 0x09, 0x44, 0xf7, 0x6e, 0x0b, 0xf9, 0xbc, 0x0d, 0xb5, 0xd1, 0x50, 0xd8, 0x5b, 0x6f, 0x64,
	0x04, 0xc1, 0x46, 0x0c, 0x73, 0xd7, 0x12, 0xca, 0xc1, 0x7e, 0x45, 0x1b, 0xea, 0xd2, 0x86, 0xae,
	0xab, 0x43, 0x37, 0x20, 0x2d, 0x8d, 0x4e, 0xd7, 0xf0, 0x1c, 0xd8, 0x01, 0x81, 0x95, 0xf2, 0xdc,
	0xb8, 0xf8, 0x73, 0x1c, 0x7a, 0xc8, 0x52, 0x0a, 0xcf, 0x1a, 0x35, 0x21, 0x3f, 0xe4, 0xb3, 0xce,
	0x83, 0x9c, 0xc3, 0x73, 0xd5, 0x11, 0x36, 0xc3, 0x58, 0x70, 0xbe, 0x77, 0x60, 0x9a, 0x1c, 0xd5,
	0xb5, 0xc9, 0xf8, 0xd1, 0x99, 0xb3, 0xe7, 0x2a, 0xbd, 0x72, 0x63, 0x28, 0x58, 0x2b, 0x47, 0xc1,
	0xed, 0x24, 0x35, 0xd8, 0x5e, 0x13, 0xf2, 0x67, 0x8e, 0x12, 0x86, 0x38, 0x57, 0x07, 0xfa, 0x65,
	0xf3, 0x48, 0xa0, 0x3e, 0x18, 0x0a, 0xcb, 0x14, 0x5f, 0x84, 0x59, 0x59, 0xcc, 0x1f, 0xe6, 0xb9,
	0xde, 0x50, 0xc4, 0xd7, 0x9c, 0xf3, 0xd5, 0x13, 0xd6, 0xc1, 0x40, 0xcd, 0x41, 0x19, 0x06, 0x75,
	0xe9, 0xb1, 0xe1, 0xd4, 0xd8, 0x49, 0x69, 0xbe, 0xc6, 0x7c, 0x2b, 0x87, 0x56, 0x86, 0xf6, 0xd5,
	0x85, 0xa2, 0xde, 0x86, 0x9d, 0xc1, 0xb0, 0xec, 0xf5, 0x1f, 0x70, 0xe3, 0x67, 0x1e, 0x64, 0x1a,
	0x9d, 0x64, 0x2b, 0x17, 0x7e, 0x15, 0xda, 0x57, 0x16, 0xd5, 0xa1, 0x65, 0xcd, 0x00, 0x2e, 0xc3,
	0x31, 0x39, 0x4b, 0x81, 0xaa, 0x3a, 0x08, 0xd0, 0x41, 0x6c, 0xb8, 0x06, 0xdb, 0x89, 0xce, 0x38,
	0x1b, 0x2e, 0xfe, 0x5b, 0x0e, 0x3d, 0xdc, 0xe8, 0xdd, 0xcf, 0x16, 0xd4, 0xc8, 0x61, 0x9f, 0x1c,
	0x8c, 0xea, 0x3b, 0xa7, 0x00, 0x8f, 0xe4, 0x53, 0x4e, 0x11, 0xfb, 0x38, 0xe7, 0xdc, 0xf5, 0x84,
	0xb0, 0x4e, 0xfc, 0xac, 0x43, 0x6a, 0xa2, 0xa5, 0xa5, 0x04, 0x44, 0xce, 0x02, 0xbe, 0x04, 0x09,
	0xe1, 0x8a, 0x4d, 0xd2, 0x41, 0xd2, 0x83, 0xa0, 0x9f, 0x1a, 0x5c, 0x47, 0x1b, 0xbd, 0x04, 0xe7,
	0x48, 0xed, 0x3c, 0xad, 0xb6, 0x0e, 0x69, 0xa3, 0x17, 0xd9, 0x87, 0x5d, 0x69, 0xee, 0xe1, 0xf0,
	0x0a, 0x87, 0x56, 0x31, 0xb4, 0x01, 0x17, 0xd3, 0xd0, 0x8c, 0x4b, 0x5c, 0xbf, 0x57, 0xc4, 0xf7,
	0x9d, 0x59, 0x2b, 0x08, 0x6e, 0x0b, 0x0d, 0x83, 0x99, 0x60, 0x12, 0x66, 0x99, 0x43, 0x56, 0x4a,
	0x06, 0xcf, 0x2e, 0xa9, 0xab, 0x8a, 0x94, 0x15, 0x35, 0xff, 0x37, 0x1c, 0x7a, 0x44, 0xc7, 0x52,
	0x1f, 0xd0, 0x2f, 0x58, 0xc8, 0x4d, 0x28, 0xc9, 0x8d, 0xa1, 0x16, 0x6f, 0x03, 0x35, 0xb0, 0x5e,
	0x42, 0x78, 0xd3, 0xf9, 0x2a, 0x0a, 0xff, 0xda, 0xf0, 0xd5, 0xf4, 0x1a, 0xfe, 0x01, 0x61, 0x18,
	0x8a, 0x85, 0xfc, 0xdf, 0x38, 0x44, 0xd2, 0x7a, 0x0e, 0x7d, 0xa1, 0x0e, 0x8d, 0x98, 0xf9, 0x7d,
	0x93, 0xf1, 0x51, 0xed, 0xab, 0x11, 0xf5, 0x50, 0x77, 0xe6, 0x99, 0x79, 0xde, 0x20, 0xac, 0xf3,
	0x75, 0xcf, 0x57, 0xb3, 0x6a, 0x8b, 0xa5, 0x46, 0xa4, 0x93, 0x32, 0x56, 0x6d, 0xe1, 0x00, 0x2d,
	0x03, 0xf0, 0x28, 0xd4, 0x71, 0x63, 0x0e, 0xcd, 0xc3, 0x76, 0xd6, 0x13, 0x64, 0x99, 0xe9, 0x59,
	0xc5, 0x78, 0x82, 0x3c, 0xce, 0xf8, 0x78, 0x58, 0x50, 0x12, 0x18, 0xeb, 0xd7, 0xc1, 0xf8, 0x0d,
	0x2f, 0x7f, 0x20, 0xbf, 0x61, 0xb7, 0xc5, 0xdc, 0x7d, 0x05, 0x13, 0xef, 0xcd, 0x04, 0x0b, 0xbc,
	0xcd, 0xe6, 0x0f, 0x3b, 0xf2, 0x32, 0x36, 0xf1, 0x8c, 0xf3, 0x31, 0xff, 0x40, 0xce, 0xc7, 0x6e,
	0x8b, 0x31, 0xfd, 0x4a, 0xa6, 0x77, 0xc6, 0x81, 0x98, 0x67, 0x9b, 0x67, 0x71, 0x23, 0xfe, 0x3b,
	0xd6, 0xca, 0x1d, 0x8c, 0x8f, 0xef, 0x72, 0x8a, 0x38, 0xc9, 0x5a, 0xb9, 0x8f, 0x71, 0x99, 0x2c,
	0xde, 0x2f, 0xc4, 0xdc, 0x7d, 0x84, 0xcb, 0x74, 0xb7, 0x59, 0x8d, 0x09, 0xf5, 0x9f, 0x14, 0xf1,
	0x8f, 0x99, 0xee, 0x36, 0x7b, 0x59, 0x51, 0x80, 0xd2, 0x0e, 0xca, 0x4d, 0x10, 0x37, 0x9c, 0xfe,
	0xde, 0xe4, 0xd4, 0xa0, 0x3a, 0x84, 0x63, 0x05, 0xe0, 0xfd, 0x34, 0x73, 0x70, 0x24, 0x35, 0xfd,
	0xa5, 0x23, 0x73, 0x99, 0x1c, 0xa9, 0xc9, 0xf6, 0xe4, 0xe4, 0x6d, 0xf6, 0x26, 0x74, 0xcc, 0xe1,
	0xb0, 0xf3, 0xdf, 0x71, 0x68, 0xe5, 0xee, 0xe6, 0x3d, 0x7b, 0xe4, 0xb0, 0x44, 0xec, 0xd7, 0x25,
	0x9d, 0xe6, 0x63, 0x13, 0xea, 0x25, 0xae, 0x01, 0x4e, 0x11, 0x8f, 0x71, 0xce, 0x6c, 0x35, 0x84,
	0x4f, 0x00, 0x58, 0x66, 0xd8, 0xbd, 0x97, 0x61, 0x85, 0x24, 0xe1, 0x31, 0x48, 0x42, 0x4f, 0x86,
	0xc7, 0x60, 0xc9, 0x26, 0xb1, 0x75, 0x61, 0x98, 0x8d, 0x54, 0xef, 0x61, 0xa0, 0xa5, 0xa0, 0x38,
	0x82, 0x18, 0x0a, 0x2c, 0x2a, 0x3a, 0x17, 0xc7, 0xa6, 0x8d, 0x1b, 0xa5, 0x6c, 0x03, 0xe2, 0x2f,
	0xc1, 0x0d, 0xb1, 0x25, 0xec, 0xf5, 0xc9, 0x7b, 0x9a, 0x1b, 0xea, 0xe4, 0x70, 0x63, 0x20, 0x88,
	0x2f, 0xb0, 0x5a, 0xd9, 0x87, 0x8d, 0xac, 0x97, 0xb8, 0xf6, 0x28, 0xa2, 0xcf, 0x39, 0x77, 0x2d,
	0x61, 0xb3, 0x7e, 0x3f, 0xd4, 0x93, 0xb2, 0xb2, 0xa8, 0x59, 0x58, 0x16, 0x91, 0x7d, 0xa5, 0xd4,
	0x86, 0x48, 0xdf, 0x7b, 0x98, 0x92, 0x39, 0x6a, 0x42, 0x7e, 0xc7, 0x4c, 0x2c, 0xa6, 0x1e, 0x4e,
	0x68, 0x43, 0x31, 0x4a, 0xd4, 0xa4, 0xb9, 0xbb, 0xe0, 0xdb, 0x39, 0x54, 0x18, 0xf1, 0x79, 0x83,
	0x58, 0x6f, 0xd1, 0xe2, 0x6d, 0x28, 0x2a, 0xc2, 0x23, 0xfb, 0xd7, 0x8a, 0xf8, 0x81, 0xd3, 0x52,
	0x20, 0x6c, 0xd7, 0x7f, 0x95, 0x05, 0xc8, 0xcf, 0x52, 0xdb, 0xc6, 0xd0, 0x3e, 0x8b, 0x69, 0x5f,
	0x1f, 0x85, 0xfe, 0xf4, 0xff, 0x07, 0x8f, 0x53, 0xda, 0xae, 0x33, 0x67, 0x57, 0x15, 0xcb, 0xe7,
	0xdf, 0xb4, 0x51, 0xb2, 0x20, 0xd7, 0x39, 0x9f, 0x55, 0x8d, 0xde, 0xfd, 0x3a, 0xd1, 0xc4, 0xce,
	0xf2, 0x11, 0x9d, 0x4f, 0xd3, 0x8f, 0xf4, 0xc3, 0x78, 0x38, 0x1f, 0x29, 0x62, 0xbd, 0x33, 0x6b,
	0x05, 0x61, 0x87, 0xbe, 0x46, 0xc1, 0x90, 0x5f, 0x2e, 0x6b, 0x32, 0xe0, 0x70, 0xf5, 0xc0, 0x92,
	0x10, 0xb1, 0x01, 0xab, 0xbd, 0xd8, 0x35, 0x61, 0x6f, 0x1e, 0xf3, 0x6b, 0xbe, 0xb2, 0x71, 0xa3,
	0x94, 0xb5, 0x1b, 0x9d, 0xe9, 0x58, 0x86, 0xf7, 0xe8, 0xce, 0xa6, 0xcd, 0xe1, 0x50, 0xe3, 0x7b,
	0x72, 0x38, 0x54, 0xb4, 0x16, 0x1f, 0x22, 0x2c, 0xe9, 0xda, 0xcb, 0x04, 0x11, 0x6e, 0xc4, 0xe6,
	0xa6, 0xb2, 0x3d, 0xe1, 0x50, 0x63, 0xd9, 0x27, 0x72, 0x38, 0x44, 0x18, 0x0d, 0xf6, 0x36, 0x9e,
	0x9d, 0xea, 0x84, 0x18, 0x1c, 0x0e, 0x96, 0xf7, 0xc0, 0x9f, 0xb4, 0x4b, 0xb2, 0xe3, 0xe4, 0xcf,
	0x72, 0x68, 0x8d, 0x55, 0xf4, 0x10, 0xf7, 0xe8, 0x47, 0xcd, 0xef, 0x2f, 0x7a, 0xc4, 0x54, 0xd7,
	0xce, 0x51, 0x45, 0x78, 0x93, 0xb9, 0xa3, 0xfd, 0x7a, 0x49, 0x99, 0x77, 0x0f, 0xbe, 0x0e, 0xfd,
	0xfe, 0x52, 0x53, 0x14, 0xea, 0xbc, 0xa4, 0x9d, 0x18, 0x35, 0xed, 0xd9, 0x32, 0x3e, 0xa6, 0x7e,
	0x51, 0xcf, 0xd1, 0x03, 0x7f, 0x45, 0x67, 0xa7, 0x33, 0x8b, 0x88, 0x20, 0xf8, 0x28, 0x1e, 0x22,
	0x0e, 0x78, 0x30, 0x77, 0xad, 0x39, 0x47, 0x49, 0xe4, 0x42, 0x90, 0x78, 0x92, 0xf1, 0x4b, 0xa6,
	0x74, 0x38, 0xd7, 0x28, 0xe7, 0xee, 0x84, 0x1f, 0xe5, 0xd0, 0xda, 0x2c, 0xa5, 0x9b, 0xbd, 0x81,
	0x86, 0xe6, 0xb0, 0x5c, 0xf4, 0x18, 0x1e, 0x29, 0x7e, 0x54, 0x98, 0xa7, 0x9a, 0xb0, 0x6d, 0x8e,
	0xa1, 0xee, 0x81, 0x72, 0x72, 0x3e, 0xc1, 0x72, 0x54, 0xed, 0xef, 0x05, 0x03, 0xd9, 0x39, 0x87,
	0x3b, 0x4f, 0x4f, 0x7c, 0x5b, 0x0e, 0x72, 0xd0, 0xe2, 0x2d, 0x4d, 0xcd, 0x36, 0x61, 0x06, 0x8b,
	0x53, 0x45, 0xeb, 0xf0, 0xa8, 0xbf, 0xe6, 0x14, 0xf1, 0x26, 0xe7, 0xfc, 0xde, 0xea, 0x42, 0x37,
	0x2b, 0xa0, 0xd5, 0x37, 0x35, 0x3f, 0xa0, 0x90, 0x56, 0xb2, 0xa5, 0x66, 0xe7, 0xfa, 0x9f, 0x50,
	0x52, 0xfb, 0xde, 0x01, 0xe3, 0xd8, 0x19, 0xc4, 0x6b, 0xeb, 0x71, 0x26, 0x76, 0x06, 0x71, 0xda,
	0x7a, 0x1f, 0x9c, 0xb3, 0x4a, 0x1d, 0xd5, 0x3b, 0xa4, 0xed, 0xe2, 0xb6, 0x0a, 0x6d, 0xf4, 0x33,
	0x35, 0x1e, 0x67, 0xdc, 0xb1, 0x2a, 0x48, 0xe4, 0xd3, 0xf8, 0xa8, 0x01, 0xac, 0x2a, 0xdb, 0x2c,
	0x7a, 0xb6, 0x55, 0x55, 0x92, 0x12, 0xf8, 0x50, 0xb3, 0x53, 0xdd, 0xc4, 0x5a, 0xb3, 0x42, 0xbd,
	0xf3, 0x25, 0xf0, 0xcf, 0xd4, 0x15, 0xcb, 0x8d, 0x0a, 0xe5, 0x70, 0x38, 0x14, 0xde, 0x4e, 0x82,
	0x72, 0x39, 0xf0, 0x38, 0x70, 0x22, 0x1a, 0x4b, 0x81, 0x50, 0x68, 0x89, 0xc9, 0x65, 0x29, 0x2b,
	0xfe, 0x86, 0x43, 0x0b, 0xb1, 0xaf, 0x0a, 0xff, 0x0c, 0xe3, 0x6c, 0xe2, 0x5a, 0xa5, 0x88, 0x2b,
	0x9c, 0xfa, 0x6f, 0x01, 0x81, 0xcb, 0xa3, 0x63, 0xab, 0x7c, 0x00, 0x5c, 0x50, 0x36, 0x58, 0x5c,
	0x50, 0x5c, 0x45, 0x8a, 0xb8, 0xda, 0x09, 0x10, 0xa1, 0x90, 0xd4, 0xc5, 0xe9, 0xbf, 0x88, 0x73,
	0x0a, 0x8e, 0xa0, 0xb1, 0x67, 0x8f, 0xec, 0x8b, 0x92, 0xe7, 0x31, 0x12, 0x41, 0x03, 0x83, 0x84,
	0x97, 0xa1, 0x85, 0x36, 0xd0, 0xa9, 0x9d, 0x1b, 0x9a, 0x9d, 0xea, 0x2e, 0xa9, 0x0e, 0xd5, 0x12,
	0xdb, 0xc9, 0x52, 0x47, 0x4d, 0x58, 0xde, 0x23, 0x87, 0x59, 0x48, 0x75, 0xa8, 0x6a, 0xbf, 0xec,
	0x6b, 0x8e, 0xe2, 0x08, 0x1a, 0x18, 0x43, 0xf1, 0xdf, 0xaf, 0x83, 0x14, 0xff, 0xd4, 0x87, 0x6b,
	0x2b, 0x5a, 0xca, 0xfa, 0x74, 0x51, 0x0d, 0x1c, 0xe4, 0xcb, 0xb5, 0x16, 0x09, 0x4b, 0x09, 0x8d,
	0xc3, 0x41, 0x3c, 0x3c, 0x95, 0x92, 0xad, 0x9c, 0xdf, 0x64, 0xf1, 0x88, 0x86, 0x58, 0x63, 0xd8,
	0x8c, 0x94, 0x67, 0x1b, 0x5a, 0x9c, 0xa2, 0x3f, 0xca, 0x7c, 0x11, 0xc4, 0x19, 0x12, 0x19, 0xd6,
	0xfa, 0xd7, 0x6c, 0x63, 0x8b, 0x5f, 0xb4, 0xf1, 0x10, 0xc8, 0xbc, 0xf9, 0x25, 0xc0, 0x6f, 0x87,
	0x96, 0xb2, 0x6c, 0x77, 0x03, 0xf5, 0xa9, 0x85, 0xc0, 0x58, 0x25, 0xf3, 0x79, 0xc7, 0xfd, 0x68,
	0xb7, 0xda, 0xf7, 0xa8, 0x5b, 0x2d, 0x84, 0xbd, 0x5a, 0x9d, 0x61, 0xd5, 0xab, 0x97, 0x12, 0x27,
	0x6c, 0xe2, 0x46, 0xbb, 0x2e, 0x13, 0x35, 0x94, 0xd8, 0x7c, 0x68, 0xcf, 0x72, 0x68, 0x99, 0x3f,
	0xe4, 0xdb, 0x27, 0x87, 0xb7, 0x84, 0xbd, 0x4d, 0x7b, 0x6b, 0xbc, 0xd1, 0xbd, 0xc4, 0x01, 0x04,
	0xbf, 0xfa, 0xdb, 0xcb, 0x84, 0x0f, 0x0c, 0x9d, 0x53, 0x7f, 0x7a, 0xb8, 0x1b, 0x5b, 0x73, 0x26,
	0xa0, 0x8a, 0x76, 0xf2, 0x36, 0x79, 0xca, 0x01, 0x36, 0x9b, 0x3c, 0xb2, 0x8c, 0xa9, 0xd3, 0x03,
	0x99, 0xcf, 0x3d, 0xe5, 0x7e, 0x6f, 0xd4, 0x5b, 0xbe, 0xdb, 0x17, 0x29, 0x8f, 0x80, 0xee, 0xb8,
	0x1c, 0x90, 0x48, 0xf6, 0xfe, 0xf8, 0x04, 0x67, 0x35, 0xb0, 0x84, 0xe7, 0xc0, 0x93, 0x9c, 0x22,
	0x7e, 0xca, 0x59, 0x4d, 0x2c, 0x0f, 0x72, 0x54, 0x39, 0x08, 0xcf, 0x3b, 0xc4, 0xe4, 0xb2, 0x6d,
	0xa2, 0xd4, 0x61, 0xd0, 0x98, 0x1e, 0x80, 0xd1, 0x2a, 0xa5, 0xda, 0xc9, 0x0b, 0x66, 0xfd, 0xce,
	0x13, 0xda, 0x50, 0x97, 0x4e, 0xaf, 0xce, 0x9e, 0x34, 0xad, 0x6d, 0x71, 0xc0, 0xd7, 0x64, 0x7c,
	0x52, 0x1b, 0x4a, 0x68, 0xa3, 0xf4, 0xb5, 0xaa, 0x27, 0x75, 0xfc, 0xbc, 0x36, 0xd0, 0x79, 0x2f,
	0xd6, 0x46, 0x67, 0x86, 0xe7, 0x64, 0x31, 0xed, 0xe4, 0x7b, 0x16, 0x20, 0xd4, 0x1c, 0x91, 0xc3,
	0xb5, 0x38, 0x48, 0x0e, 0x79, 0x1e, 0xfc, 0xc7, 0x1c, 0x45, 0x4c, 0xe7, 0x38, 0x99, 0x02, 0xe1,
	0x7f, 0xc9, 0xd9, 0x8d, 0x35, 0xe2, 0xa0, 0x10, 0xd7, 0x45, 0x00, 0x6c, 0xf3, 0x98, 0x6e, 0x1f,
	0xd4, 0x86, 0xae, 0xcf, 0x4e, 0x75, 0xef, 0x7b, 0x39, 0x02, 0xdc, 0x33, 0x2c, 0xbb, 0xda, 0xdf,
	0x0b, 0x4a, 0x41, 0xd3, 0x93, 0xf7, 0xee, 0xd9, 0xf4, 0x78, 0x2b, 0xd4, 0x07, 0x27, 0x91, 0x99,
	0xc3, 0x3d, 0x6a, 0xc7, 0x65, 0x55, 0xe9, 0x86, 0x0b, 0x67, 0x26, 0x36, 0x99, 0xfe, 0xe6, 0x18,
	0x3c, 0x0c, 0x6a, 0xe7, 0x86, 0xd2, 0x57, 0x5a, 0xb5, 0x9b, 0x6d, 0xe4, 0xa5, 0x1f, 0x63, 0xd0,
	0x79, 0x78, 0x9c, 0x20, 0x94, 0x6e, 0x17, 0x75, 0xac, 0x5b, 0xeb, 0xec, 0xc7, 0x7d, 0xf5, 0xa8,
	0x7d, 0xe3, 0xea, 0x91, 0x0b, 0x6a, 0xc7, 0xe5, 0xf4, 0x8d, 0x83, 0x6a, 0xe2, 0x8a, 0x8e, 0xbf,
	0xa3, 0x47, 0xed, 0xef, 0x74, 0x34, 0x07, 0x89, 0xc9, 0xb5, 0xce, 0xc1, 0x3b, 0xd4, 0xbe, 0x36,
	0x6d, 0xe0, 0x06, 0x5c, 0x00, 0xa5, 0x0e, 0x75, 0x68, 0xc4, 0x61, 0x4e, 0xd2, 0xa1, 0x0d, 0xc5,
	0x30, 0x6b, 0x61, 0x47, 0x5f, 0xea, 0xd0, 0xee, 0x4c, 0xaa, 0x47, 0x2e, 0x38, 0x74, 0x31, 0xdb,
	0x17, 0x6d, 0x70, 0x34, 0x07, 0x7d, 0xa1, 0xb0, 0x3f, 0x14, 0x74, 0xe8, 0x34, 0x41, 0x3f, 0xda,
	0x8e, 0xb2, 0x32, 0x5c, 0x86, 0x2d, 0x00, 0x5e, 0x2b, 0x0f, 0x87, 0x42, 0xd1, 0xf2, 0x0d, 0x3a,
	0xa4, 0x1c, 0x40, 0x0e, 0xf5, 0xd8, 0x74, 0x72, 0xf2, 0x52, 0x72, 0xfa, 0x2e, 0xc9, 0xc7, 0xcf,
	0x0c, 0x55, 0x62, 0xd6, 0x99, 0xbf, 0xcb, 0xa1, 0x25, 0xcd, 0xc1, 0x5a, 0x73, 0xc4, 0x58, 0x55,
	0xb5, 0xc4, 0x75, 0x8a, 0x53, 0xc4, 0xe3, 0x9c, 0xd3, 0x5a, 0x26, 0xb4, 0x71, 0xe4, 0x39, 0x10,
	0xa3, 0xa3, 0x12, 0xbf, 0x11, 0x63, 0xaf, 0x2d, 0x19, 0xef, 0x85, 0x3e, 0xcc, 0x3c, 0x8a, 0xb1,
	0xa9, 0x8d, 0xe9, 0xe1, 0x91, 0xd4, 0xa5, 0x84, 0xbd, 0xf8, 0xec, 0x39, 0x52, 0x80, 0xc3, 0xed,
	0x99, 0x65, 0x25, 0x64, 0xac, 0x06, 0xc7, 0xa7, 0xf6, 0x8d, 0x83, 0xe8, 0x08, 0x4b, 0xb9, 0x5e,
	0xb2, 0x8e, 0x89, 0x9f, 0xe1, 0x1e, 0xe4, 0xe9, 0xf3, 0x06, 0xa7, 0x88, 0xd7, 0x39, 0xf6, 0xf1,
	0xf3, 0x1c, 0xf7, 0x40, 0xaf, 0x9f, 0x1b, 0x1c, 0xea, 0xa5, 0x41, 0xfd, 0x68, 0x58, 0xcf, 0x94,
	0xd1, 0x74, 0x50, 0x27, 0x32, 0x93, 0x09, 0x3a, 0xfa, 0xf4, 0xf8, 0x9d, 0xd4, 0xf0, 0x98, 0xbe,
	0x19, 0x71, 0x6b, 0xf7, 0xae, 0xed, 0x78, 0x33, 0xe2, 0x4d, 0x31, 0x75, 0x61, 0x26, 0xa6, 0x24,
	0x13, 0x87, 0xa0, 0x08, 0x1c, 0x97, 0x2c, 0xa7, 0x8c, 0xe8, 0x36, 0xcc, 0xe7, 0xd6, 0xae, 0x1c,
	0x94, 0x8f, 0x43, 0xeb, 0x89, 0xe1, 0xfa, 0x48, 0x51, 0x01, 0x9e, 0xeb, 0x73, 0xf3, 0x12, 0xda,
	0x2a, 0xa3, 0x36, 0xd0, 0xda, 0x69, 0x4e, 0x11, 0x27, 0x38, 0xa7, 0x89, 0x44, 0xb8, 0xc6, 0x11,
	0x23, 0x90, 0xfe, 0x76, 0xf0, 0x85, 0xa6, 0x12, 0x34, 0x8c, 0x52, 0xff, 0x54, 0x46, 0xf0, 0x9c,
	0xd4, 0x60, 0xfb, 0x3e, 0xf9, 0x40, 0x32, 0x9e, 0xd0, 0x77, 0x5a, 0x83, 0x1c, 0xc5, 0xb7, 0x6a,
	0x32, 0x9e, 0x30, 0xdb, 0xde, 0x3d, 0x93, 0x1a, 0x21, 0xaf, 0x67, 0xb4, 0xb9, 0xe1, 0x91, 0x85,
	0xe7, 0x3c, 0x71, 0x74, 0xe6, 0xe4, 0x2d, 0x38, 0x0e, 0xaf, 0x52, 0x66, 0x4f, 0x27, 0xc9, 0x57,
	0xda, 0xb6, 0x02, 0xd2, 0x0a, 0x87, 0xbe, 0x9b, 0xcb, 0xfc, 0x81, 0xf0, 0x6b, 0xe5, 0x2d, 0xde,
	0x70, 0x79, 0x43, 0x60, 0x77, 0x39, 0xe9, 0xef, 0x55, 0xc9, 0x1c, 0x38, 0xff, 0x35, 0x87, 0xf8,
	0xa6, 0xb0, 0x5c, 0x1b, 0xf5, 0x86, 0xa3, 0x3b, 0x4d, 0x8a, 0x02, 0xef, 0xbe, 0xc4, 0x8d, 0x2c,
	0x4b, 0x05, 0xe1, 0xa3, 0xdd, 0xec, 0x53, 0x5b, 0x26, 0x65, 0x51, 0x87, 0x46, 0xe8, 0x89, 0x84,
	0xcf, 0x98, 0x9c, 0x38, 0xaa, 0x76, 0xf5, 0x50, 0xfa, 0xa2, 0x7d, 0x35, 0xa2, 0xb5, 0xf7, 0xe9,
	0x74, 0x5c, 0xa7, 0x02, 0x5f, 0xa8, 0xe3, 0x13, 0x70, 0x5a, 0xd5, 0x3b, 0x5f, 0x6a, 0x43, 0x5d,
	0x44, 0xa3, 0x87, 0x69, 0xa1, 0x94, 0xa5, 0x7f, 0xfd, 0x1b, 0xae, 0xd8, 0xed, 0x83, 0xc7, 0xa9,
	0x1d, 0xcd, 0x51, 0xd1, 0xef, 0x0f, 0x05, 0x23, 0xc4, 0xb0, 0x6e, 0x4d, 0x66, 0x62, 0x63, 0x1c,
	0x01, 0xe3, 0xdf, 0x70, 0x8a, 0xf8, 0x0d, 0xe7, 0xcc, 0x6c, 0x27, 0x8c, 0x70, 0xc9, 0xf8, 0x11,
	0xed, 0xdc, 0x6d, 0x73, 0xc3, 0x61, 0x92, 0xe5, 0x72, 0xd7, 0xaa, 0x87, 0x3a, 0x52, 0xd3, 0x63,
	0x10, 0x39, 0x52, 0x1d, 0xeb, 0x4a, 0x7f, 0xd6, 0x01, 0x97, 0x39, 0x09, 0xef, 0x30, 0x35, 0x98,
	0xba, 0x75, 0x51, 0x9d, 0x1a, 0x00, 0xb3, 0x25, 0xd8, 0xed, 0xac, 0x43, 0x0b, 0x21, 0x7d, 0xe3,
	0x13, 0xda, 0xf8, 0x71, 0xfd, 0x6c, 0x0e, 0x5f, 0x56, 0x3b, 0x74, 0x0c, 0xd0, 0xaf, 0xe9, 0x72,
	0x05, 0x8a, 0x57, 0xcc, 0x54, 0xd2, 0x65, 0xd3, 0x17, 0xac, 0xbf, 0x17, 0x30, 0xa4, 0x6f, 0x1c,
	0x4c, 0x1d, 0x1f, 0xb9, 0x17, 0x6b, 0x93, 0x32, 0x47, 0xcf, 0x1f, 0xca, 0x41, 0xcb, 0x0d, 0xa8,
	0x27, 0x48, 0x96, 0x62, 0xe9, 0xbc, 0x4b, 0xf1, 0x57, 0x9c, 0x22, 0x4e, 0x73, 0xce, 0x8c, 0x66,
	0x78, 0x25, 0x8e, 0xfe, 0x32, 0x56, 0x22, 0x63, 0xf0, 0xfc, 0xb1, 0x1c, 0xb4, 0x32, 0x42, 0xd6,
	0x06, 0x8e, 0x2c, 0xac, 0xc5, 0xb2, 0x79, 0xd7, 0xe2, 0xff, 0xcf, 0x29, 0xe2, 0xbf, 0xe1, 0x9c,
	0xd9, 0x5a, 0x0a, 0x5f, 0xd8, 0x37, 0x06, 0x6c, 0x73, 0x36, 0xc4, 0x27, 0x10, 0x20, 0x4a, 0x68,
	0xd8, 0x98, 0x9e, 0xc9, 0x78, 0x02, 0x0c, 0x0c, 0x92, 0x89, 0x6e, 0xed, 0xc4, 0x44, 0x39, 0x78,
	0xd2, 0x97, 0x83, 0x57, 0x9a, 0x3a, 0x70, 0x88, 0x20, 0xc0, 0xe7, 0x78, 0xae, 0xa5, 0x00, 0xc1,
	0x03, 0x16, 0x24, 0x73, 0x1d, 0x92, 0xf1, 0x5e, 0xf8, 0x16, 0xfa, 0x82, 0x64, 0x9b, 0x01, 0xdf,
	0x99, 0x83, 0xf8, 0x08, 0xac, 0x12, 0xbb, 0x24, 0xcb, 0xe7, 0x5d, 0x12, 0xa2, 0x9f, 0xcc, 0xd2,
	0x50, 0xb8, 0x64, 0xdf, 0x20, 0xff, 0x32, 0xd7, 0x22, 0xcb, 0xd0, 0xf9, 0xe7, 0x69, 0x58, 0x97,
	0x15, 0xa6, 0xf7, 0x96, 0x11, 0xd6, 0xc5, 0x22, 0x38, 0xec, 0xa8, 0xa5, 0x31, 0x5a, 0x6a, 0x50,
	0x5e, 0x63, 0x48, 0x17, 0x56, 0x68, 0x74, 0x0c, 0x70, 0x2d, 0x30, 0x80, 0xc2, 0xd3, 0x6e, 0x37,
	0x90, 0x6d, 0x4f, 0x65, 0xa9, 0x5b, 0x24, 0xba, 0x40, 0xc0, 0x05, 0x3c, 0x21, 0x2e, 0x94, 0x68,
	0x03, 0x36, 0xea, 0xcb, 0xca, 0x39, 0xa3, 0xbe, 0xac, 0x9a, 0x2f, 0xea, 0xcb, 0xea, 0xef, 0x89,
	0xfa, 0xb2, 0x26, 0x23, 0xea, 0xcb, 0x4b, 0x24, 0x3b, 0xf4, 0x43, 0xa6, 0xe4, 0x04, 0xd9, 0xa1,
	0x8b, 0xe8, 0xb4, 0xb5, 0xb3, 0x77, 0xb3, 0xa4, 0x87, 0x6e, 0x46, 0x8b, 0xc3, 0xcd, 0xc1, 0xa8,
	0x8e, 0xb5, 0x28, 0x7b, 0x8c, 0x3b, 0xa9, 0x19, 0xab, 0xb0, 0xb0, 0xf9, 0x0b, 0x8e, 0x28, 0x66,
	0x34, 0x10, 0x36, 0xd2, 0x38, 0x11, 0x36, 0xde, 0x5e, 0x67, 0x46, 0x8c, 0xbf, 0x75, 0x81, 0x69,
	0xe8, 0xba, 0x11, 0x5e, 0x9a, 0x34, 0xe5, 0x0f, 0x72, 0x68, 0x11, 0x2c, 0x18, 0x56, 0xd1, 0x65,
	0x89, 0xbf, 0xba, 0x1d, 0x96, 0x53, 0xef, 0x15, 0xbf, 0xc9, 0x91, 0xea, 0x82, 0xcb, 0xd6, 0x69,
	0x32, 0x7e, 0x04, 0x36, 0xac, 0xde, 0x2f, 0x0e, 0xc6, 0x69, 0xa4, 0xda, 0x1d, 0x54, 0x8f, 0x0c,
	0x27, 0xe3, 0x47, 0xd3, 0xd3, 0xd7, 0x53, 0x57, 0x27, 0xe1, 0x2b, 0x19, 0x32, 0x0c, 0xe0, 0xfa,
	0x31, 0x11, 0x23, 0x7e, 0x8d, 0x96, 0x5a, 0x99, 0x86, 0x07, 0x8a, 0xfd, 0xf0, 0x81, 0x22, 0xbe,
	0x87, 0x7e, 0xeb, 0xb4, 0xc8, 0xc1, 0xc2, 0x9b, 0xec, 0x0e, 0x2d, 0x75, 0x24, 0xe3, 0x93, 0xe9,
	0x2b, 0xad, 0x24, 0xba, 0xdf, 0xf8, 0x84, 0xf9, 0x96, 0xc4, 0x3a, 0x57, 0xea, 0x42, 0x66, 0x6c,
	0x30, 0x75, 0x7c, 0x04, 0x22, 0xa9, 0x01, 0x23, 0x56, 0x3c, 0xbc, 0x10, 0x21, 0x73, 0xfd, 0xf8,
	0xbd, 0x68, 0xb9, 0x41, 0x39, 0xb6, 0x1b, 0x5b, 0x9d, 0x33, 0x32, 0x78, 0xbd, 0xe2, 0xcc, 0x28,
	0x9c, 0x67, 0xcb, 0xb3, 0x8b, 0x29, 0x65, 0x34, 0xe4, 0x65, 0xa2, 0xe5, 0xf4, 0x04, 0x69, 0x47,
	0x4c, 0x72, 0x21, 0x7b, 0x99, 0xad, 0x1f, 0xd6, 0x30, 0xc5, 0xd2, 0x8f, 0xbd, 0x1d, 0x1f, 0x42,
	0x4b, 0x8c, 0xae, 0x5d, 0x81, 0x4f, 0xa8, 0xd4, 0x8e, 0xad, 0x93, 0xad, 0x25, 0xc2, 0xaf, 0xd8,
	0xd1, 0xbb, 0xdd, 0xb0, 0x2b, 0x3c, 0x95, 0x86, 0x64, 0xa7, 0x9d, 0x1a, 0x37, 0xac, 0x39, 0x70,
	0x20, 0x23, 0x52, 0x2c, 0x59, 0xb1, 0xf0, 0x0d, 0x58, 0xcb, 0xad, 0x8f, 0x01, 0xfa, 0xcb, 0x35,
	0xc3, 0xe8, 0x58, 0x0a, 0x84, 0x5f, 0xb1, 0x93, 0xb8, 0xff, 0xee, 0x2c, 0x48, 0xf8, 0x30, 0xa1,
	0xe8, 0x74, 0x65, 0x99, 0x4c, 0x46, 0x2e, 0x45, 0x7c, 0xdd, 0x99, 0xa5, 0x58, 0x58, 0x6f, 0xac,
	0x25, 0xe8, 0x36, 0xe6, 0xfb, 0x6e, 0x59, 0x9a, 0xf3, 0x21, 0xb4, 0xc2, 0xb2, 0xca, 0x4c, 0x3e,
	0x43, 0x51, 0x11, 0x7f, 0xe3, 0xcc, 0x2c, 0xcd, 0xd2, 0xe3, 0x9c, 0x5f, 0x30, 0xb3, 0x75, 0xf1,
	0x38, 0x87, 0x0a, 0x18, 0xd2, 0xc2, 0x4b, 0x68, 0xb9, 0x2f, 0x14, 0x8c, 0x7a, 0x03, 0x41, 0x39,
	0x2c, 0x11, 0x8a, 0x04, 0x9b, 0xf4, 0x19, 0x45, 0x7c, 0xd2, 0x99, 0x51, 0x28, 0x2c, 0x53, 0xc7,
	0x26, 0xd4, 0xd3, 0x23, 0x94, 0xd0, 0x48, 0x19, 0x55, 0xf8, 0x6d, 0x68, 0x29, 0x21, 0x38, 0xbb,
	0xe4, 0x70, 0xc4, 0x4c, 0x81, 0xf2, 0x94, 0x22, 0x3e, 0xe1, 0xb4, 0x15, 0x09, 0xcb, 0x6c, 0x24,
	0x4b, 0xb2, 0x55, 0x28, 0xfe, 0xdb, 0xe5, 0x68, 0x31, 0x09, 0x7e, 0xcd, 0xbf, 0x9f, 0x99, 0xc8,
	0x1a, 0xcc, 0x45, 0x4d, 0x9d, 0x51, 0x99, 0xf1, 0x1c, 0x5b, 0x6a, 0x98, 0xa2, 0x25, 0x9e, 0x17,
	0x92, 0xd3, 0x3d, 0xd4, 0xe2, 0xb8, 0xd4, 0xe2, 0x59, 0xc1, 0x28, 0x89, 0xaa, 0x2d, 0x3a, 0x2c,
	0xec, 0x78, 0x0a, 0x3a, 0xac, 0x72, 0x43, 0xc5, 0x64, 0xc6, 0x7e, 0xd7, 0x05, 0x0f, 0x6a, 0xe9,
	0x76, 0x70, 0x1a, 0xde, 0x9d, 0x5e, 0x7c, 0x01, 0x3a, 0x21, 0x0a, 0xae, 0x30, 0x2a, 0x90, 0x83,
	0xf5, 0x0d, 0x81, 0xc8, 0x5e, 0x26, 0xeb, 0x66, 0x8d, 0x22, 0x6e, 0x77, 0xb2, 0x70, 0xe1, 0x37,
	0x80, 0x1d, 0xa2, 0xd2, 0xeb, 0x9f, 0xf2, 0xd0, 0x69, 0xda, 0x87, 0x7a, 0x7c, 0x3c, 0x19, 0x8f,
	0x65, 0xed, 0xec, 0x79, 0x81, 0x74, 0xc6, 0x22, 0x63, 0x1f, 0x84, 0x73, 0xb3, 0x3d, 0x08, 0x13,
	0x93, 0xf9, 0xcc, 0x07, 0xe1, 0xd7, 0xcc, 0x3b, 0x72, 0xa1, 0x79, 0x99, 0xd1, 0xb7, 0xdc, 0xd5,
	0xec, 0x83, 0x76, 0x96, 0x17, 0xdd, 0x77, 0x51, 0x01, 0x59, 0x48, 0x6c, 0x58, 0xbd, 0xc8, 0x08,
	0x9a, 0xf2, 0x82, 0x33, 0x37, 0x7a, 0xa0, 0x49, 0x16, 0x4a, 0x49, 0x12, 0x56, 0xc3, 0x17, 0x1a,
	0x42, 0x28, 0x6c, 0xaa, 0x30, 0x22, 0xcf, 0xce, 0x4e, 0x75, 0x0b, 0x15, 0xbb, 0x9b, 0x23, 0x81,
	0xa0, 0x1c, 0x89, 0x48, 0x2c, 0x2e, 0x7e, 0x3f, 0xb6, 0x52, 0x74, 0x6d, 0x95, 0xe4, 0x08, 0x31,
	0xee, 0xc1, 0xd6, 0x9a, 0x14, 0x28, 0x6c, 0x07, 0x09, 0x9f, 0x04, 0x41, 0xc7, 0x4a, 0x40, 0x1a,
	0x3c, 0x9f, 0x04, 0x7c, 0xba, 0x79, 0x01, 0x5b, 0xbe, 0x9b, 0x94, 0x9d, 0xda, 0xad, 0x80, 0x51,
	0x36, 0x6b, 0x46, 0x43, 0x11, 0xf3, 0x9b, 0xad, 0x41, 0x97, 0xf3, 0xcc, 0x4d, 0x6c, 0x09, 0xba,
	0xcc, 0x93, 0xb9, 0x8d, 0xc5, 0xd2, 0x57, 0x5a, 0xe1, 0xae, 0xb7, 0x46, 0x5a, 0xae, 0x43, 0xf9,
	0x81, 0xc8, 0x8e, 0x3d, 0x7b, 0x1a, 0x02, 0x41, 0x99, 0x18, 0xdb, 0x60, 0xeb, 0x62, 0x13, 0x2a,
	0x3c, 0x03, 0x38, 0x88, 0xae, 0xe2, 0xce, 0x97, 0xa9, 0xc9, 0xbe, 0xd4, 0x95, 0xc9, 0x54, 0xe2,
	0xae, 0x6d, 0x70, 0x66, 0x13, 0xde, 0x8f, 0x72, 0xf7, 0x05, 0x82, 0x7e, 0xe2, 0x0b, 0x87, 0xf7,
	0x15, 0x06, 0x08, 0x55, 0x74, 0xbb, 0x12, 0xf6, 0xce, 0xba, 0xe8, 0xfb, 0x5e, 0x8e, 0x94, 0x37,
	0xca, 0x91, 0x50, 0x04, 0xdb, 0x6c, 0x7e, 0xa1, 0x9d, 0xbd, 0x9c, 0x1e, 0xbf, 0x0c, 0x66, 0x95,
	0x10, 0x30, 0x4d, 0x4d, 0x9c, 0x57, 0xa7, 0x0e, 0x4a, 0x18, 0x19, 0xbf, 0x0d, 0x21, 0xe3, 0xb3,
	0x78, 0x2a, 0x49, 0x7c, 0x0c, 0xf0, 0xf4, 0x36, 0xc1, 0xc2, 0x23, 0xb0, 0xea, 0xee, 0xed, 0x95,
	0xae, 0x64, 0x7c, 0xd4, 0x20, 0xaf, 0x46, 0xec, 0x01, 0xb3, 0x22, 0x1f, 0xe3, 0x10, 0xf2, 0xcb,
	0x4d, 0x0d, 0xa1, 0x03, 0x78, 0x9b, 0x14, 0x9a, 0xaf, 0x96, 0x0c, 0x58, 0xd8, 0x01, 0x18, 0xe0,
	0x69, 0xda, 0x1c, 0x7d, 0xcf, 0x40, 0xea, 0xe8, 0x75, 0xd0, 0xf3, 0xa6, 0xce, 0x7c, 0x93, 0xbc,
	0x7b, 0x36, 0x35, 0x70, 0x7a, 0x76, 0xaa, 0x7b, 0x53, 0x45, 0xaa, 0xeb, 0xf3, 0x54, 0xff, 0x21,
	0x6d, 0x28, 0x01, 0x2d, 0xf0, 0x5e, 0x02, 0x2a, 0x05, 0x00, 0x89, 0x41, 0xce, 0xbf, 0x81, 0x72,
	0x77, 0xd7, 0x7b, 0x2a, 0x49, 0x74, 0x09, 0x3c, 0x15, 0x0c, 0x10, 0x9e, 0x48, 0x26, 0x8e, 0x26,
	0xe3, 0x83, 0x86, 0xdd, 0x85, 0x76, 0xf6, 0xb2, 0x96, 0xe8, 0xd7, 0xb7, 0x0a, 0x9d, 0x9b, 0x84,
	0x2b, 0xf2, 0x6f, 0xa1, 0x45, 0xbb, 0x21, 0x6e, 0x11, 0x18, 0x84, 0xe0, 0xa8, 0x63, 0x04, 0x24,
	0x3c, 0x4d, 0xb1, 0xd0, 0x43, 0x9c, 0x0d, 0x13, 0xa9, 0xce, 0xbb, 0xd1, 0x22, 0xbf, 0xdc, 0x64,
	0x86, 0x0c, 0x04, 0x9d, 0x30, 0x80, 0x84, 0x75, 0x33, 0x07, 0x47, 0x66, 0x4e, 0x8e, 0xcc, 0x39,
	0x1c, 0x52, 0x8f, 0xdf, 0x8e, 0xf2, 0xf4, 0xbf, 0xf0, 0x90, 0x96, 0x1b, 0xb9, 0xc6, 0x36, 0x38,
	0x29, 0x50, 0x28, 0x06, 0x44, 0xf3, 0x8e, 0x88, 0xd6, 0xe6, 0x3d, 0x28, 0xcf, 0x27, 0x07, 0xc1,
	0x44, 0x05, 0x38, 0x7a, 0x12, 0xcb, 0x9a, 0x00, 0x85, 0x75, 0xc9, 0xf8, 0xa8, 0x7a, 0xf7, 0xe0,
	0x9c, 0xe3, 0xa2, 0x35, 0xf9, 0x5a, 0x84, 0xe0, 0x6f, 0x3c, 0x36, 0xde, 0x0c, 0xfa, 0xcb, 0x80,
	0x85, 0x62, 0x40, 0x37, 0xef, 0xe8, 0x98, 0xfa, 0xfc, 0xdb, 0x28, 0x0f, 0x1b, 0x54, 0x87, 0xe5,
	0x28, 0xe6, 0xf4, 0xf3, 0xc0, 0x90, 0x9e, 0x02, 0x8d, 0xc8, 0xa3, 0xc9, 0x78, 0x22, 0x79, 0xf7,
	0xac, 0x3a, 0x7e, 0x88, 0xbe, 0x16, 0xd8, 0x6c, 0xfa, 0x68, 0x0b, 0xfe, 0x0b, 0x0e, 0x15, 0xf8,
	0x68, 0xba, 0x84, 0x48, 0xd1, 0xaa, 0xec, 0xaf, 0x04, 0xe4, 0x1a, 0x62, 0x12, 0x41, 0x10, 0xcd,
	0x15, 0x36, 0xb2, 0x62, 0x31, 0x08, 0xdb, 0x8c, 0x43, 0x78, 0x34, 0x35, 0x70, 0x5a, 0x1d, 0x3d,
	0x95, 0x1a, 0x6c, 0x07, 0x4b, 0x79, 0xc3, 0x24, 0xe4, 0x28, 0x8d, 0xa9, 0x6e, 0x36, 0xa3, 0xe2,
	0x1d, 0x28, 0xb2, 0x68, 0xd6, 0x11, 0x89, 0x45, 0x6d, 0x0d, 0xdd, 0xbf, 0xfa, 0xc7, 0x84, 0xee,
	0x5f, 0xf3, 0x80, 0xa1, 0xfb, 0xd7, 0xbe, 0x87, 0x96, 0xdb, 0xe7, 0x9e, 0x85, 0x01, 0xdf, 0x68,
	0x0d, 0xdf, 0x3d, 0x4f, 0x1e, 0x0d, 0x96, 0x39, 0x6f, 0x54, 0xc4, 0x8f, 0xd0, 0x5e, 0xa7, 0x71,
	0xd7, 0x0b, 0x1f, 0xd8, 0x62, 0x63, 0x6a, 0x03, 0xb7, 0x92, 0xd3, 0x9f, 0xaa, 0xe3, 0x13, 0x33,
	0xd3, 0xfd, 0x7e, 0xb9, 0x25, 0xd4, 0x44, 0x9e, 0x46, 0xee, 0xc5, 0xda, 0xb4, 0xf1, 0xbe, 0x64,
	0xfc, 0x0b, 0xa0, 0x1a, 0xe0, 0xa3, 0x04, 0x0f, 0x03, 0xd4, 0x65, 0x0c, 0xe4, 0x59, 0x48, 0xfb,
	0x3d, 0x33, 0x78, 0x3c, 0x75, 0x65, 0xb2, 0x58, 0x5d, 0x86, 0x72, 0xeb, 0xbc, 0x91, 0x7d, 0xfc,
	0xdb, 0x68, 0x51, 0xd4, 0x1b, 0xd9, 0x47, 0x19, 0x0a, 0x1c, 0x33, 0x9e, 0x80, 0x84, 0xd2, 0xe4,
	0xe4, 0x24, 0x26, 0x66, 0xa6, 0xa5, 0xd0, 0xdd, 0x69, 0x2d, 0x31, 0x9e, 0x8c, 0xf7, 0x92, 0x50,
	0x4d, 0xb8, 0x1c, 0x24, 0x68, 0x89, 0xb4, 0xe2, 0xff, 0x12, 0xe5, 0xe9, 0x7f, 0x31, 0x59, 0x3e,
	0x71, 0x98, 0x35, 0x0a, 0x14, 0x24, 0xd2, 0xcc, 0xa0, 0x6d, 0xa0, 0x63, 0xb4, 0x04, 0x99, 0x06,
	0x61, 0x1d, 0x9b, 0x73, 0xd6, 0x85, 0x4c, 0x18, 0xbc, 0x85, 0x63, 0xf0, 0xe6, 0x70, 0xa8, 0x91,
	0x14, 0xa4, 0x46, 0xbb, 0x24, 0x8a, 0x9d, 0xdf, 0x4f, 0x9f, 0x5c, 0x81, 0xe7, 0xf8, 0xd7, 0x38,
	0x89, 0x10, 0x79, 0x72, 0x2d, 0x64, 0x47, 0xfc, 0x9d, 0xab, 0x32, 0xec, 0x92, 0x0a, 0x3d, 0xd5,
	0x9e, 0x3a, 0x8f, 0xb8, 0xcd, 0xf3, 0x9e, 0x25, 0xce, 0xe5, 0xe2, 0xda, 0x9d, 0x6e, 0x77, 0x55,
	0x6d, 0xad, 0xb4, 0x78, 0xb3, 0xe8, 0xd9, 0xb6, 0x53, 0xaa, 0x92, 0x16, 0xd7, 0x79, 0xb6, 0x57,
	0xed, 0xd8, 0x59, 0x27, 0x2d, 0xdd, 0xbc, 0x43, 0x72, 0x57, 0xd5, 0x55, 0x49, 0xdb, 0x3d, 0xd5,
	0x62, 0x5d, 0x15, 0x7d, 0x6a, 0xfd, 0xbd, 0x99, 0xfa, 0x08, 0xd8, 0x0f, 0x9c, 0x5a, 0x86, 0xa6,
	0x3e, 0x7a, 0x11, 0xfa, 0x06, 0x65, 0xa5, 0xf9, 0x61, 0x8f, 0x5c, 0x9e, 0x39, 0x7e, 0x1a, 0xde,
	0xa6, 0xe0, 0x05, 0x56, 0xeb, 0xeb, 0x4f, 0x5d, 0x4a, 0xd0, 0xcf, 0x6b, 0xa6, 0x47, 0x7a, 0x01,
	0x2d, 0x8c, 0x44, 0xbd, 0x61, 0x4b, 0xdc, 0x0e, 0x80, 0x08, 0x3c, 0xe0, 0xa6, 0xce, 0x11, 0xfa,
	0xd6, 0x85, 0x22, 0x7e, 0x03, 0x5a, 0x20, 0x07, 0xfd, 0x84, 0xad, 0xc6, 0x47, 0x45, 0xff, 0x6d,
	0xb4, 0x48, 0x4d, 0x7e, 0xaa, 0x9d, 0x3d, 0x4f, 0x5a, 0xe8, 0x05, 0xfc, 0x36, 0xb4, 0x44, 0xc6,
	0xcf, 0xa7, 0x86, 0x39, 0x0b, 0x84, 0x01, 0xc0, 0x0c, 0xb1, 0xb5, 0xc4, 0xc0, 0x01, 0x33, 0x22,
	0x38, 0xac, 0x55, 0xf8, 0x9d, 0xa8, 0xc0, 0xd7, 0x1c, 0x0e, 0xcb, 0xc1, 0x28, 0x0e, 0x83, 0x9d,
	0x67, 0x12, 0x41, 0x16, 0x2e, 0x3c, 0x41, 0x30, 0x8d, 0x7e, 0xa6, 0x0e, 0x8d, 0x10, 0x1b, 0xf2,
	0xc1, 0x76, 0x6d, 0xf4, 0xf2, 0xcc, 0x17, 0x97, 0x8c, 0x28, 0x7f, 0x4c, 0x7d, 0xde, 0x83, 0x0a,
	0x23, 0x51, 0xb9, 0xa9, 0x56, 0xfe, 0x43, 0xb3, 0x1c, 0xf4, 0xc9, 0x24, 0x42, 0x19, 0x76, 0x9f,
	0xb0, 0x14, 0xd8, 0x86, 0x88, 0xf1, 0x49, 0x96, 0x1a, 0x7c, 0x1b, 0xa7, 0x2f, 0xab, 0xdc, 0x64,
	0x3c, 0x50, 0x3c, 0x9e, 0xf9, 0x5e, 0x19, 0xd9, 0xb7, 0x41, 0xef, 0x95, 0x90, 0xbb, 0xad, 0x8a,
	0xf8, 0xa6, 0x13, 0x9a, 0x08, 0xaf, 0x03, 0x7a, 0xc8, 0x36, 0x01, 0xe8, 0x19, 0x5f, 0x43, 0x93,
	0xe3, 0x02, 0x20, 0x1c, 0x1a, 0x6c, 0x8f, 0xd6, 0xa6, 0xc6, 0xe3, 0xba, 0xfc, 0x00, 0x78, 0xf8,
	0x37, 0x58, 0xcb, 0xc8, 0x02, 0x33, 0x65, 0x22, 0x63, 0x19, 0x49, 0x67, 0x82, 0xb3, 0xfa, 0x63,
	0xde, 0x86, 0x35, 0x86, 0x7c, 0x83, 0x15, 0x0e, 0x0a, 0x19, 0x0c, 0xa6, 0x70, 0x60, 0xc5, 0x90,
	0xf1, 0x4c, 0xcc, 0x70, 0xcf, 0x4b, 0xb2, 0x9a, 0x53, 0xc2, 0x16, 0xc3, 0xb4, 0x35, 0x99, 0x48,
	0x58, 0xcc, 0x29, 0x1b, 0xbc, 0x91, 0x28, 0xe4, 0x5c, 0x25, 0x6c, 0x01, 0x18, 0x34, 0x9a, 0x60,
	0x81, 0x4f, 0xc6, 0x8f, 0x68, 0xd7, 0x87, 0xad, 0xc4, 0xd5, 0x2c, 0x67, 0xcd, 0x29, 0x97, 0x65,
	0x35, 0xa7, 0x84, 0xb1, 0x93, 0x54, 0xb0, 0x09, 0x93, 0xf9, 0x6e, 0x44, 0x4b, 0xf7, 0x84, 0xc2,
	0x3e, 0xd9, 0x30, 0x12, 0x33, 0x3c, 0x89, 0xb0, 0x05, 0x81, 0xad, 0x48, 0xd8, 0x48, 0xbe, 0x97,
	0xe1, 0xc6, 0x07, 0xce, 0x95, 0xa9, 0xc9, 0x4e, 0x6d, 0xf4, 0x22, 0x25, 0x72, 0x24, 0xbd, 0x53,
	0xef, 0x55, 0xb5, 0xf3, 0xb6, 0x64, 0xc3, 0xc0, 0xf7, 0x70, 0xa8, 0xd0, 0x17, 0x6a, 0x6c, 0x0c,
	0x05, 0x6b, 0xbc, 0x61, 0x6f, 0x63, 0xa4, 0x68, 0x05, 0xde, 0x35, 0xcf, 0x64, 0xdd, 0x35, 0x6e,
	0xa6, 0x22, 0x6c, 0x1e, 0x2c, 0xd7, 0x5a, 0x10, 0x08, 0x1b, 0x20, 0x70, 0x3b, 0x7d, 0x94, 0x01,
	0x43, 0xca, 0xf4, 0x9d, 0x11, 0x7d, 0xcf, 0xc1, 0xc3, 0xa3, 0xa1, 0x0e, 0xbf, 0x30, 0x13, 0x53,
	0x24, 0x4b, 0x6b, 0xde, 0x0d, 0xd4, 0x96, 0x61, 0x31, 0x70, 0x2c, 0x44, 0x0a, 0x14, 0x8a, 0x58,
	0x6a, 0x6b, 0xc9, 0xe0, 0x45, 0xeb, 0xf0, 0xd5, 0x08, 0x05, 0x43, 0x7e, 0xd9, 0x53, 0xb3, 0x2d,
	0x10, 0xd1, 0xd9, 0x0a, 0xfd, 0x30, 0xe1, 0x38, 0xd7, 0x0c, 0x58, 0x78, 0x0c, 0x34, 0x5d, 0xe4,
	0x43, 0x7c, 0xda, 0x93, 0x9c, 0x1e, 0x4a, 0x0d, 0xb6, 0x7b, 0x6a, 0xc0, 0x5b, 0x4e, 0x62, 0xaa,
	0xf2, 0xbb, 0xad, 0x31, 0xe6, 0xc1, 0x3e, 0x15, 0x9b, 0xd8, 0x5b, 0x62, 0xcc, 0x6f, 0x80, 0xc0,
	0xf5, 0x58, 0x6b, 0x40, 0x2d, 0xa3, 0xc8, 0x36, 0xc3, 0xb1, 0x53, 0x52, 0x83, 0xed, 0x4c, 0x7d,
	0x4b, 0x18, 0xfa, 0xb5, 0xd5, 0x08, 0x99, 0x87, 0x32, 0xcb, 0x3d, 0xec, 0xb4, 0xde, 0xc3, 0xab,
	0xec, 0x1f, 0x48, 0x6f, 0x6c, 0xcb, 0x9f, 0x91, 0xf1, 0xb9, 0x1e, 0x48, 0xbf, 0x76, 0x8c, 0x53,
	0xc4, 0x1e, 0x0e, 0x1d, 0xe1, 0x9c, 0xf8, 0x6a, 0x15, 0x5a, 0x39, 0x36, 0x43, 0x13, 0xb5, 0x3b,
	0x82, 0x9f, 0xe9, 0x83, 0xf0, 0x30, 0x1e, 0xd3, 0x4e, 0x5d, 0x50, 0x6f, 0xb4, 0xc3, 0xa4, 0x6d,
	0xa4, 0x43, 0x67, 0xe4, 0x0c, 0x9b, 0x0f, 0x33, 0xd2, 0x13, 0x26, 0x32, 0xb3, 0x53, 0x9d, 0xda,
	0xc0, 0x2d, 0xb5, 0xbf, 0x33, 0x99, 0x38, 0xe6, 0x6d, 0x0a, 0x24, 0xe3, 0x84, 0x5d, 0x64, 0x93,
	0x96, 0xcd, 0x4e, 0x75, 0x15, 0xff, 0x1f, 0xf9, 0x28, 0x17, 0x13, 0xcc, 0xe7, 0x2c, 0x91, 0xce,
	0x20, 0x56, 0x0e, 0x16, 0xef, 0x0b, 0x2d, 0x44, 0x16, 0x64, 0xf7, 0xb7, 0xd0, 0x22, 0x70, 0xc5,
	0x20, 0xf7, 0x37, 0xf0, 0xf8, 0x00, 0x12, 0x9e, 0x66, 0x4d, 0x51, 0xc0, 0x55, 0x96, 0xde, 0xe1,
	0x46, 0xce, 0xa1, 0xa6, 0x80, 0x44, 0xaa, 0xf3, 0x2f, 0xa1, 0xdc, 0x86, 0x40, 0x70, 0x1f, 0xb9,
	0x8c, 0x41, 0x49, 0xac, 0x03, 0x84, 0x22, 0x78, 0xad, 0x81, 0x6a, 0x44, 0xb4, 0xee, 0x8a, 0xa5,
	0x8e, 0x8f, 0x48, 0xb8, 0x9c, 0x6f, 0x44, 0x8b, 0x9a, 0xe0, 0x84, 0x81, 0xd5, 0x8a, 0x23, 0xdb,
	0x07, 0xdc, 0xc0, 0x9e, 0x2d, 0x7c, 0xad, 0x90, 0x46, 0xc2, 0x33, 0x64, 0x5e, 0xc6, 0xeb, 0x28,
	0x3d, 0x5e, 0xfb, 0xe4, 0x03, 0xf7, 0x62, 0xad, 0xf8, 0xb3, 0xa9, 0xe3, 0x13, 0x12, 0xa9, 0xcf,
	0xbf, 0x84, 0x16, 0xe2, 0x28, 0x89, 0x6c, 0x60, 0x1e, 0x80, 0x08, 0xab, 0xd3, 0xe3, 0x97, 0x01,
	0x1b, 0xb1, 0x87, 0xc3, 0x31, 0x17, 0x25, 0x28, 0xe5, 0x37, 0x18, 0xb7, 0xf2, 0x22, 0xc6, 0xd2,
	0x09, 0x6e, 0xe5, 0xc2, 0x6c, 0xf7, 0x71, 0x09, 0xdc, 0xc7, 0x60, 0x1a, 0xb2, 0x46, 0x11, 0x57,
	0xc2, 0x7d, 0x5c, 0x98, 0x79, 0x13, 0x6f, 0xb6, 0xdf, 0xc4, 0x79, 0x66, 0xa0, 0x37, 0xdb, 0x4d,
	0x5c, 0x38, 0xdf, 0x1d, 0xac, 0x98, 0x56, 0x68, 0x10, 0xe6, 0xe6, 0x13, 0x5d, 0x62, 0x30, 0x58,
	0xa2, 0x12, 0x98, 0x9a, 0x19, 0x37, 0x1c, 0x3f, 0x90, 0x51, 0x61, 0xa1, 0x7a, 0x47, 0x5d, 0x6d,
	0x9d, 0x28, 0xe1, 0x90, 0xe0, 0xae, 0xf0, 0x1b, 0x12, 0x32, 0x01, 0x3f, 0x8a, 0x59, 0x7a, 0xdf,
	0x64, 0x96, 0x90, 0xa9, 0xf1, 0xa3, 0xcc, 0xd2, 0xf3, 0x30, 0x2a, 0x1b, 0xb3, 0xc4, 0x5e, 0xa9,
	0xc0, 0x26, 0x11, 0xed, 0x3b, 0x66, 0x9c, 0x4c, 0x4e, 0xc9, 0x63, 0xb9, 0x91, 0x0a, 0x8c, 0xc8,
	0x7c, 0xcf, 0x58, 0x6e, 0x24, 0x42, 0x18, 0xbf, 0xe7, 0x5e, 0x7a, 0x0b, 0x21, 0x9d, 0x4c, 0x6e,
	0x97, 0xa3, 0x7b, 0x43, 0x86, 0xeb, 0x32, 0x36, 0x8b, 0x62, 0xc0, 0xc2, 0xc3, 0xfa, 0xdf, 0x94,
	0x64, 0x25, 0x27, 0x3f, 0x4b, 0x5d, 0x68, 0x55, 0x0f, 0x4f, 0xe3, 0xa0, 0x7b, 0x66, 0x35, 0xbe,
	0x92, 0xa1, 0xd5, 0x70, 0xc5, 0x96, 0x28, 0xe2, 0xd3, 0x0c, 0xad, 0xb6, 0xe1, 0xc9, 0x4e, 0xac,
	0x37, 0xa3, 0xc2, 0xc8, 0xbe, 0x40, 0xd3, 0x8e, 0xe0, 0x66, 0x6f, 0xa0, 0x41, 0x86, 0xe8, 0x2b,
	0x79, 0x70, 0xd9, 0x5b, 0x0a, 0x84, 0x65, 0x34, 0xd6, 0x69, 0xfa, 0xce, 0x57, 0xe9, 0xbb, 0x87,
	0x25, 0x4b, 0xf1, 0xda, 0x57, 0x50, 0xc1, 0x0f, 0x25, 0x75, 0x47, 0x38, 0x45, 0x3c, 0xc4, 0xa1,
	0x83, 0x9c, 0x13, 0x53, 0x17, 0xe1, 0x8f, 0x2c, 0x97, 0xa5, 0x1f, 0xb6, 0x23, 0x23, 0xc9, 0xe9,
	0x21, 0x83, 0x54, 0x75, 0xb3, 0xd9, 0x82, 0xa8, 0x35, 0x33, 0x68, 0x3e, 0x71, 0x56, 0xad, 0x36,
	0x6d, 0xf4, 0x32, 0x34, 0xa1, 0x94, 0x44, 0x1b, 0x4a, 0xa8, 0xa7, 0x47, 0x66, 0x0e, 0xf7, 0x68,
	0x27, 0x6e, 0xd0, 0x27, 0x5b, 0x9d, 0x5d, 0x66, 0x9e, 0x8a, 0x53, 0xa3, 0x5d, 0xf7, 0x62, 0x6d,
	0xc5, 0xc3, 0x0b, 0xd0, 0xe2, 0xba, 0x7d, 0x32, 0xce, 0xb7, 0xf9, 0x02, 0x5a, 0xb0, 0xab, 0xc6,
	0x4d, 0xa8, 0x1c, 0x5e, 0x12, 0xfd, 0xb7, 0x50, 0x94, 0x9a, 0x3e, 0xa6, 0x8d, 0x7d, 0x4d, 0x13,
	0x0f, 0x98, 0x29, 0xb1, 0xf5, 0x62, 0x9d, 0x38, 0xba, 0x3d, 0x95, 0x92, 0x25, 0x90, 0x98, 0x0e,
	0x10, 0x0a, 0xc1, 0x5d, 0x02, 0x5a, 0x4b, 0x18, 0xc6, 0x57, 0xd9, 0x93, 0x75, 0xc2, 0xce, 0xa2,
	0x40, 0x61, 0x2d, 0x54, 0x57, 0xbb, 0x3b, 0xd4, 0xfe, 0x6b, 0x10, 0x15, 0xcc, 0x53, 0xa3, 0x0e,
	0xdd, 0x50, 0xcf, 0xc6, 0x98, 0xbc, 0x9e, 0x2f, 0x59, 0xf3, 0x7a, 0x82, 0x45, 0xa6, 0x71, 0x26,
	0x79, 0x82, 0x02, 0x6f, 0x6e, 0x43, 0xbc, 0x22, 0x07, 0xa7, 0x02, 0x2d, 0xf6, 0x31, 0x19, 0x77,
	0x8c, 0x04, 0xab, 0x04, 0x66, 0x36, 0x55, 0x4c, 0x36, 0xd1, 0x28, 0xb4, 0xbd, 0xf8, 0x2d, 0xfa,
	0x9e, 0x17, 0xbf, 0xc5, 0xf6, 0x17, 0xbf, 0x8a, 0x97, 0x14, 0xf1, 0x05, 0x24, 0x38, 0x8d, 0xe5,
	0x16, 0x9e, 0x85, 0x2f, 0x0b, 0x57, 0x5a, 0xdd, 0xd6, 0x2a, 0x72, 0xe1, 0xc1, 0x08, 0x3a, 0x15,
	0xb5, 0x93, 0xe4, 0xfd, 0x2b, 0x1e, 0xe0, 0x50, 0x21, 0x69, 0x04, 0xce, 0x68, 0xab, 0xd0, 0x42,
	0xec, 0xc9, 0x06, 0x31, 0xc2, 0x25, 0xf8, 0xa1, 0xef, 0x41, 0xfd, 0xf3, 0xc1, 0x7e, 0xc3, 0x9f,
	0xe6, 0x07, 0xa4, 0x46, 0xad, 0xd0, 0xbf, 0x07, 0x7a, 0xca, 0x69, 0xe9, 0x50, 0x58, 0x55, 0xb7,
	0xb5, 0xca, 0xa1, 0x7f, 0x40, 0x36, 0x1f, 0x61, 0xf1, 0x99, 0x32, 0x2c, 0xd3, 0x9b, 0x82, 0xa7,
	0x24, 0xff, 0x81, 0x3f, 0xc6, 0xb1, 0xdc, 0x38, 0x67, 0xda, 0x17, 0x32, 0xdc, 0xb8, 0x8f, 0x71,
	0x52, 0x82, 0x1d, 0xeb, 0x72, 0xd7, 0x96, 0x6d, 0x7d, 0xb9, 0xb6, 0x6c, 0x23, 0xfe, 0xaf, 0x44,
	0x3d, 0x74, 0x5a, 0xed, 0x30, 0x12, 0x9d, 0x9e, 0xbc, 0x9d, 0x3a, 0x73, 0x4b, 0xeb, 0xbd, 0x0c,
	0x51, 0xe5, 0x29, 0x16, 0x7d, 0x3f, 0xeb, 0xdb, 0xdb, 0xd0, 0x56, 0x0c, 0xc5, 0x20, 0x57, 0x19,
	0x68, 0xe7, 0xd7, 0xb3, 0xec, 0xfd, 0x5b, 0xa8, 0x80, 0xfc, 0x60, 0x7c, 0xbd, 0x4b, 0x70, 0xe4,
	0x46, 0x06, 0x2e, 0x14, 0xc2, 0xb0, 0xd8, 0x70, 0xa5, 0x5c, 0x51, 0x2c, 0x4f, 0x62, 0x2b, 0xf1,
	0x11, 0xc6, 0x75, 0x68, 0x81, 0xe1, 0xf9, 0xbe, 0x9d, 0x71, 0x1c, 0x12, 0xc9, 0x7b, 0x11, 0x64,
	0xef, 0x8a, 0x75, 0xe8, 0x73, 0xc4, 0x39, 0xec, 0x8c, 0xf0, 0x3a, 0xea, 0xf4, 0x4d, 0xf5, 0xd3,
	0x1e, 0x38, 0x1c, 0x34, 0xd8, 0x39, 0x2c, 0x2c, 0x30, 0xcf, 0x90, 0xe6, 0xda, 0xc1, 0x78, 0xf4,
	0xbc, 0x6d, 0x4b, 0xc2, 0xf3, 0x0a, 0xde, 0xef, 0x24, 0xce, 0x1f, 0x6f, 0x3e, 0x50, 0x0d, 0x8d,
	0x40, 0xac, 0xbf, 0xef, 0x5c, 0x0f, 0x85, 0x57, 0x2f, 0xe7, 0xb2, 0x24, 0xf8, 0xa1, 0xf1, 0xff,
	0x24, 0x23, 0xa4, 0xdf, 0x42, 0xe3, 0x5d, 0x51, 0x30, 0x42, 0xfa, 0xad, 0x27, 0x3b, 0x91, 0x09,
	0xec, 0x17, 0xf0, 0xc3, 0x34, 0x92, 0xf1, 0x23, 0x64, 0x91, 0x70, 0x4c, 0x07, 0x63, 0xa4, 0x24,
	0xe8, 0x9f, 0xc5, 0xe5, 0x6d, 0x91, 0xe1, 0xf2, 0xb6, 0x9a, 0x15, 0xa3, 0xf2, 0x8c, 0x37, 0x16,
	0x9c, 0x28, 0x3e, 0xdb, 0x00, 0x19, 0xa1, 0x6a, 0xa7, 0x45, 0x83, 0xbc, 0xd8, 0x88, 0x7c, 0xb1,
	0xd6, 0xa2, 0x41, 0x2e, 0x04, 0xdd, 0x31, 0x28, 0x8e, 0xe7, 0xc4, 0xca, 0xaa, 0x92, 0x23, 0xa8,
	0x40, 0x0e, 0xb6, 0x04, 0xc2, 0xa1, 0x20, 0x4d, 0x27, 0x9a, 0xef, 0x7a, 0x1b, 0xe7, 0xfb, 0x63,
	0xe0, 0xc2, 0xb3, 0x64, 0x19, 0xb0, 0xd6, 0xad, 0xd4, 0x01, 0x1b, 0xf5, 0xfd, 0xa6, 0x70, 0xc8,
	0x5f, 0xea, 0xf0, 0xcb, 0xbb, 0x9b, 0xeb, 0x4b, 0x1d, 0x91, 0xa8, 0xb7, 0xfe, 0x03, 0x48, 0x79,
	0x9f, 0xab, 0xff, 0x2d, 0x2d, 0xc4, 0x05, 0x52, 0xae, 0x5e, 0x4b, 0x62, 0xb1, 0xf1, 0xef, 0x59,
	0x72, 0x26, 0xe6, 0x1b, 0x0f, 0x45, 0xcf, 0x58, 0x72, 0x26, 0x16, 0xb1, 0x49, 0x12, 0xa9, 0xd6,
	0x71, 0xdf, 0xcb, 0x91, 0xef, 0x5c, 0x4b, 0xc3, 0x85, 0xd2, 0x82, 0x7d, 0x2f, 0x47, 0xa4, 0x85,
	0x58, 0x03, 0x6f, 0xc9, 0xa0, 0xb8, 0x03, 0x15, 0x04, 0x22, 0x55, 0xfb, 0xf5, 0x6d, 0x1a, 0x68,
	0x01, 0x96, 0x20, 0x8f, 0x04, 0x88, 0x67, 0xe0, 0xc2, 0x23, 0xa6, 0x72, 0x13, 0x2f, 0x57, 0xea,
	0xe8, 0x75, 0xb5, 0xe7, 0x02, 0x21, 0x73, 0x6c, 0x4d, 0xfe, 0x6f, 0x38, 0x7a, 0x62, 0xf0, 0x70,
	0x81, 0x09, 0xb8, 0xc8, 0x29, 0x62, 0x07, 0xe7, 0x64, 0x4b, 0x84, 0x16, 0xf6, 0xa1, 0x80, 0x2e,
	0xd2, 0x1e, 0xd9, 0x2f, 0x43, 0x80, 0xa8, 0x52, 0x47, 0x24, 0x10, 0xac, 0x6f, 0x90, 0x3f, 0x28,
	0x75, 0x98, 0x40, 0xc3, 0x3e, 0x32, 0x91, 0x6e, 0x3d, 0x3e, 0xd3, 0x76, 0x85, 0xa6, 0xaa, 0x82,
	0xaa, 0x50, 0x9a, 0x3a, 0x7a, 0x3d, 0x75, 0xed, 0x28, 0x2d, 0xa2, 0x2c, 0x15, 0xd4, 0xf9, 0xce,
	0xb5, 0x26, 0xbc, 0x4a, 0x42, 0x26, 0x4a, 0x69, 0x11, 0x14, 0x48, 0xec, 0xe8, 0xf8, 0x93, 0x1c,
	0x5a, 0x69, 0xd6, 0x71, 0x53, 0xb2, 0x04, 0x9c, 0x08, 0xf6, 0x9e, 0xc9, 0x56, 0x2e, 0x6c, 0x25,
	0xb6, 0xb3, 0x86, 0xab, 0x9b, 0x6d, 0xa8, 0x98, 0xbd, 0x88, 0x81, 0x15, 0x0d, 0xdc, 0xd0, 0x38,
	0x95, 0x01, 0x08, 0x64, 0x50, 0xf1, 0xcd, 0x50, 0x24, 0x6a, 0xa4, 0x6d, 0xcd, 0xd2, 0x03, 0x7f,
	0x91, 0xa3, 0x76, 0xe5, 0x4b, 0x30, 0x87, 0x5e, 0x9a, 0x45, 0xd5, 0x69, 0xa1, 0xac, 0x16, 0xdb,
	0xf2, 0xdf, 0x29, 0xe2, 0xdb, 0xd4, 0xb6, 0x7c, 0x0b, 0x1d, 0x15, 0x00, 0x4c, 0x59, 0xbc, 0x3f,
	0xa1, 0xc6, 0xaf, 0x80, 0x39, 0x10, 0x6b, 0x02, 0x04, 0x01, 0x16, 0x92, 0xf1, 0x1e, 0xf5, 0x9b,
	0x93, 0xf0, 0x24, 0x28, 0x6c, 0x4c, 0xc6, 0xbf, 0xf8, 0xce, 0xb5, 0x70, 0x90, 0xcb, 0x59, 0xbe,
	0x8a, 0x5a, 0xa3, 0x57, 0x98, 0x4a, 0x8d, 0xa5, 0xc6, 0x6d, 0xb9, 0xca, 0x54, 0x6a, 0xe4, 0x53,
	0x75, 0xc6, 0x77, 0xae, 0x45, 0xe1, 0xdc, 0xe5, 0x90, 0x9a, 0x9f, 0xe8, 0x35, 0x5a, 0x39, 0xb4,
	0x34, 0x14, 0x6c, 0x38, 0x00, 0xd3, 0xc0, 0xb1, 0x5a, 0x20, 0x60, 0xca, 0xbb, 0x8a, 0xb8, 0xcb,
	0x69, 0x2b, 0x12, 0x2a, 0x93, 0x93, 0x1d, 0x6c, 0x0e, 0x3d, 0x86, 0x69, 0xed, 0x01, 0x0d, 0x6c,
	0x6a, 0xe8, 0xbc, 0x3a, 0x46, 0xee, 0x64, 0xa8, 0x99, 0xa9, 0x95, 0xb7, 0x61, 0xe5, 0x67, 0x39,
	0x94, 0xbf, 0xdb, 0x17, 0x21, 0x06, 0x56, 0xa0, 0x6b, 0x28, 0xff, 0xde, 0x75, 0x76, 0x19, 0x2d,
	0x60, 0xa9, 0xcf, 0x73, 0x8a, 0x78, 0x86, 0x73, 0x9a, 0x88, 0x84, 0x1e, 0x8e, 0x1d, 0xea, 0xcf,
	0x60, 0x91, 0x07, 0xbb, 0x11, 0x48, 0x2e, 0x49, 0x19, 0x0f, 0x37, 0x22, 0x56, 0x7f, 0x4a, 0xe6,
	0xd0, 0x78, 0x8d, 0x43, 0x05, 0x32, 0x63, 0x54, 0xc6, 0xe3, 0x39, 0x6f, 0xfa, 0xde, 0x39, 0x33,
	0x46, 0x59, 0x30, 0xeb, 0x7e, 0x4e, 0x11, 0xbb, 0x39, 0x27, 0x8b, 0x4c, 0xf8, 0x4b, 0xdb, 0xb4,
	0xff, 0x79, 0xec, 0xcc, 0xe8, 0x64, 0x67, 0x8e, 0x9f, 0xb6, 0x4c, 0x93, 0x1d, 0x0b, 0xef, 0x36,
	0xf3, 0xb6, 0xaf, 0x34, 0x25, 0x14, 0x03, 0x26, 0x3c, 0x62, 0x37, 0xbe, 0x49, 0xc6, 0x8f, 0xc0,
	0xc3, 0xad, 0xa7, 0xd2, 0xcc, 0xda, 0xfe, 0x0d, 0x87, 0x10, 0x2c, 0x09, 0xa6, 0x72, 0xa0, 0x69,
	0x39, 0xcb, 0x29, 0xe2, 0x69, 0xce, 0xc9, 0x14, 0x08, 0x47, 0x2c, 0xca, 0x08, 0xf3, 0x59, 0xb1,
	0xe3, 0xba, 0x36, 0xd4, 0xa5, 0x5f, 0xee, 0x27, 0x6f, 0x83, 0x61, 0xec, 0xec, 0x54, 0xf7, 0x76,
	0xb1, 0x5a, 0xdc, 0x52, 0x55, 0xf9, 0xa1, 0x7b, 0xdb, 0xce, 0xda, 0xba, 0x2a, 0xa9, 0x04, 0xbe,
	0xb5, 0xd6, 0x75, 0x2a, 0x35, 0x36, 0x0c, 0x58, 0xd6, 0xd3, 0x8d, 0xab, 0x9d, 0x1a, 0x77, 0x78,
	0xaa, 0x2b, 0xab, 0x6a, 0xaa, 0xaa, 0x2b, 0xab, 0xaa, 0xeb, 0x68, 0x1b, 0x1b, 0xed, 0x83, 0xa8,
	0x65, 0xa9, 0xc9, 0x5b, 0xda, 0x91, 0x4b, 0xeb, 0x25, 0x66, 0x60, 0x7c, 0x05, 0x5a, 0xd4, 0xe8,
	0xc5, 0xdc, 0xec, 0x6a, 0xac, 0x76, 0xc2, 0x4c, 0x3b, 0x01, 0x09, 0xab, 0x01, 0x01, 0xfc, 0x72,
	0x50, 0x55, 0x13, 0x29, 0xe6, 0x7f, 0x85, 0x16, 0x06, 0x43, 0x7e, 0x39, 0x82, 0xb3, 0xc4, 0x12,
	0x16, 0x1a, 0x20, 0xc2, 0x4a, 0x68, 0xa9, 0xff, 0x30, 0xdb, 0x41, 0x19, 0x7f, 0x8a, 0x43, 0xcb,
	0x48, 0x7e, 0xdb, 0x5a, 0x39, 0x1a, 0x0d, 0x04, 0xeb, 0x23, 0x24, 0x83, 0xd0, 0xba, 0x0c, 0x83,
	0x6d, 0x4b, 0x35, 0x57, 0xb5, 0x22, 0xba, 0x9d, 0xf6, 0xb6, 0xc2, 0x46, 0xca, 0xf6, 0xa6, 0x26,
	0x87, 0xd4, 0xf3, 0x89, 0xd4, 0x70, 0x8c, 0x46, 0xc7, 0x02, 0x7f, 0x05, 0xb0, 0x25, 0xd4, 0x4e,
	0x4c, 0xd0, 0xbc, 0x52, 0x17, 0xb9, 0x9c, 0x3c, 0x4e, 0xb2, 0xa3, 0xe2, 0xff, 0x03, 0x87, 0x56,
	0x91, 0x21, 0xb8, 0xbc, 0x91, 0x80, 0x8f, 0x8e, 0xaf, 0x28, 0x7b, 0x4e, 0x3e, 0x77, 0x66, 0x5d,
	0x5d, 0xba, 0x0f, 0x39, 0xb3, 0x62, 0x11, 0xde, 0x21, 0xc4, 0x07, 0x8f, 0xd1, 0x16, 0xc7, 0x0b,
	0xee, 0x3d, 0xf2, 0x2e, 0x87, 0x8d, 0x51, 0x58, 0xff, 0xfb, 0x96, 0x26, 0x5f, 0x6a, 0x14, 0xe7,
	0x6d, 0x35, 0xa6, 0x42, 0x66, 0x66, 0x9d, 0x50, 0xd6, 0x6e, 0xf9, 0xff, 0xcc, 0xa1, 0x35, 0xa4,
	0x40, 0xf4, 0xb7, 0x78, 0x83, 0x3e, 0x99, 0xce, 0x0b, 0x0c, 0xf1, 0x9e, 0x9e, 0x63, 0x5e, 0xd6,
	0xda, 0x24, 0x62, 0xc2, 0x43, 0x7a, 0x5d, 0x39, 0x13, 0x97, 0xe0, 0x27, 0x46, 0x6a, 0x77, 0xcf,
	0xcc, 0x9c, 0xba, 0xcd, 0xda, 0xa6, 0xd1, 0xd9, 0xa9, 0xfd, 0xba, 0x34, 0x16, 0x68, 0x6a, 0x89,
	0x40, 0x31, 0xce, 0x8c, 0x6d, 0x31, 0xe8, 0x21, 0x41, 0x48, 0xb1, 0x64, 0x99, 0xf5, 0xdb, 0x49,
	0x73, 0xcc, 0x84, 0xff, 0x5b, 0x0e, 0x52, 0x91, 0xd1, 0xa9, 0xad, 0xcd, 0x6e, 0xda, 0x58, 0x6d,
	0xd6, 0xc1, 0x49, 0xdc, 0x7a, 0x39, 0xa7, 0xa5, 0x9d, 0xf0, 0x27, 0xd6, 0xd6, 0xce, 0x36, 0x01,
	0x36, 0x30, 0xfb, 0xec, 0x54, 0x37, 0x71, 0x66, 0x62, 0xbc, 0x97, 0xe0, 0x23, 0xe9, 0x35, 0x4f,
	0x5e, 0x48, 0x75, 0x4d, 0xa8, 0x9d, 0xd7, 0x66, 0x86, 0x62, 0xda, 0xcd, 0x36, 0x26, 0xe9, 0xbe,
	0x35, 0xd0, 0x1e, 0xe6, 0xf1, 0x89, 0x49, 0x2c, 0x56, 0x91, 0x49, 0x96, 0xd1, 0xf0, 0x6d, 0x1c,
	0x5a, 0x06, 0x3a, 0x3a, 0x49, 0xc6, 0xc1, 0xf6, 0x1a, 0x1a, 0xb0, 0xe7, 0x6e, 0x9e, 0xeb, 0xb7,
	0x8a, 0xb8, 0xd3, 0x69, 0x2f, 0x13, 0x5c, 0xc0, 0xa1, 0xcd, 0x1c, 0xee, 0x49, 0x7f, 0xd6, 0x01,
	0xe7, 0xd4, 0x0c, 0xfc, 0x61, 0x68, 0x0b, 0x41, 0xba, 0x4f, 0x5f, 0xbc, 0x06, 0x44, 0x45, 0x3b,
	0xd8, 0xa1, 0x1e, 0xfa, 0x3a, 0x19, 0x3f, 0xaa, 0x0d, 0x75, 0x69, 0x03, 0x9d, 0x92, 0x1d, 0x29,
	0x7f, 0x3a, 0x6b, 0xd8, 0xd9, 0x47, 0xcd, 0x3c, 0x83, 0x59, 0xe2, 0xc8, 0xd5, 0xce, 0x33, 0x04,
	0x70, 0x40, 0xa7, 0x7a, 0x05, 0x23, 0xb8, 0xdc, 0xf7, 0x8f, 0x2c, 0x4b, 0xf4, 0xb9, 0xdf, 0xd2,
	0xe4, 0xdc, 0x98, 0x02, 0x3f, 0x66, 0x26, 0x82, 0x63, 0xe1, 0xc2, 0x53, 0x2c, 0x91, 0x20, 0x89,
	0xd3, 0x9a, 0x83, 0x7e, 0x39, 0xdc, 0xe0, 0x3d, 0x50, 0x1e, 0x6a, 0xc1, 0xff, 0xae, 0x97, 0xd8,
	0x26, 0xfc, 0xd7, 0x1c, 0x7a, 0xc8, 0xdb, 0x1c, 0x0d, 0x6d, 0x91, 0x83, 0x3a, 0xf3, 0x25, 0x6f,
	0xc7, 0x53, 0xc1, 0xaf, 0x9f, 0xd8, 0x73, 0x96, 0xe4, 0x30, 0x99, 0xab, 0x8e, 0xf0, 0x81, 0xe5,
	0xb2, 0x63, 0xcc, 0x84, 0xd4, 0x3b, 0x5f, 0xaa, 0xa3, 0xa7, 0xd4, 0xa1, 0x11, 0x58, 0x16, 0xc3,
	0x50, 0x10, 0x73, 0x20, 0xaf, 0x3a, 0x8c, 0x34, 0xe4, 0x27, 0x6f, 0x97, 0x3a, 0xe0, 0x08, 0x80,
	0x3c, 0x4a, 0xa8, 0xb0, 0x11, 0x71, 0x51, 0x9a, 0xab, 0x5f, 0xfe, 0x9f, 0x38, 0x94, 0x6f, 0xd4,
	0x8a, 0x14, 0x3d, 0x9e, 0xfd, 0x7d, 0x24, 0x7b, 0x38, 0x78, 0x23, 0x52, 0x93, 0xd9, 0x5e, 0x38,
	0x69, 0x67, 0x55, 0x1c, 0x73, 0xf4, 0x6b, 0x0c, 0xbc, 0xd4, 0x91, 0x19, 0x43, 0x98, 0xdd, 0x05,
	0xc6, 0xac, 0x40, 0x18, 0xa7, 0x1d, 0x41, 0x45, 0x7b, 0xa6, 0x7a, 0xed, 0xf8, 0x38, 0xce, 0x32,
	0xd9, 0xa3, 0xf6, 0x33, 0x11, 0xde, 0xb1, 0xab, 0xa2, 0x64, 0x0e, 0x92, 0xbf, 0xc5, 0x11, 0xef,
	0x1f, 0xcc, 0x25, 0x3a, 0xee, 0x93, 0x4d, 0xab, 0x32, 0x5a, 0x00, 0xc3, 0x82, 0x99, 0x79, 0x13,
	0x8d, 0xb0, 0x13, 0xe2, 0x32, 0x99, 0x91, 0xbf, 0x6e, 0x0e, 0x18, 0xf9, 0xf3, 0x81, 0x1a, 0xc8,
	0x91, 0xdd, 0x1f, 0x36, 0x87, 0x1b, 0xca, 0x3f, 0x96, 0x77, 0xef, 0x0d, 0x85, 0xf6, 0x7d, 0x88,
	0xe3, 0xbb, 0x95, 0x37, 0x85, 0x03, 0x2d, 0x81, 0x06, 0xd9, 0x5f, 0x2f, 0x03, 0x20, 0x35, 0xda,
	0xc5, 0x36, 0x96, 0xcc, 0x1e, 0xf8, 0xdf, 0x32, 0x76, 0xe8, 0x4f, 0x98, 0xc6, 0xb9, 0xa6, 0x1d,
	0x7a, 0x19, 0xe9, 0x9c, 0x18, 0xcc, 0x96, 0xb8, 0x45, 0x70, 0xa8, 0xa1, 0x86, 0xfa, 0xc4, 0xb9,
	0x08, 0xdb, 0x5d, 0xae, 0x67, 0xec, 0xd1, 0x5b, 0xd0, 0x52, 0xdc, 0x8d, 0x29, 0xb0, 0x14, 0x9b,
	0x59, 0x4f, 0x6d, 0x45, 0xc2, 0x2b, 0x96, 0x3c, 0xd0, 0x83, 0xed, 0xc0, 0x95, 0x19, 0x1a, 0x16,
	0xed, 0xc2, 0xe1, 0xf4, 0x38, 0x51, 0xd8, 0x94, 0x12, 0xae, 0xe3, 0xe4, 0xed, 0xd4, 0xe7, 0x09,
	0x35, 0x36, 0x25, 0xd9, 0x50, 0xf1, 0x5e, 0xb4, 0x2c, 0x10, 0x81, 0x77, 0x1c, 0x23, 0x2f, 0xf5,
	0x93, 0x66, 0x9e, 0x68, 0x7b, 0x99, 0x91, 0x47, 0x23, 0x19, 0x4f, 0x90, 0xa4, 0xce, 0xb8, 0xcf,
	0x52, 0x4b, 0x86, 0x5e, 0x5b, 0x1b, 0xbb, 0x61, 0xdc, 0x53, 0x73, 0x1a, 0xc6, 0x11, 0x86, 0x6b,
	0x2e, 0xc3, 0xb8, 0xcb, 0x1c, 0x5a, 0x46, 0x76, 0x88, 0xdb, 0x1b, 0x95, 0xeb, 0x43, 0xe1, 0x03,
	0x45, 0x4f, 0x63, 0x64, 0xf8, 0x58, 0xdb, 0xcb, 0x04, 0xd9, 0x94, 0x53, 0x3b, 0xaf, 0xd9, 0x94,
	0xe1, 0x38, 0x81, 0xd2, 0x21, 0x2a, 0xec, 0xc1, 0xac, 0xb4, 0x53, 0xe3, 0x10, 0x07, 0xf9, 0x5e,
	0xac, 0x15, 0x56, 0xb8, 0x64, 0x77, 0x73, 0xa0, 0xc1, 0x2f, 0x87, 0xcb, 0x03, 0x38, 0xbb, 0xb6,
	0x1c, 0x5e, 0xcf, 0x18, 0x09, 0x43, 0x5d, 0xc9, 0xde, 0x2f, 0x5f, 0x8d, 0xf2, 0x03, 0x91, 0x0f,
	0x23, 0x7b, 0xbd, 0x61, 0xd9, 0x5f, 0xf4, 0x0c, 0x5e, 0x4c, 0x6c, 0x61, 0x65, 0x42, 0x2d, 0xcb,
	0x78, 0x33, 0x99, 0xb8, 0x96, 0x65, 0x19, 0xf3, 0x02, 0x91, 0x5a, 0x5c, 0x99, 0xff, 0x07, 0x0e,
	0x2d, 0xc5, 0xec, 0xab, 0xe8, 0xc3, 0x5a, 0x3f, 0x4f, 0x65, 0xd1, 0xb3, 0x78, 0xda, 0xc4, 0x7f,
	0xc8, 0x56, 0x28, 0x7c, 0x41, 0x58, 0x57, 0xca, 0x8b, 0x24, 0x13, 0xc7, 0xd2, 0xb7, 0xae, 0xa8,
	0x7d, 0x77, 0x3c, 0x95, 0xa5, 0x54, 0x7c, 0x4a, 0x7d, 0x9e, 0xb8, 0x17, 0x6b, 0x83, 0x35, 0x51,
	0x8f, 0x9c, 0x4f, 0x1f, 0x9c, 0xd6, 0xa7, 0xd4, 0x7b, 0x47, 0xed, 0x3b, 0x41, 0xeb, 0xab, 0x87,
	0x47, 0xd3, 0xe3, 0xad, 0xf7, 0x62, 0x6d, 0xa0, 0x17, 0x4a, 0x26, 0x8e, 0xa9, 0x43, 0x09, 0xed,
	0xf4, 0x78, 0x32, 0x7e, 0x34, 0x35, 0x79, 0x3e, 0x19, 0x8f, 0x01, 0x77, 0x8c, 0xfb, 0x87, 0x16,
	0x3a, 0xc3, 0x13, 0x33, 0xb9, 0x64, 0xa8, 0x9e, 0x4a, 0x7c, 0x95, 0x1a, 0x1b, 0x06, 0x9a, 0x60,
	0xc3, 0x2d, 0xd9, 0x06, 0xff, 0x63, 0xac, 0xfd, 0xdf, 0x45, 0x4b, 0xad, 0x72, 0x5c, 0x96, 0xd6,
	0x9b, 0xac, 0x8f, 0x9c, 0x19, 0xcc, 0x86, 0x6b, 0xeb, 0x8e, 0xa6, 0x48, 0x4d, 0x43, 0x73, 0x7d,
	0x20, 0xc8, 0xa2, 0x7e, 0x1f, 0x2d, 0xb7, 0x8b, 0x4b, 0x3f, 0x1d, 0x72, 0xc3, 0x4b, 0x81, 0x12,
	0xb6, 0x07, 0x7a, 0x5a, 0xe8, 0xca, 0x51, 0xc4, 0x8e, 0x1c, 0xd4, 0x96, 0xe3, 0xcc, 0x50, 0xcc,
	0x0a, 0x7b, 0xd8, 0x9b, 0x20, 0x3d, 0x7e, 0x87, 0xf0, 0x35, 0x58, 0xda, 0x22, 0x7b, 0x04, 0x1b,
	0x8f, 0xc2, 0xe5, 0x36, 0x3b, 0xd5, 0xcd, 0x0a, 0x5f, 0xf7, 0x62, 0x6d, 0xf0, 0xc8, 0xc3, 0x8a,
	0xe7, 0xe9, 0xf1, 0x3b, 0x70, 0x25, 0xc2, 0x6b, 0x8f, 0xd6, 0x7b, 0x59, 0xed, 0xfb, 0xec, 0x5b,
	0xce, 0x54, 0xbc, 0x7e, 0xcb, 0xb1, 0xaa, 0xd3, 0x6f, 0x39, 0xaa, 0xd0, 0xfc, 0x96, 0x23, 0x6a,
	0xc8, 0x6f, 0x39, 0x53, 0xdd, 0xf7, 0x2d, 0xc7, 0x28, 0xe9, 0xbe, 0xe5, 0x58, 0xed, 0xd9, 0xb7,
	0x1c, 0xa3, 0xee, 0xfa, 0x96, 0x63, 0x75, 0x55, 0x66, 0x1f, 0x50, 0x66, 0x28, 0x20, 0x8a, 0xff,
	0x87, 0x05, 0x68, 0x85, 0x6d, 0x11, 0x22, 0x4d, 0xfc, 0x06, 0x94, 0xeb, 0x0b, 0xf9, 0x65, 0x92,
	0x5d, 0x13, 0xf2, 0xaf, 0xeb, 0x00, 0x61, 0x59, 0xfa, 0xee, 0x71, 0xf5, 0xcc, 0x39, 0x22, 0x5e,
	0x5f, 0x68, 0x95, 0x30, 0x98, 0xaf, 0x30, 0x5f, 0xda, 0x72, 0x98, 0x07, 0x03, 0xe3, 0xa5, 0x8d,
	0x67, 0x5b, 0x19, 0x2e, 0x33, 0xc6, 0x43, 0xda, 0x26, 0xb4, 0x28, 0x2c, 0x47, 0x9a, 0x1b, 0xa2,
	0x24, 0x37, 0x0c, 0x8e, 0x2e, 0x4a, 0x40, 0x42, 0x21, 0xb4, 0x4c, 0x4d, 0x7e, 0xaa, 0x9d, 0x1b,
	0x92, 0x08, 0x94, 0xaf, 0x41, 0xb9, 0x7e, 0x6f, 0xd4, 0x8b, 0xd5, 0xbc, 0x05, 0xc2, 0x43, 0x73,
	0x49, 0x2c, 0xc4, 0x5d, 0xc8, 0x1b, 0xf5, 0x0a, 0x45, 0xe9, 0x8b, 0xd7, 0x48, 0x7e, 0x3b, 0x23,
	0xd0, 0x17, 0x75, 0x17, 0xf2, 0x46, 0xbd, 0xfc, 0x5f, 0xa2, 0xdc, 0xa8, 0x37, 0xb2, 0x0f, 0xab,
	0x79, 0xb3, 0x3c, 0xe4, 0xd7, 0x79, 0x8d, 0x28, 0xce, 0xb8, 0x9a, 0xf0, 0xe6, 0xff, 0xcb, 0xde,
	0x9f, 0x40, 0x47, 0x75, 0xac, 0x8b, 0xa1, 0xf0, 0xd9, 0xad, 0x01, 0x51, 0xcc, 0x9b, 0x49, 0x16,
	0x06, 0x9a, 0x36, 0xb6, 0x61, 0x5b, 0x62, 0xd8, 0x9e, 0xb0, 0x6c, 0x73, 0xbc, 0x35, 0x80, 0x75,
	0x98, 0xe4, 0x16, 0x60, 0x1f, 0xfb, 0xf8, 0xf8, 0x34, 0x52, 0x23, 0xb7, 0x91, 0xba, 0x75, 0xba,
	0x5b, 0xd8, 0x1c, 0x5f, 0x9f, 0x2b, 0x06, 0x81, 0x04, 0x12, 0x82, 0xcd, 0x2c, 0x8b, 0xc9, 0x66,
	0xf2, 0x20, 0x04, 0xc6, 0x06, 0xa1, 0xc1, 0x64, 0xf8, 0x6f, 0x92, 0x9b, 0x3f, 0x79, 0xc9, 0x25,
	0xc9, 0xca, 0xcd, 0x4b, 0xf2, 0xd6, 0xbd, 0x71, 0xef, 0x6e, 0x29, 0x13, 0xf7, 0xbd, 0xf5, 0xf2,
	0x56, 0x9e, 0x5f, 0x6e, 0xde, 0x5b, 0xbb, 0xbe, 0xaa, 0xda, 0xb5, 0xa7, 0x96, 0x18, 0x8d, 0x6c,
	0xaf, 0xe5, 0x65, 0xd4, 0x35, 0xed, 0xaa, 0xaf, 0xbe, 0xfa, 0xea, 0xab, 0x6f, 0xe4, 0x25, 0x2c,
	0xa0, 0x98, 0xba, 0xd5, 0xd7, 0x04, 0x58, 0x92, 0xec, 0x68, 0xbe, 0xd5, 0xd7, 0x0c, 0xcc, 0x30,
	0x11, 0x30, 0xe1, 0x74, 0xd3, 0x4c, 0xbd, 0x6e, 0x58, 0x45, 0x9d, 0xe8, 0xf0, 0xe3, 0xf1, 0x0a,
	0x97, 0xab, 0x4a, 0x09, 0x2a, 0x92, 0xec, 0x3b, 0x21, 0x4f, 0xe5, 0xf1, 0x31, 0xd5, 0xbe, 0x03,
	0xe0, 0x71, 0x53, 0xc0, 0x70, 0xbf, 0x29, 0x50, 0x28, 0xde, 0x14, 0xf0, 0x3a, 0x7c, 0xe7, 0x04,
	0x34, 0x6e, 0x45, 0xfd, 0x06, 0xc2, 0xea, 0xf8, 0x83, 0xbf, 0x17, 0x57, 0x23, 0xb4, 0x89, 0x15,
	0x10, 0x4d, 0xc3, 0x02, 0x55, 0x99, 0x2b, 0x71, 0xc5, 0xf2, 0x34, 0x18, 0xdf, 0x28, 0x81, 0xcc,
	0x52, 0x58, 0x70, 0x3d, 0x51, 0xf0, 0x73, 0x4d, 0x0b, 0x4b, 0x55, 0xa5, 0x08, 0xbd, 0x22, 0x99,
	0xbf, 0x22, 0xfb, 0x88, 0x1b, 0xed, 0xb7, 0x07, 0xb4, 0xc6, 0xb3, 0x10, 0xf4, 0xc8, 0x3a, 0xd8,
	0x4d, 0x81, 0x1b, 0xc6, 0xd7, 0xe8, 0x41, 0xe3, 0xf9, 0x21, 0x1e, 0x7a, 0xa4, 0x2b, 0x5c, 0xab,
	0x2a, 0xaf, 0xa1, 0x35, 0x92, 0x65, 0xd6, 0xf2, 0xe3, 0xd6, 0xd5, 0xc2, 0xb6, 0x27, 0x1b, 0xce,
	0x43, 0xff, 0x21, 0x36, 0xec, 0x3f, 0x08, 0x68, 0x42, 0x19, 0xbe, 0x29, 0x71, 0x7e, 0x59, 0x9c,
	0xb8, 0x6e, 0x8d, 0x21, 0xb5, 0x11, 0x8c, 0x38, 0xd6, 0x4c, 0x6a, 0xf3, 0x64, 0xa2, 0x67, 0x3f,
	0x65, 0x5c, 0xe6, 0x01, 0x97, 0x56, 0xe8, 0x65, 0xa9, 0x74, 0x0b, 0xbd, 0x95, 0x35, 0xb1, 0x82,
	0x0f, 0x3e, 0xf8, 0x60, 0xbe, 0x21, 0xc1, 0x59, 0x6e, 0xc2, 0x01, 0x8f, 0x61, 0xc2, 0x33, 0x0c,
	0x1c, 0x30, 0x6d, 0xbe, 0x3e, 0x11, 0xb4, 0x48, 0xb2, 0xce, 0x58, 0x9e, 0x99, 0xe8, 0xd9, 0x4f,
	0xa9, 0x16, 0xcf, 0x68, 0x41, 0xfe, 0x40, 0xdf, 0xbf, 0x99, 0x8e, 0x26, 0xd2, 0x2e, 0x4c, 0x05,
	0x76, 0xdc, 0x41, 0x05, 0x86, 0xa3, 0xda, 0x73, 0x2a, 0xb0, 0xc8, 0x50, 0x2a, 0xb0, 0x64, 0xf3,
	0x1e, 0xfd, 0x50, 0xf5, 0x1f, 0x1a, 0x52, 0x11, 0x46, 0xbc, 0x52, 0x60, 0x76, 0x09, 0x9a, 0x36,
	0x12, 0x38, 0x72, 0xfa, 0x95, 0xfb, 0xa6, 0x0e, 0xb3, 0xf0, 0x73, 0x19, 0x77, 0xca, 0xcf, 0x55,
	0x72, 0x6a, 0x35, 0xd0, 0x71, 0x2d, 0x57, 0x95, 0x42, 0x4e, 0xad, 0xb6, 0x00, 0x94, 0x68, 0x38,
	0x86, 0x4c, 0xbe, 0xd7, 0xe4, 0x93, 0xd5, 0xb3, 0x9f, 0x18, 0xe9, 0x62, 0xed, 0x19, 0xb0, 0x21,
	0xdc, 0x7c, 0x0d, 0x35, 0xda, 0x1a, 0xa6, 0x46, 0x03, 0xa5, 0xd7, 0xf3, 0x43, 0xaa, 0xd1, 0x5c,
	0xb4, 0x49, 0x54, 0x89, 0xf6, 0xa6, 0x5d, 0xe1, 0xf5, 0x92, 0xd5, 0x6e, 0x90, 0x9f, 0x2a, 0x28,
	0xbf, 0xd2, 0x68, 0xe7, 0x38, 0xe5, 0xd7, 0xeb, 0x0e, 0xca, 0xaf, 0xe7, 0x87, 0x50, 0x7e, 0xb9,
	0x8e, 0xfb, 0x83, 0xab, 0xbf, 0x7e, 0xe3, 0xa0, 0xfe, 0x7a, 0xe9, 0x36, 0xd4, 0x5f, 0x13, 0xa3,
	0xe3, 0x4d, 0xea, 0xaf, 0x5f, 0x98, 0x14, 0x60, 0x5b, 0xec, 0x0a, 0xb0, 0x31, 0x72, 0xde, 0x82,
	0xea, 0x48, 0xa4, 0xba, 0x26, 0xb8, 0xa0, 0x2e, 0x1a, 0x89, 0x47, 0x36, 0xd4, 0x6f, 0x5c, 0x50,
	0x14, 0x89, 0xd4, 0xe0, 0xc0, 0x49, 0xe0, 0xdd, 0x68, 0x52, 0x8e, 0xcd, 0x4f, 0xa3, 0x1c, 0x33,
	0x18, 0x65, 0xfd, 0x89, 0x6c, 0x56, 0x95, 0xfd, 0x43, 0x47, 0x55, 0xd9, 0x99, 0x87, 0x49, 0x55,
	0x96, 0x1b, 0x9d, 0xe6, 0xa8, 0x2a, 0xfb, 0x85, 0x59, 0x59, 0xc6, 0xa9, 0xa4, 0xc6, 0x3a, 0xab,
	0xa4, 0xac, 0x94, 0xee, 0x07, 0x50, 0x49, 0xbd, 0x68, 0xb5, 0xb3, 0x9d, 0xe3, 0xaa, 0x92, 0x62,
	0x04, 0x80, 0xe9, 0xa4, 0x2e, 0x63, 0xc2, 0x4c, 0x48, 0x3b, 0x89, 0xc7, 0x30, 0xdb, 0x6d, 0x91,
	0xa4, 0x59, 0x51, 0x54, 0x55, 0xaa, 0x25, 0xa3, 0x9b, 0xfc, 0x26, 0x79, 0xc1, 0xf4, 0xec, 0x07,
	0x23, 0x15, 0x39, 0x75, 0xbe, 0x15, 0x6e, 0x83, 0x42, 0x6f, 0xa2, 0x67, 0x7f, 0x59, 0x89, 0xa6,
	0xb6, 0x18, 0x17, 0x4b, 0xbe, 0x37, 0xd1, 0xdb, 0x9b, 0xdc, 0xd1, 0xa6, 0xbf, 0x8f, 0xce, 0xb7,
	0x6a, 0xad, 0x57, 0xb4, 0xb6, 0x2e, 0x16, 0xa4, 0xa8, 0xf7, 0x2c, 0xa5, 0xcf, 0xfa, 0xe3, 0x6f,
	0xd7, 0x4e, 0x26, 0x09, 0x36, 0x3e, 0x67, 0xd5, 0x51, 0x4c, 0x18, 0x71, 0x3a, 0x8a, 0x90, 0x59,
	0xc4, 0x37, 0x91, 0x12, 0xf7, 0x12, 0xb3, 0x88, 0xef, 0xd9, 0xe1, 0x88, 0xf8, 0xf2, 0xd9, 0x9c,
	0x48, 0x89, 0x59, 0xe6, 0x67, 0x16, 0x24, 0xb9, 0xe8, 0xfb, 0x6c, 0x48, 0xfc, 0x83, 0x0b, 0x92,
	0xec, 0xe2, 0x1e, 0xf1, 0x81, 0x88, 0x7b, 0x9c, 0x64, 0x28, 0x93, 0x1f, 0x76, 0x19, 0xca, 0x94,
	0xbb, 0x97, 0xa1, 0xbc, 0x8a, 0x46, 0x6d, 0x26, 0xde, 0xc5, 0x53, 0xe9, 0xab, 0xe1, 0x31, 0x89,
	0x96, 0xc9, 0xb9, 0x26, 0x08, 0x73, 0xc1, 0x10, 0xbe, 0x2f, 0xca, 0x8a, 0x66, 0x60, 0x82, 0x42,
	0x9a, 0x8a, 0x9f, 0x0a, 0x68, 0x74, 0x80, 0x09, 0x62, 0xa6, 0xb1, 0x10, 0x3d, 0x5b, 0x24, 0xa3,
	0x58, 0xae, 0xe1, 0xc7, 0x63, 0x72, 0x18, 0x7c, 0xc2, 0x41, 0xee, 0x41, 0xd1, 0x89, 0xea, 0x18,
	0x7a, 0x52, 0x9f, 0xf5, 0xbc, 0xe8, 0xd5, 0xfa, 0x0f, 0xc0, 0x9f, 0x58, 0x96, 0x0c, 0x75, 0x83,
	0x0d, 0xed, 0x03, 0x37, 0x76, 0x81, 0x88, 0x05, 0x4b, 0x67, 0x6c, 0xa3, 0xb0, 0x39, 0x1a, 0x13,
	0xb8, 0x17, 0x41, 0x13, 0xee, 0x4c, 0x1c, 0x01, 0xe9, 0x91, 0xd0, 0xd7, 0x82, 0x64, 0x63, 0x92,
	0xe5, 0x02, 0x78, 0x57, 0x31, 0x69, 0x3a, 0x7b, 0xbd, 0x02, 0xb4, 0x8a, 0x8a, 0x2b, 0x88, 0xde,
	0x1f, 0x53, 0xdb, 0x34, 0x92, 0x84, 0xfb, 0x26, 0x40, 0xf8, 0xe7, 0x1e, 0x34, 0xc9, 0x32, 0xed,
	0x87, 0x5f, 0x80, 0x50, 0x61, 0x11, 0x20, 0x58, 0x59, 0xa0, 0x8a, 0x78, 0xb4, 0xbe, 0x32, 0x0e,
	0x0e, 0x49, 0x20, 0x40, 0x98, 0x01, 0xe3, 0x98, 0x90, 0x54, 0x6d, 0x81, 0xa7, 0x3c, 0xc8, 0x10,
	0xd8, 0x23, 0xde, 0x06, 0x0d, 0x79, 0xaa, 0x85, 0x1a, 0x0d, 0xf1, 0x26, 0xec, 0xcc, 0x41, 0x13,
	0xc1, 0x0d, 0x8d, 0x7b, 0x2e, 0xad, 0xb7, 0xbf, 0x96, 0x96, 0x60, 0xab, 0x31, 0xe3, 0xb5, 0x94,
	0x43, 0xe9, 0xdb, 0xf7, 0x45, 0x33, 0xa3, 0x33, 0x1c, 0x59, 0xdc, 0xc2, 0x4c, 0xfd, 0x01, 0xc5,
	0x3f, 0x73, 0x2e, 0x7b, 0x50, 0x4e, 0x28, 0xb6, 0x2c, 0x12, 0xad, 0x0c, 0x56, 0x61, 0xd8, 0xe7,
	0x14, 0x1d, 0xf4, 0xa8, 0xca, 0x3e, 0x8f, 0xc4, 0x8a, 0xe5, 0xed, 0x1e, 0x1a, 0xfb, 0xba, 0x47,
	0x6b, 0xba, 0x0a, 0x91, 0xe0, 0x6d, 0xc9, 0xe9, 0xf9, 0x4a, 0x9c, 0xc1, 0xac, 0x41, 0xbb, 0x4e,
	0x7e, 0x9a, 0xef, 0x16, 0x96, 0x6a, 0x01, 0x4c, 0x0d, 0xd8, 0xd3, 0x8e, 0xc5, 0x8f, 0x67, 0x91,
	0x50, 0x40, 0x47, 0xca, 0x0f, 0xac, 0xed, 0xbf, 0x90, 0xec, 0x38, 0x39, 0xf0, 0xed, 0xf6, 0xc1,
	0x43, 0x37, 0x74, 0x7e, 0xa8, 0xbb, 0x31, 0xb5, 0x6f, 0xa7, 0x76, 0xed, 0x6c, 0xa2, 0xbf, 0x23,
	0xd1, 0xd7, 0x3e, 0x70, 0xe3, 0x63, 0x1d, 0xcc, 0x87, 0x6e, 0x68, 0xfb, 0xf6, 0x6a, 0x6d, 0x97,
	0x88, 0x23, 0x0e, 0xd6, 0xbb, 0xb2, 0x80, 0xd6, 0xc4, 0xc8, 0xa4, 0xbb, 0x35, 0xd1, 0xd7, 0x9e,
	0xfa, 0x62, 0x8f, 0xd6, 0xd4, 0x3b, 0xf0, 0xc9, 0x17, 0xfa, 0x38, 0x9f, 0xf5, 0x80, 0x24, 0x56,
	0x5f, 0xea, 0x99, 0x1d, 0x3a, 0xb1, 0xc6, 0x5f, 0x04, 0xd3, 0x58, 0x9c, 0x62, 0x87, 0xc2, 0x43,
	0x3c, 0xc9, 0x65, 0x3b, 0x83, 0x8d, 0xc2, 0xac, 0x12, 0x3c, 0xeb, 0x22, 0xaa, 0x52, 0x23, 0x39,
	0x54, 0xcb, 0xeb, 0x09, 0xda, 0x90, 0x20, 0x94, 0x38, 0x9c, 0xfe, 0x91, 0xab, 0xa9, 0xce, 0xc3,
	0xa9, 0x43, 0x67, 0x0b, 0xbd, 0x34, 0x8c, 0x75, 0x70, 0x1e, 0x9f, 0x2d, 0x7f, 0xbe, 0x37, 0x1a,
	0x8c, 0x07, 0x42, 0xe1, 0x79, 0x89, 0xde, 0xc6, 0xd4, 0xf9, 0xde, 0xc1, 0x63, 0x67, 0xf2, 0xc1,
	0x2f, 0x9b, 0x54, 0xe3, 0x90, 0x41, 0xf6, 0x6f, 0x89, 0x09, 0x62, 0x57, 0x04, 0x45, 0xf8, 0xa2,
	0x87, 0x74, 0xdf, 0x24, 0x17, 0x9b, 0xa5, 0x52, 0x3e, 0x23, 0xd8, 0x72, 0x2c, 0x33, 0x07, 0x26,
	0xa2, 0xa9, 0xd3, 0xf7, 0xa9, 0xb7, 0xd1, 0xb4, 0xa1, 0x05, 0x64, 0x47, 0x93, 0xcd, 0x0d, 0x60,
	0xd5, 0xc5, 0xf3, 0xaa, 0x00, 0x62, 0x08, 0x94, 0x9b, 0xe8, 0xed, 0x4d, 0xf4, 0x1f, 0x32, 0x1c,
	0x4c, 0xf0, 0x13, 0x54, 0xff, 0x46, 0xd7, 0x59, 0xd0, 0x08, 0x53, 0xa2, 0xbe, 0x97, 0xc2, 0x58,
	0xdb, 0x87, 0x03, 0xee, 0xb4, 0xb6, 0x69, 0xfb, 0x5a, 0x60, 0x7f, 0xf5, 0xa5, 0x5a, 0xa6, 0x2d,
	0xbe, 0x82, 0x72, 0x22, 0x75, 0x3a, 0xc3, 0x1e, 0xa1, 0x96, 0xca, 0xf8, 0x51, 0xcd, 0x0a, 0xe5,
	0xa9, 0x30, 0x5f, 0x72, 0xdd, 0x62, 0x87, 0xa2, 0x44, 0x4f, 0x8f, 0x9f, 0x35, 0x10, 0x9b, 0x04,
	0x34, 0xb9, 0xca, 0x7c, 0xd6, 0x2a, 0x23, 0x51, 0xf0, 0x65, 0x24, 0xa9, 0xa2, 0x9c, 0xea, 0xe5,
	0x97, 0x00, 0x8b, 0xb5, 0xfd, 0x47, 0x61, 0xd4, 0x7c, 0x2f, 0xc0, 0x8b, 0x00, 0x8b, 0x41, 0x8a,
	0x7c, 0x19, 0xab, 0xcf, 0xb5, 0x9e, 0x03, 0x00, 0x26, 0xbf, 0xd3, 0x90, 0xd4, 0xf2, 0xd9, 0x76,
	0xf4, 0x65, 0x91, 0x1f, 0x0a, 0x64, 0xd2, 0xbc, 0xfc, 0xd8, 0x77, 0x31, 0x03, 0x4d, 0xb2, 0x74,
	0x7a, 0xf8, 0x49, 0xf0, 0xfa, 0xe1, 0xc9, 0x70, 0xb1, 0xc1, 0x12, 0x90, 0xe0, 0x59, 0x84, 0x04,
	0x5f, 0xfb, 0x8a, 0x9c, 0x4c, 0x47, 0x49, 0xee, 0xef, 0x86, 0x21, 0xc9, 0xc5, 0xaa, 0xf3, 0x2c,
	0xbd, 0x59, 0x4c, 0x96, 0x78, 0xe0, 0xf2, 0x5e, 0x50, 0x54, 0xac, 0xdb, 0xc2, 0xc4, 0xba, 0x44,
	0x58, 0xfb, 0x8a, 0xaa, 0xbc, 0x8c, 0x5e, 0x94, 0xec, 0x20, 0x37, 0x63, 0x9b, 0x3b, 0x9d, 0xf7,
	0x5d, 0x9b, 0x8f, 0x26, 0x82, 0x36, 0x80, 0x23, 0xf0, 0xeb, 0xec, 0x04, 0xfe, 0x79, 0x6b, 0xe6,
	0x8a, 0x21, 0xc4, 0x61, 0x06, 0x5b, 0xc3, 0x3b, 0x6d, 0x3a, 0x88, 0xb1, 0x66, 0xa5, 0x17, 0x63,
	0x99, 0x85, 0x57, 0x71, 0x9b, 0x2d, 0xf7, 0x1b, 0xf7, 0xde, 0x96, 0x9b, 0x4c, 0xdc, 0x90, 0x42,
	0x3d, 0x6f, 0x31, 0xe6, 0x9e, 0x3d, 0x84, 0x14, 0x8a, 0x49, 0x9b, 0x2a, 0xcc, 0x26, 0xdb, 0x2f,
	0xdf, 0xa1, 0xc9, 0x36, 0x99, 0x10, 0xb1, 0xd9, 0x5e, 0x6a, 0x17, 0x61, 0x79, 0xdd, 0x6d, 0xb6,
	0xe9, 0x2e, 0x18, 0x62, 0xaa, 0x52, 0x07, 0x31, 0xd5, 0xe3, 0x43, 0x88, 0xa9, 0xc8, 0x28, 0xbc,
	0x50, 0xea, 0x2d, 0x27, 0xa1, 0xd4, 0x0b, 0x77, 0x2c, 0x94, 0x32, 0x0b, 0x9f, 0xde, 0x70, 0x10,
	0x3e, 0x2d, 0x51, 0x95, 0x67, 0x4d, 0xc2, 0xa7, 0x27, 0x2d, 0xc2, 0xa7, 0xb7, 0x36, 0x2d, 0x89,
	0xe5, 0x7b, 0xb1, 0xb4, 0xe9, 0x6d, 0x5e, 0x16, 0x65, 0x12, 0x3c, 0x6d, 0xba, 0x5d, 0xc1, 0xd3,
	0xdd, 0x58, 0x65, 0x7f, 0xe9, 0x28, 0x6a, 0x6a, 0x7e, 0x78, 0x44, 0x4d, 0x3f, 0x1e, 0xe3, 0x6b,
	0x2b, 0x0d, 0xfb, 0x01, 0x24, 0x5d, 0x45, 0x86, 0x4f, 0xf7, 0x78, 0x2a, 0xa1, 0x9f, 0x69, 0xf8,
	0x74, 0x8b, 0xec, 0xce, 0xd7, 0xf6, 0x1f, 0xa5, 0x32, 0x7a, 0xfa, 0x3e, 0xa5, 0xee, 0xdd, 0xff,
	0xc8, 0x70, 0x5e, 0x04, 0xc1, 0x51, 0x97, 0xa0, 0x2a, 0x1b, 0x99, 0xa7, 0xd4, 0x6f, 0xf8, 0x20,
	0x8e, 0xa0, 0xd7, 0x1b, 0xd8, 0xde, 0x0f, 0x3f, 0x8b, 0xfd, 0xa5, 0x38, 0x8c, 0xfe, 0xad, 0xbe,
	0x16, 0xe2, 0xa8, 0x78, 0xab, 0xaf, 0xa5, 0xa4, 0x74, 0x65, 0x29, 0x29, 0x5c, 0xa6, 0xac, 0x5c,
	0xe7, 0x2f, 0xbd, 0xd5, 0xd7, 0xc2, 0x22, 0x40, 0x28, 0x6b, 0xcb, 0xd6, 0xac, 0xa6, 0x8d, 0x4a,
	0x4b, 0xbe, 0x2f, 0x2a, 0x8e, 0x2a, 0xfe, 0x1c, 0x3a, 0x8e, 0xe1, 0xef, 0x98, 0x43, 0x47, 0x31,
	0x1c, 0x1e, 0xc7, 0x9b, 0x07, 0xf1, 0x8f, 0x22, 0x63, 0xf8, 0x7f, 0xc1, 0x3c, 0xb7, 0x86, 0x65,
	0xcb, 0x6d, 0xdb, 0xb6, 0x9f, 0x80, 0x2d, 0xb7, 0x6d, 0xcd, 0x23, 0xce, 0x96, 0x7b, 0x1d, 0xca,
	0x01, 0x9b, 0x45, 0x66, 0xcc, 0x8d, 0x09, 0x3f, 0x2b, 0x94, 0x25, 0xab, 0x35, 0xb7, 0x7e, 0x37,
	0xe2, 0x90, 0x38, 0xe0, 0xf2, 0xc5, 0x1b, 0x77, 0xb3, 0x5e, 0xe2, 0xd7, 0x4e, 0xd6, 0xdd, 0x24,
	0x47, 0x1b, 0x2f, 0x39, 0x6d, 0xb8, 0xe7, 0x92, 0xd3, 0x1f, 0xcc, 0xa6, 0x7b, 0x9f, 0x83, 0x71,
	0xf6, 0xb4, 0x61, 0x19, 0x67, 0x2f, 0xbb, 0x37, 0xc6, 0xd9, 0x76, 0xa3, 0xec, 0xff, 0xbf, 0x9b,
	0x51, 0xf6, 0xf4, 0xe1, 0x1b, 0x65, 0x47, 0x1f, 0xbc, 0x51, 0xf6, 0xed, 0x1b, 0x63, 0xe7, 0xfe,
	0x78, 0x8d, 0xb1, 0x1f, 0xf9, 0x51, 0x18, 0x63, 0x5b, 0x6c, 0x8d, 0xf3, 0xee, 0x9d, 0xad, 0xf1,
	0xd7, 0x02, 0x1a, 0xcd, 0xc4, 0xa4, 0xb9, 0x33, 0x86, 0x79, 0x37, 0x39, 0xea, 0x1d, 0x4a, 0xef,
	0xbb, 0xde, 0xa1, 0xd4, 0xd1, 0x80, 0xf5, 0xd1, 0xfb, 0x6c, 0xc0, 0x3a, 0xf3, 0x81, 0x68, 0x34,
	0x3e, 0xb2, 0x1b, 0xb0, 0xce, 0x1a, 0x92, 0x25, 0xbf, 0x6f, 0xc6, 0xad, 0xb3, 0xef, 0xa5, 0x71,
	0xab, 0xf7, 0x01, 0x29, 0x66, 0x82, 0x1f, 0x0c, 0x5f, 0x31, 0xf3, 0x1e, 0xaf, 0x98, 0x99, 0x33,
	0x24, 0xa0, 0xef, 0x4a, 0x69, 0x13, 0x37, 0x79, 0xdf, 0x83, 0x3d, 0xf4, 0x5a, 0x9d, 0x11, 0xe7,
	0xd3, 0x4e, 0x16, 0xf3, 0x46, 0x8a, 0x7c, 0x20, 0xbb, 0xfc, 0xe4, 0xa9, 0x3e, 0xad, 0xaf, 0x2d,
	0xd1, 0xdd, 0x33, 0x2f, 0x1e, 0xaa, 0x0d, 0x2e, 0x58, 0x1d, 0x79, 0x7f, 0xde, 0xfc, 0x05, 0xcb,
	0x22, 0xd1, 0xda, 0x40, 0x1c, 0x4a, 0xfc, 0xcb, 0x8a, 0x9f, 0x7e, 0xfa, 0xe9, 0x17, 0xe6, 0xcf,
	0x37, 0xf9, 0xf4, 0x17, 0x19, 0xea, 0xe6, 0xc7, 0x38, 0x26, 0x9c, 0xaa, 0x9b, 0x45, 0xa6, 0x6e,
	0x76, 0x60, 0xc2, 0xa9, 0xd6, 0xf9, 0x9c, 0x80, 0xc6, 0x83, 0xba, 0x8b, 0x6d, 0x26, 0x98, 0x3d,
	0xe3, 0x6c, 0x8c, 0x96, 0x2a, 0x39, 0xa4, 0xf5, 0x1f, 0xb0, 0xc0, 0x99, 0xa4, 0x98, 0xe8, 0xee,
	0xa1, 0x4a, 0x33, 0xac, 0x11, 0x4a, 0xbf, 0xc9, 0x86, 0x06, 0x7a, 0x21, 0xe8, 0x88, 0xf0, 0x2e,
	0x9b, 0x2c, 0x7e, 0xfd, 0x96, 0x4f, 0x3b, 0xd9, 0x16, 0x3f, 0xfe, 0xb3, 0x6d, 0xf1, 0xcf, 0xb6,
	0xc5, 0xa0, 0xcc, 0xfb, 0x77, 0x82, 0xaa, 0xfc, 0xa5, 0x80, 0xfe, 0x95, 0x20, 0xd9, 0x24, 0x7c,
	0xf2, 0xd7, 0x82, 0xa3, 0x75, 0x30, 0xdc, 0xd6, 0x03, 0x5d, 0x67, 0xc1, 0x34, 0x38, 0xd1, 0xdb,
	0xc8, 0x07, 0x74, 0x23, 0x59, 0xd8, 0xd4, 0x96, 0xc4, 0x8d, 0x8b, 0xc9, 0xce, 0x4f, 0x9d, 0x05,
	0xeb, 0xa7, 0x5b, 0x74, 0xf2, 0x80, 0xc3, 0x9b, 0xb0, 0x94, 0x46, 0xc4, 0x03, 0x05, 0xc7, 0x4b,
	0x61, 0x42, 0xcd, 0xd4, 0xc7, 0xdd, 0x5a, 0xe3, 0x15, 0x10, 0xba, 0xe1, 0x8f, 0x5e, 0x4b, 0x9e,
	0xba, 0x9e, 0x6c, 0xbd, 0x48, 0xb2, 0x26, 0x81, 0xeb, 0x0e, 0x0d, 0x0e, 0x63, 0x37, 0x55, 0xf6,
	0xfd, 0x13, 0x0f, 0x9a, 0x64, 0x59, 0xd7, 0xc8, 0xd3, 0xf6, 0xb9, 0xf0, 0xd2, 0x76, 0x6d, 0x1f,
	0x81, 0xfd, 0xbe, 0xbd, 0x76, 0x39, 0x73, 0x61, 0xb1, 0xaa, 0xbc, 0x82, 0x96, 0x4a, 0x76, 0x68,
	0xc8, 0xb9, 0x0e, 0xbb, 0xec, 0x22, 0x08, 0xfe, 0x4b, 0x01, 0x4d, 0xf5, 0x07, 0xe3, 0xd1, 0x2d,
	0xb6, 0x00, 0x21, 0xcf, 0xd9, 0xa5, 0xc1, 0xb9, 0x6e, 0xea, 0x3e, 0x5e, 0xdc, 0xfb, 0x32, 0xa7,
	0x11, 0xf1, 0x50, 0xd3, 0x9f, 0xa9, 0x9c, 0x46, 0x64, 0x34, 0x48, 0x44, 0x06, 0x1a, 0x1a, 0xc1,
	0x1d, 0x5d, 0xc8, 0xad, 0x32, 0xd4, 0x21, 0x85, 0xaf, 0xaa, 0x4a, 0x29, 0x2a, 0x96, 0x9c, 0x27,
	0x25, 0xcf, 0x82, 0x60, 0x39, 0x89, 0xee, 0x3d, 0x5a, 0xdb, 0x7e, 0xbb, 0xa1, 0xbc, 0x09, 0x53,
	0x3e, 0xcb, 0x40, 0xd3, 0x9c, 0x46, 0x79, 0xf8, 0xd1, 0x65, 0xd5, 0xf0, 0xd0, 0x05, 0x4f, 0x02,
	0xd0, 0x65, 0x2a, 0x10, 0x6a, 0x67, 0x85, 0xc4, 0xaf, 0x86, 0xa1, 0x90, 0x80, 0xb1, 0xb0, 0x69,
	0xb9, 0x31, 0x16, 0x1f, 0xb0, 0x8d, 0xa8, 0x1e, 0xd6, 0xa9, 0x8a, 0x1f, 0x95, 0x4b, 0x2e, 0x80,
	0x4d, 0xb3, 0x3f, 0xe9, 0x15, 0xce, 0xc7, 0x05, 0x34, 0x6e, 0x79, 0x30, 0xee, 0xa6, 0x6d, 0xf6,
	0xdc, 0x33, 0x6d, 0x73, 0xe1, 0x33, 0xaa, 0xb2, 0x18, 0x2d, 0x94, 0xcc, 0x5f, 0x93, 0x45, 0xb0,
	0x90, 0x77, 0xc5, 0xa5, 0x0b, 0x19, 0x68, 0x3c, 0xdf, 0xe3, 0x27, 0x87, 0x43, 0x41, 0x94, 0x85,
	0x79, 0x78, 0x82, 0x44, 0xb6, 0x38, 0x75, 0xa5, 0x3c, 0x83, 0x1f, 0xde, 0x18, 0x01, 0x01, 0x3a,
	0xf4, 0x91, 0xe7, 0x58, 0x46, 0xd6, 0x1a, 0xaf, 0x26, 0x7a, 0xc9, 0x4d, 0x40, 0xbe, 0x02, 0x2d,
	0x0b, 0x15, 0x55, 0x59, 0x8a, 0x5e, 0x92, 0x2c, 0xb0, 0xb6, 0x6c, 0x4f, 0x7a, 0x54, 0xfa, 0x90,
	0x5c, 0xcd, 0xdc, 0x64, 0xc4, 0x6a, 0x34, 0x96, 0xaa, 0x75, 0xf0, 0x9b, 0x12, 0xc8, 0x99, 0x4e,
	0x40, 0x25, 0x53, 0x05, 0x15, 0xa4, 0x68, 0x3d, 0x87, 0xb4, 0xcb, 0xdb, 0x58, 0xf8, 0x66, 0x5e,
	0xe3, 0x30, 0x2f, 0xbe, 0x29, 0xb8, 0x90, 0x05, 0x58, 0x9f, 0xef, 0x37, 0xf5, 0xf7, 0xb5, 0x0b,
	0x68, 0x52, 0xf1, 0xbb, 0xc1, 0xca, 0x4d, 0xd8, 0x59, 0xd3, 0x1f, 0xfc, 0x7d, 0x7d, 0x30, 0x16,
	0x17, 0x7f, 0x89, 0x72, 0x42, 0xe1, 0x70, 0x30, 0x5a, 0x56, 0x1e, 0xcb, 0x15, 0xb0, 0xb0, 0x08,
	0x3b, 0x86, 0xb0, 0x42, 0x79, 0x0a, 0xc9, 0x92, 0xb7, 0xb3, 0x31, 0xd5, 0xbf, 0x9f, 0x49, 0x8b,
	0x58, 0x7d, 0x61, 0x89, 0xaa, 0x28, 0xe8, 0x97, 0x92, 0x7d, 0x68, 0x79, 0x76, 0xf2, 0xd3, 0x86,
	0xe4, 0xc9, 0xb3, 0xfa, 0x03, 0x9a, 0x58, 0x48, 0x60, 0x2b, 0x9d, 0x0d, 0x95, 0x44, 0x02, 0x77,
	0x53, 0x60, 0xa3, 0xf8, 0xae, 0x66, 0x20, 0x91, 0x1f, 0x21, 0x56, 0x17, 0x09, 0xc7, 0x82, 0x0f,
	0x3b, 0x22, 0xd7, 0x30, 0x44, 0x76, 0x0e, 0xbf, 0x62, 0x5b, 0x10, 0x4e, 0xb6, 0xc7, 0xa5, 0xf6,
	0x04, 0xec, 0x9e, 0x0d, 0x83, 0x63, 0x40, 0x61, 0x90, 0xc1, 0x67, 0xf2, 0x37, 0x05, 0xb7, 0x24,
	0x8f, 0x76, 0x95, 0x95, 0x03, 0x9e, 0xe7, 0x55, 0xa0, 0xd1, 0xac, 0xfb, 0x1d, 0xc4, 0xbd, 0xd6,
	0x27, 0xe2, 0xc7, 0xf3, 0xe6, 0x59, 0xb2, 0xa5, 0xaa, 0xf2, 0x22, 0x7a, 0x41, 0x72, 0x00, 0x3e,
	0x85, 0x16, 0x71, 0xdd, 0xc6, 0x12, 0x7d, 0xfb, 0x25, 0xfd, 0x9d, 0x80, 0x90, 0x31, 0xb2, 0x58,
	0x8c, 0x46, 0x85, 0x62, 0xa5, 0x1f, 0x84, 0x62, 0x10, 0x58, 0x2c, 0x87, 0xc4, 0xd4, 0x20, 0x65,
	0xf2, 0x0c, 0x53, 0x52, 0x44, 0x8c, 0x0e, 0x54, 0x41, 0xd3, 0xe9, 0xa7, 0xad, 0xc4, 0x22, 0x3b,
	0x7d, 0xc5, 0x2f, 0x60, 0x8e, 0xbe, 0x12, 0xac, 0x04, 0x1d, 0xa7, 0xd3, 0x55, 0xbf, 0xd2, 0xac,
	0xd9, 0xcd, 0x30, 0xe2, 0x06, 0x9a, 0x34, 0xbb, 0xb9, 0xf6, 0x71, 0x1c, 0xb4, 0xbc, 0xbe, 0xbf,
	0xf4, 0xa0, 0xc9, 0xeb, 0xc2, 0xc5, 0x38, 0xd1, 0x24, 0xac, 0xf6, 0xde, 0x9c, 0x1e, 0xb1, 0xc2,
	0xbe, 0xd4, 0x67, 0x55, 0xe5, 0x29, 0x7e, 0xa9, 0xb3, 0x48, 0xc2, 0x0b, 0x36, 0x51, 0x1c, 0x41,
	0x8f, 0xd5, 0x63, 0x37, 0x24, 0xaf, 0xc0, 0xaf, 0x3d, 0x4a, 0xc3, 0x72, 0x64, 0xe0, 0x29, 0xe1,
	0x84, 0x15, 0x24, 0x2c, 0x47, 0x39, 0x99, 0x0f, 0x5e, 0x23, 0xcc, 0xe6, 0x56, 0x5f, 0x8b, 0xa6,
	0xb6, 0x38, 0xcd, 0x33, 0xd1, 0xd3, 0x32, 0xd8, 0xd0, 0x0c, 0x29, 0x40, 0x12, 0x7d, 0x47, 0xb5,
	0xc6, 0x26, 0x7b, 0x6f, 0x12, 0xd3, 0x83, 0xda, 0x67, 0x38, 0x41, 0x49, 0x9e, 0x01, 0x32, 0x36,
	0xd2, 0xb9, 0xad, 0x0b, 0x92, 0x59, 0x02, 0x46, 0xf9, 0x6e, 0x7a, 0xd0, 0x14, 0x73, 0xa7, 0x91,
	0x71, 0xf6, 0xcd, 0x6e, 0x76, 0x8f, 0x39, 0x9d, 0xb6, 0x35, 0x75, 0x44, 0x6d, 0x58, 0x81, 0xf5,
	0x4f, 0x24, 0xb0, 0x21, 0x3e, 0xf2, 0x64, 0x4c, 0x10, 0x56, 0x12, 0xa6, 0xb9, 0x4c, 0x55, 0x96,
	0xa1, 0x12, 0xc9, 0x11, 0x1a, 0xf2, 0x0c, 0x1e, 0x0b, 0x2c, 0x30, 0xb4, 0x9f, 0xca, 0x7f, 0xed,
	0x41, 0x93, 0x7e, 0xc6, 0x56, 0x77, 0x6c, 0x5d, 0xa2, 0x2a, 0xcf, 0xa2, 0xa7, 0x25, 0x3b, 0x8c,
	0xe4, 0x59, 0x3c, 0xae, 0xe2, 0xf4, 0xab, 0x66, 0x74, 0xfd, 0x0b, 0x0f, 0x12, 0x7f, 0x46, 0xd6,
	0x40, 0xe1, 0xaf, 0x54, 0x65, 0x39, 0x2a, 0x95, 0x1c, 0x60, 0x61, 0x46, 0x01, 0x3b, 0x08, 0xed,
	0xd8, 0xda, 0x93, 0x49, 0xdf, 0xcd, 0x3c, 0xb6, 0x96, 0xd9, 0xb0, 0xb5, 0x60, 0x18, 0xd8, 0xfa,
	0x7d, 0xd1, 0x28, 0x55, 0xc8, 0xcc, 0x11, 0x26, 0x56, 0x71, 0x78, 0x7b, 0xdd, 0xd0, 0x61, 0x03,
	0xb4, 0x4f, 0x09, 0xaa, 0xf2, 0x06, 0xd3, 0x61, 0xaf, 0xe6, 0x27, 0x0c, 0x93, 0x9c, 0x67, 0xd6,
	0x26, 0x2f, 0x24, 0x8a, 0xe7, 0x85, 0x54, 0xef, 0xbc, 0x50, 0x29, 0x29, 0x29, 0x20, 0xaa, 0xe7,
	0x85, 0xfe, 0xd2, 0x55, 0x6b, 0xd6, 0x97, 0xd2, 0x9f, 0xf3, 0x21, 0x4e, 0xaf, 0x4d, 0x1f, 0x6d,
	0xd7, 0x5d, 0x8f, 0xe1, 0x06, 0xf1, 0x8f, 0x37, 0x8f, 0xc2, 0x94, 0xd6, 0x7e, 0x73, 0x28, 0xef,
	0x0c, 0x1a, 0x12, 0xb1, 0xc0, 0x1c, 0xca, 0xdb, 0xf9, 0xdc, 0xe9, 0x2d, 0xaa, 0xf5, 0x16, 0xa6,
	0xd0, 0xdd, 0xe2, 0x4a, 0xfe, 0x1c, 0x67, 0x52, 0xfb, 0xf5, 0xdb, 0x39, 0xc7, 0xfc, 0x01, 0x5e,
	0x62, 0x4d, 0xde, 0x34, 0x0b, 0xfb, 0xd3, 0x50, 0x2b, 0x83, 0xd1, 0x2c, 0x61, 0x13, 0x3d, 0xfc,
	0xb4, 0xaa, 0xb0, 0x48, 0x55, 0x7e, 0x89, 0x5e, 0x96, 0xec, 0x9b, 0x2f, 0xcf, 0x04, 0x33, 0x75,
	0x08, 0x69, 0x0e, 0x03, 0xe0, 0x93, 0x0b, 0x38, 0xc8, 0x73, 0x8e, 0x7f, 0xed, 0x41, 0x22, 0xdf,
	0x7f, 0x64, 0x1c, 0xc8, 0xd7, 0x4d, 0x07, 0xd2, 0x91, 0x57, 0x23, 0xe7, 0x10, 0xbb, 0xa2, 0xc2,
	0x39, 0x7c, 0x94, 0x04, 0x49, 0x6e, 0xda, 0xa7, 0xed, 0x3e, 0xa9, 0xa9, 0x2d, 0x10, 0x5e, 0x98,
	0x6c, 0x33, 0x39, 0x97, 0x15, 0xaa, 0x52, 0x8e, 0x56, 0x4b, 0x0e, 0x20, 0x91, 0x9f, 0xe4, 0x45,
	0x2f, 0x34, 0x79, 0xa3, 0x3e, 0x37, 0x43, 0xcb, 0x8e, 0x39, 0x32, 0xfb, 0x01, 0x5d, 0x0a, 0x3c,
	0x1e, 0xcc, 0x48, 0xcc, 0x45, 0xa3, 0x62, 0xf5, 0x95, 0x95, 0xc1, 0x18, 0x39, 0x97, 0x7e, 0xfa,
	0x53, 0x9c, 0x86, 0xb2, 0x37, 0x42, 0x4c, 0x64, 0x0f, 0xae, 0x20, 0xbf, 0x7c, 0x9a, 0x80, 0x9f,
	0xa8, 0xfc, 0xe9, 0x7e, 0x19, 0x8d, 0x22, 0x5b, 0x68, 0x24, 0xfe, 0x7f, 0x44, 0xa2, 0x65, 0x34,
	0x71, 0x27, 0x3d, 0xdb, 0x18, 0x73, 0x3e, 0x10, 0xfc, 0xb4, 0x5e, 0x7c, 0x0d, 0x8d, 0x8a, 0xbd,
	0x1b, 0x79, 0xbf, 0xfc, 0x7d, 0x6a, 0x96, 0x8d, 0x35, 0x30, 0xb4, 0x4c, 0x9e, 0x4f, 0xba, 0x77,
	0xed, 0x4c, 0x9d, 0xda, 0x4a, 0xb8, 0xcd, 0xcb, 0x87, 0x52, 0x67, 0x7a, 0xe6, 0xb1, 0xdc, 0xee,
	0xf0, 0x7b, 0xbe, 0x9f, 0xf6, 0xe1, 0xdf, 0x77, 0x3c, 0x26, 0x7a, 0x01, 0x13, 0xe9, 0x4c, 0x88,
	0xbb, 0x3a, 0x40, 0x8f, 0x3c, 0xc6, 0xe9, 0xac, 0x7c, 0xff, 0xcc, 0x83, 0x26, 0xb0, 0xee, 0x23,
	0x03, 0x11, 0x7f, 0x65, 0x7a, 0xc2, 0x4c, 0x71, 0x42, 0x44, 0xe7, 0x87, 0x38, 0x21, 0xef, 0xbc,
	0xd4, 0xef, 0x35, 0x55, 0x59, 0x8d, 0x56, 0x4a, 0x56, 0x10, 0xc8, 0x73, 0x4c, 0x40, 0x1b, 0x16,
	0xca, 0xd1, 0x17, 0xf3, 0x2a, 0x34, 0x65, 0x65, 0x28, 0x16, 0x37, 0xe9, 0xc8, 0xfc, 0xc1, 0xdf,
	0x53, 0x5f, 0x6b, 0xc7, 0x4a, 0x39, 0x17, 0xbe, 0xc7, 0x2b, 0xdd, 0xe0, 0x72, 0xf0, 0xfd, 0xdb,
	0x0c, 0x34, 0xd5, 0xa1, 0xcb, 0xc3, 0x2f, 0x32, 0x31, 0x6f, 0x93, 0xab, 0xc8, 0x04, 0xe7, 0xec,
	0x80, 0x9d, 0x12, 0x79, 0x49, 0x09, 0xe1, 0x7e, 0x40, 0x5e, 0xd2, 0x20, 0xa0, 0x09, 0xef, 0x07,
	0x37, 0xbc, 0x13, 0x08, 0x87, 0x23, 0x71, 0x7c, 0xe5, 0xc7, 0xb0, 0xd5, 0xa6, 0x83, 0x85, 0xc7,
	0xeb, 0xc1, 0x0d, 0x8a, 0xd1, 0x8a, 0xa8, 0x39, 0x2d, 0x7d, 0xe5, 0x39, 0xe0, 0x86, 0xc3, 0xbb,
	0x27, 0x33, 0x71, 0x0a, 0x24, 0x3d, 0xf2, 0x8f, 0x7f, 0xdf, 0x34, 0x10, 0x0d, 0x17, 0xe0, 0xbc,
	0x17, 0xf2, 0x2c, 0xb7, 0xfd, 0x1b, 0x42, 0xbc, 0xd2, 0x32, 0x11, 0x8d, 0xc7, 0x23, 0x1a, 0xa2,
	0xba, 0xe5, 0x4e, 0x06, 0xbe, 0x8f, 0x0f, 0xe5, 0xa7, 0x9e, 0x19, 0xf5, 0xe4, 0x56, 0x3d, 0x04,
	0x31, 0x9b, 0x97, 0x5a, 0xcc, 0x7c, 0x9f, 0x18, 0xd2, 0xd9, 0x1c, 0x66, 0x7e, 0x3f, 0x03, 0x34,
	0xbf, 0x6c, 0x37, 0xf6, 0x9d, 0xed, 0x6e, 0xec, 0x0b, 0xf3, 0xe1, 0x6c, 0x7d, 0x4b, 0x1c, 0x6c,
	0x7d, 0xe7, 0x0e, 0x61, 0xeb, 0x0b, 0x83, 0xdc, 0x1f, 0x53, 0xdf, 0x78, 0x30, 0x16, 0x7f, 0x60,
	0xa6, 0xbe, 0xf7, 0x3c, 0xc8, 0xf2, 0xcf, 0xe6, 0xbc, 0xf7, 0xc8, 0x9c, 0xf7, 0x1f, 0x1a, 0x2f,
	0x04, 0xf0, 0x09, 0xbf, 0xf8, 0x20, 0xad, 0x5c, 0xf5, 0xf7, 0x42, 0x5a, 0x2b, 0xd7, 0x6c, 0x18,
	0x64, 0x38, 0x46, 0xae, 0x2f, 0xa2, 0xec, 0xc8, 0xc6, 0x8d, 0xb1, 0x60, 0x1c, 0x9b, 0xfc, 0x8e,
	0x03, 0xbe, 0x8a, 0x14, 0xc9, 0x13, 0x08, 0x65, 0xdd, 0xda, 0x96, 0x3a, 0xdf, 0x3b, 0xb8, 0xab,
	0xed, 0xfb, 0xa2, 0x4c, 0xc9, 0x33, 0xef, 0x17, 0x7e, 0x52, 0x2f, 0xbe, 0x84, 0xb2, 0x6a, 0x42,
	0xb5, 0xa1, 0x38, 0x36, 0xf5, 0xc5, 0x39, 0xc7, 0x66, 0x48, 0x50, 0xc2, 0xe4, 0xdc, 0xc7, 0xf6,
	0x69, 0x4d, 0x57, 0x93, 0x87, 0x2e, 0xe1, 0xde, 0x59, 0x52, 0x46, 0xee, 0xc0, 0x28, 0x3f, 0x34,
	0x11, 0xf7, 0x0a, 0x9c, 0x7e, 0x0d, 0x9c, 0xb4, 0xb1, 0xd9, 0x9d, 0xa1, 0x5f, 0xab, 0x64, 0xfa,
	0xb5, 0x79, 0x89, 0xbe, 0x53, 0x5a, 0xdb, 0xb6, 0xe4, 0x91, 0xab, 0xc0, 0x51, 0x0c, 0x74, 0x9d,
	0x25, 0xde, 0x9c, 0x58, 0xc1, 0xca, 0x36, 0x16, 0x2e, 0x10, 0x62, 0xbb, 0x83, 0x95, 0xbb, 0xa7,
	0xc0, 0x83, 0x08, 0xba, 0xf1, 0xb7, 0x03, 0x34, 0x9a, 0xcf, 0xf9, 0x2f, 0x95, 0x72, 0x56, 0xa1,
	0x93, 0x68, 0x88, 0xdf, 0xd9, 0x9c, 0x55, 0xe8, 0x64, 0x12, 0x04, 0x66, 0xe0, 0xc6, 0xae, 0x64,
	0x2f, 0x71, 0x4d, 0xa1, 0xf4, 0xc6, 0xb0, 0x02, 0xfd, 0xa1, 0x9c, 0xab, 0x1d, 0x62, 0xe9, 0x4d,
	0xbe, 0xc7, 0xb1, 0xf4, 0x4c, 0x9a, 0xd4, 0x29, 0xc3, 0xd6, 0xa4, 0x16, 0x9e, 0x16, 0x54, 0xe5,
	0xb8, 0x80, 0xda, 0x05, 0xc9, 0x72, 0xe3, 0xca, 0xbb, 0x04, 0xad, 0xe9, 0x33, 0x7d, 0x2b, 0x8f,
	0x9f, 0x4e, 0xf4, 0x5e, 0xe5, 0x01, 0x4b, 0xee, 0x70, 0xaa, 0xd3, 0x07, 0x7c, 0x82, 0x66, 0x89,
	0xee, 0x1e, 0x25, 0x5c, 0xa5, 0x35, 0x5e, 0x49, 0x5d, 0xe9, 0x35, 0x9c, 0x8a, 0x4e, 0xee, 0x1b,
	0x3c, 0x7d, 0x9d, 0x6f, 0xa6, 0x35, 0xf4, 0x81, 0x35, 0x08, 0x0e, 0x1e, 0x7a, 0x4c, 0xbb, 0xd1,
	0x9f, 0x3a, 0x74, 0x96, 0x78, 0x2b, 0x1e, 0xbc, 0x90, 0xec, 0x3c, 0xc3, 0x7f, 0xd4, 0xf7, 0xd7,
	0x59, 0x68, 0x82, 0x69, 0x72, 0x3f, 0x2d, 0x36, 0xef, 0x1b, 0x01, 0x4d, 0x24, 0xfd, 0x0d, 0xc3,
	0xc2, 0x6c, 0x3c, 0xf0, 0xb3, 0xd6, 0x81, 0x2d, 0x60, 0xa2, 0x1f, 0xb2, 0x98, 0x17, 0xfa, 0x55,
	0x65, 0x8d, 0x64, 0x1b, 0x53, 0x7e, 0x91, 0xd7, 0x9c, 0x99, 0x10, 0x9c, 0x34, 0xc5, 0x8b, 0xdc,
	0x91, 0xb8, 0xbe, 0x07, 0xdc, 0x18, 0xe0, 0x0d, 0x0f, 0xe7, 0xd7, 0x6f, 0x1b, 0xce, 0x91, 0x3d,
	0xcd, 0x79, 0xa0, 0xec, 0x69, 0xde, 0x6f, 0xd1, 0x54, 0x47, 0x08, 0x38, 0x68, 0x5d, 0x16, 0x9a,
	0xb5, 0x2e, 0x8f, 0x38, 0x2a, 0x1f, 0xf5, 0x01, 0x78, 0xa5, 0x0b, 0x31, 0x24, 0xb0, 0x62, 0x27,
	0x7d, 0xb8, 0xdc, 0x06, 0xcb, 0xfb, 0x3f, 0x78, 0xb3, 0x51, 0xb1, 0x51, 0x40, 0xa8, 0x32, 0x10,
	0x06, 0xdf, 0xbb, 0x2a, 0xa2, 0x81, 0xc1, 0xd7, 0x2a, 0x57, 0x2c, 0xaf, 0xe5, 0xc7, 0x37, 0x40,
	0x81, 0x89, 0xc7, 0xc0, 0xf6, 0x7e, 0xed, 0xcc, 0x49, 0xf0, 0xd4, 0x9b, 0x47, 0x2d, 0xfb, 0x4f,
	0x01, 0xec, 0xc2, 0x91, 0xaa, 0xa0, 0x61, 0xb6, 0xd9, 0xdc, 0xaa, 0x35, 0x6e, 0x1d, 0xb8, 0xd8,
	0x0d, 0x6d, 0xe7, 0xfb, 0xb9, 0x2f, 0xd8, 0x74, 0x9a, 0x9e, 0xfb, 0xa5, 0xd3, 0x3c, 0x23, 0xa0,
	0xf1, 0x66, 0x24, 0x10, 0x7f, 0x89, 0xb2, 0xea, 0x82, 0xd1, 0x5a, 0x90, 0x4d, 0x8c, 0x91, 0xe7,
	0xa7, 0xc7, 0x99, 0x05, 0xe5, 0x7a, 0x5b, 0xbc, 0xb9, 0x7e, 0xe8, 0x97, 0xf7, 0x1a, 0x42, 0x46,
	0xa1, 0xc3, 0x8e, 0x17, 0x98, 0x77, 0xdc, 0xcd, 0x3f, 0x9e, 0xdb, 0x6f, 0xdf, 0xde, 0x51, 0xe8,
	0x11, 0x7d, 0xaf, 0xb1, 0x7e, 0xad, 0x8c, 0x7b, 0xaa, 0x12, 0xb1, 0xbc, 0xcd, 0x9a, 0x65, 0x8e,
	0xbb, 0x39, 0x01, 0x35, 0x4b, 0xe1, 0x04, 0x70, 0xc6, 0x33, 0xc1, 0x73, 0x77, 0xcf, 0x84, 0x8c,
	0x7b, 0xf7, 0x4c, 0x58, 0x69, 0x16, 0x5b, 0x66, 0x52, 0xfd, 0x9b, 0xd7, 0x2c, 0xb6, 0x9c, 0x04,
	0xa8, 0xb5, 0xda, 0x28, 0x62, 0xaf, 0x2f, 0x5e, 0x60, 0xb9, 0x0c, 0x8d, 0xa5, 0x7e, 0xdc, 0x18,
	0xa1, 0xb2, 0x8c, 0xfc, 0x52, 0xa6, 0x0a, 0x79, 0x42, 0xb2, 0xa3, 0x47, 0x3b, 0xb1, 0x87, 0xa5,
	0xdb, 0xf7, 0x9b, 0xaa, 0xc5, 0x6d, 0x06, 0x9b, 0x07, 0x4f, 0x97, 0xf7, 0x54, 0xa5, 0x9a, 0x71,
	0x79, 0x6f, 0xf3, 0x12, 0xe0, 0xdb, 0xe6, 0xf2, 0xca, 0x86, 0x60, 0xf3, 0x1c, 0x38, 0xb4, 0x51,
	0x77, 0xc1, 0xa1, 0xe5, 0xdc, 0x09, 0x87, 0xc6, 0x89, 0xcd, 0x46, 0xdf, 0x23, 0xb1, 0xd9, 0x57,
	0x82, 0xaa, 0x5c, 0x14, 0xd0, 0x17, 0x82, 0xe4, 0x8e, 0xe2, 0xd8, 0x45, 0xca, 0x99, 0x29, 0x20,
	0x5f, 0x7c, 0xc0, 0xac, 0x41, 0xd2, 0x83, 0xf2, 0x9c, 0x66, 0x3b, 0x32, 0x64, 0x76, 0xab, 0x4d,
	0x5c, 0xc2, 0x0c, 0x17, 0x2e, 0x01, 0x8b, 0xee, 0xec, 0x9c, 0x02, 0x0f, 0x70, 0x22, 0xb7, 0xfb,
	0xb5, 0xaa, 0xac, 0x47, 0x6b, 0xa5, 0x34, 0x10, 0xa1, 0x22, 0x19, 0x87, 0x3d, 0x4b, 0x7f, 0x3f,
	0x1d, 0x99, 0x80, 0xc6, 0x70, 0xf3, 0x11, 0x97, 0xa0, 0x6c, 0x2c, 0xd3, 0xa7, 0x84, 0x0e, 0x03,
	0x8a, 0x14, 0xc9, 0x93, 0x89, 0x4c, 0xb1, 0x67, 0x3f, 0x3d, 0xb4, 0x65, 0x25, 0x7e, 0x52, 0x29,
	0xbe, 0x60, 0x08, 0x8c, 0x3d, 0x86, 0xcf, 0x33, 0x13, 0x18, 0x4f, 0xe2, 0x05, 0xc6, 0x89, 0xee,
	0xde, 0xb2, 0x72, 0x43, 0x58, 0xfc, 0x96, 0x85, 0x7a, 0x64, 0x50, 0xff, 0xf1, 0x67, 0x2c, 0xd4,
	0x63, 0x2e, 0x50, 0x0f, 0xc2, 0x4c, 0x51, 0x1a, 0xc2, 0x28, 0x01, 0xb1, 0x79, 0x36, 0x93, 0x94,
	0xa7, 0x50, 0x46, 0x71, 0xf9, 0x3a, 0x4c, 0xe0, 0xc6, 0xc1, 0xe6, 0xe9, 0xbf, 0xe5, 0x09, 0x30,
	0x9f, 0xe2, 0xf2, 0x75, 0x34, 0xd1, 0x5d, 0x71, 0xf9, 0x3a, 0x71, 0x01, 0xca, 0xa8, 0x0d, 0xd6,
	0x92, 0x14, 0x97, 0x90, 0x0b, 0xba, 0x36, 0x58, 0x2b, 0x8b, 0x6c, 0xf2, 0x5a, 0xe7, 0x51, 0xda,
	0xbe, 0x36, 0x58, 0x2b, 0x2e, 0x41, 0x19, 0xcb, 0xcb, 0xd7, 0x61, 0x5a, 0x45, 0x32, 0x40, 0xeb,
	0xbf, 0xe5, 0x47, 0xa1, 0xfd, 0x72, 0x3a, 0x38, 0x3f, 0xc3, 0x45, 0x7e, 0xbd, 0x89, 0xd8, 0x66,
	0x50, 0x3a, 0x10, 0xb2, 0xbc, 0xaf, 0x2a, 0x71, 0x46, 0xe9, 0xde, 0xe3, 0x29, 0x1d, 0x1d, 0xa3,
	0x09, 0xac, 0x5d, 0xb5, 0xbe, 0xeb, 0xc9, 0x86, 0xf3, 0x89, 0xbe, 0x6e, 0x9c, 0x11, 0x96, 0x64,
	0xef, 0x84, 0xa0, 0xad, 0x84, 0xf2, 0xe5, 0x7b, 0x81, 0xa4, 0xe1, 0x3f, 0x29, 0x61, 0xcc, 0xf7,
	0xea, 0x24, 0xb0, 0xb4, 0x24, 0xdf, 0x6b, 0x79, 0xa3, 0x52, 0xb2, 0xa7, 0xa0, 0xec, 0x3f, 0x44,
	0xc2, 0xfa, 0xd6, 0xe7, 0x18, 0xd9, 0x56, 0x32, 0xf5, 0x22, 0x79, 0x16, 0x53, 0x6b, 0x43, 0x7c,
	0x77, 0x2b, 0xc4, 0x49, 0x47, 0xf1, 0x4f, 0xcc, 0x97, 0x0a, 0x88, 0x66, 0xde, 0x54, 0x95, 0xd7,
	0xcd, 0x97, 0xca, 0xab, 0x16, 0xad, 0x15, 0xbb, 0x5d, 0xbc, 0x65, 0x25, 0x38, 0x0c, 0x12, 0x1b,
	0x79, 0x5e, 0xa2, 0xb7, 0xb1, 0x58, 0x21, 0x5f, 0xc7, 0x19, 0xfb, 0x12, 0x3d, 0x7b, 0xd9, 0x50,
	0xf3, 0xad, 0x97, 0x10, 0x77, 0x4f, 0x23, 0x23, 0x7d, 0x24, 0x77, 0x4f, 0xe7, 0x5a, 0xbe, 0x5c,
	0xec, 0xa4, 0x2f, 0x5b, 0x0c, 0x49, 0xf6, 0xc6, 0x18, 0x58, 0x8c, 0x73, 0x24, 0x4e, 0xb5, 0xf4,
	0x5d, 0x5f, 0x5e, 0xec, 0x2d, 0x2b, 0x81, 0x2c, 0x7c, 0x6f, 0xb1, 0x1b, 0x7e, 0xac, 0xc1, 0x4a,
	0xd1, 0x1b, 0xfe, 0x39, 0xbe, 0xa3, 0xd6, 0xd2, 0xa3, 0x9d, 0x34, 0x12, 0xc2, 0x6a, 0xd7, 0x6f,
	0x68, 0xd7, 0x4e, 0xe8, 0x24, 0xf5, 0xda, 0x65, 0xad, 0xe3, 0x8a, 0x0e, 0xd8, 0xdd, 0xa7, 0xb4,
	0x6b, 0x27, 0x52, 0x9d, 0xcd, 0xec, 0xfa, 0x5f, 0x8d, 0xb2, 0x71, 0x02, 0x86, 0x2a, 0x22, 0xfa,
	0xc0, 0xfe, 0x4c, 0xa4, 0x48, 0x9e, 0x4f, 0x23, 0xb2, 0x90, 0x54, 0x0d, 0x70, 0x37, 0xd0, 0x10,
	0xfe, 0xe0, 0xa1, 0x3a, 0x70, 0xfe, 0x53, 0xad, 0x6b, 0xa7, 0x9f, 0x74, 0x11, 0xdf, 0x46, 0x78,
	0x57, 0x89, 0xfc, 0xa1, 0x4c, 0x55, 0x96, 0x49, 0x64, 0x03, 0xe5, 0x97, 0x2c, 0x1b, 0x0d, 0x82,
	0x51, 0x6e, 0x43, 0x5e, 0xf4, 0x1a, 0xee, 0xb1, 0xd8, 0xdc, 0x1f, 0x98, 0xc2, 0x44, 0xcf, 0xde,
	0x62, 0xc5, 0x8f, 0x87, 0x15, 0x15, 0x94, 0x53, 0x15, 0xdc, 0x1c, 0xd2, 0x89, 0x03, 0xf1, 0x48,
	0xc6, 0x69, 0xc7, 0x59, 0xa1, 0x3c, 0xad, 0x58, 0x61, 0x49, 0x12, 0x06, 0x2e, 0x7e, 0xab, 0x9d,
	0xd9, 0x55, 0x56, 0xa2, 0xb5, 0x5d, 0xf3, 0xb3, 0x16, 0xe2, 0xef, 0x98, 0xef, 0xf6, 0x44, 0x4c,
	0x42, 0x9f, 0x4c, 0x43, 0x42, 0x4d, 0x6e, 0xdb, 0x10, 0x67, 0x81, 0xb8, 0x6d, 0x93, 0x53, 0x9b,
	0x3c, 0xb5, 0x2b, 0xd5, 0xf9, 0x2d, 0x39, 0xb5, 0xd4, 0xf3, 0xfa, 0x55, 0x94, 0x1d, 0x0f, 0x84,
	0xc2, 0x71, 0xea, 0x66, 0x3c, 0xd5, 0x6e, 0xd9, 0x1a, 0x0a, 0xc7, 0x09, 0xb1, 0x87, 0x96, 0xf2,
	0x58, 0x93, 0x4a, 0x85, 0x94, 0x8a, 0x7f, 0x44, 0xe3, 0xea, 0xc3, 0x15, 0x95, 0xef, 0x06, 0xab,
	0xea, 0x6b, 0x02, 0x1b, 0x6a, 0x20, 0xc9, 0xf4, 0x38, 0x48, 0xfe, 0x61, 0xae, 0x91, 0x4b, 0x78,
	0x35, 0x3b, 0x93, 0xc5, 0x69, 0x0d, 0x7d, 0x8b, 0x40, 0x54, 0xa7, 0xb5, 0x6d, 0x4b, 0x74, 0xef,
	0x85, 0x46, 0xb7, 0xfa, 0x5a, 0x16, 0x53, 0xf1, 0x5e, 0x2b, 0x5f, 0xe1, 0x37, 0x0f, 0x2a, 0x96,
	0xa0, 0x1c, 0xfd, 0x10, 0x60, 0xf1, 0xf9, 0x64, 0x2e, 0x67, 0x2a, 0x2d, 0x94, 0x1f, 0xe1, 0xcd,
	0x2c, 0xf2, 0x37, 0x2d, 0x89, 0x79, 0xf5, 0xaa, 0x70, 0xa0, 0x36, 0xe8, 0x67, 0x8d, 0xc4, 0x15,
	0x28, 0x2b, 0x50, 0x1d, 0x0c, 0xc7, 0xb1, 0x8c, 0x61, 0x1c, 0xc4, 0xec, 0x85, 0x12, 0xca, 0x74,
	0x28, 0xfa, 0x0f, 0x2f, 0x9b, 0xfb, 0x62, 0xad, 0xe3, 0x42, 0xaa, 0xe7, 0xc6, 0xad, 0xbe, 0x96,
	0x45, 0xfa, 0x04, 0xf1, 0x0f, 0x3f, 0xf4, 0x10, 0x7d, 0x28, 0x23, 0x54, 0x55, 0x49, 0x02, 0xaf,
	0x4d, 0x54, 0x95, 0x71, 0x92, 0xfe, 0x5b, 0xce, 0x4e, 0x76, 0xf4, 0x24, 0x9b, 0x6e, 0xf8, 0xf5,
	0x1f, 0xe2, 0xe3, 0x28, 0x33, 0x1a, 0xa8, 0xdc, 0x44, 0x02, 0xaa, 0x4d, 0x52, 0x95, 0xf1, 0x12,
	0x2e, 0x80, 0x56, 0x27, 0xae, 0xfa, 0xf1, 0x2f, 0xb1, 0x10, 0x8d, 0x01, 0xac, 0x28, 0xae, 0x09,
	0xc4, 0xc0, 0xa1, 0x94, 0x48, 0x40, 0xf8, 0x72, 0xdc, 0x49, 0x3b, 0xb1, 0xc7, 0xcf, 0x17, 0x8a,
	0x4b, 0xd1, 0x68, 0x72, 0xc3, 0x6c, 0x7e, 0x0e, 0xbb, 0x6e, 0x92, 0xeb, 0xcc, 0x28, 0x95, 0x27,
	0xc2, 0xda, 0x42, 0x75, 0x9b, 0x9f, 0x23, 0x09, 0x48, 0x8d, 0xca, 0xbb, 0x70, 0x1f, 0xa1, 0xba,
	0x4a, 0xfe, 0x6a, 0x95, 0x0b, 0x88, 0xbc, 0x93, 0x43, 0x22, 0x16, 0x48, 0x80, 0xbf, 0xb1, 0x81,
	0x83, 0xf3, 0x7d, 0xec, 0x41, 0x33, 0xf4, 0x0b, 0x1f, 0x12, 0x78, 0xdc, 0xfb, 0x57, 0x49, 0x61,
	0x8f, 0xa0, 0x2a, 0x57, 0x05, 0x74, 0x45, 0x90, 0xd2, 0x7d, 0x47, 0x3e, 0xe0, 0xca, 0x1a, 0xf2,
	0x39, 0x43, 0x1e, 0x34, 0x83, 0xf8, 0x37, 0x1e, 0xf4, 0xa8, 0xf3, 0xac, 0x7f, 0x9a, 0x2c, 0x62,
	0x40, 0x55, 0x7e, 0x8b, 0x7e, 0x23, 0xa5, 0x85, 0x89, 0x3c, 0x97, 0x67, 0x12, 0x1d, 0x76, 0x2f,
	0x3d, 0xab, 0xd8, 0xe6, 0x41, 0xd3, 0x0d, 0xdb, 0xea, 0xe2, 0x68, 0xb0, 0x2a, 0x18, 0x8e, 0x87,
	0x02, 0x35, 0xfe, 0xe0, 0xef, 0xc5, 0xcf, 0x04, 0x34, 0x3a, 0x16, 0x8c, 0x6e, 0x0e, 0x46, 0x57,
	0xd0, 0x23, 0x52, 0xb4, 0x5b, 0x50, 0x95, 0x3f, 0x4a, 0x46, 0xb1, 0xfc, 0xfb, 0x44, 0xf7, 0xee,
	0xe4, 0x6e, 0x72, 0x7b, 0xa4, 0xda, 0x77, 0xa4, 0x7a, 0x77, 0x24, 0x7a, 0xaf, 0xa6, 0xda, 0x77,
	0x6c, 0x0a, 0x6e, 0xd1, 0x37, 0xbd, 0xeb, 0x7a, 0xa2, 0x67, 0xef, 0xa6, 0xfa, 0x0d, 0xc1, 0x02,
	0x4c, 0x46, 0x74, 0x34, 0x3a, 0xda, 0xc5, 0xe7, 0x82, 0x85, 0x16, 0x58, 0xd0, 0x50, 0x50, 0x15,
	0x0d, 0x6d, 0x0e, 0x46, 0x49, 0x1c, 0x56, 0xf2, 0x0b, 0x7a, 0x24, 0x3b, 0x9a, 0xcb, 0xca, 0x69,
	0xa4, 0x44, 0x86, 0xf7, 0x6c, 0x1a, 0x54, 0xb8, 0xe3, 0xb6, 0x16, 0xf9, 0x51, 0x1e, 0x4a, 0x46,
	0x15, 0xb3, 0xec, 0x67, 0x23, 0xf9, 0x6e, 0x79, 0x50, 0xae, 0xf3, 0x28, 0x0f, 0xbf, 0x24, 0xf3,
	0x6d, 0x93, 0x81, 0xcb, 0x1c, 0x17, 0x04, 0x34, 0xd6, 0x64, 0x72, 0x30, 0x22, 0x22, 0x8b, 0x2b,
	0x17, 0xb4, 0x9d, 0x2d, 0xa9, 0xf6, 0x1d, 0x03, 0x5d, 0x5b, 0x13, 0xd7, 0xcf, 0x99, 0x4c, 0x0d,
	0x88, 0xaf, 0x87, 0x2b, 0x78, 0x5c, 0xa1, 0x9c, 0x1e, 0x07, 0xff, 0xcd, 0x28, 0x94, 0x67, 0xf2,
	0x59, 0x1a, 0xb1, 0x68, 0x68, 0xa6, 0xdf, 0x9e, 0x3b, 0x90, 0x2a, 0xad, 0x43, 0x63, 0x2b, 0x6b,
	0x42, 0xc1, 0x70, 0x7c, 0x15, 0x76, 0xc9, 0x26, 0xaf, 0xa6, 0xc5, 0xfa, 0xe5, 0x6f, 0xaa, 0x90,
	0xa7, 0xc2, 0x82, 0x53, 0xed, 0x3b, 0xc0, 0x97, 0x5b, 0xdb, 0xd7, 0xaa, 0x75, 0x1e, 0x31, 0xc6,
	0x34, 0xb5, 0x16, 0xd7, 0xa3, 0x71, 0x30, 0x49, 0xa5, 0xaa, 0x2a, 0x1a, 0x8c, 0xd1, 0xf4, 0xdb,
	0x8b, 0xf4, 0xed, 0x37, 0xd7, 0x30, 0xd1, 0x15, 0x44, 0x06, 0xc1, 0xf7, 0x27, 0x0b, 0xc9, 0x3c,
	0xd1, 0x6f, 0x6e, 0x2c, 0x2e, 0x47, 0xa8, 0x32, 0x50, 0x1c, 0x8c, 0xc6, 0x4b, 0x74, 0xb4, 0xcb,
	0xa2, 0x61, 0xfc, 0x1f, 0x95, 0xb8, 0x62, 0x79, 0x3c, 0xc1, 0x07, 0x05, 0x64, 0xd0, 0xc4, 0xd1,
	0xd6, 0xeb, 0xe7, 0xda, 0x88, 0xe5, 0x68, 0x74, 0x7d, 0x2c, 0x18, 0x5d, 0x1b, 0xd9, 0x14, 0x0c,
	0x13, 0x29, 0x91, 0xac, 0x2a, 0x4f, 0x4a, 0x46, 0xa9, 0x9c, 0x37, 0x70, 0xf1, 0xc6, 0xe0, 0x91,
	0x8b, 0x4c, 0xc7, 0x13, 0xd7, 0x4b, 0x4d, 0xc1, 0x53, 0x27, 0xfa, 0x8d, 0xe6, 0xe2, 0x6a, 0x34,
	0x8e, 0x80, 0xb5, 0x24, 0x52, 0x1b, 0x08, 0x85, 0xc9, 0x8b, 0x0c, 0xfb, 0x01, 0x9b, 0x6b, 0x98,
	0x21, 0xc2, 0xc9, 0x93, 0xda, 0xbe, 0x56, 0x36, 0x96, 0xb9, 0x91, 0xb8, 0x06, 0x21, 0x00, 0xa9,
	0x3e, 0x67, 0xf2, 0x9a, 0x5a, 0x88, 0x33, 0x16, 0x18, 0xc5, 0x34, 0x63, 0x81, 0x51, 0x02, 0xa7,
	0x88, 0x5b, 0x32, 0xab, 0x11, 0x57, 0xe8, 0xb8, 0xa2, 0xff, 0xd2, 0xd1, 0x1a, 0x5e, 0x55, 0x05,
	0x3a, 0x4f, 0x6d, 0x94, 0xd2, 0xa8, 0x21, 0xac, 0xc0, 0x32, 0x9a, 0xd1, 0xb2, 0xf0, 0x90, 0xa0,
	0x2a, 0xfb, 0x05, 0xb4, 0x57, 0x90, 0xd2, 0x1c, 0x25, 0x6a, 0xcb, 0xe6, 0x4a, 0x05, 0xb9, 0x04,
	0x30, 0x26, 0xfc, 0xb9, 0x29, 0x98, 0xf7, 0xfd, 0xa6, 0xc0, 0xed, 0xdd, 0x4d, 0xc1, 0x80, 0xfa,
	0x4d, 0xc1, 0x0c, 0x35, 0xdf, 0x61, 0x0f, 0x9a, 0xe1, 0x3a, 0xa1, 0x87, 0x3f, 0xc3, 0x86, 0xce,
	0xf0, 0xa3, 0x0a, 0x29, 0xdd, 0x12, 0x5c, 0x81, 0x9a, 0x9e, 0xe8, 0xb5, 0x7b, 0x50, 0x9e, 0x29,
	0x5c, 0xdf, 0xc8, 0xbd, 0x7b, 0xcb, 0x55, 0x65, 0x15, 0x5a, 0x21, 0xa5, 0x59, 0x8e, 0x3c, 0xc7,
	0x14, 0x7a, 0xd2, 0xe9, 0x8a, 0x31, 0xdd, 0xc1, 0x1d, 0x1e, 0x34, 0xc3, 0x75, 0xb4, 0x87, 0x1f,
	0x6b, 0x7e, 0xab, 0x2a, 0x6f, 0xa1, 0x5f, 0x4b, 0xe9, 0x96, 0x20, 0xfb, 0x78, 0x88, 0x58, 0x8f,
	0xe2, 0x10, 0xb8, 0xb3, 0x3b, 0x0b, 0xe5, 0x72, 0x5a, 0x2c, 0x33, 0xe6, 0x7c, 0xec, 0x80, 0x39,
	0x1f, 0xa9, 0x4a, 0x8c, 0x47, 0x9c, 0x8d, 0xfc, 0x46, 0x30, 0xf4, 0xb1, 0x62, 0x0d, 0x46, 0x1a,
	0x77, 0x8c, 0x31, 0x21, 0x0c, 0xfc, 0xe0, 0x1b, 0x3f, 0x15, 0xaa, 0x63, 0x96, 0x48, 0xc6, 0x05,
	0xf9, 0xb2, 0xfd, 0x82, 0x9c, 0xed, 0x7e, 0x41, 0x92, 0xee, 0xc6, 0xf5, 0x18, 0xa6, 0x44, 0x98,
	0x8b, 0x6e, 0xbb, 0x5a, 0x55, 0x4a, 0x24, 0xae, 0x58, 0x7e, 0x4e, 0xbb, 0xf8, 0x49, 0xb2, 0xe9,
	0x5a, 0xea, 0x8b, 0x2e, 0x08, 0xef, 0x7f, 0xab, 0xaf, 0x85, 0x2d, 0xe7, 0xbb, 0x86, 0xad, 0xc6,
	0x74, 0xbf, 0x6b, 0xd8, 0xca, 0xad, 0x84, 0x99, 0x3c, 0x19, 0x43, 0x89, 0xbf, 0x41, 0x63, 0x2a,
	0x23, 0xe1, 0x70, 0xb0, 0x12, 0x3e, 0x98, 0x49, 0xb3, 0xbf, 0x2f, 0x92, 0xf8, 0x72, 0x79, 0xce,
	0xe0, 0x81, 0x6f, 0x93, 0x7b, 0xcf, 0xb2, 0xcf, 0xa5, 0x3e, 0xfe, 0x7a, 0x60, 0xeb, 0xc1, 0x64,
	0xd3, 0xe1, 0x81, 0x86, 0xc6, 0xc1, 0xf6, 0xf3, 0x83, 0x5b, 0x0f, 0x18, 0xe6, 0x6d, 0x46, 0x37,
	0x4e, 0x27, 0x91, 0x75, 0x17, 0x3a, 0x89, 0xec, 0x3b, 0xd0, 0x49, 0x50, 0x7e, 0xd9, 0x15, 0x8d,
	0xe4, 0x27, 0x79, 0x56, 0xce, 0xf1, 0xc4, 0x12, 0xeb, 0xce, 0x6d, 0x19, 0xa0, 0x66, 0x1b, 0x91,
	0x0c, 0x73, 0xa5, 0xe9, 0xc5, 0x36, 0x0c, 0x86, 0x39, 0x5f, 0x55, 0xe6, 0x13, 0x86, 0x79, 0xce,
	0x90, 0xb0, 0x31, 0x3f, 0xe3, 0xdc, 0xa1, 0x34, 0x6c, 0x60, 0xbb, 0x52, 0x84, 0x3c, 0x94, 0x5b,
	0x16, 0x0e, 0xc5, 0x97, 0x59, 0x8d, 0xac, 0xfc, 0xc1, 0xdf, 0xfb, 0x66, 0xa0, 0x47, 0x5c, 0xea,
	0x62, 0x75, 0xbe, 0x63, 0x1e, 0x34, 0x4d, 0xa9, 0xaa, 0x22, 0x95, 0xc1, 0x2a, 0xce, 0x8a, 0xf3,
	0x4d, 0x67, 0xb3, 0x31, 0xc1, 0x10, 0x47, 0x39, 0x9a, 0x8d, 0x8d, 0xe7, 0x8d, 0xc4, 0xca, 0x4a,
	0x9c, 0x2d, 0xbf, 0x5e, 0xb2, 0x93, 0x01, 0x1c, 0x00, 0x96, 0x23, 0x03, 0xe3, 0x41, 0x3f, 0xed,
	0x64, 0x07, 0x13, 0x54, 0x95, 0x0d, 0xe8, 0x77, 0x92, 0xcb, 0xc4, 0xe5, 0xb9, 0xda, 0xa5, 0x9d,
	0x84, 0xa3, 0xdb, 0x7d, 0x4a, 0x6b, 0x3c, 0x6b, 0xb1, 0x5a, 0xa3, 0xdc, 0x8e, 0xd3, 0xc4, 0x4c,
	0x3e, 0xde, 0x1d, 0x1e, 0x34, 0xdd, 0xf1, 0x13, 0x0f, 0xff, 0x0d, 0xb4, 0x41, 0x55, 0xde, 0x41,
	0x6f, 0x4b, 0x6e, 0xd3, 0x97, 0xa5, 0xe1, 0x80, 0x68, 0x88, 0x5b, 0xe8, 0x3f, 0x67, 0x21, 0x11,
	0x1c, 0xfe, 0x57, 0x07, 0x6a, 0x83, 0xb1, 0xba, 0x40, 0x65, 0x50, 0x47, 0x9b, 0x42, 0x94, 0x19,
	0x0e, 0xd4, 0x52, 0x97, 0xea, 0x27, 0xb0, 0x9c, 0x43, 0x2f, 0x90, 0x45, 0x6d, 0x7f, 0xbf, 0xb6,
	0xaf, 0x35, 0xf5, 0x59, 0xcf, 0xe0, 0x91, 0xaf, 0xad, 0xcf, 0x15, 0xdc, 0x44, 0x8c, 0x39, 0xa3,
	0x1c, 0x40, 0x4c, 0x51, 0x95, 0xe7, 0x9d, 0x51, 0xce, 0xcb, 0x8f, 0x0c, 0x3a, 0x77, 0x7e, 0x41,
	0xa1, 0x2a, 0x4a, 0x7d, 0x1d, 0x71, 0xd1, 0x64, 0x5b, 0x9b, 0x91, 0xce, 0xb6, 0xd6, 0x18, 0x88,
	0xb3, 0xad, 0x7d, 0xc5, 0x64, 0x5b, 0x9b, 0x49, 0x37, 0x77, 0x9a, 0xc9, 0xb6, 0x36, 0x07, 0x6c,
	0x4a, 0x8d, 0x01, 0xcc, 0x76, 0xb5, 0x54, 0x30, 0x9e, 0x85, 0xc9, 0xd0, 0x02, 0xe7, 0x14, 0xba,
	0x3c, 0x94, 0x4d, 0xf2, 0xf1, 0xc9, 0xaa, 0x32, 0x91, 0xc9, 0xc7, 0xb3, 0x41, 0x32, 0xce, 0x64,
	0xe2, 0x47, 0x04, 0x94, 0x53, 0x1b, 0xf8, 0xe0, 0xb5, 0xfa, 0x48, 0x3c, 0x40, 0x1e, 0x56, 0x38,
	0x16, 0x15, 0x2b, 0x94, 0x6b, 0x06, 0xba, 0xce, 0x9a, 0x00, 0x88, 0xe3, 0x9c, 0xa6, 0xda, 0x77,
	0x80, 0xc2, 0x00, 0x72, 0x03, 0x0f, 0x7e, 0x72, 0x5c, 0xbf, 0xfd, 0x3b, 0x2e, 0x24, 0x9b, 0x1b,
	0x92, 0x1d, 0xcd, 0xfa, 0xbb, 0xb0, 0xa5, 0x87, 0x55, 0x69, 0x6d, 0x9f, 0x6b, 0x6a, 0x4b, 0xa2,
	0xbb, 0x75, 0x60, 0x7b, 0x3f, 0x84, 0x46, 0x1d, 0xe8, 0x3a, 0x0b, 0x55, 0xfa, 0x25, 0x74, 0xb1,
	0x1d, 0x0c, 0x90, 0x06, 0x77, 0xb5, 0xf9, 0xd9, 0x77, 0xef, 0x46, 0x12, 0x1b, 0x55, 0x95, 0x08,
	0xaa, 0x95, 0x1c, 0xd0, 0x4f, 0xce, 0x85, 0x20, 0x13, 0xfc, 0x82, 0xe8, 0x81, 0xc7, 0x38, 0xe6,
	0x7a, 0xee, 0xdd, 0xb2, 0x51, 0x10, 0x40, 0xfa, 0xfe, 0x1f, 0x01, 0x4d, 0xb6, 0x7d, 0xef, 0xe1,
	0xa7, 0x04, 0x24, 0x39, 0xa2, 0xd3, 0xd4, 0x1d, 0x61, 0xe5, 0x12, 0x16, 0x26, 0xe9, 0x41, 0x22,
	0xb0, 0xb3, 0x77, 0x76, 0xd8, 0xb1, 0x85, 0xbf, 0x7e, 0xd8, 0x3d, 0x3f, 0xf4, 0x61, 0x37, 0x52,
	0x4b, 0x00, 0x0c, 0xe7, 0xa8, 0xca, 0x2c, 0x2e, 0xb1, 0x84, 0x68, 0xcf, 0x2b, 0x61, 0xa4, 0x59,
	0x28, 0xfc, 0x9d, 0xaa, 0xbc, 0x8d, 0xde, 0x92, 0x1c, 0x40, 0xa1, 0x03, 0x13, 0xd2, 0x41, 0xd8,
	0x11, 0x6f, 0x74, 0x98, 0x36, 0x74, 0xc3, 0x3e, 0xf6, 0x05, 0x8c, 0x66, 0xb6, 0xd1, 0x47, 0x0e,
	0x9a, 0x39, 0x4c, 0xdd, 0x11, 0x32, 0x2e, 0x68, 0xf6, 0xbf, 0x65, 0x32, 0xbf, 0xc2, 0x11, 0x8d,
	0x66, 0xd5, 0x8c, 0xa4, 0x67, 0x38, 0x93, 0x74, 0xfb, 0x22, 0xd3, 0xa8, 0x3c, 0x4d, 0x53, 0x49,
	0x43, 0xde, 0x33, 0x7f, 0x24, 0xe4, 0x9d, 0x98, 0xc6, 0x38, 0x60, 0x02, 0x8d, 0x64, 0x75, 0xdb,
	0xe4, 0x9d, 0x52, 0xf1, 0xad, 0x1e, 0x34, 0xd9, 0x36, 0xec, 0xc3, 0x7f, 0xbc, 0x56, 0xa8, 0xca,
	0xab, 0x68, 0x99, 0xe4, 0x34, 0x75, 0xea, 0x34, 0xcc, 0x83, 0x24, 0x7d, 0x88, 0xaf, 0xfd, 0xc4,
	0x61, 0x72, 0x24, 0x9f, 0xb0, 0xc2, 0x55, 0xaa, 0xf2, 0x2b, 0xf4, 0xaa, 0x64, 0x5d, 0x08, 0x73,
	0x43, 0xbc, 0x3d, 0x04, 0xf1, 0xfd, 0xb9, 0x07, 0x4d, 0x34, 0x0f, 0xf5, 0xf0, 0x3f, 0x5e, 0x57,
	0x9a, 0xb4, 0x3d, 0x36, 0x23, 0x68, 0xb6, 0x16, 0x93, 0xb2, 0xd1, 0x8e, 0x26, 0xe4, 0x95, 0x4a,
	0xcd, 0xa3, 0x6f, 0x07, 0xa0, 0xce, 0x0f, 0x83, 0xff, 0x96, 0x81, 0x26, 0x62, 0xab, 0x36, 0x1e,
	0xc1, 0xaa, 0xd3, 0xbd, 0x26, 0x71, 0x3c, 0x0b, 0x47, 0x24, 0x99, 0x42, 0xbc, 0x58, 0xef, 0x90,
	0x9d, 0xf7, 0xdc, 0x25, 0x3b, 0x9f, 0x71, 0x07, 0xec, 0xfc, 0x33, 0x4c, 0xaa, 0x93, 0x69, 0x58,
	0x9c, 0xb9, 0x49, 0x75, 0x98, 0x38, 0xa7, 0x90, 0x8a, 0x73, 0x40, 0x14, 0x84, 0x43, 0xef, 0x10,
	0x71, 0x0e, 0xd9, 0x01, 0x20, 0xdc, 0x2c, 0x2a, 0x84, 0xde, 0x99, 0x08, 0x73, 0x76, 0x08, 0xaa,
	0xd2, 0x20, 0xa0, 0x3f, 0x4a, 0x36, 0xb0, 0xcb, 0x12, 0x98, 0x97, 0x81, 0x9a, 0xdd, 0xbe, 0x93,
	0xbc, 0x86, 0xff, 0xf6, 0x39, 0x63, 0x98, 0xfa, 0x4d, 0x01, 0xa6, 0xe1, 0xfb, 0x2b, 0x0f, 0x9a,
	0x64, 0x99, 0xc0, 0xc3, 0x7f, 0x88, 0xde, 0x34, 0x49, 0x80, 0xd2, 0x1c, 0xa2, 0xa7, 0x54, 0x65,
	0x9e, 0x94, 0x1d, 0x8e, 0xe9, 0x2b, 0x64, 0xce, 0xb2, 0xb6, 0xc3, 0x64, 0x12, 0xfc, 0x10, 0xc1,
	0xb8, 0x1d, 0x28, 0x4e, 0xfd, 0x49, 0x2a, 0xa1, 0xf4, 0x72, 0x9e, 0x54, 0x16, 0x9a, 0x6e, 0xe1,
	0xe4, 0xf1, 0x6d, 0xab, 0x9f, 0xb0, 0x32, 0x64, 0xf0, 0x99, 0xe4, 0x5c, 0x3d, 0x85, 0x73, 0x1a,
	0xb3, 0x52, 0x59, 0x24, 0x06, 0xe9, 0xdc, 0x67, 0x0d, 0x62, 0x6e, 0xb4, 0xfb, 0x61, 0x78, 0x26,
	0x93, 0xa5, 0x5f, 0x06, 0x95, 0x32, 0xcd, 0xe2, 0x65, 0x42, 0x93, 0x20, 0x83, 0xb6, 0xd6, 0xb9,
	0xcf, 0x3a, 0xa2, 0x29, 0x32, 0x86, 0xd9, 0x7f, 0xd7, 0x4b, 0x90, 0x00, 0x9b, 0xed, 0x8d, 0x25,
	0x23, 0x60, 0x83, 0x3d, 0xab, 0x49, 0xfe, 0x3b, 0x68, 0x5c, 0x34, 0x18, 0x8b, 0xd4, 0x47, 0x09,
	0x54, 0x89, 0x42, 0x13, 0xbb, 0xb8, 0x9a, 0x6b, 0xe4, 0xc7, 0x37, 0x2d, 0x89, 0x69, 0x7b, 0x4f,
	0xa6, 0x0e, 0x9e, 0x84, 0x04, 0x06, 0x8c, 0x87, 0x7a, 0x2f, 0x16, 0x09, 0x1b, 0x86, 0xf0, 0xe6,
	0x5e, 0x85, 0x17, 0x3c, 0xaa, 0x72, 0xc6, 0x83, 0x4e, 0x7b, 0x24, 0xb7, 0x5d, 0x94, 0xff, 0x85,
	0xe0, 0xf0, 0x28, 0xe3, 0x3e, 0xc1, 0xac, 0x71, 0x88, 0xc9, 0x8d, 0x19, 0x20, 0x26, 0x51, 0x7d,
	0xd3, 0x31, 0x9d, 0xa1, 0x33, 0x37, 0x80, 0xc1, 0xfd, 0xfc, 0xac, 0xb8, 0x7c, 0x52, 0x9f, 0xa7,
	0x1f, 0x8e, 0xd0, 0x12, 0xdc, 0x26, 0xd5, 0xbe, 0x03, 0xa0, 0x96, 0xba, 0xd2, 0x9b, 0xea, 0x3d,
	0x49, 0xc2, 0xb9, 0x36, 0xed, 0x1c, 0x6c, 0x6c, 0xb5, 0x77, 0x1f, 0xce, 0x13, 0xc8, 0x0c, 0x2a,
	0xdf, 0x5f, 0x65, 0xa0, 0x5c, 0x67, 0x18, 0x3d, 0xfc, 0x34, 0xe5, 0xd7, 0xa6, 0x8b, 0xb9, 0x74,
	0x08, 0x71, 0x0e, 0x5b, 0x96, 0x6b, 0x45, 0x49, 0x20, 0x1e, 0x20, 0xe1, 0xe8, 0x36, 0xa1, 0x47,
	0xd3, 0xb5, 0x02, 0xa5, 0xb2, 0xf9, 0x72, 0xc5, 0xae, 0xce, 0xdc, 0x21, 0x9a, 0x69, 0xbe, 0x00,
	0xf4, 0x1d, 0x63, 0xfe, 0x48, 0x21, 0x93, 0x31, 0xd9, 0xdb, 0xaa, 0xf2, 0x26, 0x7a, 0x43, 0x72,
	0xdd, 0x07, 0x79, 0xee, 0x10, 0xb8, 0x9a, 0x5e, 0x80, 0xd8, 0x91, 0x89, 0xa6, 0x5b, 0xde, 0x8b,
	0xb7, 0x45, 0xcc, 0xdc, 0xe4, 0x89, 0x0f, 0x03, 0x31, 0x7b, 0xc3, 0x4e, 0xcc, 0xb0, 0xda, 0x88,
	0xdb, 0x87, 0xc7, 0xf8, 0x0f, 0x00, 0xc0, 0x08, 0x79, 0x4e, 0x4b, 0xde, 0x62, 0x9c, 0x04, 0x23,
	0x0b, 0x63, 0xe4, 0xeb, 0xaa, 0xb2, 0x96, 0x93, 0x60, 0xbc, 0xea, 0x98, 0x19, 0xd3, 0x92, 0x0b,
	0x13, 0x2c, 0xf1, 0x4c, 0xf7, 0x57, 0x77, 0x27, 0xf1, 0x46, 0xbb, 0x71, 0x34, 0xd9, 0xd1, 0x5c,
	0x17, 0xa9, 0xe2, 0xe4, 0x1e, 0x44, 0xe0, 0xe6, 0xb6, 0x5d, 0x3a, 0x22, 0xd8, 0x9e, 0xf8, 0x36,
	0xa2, 0x35, 0x1c, 0x2a, 0xc0, 0x89, 0xdf, 0xf7, 0x7b, 0x50, 0xae, 0xf3, 0xf7, 0x1e, 0xfe, 0xf7,
	0xda, 0x7a, 0x55, 0xa9, 0x40, 0xaf, 0x49, 0xae, 0xf3, 0x1f, 0x12, 0x60, 0x2e, 0x4f, 0xb7, 0xff,
	0x9a, 0x81, 0xa6, 0x5b, 0xde, 0x80, 0x77, 0x73, 0x64, 0x4c, 0x8f, 0x39, 0xee, 0xc8, 0xd4, 0xa6,
	0x3b, 0x32, 0x2f, 0xaa, 0xca, 0x62, 0xe7, 0x23, 0x93, 0xe7, 0x76, 0x64, 0x86, 0x38, 0x2c, 0x2b,
	0xed, 0x87, 0x65, 0x81, 0xaa, 0xcc, 0xe5, 0x0f, 0xcb, 0xf4, 0xe1, 0x1f, 0x90, 0x65, 0xd6, 0x5b,
	0x3c, 0xd3, 0xd8, 0x70, 0xcb, 0x2d, 0x3e, 0x96, 0xa2, 0xe7, 0xb9, 0xe4, 0xf6, 0x46, 0xeb, 0x65,
	0x8d, 0x53, 0xbd, 0xa0, 0x8f, 0x24, 0x37, 0x80, 0xcb, 0x73, 0x1d, 0x64, 0x11, 0x77, 0x89, 0xf4,
	0xb6, 0x6b, 0x50, 0x3f, 0x04, 0xce, 0xdf, 0x1f, 0x39, 0x87, 0xc0, 0x6d, 0xfe, 0x43, 0x02, 0xd0,
	0xe5, 0x10, 0xb4, 0x65, 0xa0, 0x29, 0xfc, 0x2b, 0xf5, 0xe7, 0x13, 0x60, 0x3e, 0x01, 0x85, 0x11,
	0x55, 0xa9, 0x41, 0xef, 0x49, 0x8e, 0x40, 0x92, 0xe7, 0x82, 0x0f, 0xf8, 0x3d, 0x25, 0xd5, 0x7f,
	0xe3, 0x41, 0x53, 0x1d, 0x3e, 0xf6, 0xf0, 0x73, 0x6a, 0xbf, 0x31, 0x71, 0x6a, 0x33, 0xad, 0x9c,
	0x9a, 0x89, 0x4f, 0x36, 0x25, 0x7e, 0x25, 0xef, 0xb7, 0xa6, 0x4b, 0x2c, 0x69, 0xb4, 0x89, 0x94,
	0xc0, 0xfb, 0xef, 0x4d, 0x55, 0x79, 0x1d, 0xad, 0x93, 0x9c, 0x41, 0x33, 0xe4, 0x46, 0x0c, 0x91,
	0x91, 0x9b, 0x04, 0xd5, 0xb2, 0x9f, 0x82, 0xe5, 0xf6, 0x53, 0x30, 0x7f, 0x38, 0xa7, 0x80, 0xa0,
	0xd1, 0x0f, 0x76, 0x06, 0x0c, 0xb9, 0x49, 0xc6, 0x9d, 0xc8, 0x4d, 0x32, 0x6f, 0x5f, 0x6e, 0xf2,
	0x9e, 0xaa, 0x54, 0xa3, 0xa0, 0xe4, 0x0c, 0x47, 0x59, 0x72, 0x78, 0xa3, 0x73, 0xfb, 0x63, 0x16,
	0x9d, 0x0c, 0x75, 0x5c, 0x7c, 0xff, 0xdd, 0x83, 0xa6, 0x39, 0x7d, 0x67, 0x24, 0x9d, 0x91, 0x8c,
	0x7b, 0x73, 0x46, 0x9c, 0x8c, 0x63, 0x5c, 0x60, 0x33, 0xcc, 0x4d, 0x18, 0xc2, 0xc7, 0x21, 0x07,
	0xcd, 0xb0, 0x3c, 0x61, 0x5e, 0x0f, 0xc5, 0xdf, 0x65, 0x07, 0x66, 0xb1, 0x49, 0xf6, 0x3d, 0x33,
	0xad, 0xec, 0x9b, 0x88, 0xbc, 0x37, 0xa6, 0x3b, 0x1a, 0xcf, 0xdc, 0xc9, 0xd1, 0x70, 0x3e, 0x13,
	0xcf, 0xd9, 0x6d, 0x13, 0x72, 0xdd, 0x84, 0x99, 0xbc, 0x14, 0xf3, 0x05, 0x07, 0xa3, 0x84, 0x47,
	0x5c, 0xa5, 0x98, 0x26, 0xf1, 0x65, 0x9d, 0xc5, 0x1a, 0xe1, 0xf9, 0x21, 0x9e, 0xaf, 0x3c, 0x28,
	0x87, 0xa9, 0xc3, 0x82, 0x32, 0xa6, 0xc3, 0x0a, 0xf1, 0x97, 0x1f, 0x98, 0x28, 0xac, 0x50, 0x95,
	0x57, 0xf9, 0xcb, 0xef, 0x45, 0x22, 0x98, 0xe0, 0x5f, 0x4c, 0xe4, 0xfe, 0x03, 0xf1, 0x05, 0xef,
	0x65, 0x94, 0x3a, 0x78, 0x19, 0x84, 0x12, 0xf0, 0xb8, 0x35, 0xe7, 0x22, 0xa1, 0xb2, 0xa1, 0x51,
	0x86, 0x13, 0x23, 0x95, 0x0d, 0xe5, 0xda, 0x77, 0x07, 0xe4, 0x44, 0x4c, 0x40, 0x64, 0xd2, 0xb6,
	0xe5, 0x3c, 0x44, 0xda, 0x36, 0x3b, 0xd3, 0x3b, 0xda, 0x9d, 0xe9, 0xe5, 0x0f, 0x90, 0x85, 0xe9,
	0xbd, 0x1b, 0xad, 0xdd, 0x05, 0x41, 0x55, 0xce, 0x08, 0xe8, 0xb4, 0x20, 0xa5, 0x3b, 0x6d, 0xb2,
	0x64, 0x97, 0x19, 0x68, 0x6d, 0xbb, 0xb5, 0xc6, 0xab, 0x4e, 0x5c, 0xc8, 0x5d, 0x99, 0x6c, 0xdc,
	0x14, 0xc8, 0xbe, 0xd9, 0xb8, 0xea, 0xad, 0x99, 0x36, 0x31, 0x0a, 0x37, 0xc7, 0x87, 0x9f, 0x24,
	0x07, 0x4c, 0x6c, 0xcb, 0xaa, 0xe1, 0x9f, 0x50, 0xbb, 0x90, 0xc9, 0x54, 0xc9, 0x09, 0x9a, 0x22,
	0xc8, 0x3b, 0x54, 0xcb, 0x7b, 0x2b, 0x6c, 0x0a, 0xab, 0xca, 0x26, 0x14, 0x92, 0xd2, 0xee, 0xcb,
	0x30, 0x91, 0x87, 0x5c, 0x07, 0xa3, 0x82, 0xd1, 0x68, 0x31, 0xbe, 0x11, 0xb2, 0x83, 0xd1, 0xe8,
	0xaa, 0x58, 0xb5, 0x89, 0x67, 0xd5, 0x26, 0xa0, 0x29, 0xf0, 0xad, 0x72, 0x40, 0x23, 0xea, 0x83,
	0x59, 0xce, 0xd3, 0x5c, 0x81, 0xba, 0xa2, 0x2c, 0xe4, 0x69, 0xae, 0x8f, 0xc6, 0x5a, 0xbc, 0xd5,
	0xd7, 0x32, 0x78, 0xe8, 0x86, 0xd6, 0x73, 0x2e, 0xd1, 0xdd, 0xf3, 0xb4, 0x9c, 0xe8, 0x6f, 0x35,
	0x44, 0xbf, 0x1c, 0x35, 0x5e, 0x47, 0x2e, 0x18, 0x4e, 0xe4, 0x04, 0x17, 0xcc, 0x42, 0x18, 0x27,
	0xd1, 0xdd, 0x99, 0x3c, 0xbc, 0x0b, 0x2e, 0x18, 0x6e, 0x44, 0x83, 0x00, 0x3c, 0xf7, 0x0c, 0x8c,
	0x8b, 0xf9, 0xa7, 0x89, 0x02, 0xb9, 0x84, 0xb6, 0xa0, 0x31, 0xc1, 0x70, 0x75, 0x4d, 0x28, 0xf6,
	0x2e, 0x97, 0x6d, 0x01, 0x07, 0xc8, 0xe4, 0xcb, 0xe5, 0xa5, 0xf0, 0x91, 0x81, 0x3d, 0x97, 0x93,
	0x87, 0x77, 0xa5, 0xfa, 0x3e, 0xd3, 0x76, 0x1e, 0x63, 0x9f, 0xd2, 0x0e, 0x76, 0x41, 0xec, 0x76,
	0xfb, 0x37, 0x9f, 0x96, 0xcd, 0xdf, 0xe4, 0xc7, 0x14, 0x97, 0x1a, 0xe9, 0xf5, 0x32, 0x8d, 0x68,
	0x92, 0x2c, 0xbd, 0xde, 0x04, 0xf8, 0x24, 0x6c, 0x16, 0x8d, 0x41, 0x3d, 0x51, 0x30, 0x52, 0xeb,
	0xfd, 0x1a, 0x8d, 0x21, 0xe0, 0xc1, 0xb1, 0x21, 0xc0, 0x84, 0x19, 0xc7, 0x86, 0xc8, 0x8c, 0x6f,
	0xa9, 0x0b, 0xca, 0xf9, 0x24, 0x64, 0x14, 0xcb, 0xe9, 0xdb, 0xd6, 0x35, 0xd8, 0xd0, 0xbc, 0xb8,
	0xb0, 0xae, 0x26, 0x10, 0xdf, 0x18, 0x89, 0xd6, 0xde, 0xea, 0x6b, 0x91, 0x0b, 0xe9, 0x91, 0xf7,
	0xf3, 0x63, 0x89, 0x1f, 0xa0, 0x9c, 0xfa, 0x58, 0xb0, 0x68, 0x85, 0x3f, 0x08, 0x41, 0x18, 0x72,
	0x20, 0xb8, 0x3d, 0x2b, 0x94, 0x57, 0x91, 0x88, 0x6d, 0xd8, 0xc7, 0x7d, 0xe0, 0xc0, 0xf1, 0xc1,
	0xaf, 0xba, 0x21, 0x7e, 0x28, 0x63, 0x53, 0x92, 0x97, 0x4f, 0x59, 0x92, 0x31, 0x42, 0xf9, 0xc0,
	0xc5, 0xd3, 0x03, 0x5f, 0x5f, 0x67, 0x3e, 0xde, 0x24, 0xd3, 0x21, 0x1d, 0xd8, 0x9a, 0x45, 0x32,
	0xc7, 0x35, 0x8b, 0x24, 0xac, 0xcd, 0x35, 0x8b, 0xe4, 0x5a, 0x34, 0x3a, 0x14, 0x5b, 0xb3, 0x71,
	0x63, 0x4d, 0x28, 0x1c, 0x24, 0x11, 0x63, 0x70, 0x74, 0x00, 0xa3, 0x54, 0x7e, 0x02, 0xc6, 0x20,
	0x92, 0xbe, 0x6b, 0x5f, 0xa5, 0x7a, 0xdb, 0x52, 0xe7, 0x7a, 0xc1, 0x75, 0x9b, 0x9f, 0x9c, 0xd1,
	0x45, 0xac, 0x42, 0x99, 0x9b, 0x42, 0xe1, 0x2a, 0x12, 0x43, 0xa1, 0x5c, 0x47, 0x13, 0x5c, 0x20,
	0x97, 0x32, 0x24, 0xe4, 0xa3, 0x55, 0x32, 0xa0, 0xb3, 0x30, 0x50, 0x38, 0x05, 0xfa, 0xe7, 0xc9,
	0xe3, 0x67, 0xf5, 0x2b, 0xae, 0xf3, 0x48, 0xf2, 0xe2, 0x37, 0x10, 0x43, 0x40, 0xeb, 0x39, 0xa9,
	0xf5, 0x6d, 0xf7, 0xe3, 0xc1, 0xc4, 0x95, 0x26, 0xc6, 0x03, 0xa2, 0x2d, 0x60, 0x9b, 0x69, 0x9e,
	0xf1, 0x98, 0x01, 0x50, 0x87, 0x78, 0xa3, 0x9d, 0x34, 0xe4, 0x28, 0xa1, 0x8b, 0x3c, 0x2f, 0xd2,
	0x2c, 0x20, 0x54, 0x15, 0xac, 0xab, 0x89, 0x6c, 0xc1, 0x68, 0x32, 0x16, 0xa3, 0x49, 0x48, 0x55,
	0xde, 0x96, 0xb8, 0x62, 0x79, 0x0d, 0x8c, 0x30, 0xb8, 0xfd, 0x42, 0xaa, 0xff, 0x2b, 0x63, 0xf6,
	0xad, 0x87, 0x52, 0x7b, 0xbe, 0x4c, 0x74, 0xf7, 0x0c, 0x1c, 0x38, 0x9e, 0xfa, 0xf8, 0xdb, 0xc4,
	0x8d, 0xe3, 0xa9, 0x43, 0xc7, 0x6e, 0xf5, 0xb5, 0x2c, 0x2e, 0x4c, 0x35, 0x7f, 0x96, 0xda, 0xb7,
	0x33, 0xd9, 0xd1, 0x03, 0x3d, 0x30, 0x2e, 0x41, 0x0e, 0x5e, 0x28, 0xf8, 0xbe, 0x28, 0x5b, 0xca,
	0x5c, 0x24, 0x2c, 0xf2, 0xf8, 0xb9, 0xaf, 0x88, 0xaf, 0xa0, 0xcc, 0x0d, 0xd5, 0x65, 0x25, 0x24,
	0x5c, 0x03, 0xd8, 0x81, 0xeb, 0x05, 0xf2, 0x9c, 0x44, 0xcf, 0x9e, 0x44, 0x77, 0x3b, 0xb6, 0x52,
	0xd6, 0x61, 0x74, 0xfc, 0x6c, 0xb2, 0x67, 0x9f, 0x8e, 0x33, 0x6c, 0x91, 0x7e, 0xdc, 0x50, 0xfc,
	0x15, 0xca, 0xde, 0x50, 0x8d, 0x8f, 0xea, 0x78, 0x83, 0xaa, 0x90, 0x22, 0xf9, 0x71, 0x36, 0x0a,
	0x3b, 0x9c, 0x4e, 0x23, 0x91, 0xe6, 0x62, 0x31, 0xca, 0xae, 0x0a, 0xd6, 0xc5, 0x59, 0x34, 0x06,
	0xd0, 0x4e, 0x42, 0x91, 0x3c, 0x6b, 0x70, 0xfb, 0x85, 0xc1, 0x23, 0x17, 0x5c, 0xa7, 0x43, 0xda,
	0x89, 0xab, 0x50, 0x8e, 0xfe, 0x17, 0x9e, 0xd2, 0x44, 0xea, 0x68, 0xb8, 0x40, 0x62, 0x85, 0xb2,
	0x0f, 0x06, 0x4a, 0x3b, 0x23, 0xd6, 0x5a, 0x2c, 0x43, 0x39, 0x95, 0xc1, 0x30, 0xdc, 0x06, 0x93,
	0x8c, 0xdb, 0x80, 0x15, 0xca, 0xb3, 0x12, 0xdd, 0x9d, 0xda, 0x8d, 0xed, 0xae, 0xf3, 0x62, 0x2d,
	0xc5, 0x0a, 0x84, 0xe0, 0x6f, 0x3c, 0x37, 0x08, 0xfc, 0xf8, 0xb4, 0xaa, 0x2c, 0x92, 0xb8, 0x62,
	0xd9, 0x07, 0xc3, 0xa5, 0x9d, 0x1d, 0xd7, 0x5e, 0x7c, 0x0d, 0xe5, 0x84, 0x62, 0x15, 0xc1, 0xca,
	0x68, 0x30, 0x4e, 0x42, 0x3a, 0xe2, 0x88, 0x08, 0xac, 0x50, 0x7e, 0xc2, 0x08, 0x01, 0x7b, 0xe3,
	0xb8, 0xd6, 0xb5, 0x13, 0x0e, 0x06, 0x1f, 0x5f, 0xd5, 0x48, 0x6e, 0x8a, 0x7b, 0x88, 0xd7, 0x04,
	0x34, 0xa6, 0x92, 0xd9, 0xf2, 0xc7, 0x72, 0xa7, 0x38, 0x47, 0xfa, 0x73, 0xba, 0x67, 0x16, 0x18,
	0x3e, 0x00, 0x84, 0x61, 0xfe, 0xad, 0xaa, 0xbc, 0x25, 0xf1, 0xc3, 0xc9, 0x2b, 0xe9, 0xd1, 0xdc,
	0x93, 0x3a, 0x74, 0x4c, 0xeb, 0x3c, 0xaa, 0xf3, 0x91, 0x38, 0x7d, 0x3a, 0x04, 0xd7, 0x4d, 0x74,
	0xef, 0x61, 0xe1, 0xdb, 0x8c, 0x6e, 0x2c, 0x0a, 0xc1, 0xa6, 0xe0, 0x16, 0x7d, 0x29, 0x3d, 0xfb,
	0xe1, 0x4c, 0xf8, 0xf9, 0xa1, 0xf3, 0xde, 0x44, 0x13, 0xad, 0x13, 0xb8, 0x83, 0xf4, 0x46, 0x9c,
	0x1f, 0x03, 0xc7, 0x09, 0xee, 0x16, 0x54, 0x65, 0xa7, 0x80, 0xb6, 0x0b, 0x92, 0xe3, 0x0d, 0x4b,
	0xb3, 0xaf, 0x92, 0x7b, 0xc9, 0xcc, 0xea, 0xf1, 0xd7, 0xcc, 0x4d, 0x81, 0x5e, 0x18, 0x37, 0x05,
	0x9e, 0xc6, 0xdf, 0x14, 0x18, 0xd1, 0xb5, 0x70, 0x7e, 0x98, 0x08, 0xdd, 0x14, 0xb8, 0x73, 0xeb,
	0xbb, 0x2a, 0xa0, 0xa9, 0x96, 0x59, 0x8c, 0x88, 0x68, 0x02, 0xbe, 0x7f, 0x35, 0x1e, 0x4d, 0x01,
	0xd1, 0xa9, 0x85, 0x41, 0x59, 0x6f, 0x67, 0x50, 0x96, 0xa8, 0x4a, 0x3e, 0xcf, 0xa0, 0xcc, 0x76,
	0x60, 0x50, 0xf8, 0xab, 0x9d, 0x1a, 0xde, 0x7b, 0x79, 0x36, 0x65, 0xb5, 0x89, 0x4d, 0x29, 0xbc,
	0x73, 0x36, 0x85, 0xf0, 0x27, 0x85, 0x46, 0x8a, 0x0a, 0x26, 0x82, 0x77, 0x49, 0x51, 0x01, 0x12,
	0xd8, 0x29, 0x2c, 0x49, 0xc5, 0xfd, 0x64, 0x10, 0x0e, 0x0a, 0x16, 0x0e, 0x21, 0x7d, 0xf2, 0xe3,
	0x91, 0xc6, 0x3d, 0xd4, 0x59, 0xb9, 0x87, 0xf4, 0xcb, 0x1b, 0x31, 0x9c, 0x45, 0x83, 0x13, 0x2f,
	0xf0, 0xbb, 0xfb, 0xcd, 0x0b, 0xfc, 0xcc, 0x02, 0xfc, 0xa8, 0x58, 0x80, 0x5a, 0x0b, 0x0b, 0x90,
	0xfe, 0x6c, 0x3c, 0x28, 0xf6, 0xc0, 0x89, 0xca, 0xff, 0xb0, 0xec, 0x81, 0x85, 0x8f, 0x9f, 0x7a,
	0x77, 0x7c, 0xfc, 0x7d, 0x65, 0x36, 0x16, 0xaa, 0x4a, 0x3e, 0x92, 0x24, 0xc7, 0xab, 0x52, 0x16,
	0x89, 0x6f, 0x3e, 0xc7, 0x69, 0xf8, 0x9a, 0x3c, 0x68, 0xaa, 0xa5, 0xf1, 0x48, 0xcc, 0x27, 0x66,
	0x8b, 0x53, 0x4d, 0x56, 0x03, 0xe9, 0xe5, 0x40, 0x04, 0x9f, 0xcb, 0xd2, 0x45, 0xa7, 0xda, 0x77,
	0x10, 0x64, 0xe1, 0x6c, 0x7e, 0x7d, 0x7b, 0x04, 0x34, 0x05, 0x4c, 0x14, 0x2c, 0x2c, 0xc6, 0xa3,
	0x36, 0x16, 0x83, 0x67, 0x14, 0x72, 0xd1, 0x28, 0x62, 0x19, 0x02, 0x79, 0x80, 0xfc, 0xf4, 0x67,
	0xe1, 0x8b, 0xaa, 0xb2, 0x04, 0x3d, 0x27, 0x39, 0x0e, 0xaa, 0xb3, 0x7d, 0xd8, 0xe5, 0xdd, 0xc4,
	0xf6, 0x19, 0xc3, 0xe2, 0x8d, 0xb1, 0x74, 0xfc, 0xd1, 0x6e, 0x8c, 0x76, 0xed, 0x2b, 0x80, 0x86,
	0xf3, 0xc6, 0x9c, 0x15, 0xd0, 0xa4, 0xe5, 0xc1, 0xf8, 0xb0, 0x24, 0x53, 0x6e, 0x59, 0x40, 0xa6,
	0x47, 0xa7, 0x4e, 0xf4, 0xe4, 0xce, 0xb1, 0xa5, 0x40, 0xe6, 0x76, 0x92, 0x26, 0x22, 0xb5, 0x7f,
	0xcb, 0x48, 0xe7, 0x73, 0x2d, 0xd1, 0x7f, 0xc0, 0x75, 0xcb, 0xfe, 0xdc, 0x83, 0x44, 0xbe, 0xef,
	0xc8, 0xd8, 0xaf, 0x55, 0xc3, 0xdb, 0xaf, 0x61, 0xa6, 0x42, 0xa6, 0xbe, 0x4f, 0x0e, 0x80, 0x60,
	0x9e, 0xf8, 0x00, 0xbf, 0xf4, 0x6a, 0xaa, 0xd4, 0x18, 0x24, 0xae, 0x0c, 0xc5, 0xac, 0x9b, 0xbe,
	0xda, 0xa4, 0x9d, 0xba, 0x7b, 0xae, 0x3c, 0x6a, 0x96, 0x1a, 0x7a, 0x0c, 0xa6, 0xed, 0x5e, 0x4a,
	0x0d, 0xcd, 0xe2, 0x42, 0x0b, 0x37, 0x9f, 0x71, 0x9f, 0xc4, 0x7d, 0x99, 0x0f, 0x54, 0xdc, 0x67,
	0x12, 0xd3, 0x65, 0xdd, 0x6b, 0x31, 0x5d, 0xf6, 0x03, 0x14, 0xd3, 0x8d, 0xba, 0x4b, 0x31, 0x9d,
	0x85, 0x35, 0x87, 0xa7, 0xcb, 0x0f, 0xc3, 0x9a, 0x8f, 0xbe, 0x07, 0xac, 0x39, 0xba, 0x87, 0xac,
	0xf9, 0x98, 0x7b, 0xc3, 0x9a, 0x8f, 0xbd, 0xb7, 0xac, 0xf9, 0xb8, 0x7b, 0xc9, 0x9a, 0x8f, 0xbf,
	0xf7, 0xd2, 0xb9, 0x09, 0xf7, 0x44, 0x3a, 0xc7, 0x05, 0xc5, 0x72, 0x20, 0xac, 0xf2, 0x07, 0x26,
	0xda, 0x6c, 0x36, 0xab, 0x87, 0xe8, 0xfa, 0x89, 0x9e, 0x9d, 0xfa, 0xe9, 0x3d, 0xb5, 0x0b, 0xce,
	0x11, 0xd1, 0x2e, 0xf7, 0xee, 0xd0, 0xf6, 0x35, 0x41, 0x39, 0x9c, 0x05, 0x18, 0xc7, 0xe8, 0xdb,
	0x78, 0x01, 0xb4, 0xd1, 0x5a, 0xd3, 0xb1, 0x44, 0x77, 0x0f, 0xbd, 0x47, 0x2f, 0x0c, 0xee, 0x6a,
	0x83, 0xf6, 0xbe, 0xbf, 0xef, 0x41, 0x93, 0x4d, 0x13, 0x1a, 0x69, 0xd7, 0x66, 0xc6, 0xed, 0x5f,
	0x9b, 0x36, 0x1e, 0x87, 0x25, 0x41, 0xbf, 0xc3, 0x6b, 0xd3, 0xf7, 0x5f, 0x27, 0xd3, 0xf8, 0x13,
	0xc5, 0x35, 0x91, 0xfa, 0x2a, 0x7a, 0x5f, 0xbe, 0x83, 0x46, 0x91, 0xfc, 0x42, 0xe4, 0xca, 0x2c,
	0xd5, 0x0f, 0xdf, 0x68, 0x5c, 0x86, 0xe9, 0xd0, 0x0c, 0xf6, 0xe4, 0xb9, 0xd5, 0xd7, 0x02, 0xf7,
	0x1b, 0xd3, 0xda, 0x51, 0xae, 0x69, 0x8a, 0x9d, 0x6b, 0xa2, 0xa3, 0x8a, 0x2f, 0x9b, 0xc4, 0x64,
	0xf3, 0xf1, 0x6a, 0xf1, 0x85, 0x3c, 0x95, 0x0d, 0xcc, 0xdf, 0xc9, 0x54, 0xb8, 0xf5, 0x0a, 0xb9,
	0x7f, 0xb7, 0x0b, 0x28, 0x27, 0x58, 0x15, 0x8a, 0xe3, 0xb0, 0xc2, 0x00, 0xfb, 0x6a, 0x55, 0xa9,
	0x92, 0x58, 0xa1, 0xfc, 0x06, 0x04, 0x59, 0xaa, 0x08, 0x04, 0x2a, 0xb4, 0xcb, 0xdb, 0x06, 0x8f,
	0x7f, 0xc2, 0xa2, 0x33, 0x93, 0x8b, 0xa4, 0xad, 0x2b, 0xd5, 0x77, 0x78, 0xe0, 0xdb, 0xfd, 0xb7,
	0xfa, 0x5a, 0x8a, 0x8a, 0x2b, 0x48, 0x42, 0x23, 0x7a, 0xa7, 0x0d, 0x7e, 0xb2, 0x03, 0x02, 0x88,
	0xd3, 0x80, 0xce, 0xad, 0xa4, 0x7d, 0xd7, 0x7e, 0x3f, 0xfb, 0x86, 0x78, 0x54, 0x40, 0x28, 0x52,
	0x17, 0x2b, 0xaf, 0xa9, 0xaf, 0x0e, 0x85, 0x63, 0x64, 0x4b, 0x65, 0x67, 0xb9, 0x35, 0x0f, 0xde,
	0x05, 0x6b, 0x58, 0x27, 0x78, 0x95, 0x96, 0xa8, 0x8a, 0x22, 0x71, 0x43, 0xc9, 0x4f, 0x43, 0xea,
	0x4e, 0xfd, 0xd4, 0xec, 0xda, 0x39, 0x70, 0x63, 0x5f, 0xaa, 0xf7, 0x6b, 0xed, 0xe2, 0x89, 0xd4,
	0xde, 0x4b, 0xa9, 0xf6, 0x1d, 0xc9, 0xe6, 0xcf, 0xb4, 0xcb, 0x87, 0x20, 0xf1, 0x1e, 0x44, 0x47,
	0x4a, 0xb6, 0xa9, 0x89, 0xde, 0xab, 0x7e, 0x6e, 0x00, 0xf1, 0x1b, 0x01, 0x8d, 0xc5, 0x39, 0x99,
	0xe8, 0xe4, 0xc0, 0x0e, 0xe5, 0x99, 0x61, 0x4c, 0xae, 0x94, 0xeb, 0x06, 0xd3, 0x7b, 0x4b, 0x55,
	0xde, 0x90, 0x4c, 0xc3, 0xc9, 0xaf, 0x42, 0x72, 0x28, 0x7e, 0x2e, 0x46, 0xc8, 0xde, 0x5d, 0x9f,
	0x03, 0xf0, 0xa0, 0x56, 0x47, 0x90, 0xae, 0xb3, 0x90, 0xe3, 0x0c, 0x12, 0xaf, 0x40, 0x5a, 0x1b,
	0x00, 0xbf, 0xdf, 0x34, 0xae, 0xf8, 0x1f, 0x04, 0x34, 0x01, 0xe3, 0x88, 0xf1, 0x4e, 0x25, 0x19,
	0x1e, 0xd3, 0xbc, 0x64, 0x8b, 0x3e, 0x16, 0x54, 0xe5, 0x88, 0x20, 0x59, 0x7b, 0xca, 0xdb, 0x05,
	0x7d, 0xd7, 0x7b, 0xf6, 0xeb, 0x8f, 0xfb, 0xde, 0x93, 0x89, 0xee, 0x06, 0x16, 0x15, 0x7e, 0xe0,
	0xeb, 0x73, 0xc9, 0xa6, 0x6b, 0x7c, 0x0c, 0xfa, 0x44, 0xef, 0x59, 0xc3, 0xfe, 0x85, 0xb8, 0xf2,
	0x34, 0x0f, 0x36, 0xb6, 0xa6, 0xfa, 0x2f, 0x12, 0x3f, 0xa0, 0xfe, 0x03, 0xc4, 0x6e, 0xe2, 0xbb,
	0x86, 0xad, 0xe4, 0xb0, 0x25, 0xba, 0xf7, 0x24, 0xbf, 0x3a, 0x9d, 0xec, 0x68, 0x86, 0xdc, 0xdb,
	0xc9, 0x23, 0x57, 0x13, 0x7d, 0xed, 0x84, 0x4b, 0xc2, 0xf6, 0x26, 0xa9, 0xfe, 0x8b, 0x7e, 0xeb,
	0xb4, 0xc4, 0x0f, 0xd1, 0xd8, 0x48, 0x6c, 0x15, 0x5e, 0x06, 0x4e, 0x02, 0x08, 0xf2, 0xd3, 0x69,
	0xd6, 0x05, 0xae, 0xa9, 0x28, 0x0b, 0x6f, 0x8c, 0x14, 0xfd, 0x52, 0x55, 0x5e, 0x92, 0x4c, 0x1d,
	0xe4, 0x7c, 0xb6, 0xac, 0x35, 0x04, 0xbb, 0xd9, 0xc2, 0x60, 0x9d, 0x90, 0x9c, 0x91, 0x50, 0x0a,
	0x53, 0x5f, 0x51, 0x15, 0xd0, 0x24, 0xf2, 0x21, 0x6e, 0x0a, 0x39, 0x2e, 0x30, 0x26, 0x0d, 0xab,
	0xa3, 0x45, 0xaf, 0xaa, 0x4a, 0xa9, 0x64, 0xef, 0x29, 0x2f, 0x62, 0x73, 0x21, 0x2c, 0x15, 0xfe,
	0x34, 0xcc, 0x4a, 0xc7, 0x56, 0x8c, 0x1b, 0xa6, 0xf9, 0xd8, 0x07, 0x11, 0xf7, 0x08, 0x68, 0x32,
	0x0b, 0x58, 0xcf, 0x4d, 0x0b, 0xe1, 0x69, 0x3d, 0xea, 0x94, 0xdb, 0x15, 0x9a, 0x56, 0x47, 0x8b,
	0xf4, 0xe7, 0xb2, 0xe4, 0xd4, 0x5b, 0x9e, 0xc3, 0xa6, 0xc6, 0x67, 0x06, 0x30, 0xcd, 0xc5, 0xa9,
	0x9f, 0xf8, 0x9a, 0xa1, 0x98, 0x1f, 0x43, 0x13, 0x2e, 0xf0, 0x8a, 0x79, 0xea, 0xa5, 0xc8, 0x14,
	0xf3, 0x69, 0xe8, 0x1d, 0xd1, 0xd5, 0xaf, 0x44, 0xe3, 0x30, 0x16, 0x94, 0xd3, 0x4c, 0x9c, 0x63,
	0xa9, 0x8f, 0xf8, 0x63, 0x92, 0xb9, 0x46, 0x16, 0x53, 0xcd, 0xfa, 0x64, 0xe1, 0xbc, 0x43, 0x34,
	0x34, 0xbf, 0xb9, 0x89, 0xce, 0x2b, 0x66, 0x57, 0x46, 0xc2, 0x1b, 0x43, 0xd5, 0x84, 0x0b, 0x79,
	0x57, 0x55, 0x82, 0x12, 0x29, 0x92, 0xdf, 0x82, 0x73, 0x07, 0xf7, 0x6d, 0xbe, 0x57, 0xbf, 0xe8,
	0x3b, 0x8f, 0x0e, 0x36, 0x6c, 0x1b, 0x6c, 0x6c, 0xd5, 0xf6, 0xed, 0x48, 0x9d, 0x6f, 0xc5, 0x83,
	0x81, 0xa9, 0x54, 0xaa, 0x9f, 0xdc, 0x27, 0xf9, 0x24, 0x5b, 0xb0, 0x4e, 0xea, 0xf6, 0xb5, 0xe0,
	0x84, 0xd9, 0x91, 0xfa, 0x2a, 0xef, 0x7b, 0xb1, 0x48, 0x78, 0xe0, 0xfc, 0xa7, 0xc9, 0x13, 0xfb,
	0x08, 0x32, 0x93, 0x8f, 0x88, 0xaf, 0x99, 0x25, 0xed, 0xe3, 0x69, 0x28, 0xcf, 0x7c, 0xb3, 0xa4,
	0x7d, 0x26, 0x48, 0xd7, 0xf1, 0x60, 0x03, 0x5d, 0xe7, 0x52, 0xbd, 0x3b, 0x13, 0xbd, 0x7b, 0x52,
	0xbd, 0xad, 0x04, 0xfc, 0x26, 0xa1, 0xfb, 0x4a, 0x53, 0xf6, 0xca, 0x09, 0x1c, 0x3f, 0xcd, 0x65,
	0xaf, 0x9c, 0x91, 0x26, 0xe3, 0x92, 0x29, 0x63, 0x65, 0x19, 0xca, 0x0e, 0x86, 0xf1, 0xfd, 0xc0,
	0x89, 0x64, 0x49, 0x91, 0x3c, 0x17, 0x12, 0x9c, 0xa6, 0x9a, 0x9b, 0xa8, 0xbb, 0x0e, 0x5c, 0xd5,
	0xc7, 0x48, 0x26, 0xbf, 0xb6, 0xae, 0x81, 0xf3, 0x5b, 0xfd, 0xa4, 0xb5, 0xf8, 0x11, 0x1a, 0x13,
	0x0e, 0xc6, 0xdf, 0x8f, 0x44, 0x37, 0xe1, 0x4c, 0x64, 0x93, 0x30, 0x52, 0x7a, 0xed, 0x67, 0x25,
	0x52, 0x5f, 0xb5, 0xda, 0x68, 0x47, 0xb2, 0x7a, 0x72, 0x3d, 0xe5, 0x27, 0x9d, 0xc9, 0x11, 0x4e,
	0x4e, 0xc4, 0x6f, 0x86, 0x9f, 0xef, 0x25, 0xbe, 0x87, 0x72, 0x74, 0xa0, 0xe3, 0x6f, 0x8b, 0xf8,
	0xdb, 0xb3, 0x1d, 0xbf, 0x5d, 0x8c, 0x77, 0x06, 0x7f, 0x9a, 0x70, 0xa5, 0xa4, 0x97, 0x3c, 0xcb,
	0xf2, 0xdd, 0x44, 0xcf, 0x7e, 0xd3, 0xe7, 0x58, 0x4b, 0xfd, 0x20, 0x8e, 0xa5, 0x0f, 0x46, 0xfc,
	0xc1, 0xc9, 0xc3, 0xbe, 0x37, 0xca, 0xb9, 0x6e, 0x70, 0x6f, 0x60, 0x90, 0x9b, 0x86, 0x93, 0x67,
	0x69, 0xd7, 0xaf, 0x68, 0x6d, 0x97, 0x00, 0xcb, 0xf4, 0xab, 0xde, 0x8c, 0x85, 0x7e, 0x53, 0xeb,
	0xbc, 0x37, 0xd1, 0x04, 0xcb, 0x55, 0xe9, 0x20, 0xf1, 0x5c, 0x6c, 0x96, 0x78, 0xda, 0x22, 0x86,
	0x17, 0xad, 0x60, 0x63, 0x70, 0x22, 0xcf, 0xbc, 0xdf, 0xa0, 0x49, 0xb6, 0x9b, 0xee, 0xde, 0x8d,
	0xfe, 0x4b, 0x34, 0xc9, 0x06, 0x8f, 0xdb, 0x32, 0x04, 0x24, 0x7e, 0x1f, 0x0e, 0xcc, 0x99, 0x3c,
	0x09, 0x28, 0x0f, 0x39, 0x53, 0x24, 0x91, 0x37, 0x61, 0xac, 0x98, 0x0a, 0xd8, 0x44, 0xf4, 0x0d,
	0x1d, 0xb0, 0xef, 0x6b, 0x16, 0x81, 0x89, 0x8c, 0x39, 0x32, 0xf4, 0xb8, 0xff, 0x72, 0x32, 0x8d,
	0x69, 0x63, 0xe2, 0x53, 0x57, 0x58, 0xf9, 0xd4, 0xc5, 0xaa, 0xf2, 0x84, 0x44, 0xcb, 0x86, 0xe0,
	0x52, 0x71, 0x00, 0xe0, 0x1c, 0x83, 0x27, 0x7d, 0xc9, 0xc4, 0x93, 0xce, 0x1b, 0x9a, 0x27, 0x25,
	0x03, 0x8c, 0x3c, 0x96, 0xd4, 0x0e, 0xc9, 0x87, 0x88, 0x25, 0x75, 0x98, 0xdc, 0xcf, 0x2c, 0xe9,
	0xcf, 0x2c, 0xe9, 0x4f, 0x9b, 0x25, 0x5d, 0x61, 0x98, 0x81, 0x8c, 0xa1, 0x84, 0xce, 0xc5, 0x0c,
	0x04, 0x98, 0xd1, 0x86, 0x1c, 0x79, 0x3c, 0xc7, 0x8d, 0x62, 0x66, 0x94, 0xda, 0x85, 0xfc, 0xcc,
	0x8c, 0x3e, 0x68, 0x66, 0xf4, 0x6d, 0x0b, 0x33, 0x5a, 0xaa, 0x2a, 0x45, 0x8c, 0x19, 0x5d, 0x32,
	0x1c, 0x66, 0x74, 0x1e, 0x64, 0x81, 0x89, 0x47, 0xeb, 0x83, 0xc9, 0xa6, 0xc3, 0x58, 0x48, 0x37,
	0xff, 0x67, 0x06, 0xd5, 0x9d, 0x41, 0x75, 0xb8, 0x45, 0x7e, 0x66, 0x50, 0xef, 0x25, 0x83, 0x5a,
	0xac, 0x2a, 0xaf, 0xa0, 0xa5, 0x6e, 0x26, 0x03, 0x4e, 0xc6, 0x89, 0x06, 0x8f, 0x4a, 0x29, 0x91,
	0x6f, 0x17, 0x8b, 0x24, 0x37, 0x92, 0xb8, 0x51, 0xf1, 0x35, 0x93, 0xee, 0x73, 0xaa, 0x23, 0xb2,
	0x9b, 0xd2, 0xc2, 0xf0, 0x26, 0x04, 0x70, 0xda, 0x93, 0xc7, 0x6f, 0x98, 0x94, 0xd5, 0x7f, 0x2e,
	0xd0, 0xd8, 0xa0, 0x26, 0x06, 0xf7, 0x6d, 0x2b, 0x83, 0x5b, 0x7c, 0x1b, 0x0c, 0xee, 0xd0, 0x62,
	0x58, 0x77, 0x23, 0x84, 0x42, 0x55, 0x79, 0x1e, 0x3d, 0x2b, 0x39, 0xcc, 0x49, 0x9e, 0x4a, 0x02,
	0x60, 0xd0, 0x75, 0x58, 0xf7, 0x17, 0xef, 0xaa, 0xa9, 0xdf, 0x8f, 0x74, 0x57, 0x79, 0xfb, 0x03,
	0xe7, 0x5d, 0xfd, 0x0c, 0xa2, 0x04, 0x9a, 0xb6, 0x74, 0x95, 0x75, 0x4b, 0x9f, 0xd6, 0xa7, 0xc6,
	0xb6, 0x74, 0x0c, 0x1b, 0xc9, 0xb0, 0x3f, 0x48, 0xb7, 0x85, 0xbb, 0x05, 0x34, 0x3e, 0xf6, 0x6e,
	0xe4, 0x7d, 0x8e, 0x3b, 0xc5, 0x5b, 0x59, 0xb4, 0x41, 0x55, 0xde, 0x91, 0x2c, 0x55, 0xf2, 0x2a,
	0xdc, 0x4d, 0xeb, 0xda, 0x39, 0xa8, 0x9e, 0x4d, 0x97, 0x26, 0x37, 0x5f, 0xdf, 0xd4, 0x2b, 0x17,
	0x92, 0x3b, 0xda, 0xb8, 0xac, 0x86, 0xfa, 0x8b, 0x43, 0xeb, 0xba, 0xae, 0x33, 0xd9, 0xed, 0x5f,
	0x0f, 0x76, 0x7c, 0x35, 0xdf, 0x6f, 0x19, 0x9e, 0x62, 0x8d, 0x75, 0xcd, 0xe9, 0x0c, 0x21, 0x18,
	0xd6, 0xfc, 0x03, 0x88, 0x1e, 0x38, 0xa2, 0x50, 0x66, 0xc5, 0x70, 0x50, 0x66, 0xb8, 0x26, 0x10,
	0xcb, 0x54, 0xa5, 0x18, 0x29, 0x92, 0x0d, 0x08, 0xf2, 0x54, 0x80, 0x9e, 0x71, 0xe0, 0xd2, 0xdb,
	0x40, 0xfc, 0x9f, 0x59, 0x10, 0x3a, 0xd0, 0x84, 0x75, 0xbf, 0xb2, 0x62, 0xdd, 0xa2, 0xdb, 0x20,
	0x24, 0x99, 0x51, 0x6c, 0x57, 0x4c, 0x51, 0xee, 0x19, 0xd3, 0x43, 0xd9, 0x3b, 0xd4, 0x43, 0xf9,
	0xa1, 0x7a, 0x20, 0x2f, 0xb6, 0x3a, 0x5d, 0x4d, 0xc7, 0x8c, 0x34, 0x95, 0xed, 0x8e, 0x66, 0x52,
	0x5d, 0x43, 0x76, 0xbb, 0xd8, 0xe0, 0xbd, 0xb3, 0xb8, 0x2e, 0x76, 0xde, 0x3b, 0x0d, 0x87, 0x9d,
	0x7d, 0x37, 0x1c, 0xb6, 0xc3, 0x11, 0x1f, 0xf5, 0x83, 0x1d, 0xf1, 0xc3, 0x82, 0xaa, 0xa8, 0x02,
	0x6a, 0x13, 0x24, 0x1b, 0x92, 0xc9, 0x1f, 0x5a, 0x11, 0xf5, 0x41, 0x2a, 0x84, 0xbf, 0x25, 0x91,
	0x13, 0x47, 0x14, 0x01, 0x79, 0xd5, 0xa4, 0x0e, 0x76, 0x21, 0x20, 0x7c, 0xe8, 0x51, 0x12, 0xef,
	0x02, 0xc7, 0x03, 0x30, 0x51, 0x8f, 0x57, 0x54, 0xe5, 0x65, 0xf4, 0xa2, 0x64, 0x07, 0xc1, 0x70,
	0xc9, 0x87, 0x4f, 0x13, 0xd1, 0x34, 0xe2, 0x38, 0x4a, 0x5f, 0xa0, 0x94, 0x7a, 0x2c, 0x31, 0xd9,
	0x4f, 0xcd, 0xc5, 0x50, 0xc4, 0x27, 0x9e, 0x24, 0x8b, 0xc6, 0xdb, 0x07, 0x42, 0x31, 0xc8, 0x72,
	0xf6, 0xff, 0x52, 0xff, 0xca, 0x3f, 0xb5, 0x27, 0xa9, 0x08, 0xa8, 0xca, 0x52, 0xde, 0xbd, 0x75,
	0x31, 0x1b, 0x23, 0xd9, 0xdc, 0xa0, 0x35, 0x5e, 0x19, 0xd8, 0x7a, 0x90, 0x11, 0x48, 0x90, 0xd4,
	0x94, 0x95, 0x24, 0xba, 0x7b, 0xf4, 0x13, 0xcf, 0x92, 0xda, 0xcc, 0x8c, 0xce, 0x98, 0xe8, 0xc9,
	0xad, 0xb2, 0xdd, 0x8b, 0x85, 0x99, 0x45, 0xc5, 0x15, 0x05, 0xbc, 0xb7, 0xfa, 0xdb, 0xcc, 0x5b,
	0x3d, 0xc3, 0xd0, 0x64, 0x53, 0x6f, 0xf5, 0x59, 0xf6, 0x4f, 0x83, 0xb7, 0x3a, 0xcd, 0xd4, 0xa4,
	0xdf, 0xbf, 0x42, 0xae, 0xd7, 0x7e, 0xff, 0x52, 0x6f, 0xf6, 0x8d, 0x68, 0x02, 0x3c, 0xc2, 0x94,
	0xfa, 0x78, 0x24, 0x56, 0x19, 0xa8, 0x09, 0x12, 0x0b, 0xaa, 0x97, 0x54, 0xe5, 0x05, 0xc9, 0x5a,
	0x47, 0xed, 0x2f, 0xb4, 0xbe, 0x06, 0x6d, 0x5f, 0x17, 0x2f, 0x02, 0xb0, 0x18, 0x33, 0x59, 0x3b,
	0x8a, 0x9b, 0xd1, 0x98, 0x40, 0x7d, 0x3c, 0x52, 0x51, 0x19, 0xa8, 0x09, 0x85, 0xab, 0x31, 0x21,
	0x72, 0x78, 0xe2, 0x29, 0x46, 0x13, 0xbc, 0x7f, 0x90, 0xff, 0x8d, 0xef, 0x29, 0xe7, 0x9a, 0xb2,
	0x64, 0xc3, 0x85, 0x8c, 0x1f, 0x38, 0xdf, 0x17, 0x65, 0xed, 0x16, 0xb0, 0x93, 0x2a, 0xd7, 0x5c,
	0x3c, 0x28, 0xa0, 0xf1, 0x35, 0x81, 0xfa, 0x70, 0xe5, 0xbb, 0x6b, 0x83, 0xb5, 0xfa, 0xdb, 0x27,
	0x48, 0x84, 0x5f, 0x8f, 0x59, 0xbf, 0xbd, 0x12, 0xb7, 0x82, 0x37, 0x5e, 0x3d, 0xf8, 0x99, 0x17,
	0x2d, 0x57, 0x95, 0x97, 0x24, 0x4b, 0x7f, 0x59, 0x82, 0x6f, 0x27, 0x8f, 0x5c, 0x25, 0x8e, 0xc8,
	0x78, 0x12, 0x90, 0xad, 0x99, 0x3d, 0xb7, 0x00, 0x55, 0xd9, 0x9c, 0x2c, 0x63, 0x88, 0x9b, 0x59,
	0x80, 0x85, 0x51, 0xe9, 0xb4, 0xee, 0x56, 0x44, 0x36, 0xc5, 0x56, 0x90, 0x74, 0xd8, 0xd0, 0xd8,
	0x0a, 0x33, 0x75, 0xfe, 0xdc, 0x9c, 0x30, 0x1a, 0xd7, 0x58, 0xb2, 0x23, 0xff, 0x81, 0x65, 0x47,
	0xce, 0xb9, 0xad, 0xef, 0xe2, 0xa4, 0xc9, 0xe4, 0xbb, 0x0b, 0x54, 0xe5, 0x29, 0x96, 0x3a, 0x79,
	0x8e, 0xfd, 0xbb, 0xa9, 0xf6, 0x1d, 0xc9, 0xcb, 0xa7, 0xed, 0xf9, 0x94, 0x37, 0x42, 0x06, 0xfa,
	0x35, 0x15, 0xc4, 0x40, 0x6b, 0xb5, 0xaa, 0xac, 0x90, 0x48, 0x91, 0xac, 0xb0, 0x71, 0x06, 0x1b,
	0x9a, 0x41, 0x1a, 0x01, 0xf1, 0x1b, 0xd6, 0x54, 0x60, 0x61, 0xe2, 0xb6, 0x54, 0xe3, 0x79, 0xfd,
	0x85, 0x4d, 0xe8, 0x7c, 0x27, 0x40, 0x59, 0x07, 0x37, 0x4d, 0xb5, 0xec, 0x27, 0x43, 0xf1, 0xea,
	0x4f, 0x74, 0x8f, 0xd4, 0x9f, 0xe7, 0x04, 0x94, 0x53, 0x47, 0xef, 0x42, 0x10, 0x60, 0x35, 0x0b,
	0xaa, 0xd2, 0x28, 0x48, 0xac, 0x58, 0xde, 0xc2, 0x80, 0x06, 0x08, 0x91, 0xf8, 0xf6, 0xf8, 0xc0,
	0x37, 0x87, 0x81, 0xb5, 0x26, 0xb7, 0xe3, 0xe1, 0xeb, 0xc9, 0xd3, 0x4d, 0x4c, 0xa8, 0x0b, 0x3f,
	0xe1, 0xe6, 0x48, 0x74, 0xef, 0x05, 0x41, 0xd3, 0x77, 0x0d, 0xdb, 0x98, 0x29, 0x13, 0x2f, 0x39,
	0x1d, 0x38, 0xb7, 0x15, 0x04, 0xa2, 0x7a, 0xc9, 0x8d, 0xc6, 0xc1, 0xd3, 0xbd, 0xc9, 0xa3, 0x5d,
	0xc5, 0xc0, 0xd0, 0xf8, 0xd9, 0x24, 0xc4, 0x77, 0x11, 0xaa, 0x8c, 0x84, 0x63, 0xf5, 0xb5, 0x98,
	0x5e, 0x81, 0xc3, 0x04, 0x16, 0x33, 0x72, 0xc5, 0xf2, 0xf3, 0xc6, 0xdf, 0x5a, 0xd7, 0xf5, 0xe4,
	0xde, 0xb3, 0x34, 0x30, 0x02, 0x08, 0xec, 0xa2, 0x90, 0x4c, 0x32, 0x75, 0xf0, 0xca, 0x40, 0xd7,
	0x35, 0xb0, 0x82, 0x04, 0x09, 0x91, 0x9f, 0x1b, 0x44, 0x8c, 0xa2, 0xb1, 0x3a, 0xbc, 0xd9, 0xa9,
	0x9a, 0xec, 0x2e, 0x57, 0xa4, 0x6d, 0x74, 0x9e, 0xed, 0x71, 0xc9, 0xd4, 0x8d, 0xe6, 0x5e, 0xd7,
	0xa1, 0x80, 0x77, 0x1f, 0x16, 0xc9, 0xce, 0x8d, 0xa9, 0xb1, 0xf8, 0x01, 0xca, 0x8c, 0x07, 0xaa,
	0xa9, 0x0b, 0xc5, 0xa2, 0x61, 0xe3, 0x6e, 0x35, 0xc1, 0x5c, 0x6c, 0xce, 0x87, 0x87, 0x90, 0x9f,
	0x74, 0xc4, 0x5b, 0x62, 0x0b, 0xca, 0xe7, 0x15, 0xc7, 0xcd, 0xc5, 0x6f, 0x04, 0x34, 0x8e, 0xc9,
	0x35, 0xb1, 0x48, 0x0d, 0xdc, 0x21, 0xf6, 0x0a, 0xaa, 0xb2, 0x5b, 0x90, 0xcc, 0x75, 0xf2, 0x16,
	0x92, 0x9f, 0xfc, 0xf2, 0x29, 0xe0, 0x26, 0xe7, 0x85, 0x23, 0xd1, 0xda, 0x40, 0xcd, 0xc2, 0xe0,
	0x07, 0xf1, 0x60, 0x34, 0x1c, 0xa8, 0x99, 0xff, 0x5d, 0xc3, 0xb6, 0xe4, 0xb1, 0x8b, 0x83, 0x0d,
	0xed, 0x3c, 0x31, 0x63, 0x9d, 0x34, 0xb5, 0x25, 0xf5, 0xe5, 0x97, 0x89, 0xee, 0xe6, 0xe4, 0xe1,
	0xeb, 0x8e, 0x0d, 0xf2, 0xbd, 0x5a, 0xeb, 0x95, 0xe2, 0xf5, 0xab, 0x48, 0x41, 0xd3, 0xe1, 0xb2,
	0x92, 0x62, 0xf8, 0xdb, 0x6f, 0x9e, 0x89, 0xf8, 0x02, 0x1a, 0xbd, 0x61, 0x13, 0x41, 0x13, 0x9c,
	0x91, 0x7b, 0x5c, 0xd1, 0x0c, 0x55, 0xc9, 0x95, 0x8c, 0x52, 0xfc, 0x60, 0x83, 0x4b, 0xa3, 0xac,
	0xc4, 0x6f, 0x94, 0x8b, 0x65, 0x84, 0x07, 0x54, 0xa2, 0xc1, 0x00, 0xb6, 0xf1, 0x83, 0x14, 0xdd,
	0xd8, 0x80, 0xdd, 0x5c, 0x23, 0x4f, 0x60, 0x43, 0x10, 0x8e, 0xd9, 0x5c, 0x2f, 0x6e, 0x13, 0x50,
	0x16, 0xd6, 0x49, 0xe0, 0x64, 0xdd, 0x63, 0xe4, 0x59, 0xd6, 0x9d, 0xc3, 0x13, 0xc6, 0xd2, 0x22,
	0x2c, 0x5d, 0x5b, 0xa9, 0x2a, 0x65, 0x12, 0xf4, 0x90, 0x5f, 0x31, 0xc0, 0x82, 0x4f, 0x2c, 0x2e,
	0xa5, 0x62, 0x56, 0xb0, 0xd7, 0x4d, 0x1e, 0xed, 0x1a, 0x54, 0x9b, 0x30, 0xf3, 0xbd, 0x5f, 0x3f,
	0x6f, 0xdd, 0x9f, 0xeb, 0x0c, 0x69, 0xcb, 0x61, 0xad, 0x6d, 0x5b, 0xf2, 0xd0, 0x25, 0x3f, 0x0c,
	0x74, 0x17, 0x51, 0x4d, 0xf4, 0xae, 0x1c, 0x01, 0xbc, 0xad, 0xae, 0xcf, 0xa3, 0xd1, 0x0c, 0xff,
	0x6e, 0x4b, 0x3e, 0x75, 0x44, 0x50, 0x95, 0x03, 0x02, 0xda, 0x27, 0x48, 0x2e, 0x4c, 0x8d, 0x3c,
	0x95, 0x90, 0x30, 0x7a, 0x80, 0x2c, 0x4e, 0xb4, 0x7c, 0x40, 0x41, 0x16, 0x03, 0x85, 0xbf, 0x1b,
	0x6f, 0x0a, 0x96, 0x5b, 0x89, 0x77, 0xb5, 0x25, 0xc4, 0xf4, 0xa6, 0x30, 0x91, 0x26, 0xf4, 0xa7,
	0xad, 0x7c, 0x25, 0x68, 0xbc, 0x79, 0xbf, 0xc4, 0x3c, 0x8e, 0x3a, 0xc2, 0xe2, 0x0c, 0x8a, 0x34,
	0x0d, 0x65, 0xd7, 0x45, 0x22, 0x35, 0x94, 0x7b, 0xf2, 0x93, 0x5f, 0x3e, 0xd5, 0xc3, 0xa2, 0x58,
	0x1b, 0x0b, 0x1b, 0x19, 0x4c, 0xef, 0x1b, 0xa6, 0x57, 0xf3, 0x53, 0x43, 0x92, 0x21, 0x58, 0x55,
	0x49, 0x20, 0x1e, 0x80, 0xa7, 0x17, 0xb0, 0xc2, 0x63, 0x59, 0x34, 0xb2, 0x64, 0xeb, 0x45, 0x43,
	0x8a, 0x36, 0x23, 0x4d, 0x77, 0xf1, 0x0d, 0x34, 0x9a, 0x9d, 0x6f, 0x0c, 0x1d, 0xa7, 0x68, 0xe5,
	0xb4, 0x01, 0x04, 0x5f, 0x32, 0x3a, 0x50, 0x66, 0x37, 0x79, 0xf9, 0x14, 0x01, 0x82, 0x51, 0x27,
	0x96, 0xeb, 0xa4, 0x35, 0xb6, 0x89, 0x48, 0x61, 0xa7, 0x58, 0x07, 0x5d, 0x1b, 0x88, 0x6d, 0x22,
	0xb2, 0x23, 0xbd, 0x99, 0x3c, 0x83, 0xc7, 0x3d, 0xfd, 0x6c, 0xee, 0xdb, 0xab, 0xb5, 0x5d, 0x4a,
	0xf4, 0xf6, 0x6a, 0xbb, 0x4f, 0xfb, 0x71, 0x13, 0xdf, 0xae, 0x49, 0x68, 0x1a, 0x89, 0xfa, 0x68,
	0x65, 0xc7, 0x97, 0xa1, 0x31, 0xec, 0xcb, 0xec, 0x41, 0x8f, 0xa3, 0x87, 0xf0, 0xe5, 0xf2, 0x18,
	0x86, 0xda, 0x34, 0x0f, 0xe4, 0x14, 0x3f, 0xdf, 0xe0, 0x87, 0x67, 0xce, 0x9f, 0x27, 0xef, 0x8a,
	0x0c, 0x4a, 0x1a, 0xdd, 0xdf, 0x15, 0x66, 0x03, 0xd0, 0x62, 0x4b, 0x7c, 0xf2, 0xa7, 0x6e, 0x83,
	0xab, 0x67, 0xbc, 0xfb, 0x36, 0xc1, 0xce, 0xbc, 0x67, 0x0d, 0xe9, 0xd0, 0x78, 0x7f, 0x19, 0xfb,
	0xec, 0x1f, 0x90, 0xb1, 0x1f, 0xf5, 0x10, 0x30, 0xf6, 0x56, 0xb6, 0x28, 0xe7, 0x01, 0xb0, 0x45,
	0xc6, 0x63, 0x62, 0x74, 0x3a, 0x7b, 0x89, 0xfb, 0xf8, 0x98, 0x40, 0xb7, 0xf5, 0xdd, 0x7b, 0xf1,
	0x98, 0xa0, 0xac, 0xe0, 0x18, 0x67, 0x56, 0xd0, 0xf5, 0xcb, 0x77, 0xcf, 0x0a, 0x1a, 0xcf, 0x98,
	0xb1, 0xf7, 0xfb, 0x19, 0x43, 0xc5, 0x76, 0xe3, 0xb8, 0x67, 0x0c, 0x15, 0xdb, 0x91, 0x67, 0x8c,
	0x4d, 0x71, 0xee, 0xf4, 0x8c, 0xa1, 0x62, 0x3d, 0xd3, 0x33, 0x66, 0xfc, 0x88, 0x79, 0xc6, 0x4c,
	0xb8, 0x8f, 0xcf, 0x98, 0x42, 0x94, 0x59, 0x15, 0x8c, 0x55, 0x12, 0xbd, 0x36, 0xd1, 0x8e, 0x04,
	0x63, 0x95, 0x54, 0xe7, 0x65, 0x90, 0x62, 0xac, 0x7b, 0x67, 0x22, 0xab, 0x60, 0xac, 0x52, 0xbf,
	0x8d, 0x0d, 0xe6, 0x7a, 0x12, 0x39, 0xe8, 0x56, 0xc2, 0xbb, 0xae, 0x2c, 0x1c, 0x7f, 0x5a, 0x06,
	0xd2, 0x8b, 0xa3, 0x99, 0x72, 0xac, 0xf7, 0x58, 0xc6, 0x37, 0x7b, 0xcd, 0xbc, 0x77, 0xb5, 0x95,
	0xf7, 0x16, 0x5d, 0x46, 0xaf, 0x88, 0x47, 0x43, 0xe1, 0x6a, 0x18, 0xfd, 0x0e, 0x38, 0xf3, 0x91,
	0xc6, 0x14, 0x3f, 0xa3, 0x2a, 0x8b, 0xd1, 0x42, 0xc9, 0x85, 0xaf, 0x90, 0xa7, 0xc2, 0x9e, 0xb1,
	0x72, 0xe2, 0xec, 0xdd, 0xe2, 0x61, 0x01, 0xd3, 0x47, 0x1a, 0xab, 0xe9, 0x1f, 0x22, 0xbd, 0x13,
	0xe3, 0xf5, 0x1c, 0x1d, 0xbe, 0x75, 0x4a, 0x52, 0xad, 0x57, 0x9b, 0x94, 0x7a, 0x47, 0x47, 0xa1,
	0x69, 0x24, 0x26, 0xbd, 0x95, 0x31, 0xfb, 0xb5, 0x13, 0x63, 0xf6, 0xfc, 0x10, 0x8c, 0x99, 0x2b,
	0xdd, 0x31, 0xf1, 0x6a, 0x7f, 0x26, 0x58, 0x74, 0xb5, 0x45, 0x9f, 0x0b, 0xaa, 0x72, 0x4e, 0x90,
	0x68, 0xa9, 0xdc, 0x2e, 0x58, 0xd3, 0x15, 0xb4, 0x34, 0x26, 0xf7, 0x7c, 0x99, 0xec, 0x6e, 0x4c,
	0xed, 0xdb, 0x69, 0xbc, 0xa8, 0xb1, 0xad, 0x91, 0x7e, 0x2d, 0x74, 0xf4, 0x68, 0xc7, 0x2e, 0x7c,
	0xd7, 0xb0, 0x4d, 0x3b, 0x73, 0x78, 0x70, 0xfb, 0x05, 0x38, 0xe1, 0xd0, 0x77, 0xa0, 0xff, 0x4b,
	0xad, 0xf1, 0x2c, 0xf0, 0xa4, 0xc4, 0xdf, 0xfc, 0xd0, 0x0d, 0x60, 0x4e, 0xb5, 0xae, 0xeb, 0x5a,
	0xd3, 0x11, 0xc3, 0x61, 0xac, 0xaf, 0x1d, 0xe0, 0xae, 0x33, 0xb8, 0x84, 0xa2, 0x1e, 0xbe, 0x9e,
	0xf8, 0xf6, 0x46, 0xea, 0xf4, 0xc5, 0x81, 0x8b, 0x67, 0x06, 0x6e, 0x7c, 0xac, 0xf5, 0x9c, 0xfb,
	0xae, 0x61, 0x1b, 0x53, 0x2c, 0x8b, 0x7f, 0x2e, 0xa0, 0xa9, 0xd1, 0x20, 0x4e, 0x66, 0xae, 0x83,
	0x2f, 0x56, 0x46, 0xa3, 0x51, 0x92, 0x4d, 0x55, 0x05, 0x55, 0xd9, 0x2b, 0x48, 0xce, 0x6d, 0xe4,
	0x7a, 0xf0, 0x6d, 0x84, 0xd5, 0x68, 0x1d, 0x17, 0x88, 0x1a, 0xad, 0xbb, 0xf3, 0x56, 0x5f, 0x4b,
	0xa2, 0xb7, 0x91, 0x4c, 0x9f, 0xae, 0x55, 0x67, 0x50, 0xcf, 0x7f, 0xca, 0x4a, 0x12, 0xdd, 0x7b,
	0x0d, 0x86, 0x1b, 0xb3, 0x85, 0xfa, 0xea, 0xfb, 0x0f, 0x24, 0xba, 0x0f, 0xea, 0x7d, 0xfb, 0x0f,
	0xf0, 0xf0, 0x4b, 0x1e, 0xb9, 0x9a, 0x3a, 0x78, 0x32, 0x79, 0xa8, 0x49, 0x9f, 0xbd, 0xf3, 0x6c,
	0xc4, 0x7e, 0x01, 0x4d, 0xda, 0x14, 0x0c, 0xd6, 0x91, 0x62, 0x78, 0xe7, 0x11, 0xf9, 0x2f, 0x91,
	0x6c, 0xd8, 0xeb, 0xe5, 0x7a, 0x32, 0x9b, 0xde, 0xbd, 0xc4, 0x3c, 0xed, 0x7c, 0x2f, 0xec, 0x17,
	0xd9, 0x29, 0xbc, 0x11, 0xfa, 0x7a, 0xfa, 0x77, 0x26, 0xba, 0x5b, 0x07, 0x0f, 0x36, 0x24, 0xbb,
	0xb6, 0xc2, 0x66, 0xe9, 0x85, 0x78, 0xfd, 0xf0, 0x73, 0xe0, 0xc6, 0xbe, 0x81, 0xd3, 0x2d, 0xc3,
	0x5d, 0x83, 0x7d, 0x26, 0xe2, 0xcb, 0x28, 0x27, 0x52, 0x17, 0x8c, 0x62, 0x51, 0x1f, 0xa8, 0xb6,
	0xe6, 0xa8, 0xca, 0x54, 0x89, 0x15, 0xca, 0xa3, 0x93, 0x07, 0x5a, 0x13, 0xfd, 0x1d, 0x5c, 0x78,
	0xa1, 0x2a, 0x3f, 0xab, 0x2d, 0x6c, 0x13, 0x54, 0x65, 0x8f, 0x80, 0x9a, 0x04, 0xc9, 0xe5, 0x3c,
	0xc8, 0xeb, 0x60, 0x1e, 0xac, 0x3c, 0xf5, 0x71, 0xb7, 0xd6, 0x78, 0xc5, 0xb0, 0x71, 0xec, 0x3f,
	0x60, 0xd0, 0x1a, 0x9c, 0x31, 0x43, 0x6b, 0xeb, 0x62, 0x08, 0xaa, 0x57, 0x25, 0x8f, 0x5c, 0xc5,
	0x0a, 0x22, 0x9c, 0xe7, 0xe1, 0xcc, 0xe5, 0x81, 0xaf, 0xcf, 0x7e, 0xd7, 0xb0, 0xed, 0xa6, 0xc0,
	0x9f, 0x8c, 0x9b, 0x02, 0x9b, 0x11, 0x7e, 0x14, 0xdb, 0xa6, 0xf2, 0xa3, 0x78, 0x14, 0xbb, 0xac,
	0x6a, 0x38, 0x8f, 0xe2, 0x13, 0x1e, 0x34, 0x23, 0x4d, 0x77, 0xb1, 0xea, 0xb6, 0x1e, 0xc5, 0xf8,
	0xa5, 0xc5, 0x3d, 0x8a, 0x4d, 0x56, 0x10, 0xac, 0x99, 0xfd, 0x81, 0x7c, 0x54, 0x18, 0xc6, 0x0b,
	0x39, 0xac, 0x2a, 0x9b, 0xc8, 0x0b, 0xb9, 0xd2, 0x8a, 0x3a, 0xed, 0x3b, 0xf8, 0x47, 0x32, 0x7c,
	0xe0, 0xbb, 0x86, 0x6d, 0x3a, 0xdb, 0x79, 0x6e, 0x9b, 0x15, 0xf1, 0x71, 0x4c, 0x60, 0x72, 0xd8,
	0xc1, 0x02, 0xb6, 0xe7, 0x7c, 0xea, 0xe0, 0x49, 0x4b, 0x5f, 0xf2, 0xd2, 0xfe, 0x07, 0x02, 0x9a,
	0xbc, 0x3c, 0x18, 0xb7, 0x51, 0xf3, 0xcd, 0x4e, 0xd4, 0x7c, 0xad, 0xaa, 0x3c, 0x6f, 0xa6, 0xe6,
	0xf3, 0x58, 0x47, 0x2f, 0xf6, 0xfb, 0x1d, 0xd8, 0xf5, 0xb9, 0xd6, 0xdb, 0x53, 0x56, 0x02, 0x96,
	0xd0, 0x89, 0x9e, 0xfd, 0x03, 0x17, 0xbf, 0x4d, 0x1e, 0xee, 0x1f, 0x36, 0xa9, 0x2f, 0x7c, 0x5e,
	0x55, 0x9e, 0x41, 0xb2, 0xe4, 0x34, 0x27, 0x79, 0x06, 0x28, 0xf3, 0x2c, 0x80, 0x26, 0x17, 0xf5,
	0xbf, 0xf2, 0x40, 0x52, 0x87, 0x9f, 0xc4, 0x2d, 0xcd, 0x4c, 0x29, 0xac, 0x48, 0x07, 0xfa, 0xd0,
	0x5f, 0xa9, 0xca, 0x72, 0x54, 0x2a, 0x39, 0xc2, 0xe3, 0x76, 0x2d, 0x2a, 0xfe, 0x22, 0x03, 0x4d,
	0xc1, 0xb1, 0xd5, 0xad, 0x18, 0xb2, 0xc0, 0xa4, 0x17, 0xcd, 0x73, 0x97, 0x5f, 0x10, 0xb1, 0xc5,
	0x3b, 0x76, 0x81, 0x8b, 0x72, 0xd7, 0x02, 0x17, 0x5e, 0xa0, 0x52, 0x6c, 0xd1, 0x76, 0xde, 0x91,
	0x5c, 0x64, 0x25, 0x1f, 0x22, 0x25, 0x93, 0x26, 0xd2, 0x78, 0x8a, 0x0f, 0x91, 0xe2, 0x30, 0x94,
	0xc9, 0x3b, 0x99, 0x0b, 0x8f, 0x72, 0x50, 0x50, 0x95, 0x7d, 0x02, 0x6a, 0x15, 0x24, 0x47, 0x18,
	0xca, 0xf5, 0xb0, 0x17, 0x8c, 0xd7, 0x7a, 0x40, 0xe6, 0x02, 0xff, 0xd8, 0x43, 0x72, 0x3f, 0x8c,
	0xb4, 0xc3, 0xb2, 0x72, 0x88, 0x64, 0x8b, 0xec, 0xb0, 0x0c, 0xcb, 0x6c, 0xa0, 0x44, 0x55, 0x14,
	0xf4, 0x4b, 0xc9, 0x19, 0x14, 0xf4, 0x9c, 0x70, 0x97, 0xb4, 0xb3, 0xe9, 0xc0, 0x7f, 0xcf, 0x46,
	0x13, 0x94, 0xaa, 0x2a, 0xcc, 0x5d, 0x18, 0x3e, 0xe4, 0xb6, 0xc0, 0xd6, 0x8a, 0x2d, 0x15, 0x61,
	0xf3, 0x67, 0xda, 0xc5, 0xeb, 0x0c, 0xbf, 0xa9, 0xf0, 0x50, 0x18, 0x96, 0xf0, 0xb0, 0x0c, 0x65,
	0xe9, 0x48, 0x13, 0xcb, 0xf5, 0x78, 0x33, 0xc0, 0x8c, 0xee, 0x09, 0x09, 0x4a, 0xe4, 0x99, 0x96,
	0x81, 0x01, 0x5b, 0xcb, 0xca, 0xb5, 0x8e, 0x4b, 0xda, 0xf1, 0x86, 0xef, 0x8b, 0x46, 0xa9, 0x42,
	0x66, 0x8e, 0x90, 0x2b, 0xf8, 0xa1, 0xbd, 0xf8, 0x5b, 0x34, 0x29, 0x14, 0x0e, 0xc5, 0x57, 0x46,
	0xaa, 0x43, 0xe1, 0xf2, 0x40, 0x2c, 0xf6, 0x7e, 0x24, 0x5a, 0x45, 0x4e, 0xd0, 0x22, 0x55, 0x29,
	0x90, 0xec, 0xb5, 0x72, 0xee, 0xe0, 0xae, 0xd6, 0x81, 0x4f, 0x1b, 0x75, 0x16, 0xab, 0x7d, 0x07,
	0x11, 0x7c, 0x74, 0xed, 0xd4, 0xb1, 0xc2, 0xde, 0x58, 0x8c, 0x9a, 0x6f, 0x92, 0x4c, 0x2e, 0x5e,
	0x0c, 0x7f, 0x93, 0x2c, 0x85, 0x69, 0x13, 0xee, 0x16, 0x23, 0xf2, 0x60, 0x47, 0xc3, 0xc0, 0xb9,
	0xad, 0xda, 0xee, 0x53, 0x5a, 0xe3, 0x59, 0xb6, 0x0d, 0x3a, 0xfb, 0x0d, 0xe5, 0xf8, 0x88, 0xc0,
	0xf9, 0x2b, 0x2b, 0x31, 0x3f, 0x18, 0x6e, 0x0a, 0x68, 0x7c, 0x24, 0x5c, 0xb3, 0x05, 0xe4, 0xe1,
	0xd8, 0x56, 0x1a, 0x02, 0xac, 0x7c, 0x26, 0xa8, 0xca, 0x59, 0x41, 0xb2, 0x54, 0xca, 0xaa, 0xa0,
	0x33, 0x90, 0xfa, 0x68, 0x67, 0x09, 0x83, 0x4a, 0xd9, 0x34, 0x62, 0x68, 0x75, 0xb4, 0x0b, 0x8b,
	0x30, 0xf5, 0x3b, 0xd7, 0xa9, 0x21, 0xb0, 0x6a, 0x89, 0xbe, 0x76, 0xb0, 0xdd, 0x27, 0xfb, 0xa4,
	0x93, 0x87, 0xcb, 0x27, 0xf0, 0xa3, 0x99, 0x4a, 0x27, 0x48, 0x36, 0x5a, 0xf3, 0x37, 0xb4, 0xeb,
	0x57, 0x41, 0xb0, 0x91, 0xe8, 0xee, 0xf1, 0xaf, 0x5b, 0xbd, 0xba, 0x6c, 0xf5, 0x72, 0xfd, 0x82,
	0xb6, 0x4c, 0x52, 0x5c, 0xcd, 0x71, 0xac, 0xd9, 0x46, 0xf0, 0x26, 0x67, 0x8e, 0xd5, 0xf5, 0xb6,
	0x35, 0x58, 0xd8, 0x1b, 0x82, 0xaa, 0xf4, 0x0a, 0xa8, 0x5b, 0x90, 0xac, 0xf8, 0x2b, 0xef, 0x13,
	0x52, 0xbd, 0xc7, 0x58, 0x9e, 0x46, 0x82, 0x47, 0x37, 0x3e, 0x1e, 0x38, 0xdd, 0x02, 0xbb, 0x74,
	0xab, 0xaf, 0xe5, 0x56, 0xdf, 0x56, 0xb0, 0xa0, 0xd2, 0xff, 0xa0, 0x18, 0x07, 0xbc, 0x39, 0xf1,
	0xd7, 0x39, 0xda, 0x35, 0xd0, 0xf8, 0xed, 0xc0, 0xc5, 0xae, 0x44, 0xcf, 0xfe, 0xca, 0xcd, 0xb5,
	0xec, 0xcd, 0x04, 0xb8, 0x03, 0x92, 0x2d, 0x1c, 0x36, 0xa7, 0x75, 0x60, 0x7b, 0x3f, 0x71, 0x23,
	0xf8, 0xe2, 0x44, 0xa2, 0xf7, 0x1a, 0x84, 0xcd, 0x01, 0xed, 0x27, 0x1b, 0xd3, 0xac, 0x93, 0x02,
	0xd4, 0xf5, 0xb5, 0x65, 0xa0, 0x89, 0xc6, 0xd4, 0x47, 0x62, 0xec, 0x28, 0x67, 0x56, 0xd0, 0x74,
	0xd5, 0x03, 0x23, 0x77, 0xad, 0x57, 0xdb, 0x7d, 0x8a, 0x67, 0xe1, 0x08, 0x0d, 0x6b, 0x11, 0x54,
	0xa5, 0x49, 0x40, 0x8d, 0x82, 0x64, 0x83, 0x84, 0x5c, 0xa9, 0x7d, 0x72, 0x42, 0xdb, 0x7d, 0x8a,
	0x27, 0x03, 0x30, 0x25, 0x16, 0xad, 0x28, 0x79, 0xb4, 0x4b, 0x6b, 0x6b, 0x1d, 0x3c, 0xd7, 0x04,
	0x8f, 0x13, 0x92, 0x84, 0xb3, 0xe5, 0xf0, 0xc0, 0x8d, 0x5d, 0xa9, 0x0b, 0x3a, 0xf0, 0xf9, 0x2f,
	0xea, 0xbd, 0xbe, 0xbd, 0x91, 0xe8, 0xd9, 0x9b, 0x3c, 0x79, 0x76, 0xf0, 0x68, 0x63, 0x6a, 0xf7,
	0xd5, 0x64, 0xc3, 0x56, 0x46, 0x0f, 0x81, 0x5b, 0xf8, 0x8f, 0xd9, 0xd4, 0x94, 0xdb, 0x44, 0x0f,
	0x7f, 0x63, 0xa7, 0x87, 0x4b, 0x55, 0x65, 0x06, 0x4f, 0x0f, 0xc7, 0xa7, 0xfa, 0x74, 0x24, 0xba,
	0x13, 0x62, 0x58, 0x6e, 0x10, 0x43, 0x96, 0x27, 0x91, 0x10, 0xc3, 0x27, 0x81, 0x56, 0xc0, 0xd8,
	0xa9, 0xf6, 0x1d, 0x65, 0xe5, 0x90, 0xf1, 0x25, 0x1f, 0x2c, 0x3c, 0x9f, 0xcc, 0x7f, 0x72, 0xb0,
	0xfd, 0xa0, 0xd6, 0xd7, 0x40, 0x03, 0xcc, 0x13, 0x9a, 0xf8, 0x19, 0x0e, 0x48, 0xa4, 0x2f, 0x63,
	0x95, 0x8e, 0x4a, 0x40, 0x0d, 0x9b, 0x04, 0x55, 0xd9, 0x21, 0x48, 0x5c, 0x85, 0xbc, 0x99, 0xb0,
	0xdc, 0xd8, 0x74, 0xf1, 0x56, 0x5f, 0x8b, 0xbf, 0x74, 0xad, 0x52, 0xb6, 0x7a, 0x1e, 0xbc, 0x6a,
	0x19, 0xdf, 0x92, 0xe8, 0xdf, 0x99, 0x3c, 0xda, 0x05, 0xaf, 0xd7, 0x44, 0x77, 0x6f, 0xb2, 0xa3,
	0x67, 0xfe, 0xad, 0xbe, 0x96, 0xb5, 0xa5, 0xfe, 0x55, 0x65, 0xab, 0x95, 0xb5, 0xa5, 0xf3, 0xb4,
	0xb6, 0xcf, 0x93, 0x07, 0xbb, 0x92, 0x2d, 0x5b, 0x93, 0x2d, 0xcd, 0x83, 0xbb, 0xda, 0x08, 0xfe,
	0x53, 0xcc, 0x9f, 0xcf, 0x53, 0x21, 0xf8, 0x80, 0x9f, 0x9b, 0x83, 0xf8, 0x47, 0x43, 0x36, 0x02,
	0xaf, 0xef, 0x2a, 0x55, 0x09, 0x18, 0x92, 0x91, 0xf5, 0x89, 0xee, 0xd6, 0xd4, 0xc5, 0xd3, 0x84,
	0xae, 0x9e, 0xd9, 0x91, 0xe8, 0xd9, 0x9b, 0xe8, 0xed, 0x4d, 0xf4, 0x1f, 0x82, 0xfd, 0x1b, 0xdc,
	0xde, 0x6f, 0x91, 0x9c, 0x90, 0x47, 0x05, 0xc4, 0x7c, 0x6a, 0x6a, 0x67, 0x72, 0xed, 0x5b, 0x7d,
	0x2d, 0xab, 0x23, 0x71, 0x7f, 0x30, 0x50, 0xb5, 0x25, 0xd5, 0xd9, 0x6c, 0x08, 0x35, 0x56, 0xdb,
	0x1e, 0xd2, 0x77, 0x45, 0x96, 0xc4, 0xaf, 0x08, 0xed, 0x06, 0x34, 0xc2, 0xb4, 0x3b, 0x1b, 0xaf,
	0x8b, 0x88, 0x9b, 0x2d, 0x95, 0x72, 0xcc, 0x1c, 0xbe, 0xe7, 0xbb, 0x86, 0x6d, 0x8c, 0x98, 0x62,
	0x8f, 0x21, 0x20, 0xcd, 0x54, 0x3e, 0x42, 0xb0, 0xa6, 0x80, 0x9c, 0xb7, 0x64, 0x73, 0xc3, 0xc0,
	0xc5, 0x4b, 0x5a, 0xff, 0x21, 0xc6, 0x1b, 0x00, 0x49, 0x4a, 0xf4, 0xb5, 0x0f, 0x9c, 0x3f, 0xa7,
	0xb5, 0xed, 0x07, 0x58, 0xb1, 0x83, 0x01, 0xfe, 0x73, 0x0b, 0xfc, 0x96, 0x49, 0x14, 0xc6, 0x54,
	0xa5, 0x0e, 0x85, 0x25, 0x07, 0xdc, 0x97, 0x4b, 0x88, 0xa4, 0x03, 0xa3, 0x20, 0x80, 0x02, 0x4f,
	0x68, 0x2f, 0xd0, 0x57, 0x26, 0xc5, 0x49, 0x74, 0xef, 0x49, 0x9e, 0xb8, 0x0a, 0x85, 0xf4, 0xb6,
	0x4e, 0xb5, 0xef, 0x80, 0x8d, 0x73, 0x24, 0x7f, 0x7b, 0x32, 0xa8, 0xaf, 0xc1, 0x4f, 0x80, 0x02,
	0x02, 0x78, 0x1c, 0x28, 0x60, 0xa3, 0xa0, 0x2a, 0x5b, 0x05, 0xf4, 0xa7, 0x92, 0x13, 0x2c, 0xe4,
	0x37, 0xa1, 0x9f, 0x1b, 0xf5, 0x83, 0x12, 0xbe, 0x0d, 0x23, 0x7a, 0xb7, 0xfa, 0x5a, 0x88, 0x20,
	0x8f, 0xfb, 0x3e, 0x68, 0x3a, 0x93, 0x4d, 0xfb, 0xb4, 0xdd, 0x27, 0x2d, 0xa4, 0x6f, 0x77, 0x06,
	0x9a, 0xbe, 0x2a, 0x42, 0xe4, 0x64, 0x6b, 0x23, 0xa6, 0xb7, 0xd2, 0x7a, 0x3b, 0xfd, 0x5b, 0x82,
	0x03, 0x2f, 0x1a, 0xf4, 0x2f, 0xc7, 0x4c, 0xf9, 0xb2, 0x86, 0x45, 0xf9, 0x2a, 0xcc, 0x6c, 0xe0,
	0xcb, 0xaa, 0xb2, 0x80, 0x52, 0xbe, 0xc7, 0xf5, 0x7f, 0xbc, 0x94, 0xde, 0xe1, 0xa0, 0x6e, 0x0d,
	0xda, 0x99, 0xf3, 0x7c, 0xac, 0xbd, 0xc5, 0x8b, 0x16, 0x7d, 0x5f, 0x34, 0x5a, 0x15, 0xb2, 0x73,
	0x84, 0x89, 0x55, 0x06, 0x43, 0xb8, 0xc1, 0xcc, 0xb0, 0x01, 0xf1, 0x7b, 0x45, 0x55, 0x1e, 0x33,
	0x33, 0x6c, 0x53, 0xd8, 0x03, 0x6d, 0xb5, 0x51, 0x3a, 0xdc, 0x67, 0xfe, 0x6f, 0x55, 0xe5, 0x2d,
	0xf4, 0x6b, 0xc9, 0x0d, 0x60, 0xb2, 0xa4, 0x5d, 0xda, 0xc9, 0x4e, 0x06, 0xd9, 0x98, 0xf3, 0xbd,
	0x8c, 0xeb, 0x4a, 0x5e, 0x3e, 0xa5, 0x1f, 0x0d, 0x1a, 0x4f, 0xd2, 0x7e, 0x34, 0xfe, 0x0f, 0x0f,
	0xca, 0xb5, 0x8f, 0x3d, 0x32, 0xce, 0xc7, 0x6f, 0x86, 0x71, 0x3e, 0x40, 0x05, 0x89, 0xcf, 0xc7,
	0x93, 0xda, 0xa5, 0x9d, 0x6e, 0x10, 0x32, 0x9b, 0x56, 0xe0, 0xe3, 0xf2, 0x6b, 0x55, 0x59, 0x8f,
	0xd6, 0x4a, 0xae, 0xd0, 0x49, 0x3b, 0x1e, 0x3f, 0x5f, 0x87, 0x97, 0x90, 0x07, 0xcd, 0xf0, 0x07,
	0x6b, 0xe9, 0xc0, 0xcb, 0xa2, 0x91, 0xda, 0x07, 0x72, 0x0a, 0x4a, 0xcd, 0xa7, 0x60, 0xa1, 0x4e,
	0x3b, 0xc8, 0x29, 0x98, 0x4e, 0xee, 0x7f, 0x7c, 0x21, 0x73, 0xf7, 0xff, 0x0f, 0x85, 0xf7, 0x24,
	0xb4, 0x45, 0x3a, 0x30, 0xc9, 0xb3, 0xd8, 0xdd, 0x60, 0x80, 0x1e, 0xcf, 0x3f, 0xcd, 0x55, 0xf0,
	0xdf, 0x3d, 0xe8, 0x51, 0xe7, 0x31, 0x47, 0x06, 0xce, 0xaf, 0x1f, 0x06, 0xce, 0x43, 0x50, 0x46,
	0x8c, 0xf3, 0x73, 0x12, 0xbd, 0x7b, 0x2d, 0xc0, 0x71, 0xc6, 0x76, 0x92, 0x1d, 0x30, 0x2d, 0x6c,
	0xe4, 0x97, 0x98, 0x40, 0x87, 0x87, 0x33, 0xbb, 0x2c, 0xf8, 0x5b, 0x00, 0x1a, 0xf0, 0xb7, 0x80,
	0xef, 0x3f, 0x67, 0xa0, 0xdc, 0xe2, 0x9a, 0x60, 0x20, 0x4c, 0xf4, 0x0b, 0x0f, 0x04, 0xe5, 0x57,
	0x98, 0x51, 0xfe, 0x59, 0xfe, 0xfd, 0x0f, 0x28, 0x0f, 0x0a, 0x15, 0xed, 0xe3, 0x13, 0xc9, 0x83,
	0x57, 0x7f, 0x78, 0xc4, 0x37, 0x71, 0x89, 0x99, 0xf7, 0xe0, 0xf1, 0xfa, 0xbe, 0xaa, 0xc4, 0x51,
	0x54, 0x72, 0x85, 0xbc, 0x3c, 0x9f, 0x47, 0x91, 0x44, 0x77, 0x27, 0x0f, 0x0f, 0xca, 0x64, 0x39,
	0x1d, 0x28, 0xb3, 0x7a, 0x05, 0x20, 0xc4, 0xab, 0x59, 0x0e, 0x67, 0xa0, 0x47, 0x1c, 0x3e, 0x3a,
	0x32, 0x8e, 0xd9, 0xaf, 0x86, 0x71, 0xcc, 0x4c, 0x2e, 0x7b, 0x30, 0x48, 0xfb, 0x0e, 0x80, 0x9e,
	0xe9, 0x68, 0xb5, 0x0a, 0xaa, 0xd2, 0x2c, 0xa0, 0x9d, 0x82, 0xe4, 0x0e, 0x0f, 0x39, 0xc4, 0x6b,
	0x60, 0x8d, 0x13, 0x75, 0xf0, 0x72, 0xa2, 0x67, 0xef, 0x40, 0xd7, 0x59, 0xb8, 0xc1, 0x13, 0xdd,
	0x3d, 0x5a, 0xdf, 0xb6, 0x64, 0xe7, 0x59, 0xe6, 0x33, 0xa5, 0x57, 0x01, 0x67, 0xd6, 0xdb, 0x38,
	0xb0, 0xbd, 0x1f, 0x4e, 0x20, 0x3f, 0x07, 0x72, 0x02, 0x3b, 0x3f, 0xd5, 0xba, 0xbb, 0xc1, 0xe0,
	0xca, 0xf7, 0xb7, 0x19, 0x28, 0xcf, 0x36, 0x91, 0xf5, 0xf2, 0xfd, 0x3e, 0x89, 0x6f, 0x98, 0x1f,
	0x9f, 0x45, 0xaa, 0xb2, 0x84, 0x9e, 0xc4, 0x85, 0x69, 0x4f, 0x22, 0x7e, 0x18, 0xde, 0x48, 0x1d,
	0xbc, 0xf0, 0x64, 0xfe, 0x93, 0x5a, 0xd3, 0x4e, 0xad, 0xf9, 0x2b, 0xcb, 0x23, 0x74, 0x24, 0x1e,
	0xcb, 0x2d, 0xaa, 0xb2, 0x19, 0xc5, 0xa5, 0x34, 0x1b, 0x71, 0xdf, 0x0e, 0x66, 0x7b, 0x06, 0x9a,
	0xe1, 0xf8, 0xd9, 0x9f, 0xde, 0xd1, 0x34, 0x94, 0xd3, 0xe9, 0x20, 0xf2, 0x20, 0x0f, 0xe7, 0x3f,
	0xf6, 0xa0, 0xe9, 0x54, 0xcc, 0x6e, 0xbd, 0x23, 0x7f, 0x20, 0x55, 0xa3, 0xf8, 0x07, 0x94, 0x1d,
	0xa9, 0x8f, 0xd7, 0xd5, 0xc7, 0xc9, 0xfe, 0x62, 0x8f, 0x52, 0x52, 0x24, 0xaf, 0x1b, 0xf8, 0xf6,
	0x80, 0xb6, 0xab, 0xc7, 0x50, 0xbc, 0xe0, 0x20, 0xd9, 0x5a, 0x43, 0x9f, 0xf7, 0xfd, 0x50, 0x55,
	0x70, 0x9e, 0xd6, 0x78, 0x61, 0x70, 0xfb, 0x05, 0xa8, 0x9d, 0x9f, 0xef, 0xdd, 0x10, 0x88, 0x85,
	0x2a, 0xe7, 0x69, 0x27, 0x7b, 0x92, 0x1d, 0x5f, 0x92, 0x42, 0x26, 0xb5, 0xe1, 0x4b, 0xfd, 0x64,
	0x78, 0x9a, 0xe7, 0xc0, 0x0d, 0x26, 0x36, 0x55, 0x27, 0x11, 0xdf, 0x60, 0xc2, 0xe1, 0xfb, 0x2b,
	0x0f, 0xca, 0xb5, 0x77, 0x1c, 0x19, 0x68, 0xbe, 0x26, 0x7d, 0x32, 0x68, 0xb6, 0x60, 0xfd, 0x0f,
	0xb0, 0x79, 0x03, 0x7c, 0x9f, 0x84, 0xcf, 0x3b, 0x75, 0xbf, 0xe2, 0xf2, 0x3f, 0xaf, 0x55, 0x95,
	0xd7, 0xd0, 0x1a, 0xc9, 0x15, 0x20, 0xf2, 0xe3, 0x30, 0x8f, 0x81, 0x4f, 0xbe, 0x30, 0xd8, 0x3c,
	0x6a, 0x66, 0xa1, 0x0f, 0x0a, 0xa3, 0x59, 0x1e, 0xf3, 0x07, 0xc6, 0xa0, 0x71, 0xa6, 0xb9, 0x88,
	0x4b, 0xc0, 0x74, 0x93, 0x21, 0x28, 0x06, 0x13, 0x29, 0x92, 0x27, 0x13, 0x19, 0x41, 0xcf, 0x7e,
	0xea, 0xf1, 0x50, 0x56, 0xe2, 0x27, 0x95, 0xe2, 0x0b, 0x68, 0x54, 0x28, 0x1c, 0x0e, 0x46, 0xcb,
	0xca, 0x09, 0x84, 0xb1, 0x6d, 0x3d, 0x2d, 0x93, 0x27, 0x91, 0xbd, 0xdd, 0xd9, 0x98, 0xea, 0xdf,
	0x9f, 0xe8, 0xee, 0x2d, 0x2b, 0xf7, 0xd3, 0x3a, 0xf1, 0x2d, 0x34, 0x96, 0xb9, 0x50, 0xd0, 0xc0,
	0xf7, 0xa3, 0x21, 0xf0, 0xbd, 0xa9, 0x42, 0x9e, 0x9b, 0xec, 0xe8, 0xd1, 0x4e, 0xec, 0x21, 0xf0,
	0xa1, 0xde, 0xeb, 0x80, 0xb7, 0x03, 0xdb, 0xfb, 0x41, 0x1f, 0xe8, 0x37, 0xf5, 0x11, 0x9f, 0x42,
	0x19, 0xc5, 0xe5, 0xeb, 0x48, 0xde, 0x73, 0xbc, 0x75, 0xfa, 0x6f, 0xaa, 0xbe, 0x2d, 0x2e, 0x5f,
	0x47, 0xb6, 0x5b, 0x2f, 0x15, 0x17, 0xa0, 0x8c, 0xda, 0x60, 0x2d, 0x16, 0xf0, 0x91, 0xcc, 0xea,
	0xfa, 0x6f, 0x59, 0x64, 0x93, 0xd7, 0x3a, 0x8f, 0xd2, 0xf6, 0xb5, 0xc1, 0x5a, 0x71, 0x09, 0xca,
	0x58, 0x5e, 0xbe, 0x8e, 0xe4, 0xdd, 0xc2, 0xa6, 0x91, 0xfa, 0x6f, 0xf9, 0x51, 0x68, 0xbf, 0x9c,
	0x0e, 0xce, 0xcf, 0x70, 0x91, 0x5f, 0x6f, 0x22, 0xb6, 0x09, 0x28, 0x3b, 0x16, 0x0f, 0xc4, 0xeb,
	0x63, 0x24, 0xae, 0xbc, 0xce, 0xea, 0x49, 0xa4, 0x48, 0x7e, 0x8f, 0x6c, 0x22, 0x16, 0x5e, 0xd2,
	0x31, 0x9a, 0x92, 0xa7, 0xae, 0x27, 0x5b, 0x2f, 0x9a, 0x8c, 0xc0, 0x69, 0x04, 0xae, 0x5b, 0x7d,
	0xcd, 0xb7, 0xfa, 0x5a, 0x88, 0x5a, 0x25, 0xdf, 0x5b, 0x52, 0xba, 0xb2, 0x74, 0x6d, 0x29, 0xfe,
	0xb3, 0xd8, 0x5f, 0xaa, 0xac, 0xc5, 0x7f, 0x2d, 0x53, 0xca, 0x56, 0x96, 0x96, 0xe4, 0x7b, 0xcb,
	0x56, 0x97, 0xad, 0x2d, 0x53, 0x56, 0x96, 0xbd, 0xa9, 0xac, 0x2d, 0x5b, 0xb3, 0xda, 0x4f, 0xbe,
	0x29, 0x2a, 0x28, 0xfb, 0x0f, 0x91, 0xb0, 0xbe, 0xf5, 0x39, 0x34, 0x64, 0xf3, 0x13, 0x52, 0xa6,
	0x5e, 0x44, 0x75, 0xc1, 0x90, 0x9c, 0x59, 0x6b, 0xe9, 0xb1, 0x42, 0x9c, 0x74, 0x14, 0xff, 0xc4,
	0x4c, 0xe3, 0xc0, 0x89, 0xf1, 0x4d, 0x55, 0x79, 0xdd, 0x4c, 0xe3, 0x5e, 0x25, 0x17, 0x23, 0x56,
	0x1c, 0xf1, 0x37, 0xba, 0xb7, 0xac, 0x24, 0xdf, 0xcb, 0x8f, 0x3c, 0x2f, 0xd1, 0xdb, 0x58, 0xac,
	0x90, 0xaf, 0xf7, 0xab, 0xda, 0xe5, 0x13, 0x89, 0x9e, 0xbd, 0x6c, 0xa8, 0xf9, 0x66, 0x4a, 0xb7,
	0x8c, 0xe7, 0x7d, 0x10, 0x0d, 0xf1, 0xf7, 0x38, 0xcf, 0xfb, 0xe4, 0x5a, 0xbe, 0xcc, 0xd2, 0x24,
	0xf3, 0xbc, 0xce, 0x62, 0x94, 0xb1, 0xbe, 0xbc, 0x98, 0x38, 0x31, 0x62, 0x2c, 0xd6, 0x7f, 0x53,
	0x83, 0x73, 0xd6, 0x77, 0x7d, 0x79, 0xb1, 0xb7, 0xac, 0xc4, 0xaf, 0xd7, 0x89, 0x6f, 0x31, 0xa5,
	0xfc, 0x58, 0x1a, 0xc3, 0xe5, 0x15, 0xa6, 0x94, 0x7f, 0x8e, 0xef, 0x08, 0xea, 0x78, 0x43, 0x00,
	0x7d, 0xfd, 0x86, 0x76, 0x4d, 0xbf, 0x8f, 0x92, 0xd7, 0x2e, 0x6b, 0x1d, 0x57, 0x74, 0xc0, 0xee,
	0x3e, 0xa5, 0x5d, 0x3b, 0x91, 0xea, 0x6c, 0x66, 0xca, 0xfa, 0xd5, 0x28, 0xbb, 0x2e, 0x10, 0x8b,
	0xbd, 0x5f, 0x45, 0xac, 0x9c, 0x71, 0xfa, 0x04, 0x52, 0x24, 0xcf, 0xb7, 0xd8, 0x65, 0x83, 0x86,
	0x32, 0xdf, 0x0b, 0x4c, 0x19, 0x68, 0xb3, 0x06, 0xce, 0x7f, 0xaa, 0x75, 0xed, 0xf4, 0x93, 0x2e,
	0xe2, 0xdb, 0x08, 0xef, 0x2a, 0x36, 0x6f, 0x1e, 0x57, 0x54, 0xa6, 0x2a, 0xcb, 0x24, 0xb2, 0x81,
	0xf4, 0x8d, 0xc8, 0x36, 0x1a, 0x5f, 0x41, 0xfc, 0x86, 0xbc, 0xe8, 0xe5, 0x42, 0x09, 0xf4, 0x0e,
	0x9c, 0xdb, 0x0a, 0xcc, 0x5d, 0xa2, 0x67, 0x6f, 0xb1, 0xe2, 0xc7, 0xc3, 0x8a, 0x0a, 0xca, 0xa9,
	0x0a, 0x6e, 0x0e, 0xe9, 0xc4, 0x81, 0xd8, 0x25, 0xe3, 0xf4, 0xe1, 0xac, 0x50, 0x9e, 0x56, 0xac,
	0x78, 0xe9, 0x11, 0x1d, 0xb8, 0xf8, 0xad, 0x76, 0x66, 0x57, 0x59, 0x89, 0xd6, 0x76, 0xcd, 0xcf,
	0x5a, 0x88, 0x7f, 0x62, 0x10, 0x04, 0x7f, 0x84, 0x85, 0xd4, 0x7a, 0x43, 0x55, 0xd6, 0x49, 0xa6,
	0x0a, 0xb9, 0x94, 0xdc, 0xea, 0xe7, 0xd5, 0x81, 0x66, 0x9d, 0x0e, 0xac, 0x52, 0x2a, 0xd6, 0x96,
	0xfa, 0xf3, 0xbd, 0xaf, 0xaf, 0xf1, 0xaf, 0xd0, 0xff, 0x2d, 0x5d, 0x5b, 0x5c, 0x92, 0xef, 0x85,
	0xd2, 0x77, 0xf0, 0x0f, 0x65, 0xe5, 0xca, 0x7c, 0x2f, 0x93, 0xa5, 0x43, 0x3b, 0xbf, 0x69, 0x50,
	0xf1, 0x8f, 0x68, 0x5c, 0x7d, 0xb8, 0xa2, 0xf2, 0xdd, 0x60, 0x55, 0x7d, 0x0d, 0x0e, 0x65, 0x31,
	0x09, 0x03, 0x0a, 0x7f, 0xde, 0x5c, 0x23, 0x97, 0x0c, 0x5c, 0xda, 0xae, 0xf5, 0x9c, 0x83, 0x73,
	0x6a, 0xdc, 0x85, 0x0d, 0x7d, 0x8b, 0x06, 0x4e, 0x5f, 0x48, 0x9d, 0xe9, 0xd1, 0xda, 0xb6, 0x25,
	0xba, 0xf7, 0x42, 0xa3, 0x5b, 0x7d, 0x2d, 0x8b, 0xa1, 0x14, 0x07, 0x61, 0x30, 0x2a, 0xfc, 0xe6,
	0x41, 0x7d, 0x3b, 0x32, 0xd0, 0x4c, 0x30, 0xc6, 0xc5, 0x98, 0x5d, 0x12, 0x8c, 0x85, 0xa2, 0xc1,
	0xaa, 0x8a, 0xd0, 0x1f, 0x82, 0xb7, 0x6b, 0x84, 0x6a, 0x63, 0x95, 0x9d, 0x98, 0x7d, 0xf3, 0x21,
	0x2a, 0xc6, 0x81, 0xd6, 0xe8, 0x07, 0x31, 0x29, 0x1f, 0x57, 0x34, 0x47, 0x55, 0x66, 0x49, 0x7c,
	0xb9, 0x3c, 0x21, 0x71, 0xe3, 0x62, 0xf2, 0xe0, 0x75, 0xd6, 0xd3, 0xcf, 0xd7, 0x8a, 0x4b, 0x39,
	0x7e, 0x1b, 0x88, 0xb9, 0x4f, 0x55, 0x72, 0x39, 0x7e, 0x7b, 0x2c, 0xf0, 0xdb, 0x89, 0x9e, 0x1e,
	0x6d, 0xff, 0x51, 0x70, 0x5c, 0xe2, 0xcd, 0x0e, 0xb7, 0x09, 0xaa, 0xf2, 0xa7, 0xe8, 0x23, 0x29,
	0x3d, 0x18, 0xe4, 0x57, 0x60, 0x12, 0x6c, 0x95, 0xc9, 0x8e, 0x93, 0xc9, 0x8e, 0x8f, 0x99, 0x36,
	0x21, 0x79, 0xe8, 0x52, 0x3e, 0xe8, 0x6c, 0xb5, 0xe6, 0xd6, 0xc4, 0x8d, 0xe3, 0x03, 0x5d, 0x5b,
	0xc1, 0x6a, 0x2e, 0xd1, 0xdd, 0x30, 0xb0, 0xeb, 0xeb, 0x64, 0xc3, 0x79, 0x2b, 0xbb, 0xcd, 0x2f,
	0xc2, 0x77, 0xc8, 0x83, 0x66, 0xb9, 0x7d, 0x7f, 0x44, 0x70, 0x21, 0x94, 0x69, 0x70, 0x58, 0x85,
	0x0e, 0x32, 0xc6, 0x3a, 0x14, 0x58, 0x6c, 0xc2, 0x01, 0x8c, 0x0c, 0x86, 0x4c, 0x04, 0x0d, 0xa3,
	0xfb, 0xfe, 0xa7, 0xc7, 0x09, 0x3d, 0x61, 0xc4, 0xfb, 0x8e, 0x9e, 0x2b, 0x19, 0x7a, 0xea, 0x9d,
	0x09, 0x7a, 0x62, 0xcf, 0x1c, 0xbe, 0x5c, 0xce, 0x85, 0x35, 0x58, 0x18, 0xcb, 0xe4, 0xa1, 0x4b,
	0x7e, 0xbe, 0x99, 0x58, 0x62, 0xc3, 0xd3, 0x79, 0x3a, 0xa6, 0x1b, 0x78, 0x2a, 0x02, 0xfe, 0xa4,
	0xc7, 0x56, 0x92, 0x92, 0x3d, 0x3d, 0x50, 0xe4, 0x39, 0x8e, 0x50, 0xe6, 0x91, 0xd5, 0x0d, 0x1b,
	0x57, 0x63, 0x8e, 0xcd, 0x78, 0x02, 0xa6, 0x1c, 0x11, 0x93, 0xdf, 0xd2, 0x91, 0x95, 0x09, 0x2c,
	0x9d, 0x2b, 0x25, 0x84, 0xe1, 0x32, 0x5e, 0x81, 0x9c, 0xf5, 0x8c, 0xe9, 0x2d, 0x78, 0x7f, 0x50,
	0xfd, 0xa6, 0x80, 0x66, 0x97, 0x62, 0x6f, 0x3e, 0xd6, 0x83, 0xba, 0xe9, 0x3d, 0x00, 0x64, 0xa7,
	0x8b, 0x1a, 0x6a, 0x0a, 0xf2, 0x2c, 0xf0, 0x49, 0x34, 0xb0, 0x1d, 0xeb, 0x71, 0x93, 0xcd, 0x9f,
	0x81, 0x36, 0xd6, 0x8c, 0x57, 0xbe, 0xc3, 0x1e, 0xe4, 0x75, 0x1f, 0x71, 0x64, 0x50, 0xb6, 0x0a,
	0x55, 0x29, 0x47, 0xab, 0xa5, 0x21, 0xd7, 0x21, 0x4b, 0xe9, 0x41, 0xc3, 0x0f, 0xee, 0xfb, 0x97,
	0x02, 0xf2, 0x96, 0x84, 0x62, 0x3f, 0xd8, 0x76, 0xaf, 0x53, 0x15, 0x3f, 0x2a, 0x97, 0x86, 0x9c,
	0x83, 0x3c, 0x4b, 0x6b, 0xbc, 0x32, 0x78, 0xa4, 0x73, 0x98, 0xfb, 0x7d, 0xd4, 0x83, 0xe6, 0xa4,
	0x19, 0x72, 0x44, 0x5d, 0x65, 0x43, 0x2f, 0x44, 0x96, 0xd2, 0x03, 0xc7, 0xb4, 0xe3, 0xff, 0x01,
	0xa1, 0x49, 0x60, 0x7a, 0xa6, 0x93, 0x1c, 0xba, 0xc5, 0x1f, 0xa1, 0x9c, 0x78, 0x20, 0xb6, 0x09,
	0x3f, 0x45, 0x05, 0xea, 0x32, 0xfd, 0x5b, 0x89, 0x15, 0xca, 0x7e, 0x20, 0x3d, 0x2c, 0x9a, 0x1a,
	0xb0, 0xf2, 0x34, 0xe6, 0x3a, 0x26, 0x65, 0xb7, 0xfa, 0x5a, 0xa8, 0xa1, 0xd2, 0xda, 0x88, 0x51,
	0xc6, 0xe9, 0xee, 0x97, 0x45, 0x23, 0xb5, 0xa4, 0x42, 0x67, 0xf6, 0xd9, 0xe8, 0x62, 0x35, 0x7b,
	0x18, 0x02, 0x60, 0xd7, 0x60, 0xe8, 0x90, 0x87, 0xe1, 0x58, 0xf2, 0x69, 0xcc, 0x70, 0x7e, 0x5f,
	0xf4, 0x74, 0x74, 0xb1, 0x7f, 0x2c, 0x7b, 0xcf, 0x95, 0xad, 0x5e, 0xee, 0x1f, 0x45, 0xde, 0x80,
	0xfe, 0x51, 0x15, 0xeb, 0x8a, 0x8b, 0x4b, 0x2b, 0x2a, 0xfc, 0xd9, 0xf0, 0xee, 0xf3, 0x8f, 0x5a,
	0x5b, 0xb6, 0xaa, 0x74, 0xcd, 0xba, 0xb5, 0xec, 0xc1, 0xf7, 0x5b, 0x63, 0x0b, 0xe1, 0xf2, 0xc3,
	0x11, 0xc1, 0xd9, 0x16, 0x3e, 0x47, 0xc4, 0x5c, 0xcd, 0xe7, 0x07, 0x4e, 0xb7, 0xb0, 0x77, 0x6c,
	0x72, 0xf7, 0xd9, 0xc1, 0x83, 0xc7, 0x92, 0x47, 0xae, 0x26, 0xba, 0x7b, 0x60, 0x77, 0x93, 0x6d,
	0xfb, 0x74, 0x9e, 0x96, 0x59, 0xdc, 0xb3, 0x6d, 0x7e, 0x06, 0x65, 0xc5, 0xe2, 0x81, 0x68, 0x9c,
	0x88, 0x5c, 0x67, 0xa9, 0xca, 0x0c, 0x09, 0x4a, 0x64, 0x91, 0xb8, 0x1a, 0xed, 0xeb, 0xd2, 0xf7,
	0xe6, 0xc8, 0xd5, 0xc1, 0x23, 0x5f, 0xfb, 0xa1, 0x4a, 0x7f, 0x82, 0x07, 0xc3, 0x55, 0xc4, 0xc6,
	0x06, 0x9e, 0xe0, 0xc1, 0x70, 0x15, 0xed, 0xa1, 0x6f, 0xdc, 0xf1, 0x93, 0xa4, 0x87, 0x5e, 0x21,
	0xae, 0x44, 0xe3, 0x82, 0x1f, 0x04, 0x2b, 0xeb, 0xe3, 0xa1, 0x48, 0x78, 0x6d, 0xa8, 0x36, 0xc8,
	0x3f, 0xc6, 0xcd, 0x35, 0x74, 0x0c, 0x58, 0x11, 0x19, 0xc3, 0xdc, 0x44, 0x5c, 0x87, 0xc6, 0x54,
	0xd6, 0x47, 0xa3, 0xc1, 0x70, 0xbc, 0x22, 0x1e, 0xac, 0x23, 0x4f, 0x73, 0x9c, 0xb4, 0x8b, 0x2f,
	0x97, 0xe7, 0x90, 0x91, 0x3a, 0x3f, 0xd5, 0x3a, 0x2e, 0xc0, 0x78, 0xfa, 0xed, 0xd4, 0x79, 0x76,
	0xf0, 0x73, 0x92, 0xfa, 0xcc, 0xcf, 0xb7, 0x17, 0x5f, 0x43, 0x63, 0x63, 0xf1, 0x60, 0x5d, 0x85,
	0x8e, 0x61, 0xe1, 0xca, 0x20, 0x0e, 0x2d, 0x84, 0x33, 0x8b, 0xf9, 0x24, 0x53, 0x85, 0x65, 0x8a,
	0x78, 0xbc, 0xef, 0x8b, 0xb2, 0x54, 0xc1, 0x93, 0x23, 0xf8, 0x4d, 0x2d, 0xc5, 0x63, 0x82, 0x0e,
	0xde, 0x60, 0x1d, 0x75, 0x69, 0xce, 0x77, 0x0e, 0xb2, 0xc0, 0x21, 0xf6, 0x02, 0x7d, 0x2a, 0xc4,
	0xb9, 0x77, 0x9d, 0xaa, 0xbc, 0x2a, 0x41, 0x7f, 0xf9, 0x97, 0xf0, 0x4d, 0x88, 0x97, 0x0c, 0xdf,
	0xe4, 0x8c, 0x84, 0x8c, 0x74, 0x7f, 0x50, 0x08, 0x82, 0x50, 0xfd, 0x59, 0xd8, 0xb7, 0x4d, 0xeb,
	0xee, 0x4e, 0x1e, 0xb9, 0xfa, 0x7d, 0xd1, 0xa8, 0x76, 0x21, 0x33, 0x47, 0x98, 0x38, 0xc5, 0x0f,
	0x23, 0x8a, 0xbf, 0xb3, 0xbf, 0xc4, 0x8b, 0x54, 0x65, 0x36, 0xff, 0x12, 0x67, 0x0b, 0xd5, 0x1f,
	0xc5, 0xa0, 0x91, 0xb8, 0x9d, 0xb0, 0x02, 0x6f, 0xf2, 0x06, 0xec, 0xf0, 0x52, 0x7f, 0x09, 0x7f,
	0xc1, 0x30, 0x60, 0x37, 0x7f, 0x01, 0x9b, 0xae, 0x53, 0x99, 0xa9, 0x37, 0x5d, 0xb6, 0x4f, 0xf1,
	0x15, 0x23, 0x3a, 0x12, 0x0b, 0x9b, 0x6d, 0x8a, 0x8e, 0x04, 0xb8, 0x8b, 0x45, 0xbe, 0x89, 0x9e,
	0x1e, 0x2e, 0x2d, 0x3b, 0x0d, 0x86, 0x54, 0x86, 0x50, 0x4d, 0x20, 0x16, 0x07, 0x66, 0x84, 0xbc,
	0xda, 0xb1, 0x38, 0x85, 0x2b, 0x96, 0x73, 0x89, 0x95, 0x4f, 0xf7, 0xee, 0xe4, 0x97, 0xa7, 0x81,
	0x2f, 0x21, 0x38, 0xc9, 0xb5, 0xca, 0x5b, 0x8d, 0x90, 0xb1, 0x6d, 0x0e, 0x9e, 0xa0, 0x92, 0x39,
	0x38, 0xb0, 0x8d, 0x97, 0xd2, 0x3b, 0xf3, 0xfe, 0xa1, 0x75, 0xaa, 0x52, 0x8b, 0x36, 0x49, 0x76,
	0xb2, 0x47, 0x23, 0xfa, 0x52, 0x64, 0x00, 0xa3, 0x13, 0x46, 0x96, 0x6e, 0x0a, 0x26, 0xf4, 0xbb,
	0x29, 0xc0, 0x56, 0x9b, 0x95, 0x17, 0x06, 0x10, 0xb9, 0x7c, 0x14, 0xff, 0x5e, 0xa0, 0x09, 0xc8,
	0xe0, 0x6b, 0x23, 0x83, 0x45, 0x9d, 0x37, 0x34, 0x8b, 0x4a, 0x9c, 0xaf, 0xbe, 0x13, 0xd0, 0x44,
	0x7f, 0x30, 0x1e, 0xdd, 0xc2, 0xdf, 0x21, 0xaf, 0xa2, 0x6c, 0x1d, 0x72, 0x7c, 0x2c, 0x4e, 0x51,
	0x22, 0x45, 0x72, 0x0e, 0xc0, 0x58, 0xe7, 0x0c, 0x72, 0xa3, 0xd3, 0x20, 0x94, 0xbb, 0x3d, 0xfc,
	0x1c, 0x34, 0x16, 0x97, 0x1b, 0x4e, 0xee, 0x1e, 0x9a, 0x8f, 0xd0, 0x6b, 0x38, 0xb9, 0x4f, 0x85,
	0xb1, 0x06, 0x77, 0xb5, 0x0e, 0x74, 0x1d, 0xd2, 0xda, 0xf6, 0x0f, 0x7c, 0x73, 0x0d, 0xe3, 0xe4,
	0xa8, 0x68, 0x16, 0x1e, 0x98, 0xb9, 0xb6, 0x17, 0xbe, 0xa4, 0x2a, 0x2f, 0xa0, 0xe7, 0x25, 0xdb,
	0x5c, 0xe5, 0x89, 0xd0, 0x59, 0x2f, 0xa2, 0xdb, 0x4e, 0x3e, 0xce, 0xc5, 0x71, 0xfe, 0x1f, 0x02,
	0x9a, 0xc4, 0xf5, 0x1c, 0x69, 0xb1, 0x17, 0xdd, 0xdf, 0x19, 0xf8, 0x5a, 0x82, 0x77, 0xc6, 0x64,
	0xe6, 0x16, 0x6c, 0xf8, 0xba, 0x92, 0x4d, 0x4e, 0x65, 0xa3, 0x49, 0x70, 0x22, 0xf9, 0x5d, 0x5e,
	0x6e, 0xd9, 0xe5, 0x85, 0x2e, 0xbb, 0x0c, 0x54, 0x67, 0xae, 0xfb, 0x26, 0xff, 0x68, 0xee, 0x7c,
	0x72, 0x7b, 0x67, 0xde, 0xf1, 0xed, 0x9d, 0x75, 0x0f, 0x6f, 0xef, 0xec, 0x7b, 0x74, 0x7b, 0x1b,
	0x57, 0xed, 0x28, 0xe7, 0xab, 0xd6, 0x86, 0x19, 0x0f, 0xee, 0xaa, 0x7d, 0xc5, 0x20, 0x0f, 0x39,
	0xdc, 0x65, 0x65, 0xc4, 0xc0, 0x80, 0xa5, 0x62, 0xc4, 0x36, 0x5f, 0x56, 0xa4, 0xc9, 0x3d, 0xbf,
	0x61, 0x5e, 0x56, 0x95, 0x42, 0xb4, 0x44, 0xb2, 0x1f, 0x17, 0x79, 0x22, 0x4c, 0x23, 0x3d, 0xa1,
	0xf9, 0x5b, 0x81, 0xe6, 0x01, 0xfa, 0x69, 0x52, 0x9a, 0xed, 0x1e, 0x34, 0x09, 0x9e, 0x09, 0xf7,
	0x85, 0xd2, 0xc4, 0xad, 0x31, 0x06, 0xb0, 0x7a, 0x86, 0xd9, 0xd1, 0xaf, 0xe4, 0xcd, 0xe4, 0x8d,
	0xb9, 0xe1, 0x0c, 0xc4, 0x57, 0x12, 0xfd, 0x37, 0x92, 0x1d, 0x9f, 0x83, 0xc6, 0x1b, 0x8e, 0x8d,
	0x76, 0xb1, 0x25, 0xd9, 0x84, 0x3d, 0xd9, 0xaf, 0x9f, 0xc4, 0x81, 0x02, 0x3e, 0xd6, 0x1a, 0xcf,
	0xa6, 0x7a, 0x9b, 0x92, 0x9d, 0x9f, 0xf0, 0x21, 0x01, 0x0a, 0x17, 0xaa, 0x4a, 0x3e, 0x92, 0x24,
	0xfb, 0xc2, 0xe4, 0xb1, 0x24, 0xd4, 0x3c, 0x5e, 0x01, 0xc3, 0x07, 0x5f, 0x83, 0x87, 0x7a, 0x58,
	0x8c, 0x24, 0x2c, 0x58, 0x31, 0x0c, 0x2c, 0xc0, 0xb2, 0x74, 0xc0, 0x82, 0x69, 0xbc, 0x63, 0xb5,
	0x0d, 0x11, 0x76, 0x09, 0x68, 0xfc, 0xf2, 0x60, 0x9c, 0xc7, 0x82, 0x65, 0x16, 0x2c, 0x58, 0xa0,
	0x2a, 0x93, 0x18, 0x16, 0x8c, 0xd2, 0x5b, 0x7a, 0x87, 0x83, 0x04, 0x85, 0x05, 0xaa, 0x22, 0xa1,
	0x79, 0x92, 0x65, 0x78, 0x79, 0x1a, 0xa8, 0xe3, 0x8d, 0x99, 0x10, 0xa7, 0xe3, 0xbf, 0x0b, 0x31,
	0xee, 0x7f, 0xcc, 0xe7, 0x91, 0xb9, 0x1a, 0x5b, 0xb7, 0x81, 0xa6, 0xad, 0xb7, 0x02, 0xe0, 0x76,
	0x1d, 0x8c, 0x4f, 0x66, 0xa3, 0x09, 0x2b, 0x43, 0x31, 0xd3, 0x76, 0x56, 0xda, 0x8d, 0xb5, 0x4a,
	0x55, 0xe5, 0x45, 0xfe, 0x99, 0xb4, 0xc0, 0x78, 0xc4, 0x0c, 0x2f, 0x32, 0x1b, 0x08, 0xa7, 0x4d,
	0x6e, 0x43, 0xdc, 0x4b, 0xc9, 0x43, 0x8d, 0x9f, 0xe6, 0xf1, 0x2f, 0xa5, 0x19, 0x96, 0x8f, 0xf0,
	0x7e, 0xbe, 0x30, 0xa2, 0x97, 0x7f, 0x1f, 0x2d, 0x35, 0xde, 0x47, 0x19, 0x46, 0x5c, 0x3a, 0xe7,
	0xf7, 0x11, 0xb6, 0xa8, 0xa2, 0xc1, 0xe5, 0xc9, 0xeb, 0x68, 0xa9, 0x71, 0x65, 0x65, 0x72, 0xfd,
	0x1d, 0xaf, 0x2c, 0xbe, 0x3f, 0x8d, 0xd1, 0xc4, 0xcb, 0x67, 0xb2, 0x1e, 0xbc, 0x7c, 0x26, 0xca,
	0x78, 0xb5, 0x6c, 0x43, 0xbf, 0x4d, 0x79, 0xb5, 0x55, 0x3c, 0xaf, 0x36, 0x8f, 0xe7, 0xd2, 0xf2,
	0xbd, 0x4c, 0x3b, 0x4f, 0xb8, 0x34, 0x43, 0x23, 0x4f, 0xb8, 0xb4, 0x7c, 0xef, 0xb2, 0x35, 0xfe,
	0xe2, 0x52, 0xe6, 0x32, 0x35, 0x9f, 0xb1, 0x6d, 0xeb, 0x88, 0x59, 0x46, 0x39, 0x91, 0x48, 0xe8,
	0x77, 0x2c, 0x31, 0xcb, 0x28, 0x97, 0x17, 0x25, 0x4f, 0xee, 0x4b, 0xf4, 0x7c, 0xac, 0x75, 0xf4,
	0x24, 0x8f, 0x75, 0x25, 0xba, 0xf7, 0x80, 0x77, 0x26, 0x54, 0x12, 0xb7, 0xe8, 0xae, 0xeb, 0x5a,
	0xcf, 0x41, 0xe6, 0xf3, 0x41, 0x6c, 0x36, 0xca, 0x0b, 0x77, 0x0b, 0xaa, 0xb2, 0x53, 0x40, 0xdb,
	0x05, 0xc9, 0x8a, 0x9b, 0x72, 0x1d, 0xf4, 0xd4, 0x57, 0xfd, 0x80, 0xdc, 0xb5, 0xbf, 0xc8, 0x80,
	0xa4, 0x06, 0x23, 0x89, 0xcc, 0x54, 0x98, 0xec, 0x7c, 0x9c, 0xc9, 0x0c, 0xd8, 0x51, 0x60, 0x32,
	0x33, 0xcb, 0xe4, 0xa4, 0x4d, 0x8e, 0xc9, 0x91, 0x81, 0xd3, 0x17, 0x78, 0x8a, 0x23, 0x06, 0x11,
	0xaa, 0x09, 0xc4, 0x83, 0x00, 0x09, 0x12, 0xae, 0xd0, 0x79, 0x68, 0x9c, 0x00, 0x0b, 0x86, 0x9e,
	0xcb, 0x86, 0xd6, 0xfa, 0x0f, 0x68, 0xcd, 0xad, 0xc9, 0x8e, 0x86, 0xe4, 0xe1, 0x4b, 0x16, 0xdf,
	0x46, 0x3f, 0x37, 0x30, 0x7b, 0x0f, 0x5a, 0x61, 0x4e, 0xd3, 0x8a, 0x13, 0x56, 0xd5, 0xc5, 0x1f,
	0xfc, 0xef, 0x79, 0xd1, 0x2c, 0x38, 0x51, 0x5c, 0xe0, 0xc2, 0x35, 0x38, 0xb3, 0x16, 0x25, 0x6f,
	0xbf, 0x47, 0x93, 0x42, 0x31, 0x2c, 0x9c, 0x2d, 0x89, 0xbc, 0x1f, 0x06, 0x51, 0x3d, 0xde, 0xc8,
	0x1c, 0xb0, 0x8f, 0xb0, 0xd7, 0xca, 0x4f, 0xe1, 0x88, 0x89, 0x05, 0x55, 0x91, 0xf7, 0xc3, 0x05,
	0x10, 0x46, 0xb1, 0x2a, 0x9f, 0x84, 0x5d, 0x84, 0x24, 0x7e, 0x7d, 0x86, 0xfe, 0xc7, 0x6f, 0xef,
	0x2f, 0x6e, 0x46, 0x39, 0xc1, 0x0f, 0xea, 0x02, 0xe1, 0x2a, 0xf6, 0x5a, 0xc6, 0xa7, 0x93, 0x15,
	0xca, 0x2b, 0xe8, 0x5f, 0x44, 0x33, 0x9c, 0xba, 0x78, 0x24, 0x79, 0xe5, 0x10, 0x76, 0xf4, 0x6d,
	0x02, 0xe5, 0xfd, 0xad, 0xbe, 0xe6, 0x68, 0x20, 0x5c, 0x15, 0xa9, 0xcd, 0xf7, 0xd6, 0x04, 0x03,
	0xb1, 0x78, 0xc1, 0xfb, 0x81, 0x58, 0x3c, 0x98, 0xef, 0xad, 0x8d, 0xc4, 0xe2, 0x05, 0x75, 0x91,
	0xaa, 0x7c, 0x6f, 0x5d, 0x34, 0x14, 0x89, 0x86, 0xe2, 0x5b, 0xfc, 0x6c, 0x58, 0xf1, 0x0f, 0x48,
	0xac, 0x0d, 0x7c, 0x50, 0x5a, 0x5b, 0x17, 0xdf, 0x52, 0x54, 0x5f, 0xb3, 0x09, 0xc8, 0x08, 0x46,
	0xa3, 0x71, 0x45, 0xbf, 0x52, 0x95, 0xe5, 0x92, 0x43, 0xb5, 0xbc, 0xb8, 0x36, 0xf0, 0x41, 0x41,
	0x50, 0x2f, 0x2c, 0xd8, 0x50, 0x5f, 0xb3, 0xa9, 0x00, 0xbc, 0x1d, 0xf3, 0xb5, 0xd6, 0x43, 0xc9,
	0x2f, 0x4f, 0x13, 0x47, 0x3a, 0xec, 0xcd, 0x64, 0x68, 0x2f, 0x1d, 0x86, 0x11, 0x3f, 0x44, 0xe3,
	0x63, 0x14, 0x0c, 0x25, 0xc1, 0x9a, 0xc0, 0x16, 0x62, 0xeb, 0x54, 0xa1, 0x2a, 0xe5, 0x92, 0xa5,
	0x4a, 0x5e, 0x0a, 0x37, 0x05, 0x51, 0x8b, 0xef, 0xdb, 0xab, 0x9d, 0x69, 0x1f, 0x3c, 0x74, 0x03,
	0x5e, 0x53, 0x5a, 0x5f, 0x83, 0x76, 0x7e, 0x8f, 0xd6, 0x74, 0x46, 0xbb, 0xd8, 0x0e, 0x9f, 0x67,
	0x16, 0x0d, 0x8b, 0x17, 0x69, 0x4d, 0x3b, 0x07, 0xd5, 0x93, 0x7e, 0xcb, 0x78, 0xe2, 0xdf, 0x17,
	0xd0, 0x54, 0x56, 0xb4, 0x2e, 0x1c, 0x0e, 0x06, 0xab, 0x82, 0x55, 0xdc, 0x43, 0x0e, 0x1c, 0x77,
	0x25, 0xe7, 0x36, 0x72, 0x84, 0xdb, 0xee, 0x7a, 0x52, 0x51, 0x10, 0x0f, 0xd5, 0x06, 0xf3, 0xc9,
	0xab, 0x0c, 0x1c, 0x5a, 0x3b, 0x9b, 0xb5, 0x6f, 0x1b, 0x61, 0x8e, 0xfa, 0xb5, 0x47, 0x0c, 0x39,
	0x4f, 0xa4, 0x7a, 0x3b, 0x53, 0x9f, 0xf5, 0x0c, 0x1e, 0xf9, 0x4a, 0x3b, 0xd3, 0xae, 0x5d, 0xda,
	0x0f, 0x33, 0xd4, 0xf6, 0xed, 0x1d, 0xf8, 0xe4, 0x0b, 0xb7, 0xe9, 0x3b, 0xcf, 0x43, 0xfc, 0x1b,
	0x01, 0xcd, 0x34, 0x6a, 0xe2, 0xa1, 0x9a, 0xd0, 0x1f, 0x70, 0x10, 0xcc, 0xb5, 0xef, 0x46, 0x83,
	0x81, 0x77, 0x23, 0x35, 0x55, 0x44, 0xa8, 0x4c, 0xfc, 0xea, 0xd3, 0xb7, 0x95, 0xb7, 0x0b, 0xfc,
	0xb2, 0x8c, 0x16, 0x05, 0xf1, 0x77, 0xa3, 0xc1, 0x98, 0xde, 0x24, 0x1f, 0xbc, 0x2e, 0x09, 0x36,
	0xe3, 0x68, 0x50, 0x83, 0x47, 0x9b, 0xb4, 0x86, 0x3e, 0x63, 0x79, 0x5c, 0x34, 0x3e, 0x9d, 0x44,
	0xf6, 0xef, 0x4d, 0xf4, 0xec, 0x85, 0x75, 0xa6, 0x8e, 0x7d, 0xab, 0x35, 0xed, 0x4c, 0x76, 0x1d,
	0x84, 0x9d, 0x02, 0xaa, 0x3a, 0x78, 0xe4, 0x2b, 0x23, 0x62, 0x57, 0x77, 0xcf, 0xb3, 0x8b, 0xfc,
	0xe9, 0x27, 0x29, 0xb6, 0x0a, 0xe8, 0x91, 0xd8, 0xa6, 0x10, 0x84, 0x8b, 0x7a, 0x3d, 0x14, 0x7f,
	0x77, 0x65, 0xa4, 0x32, 0x50, 0x53, 0x11, 0x8f, 0x44, 0x75, 0xda, 0x09, 0xc9, 0x47, 0xd6, 0xa8,
	0xca, 0x4a, 0xc9, 0xbd, 0x95, 0xbc, 0x50, 0xbb, 0xd1, 0x9f, 0x3a, 0x74, 0x36, 0xd9, 0xd1, 0x9c,
	0xec, 0xf8, 0x52, 0xeb, 0xb8, 0xa4, 0x75, 0x1e, 0xd5, 0xb6, 0x5d, 0x60, 0x2a, 0x6d, 0x7e, 0x42,
	0x10, 0x1a, 0xd5, 0x7d, 0x2c, 0xf1, 0x84, 0x80, 0xa6, 0x9b, 0x6a, 0x2b, 0xb6, 0xc4, 0xe2, 0xc1,
	0xda, 0xf2, 0x48, 0x55, 0x0c, 0x3f, 0x6c, 0x89, 0xc3, 0xaf, 0x5b, 0x1b, 0x79, 0x19, 0xcc, 0x65,
	0x53, 0xfd, 0x86, 0x60, 0x41, 0x0c, 0x17, 0x7b, 0x57, 0x57, 0xe8, 0x97, 0xe1, 0xf1, 0x13, 0x25,
	0x81, 0x60, 0x6d, 0x24, 0x5c, 0x11, 0x8c, 0x33, 0x83, 0xc8, 0xf2, 0x48, 0x95, 0x7d, 0x96, 0x30,
	0x45, 0xb7, 0x0f, 0x88, 0xdb, 0x04, 0x34, 0x23, 0x54, 0x1d, 0x8e, 0x44, 0x83, 0x6c, 0xbc, 0x18,
	0x07, 0x59, 0x6c, 0xec, 0x96, 0x53, 0xf4, 0x8a, 0xaa, 0xbc, 0x2c, 0xa5, 0x6b, 0x27, 0xcf, 0x82,
	0x89, 0x1a, 0x93, 0xa2, 0x81, 0x34, 0x07, 0x2e, 0x9e, 0x4e, 0x5d, 0x3c, 0xe2, 0x4f, 0xd7, 0x59,
	0xdc, 0x2a, 0xa0, 0xc9, 0x91, 0x4d, 0x6b, 0x23, 0xf1, 0x40, 0xcd, 0xba, 0x70, 0x34, 0x18, 0xa8,
	0xda, 0x52, 0x1c, 0xa9, 0x27, 0x29, 0x2b, 0xc7, 0xc1, 0x7e, 0x39, 0xd5, 0xcb, 0xcf, 0x46, 0x36,
	0x15, 0xc4, 0xf5, 0xd2, 0x82, 0x7a, 0x28, 0x2e, 0xa8, 0xd4, 0xcb, 0xf3, 0x81, 0xaa, 0x7a, 0x49,
	0xa1, 0x97, 0xf9, 0x86, 0x26, 0x0f, 0x5d, 0x1a, 0xdc, 0xd5, 0xe6, 0x77, 0x1a, 0x4b, 0xbc, 0x29,
	0xa0, 0x47, 0x6a, 0x03, 0x1f, 0xf0, 0x15, 0xe5, 0xc1, 0x68, 0x65, 0x30, 0x1c, 0xd7, 0x31, 0x67,
	0x0c, 0x9e, 0xc9, 0x01, 0x41, 0x55, 0xda, 0x04, 0xc9, 0xbd, 0x9d, 0x1c, 0xd5, 0x89, 0x9f, 0x79,
	0x4a, 0x75, 0xac, 0x36, 0x9f, 0x14, 0x91, 0xb3, 0x80, 0xdd, 0x38, 0x09, 0xe1, 0x6a, 0xe8, 0x65,
	0x93, 0x64, 0x07, 0x41, 0x3f, 0x35, 0xb8, 0x4d, 0xb2, 0xf3, 0x0c, 0x9c, 0x23, 0xad, 0xe9, 0x98,
	0xb6, 0xb5, 0x23, 0xd9, 0xf9, 0x09, 0xd3, 0xfe, 0x69, 0x17, 0xaf, 0xfb, 0xdd, 0xa7, 0x23, 0xaa,
	0x02, 0x9a, 0xc2, 0xd1, 0x06, 0x5c, 0x8d, 0xc9, 0xd8, 0x58, 0xbc, 0x9e, 0xdf, 0xaa, 0xca, 0x5b,
	0x92, 0x63, 0x03, 0xb9, 0xd8, 0x44, 0xc3, 0x60, 0x25, 0x98, 0x84, 0x99, 0xd6, 0xe0, 0x48, 0xc9,
	0xb4, 0xd6, 0x43, 0x89, 0xfe, 0xd6, 0xd4, 0x79, 0xd5, 0xef, 0x38, 0xb4, 0xf8, 0x67, 0x02, 0x9a,
	0xa1, 0x8f, 0x52, 0x1d, 0xd2, 0x6f, 0x7e, 0x6a, 0xca, 0x50, 0x1b, 0xd9, 0x1c, 0xa8, 0xc1, 0x73,
	0x1b, 0x87, 0xe7, 0x86, 0x8d, 0xa5, 0xa4, 0x74, 0x0d, 0xe5, 0xdf, 0x51, 0x7f, 0xf0, 0x00, 0x0d,
	0x4a, 0x1c, 0x85, 0xa9, 0x98, 0xc8, 0xff, 0xa5, 0x9d, 0xc4, 0xcf, 0xbf, 0xe3, 0x73, 0xad, 0xe3,
	0x82, 0x7e, 0x92, 0xa2, 0xe1, 0x60, 0x3c, 0x18, 0x4b, 0x74, 0x77, 0x26, 0xaf, 0x5c, 0xd0, 0x76,
	0xb6, 0xd8, 0xcf, 0xcc, 0xd3, 0x94, 0xb0, 0xa6, 0xfb, 0xbc, 0x58, 0xcb, 0xbf, 0x73, 0xc6, 0x53,
	0x01, 0x67, 0x3e, 0xff, 0xce, 0x99, 0xcd, 0x3d, 0x62, 0x74, 0xc8, 0x98, 0x1f, 0x3b, 0xb7, 0x17,
	0x72, 0xba, 0xd0, 0x78, 0x9f, 0x4c, 0xa0, 0x3c, 0xa0, 0x63, 0x02, 0x28, 0x07, 0xcd, 0xcd, 0xcb,
	0x5c, 0xf8, 0xd7, 0x89, 0x34, 0x5e, 0xde, 0x2c, 0x2e, 0xf8, 0xab, 0x53, 0x32, 0x27, 0x23, 0x2a,
	0xeb, 0x05, 0x87, 0x78, 0xd3, 0x93, 0x30, 0x61, 0xf8, 0xa3, 0xaa, 0x7c, 0x68, 0x8f, 0x29, 0xfd,
	0x2e, 0x1f, 0x53, 0xda, 0xa2, 0xa9, 0xc6, 0x72, 0x3f, 0x1c, 0x6b, 0x7a, 0xdf, 0xde, 0x44, 0x5f,
	0xbb, 0xd6, 0x81, 0xb3, 0xfb, 0x62, 0x78, 0x0c, 0x6e, 0xbf, 0x90, 0xea, 0xff, 0xca, 0x4b, 0x9e,
	0x27, 0x1c, 0x03, 0xe6, 0x4d, 0xf5, 0xee, 0x48, 0xf4, 0x5e, 0xe5, 0x29, 0xaf, 0xd7, 0x25, 0x2a,
	0xf5, 0x3f, 0x12, 0xd0, 0xe4, 0x0d, 0xf5, 0x1b, 0x37, 0x06, 0xa3, 0x7e, 0x12, 0x14, 0xd6, 0xaf,
	0xd3, 0x18, 0x1c, 0x47, 0x75, 0x5c, 0xd1, 0x21, 0x41, 0x55, 0xf6, 0x0b, 0x92, 0x53, 0x0b, 0xf9,
	0x0f, 0x50, 0x58, 0x40, 0x83, 0xc9, 0x16, 0xe0, 0x88, 0xd1, 0xe4, 0x4e, 0x23, 0x16, 0x3a, 0xdc,
	0x9d, 0xc6, 0x1f, 0x53, 0x12, 0xa4, 0x83, 0xbb, 0xdc, 0x52, 0x7b, 0x77, 0xc1, 0xd9, 0x1d, 0xe8,
	0x3a, 0x0b, 0x17, 0xa0, 0xd6, 0x74, 0x8c, 0x1f, 0x8a, 0xad, 0xc5, 0xbb, 0x78, 0xd1, 0x22, 0xbf,
	0xd3, 0x84, 0xc4, 0x33, 0x40, 0x91, 0x96, 0x47, 0x03, 0x95, 0xc1, 0x8d, 0xf5, 0x35, 0x6b, 0x83,
	0xd1, 0xda, 0x50, 0x18, 0x13, 0xcc, 0x8a, 0x60, 0x25, 0x4e, 0xbb, 0x31, 0xae, 0x68, 0xa3, 0xaa,
	0x54, 0x4a, 0xee, 0xad, 0xe4, 0x65, 0x3a, 0x3d, 0xaa, 0x26, 0x75, 0x05, 0x71, 0xa3, 0xb2, 0x20,
	0x16, 0xac, 0xcc, 0x27, 0xdc, 0x18, 0x0e, 0xb2, 0x00, 0x27, 0xc7, 0x5b, 0x1e, 0xa9, 0xf2, 0x0e,
	0x36, 0x34, 0x68, 0xbb, 0x7a, 0x92, 0x1d, 0x0d, 0xec, 0x10, 0xf9, 0xdd, 0x3f, 0x21, 0xee, 0x10,
	0xd0, 0xd8, 0x58, 0x65, 0x20, 0x5c, 0x16, 0x8e, 0x07, 0xa3, 0x9b, 0x03, 0x35, 0xb9, 0x53, 0xf0,
	0xcc, 0x7e, 0xa7, 0x2a, 0x6f, 0x4b, 0xa6, 0x0a, 0x79, 0x95, 0xfe, 0xab, 0x20, 0x44, 0x7e, 0xe6,
	0x5b, 0x10, 0x23, 0xf9, 0x69, 0x43, 0xf2, 0x9b, 0x3d, 0xf0, 0x3d, 0xfd, 0xbf, 0xf6, 0x83, 0x8c,
	0x96, 0xe8, 0xcc, 0xc0, 0x79, 0xd5, 0xb4, 0xfd, 0x8b, 0x17, 0xf9, 0x4d, 0x83, 0xeb, 0x37, 0xed,
	0x94, 0xda, 0xc0, 0x07, 0xfa, 0x21, 0xc5, 0xf9, 0xc7, 0x62, 0x54, 0xf4, 0x3e, 0x15, 0x4f, 0xe7,
	0x3d, 0x55, 0xa9, 0x96, 0x1c, 0x1b, 0xc8, 0x6b, 0x74, 0x18, 0xe9, 0x4f, 0xc7, 0x82, 0x3a, 0x5a,
	0x0e, 0xa4, 0x0e, 0x40, 0x42, 0xd8, 0x54, 0x9c, 0xad, 0x8d, 0x87, 0x09, 0x4f, 0xe9, 0x8c, 0xdd,
	0x7c, 0x61, 0xd1, 0x22, 0xbf, 0xe3, 0x67, 0xf4, 0x4b, 0x6e, 0x02, 0xc6, 0xd1, 0x75, 0x75, 0xfa,
	0x23, 0xfc, 0xcd, 0x60, 0x34, 0x82, 0x13, 0x73, 0xe4, 0x14, 0xbd, 0xae, 0x2a, 0x6b, 0x25, 0x6b,
	0x9d, 0xac, 0x00, 0x05, 0xae, 0xaf, 0x2b, 0xd8, 0x18, 0x8d, 0xd4, 0x16, 0xfc, 0x21, 0x18, 0x8d,
	0x90, 0x8b, 0x8d, 0xa7, 0xfe, 0xb7, 0xfa, 0x9a, 0x20, 0x6b, 0xb6, 0x97, 0xbf, 0xeb, 0xf0, 0x96,
	0x36, 0xfb, 0xad, 0x63, 0x8a, 0xc7, 0x05, 0x34, 0xcd, 0xcc, 0xea, 0x2a, 0x1b, 0xf5, 0xa3, 0x56,
	0x55, 0x85, 0x93, 0x7c, 0x8c, 0x2b, 0x0a, 0xaa, 0xca, 0x06, 0xc9, 0xa5, 0x89, 0xfc, 0x2a, 0x77,
	0x27, 0x54, 0xe9, 0x35, 0x05, 0x81, 0x8d, 0x98, 0xfc, 0x56, 0x55, 0xe5, 0x1b, 0xac, 0x77, 0xd3,
	0x99, 0xe4, 0xe1, 0x4e, 0x86, 0x59, 0xf6, 0xcd, 0xd4, 0x2f, 0x06, 0x97, 0x2f, 0x88, 0xe7, 0x74,
	0xf6, 0xcd, 0x5e, 0x45, 0x1e, 0x1e, 0xb9, 0x78, 0x8a, 0x38, 0x4b, 0xb3, 0x7b, 0x2b, 0xd7, 0x59,
	0x92, 0x77, 0x08, 0x70, 0xd8, 0x89, 0xee, 0x33, 0xc6, 0x6b, 0xc4, 0x6d, 0x96, 0xee, 0x1f, 0x11,
	0x3b, 0x05, 0x94, 0xe7, 0x50, 0xbb, 0x2c, 0x10, 0xaa, 0xa9, 0x8f, 0x06, 0x73, 0x1f, 0xc1, 0x33,
	0xad, 0x55, 0x95, 0xf7, 0xa4, 0x34, 0xcd, 0xe4, 0x95, 0x2e, 0x53, 0xdd, 0x08, 0xf5, 0xe4, 0x7c,
	0x42, 0xf8, 0x50, 0x6d, 0xdf, 0x5e, 0x50, 0x68, 0xba, 0x4e, 0x37, 0xcd, 0x97, 0xc4, 0x6d, 0x1e,
	0xe4, 0x65, 0xd5, 0xcb, 0xeb, 0xea, 0x2d, 0xcc, 0x33, 0x66, 0xdf, 0x73, 0xf3, 0xf0, 0xac, 0xbf,
	0x11, 0x54, 0xe5, 0xb2, 0x20, 0x0d, 0xd9, 0x5c, 0x6e, 0xe1, 0x1f, 0x04, 0xd5, 0x75, 0xf5, 0xb7,
	0xf9, 0x28, 0x98, 0xb7, 0xbc, 0x7c, 0xdd, 0xfc, 0x7b, 0xf8, 0x32, 0x18, 0x72, 0xc2, 0x85, 0x3a,
	0xb1, 0x44, 0x01, 0x69, 0x88, 0x07, 0xbe, 0x3c, 0x13, 0x6e, 0x52, 0x5b, 0xbd, 0x53, 0xc4, 0x0a,
	0x47, 0xd3, 0x80, 0xff, 0x29, 0xa0, 0xd9, 0xae, 0xdf, 0x18, 0x19, 0x12, 0xa0, 0x97, 0x4c, 0x82,
	0xe6, 0x79, 0x2e, 0xb9, 0xec, 0xed, 0xcb, 0x03, 0xa9, 0xf0, 0x99, 0x39, 0xd4, 0x94, 0xf7, 0x61,
	0x92, 0xa2, 0x9c, 0x15, 0x6c, 0x62, 0x94, 0x26, 0xe1, 0xfe, 0xc9, 0x51, 0xbe, 0x2f, 0x7a, 0x2a,
	0x3a, 0xdf, 0x9f, 0x0d, 0xad, 0xfd, 0x63, 0xb8, 0xd6, 0xfe, 0x1c, 0xda, 0x5a, 0xe7, 0xb1, 0x6c,
	0x52, 0x97, 0x46, 0x21, 0x8d, 0xd8, 0x65, 0xdd, 0xbd, 0x13, 0xbb, 0x7c, 0x5f, 0x94, 0x23, 0x65,
	0xe7, 0x36, 0xfc, 0xff, 0x26, 0xcf, 0x13, 0x1c, 0x25, 0x30, 0x3b, 0x05, 0x17, 0x11, 0xcc, 0x6f,
	0xef, 0x83, 0x08, 0x86, 0x4c, 0xe6, 0xd3, 0xac, 0x79, 0x2f, 0xd9, 0xa4, 0x31, 0xff, 0xcb, 0x10,
	0xd2, 0x98, 0x23, 0x0f, 0x95, 0x34, 0x86, 0x5f, 0x89, 0x8b, 0x60, 0xe6, 0xff, 0x1e, 0xa6, 0x60,
	0xe6, 0xab, 0x91, 0x23, 0x98, 0xf9, 0xbe, 0x28, 0x5b, 0xca, 0xcc, 0xad, 0x9a, 0x27, 0xfc, 0x2c,
	0xa1, 0xf9, 0x31, 0x4a, 0x68, 0x5a, 0xd2, 0x4a, 0x68, 0xde, 0xbc, 0xc7, 0x12, 0x1a, 0x83, 0x32,
	0xfd, 0xc2, 0x59, 0x58, 0xf3, 0x6f, 0x87, 0x21, 0xac, 0xe9, 0x78, 0x18, 0x85, 0x35, 0xf4, 0x98,
	0xfc, 0x22, 0x9d, 0xd4, 0xe6, 0x78, 0x7a, 0xa9, 0x4d, 0xe8, 0xfe, 0x4a, 0x6d, 0x78, 0xfa, 0xf5,
	0xe3, 0x16, 0xe0, 0xac, 0xe3, 0x75, 0xc8, 0xe3, 0xa9, 0xcb, 0x43, 0x01, 0xaf, 0x43, 0xf6, 0x82,
	0xd2, 0xd8, 0x22, 0xbd, 0x49, 0xaf, 0x48, 0x5e, 0xcb, 0xcb, 0x85, 0x26, 0x50, 0xdf, 0xd6, 0xdb,
	0x94, 0x0b, 0xd9, 0x14, 0xde, 0x85, 0x86, 0x7a, 0x79, 0x22, 0x27, 0xfe, 0xb1, 0x24, 0xf3, 0x76,
	0xb4, 0x85, 0x32, 0x89, 0x7f, 0x26, 0xdd, 0xbe, 0xf8, 0x67, 0xcf, 0x70, 0x1e, 0x0f, 0x20, 0x60,
	0xf9, 0x76, 0x64, 0x3e, 0x1e, 0x8c, 0xdb, 0x6b, 0xc8, 0x99, 0x8b, 0x7f, 0xe1, 0x22, 0x61, 0x02,
	0x81, 0xcc, 0x89, 0x87, 0x53, 0xc2, 0x64, 0x2c, 0xd0, 0x51, 0xd4, 0xd4, 0x95, 0x56, 0xd4, 0x04,
	0x02, 0x9d, 0xdf, 0x3f, 0x18, 0x51, 0x13, 0x4f, 0x7e, 0xd2, 0x48, 0x9d, 0xda, 0xac, 0x52, 0x27,
	0x10, 0xf3, 0x6c, 0xba, 0xdf, 0x52, 0x27, 0x63, 0x7a, 0x59, 0x16, 0x01, 0xd4, 0x67, 0x6e, 0x02,
	0x28, 0xc8, 0xbe, 0x5a, 0xff, 0xe0, 0x04, 0x50, 0x26, 0x0a, 0x3e, 0x6c, 0x59, 0xd4, 0xf4, 0x07,
	0x2c, 0x8b, 0xba, 0xe0, 0x2e, 0x8b, 0x02, 0x41, 0x4f, 0xdd, 0x03, 0x91, 0x45, 0xf1, 0xc0, 0x72,
	0x13, 0x4b, 0x5d, 0x4e, 0x2b, 0x96, 0x02, 0x61, 0x4f, 0xec, 0x41, 0x89, 0xa5, 0x8c, 0x09, 0xff,
	0x22, 0x9d, 0x84, 0xaa, 0x3b, 0xbd, 0x84, 0x0a, 0x64, 0x3d, 0x1f, 0x3c, 0x50, 0x09, 0x15, 0x0f,
	0xea, 0x34, 0x1f, 0x65, 0x72, 0x9a, 0xf4, 0x22, 0x04, 0x79, 0x26, 0x5c, 0x79, 0xb7, 0x2f, 0xa7,
	0xa1, 0x36, 0xb9, 0x5f, 0x78, 0xd0, 0x6c, 0xd7, 0x6f, 0x8c, 0x0c, 0x39, 0x4d, 0xe8, 0xce, 0xe4,
	0x34, 0x90, 0x5e, 0x03, 0x4c, 0x6c, 0xbc, 0xcc, 0x68, 0xd7, 0xd6, 0xcc, 0x64, 0xb8, 0xf9, 0x79,
	0x06, 0x9a, 0x05, 0xb8, 0xe5, 0x2a, 0xd4, 0xf9, 0xb5, 0xdd, 0xf2, 0xef, 0x45, 0x9c, 0x74, 0xda,
	0xe0, 0x7c, 0xc6, 0xdc, 0x61, 0xc2, 0xd5, 0xbf, 0xb2, 0x65, 0x11, 0xfb, 0x33, 0x41, 0x55, 0xfe,
	0x2e, 0x97, 0x45, 0xec, 0x1b, 0x53, 0x16, 0x31, 0x97, 0xb5, 0xdc, 0x99, 0xc5, 0x2f, 0xce, 0x30,
	0xbd, 0x57, 0x27, 0x75, 0x38, 0x30, 0x8d, 0x9d, 0x6b, 0xd5, 0x2e, 0x36, 0x0f, 0x7c, 0xda, 0x98,
	0x6a, 0xdf, 0xc1, 0xac, 0xd5, 0x6e, 0xf5, 0xb5, 0x24, 0x8f, 0x76, 0x99, 0x62, 0xc8, 0x5d, 0xfb,
	0x0a, 0x14, 0x5c, 0xa9, 0xf6, 0x1d, 0xc5, 0x0a, 0xe4, 0x28, 0x34, 0x59, 0x13, 0x93, 0xc4, 0x2f,
	0x43, 0x00, 0x59, 0x9e, 0xee, 0xb2, 0x40, 0x1e, 0xe1, 0x7d, 0x17, 0x3d, 0x68, 0xb6, 0xeb, 0x38,
	0x23, 0x03, 0xb5, 0x6b, 0xee, 0x10, 0xb5, 0x71, 0xc6, 0x17, 0x40, 0xed, 0xc7, 0x78, 0x4b, 0xe4,
	0xf4, 0xd8, 0x7d, 0xdd, 0x83, 0x66, 0x2c, 0x0f, 0xc6, 0x7f, 0x08, 0xd4, 0xde, 0xcc, 0x71, 0xe7,
	0xbc, 0x75, 0x17, 0xe3, 0xce, 0x57, 0x14, 0x2b, 0xe0, 0xee, 0x97, 0xe8, 0xd9, 0x4f, 0x0b, 0x71,
	0x40, 0xa1, 0x44, 0xef, 0x59, 0x1a, 0xbf, 0x06, 0xfe, 0x4d, 0x1e, 0xb9, 0x9a, 0xef, 0xd5, 0xce,
	0xb4, 0xea, 0x7c, 0x30, 0x11, 0xc7, 0x59, 0xfa, 0x19, 0x6c, 0x7d, 0xe1, 0x72, 0x55, 0x29, 0x41,
	0x45, 0x52, 0xba, 0x65, 0xcb, 0x8f, 0x81, 0xd1, 0x9c, 0x0b, 0xec, 0x88, 0x21, 0xf5, 0xdf, 0x7a,
	0xd0, 0xa3, 0xce, 0x83, 0xfc, 0x74, 0x88, 0x28, 0xb3, 0xb4, 0x4e, 0x8b, 0x66, 0xd4, 0xc3, 0x3f,
	0x2d, 0xb8, 0xe4, 0x99, 0x2e, 0x40, 0x77, 0x33, 0x5a, 0xbc, 0x90, 0x89, 0x1e, 0x5d, 0x19, 0x8a,
	0xb9, 0x23, 0x6f, 0xd8, 0x8e, 0xbc, 0xe5, 0xaa, 0xb2, 0x8c, 0x47, 0xde, 0x17, 0x6c, 0x9d, 0xef,
	0xc2, 0x38, 0xfb, 0x2d, 0xbb, 0x71, 0xf6, 0xcb, 0xaa, 0xf2, 0x34, 0xff, 0xb0, 0x7e, 0xc2, 0xfd,
	0x7b, 0x43, 0x3c, 0xaf, 0xcb, 0xac, 0x76, 0xda, 0x0b, 0x55, 0xe5, 0x71, 0xc3, 0x0e, 0x22, 0xcf,
	0x36, 0xb0, 0xbb, 0xc9, 0x76, 0x99, 0xd5, 0x64, 0x1b, 0x86, 0xa2, 0x6f, 0x6a, 0xfb, 0x50, 0xae,
	0xd6, 0xdb, 0x85, 0x67, 0x04, 0x55, 0x39, 0x25, 0xa0, 0xe3, 0x82, 0x94, 0x76, 0x2b, 0xe4, 0x8f,
	0x5c, 0xf6, 0xf6, 0x01, 0x59, 0x23, 0xff, 0xef, 0x1e, 0x34, 0xd3, 0x65, 0x7e, 0x23, 0xe3, 0xac,
	0xbe, 0x65, 0x32, 0x4d, 0x1e, 0xfe, 0x59, 0x1d, 0x56, 0x4e, 0x29, 0x12, 0x8e, 0x21, 0x3d, 0x84,
	0x6e, 0xfb, 0x78, 0x7e, 0xe5, 0x71, 0xd0, 0x86, 0x55, 0x60, 0x0b, 0x78, 0x7a, 0x40, 0x5f, 0x41,
	0xd9, 0x41, 0x5e, 0x05, 0x86, 0x03, 0xbc, 0x91, 0x22, 0x79, 0x06, 0x6f, 0x4d, 0xc3, 0xb4, 0x2c,
	0xc0, 0x79, 0xfb, 0x49, 0x23, 0xb3, 0xd0, 0xc9, 0x73, 0x1f, 0x84, 0x4e, 0x19, 0xb7, 0x2b, 0x74,
	0x7a, 0x89, 0xbb, 0xd6, 0x32, 0x0d, 0xcc, 0x30, 0xae, 0xb5, 0x49, 0x69, 0x2e, 0x27, 0xdf, 0xdf,
	0x11, 0x1c, 0x78, 0x73, 0x0a, 0xb4, 0x11, 0x81, 0xaa, 0xbe, 0x94, 0x80, 0x90, 0x1f, 0xc7, 0xba,
	0xc3, 0x19, 0xa0, 0x16, 0xb3, 0x60, 0x7a, 0x40, 0x81, 0xe9, 0x08, 0x38, 0x98, 0xde, 0x58, 0xad,
	0xe3, 0x92, 0x3d, 0x9f, 0x5d, 0x31, 0x42, 0xf0, 0x17, 0x4e, 0x05, 0x0d, 0x73, 0xc6, 0xc9, 0x35,
	0xb8, 0x62, 0x59, 0xe4, 0xbb, 0x12, 0x3f, 0x4f, 0xae, 0x5e, 0x7c, 0x05, 0x8d, 0x81, 0x5f, 0x3a,
	0xf4, 0xa8, 0x7f, 0x2c, 0x76, 0x12, 0xe2, 0xcb, 0xe9, 0x0c, 0xc0, 0xc5, 0xc3, 0xcf, 0x57, 0x15,
	0xce, 0x56, 0x95, 0x47, 0x51, 0x9e, 0xc4, 0x2d, 0xc6, 0x3c, 0x5f, 0xdf, 0xbf, 0x10, 0xd0, 0xb4,
	0xe5, 0xc1, 0x38, 0x4e, 0x62, 0x0d, 0x8d, 0x18, 0x66, 0x2f, 0x41, 0xa3, 0x2a, 0x49, 0xa2, 0x6c,
	0x81, 0x7e, 0x79, 0x8a, 0x44, 0xcb, 0xe4, 0xd1, 0x2c, 0x27, 0x3a, 0xc4, 0x4f, 0xf6, 0xf8, 0x69,
	0x95, 0xf8, 0x0a, 0x1a, 0x1d, 0xa8, 0xc4, 0xda, 0x02, 0x86, 0xd1, 0x38, 0xdc, 0x9a, 0x51, 0x2a,
	0x8f, 0x49, 0xf4, 0xec, 0xd7, 0x76, 0x75, 0x0e, 0x74, 0x6d, 0x25, 0xd8, 0x3b, 0xd1, 0xe3, 0x37,
	0xaa, 0xa9, 0xcb, 0xa6, 0xcb, 0xd4, 0xa8, 0xdb, 0x02, 0xfe, 0x9e, 0x17, 0xd6, 0x03, 0x6e, 0x0b,
	0x86, 0x7f, 0xd8, 0x74, 0x5b, 0xd7, 0x91, 0x96, 0xa5, 0x45, 0xa7, 0x92, 0x79, 0x56, 0x2a, 0x69,
	0x6c, 0xe4, 0xf0, 0xe8, 0xe2, 0x12, 0x55, 0x79, 0x16, 0x3d, 0x2d, 0xb9, 0x41, 0x83, 0xa6, 0xb4,
	0xb4, 0x43, 0xd2, 0xb7, 0xd7, 0x83, 0x72, 0xde, 0x8c, 0x84, 0x21, 0x07, 0xda, 0x22, 0x16, 0x8a,
	0x13, 0x50, 0x21, 0x57, 0x55, 0xa6, 0xb2, 0x18, 0x8d, 0x63, 0xb8, 0xe8, 0x8c, 0x2c, 0xf2, 0xe6,
	0x33, 0x24, 0xa6, 0x23, 0x07, 0x33, 0x1e, 0xf5, 0x27, 0xb0, 0x3e, 0x34, 0x59, 0x25, 0x0e, 0xd5,
	0x58, 0x88, 0x72, 0xf4, 0x7f, 0xf1, 0xa1, 0x19, 0x1e, 0xba, 0xb3, 0xf6, 0xe2, 0x4b, 0x68, 0xb4,
	0xfe, 0x37, 0x9c, 0x95, 0xcc, 0x61, 0x75, 0x36, 0x3a, 0x14, 0xea, 0x33, 0x44, 0x33, 0x24, 0xb6,
	0x64, 0x6e, 0x86, 0xe4, 0xa8, 0xfc, 0xb7, 0x4c, 0x34, 0x11, 0xc3, 0x90, 0xc6, 0xe8, 0xd4, 0x01,
	0xf3, 0x82, 0x9d, 0x3f, 0x9b, 0x61, 0x7d, 0x5c, 0x24, 0x7a, 0xf6, 0x3b, 0xe5, 0xcd, 0x7c, 0x05,
	0x8d, 0x21, 0x3f, 0x38, 0x1a, 0x01, 0x33, 0xe6, 0xca, 0xe5, 0xb1, 0xd0, 0x97, 0xb9, 0x81, 0x1b,
	0x55, 0xe2, 0x5b, 0x48, 0x24, 0x3f, 0x4b, 0x82, 0xb1, 0xca, 0x68, 0x08, 0xdf, 0x65, 0x7c, 0x16,
	0x4e, 0x87, 0x6a, 0x59, 0x24, 0xf7, 0x10, 0x9f, 0x1b, 0xdf, 0xa1, 0x9d, 0x58, 0x86, 0xc6, 0x93,
	0xd2, 0xf5, 0xc1, 0x68, 0x4c, 0x1f, 0x38, 0xd3, 0xd0, 0x3f, 0x58, 0xaa, 0xe8, 0x24, 0x53, 0xcd,
	0x4d, 0xc9, 0x8e, 0x2f, 0xfd, 0x96, 0x5a, 0x9d, 0x1e, 0x90, 0x92, 0x35, 0x15, 0xc4, 0x41, 0xce,
	0xc7, 0x47, 0x5f, 0x59, 0x53, 0xc1, 0x66, 0x85, 0xe3, 0xda, 0x41, 0x92, 0x3a, 0xbf, 0x51, 0xcd,
	0xc1, 0x0a, 0x3b, 0xd9, 0x65, 0xdb, 0x61, 0x85, 0xfd, 0xec, 0xe8, 0x34, 0xb0, 0x9f, 0x9d, 0x9f,
	0xaf, 0x12, 0x5b, 0x05, 0x34, 0x8e, 0xfc, 0xae, 0xe0, 0xa3, 0xdc, 0x56, 0xab, 0x4a, 0x95, 0x64,
	0xae, 0x91, 0xc9, 0x5d, 0x4b, 0x7c, 0xe6, 0xfc, 0xf5, 0xe1, 0x70, 0x28, 0x5c, 0xed, 0x85, 0xd4,
	0xd7, 0x89, 0xee, 0x4e, 0x2f, 0xb6, 0x10, 0xd2, 0x8b, 0x48, 0x80, 0x92, 0xee, 0x4e, 0x6f, 0x59,
	0x15, 0xb6, 0x76, 0x1d, 0x3c, 0xf2, 0x15, 0x4e, 0x81, 0xd5, 0xe9, 0x55, 0x36, 0x84, 0x23, 0xd1,
	0xda, 0x40, 0x8d, 0x17, 0x5c, 0xe5, 0xe7, 0xfb, 0xcd, 0xdf, 0x28, 0xd4, 0xf9, 0x04, 0xf4, 0x98,
	0x64, 0xc3, 0x28, 0x9c, 0xfe, 0x9f, 0xa4, 0xe0, 0x01, 0xbc, 0x3b, 0x45, 0x18, 0x3f, 0xee, 0xfc,
	0x92, 0xf6, 0x77, 0x4f, 0xa9, 0x97, 0xb0, 0x9b, 0x8d, 0x9d, 0x53, 0x97, 0x9b, 0x8d, 0x76, 0xa5,
	0x17, 0x9c, 0x89, 0xc6, 0x67, 0xdc, 0x09, 0x8d, 0x2f, 0x53, 0x95, 0x65, 0xa8, 0x44, 0x4a, 0xbf,
	0x36, 0xf9, 0x31, 0x8e, 0x40, 0xc1, 0x7c, 0xc8, 0x79, 0xe0, 0xe9, 0x7d, 0xd2, 0x83, 0x66, 0xb9,
	0x0d, 0x33, 0x32, 0xc8, 0xfe, 0x3b, 0x26, 0xb2, 0xef, 0xb5, 0x33, 0xc7, 0x66, 0x2c, 0x71, 0xf5,
	0xe1, 0xe3, 0x81, 0xe3, 0x94, 0x74, 0x75, 0x08, 0x30, 0xc9, 0x33, 0xd3, 0x82, 0xdb, 0x77, 0xc2,
	0x83, 0xf2, 0xcc, 0x57, 0x89, 0x4e, 0x2f, 0x63, 0x23, 0x1b, 0x11, 0x89, 0xf4, 0x2e, 0xcd, 0xc2,
	0xe4, 0x27, 0x1d, 0xae, 0x49, 0x76, 0x81, 0xf1, 0x98, 0xf8, 0xcf, 0x41, 0x18, 0x65, 0x1f, 0x67,
	0xa4, 0xc5, 0x0b, 0xd0, 0xd1, 0x30, 0xd7, 0x8a, 0x86, 0xf4, 0x72, 0x1c, 0x1e, 0xef, 0x41, 0x1c,
	0xd5, 0xd3, 0xc1, 0x43, 0x9e, 0x33, 0x24, 0x60, 0x7d, 0x47, 0x32, 0xd0, 0xd8, 0x35, 0x38, 0xd4,
	0x68, 0x28, 0x12, 0x5e, 0x19, 0xa9, 0x16, 0x8b, 0xd1, 0x58, 0xaa, 0x87, 0xe5, 0x42, 0xe2, 0xe1,
	0xb8, 0xd8, 0xa6, 0x0a, 0x79, 0x2c, 0x68, 0x5d, 0xc9, 0x75, 0x60, 0xaa, 0x13, 0x5f, 0xd0, 0x19,
	0x74, 0xf8, 0xcd, 0x98, 0x54, 0x0c, 0x20, 0xae, 0x58, 0xce, 0x81, 0x01, 0xca, 0x4a, 0xfc, 0x5c,
	0xa9, 0xf8, 0x34, 0x0b, 0x7a, 0x90, 0x61, 0x5c, 0xf8, 0x34, 0xe8, 0xc1, 0x78, 0x1a, 0xfa, 0x02,
	0xf2, 0x1b, 0xb2, 0x30, 0x17, 0xdc, 0x46, 0x66, 0x3a, 0x6d, 0xa4, 0x76, 0xf1, 0xf4, 0xc0, 0xc5,
	0xd3, 0xc9, 0x23, 0x67, 0xb5, 0x1b, 0x47, 0xac, 0x1b, 0xb9, 0x00, 0x65, 0x47, 0xea, 0xd6, 0xc5,
	0x82, 0x34, 0xd1, 0xe3, 0x34, 0x55, 0x99, 0x2c, 0x91, 0x22, 0x9a, 0x29, 0x24, 0xd1, 0xd3, 0xe3,
	0x27, 0x45, 0xe2, 0xcb, 0x08, 0x55, 0x42, 0x7c, 0x2b, 0x1a, 0x7e, 0x6e, 0x34, 0xec, 0x18, 0x57,
	0x2c, 0x8f, 0x85, 0xcb, 0x8b, 0x46, 0xf8, 0x32, 0x6a, 0x0a, 0x9f, 0x54, 0x95, 0xb9, 0xc8, 0x27,
	0x99, 0x80, 0x2e, 0x8b, 0xf0, 0x19, 0x98, 0x20, 0x4c, 0xd6, 0xa7, 0x11, 0xe9, 0x15, 0xde, 0xdd,
	0x32, 0x2e, 0xc6, 0xfd, 0xdd, 0xd3, 0x83, 0x67, 0x2c, 0xf4, 0x00, 0x47, 0xee, 0xa1, 0xf4, 0x40,
	0xbf, 0x22, 0x1d, 0x5f, 0x5d, 0x2f, 0xd8, 0x69, 0xc1, 0x8c, 0x34, 0xb4, 0x80, 0x23, 0x02, 0x62,
	0x39, 0xe1, 0x57, 0x33, 0x69, 0xe8, 0x36, 0x99, 0x84, 0x9a, 0x97, 0x4c, 0x41, 0xe6, 0xcf, 0x6d,
	0xf3, 0x06, 0xea, 0x0a, 0xaa, 0xeb, 0x03, 0xe1, 0xea, 0x3f, 0xbc, 0x1b, 0xa9, 0x2f, 0x58, 0x9c,
	0xef, 0xad, 0x8f, 0x15, 0xbc, 0x1f, 0x8c, 0xc5, 0x17, 0x17, 0x04, 0xa8, 0xc8, 0x0b, 0x78, 0xd9,
	0x12, 0x84, 0xc2, 0x91, 0xaa, 0xe0, 0xb2, 0x40, 0x6d, 0xa8, 0x66, 0x0b, 0xd9, 0x39, 0x1c, 0x58,
	0x80, 0x2b, 0x96, 0xc7, 0x42, 0x02, 0x81, 0xd4, 0x95, 0x5e, 0xad, 0xe9, 0x08, 0xed, 0xcf, 0x35,
	0x10, 0x9f, 0x40, 0x19, 0x95, 0x75, 0xf5, 0xc4, 0xaa, 0x70, 0x8a, 0xaa, 0x4c, 0x92, 0xf4, 0xdf,
	0x32, 0x2a, 0x2e, 0x5f, 0xe7, 0x4d, 0x9e, 0xea, 0x4e, 0x1e, 0xba, 0xe4, 0xd7, 0x0b, 0xc4, 0x97,
	0x51, 0x76, 0x6d, 0xb0, 0x36, 0x12, 0xdd, 0x82, 0xf9, 0x9a, 0x71, 0x10, 0xe2, 0x9c, 0x14, 0xc9,
	0xb9, 0x90, 0x28, 0x40, 0x3b, 0x73, 0x5e, 0xbb, 0xd4, 0xc6, 0xf4, 0x7a, 0xde, 0xe5, 0x45, 0x7e,
	0xd2, 0xa2, 0xb0, 0x5d, 0x50, 0x95, 0xc3, 0x02, 0x3a, 0x20, 0x40, 0x6e, 0x0c, 0x87, 0xcd, 0x94,
	0x3f, 0x00, 0xe1, 0x09, 0x4c, 0x98, 0xe5, 0xd2, 0x79, 0x10, 0xa2, 0xaf, 0x7f, 0xcd, 0x73, 0x40,
	0xe6, 0xa9, 0x8d, 0xc4, 0xec, 0x1b, 0x8f, 0x5a, 0xc9, 0x2a, 0xbf, 0xa4, 0xe1, 0x91, 0xd6, 0x65,
	0xaa, 0x52, 0x8c, 0x14, 0x23, 0xbb, 0x3d, 0x0f, 0x0c, 0x39, 0xd7, 0xbe, 0x51, 0x6e, 0x02, 0xae,
	0xbf, 0xce, 0x44, 0x63, 0xf9, 0xaf, 0x8b, 0xcf, 0xa3, 0x9c, 0x30, 0x19, 0x8f, 0x7f, 0xce, 0xb0,
	0x42, 0x40, 0xd8, 0x63, 0x17, 0x08, 0x4d, 0x65, 0xe5, 0x7a, 0xc7, 0xf8, 0x96, 0xba, 0x20, 0xf7,
	0x94, 0x81, 0x8e, 0xb4, 0x90, 0x62, 0x3a, 0x79, 0xc7, 0xb0, 0x72, 0x9d, 0x58, 0x71, 0xc7, 0x24,
	0x83, 0x23, 0x56, 0x6e, 0xc7, 0xc4, 0x74, 0x3e, 0x1e, 0x87, 0xf3, 0x01, 0xe6, 0xcd, 0x93, 0x55,
	0x65, 0x22, 0x9c, 0x8f, 0xd1, 0x95, 0x75, 0xf5, 0xce, 0xc7, 0x23, 0xcb, 0xfd, 0x78, 0x5c, 0xbc,
	0x3e, 0xb8, 0xcb, 0xf1, 0x78, 0xe8, 0x5f, 0xa9, 0x66, 0xa7, 0x10, 0xbe, 0x52, 0xad, 0x7f, 0xa5,
	0xda, 0xf8, 0x4a, 0x75, 0x5d, 0xbd, 0x18, 0xb3, 0xa4, 0xd0, 0x78, 0x4b, 0x55, 0xde, 0x60, 0x91,
	0x38, 0x56, 0x93, 0x35, 0xd0, 0xd0, 0xfc, 0x15, 0xa5, 0x2b, 0x57, 0xde, 0xea, 0x6b, 0x27, 0x71,
	0xf9, 0x21, 0x69, 0x42, 0x5b, 0xd7, 0xc0, 0xd7, 0x9d, 0x89, 0xeb, 0x97, 0xf4, 0xea, 0x35, 0x2b,
	0x4b, 0xde, 0x59, 0xb3, 0x6e, 0xad, 0xb5, 0xc9, 0xb5, 0xaf, 0xb4, 0x83, 0x17, 0x53, 0xfd, 0x3b,
	0x58, 0x28, 0x8e, 0x32, 0x34, 0xba, 0x3e, 0x1c, 0x8a, 0x97, 0x47, 0x43, 0x38, 0x8e, 0xa7, 0x30,
	0xcf, 0x03, 0x8f, 0x3f, 0xa3, 0x54, 0x9e, 0x01, 0x7d, 0x13, 0xbd, 0xd7, 0x92, 0xa7, 0xfa, 0xd8,
	0x02, 0x6f, 0xf5, 0xb5, 0x6b, 0x8d, 0xdb, 0xfd, 0x46, 0x3b, 0xf1, 0x19, 0x94, 0xa5, 0x93, 0x2e,
	0x88, 0xe0, 0x49, 0x03, 0xa4, 0xe2, 0x12, 0x59, 0x84, 0x54, 0xc9, 0xa9, 0xf6, 0x1d, 0x8c, 0x1e,
	0xfa, 0xa1, 0xaa, 0x50, 0xdf, 0x2d, 0x94, 0x2b, 0xe5, 0xac, 0x76, 0xc4, 0x11, 0xdf, 0x8d, 0x0c,
	0xc8, 0x41, 0x84, 0x4f, 0xef, 0x9a, 0x58, 0x59, 0x6d, 0xa0, 0xfa, 0x07, 0xbb, 0x20, 0xee, 0x9a,
	0x59, 0x14, 0xaf, 0x09, 0x36, 0xe1, 0x28, 0xd0, 0x4e, 0x4e, 0x3c, 0xda, 0x2c, 0x0c, 0x1e, 0xea,
	0xd0, 0xb6, 0xb7, 0x11, 0xc3, 0x9f, 0xc3, 0xd7, 0xf9, 0x44, 0x46, 0x85, 0xde, 0xf2, 0x75, 0x45,
	0x2b, 0xcb, 0x8a, 0xdf, 0x29, 0x5b, 0xa5, 0x2c, 0x2f, 0x9d, 0xa7, 0x35, 0x7e, 0xa9, 0x35, 0x5e,
	0x86, 0xf6, 0xf3, 0xf3, 0xcb, 0xfd, 0x65, 0xeb, 0x95, 0xb5, 0xa5, 0xa4, 0x2e, 0x75, 0x7e, 0x6b,
	0xb2, 0xa3, 0x99, 0xd6, 0x55, 0xbc, 0xaa, 0xf8, 0x4b, 0x4b, 0x58, 0xb7, 0xcb, 0x89, 0x9e, 0x2f,
	0x68, 0xd5, 0x2a, 0xc5, 0xbf, 0xa2, 0x74, 0x2d, 0xad, 0xea, 0xde, 0xa6, 0x75, 0xf4, 0x90, 0x2a,
	0x4e, 0x69, 0x48, 0x45, 0x41, 0x2e, 0x7b, 0xc1, 0xc8, 0x06, 0xf7, 0x04, 0x27, 0x1c, 0xd8, 0xbf,
	0x27, 0x89, 0x8f, 0xcc, 0xbd, 0x46, 0x5a, 0x7e, 0x2f, 0x9d, 0xf4, 0x4e, 0xb7, 0x92, 0x5e, 0xb2,
	0x9a, 0xe1, 0x51, 0x5d, 0x92, 0x45, 0xd4, 0x15, 0x16, 0xf2, 0x5c, 0x3b, 0x08, 0x61, 0x1f, 0xd2,
	0x53, 0xe1, 0x43, 0x59, 0x68, 0x14, 0x19, 0x4a, 0x5c, 0x8c, 0x46, 0x85, 0xf4, 0x3f, 0xd8, 0x89,
	0x98, 0x8e, 0x4f, 0x04, 0x29, 0x93, 0x47, 0xc3, 0x78, 0xde, 0xb2, 0x12, 0x3f, 0x2d, 0x13, 0x17,
	0xa0, 0xac, 0x40, 0x4d, 0x28, 0x40, 0x43, 0x35, 0x62, 0xd9, 0x1c, 0x94, 0xc8, 0x63, 0xe9, 0xe7,
	0xbf, 0xd0, 0xf6, 0xb5, 0xfa, 0xa1, 0x50, 0xdf, 0xb1, 0x40, 0xb4, 0xf2, 0x5d, 0x82, 0xff, 0xb0,
	0x63, 0x7a, 0x81, 0x3c, 0x01, 0x5a, 0x17, 0x97, 0xaf, 0x4b, 0x9e, 0xb8, 0x9a, 0x3c, 0xb1, 0xc3,
	0x8f, 0x8b, 0x45, 0x3f, 0x9a, 0x10, 0x89, 0x15, 0xd7, 0xc7, 0xe2, 0x91, 0xda, 0xd0, 0x1f, 0xe0,
	0x6a, 0xc8, 0x34, 0x92, 0xd9, 0x58, 0xeb, 0x74, 0x56, 0xb6, 0x5d, 0x6b, 0xba, 0x0a, 0xcb, 0x27,
	0xf7, 0x84, 0xb5, 0x91, 0xf8, 0x3c, 0xca, 0x8e, 0xc4, 0xf0, 0x65, 0x91, 0x65, 0x70, 0xef, 0xa4,
	0x88, 0xf2, 0x9a, 0x04, 0x07, 0xe1, 0xc2, 0x20, 0x75, 0x62, 0x19, 0x42, 0xb1, 0x60, 0x34, 0x14,
	0x84, 0xce, 0xd9, 0x5c, 0x24, 0x5b, 0xa3, 0x58, 0xce, 0xe5, 0x07, 0x80, 0x4b, 0x83, 0x8a, 0xd7,
	0x8d, 0x56, 0xa2, 0x62, 0xa1, 0xd6, 0x78, 0x18, 0x4a, 0xad, 0x1f, 0x05, 0x58, 0x00, 0xb5, 0x2e,
	0xf4, 0xae, 0x5e, 0xe3, 0x5f, 0xa5, 0xac, 0x9c, 0x07, 0x86, 0x27, 0x46, 0x18, 0x24, 0x13, 0x35,
	0xc8, 0x19, 0x49, 0xd4, 0xc0, 0xa7, 0x2a, 0xb3, 0xd1, 0x4c, 0x89, 0xe2, 0x9d, 0x19, 0xe6, 0xd0,
	0xdc, 0xf7, 0x9f, 0x78, 0xca, 0x5d, 0x51, 0xbf, 0x21, 0x1c, 0x8c, 0xc7, 0x46, 0x2e, 0xe5, 0x5e,
	0x86, 0xb2, 0x36, 0xd7, 0x55, 0x96, 0x95, 0x10, 0xe4, 0x5d, 0xa4, 0x2a, 0x05, 0x12, 0x94, 0xc8,
	0x73, 0x07, 0x6e, 0xec, 0x4a, 0xf6, 0x9e, 0x21, 0xa7, 0x17, 0x27, 0x43, 0xdc, 0x5c, 0x57, 0xa9,
	0xdf, 0x75, 0x9d, 0xfb, 0x52, 0xfd, 0xfb, 0x49, 0xe2, 0x33, 0x68, 0x2c, 0xae, 0x24, 0x2f, 0x85,
	0x2c, 0x9a, 0xcc, 0xf2, 0x59, 0xf2, 0x52, 0x28, 0x70, 0x1d, 0x85, 0xbd, 0x68, 0xf9, 0xe1, 0xe0,
	0x95, 0xb0, 0x0c, 0xe5, 0xc4, 0x30, 0x64, 0xcb, 0x4a, 0x08, 0x36, 0xe3, 0xe4, 0x21, 0xac, 0x90,
	0xa6, 0xa4, 0x83, 0xf1, 0xa0, 0x94, 0x4d, 0xcc, 0xcf, 0x9a, 0x15, 0xbe, 0xa2, 0x2a, 0x2f, 0xa3,
	0x17, 0x25, 0x51, 0xdf, 0x2f, 0xf3, 0x56, 0xc9, 0x8f, 0xb3, 0xc0, 0x70, 0xfc, 0xf7, 0xf3, 0x07,
	0x1b, 0xb6, 0x0d, 0x36, 0xb6, 0x26, 0xba, 0x5b, 0xb5, 0x7d, 0x2d, 0x89, 0x9e, 0xfd, 0x3a, 0x97,
	0x9d, 0x6b, 0xdf, 0xed, 0x91, 0x41, 0xe5, 0xd7, 0x99, 0xa8, 0xfc, 0x34, 0x5b, 0x44, 0x50, 0xbc,
	0x1a, 0x57, 0xa1, 0x19, 0x0f, 0x16, 0x27, 0x09, 0xc6, 0x64, 0x13, 0x50, 0xcd, 0x5c, 0x36, 0xdf,
	0xd7, 0x8d, 0xbe, 0xff, 0xa7, 0x0c, 0x94, 0x0d, 0xdd, 0xc5, 0x27, 0x29, 0x12, 0xc2, 0xa1, 0x99,
	0xa4, 0x2a, 0xe3, 0x29, 0x12, 0xc2, 0x3f, 0x14, 0xcb, 0x9e, 0xe6, 0xf0, 0xc2, 0x63, 0x5c, 0x04,
	0x06, 0x5e, 0xe4, 0xc0, 0x97, 0xcb, 0x4a, 0x0c, 0x24, 0xd0, 0x79, 0x69, 0xf8, 0x9b, 0x53, 0xa0,
	0x00, 0x2f, 0x6d, 0x14, 0xcb, 0x63, 0xc9, 0x94, 0x29, 0x41, 0x64, 0x35, 0xe2, 0x52, 0x34, 0xba,
	0x32, 0x54, 0x15, 0xf5, 0x07, 0xc2, 0x66, 0x29, 0x85, 0x51, 0x2a, 0x4f, 0x84, 0xce, 0xde, 0xb2,
	0xf2, 0xcd, 0xcf, 0x78, 0x8b, 0xcb, 0x4a, 0xfc, 0x7e, 0xa3, 0x52, 0xfc, 0x15, 0x1a, 0x17, 0xaa,
	0xdb, 0xfc, 0x5c, 0x31, 0x1b, 0x83, 0x3d, 0x7a, 0xe7, 0x48, 0xe6, 0x1a, 0x7e, 0x9c, 0xe7, 0x60,
	0x1c, 0x73, 0x03, 0xa6, 0x3f, 0xca, 0x36, 0xa6, 0x01, 0xa7, 0x6c, 0x2a, 0xf4, 0x4c, 0x36, 0x37,
	0x68, 0x1d, 0x17, 0x0c, 0x5e, 0x14, 0x4e, 0x53, 0x10, 0x4d, 0x0f, 0x6c, 0x0e, 0x84, 0x70, 0xda,
	0xaa, 0xb2, 0x72, 0xa5, 0xaa, 0x2a, 0x1a, 0x8c, 0xc5, 0xc0, 0xdf, 0x49, 0xa7, 0xf1, 0x99, 0xc0,
	0x19, 0xbb, 0xb5, 0x91, 0xc7, 0x69, 0xcd, 0x9f, 0x25, 0xfa, 0x8f, 0x79, 0xcb, 0xca, 0xbd, 0x3a,
	0x4f, 0xef, 0xd6, 0xae, 0x50, 0x7f, 0xda, 0xa0, 0x69, 0x12, 0xd9, 0x54, 0x0a, 0x51, 0xf2, 0x5a,
	0xdd, 0xc1, 0x0b, 0xa3, 0x2b, 0x82, 0x95, 0xf5, 0xd1, 0x50, 0x7c, 0x0b, 0xce, 0xfc, 0x10, 0x1b,
	0x79, 0x72, 0x91, 0xc2, 0xe7, 0x55, 0xe5, 0x19, 0x24, 0x4b, 0x8f, 0xe0, 0x23, 0xe0, 0xb4, 0x18,
	0x1a, 0x77, 0x52, 0xbb, 0xd8, 0xac, 0x35, 0x5e, 0xd0, 0x5f, 0xfb, 0xc0, 0x34, 0x7e, 0xe7, 0x41,
	0xb3, 0x5d, 0xc1, 0x30, 0xd2, 0xb2, 0x02, 0x39, 0x26, 0xcd, 0x34, 0x2d, 0x6a, 0x78, 0x1c, 0xe4,
	0x1a, 0x55, 0x59, 0x89, 0x7e, 0x25, 0xe5, 0x39, 0x41, 0x93, 0xd0, 0x95, 0x19, 0x8e, 0xe0, 0x74,
	0x23, 0x2d, 0x27, 0x3d, 0x68, 0x9c, 0x69, 0x20, 0x71, 0x05, 0x9a, 0x10, 0xe3, 0x0b, 0x18, 0x8e,
	0x61, 0xc5, 0x9d, 0xb5, 0x4e, 0x1e, 0xc3, 0x3e, 0x54, 0x56, 0xe2, 0xb7, 0xd6, 0x8a, 0xeb, 0xd0,
	0x24, 0x53, 0x11, 0xf7, 0xbc, 0x7f, 0x52, 0x55, 0xe6, 0x4a, 0xf6, 0x5a, 0x79, 0x82, 0x31, 0x73,
	0xa0, 0x30, 0xf6, 0x36, 0x24, 0xa7, 0x9b, 0x45, 0x63, 0xc9, 0x72, 0xba, 0x31, 0x55, 0xa5, 0x31,
	0x14, 0x68, 0x2b, 0xfd, 0x7c, 0x6d, 0xa1, 0xfe, 0x84, 0x47, 0x5e, 0xc9, 0xbc, 0x7c, 0xae, 0x0f,
	0x39, 0x8e, 0xdf, 0x66, 0xc1, 0xb5, 0xc6, 0x4b, 0x33, 0xd9, 0x41, 0xfc, 0x67, 0x82, 0xa3, 0x2c,
	0xf9, 0x73, 0x41, 0x55, 0xaa, 0x2c, 0xc2, 0xe4, 0xb5, 0xbc, 0x30, 0x39, 0x9f, 0x63, 0xe0, 0x08,
	0x56, 0xe4, 0x7b, 0xa9, 0x51, 0x71, 0x28, 0x5c, 0x1d, 0xc1, 0x53, 0xcc, 0xf7, 0xe2, 0x63, 0x4b,
	0xfe, 0xd9, 0x5c, 0x57, 0x99, 0xef, 0x0d, 0x47, 0xaa, 0x82, 0xd5, 0xfa, 0x44, 0xf3, 0xbd, 0xf1,
	0x40, 0x6c, 0xd3, 0xf7, 0x45, 0xaf, 0x44, 0x97, 0xea, 0xa7, 0x1b, 0xb4, 0x30, 0x93, 0x6c, 0x43,
	0xf8, 0xb3, 0x70, 0x5f, 0x7f, 0x0e, 0x1d, 0xc2, 0x3f, 0x9a, 0x0d, 0xe1, 0xcf, 0xd4, 0x87, 0xb8,
	0x77, 0x72, 0xed, 0xd7, 0xd1, 0x68, 0x9c, 0xf1, 0x04, 0x4b, 0x8d, 0x33, 0x30, 0xb9, 0x7c, 0x41,
	0x55, 0x16, 0x4a, 0x46, 0xa9, 0xec, 0x03, 0x7f, 0x70, 0xe6, 0xc5, 0xb2, 0x7c, 0xd5, 0x5a, 0x2f,
	0xfc, 0x48, 0x36, 0x5d, 0xb9, 0xd5, 0xd7, 0x82, 0x5d, 0x05, 0x32, 0x65, 0x8f, 0xf7, 0x17, 0x7e,
	0xa3, 0x97, 0xf8, 0x1a, 0x1a, 0x15, 0x0c, 0x83, 0xdb, 0x77, 0x26, 0x1e, 0x16, 0xfb, 0xea, 0xd1,
	0x32, 0xd9, 0xc7, 0x47, 0x61, 0x4f, 0x3f, 0x28, 0xed, 0x23, 0x3e, 0x8b, 0xb2, 0x6a, 0x42, 0xb5,
	0xa1, 0x38, 0x11, 0xe7, 0xcc, 0xc6, 0x6f, 0x1e, 0x5c, 0x22, 0x8f, 0x4d, 0x76, 0xb5, 0x0d, 0x9e,
	0xfe, 0x86, 0xfa, 0xa3, 0x66, 0x4a, 0x7a, 0x47, 0xa8, 0x13, 0xf3, 0x51, 0x66, 0x9d, 0x4e, 0x3d,
	0x40, 0x90, 0x93, 0xab, 0xdf, 0xbe, 0xb8, 0x40, 0xce, 0x1e, 0x3c, 0xfd, 0x4d, 0xea, 0xd4, 0x56,
	0xda, 0x1c, 0x17, 0x8a, 0xc5, 0x28, 0x3b, 0x16, 0xaa, 0xad, 0xab, 0xa1, 0xce, 0xcd, 0xf8, 0xf2,
	0x20, 0x45, 0xf2, 0x2c, 0xad, 0xed, 0x73, 0xed, 0xf2, 0xa1, 0xd4, 0x99, 0x1e, 0x6f, 0x84, 0x47,
	0x2d, 0x2f, 0xa5, 0xbd, 0xd0, 0xae, 0xf0, 0x97, 0xaa, 0xf2, 0x12, 0x2a, 0x94, 0x5c, 0x71, 0x90,
	0xb2, 0x22, 0xbc, 0x7c, 0x1d, 0x94, 0x49, 0x5a, 0xdb, 0xb6, 0xe4, 0xa1, 0x4b, 0xbe, 0xc3, 0x1e,
	0xf4, 0x88, 0x43, 0xe7, 0x91, 0x41, 0x42, 0xdf, 0x34, 0x19, 0xe8, 0x16, 0x58, 0x49, 0xa8, 0xeb,
	0xba, 0x4a, 0x02, 0xf1, 0x00, 0x70, 0x3c, 0x40, 0x52, 0xc9, 0xe8, 0x90, 0x2e, 0x91, 0x18, 0x7e,
	0x77, 0x09, 0x20, 0x16, 0x76, 0x1d, 0x40, 0x7c, 0x06, 0x65, 0xe1, 0x7b, 0x8c, 0x40, 0x07, 0xe4,
	0x59, 0xb8, 0xc4, 0xac, 0xcf, 0x20, 0xd1, 0xe5, 0xa0, 0x4a, 0x7c, 0x03, 0x8d, 0x82, 0xd9, 0xeb,
	0x2f, 0x6a, 0x9d, 0xf2, 0xfb, 0x6c, 0x52, 0x03, 0xee, 0x8b, 0x25, 0xc1, 0x78, 0x20, 0x54, 0x03,
	0x90, 0xa7, 0xfd, 0x2c, 0xd3, 0xa5, 0xc5, 0xbe, 0xbf, 0xc8, 0x40, 0xa2, 0xbd, 0xef, 0xbd, 0x51,
	0x68, 0x15, 0x3a, 0x1c, 0x7c, 0x3c, 0x29, 0xfe, 0xe0, 0x8f, 0x86, 0x01, 0xbc, 0x96, 0x93, 0xff,
	0xb2, 0x45, 0xa3, 0x05, 0xd2, 0x51, 0xa2, 0xd1, 0x22, 0x69, 0x61, 0xbc, 0xb6, 0xd4, 0xab, 0x4c,
	0xb7, 0xf5, 0x8c, 0x55, 0xb7, 0x05, 0xc0, 0xa0, 0x38, 0x35, 0xf6, 0xce, 0xb5, 0x5a, 0x03, 0x0d,
	0x8d, 0xb7, 0xab, 0xd5, 0x6a, 0xdb, 0x9f, 0x3a, 0x78, 0xd2, 0xae, 0xd5, 0x12, 0xd7, 0x23, 0x4c,
	0x2e, 0xf1, 0x51, 0x76, 0x0b, 0x5f, 0x9b, 0xaf, 0x2a, 0xf3, 0x25, 0xdc, 0x8c, 0xa6, 0x64, 0x80,
	0xc4, 0x08, 0xf6, 0xa4, 0xc9, 0xfa, 0xf2, 0x71, 0x43, 0xdf, 0x21, 0x01, 0x4d, 0x5e, 0x1d, 0xa9,
	0x0a, 0xb2, 0x7d, 0x05, 0x03, 0x0f, 0xf1, 0x45, 0x94, 0xb9, 0x31, 0x10, 0xaa, 0xc9, 0x15, 0x30,
	0x0a, 0x3d, 0xe9, 0x94, 0x71, 0xdb, 0xd2, 0xa5, 0x2c, 0xbc, 0x31, 0xe2, 0xc7, 0x9d, 0x44, 0x05,
	0x8d, 0x8a, 0xd5, 0x57, 0x56, 0x06, 0x63, 0x14, 0x05, 0x87, 0xdd, 0x9f, 0xf6, 0xf3, 0xad, 0x41,
	0xd3, 0x5d, 0xda, 0x88, 0x79, 0x20, 0xe4, 0xc7, 0x97, 0x39, 0xe4, 0x55, 0x60, 0xbf, 0xc5, 0x5c,
	0x0b, 0x7d, 0xf0, 0x1b, 0xba, 0x82, 0x2c, 0x34, 0xb1, 0x24, 0x1a, 0x08, 0x85, 0xf9, 0xcc, 0x9a,
	0x1f, 0xa2, 0x1c, 0x92, 0x34, 0x3b, 0x86, 0x57, 0x3a, 0xba, 0xe8, 0x1d, 0x55, 0xf9, 0x8d, 0xc4,
	0x0a, 0xe5, 0x72, 0x3e, 0xcd, 0x76, 0x59, 0xb9, 0xa1, 0x37, 0x52, 0x89, 0x07, 0x30, 0x70, 0x09,
	0xe4, 0xf1, 0xd5, 0xd3, 0x32, 0xd8, 0xd0, 0x9c, 0xe8, 0x6e, 0xb8, 0xd5, 0xd7, 0x92, 0xe8, 0x3b,
	0xaa, 0x35, 0x36, 0xd9, 0xdb, 0xf8, 0xd9, 0xd8, 0xe2, 0x7a, 0xbb, 0xe5, 0xec, 0x12, 0x55, 0x59,
	0xc0, 0x1b, 0x5f, 0xcd, 0xa9, 0x8b, 0x54, 0x0d, 0xdc, 0xd8, 0x9a, 0x3a, 0xdf, 0x6b, 0x49, 0x96,
	0xcc, 0x9a, 0x60, 0x16, 0xdb, 0x2b, 0xf0, 0x96, 0x59, 0x51, 0x94, 0x85, 0xd3, 0x9e, 0xe7, 0x66,
	0xe0, 0x15, 0xfd, 0x46, 0x55, 0x7e, 0x2d, 0x41, 0x09, 0x5b, 0x0e, 0x37, 0x21, 0xd3, 0x62, 0x4c,
	0xcb, 0x1c, 0xd6, 0x72, 0x60, 0x60, 0x71, 0x0a, 0xca, 0xda, 0x88, 0x5d, 0xa4, 0xf4, 0x13, 0x94,
	0xe3, 0x87, 0x1f, 0xe2, 0x02, 0x24, 0x62, 0xbf, 0xdc, 0xf2, 0x60, 0x34, 0x14, 0xd1, 0xb9, 0xe8,
	0x48, 0xb8, 0x2a, 0x06, 0x77, 0x9e, 0xdf, 0xa1, 0x46, 0x5c, 0x84, 0x26, 0x43, 0x2c, 0x08, 0xa5,
	0xa6, 0xc6, 0x08, 0x07, 0x81, 0x0f, 0x4b, 0x8e, 0xdf, 0xa9, 0x4a, 0xdf, 0xef, 0x78, 0xa8, 0x36,
	0x18, 0xa9, 0x87, 0x17, 0xd2, 0x38, 0x3f, 0xfd, 0x29, 0xce, 0x43, 0x13, 0xc0, 0xc3, 0x11, 0x07,
	0xdd, 0xd0, 0xe9, 0x29, 0x44, 0xd5, 0xf0, 0x5b, 0x8b, 0x75, 0x7c, 0x8a, 0x05, 0x6b, 0x82, 0x95,
	0xf1, 0x48, 0x14, 0x52, 0x6c, 0xfb, 0xd9, 0x6f, 0xd1, 0x8b, 0xc6, 0xd4, 0xe9, 0xf3, 0x23, 0xd5,
	0x38, 0xf7, 0x96, 0x9f, 0x2f, 0xc2, 0xdf, 0x81, 0x24, 0x7a, 0xa5, 0x9b, 0x43, 0x95, 0x98, 0x21,
	0x1c, 0x43, 0xbe, 0x63, 0x2e, 0x16, 0x5f, 0x45, 0xb3, 0x63, 0x9b, 0x42, 0x75, 0xaf, 0x07, 0x42,
	0xf1, 0x65, 0x11, 0xe2, 0x2d, 0xb9, 0x16, 0x66, 0x4b, 0x41, 0x83, 0xe3, 0x2c, 0xf8, 0x87, 0x6a,
	0x26, 0x4e, 0x43, 0xd9, 0x55, 0xd1, 0x2d, 0xfe, 0xfa, 0x30, 0x8e, 0x78, 0x90, 0xe3, 0x27, 0xbf,
	0xf4, 0xb7, 0xdb, 0x24, 0x0e, 0xc7, 0x47, 0x62, 0xf2, 0xd2, 0xc7, 0x86, 0x41, 0x29, 0x86, 0xba,
	0x59, 0x93, 0x02, 0x1a, 0xad, 0x77, 0x5b, 0x19, 0xd8, 0x10, 0xac, 0x11, 0x97, 0x5a, 0xc9, 0x05,
	0x49, 0x9e, 0x4c, 0x0b, 0xe5, 0xb1, 0x3c, 0x5a, 0xd3, 0xf3, 0x64, 0x90, 0x94, 0xdf, 0xa2, 0xec,
	0x1a, 0x7d, 0x20, 0x4a, 0xcb, 0x1e, 0x77, 0x9a, 0x21, 0xfe, 0xd4, 0x02, 0xfc, 0x7f, 0x92, 0xa6,
	0x06, 0x44, 0xc2, 0xd0, 0x93, 0x26, 0xbc, 0x4f, 0x9e, 0xda, 0x95, 0xea, 0xfc, 0x96, 0x72, 0x58,
	0x50, 0x97, 0xf7, 0x02, 0x1a, 0xc3, 0xf5, 0x73, 0x48, 0x18, 0x33, 0x85, 0x4f, 0x18, 0x33, 0x9a,
	0x4b, 0x0d, 0xe3, 0xbb, 0x2e, 0xa0, 0xe9, 0x60, 0xab, 0xce, 0xe6, 0xc0, 0xde, 0x06, 0x65, 0x94,
	0x0a, 0x00, 0x05, 0x7f, 0xc4, 0x75, 0xd6, 0x44, 0xe2, 0x0e, 0x04, 0x82, 0xc2, 0xc2, 0x74, 0xb8,
	0x2b, 0xec, 0x84, 0xea, 0x59, 0x55, 0x79, 0x8a, 0x27, 0x54, 0xb3, 0x88, 0x83, 0xca, 0xb0, 0xa9,
	0x94, 0xef, 0x9f, 0x7b, 0x50, 0xae, 0x7d, 0xee, 0x3f, 0x51, 0x94, 0x2d, 0x2c, 0x56, 0x95, 0x57,
	0xd0, 0x52, 0xc9, 0x15, 0x22, 0xf2, 0x24, 0x1e, 0xc0, 0x18, 0x73, 0xec, 0xaf, 0xe9, 0x8f, 0x09,
	0xde, 0xaf, 0x0d, 0x84, 0xc2, 0xf1, 0xbb, 0xc6, 0xfb, 0xd5, 0x3a, 0x57, 0x15, 0x0a, 0x33, 0x36,
	0x72, 0xaa, 0x9d, 0xe7, 0x08, 0x85, 0xe3, 0x04, 0xcf, 0xa1, 0x25, 0xc3, 0xf3, 0xcb, 0xa7, 0x53,
	0xdb, 0xae, 0x53, 0x3c, 0x87, 0x3a, 0x0b, 0xb2, 0xe2, 0xce, 0xb7, 0x85, 0xac, 0xf0, 0xb9, 0x1f,
	0x06, 0x59, 0xff, 0xc2, 0x84, 0xac, 0x74, 0xee, 0x3f, 0x55, 0x64, 0x25, 0xc6, 0x98, 0xae, 0x10,
	0x91, 0x45, 0x1e, 0xc0, 0xb0, 0xfd, 0x76, 0x6c, 0x6d, 0x15, 0xe0, 0x61, 0x48, 0x03, 0x82, 0x54,
	0x54, 0xbe, 0x1b, 0xac, 0x0d, 0x50, 0x8c, 0x58, 0x60, 0x95, 0x31, 0x62, 0xe3, 0x21, 0x26, 0x63,
	0xcc, 0x4e, 0xf4, 0xec, 0xc7, 0x5a, 0x44, 0x52, 0x40, 0x15, 0x08, 0xee, 0x23, 0xca, 0xb3, 0x40,
	0x32, 0x05, 0x4f, 0x88, 0xe4, 0x85, 0xd3, 0x86, 0x75, 0x09, 0xd8, 0x3e, 0x7e, 0x29, 0xa0, 0xdc,
	0xe5, 0xc1, 0x7b, 0x33, 0x1d, 0xf1, 0x29, 0x94, 0x19, 0x36, 0x84, 0x4d, 0x00, 0xcf, 0x30, 0x1c,
	0x3a, 0xfc, 0x7d, 0xea, 0x36, 0xa0, 0x97, 0x15, 0x3e, 0xad, 0x2a, 0x8b, 0xd0, 0x02, 0xc9, 0xf5,
	0xeb, 0x54, 0x22, 0xc7, 0x4f, 0xdd, 0xf7, 0x77, 0x32, 0x50, 0xde, 0x6b, 0xf5, 0xc1, 0xe8, 0x96,
	0xf2, 0x60, 0xb4, 0xb6, 0x68, 0x8b, 0x82, 0x79, 0x8c, 0xb2, 0x12, 0x7f, 0xf0, 0xf7, 0x98, 0xa9,
	0x59, 0x82, 0x10, 0xf1, 0x5c, 0x7c, 0x27, 0x54, 0xc5, 0x3b, 0xfe, 0x70, 0xc5, 0x72, 0x0e, 0x0d,
	0x32, 0x64, 0xb8, 0x39, 0x56, 0xe9, 0x3d, 0x09, 0x8a, 0xe8, 0x3d, 0x79, 0x11, 0x8c, 0x51, 0x2c,
	0xe7, 0xd8, 0x5d, 0x02, 0xaa, 0xc4, 0xc5, 0x64, 0xd1, 0x9c, 0xe4, 0x1e, 0x16, 0x2d, 0x6a, 0xfb,
	0xfb, 0xf5, 0x15, 0x7f, 0xd6, 0x33, 0x78, 0xe4, 0x6b, 0x7e, 0xe9, 0xe2, 0x52, 0x34, 0x26, 0x1e,
	0xac, 0xad, 0xab, 0x09, 0xc4, 0x83, 0xfa, 0xd7, 0x32, 0x8d, 0x9e, 0x7c, 0xb9, 0x3c, 0x06, 0x72,
	0x02, 0x0d, 0x7e, 0xbc, 0x53, 0x7f, 0xfa, 0xd1, 0x9a, 0xb2, 0x2a, 0xf1, 0x45, 0x84, 0x88, 0xb0,
	0x57, 0xef, 0xce, 0x25, 0xb9, 0xe5, 0x8a, 0xb1, 0x70, 0x78, 0xe0, 0xeb, 0x73, 0x5a, 0xdb, 0x35,
	0x5e, 0x38, 0xac, 0x77, 0x36, 0xd2, 0xd5, 0x67, 0xd3, 0x47, 0xeb, 0x54, 0x2e, 0x5d, 0xbd, 0xf1,
	0x8c, 0x03, 0x49, 0xb6, 0xc0, 0x65, 0xa9, 0x57, 0x54, 0x65, 0x29, 0x7a, 0x49, 0x4a, 0xb3, 0x07,
	0xf2, 0xac, 0xe4, 0xf1, 0xed, 0x83, 0xc7, 0xf6, 0x91, 0x14, 0xe8, 0xed, 0x3b, 0x12, 0xdd, 0xbb,
	0x13, 0xdd, 0x7b, 0x92, 0x87, 0x89, 0x21, 0x99, 0xef, 0xa0, 0xc7, 0x6d, 0x0b, 0x31, 0xce, 0xbd,
	0x80, 0x72, 0x02, 0xa4, 0x88, 0x6c, 0x20, 0x06, 0x0c, 0x2b, 0x94, 0xc7, 0xc3, 0xf8, 0xf4, 0xb7,
	0x9f, 0xd5, 0x88, 0xef, 0xa2, 0x9c, 0xba, 0x60, 0xb4, 0xf6, 0x9d, 0xca, 0xf8, 0x07, 0x24, 0xcd,
	0x9c, 0x64, 0x3d, 0xf7, 0xee, 0xf3, 0xa6, 0x31, 0x9a, 0xc8, 0x00, 0xb2, 0xc8, 0x2f, 0x83, 0xca,
	0x04, 0xf4, 0xda, 0xe2, 0xf8, 0x07, 0x85, 0xaf, 0xa9, 0xca, 0x6a, 0xb4, 0x52, 0x4a, 0xb3, 0x0e,
	0xaa, 0x6a, 0x4a, 0x1d, 0xbc, 0x90, 0x6c, 0xba, 0xc6, 0x8f, 0x75, 0x53, 0x60, 0x33, 0xbe, 0x29,
	0xb0, 0xef, 0xf9, 0xf6, 0x0b, 0x28, 0x4b, 0x1f, 0x29, 0x26, 0x3e, 0x87, 0xb2, 0xf4, 0x52, 0x7a,
	0x2d, 0xd8, 0xec, 0xca, 0x71, 0x2b, 0xf8, 0x3f, 0x66, 0x9e, 0xfc, 0xd0, 0x3c, 0xaf, 0x1c, 0x21,
	0xa3, 0xd0, 0x81, 0xa3, 0xca, 0x37, 0xa7, 0xe0, 0x9b, 0xb6, 0xa0, 0x3a, 0x12, 0xa9, 0xae, 0x09,
	0x2e, 0xa8, 0x8b, 0x46, 0xe2, 0x91, 0x0d, 0xf5, 0x1b, 0x17, 0xac, 0xd7, 0x6b, 0x79, 0x4e, 0x6b,
	0xbf, 0x80, 0x66, 0x38, 0x2e, 0xf1, 0x0e, 0xef, 0x80, 0x22, 0x42, 0x94, 0x61, 0x02, 0x53, 0x1d,
	0x17, 0xe6, 0x40, 0x86, 0x09, 0x69, 0x07, 0x36, 0x57, 0xf5, 0x20, 0x54, 0x1c, 0xa9, 0xad, 0x05,
	0x0f, 0xd1, 0x87, 0xfd, 0x1a, 0x2a, 0x31, 0x5d, 0x43, 0xd3, 0x6d, 0x20, 0xaf, 0x88, 0x47, 0xeb,
	0x2b, 0xe3, 0x43, 0x5d, 0x3d, 0xd4, 0x23, 0xd0, 0x58, 0xb7, 0x3c, 0x76, 0xb0, 0xa1, 0x3d, 0x75,
	0x90, 0xa8, 0x18, 0x7c, 0x9f, 0x7a, 0xd0, 0x78, 0xa8, 0x24, 0x37, 0xc1, 0x43, 0x0f, 0x98, 0xe5,
	0x26, 0xc0, 0xe4, 0xd9, 0x00, 0xa3, 0xaf, 0x03, 0xe3, 0xe3, 0x50, 0xb0, 0x99, 0xaf, 0x2a, 0x4f,
	0xa0, 0xb9, 0x92, 0x65, 0xf9, 0xb2, 0x08, 0xf0, 0xe1, 0x15, 0x31, 0xbe, 0x95, 0x08, 0x6b, 0xda,
	0x8b, 0x56, 0x10, 0xcb, 0x76, 0x7c, 0x50, 0x0b, 0x9f, 0x53, 0x95, 0xa7, 0xd1, 0x62, 0xc9, 0xa1,
	0x4a, 0x9e, 0x01, 0x37, 0x50, 0xa2, 0x67, 0xbf, 0xd6, 0xd2, 0x63, 0xf5, 0x57, 0xbc, 0x22, 0xa0,
	0xa9, 0x58, 0x57, 0x56, 0xbc, 0x36, 0x52, 0x17, 0xa9, 0x89, 0x54, 0x6f, 0xa1, 0x24, 0x6c, 0xbd,
	0xdd, 0xbf, 0x6c, 0x89, 0x4e, 0x62, 0x39, 0x66, 0x2c, 0xc7, 0x1c, 0xb9, 0x22, 0x6b, 0x38, 0x91,
	0x2b, 0x0a, 0x8b, 0x54, 0xe5, 0x97, 0xe8, 0x65, 0xc9, 0xf9, 0xab, 0x34, 0x77, 0x53, 0xa2, 0xbb,
	0x1d, 0xe7, 0x83, 0xee, 0x4d, 0x76, 0xf4, 0x40, 0xd4, 0x93, 0xe4, 0x9e, 0x03, 0xc9, 0xe6, 0xfd,
	0x30, 0x6b, 0xf9, 0xf4, 0x75, 0x01, 0x8d, 0x27, 0x0e, 0x24, 0xab, 0xe0, 0xdc, 0x89, 0xff, 0x44,
	0x40, 0xe3, 0x4c, 0x79, 0xcd, 0x44, 0xaf, 0x73, 0x1a, 0x70, 0xc3, 0xcd, 0x27, 0x6f, 0xce, 0x10,
	0x2d, 0x62, 0x75, 0xbe, 0xcd, 0xaa, 0xb2, 0x5a, 0x1c, 0x07, 0x16, 0xeb, 0xa4, 0x3c, 0xef, 0x65,
	0xd3, 0x4f, 0x16, 0x69, 0x0d, 0x84, 0xa3, 0x5a, 0x63, 0x9f, 0x76, 0xf1, 0xfa, 0xc0, 0xd6, 0x83,
	0x83, 0xdb, 0xce, 0x11, 0x0f, 0x16, 0xb5, 0x25, 0xb5, 0xe7, 0xcb, 0xd4, 0x17, 0x7b, 0xe0, 0xe7,
	0xb6, 0x7f, 0x91, 0x38, 0xe0, 0x99, 0xed, 0xcb, 0x5b, 0x68, 0xfe, 0xf6, 0xc2, 0xcd, 0x8b, 0x69,
	0x49, 0xa1, 0x20, 0x89, 0x0d, 0x1e, 0x34, 0x0d, 0x27, 0x19, 0x36, 0x4d, 0x69, 0x6d, 0x20, 0xb6,
	0x49, 0x7c, 0xdc, 0xee, 0x9a, 0x69, 0x6d, 0xa7, 0x2f, 0xee, 0x89, 0xe1, 0x34, 0x8b, 0xd5, 0xf9,
	0x0e, 0x0b, 0xaa, 0xf2, 0x1b, 0xf1, 0x11, 0x92, 0x36, 0x99, 0x5f, 0x19, 0x08, 0x22, 0xf3, 0x7e,
	0x39, 0xa8, 0x36, 0x69, 0x5d, 0xd7, 0xa1, 0x8a, 0x2c, 0x09, 0x82, 0x37, 0xe1, 0xc0, 0x35, 0xfa,
	0xfa, 0x77, 0xb5, 0x26, 0x0f, 0x5f, 0x4a, 0x74, 0xef, 0xd1, 0xda, 0xf6, 0xf3, 0xcd, 0x60, 0x00,
	0xbc, 0xe0, 0xc5, 0xbe, 0x7c, 0xf7, 0x05, 0x2f, 0xfc, 0x90, 0xe1, 0xc7, 0x47, 0x0b, 0xa3, 0xfa,
	0x34, 0x75, 0x10, 0xfc, 0x63, 0x01, 0x4d, 0x29, 0x7e, 0x37, 0x58, 0xb9, 0x09, 0xa3, 0xf3, 0x8a,
	0xfa, 0x0d, 0xc1, 0xe2, 0x48, 0x78, 0x63, 0xa8, 0x5a, 0xb4, 0xe9, 0x43, 0x8d, 0x3a, 0x7d, 0xe1,
	0xb3, 0xd2, 0x55, 0xc7, 0xea, 0x7c, 0x31, 0x55, 0x29, 0x12, 0x1f, 0xd9, 0xc4, 0x0a, 0x41, 0x95,
	0x9f, 0x6c, 0x38, 0x0f, 0x71, 0xdd, 0xf2, 0x1e, 0x37, 0xaa, 0x06, 0x6e, 0x9c, 0x48, 0xee, 0x25,
	0x99, 0x26, 0x2c, 0xcd, 0xf0, 0xaa, 0xe6, 0xe5, 0x3d, 0xe6, 0xb8, 0xaa, 0x48, 0x7d, 0xd5, 0x42,
	0x63, 0x14, 0x7d, 0x31, 0xff, 0x51, 0x40, 0xe3, 0xca, 0x6a, 0xeb, 0x22, 0xd1, 0xb8, 0x2b, 0x7a,
	0x9a, 0xaa, 0x1d, 0xd1, 0xd3, 0xd2, 0x22, 0x56, 0xe7, 0x3b, 0x20, 0xa8, 0x4a, 0x95, 0xf8, 0x88,
	0xd6, 0xd5, 0xa7, 0x35, 0x9e, 0x85, 0x6b, 0xda, 0xbc, 0x79, 0xcb, 0xf9, 0x2a, 0x58, 0xc8, 0x3c,
	0x30, 0xa8, 0xd5, 0xce, 0xb4, 0x33, 0x87, 0x3f, 0x68, 0xa4, 0xed, 0x3e, 0x39, 0xb0, 0xbd, 0xbf,
	0xd0, 0x4b, 0x8f, 0x35, 0xb7, 0x84, 0xf9, 0x78, 0xb9, 0x4f, 0xf8, 0xe6, 0xa4, 0xd9, 0xc4, 0x10,
	0x9e, 0x9d, 0xbe, 0xd8, 0x9d, 0x1e, 0x34, 0x0e, 0x5e, 0x18, 0xae, 0x8b, 0x35, 0x55, 0x3b, 0x2e,
	0xd6, 0xd2, 0x22, 0x56, 0xe7, 0xeb, 0x12, 0x54, 0xe5, 0x43, 0x71, 0x1c, 0xbc, 0x50, 0xe8, 0x61,
	0x7c, 0xcf, 0xf4, 0x93, 0xc9, 0xcb, 0x07, 0xba, 0xce, 0x26, 0xf7, 0x9e, 0xd5, 0xda, 0x3e, 0x4d,
	0xf4, 0x36, 0x42, 0x22, 0x61, 0x12, 0x77, 0xc0, 0xc8, 0x31, 0xdc, 0x9a, 0xe8, 0x6b, 0x87, 0xe0,
	0x87, 0x89, 0xde, 0xde, 0x44, 0xff, 0x21, 0x72, 0x8a, 0x69, 0xdc, 0x5d, 0x88, 0x52, 0xa7, 0xb5,
	0x1c, 0xd6, 0x76, 0x5f, 0x48, 0xf4, 0x77, 0x7c, 0xd7, 0xb0, 0x0d, 0xc3, 0xe0, 0xa9, 0xbc, 0x27,
	0x86, 0x87, 0xc8, 0x3a, 0x20, 0x06, 0x05, 0x34, 0xc9, 0x96, 0x5c, 0x51, 0x9c, 0x6d, 0x5d, 0x2a,
	0x6d, 0x42, 0xa8, 0x60, 0x9e, 0xd7, 0xbd, 0x01, 0x30, 0x2d, 0xbe, 0x7d, 0x82, 0xaa, 0xbc, 0x2e,
	0x8a, 0x89, 0xee, 0xdd, 0xc9, 0x13, 0x57, 0x49, 0xa0, 0x47, 0xfc, 0x64, 0xcb, 0x53, 0xc0, 0x5e,
	0xab, 0xac, 0xfc, 0x56, 0x5f, 0x4b, 0xaa, 0xf7, 0x18, 0xd9, 0xdf, 0x4f, 0x4e, 0x68, 0xbb, 0x4f,
	0xb1, 0x80, 0xa7, 0x6c, 0xe1, 0xa9, 0x8f, 0xbb, 0xb5, 0xc6, 0x2b, 0x6c, 0xa5, 0xc9, 0x6f, 0xb6,
	0xa6, 0x2e, 0x00, 0x66, 0x2f, 0xf2, 0x3d, 0x35, 0xcc, 0xf3, 0xaa, 0xbf, 0xdd, 0xf5, 0xb5, 0xfe,
	0x53, 0x01, 0x4d, 0x73, 0x4e, 0x1a, 0x29, 0xda, 0xd4, 0x58, 0x5c, 0x3b, 0xba, 0xe6, 0xc7, 0xd2,
	0xb6, 0x21, 0xcb, 0x7e, 0x4f, 0x55, 0x9e, 0xd1, 0x57, 0xbd, 0xc7, 0xba, 0xea, 0x59, 0x74, 0xd5,
	0x5a, 0xc7, 0x25, 0xed, 0x78, 0x03, 0x04, 0xba, 0x80, 0x16, 0xfa, 0xfc, 0xf0, 0x92, 0x0a, 0xa4,
	0xdb, 0x59, 0x92, 0x78, 0xc8, 0x03, 0x37, 0x2d, 0x9e, 0x41, 0x19, 0xf5, 0x57, 0x14, 0xe7, 0x3b,
	0x69, 0x12, 0xcd, 0x6d, 0xe8, 0x92, 0xa4, 0xe1, 0x34, 0x25, 0x2b, 0x3b, 0x2f, 0xa8, 0xca, 0xef,
	0x45, 0x1f, 0xf0, 0xdb, 0x14, 0x99, 0xbb, 0xf7, 0x24, 0x9b, 0x1b, 0x92, 0x1d, 0xcd, 0xbc, 0xb0,
	0x24, 0x6f, 0x05, 0xb4, 0x21, 0x14, 0xd6, 0xa9, 0x09, 0x73, 0x70, 0x49, 0x9e, 0xdc, 0x97, 0x3c,
	0x7e, 0x3a, 0xd1, 0x7b, 0x15, 0xf4, 0x46, 0xe0, 0x16, 0x03, 0x21, 0x9d, 0x21, 0x02, 0x28, 0xc0,
	0x45, 0xbc, 0x2d, 0xb8, 0x7c, 0xe6, 0x41, 0xd8, 0xfb, 0x63, 0x55, 0x40, 0x2f, 0xe6, 0x20, 0xf3,
	0x94, 0xd3, 0x72, 0xad, 0xad, 0x28, 0x6c, 0xf2, 0x87, 0xd7, 0x98, 0x40, 0xe7, 0x1b, 0x41, 0x55,
	0x3e, 0x12, 0xe7, 0x39, 0x43, 0xa7, 0x16, 0xf7, 0x32, 0xc1, 0xe8, 0x35, 0x47, 0x18, 0xd9, 0x1b,
	0xde, 0x26, 0xa4, 0x16, 0x8a, 0x05, 0xc3, 0x84, 0x14, 0x7c, 0x4a, 0xfc, 0x42, 0x40, 0xe3, 0x00,
	0x8f, 0x5d, 0x09, 0xa1, 0xa9, 0xda, 0x91, 0x10, 0x5a, 0x5a, 0xc4, 0xea, 0x7c, 0xeb, 0x54, 0x65,
	0xae, 0xce, 0x94, 0x9c, 0x1a, 0x3c, 0x76, 0x86, 0xd2, 0xc1, 0xc9, 0x24, 0x68, 0x59, 0xf3, 0x75,
	0xed, 0x62, 0x3b, 0x29, 0x84, 0x3b, 0x4a, 0x1a, 0x26, 0xc1, 0x12, 0xaf, 0x08, 0x08, 0x61, 0x97,
	0x49, 0x98, 0xaa, 0xed, 0x9a, 0x35, 0xea, 0x1c, 0xaf, 0x59, 0xbe, 0x3a, 0x56, 0xe7, 0xdb, 0xa8,
	0x2a, 0xcf, 0x8a, 0xe3, 0x4c, 0x5b, 0x96, 0x37, 0x97, 0x37, 0x29, 0xa5, 0x5e, 0xc5, 0x25, 0xcc,
	0x7b, 0x18, 0x88, 0x33, 0xcc, 0x5a, 0x1c, 0xee, 0xac, 0x3f, 0xf5, 0xa0, 0x31, 0x60, 0xee, 0x05,
	0xd3, 0x9e, 0xe5, 0x84, 0x59, 0xdc, 0xbc, 0x67, 0xa7, 0xad, 0x8f, 0xd5, 0xf9, 0x6e, 0x0a, 0xaa,
	0xf2, 0xa5, 0x20, 0x4e, 0x36, 0x4d, 0x9d, 0x20, 0xd6, 0x41, 0x21, 0x79, 0xea, 0x7a, 0xb2, 0xf5,
	0x22, 0x59, 0x07, 0x46, 0x19, 0x30, 0xbe, 0x35, 0xb5, 0xe3, 0xf1, 0x6a, 0xf0, 0xf4, 0x75, 0x68,
	0xa7, 0x35, 0xf4, 0xd9, 0xb1, 0x2b, 0xd9, 0x79, 0x06, 0x6a, 0xbf, 0x6b, 0xd8, 0x46, 0xba, 0x60,
	0x5c, 0x85, 0xc2, 0x41, 0xaa, 0xf2, 0x85, 0x2e, 0x10, 0xae, 0x95, 0x7c, 0x1b, 0x37, 0xe3, 0x58,
	0xca, 0x47, 0xc5, 0x34, 0x2c, 0xa5, 0xf8, 0x97, 0x02, 0x9a, 0x84, 0x17, 0x8a, 0x5f, 0x18, 0x14,
	0x56, 0x73, 0x1d, 0x61, 0xc1, 0x37, 0xd1, 0x21, 0xf6, 0xf8, 0x30, 0x5a, 0x01, 0xab, 0xfc, 0x2b,
	0xf1, 0x11, 0xea, 0x45, 0xf7, 0xa5, 0xd6, 0x78, 0xd9, 0x0c, 0xbb, 0x02, 0xbe, 0x8a, 0xf2, 0x54,
	0xbb, 0xf9, 0x9f, 0x20, 0xd0, 0x05, 0x39, 0x03, 0x5e, 0xd3, 0x63, 0xa2, 0x13, 0xc3, 0x11, 0x7b,
	0x37, 0x10, 0x0d, 0x56, 0x91, 0xf2, 0x98, 0x78, 0x41, 0x40, 0xa3, 0x96, 0x07, 0x31, 0x61, 0x15,
	0x9d, 0x90, 0x92, 0xd3, 0x1a, 0xdb, 0x37, 0x9f, 0xd5, 0x13, 0x4a, 0xf3, 0x1b, 0x55, 0x59, 0x24,
	0x22, 0x98, 0xa9, 0x5e, 0x91, 0xe7, 0xe3, 0x51, 0xb6, 0x0c, 0x14, 0xc0, 0x2c, 0x78, 0x38, 0x87,
	0xb0, 0xce, 0x53, 0xd5, 0x29, 0xe6, 0xc2, 0x0f, 0x89, 0xde, 0xf8, 0x23, 0xf1, 0xff, 0x12, 0x10,
	0x32, 0x44, 0xaf, 0xa2, 0x0b, 0xcf, 0xc3, 0x4f, 0xd8, 0x97, 0xae, 0x09, 0x99, 0xf3, 0x29, 0xcc,
	0x17, 0x4d, 0x04, 0x06, 0x47, 0xff, 0x22, 0x4c, 0x2b, 0xaf, 0xda, 0x5a, 0x72, 0x3f, 0xf9, 0xa2,
	0x47, 0xf3, 0xa6, 0xbb, 0xac, 0x5f, 0x67, 0x0e, 0xfe, 0x8b, 0x80, 0x44, 0xcc, 0xcb, 0xeb, 0x13,
	0x37, 0xae, 0x0c, 0xfb, 0x03, 0x8c, 0xb6, 0x89, 0xb9, 0x02, 0x80, 0x6f, 0x42, 0x00, 0xd0, 0x26,
	0xa8, 0xca, 0xef, 0xc4, 0xc7, 0xe1, 0xed, 0x68, 0x2c, 0x97, 0xc4, 0xc0, 0xea, 0x3c, 0xaa, 0x75,
	0x5c, 0xd8, 0x50, 0x19, 0x83, 0x75, 0xe4, 0x3d, 0xaf, 0xf3, 0xef, 0x27, 0xcf, 0x12, 0x15, 0x82,
	0x53, 0x93, 0xfc, 0xc1, 0xa3, 0x5f, 0x25, 0x3b, 0x3f, 0x19, 0xe8, 0xea, 0xd2, 0xdf, 0xe9, 0x07,
	0xaf, 0x42, 0xd3, 0x34, 0x1c, 0x30, 0xde, 0x65, 0x66, 0xb2, 0xab, 0xaf, 0xb7, 0x5b, 0x40, 0xa8,
	0x38, 0x12, 0xad, 0x8a, 0x84, 0x9d, 0x37, 0xda, 0xa8, 0x73, 0x5f, 0x27, 0xd7, 0x84, 0xac, 0xb3,
	0x52, 0x55, 0x9e, 0x17, 0xa7, 0x12, 0xd4, 0xeb, 0x6e, 0xd5, 0xda, 0xba, 0x06, 0x2e, 0x6d, 0xd7,
	0x7a, 0xce, 0x25, 0x1b, 0xb6, 0xe6, 0xcd, 0x22, 0x61, 0xcd, 0x2f, 0x7e, 0x8b, 0xe3, 0x80, 0x18,
	0x95, 0xe0, 0x48, 0x02, 0x38, 0x9a, 0x37, 0xcb, 0x6d, 0xf6, 0x95, 0xf8, 0x6b, 0xfa, 0xd4, 0x7b,
	0x04, 0x34, 0x76, 0x5d, 0x98, 0x9b, 0xbc, 0x8d, 0x33, 0xe3, 0x6b, 0xe9, 0xf4, 0xe7, 0xa6, 0x6f,
	0x44, 0x16, 0xf0, 0x8e, 0xaa, 0x2c, 0x16, 0x89, 0xa6, 0xc9, 0x34, 0xfb, 0x19, 0xfc, 0xec, 0x9d,
	0xa6, 0xfe, 0x78, 0x9e, 0xd7, 0x6d, 0xea, 0xf5, 0x61, 0xd3, 0xe4, 0x47, 0x33, 0x35, 0xba, 0xc3,
	0x65, 0x6b, 0xb1, 0x22, 0x71, 0xb8, 0x6c, 0xad, 0x3a, 0x78, 0xdf, 0xbb, 0xaa, 0xf2, 0xb2, 0x28,
	0xc1, 0xfc, 0x98, 0x4d, 0x47, 0xbe, 0x76, 0x69, 0x27, 0xdd, 0x87, 0xdd, 0xa9, 0xf6, 0x1d, 0x10,
	0x98, 0xfc, 0xb3, 0xcb, 0x83, 0x0d, 0xfb, 0xf2, 0x26, 0x58, 0xda, 0xe2, 0xf9, 0xfb, 0x7c, 0x33,
	0xdd, 0xe6, 0x5f, 0xa5, 0x7f, 0x52, 0x9f, 0x7c, 0xaf, 0x80, 0x26, 0x5a, 0xb5, 0x88, 0xe2, 0x93,
	0xee, 0x04, 0xc0, 0xa4, 0x35, 0xce, 0x9b, 0x37, 0x74, 0x43, 0xb2, 0xa2, 0xb5, 0xaa, 0x32, 0x4f,
	0x34, 0x29, 0x7a, 0x40, 0xbb, 0x9d, 0xe7, 0x50, 0x36, 0x14, 0xde, 0x80, 0x26, 0xdc, 0x3e, 0x7b,
	0x50, 0x2b, 0xa5, 0x9b, 0xbd, 0x49, 0x8d, 0x98, 0x6e, 0xf6, 0x66, 0x0d, 0x95, 0xd3, 0xec, 0xb1,
	0xce, 0x32, 0xcf, 0xa1, 0x6c, 0xa8, 0xd9, 0x83, 0x82, 0x4b, 0x9f, 0xfd, 0xdf, 0x0a, 0x68, 0x8a,
	0xc1, 0xc0, 0x14, 0x47, 0x83, 0x55, 0xc1, 0x70, 0x3c, 0x14, 0xa8, 0xb1, 0xaf, 0xc0, 0xa9, 0x95,
	0x7e, 0x4b, 0xce, 0x1b, 0x5e, 0xc3, 0x58, 0x9d, 0x6f, 0xbf, 0xa0, 0x2a, 0xeb, 0xc5, 0x99, 0x26,
	0xfe, 0xc2, 0x68, 0x32, 0xd0, 0x75, 0x2e, 0xb9, 0xbd, 0x31, 0xef, 0x59, 0xc2, 0x68, 0x60, 0xdf,
	0xad, 0x54, 0xfb, 0x8e, 0x8a, 0x60, 0x74, 0x73, 0x30, 0xba, 0x22, 0xb8, 0x25, 0x6d, 0x37, 0xbc,
	0x60, 0x59, 0x5c, 0xe4, 0xce, 0x09, 0x54, 0xb2, 0x1e, 0x0b, 0x3f, 0x8c, 0xd1, 0x31, 0x3f, 0x12,
	0xff, 0x86, 0xa9, 0x78, 0xed, 0x20, 0x90, 0xd2, 0x3e, 0xcd, 0xcd, 0x50, 0x78, 0x6a, 0xd8, 0x6d,
	0x63, 0x75, 0xbe, 0x3f, 0x51, 0x95, 0xa5, 0xe2, 0x4c, 0xd3, 0x03, 0xde, 0x06, 0x87, 0x99, 0x70,
	0xf3, 0xba, 0x34, 0xc2, 0xeb, 0x7d, 0x36, 0xef, 0xb6, 0xd7, 0xab, 0x6f, 0xf9, 0x5f, 0x0b, 0x68,
	0xba, 0x89, 0xb7, 0x4e, 0xb7, 0x64, 0x97, 0x86, 0x8e, 0x4b, 0x76, 0x6d, 0x1b, 0xab, 0xf3, 0xd5,
	0xaa, 0x8a, 0x2c, 0x4e, 0x37, 0xb1, 0xee, 0x46, 0x8b, 0x3c, 0xb7, 0x0a, 0xd8, 0x56, 0xe9, 0xf6,
	0xb7, 0xf5, 0xbf, 0x50, 0xf9, 0xae, 0x6d, 0x85, 0xf3, 0xd2, 0xb0, 0xc1, 0xe6, 0xf5, 0xcd, 0x1f,
	0x66, 0xcb, 0x58, 0x9d, 0xef, 0x4f, 0x55, 0xa5, 0xdc, 0x15, 0xb1, 0x09, 0x1b, 0xb8, 0xd0, 0xce,
	0x41, 0xa7, 0xed, 0x00, 0xf7, 0xae, 0x38, 0x77, 0x38, 0x6b, 0x17, 0xff, 0xa9, 0x80, 0xa6, 0x96,
	0x85, 0x43, 0xf1, 0x65, 0xc1, 0x2a, 0xa2, 0x17, 0xa7, 0xac, 0xc6, 0x3c, 0x7b, 0xec, 0x03, 0x87,
	0x66, 0x8e, 0xeb, 0x75, 0x69, 0x19, 0xab, 0xd3, 0xef, 0xb3, 0x45, 0xe2, 0x34, 0xad, 0xe9, 0xb8,
	0x76, 0x7e, 0x8f, 0xd6, 0x72, 0x18, 0xa4, 0xbe, 0xf4, 0xb1, 0xe3, 0x52, 0x9e, 0x86, 0x8f, 0x08,
	0x85, 0x43, 0xf1, 0x8d, 0x8c, 0xb3, 0xd5, 0x71, 0xf4, 0x7f, 0x15, 0xd0, 0x64, 0xa5, 0xaa, 0x8a,
	0x7c, 0x3d, 0x48, 0x23, 0x31, 0x89, 0x4f, 0x38, 0x48, 0x88, 0xac, 0x8d, 0xf4, 0xb5, 0x3c, 0x39,
	0xac, 0x76, 0xb1, 0x3a, 0x5f, 0x14, 0x1f, 0x45, 0xed, 0xd2, 0x4e, 0xca, 0xb3, 0xef, 0x3e, 0xa5,
	0x35, 0x9e, 0x35, 0x2f, 0x28, 0x7d, 0x35, 0x48, 0xc7, 0x7c, 0x4e, 0xcf, 0xb6, 0x40, 0x55, 0xd5,
	0x46, 0xfa, 0x51, 0x6e, 0x71, 0x7f, 0x26, 0xa0, 0x09, 0x20, 0x8f, 0x5e, 0x1d, 0xa8, 0x0d, 0xc6,
	0xea, 0x02, 0x95, 0x41, 0xbb, 0xa8, 0xc8, 0xd2, 0x40, 0x5f, 0xd4, 0x63, 0x43, 0xb6, 0x89, 0xd5,
	0xf9, 0x42, 0xaa, 0xe2, 0x13, 0x27, 0x80, 0x34, 0x3a, 0x4c, 0x6b, 0xf2, 0xac, 0x05, 0x78, 0xd2,
	0x4b, 0x7d, 0x2f, 0x38, 0x5d, 0x10, 0xb4, 0xcd, 0xc2, 0x0f, 0x37, 0x5a, 0x37, 0x5f, 0x7f, 0xe2,
	0x7f, 0xa8, 0x37, 0xf8, 0x88, 0xae, 0x83, 0x5c, 0x57, 0xee, 0xeb, 0xb0, 0x34, 0x70, 0x5c, 0x87,
	0xad, 0x0d, 0x5b, 0x07, 0xe1, 0xe4, 0x8d, 0x75, 0x58, 0x0a, 0x60, 0x1d, 0x79, 0x77, 0xb7, 0x8e,
	0xbf, 0x27, 0xa0, 0x09, 0x44, 0xea, 0xe6, 0xbe, 0x0e, 0x4b, 0x03, 0xc7, 0x75, 0xd8, 0xda, 0x80,
	0x38, 0x00, 0xef, 0x87, 0x4e, 0xdf, 0x4c, 0xfb, 0x61, 0x2a, 0xc0, 0xeb, 0x78, 0x51, 0xba, 0xf3,
	0x75, 0x88, 0xd7, 0x05, 0x34, 0x76, 0x39, 0xb8, 0x15, 0xc2, 0x0a, 0x1c, 0x9f, 0x7c, 0xfc, 0xf4,
	0xbd, 0xe9, 0x1b, 0xb0, 0xb9, 0x03, 0x95, 0xe2, 0xf7, 0xc0, 0x5c, 0x00, 0x73, 0x17, 0xef, 0x62,
	0xee, 0x5f, 0x08, 0x68, 0x1c, 0x96, 0x11, 0xb2, 0xc9, 0x7b, 0x1d, 0x45, 0x88, 0xfc, 0xec, 0xe7,
	0x0c, 0xd1, 0x02, 0xc4, 0x45, 0x0b, 0xc4, 0xa9, 0x96, 0xd9, 0x12, 0x6a, 0xec, 0x5c, 0x8c, 0x97,
	0x32, 0x4b, 0x7c, 0x34, 0xdd, 0x52, 0xc4, 0xf6, 0x0c, 0x34, 0xc5, 0x72, 0xf2, 0x5e, 0xab, 0x8f,
	0xc4, 0x03, 0x76, 0x96, 0xc9, 0xa9, 0x95, 0x23, 0xcb, 0xe4, 0xdc, 0x30, 0x56, 0xe7, 0xbb, 0xe8,
	0x51, 0x95, 0x7f, 0x27, 0x88, 0x53, 0x2c, 0xc7, 0xf7, 0xf7, 0x7a, 0x83, 0xbc, 0xbf, 0x2f, 0x38,
	0x15, 0x1b, 0x32, 0x18, 0xcc, 0x40, 0x68, 0x9d, 0xfb, 0xe0, 0x75, 0xc7, 0x44, 0x47, 0x44, 0x0c,
	0xd3, 0x71, 0xc1, 0xd2, 0x00, 0x06, 0xa3, 0xe6, 0x3c, 0xaf, 0x99, 0xc7, 0xea, 0xf8, 0x3c, 0xfd,
	0x70, 0xe4, 0x72, 0xc3, 0x6d, 0x52, 0xed, 0x3b, 0xc0, 0x0d, 0x12, 0x7c, 0xdb, 0xc9, 0xc3, 0xb9,
	0x69, 0xe7, 0x60, 0x63, 0xab, 0xbd, 0x3b, 0x06, 0xf9, 0xab, 0xbe, 0xe2, 0x74, 0x20, 0xc7, 0xeb,
	0x4a, 0x87, 0x42, 0xb8, 0x15, 0x3e, 0xcb, 0x03, 0x02, 0x9a, 0x62, 0x21, 0x27, 0x2e, 0x9b, 0xe3,
	0xd4, 0xca, 0x71, 0x73, 0x9c, 0x1b, 0xc6, 0xea, 0x7c, 0x1f, 0xa9, 0x4a, 0xbe, 0x38, 0xc5, 0x42,
	0x91, 0x60, 0x6b, 0x1c, 0x4b, 0x61, 0xa9, 0x79, 0xf7, 0x6a, 0xa9, 0x9a, 0x80, 0xa6, 0x58, 0x28,
	0x8e, 0xcb, 0x52, 0x9d, 0x5a, 0x39, 0x2e, 0xd5, 0xb9, 0x61, 0xac, 0xce, 0xf7, 0x07, 0xbc, 0x54,
	0x0b, 0xd1, 0x22, 0x4b, 0x75, 0x2a, 0xc5, 0x4b, 0x2d, 0x95, 0xee, 0xc5, 0x52, 0xc5, 0xff, 0x8f,
	0xbd, 0xab, 0x8d, 0x8d, 0xa3, 0x38, 0xff, 0xda, 0xcb, 0xff, 0x5f, 0xc1, 0x06, 0x85, 0x64, 0x20,
	0xc4, 0x2c, 0x24, 0x5c, 0x2e, 0x4e, 0x42, 0x1c, 0xdb, 0x97, 0x18, 0x2b, 0x05, 0x4a, 0x05, 0x8b,
	0xd3, 0xd2, 0xa0, 0xb4, 0xb8, 0x94, 0x9a, 0x97, 0xaa, 0xa2, 0xae, 0x7d, 0x02, 0x97, 0xc4, 0x67,
	0x7c, 0x4e, 0xda, 0x12, 0x22, 0x19, 0x62, 0x13, 0x99, 0xda, 0x0e, 0xd9, 0xc4, 0x80, 0x1d, 0x28,
	0x71, 0xdb, 0xe0, 0x90, 0xc6, 0xb1, 0x69, 0x52, 0xe7, 0xe2, 0xb3, 0x6b, 0x2a, 0xf1, 0x05, 0x35,
	0xe2, 0x43, 0xa5, 0xd2, 0xaa, 0xad, 0x44, 0x25, 0xee, 0xcd, 0x5f, 0xc8, 0x87, 0x52, 0xa9, 0x6a,
	0xd5, 0xaa, 0xda, 0x79, 0x9e, 0x99, 0x9d, 0xdd, 0x9d, 0xd9, 0xdd, 0x4b, 0xab, 0x86, 0x0f, 0xfd,
	0xe6, 0x9b, 0xf9, 0xad, 0xef, 0xf9, 0x3d, 0x33, 0xf3, 0xdc, 0xec, 0xcc, 0xf3, 0xf2, 0x47, 0x4d,
	0x5f, 0x21, 0x9a, 0x26, 0x20, 0x59, 0x1d, 0x64, 0xbd, 0x38, 0xc3, 0xf5, 0x11, 0x50, 0x9c, 0x9e,
	0xc7, 0x24, 0xb0, 0x91, 0x94, 0xb4, 0x02, 0x3d, 0xf2, 0x1f, 0xa1, 0xf7, 0x9e, 0x86, 0xf7, 0x2d,
	0x6e, 0x7e, 0xeb, 0x03, 0xed, 0x1b, 0x27, 0xb8, 0x21, 0x0a, 0x2c, 0xd3, 0x95, 0x68, 0xb7, 0xcc,
	0xdb, 0x89, 0x21, 0xe3, 0x82, 0x06, 0x31, 0xa0, 0x2f, 0xe8, 0x9c, 0xcf, 0x05, 0x27, 0x9f, 0x68,
	0x7a, 0x95, 0xc7, 0x96, 0x3d, 0xdc, 0xd1, 0xf3, 0x24, 0x30, 0xda, 0x1c, 0x62, 0xf5, 0x38, 0xd2,
	0xe6, 0x55, 0x1b, 0x1d, 0x0c, 0x2b, 0xf1, 0x7e, 0xb2, 0xce, 0x63, 0x0d, 0xe9, 0x21, 0xeb, 0x0c,
	0x0b, 0xba, 0x8a, 0xc3, 0x70, 0x46, 0x01, 0x51, 0xbe, 0x35, 0x89, 0xf5, 0x41, 0x7c, 0xbf, 0xdb,
	0xd1, 0xf3, 0x24, 0x05, 0xdb, 0x2b, 0xf1, 0x0c, 0xf7, 0xc1, 0x68, 0x06, 0x9f, 0x44, 0xff, 0xec,
	0x74, 0x75, 0xb3, 0x97, 0xff, 0xf5, 0x21, 0x28, 0x7c, 0xf3, 0x6f, 0xb6, 0xdf, 0xfc, 0x31, 0x7b,
	0x20, 0xb8, 0x3f, 0x1a, 0x55, 0xe2, 0x27, 0x38, 0xa2, 0x14, 0xce, 0x64, 0xe5, 0x5e, 0x16, 0xe8,
	0x2f, 0x69, 0x0b, 0x7c, 0x4e, 0x63, 0x17, 0xd5, 0x4a, 0x81, 0x5d, 0xdd, 0x4a, 0x81, 0x3d, 0x28,
	0x14, 0xb8, 0xc5, 0xde, 0x37, 0x5c, 0x03, 0x26, 0x10, 0x05, 0x26, 0xe2, 0x27, 0x41, 0x54, 0xf9,
	0xb5, 0x32, 0x8a, 0x9a, 0xdc, 0xc7, 0x4b, 0x59, 0x50, 0x8b, 0x77, 0x96, 0x5f, 0x2b, 0x29, 0xc5,
	0x76, 0x75, 0x2b, 0xc5, 0xf6, 0xa0, 0x50, 0x6c, 0xf1, 0x7a, 0x09, 0xfb, 0xdc, 0xd7, 0x4b, 0xd8,
	0x18, 0x70, 0xbd, 0x24, 0x11, 0x9c, 0xe4, 0xe0, 0x7a, 0x89, 0x89, 0xbc, 0x56, 0x62, 0x92, 0x3c,
	0xf2, 0x26, 0x82, 0x20, 0x28, 0xac, 0x78, 0xcd, 0xc4, 0x84, 0x75, 0x5d, 0x33, 0x35, 0x33, 0x09,
	0xa2, 0x5f, 0x33, 0xc9, 0xa4, 0xff, 0x29, 0x5e, 0x33, 0x31, 0xf1, 0x13, 0x32, 0x83, 0xe3, 0x91,
	0x7f, 0x5d, 0x20, 0x06, 0x09, 0xb8, 0xaf, 0x9b, 0xb0, 0x37, 0xf4, 0xba, 0xc9, 0x85, 0xfb, 0xf4,
	0x5c, 0x37, 0xa1, 0xc2, 0xc8, 0x69, 0x4d, 0x5f, 0xca, 0x5c, 0x8d, 0xd2, 0x7b, 0xda, 0x55, 0xaf,
	0x75, 0xa2, 0xa3, 0x9a, 0xea, 0xb5, 0x0e, 0x31, 0xce, 0xe9, 0x5f, 0x3d, 0x7b, 0xad, 0xcb, 0xcf,
	0x1e, 0x06, 0xe7, 0x62, 0xe3, 0x26, 0x4f, 0x83, 0xcf, 0x12, 0xac, 0x4e, 0x54, 0xa9, 0x1c, 0x75,
	0xec, 0x05, 0x35, 0xad, 0xe9, 0x4b, 0xd9, 0x41, 0x95, 0x54, 0x5c, 0xa1, 0x53, 0x29, 0xae, 0x0b,
	0x83, 0xe2, 0x3e, 0x62, 0x9b, 0xac, 0x6b, 0x59, 0xc9, 0x0b, 0x26, 0xee, 0x4a, 0x4f, 0x83, 0x20,
	0xe8, 0x46, 0x23, 0xa1, 0xf4, 0x28, 0xda, 0x87, 0x2e, 0xea, 0xd4, 0x06, 0x9c, 0xd7, 0xf4, 0xa5,
	0xec, 0xa0, 0x49, 0x2a, 0xb2, 0xd0, 0x19, 0xe2, 0x63, 0xe1, 0x16, 0xf9, 0x71, 0xcb, 0x6c, 0x20,
	0x2b, 0xd8, 0x41, 0x54, 0x7a, 0x4f, 0x3b, 0x0a, 0xbd, 0x5a, 0xb4, 0x00, 0x6d, 0x4e, 0x87, 0x20,
	0x7c, 0x75, 0x4d, 0x04, 0xe1, 0xc9, 0x29, 0x4d, 0xbf, 0x8a, 0x65, 0xe6, 0x95, 0xbe, 0x9d, 0xb9,
	0x64, 0x8e, 0xab, 0x01, 0x28, 0xf0, 0x37, 0xec, 0x29, 0xb1, 0x94, 0x9d, 0x21, 0xa5, 0xf7, 0xb4,
	0x1b, 0xb7, 0x88, 0xeb, 0x1f, 0xbf, 0xd7, 0x2f, 0x2c, 0x89, 0x22, 0xec, 0x1b, 0x31, 0xfd, 0x6a,
	0x9e, 0x4c, 0x44, 0xfe, 0x3a, 0xe6, 0x12, 0x77, 0x6d, 0x00, 0x02, 0xe5, 0xbd, 0xa8, 0x59, 0xe6,
	0x49, 0x8d, 0xac, 0x10, 0x24, 0xc6, 0xe5, 0x6e, 0x05, 0xdc, 0x2e, 0x73, 0xd4, 0x95, 0x58, 0xec,
	0x06, 0x51, 0x2e, 0x1f, 0x92, 0xd5, 0xf4, 0x65, 0xc2, 0x4a, 0x6d, 0x69, 0x6e, 0x22, 0xeb, 0x03,
	0x56, 0x72, 0x4b, 0x73, 0x13, 0xd3, 0xd5, 0x86, 0x30, 0x18, 0x2a, 0xec, 0x61, 0x7b, 0x80, 0x09,
	0x5f, 0xe2, 0x2d, 0xcd, 0x4d, 0x78, 0xc1, 0x59, 0x25, 0xb6, 0xf9, 0xd6, 0x7c, 0x3c, 0x71, 0x93,
	0x4a, 0xe8, 0xbd, 0x5d, 0x6d, 0xf6, 0x1a, 0xfa, 0x85, 0xa6, 0x2f, 0x13, 0x56, 0xad, 0x54, 0x74,
	0x77, 0xbf, 0x52, 0x74, 0x2f, 0x0c, 0x45, 0xff, 0xa6, 0xb0, 0x03, 0xc8, 0xcf, 0x1e, 0xde, 0xdb,
	0xd5, 0xc6, 0x76, 0x00, 0xf0, 0x49, 0x10, 0xb7, 0xc1, 0xa8, 0x0b, 0x10, 0xd7, 0x99, 0x92, 0xc9,
	0x7d, 0x34, 0x4f, 0xd3, 0x7e, 0xf4, 0xb9, 0x5a, 0x26, 0xac, 0x61, 0x29, 0x01, 0x77, 0xbf, 0x92,
	0x80, 0x17, 0x86, 0x04, 0x76, 0x59, 0x66, 0x23, 0x59, 0x29, 0x58, 0x83, 0x38, 0x97, 0xda, 0xb6,
	0xba, 0x1e, 0x8b, 0x10, 0x77, 0x53, 0x4a, 0xd6, 0x54, 0x46, 0x89, 0x9c, 0x8d, 0xe9, 0xd7, 0xf0,
	0x05, 0x63, 0xb3, 0x59, 0xa7, 0x5c, 0x4e, 0x02, 0x97, 0xea, 0x60, 0x10, 0x32, 0xf9, 0xad, 0x66,
	0x99, 0xd3, 0x1a, 0x3b, 0x07, 0x01, 0x2e, 0x2d, 0xcd, 0x4d, 0xb8, 0xf4, 0x5e, 0x0e, 0x5e, 0x7a,
	0x0e, 0xf2, 0x4a, 0x2c, 0xbf, 0xd5, 0x24, 0x68, 0x26, 0x93, 0x8f, 0x34, 0x7d, 0xb9, 0x27, 0xbb,
	0xbe, 0xe4, 0xe6, 0xcd, 0x8b, 0x50, 0xde, 0xbc, 0xf9, 0x81, 0xa8, 0xc1, 0x67, 0x2d, 0x73, 0x07,
	0xa9, 0x12, 0xf5, 0x07, 0xc7, 0x1b, 0xdc, 0xbf, 0x83, 0x6a, 0x10, 0x07, 0x15, 0x73, 0x8b, 0x50,
	0x8f, 0x0e, 0xda, 0x44, 0x2b, 0x5d, 0x3a, 0x29, 0xa2, 0xe0, 0xe5, 0x82, 0xdc, 0xaa, 0x22, 0x06,
	0xff, 0x5a, 0xb0, 0xc4, 0xbf, 0x84, 0xed, 0x63, 0x4b, 0x73, 0x53, 0x53, 0x47, 0x7b, 0xb7, 0x74,
	0xfb, 0x88, 0x7d, 0x41, 0xdb, 0x47, 0x0e, 0x71, 0xe6, 0xf7, 0xdd, 0xec, 0x8d, 0x77, 0x6f, 0x57,
	0x5b, 0xbc, 0xad, 0xa3, 0x9d, 0xf9, 0xab, 0x6c, 0x04, 0x3e, 0x74, 0x6a, 0x8a, 0x6c, 0x20, 0xb5,
	0x9e, 0x0d, 0x0c, 0xfd, 0x35, 0xd9, 0xdb, 0xd5, 0x66, 0xe3, 0xf8, 0xfc, 0x7e, 0xdf, 0x39, 0xf1,
	0x4e, 0xb7, 0xa7, 0x20, 0x6d, 0x92, 0xc2, 0x0a, 0x72, 0x00, 0x63, 0xb3, 0x31, 0x14, 0xe7, 0x38,
	0x49, 0xde, 0xc3, 0xb6, 0x48, 0x58, 0xbc, 0x3f, 0xd7, 0x67, 0xd4, 0x79, 0x1a, 0x20, 0x22, 0xed,
	0xd2, 0xdc, 0x20, 0x78, 0x81, 0x14, 0xe6, 0x2e, 0x14, 0x7b, 0x27, 0xf2, 0x73, 0xd9, 0xd2, 0xdc,
	0x5b, 0xcc, 0xa5, 0x63, 0x6d, 0xe2, 0x66, 0xc5, 0xc5, 0x29, 0xcd, 0x02, 0x64, 0x1b, 0xa0, 0x77,
	0x9d, 0xa3, 0x6f, 0x35, 0x21, 0x0f, 0x40, 0x49, 0xc8, 0x87, 0x43, 0x42, 0xdf, 0x12, 0x36, 0x51,
	0xbc, 0x97, 0x6d, 0xa2, 0x78, 0x83, 0x68, 0x77, 0x8c, 0x9a, 0x20, 0xc1, 0x93, 0xfb, 0x3a, 0xd9,
	0x43, 0x68, 0x47, 0xdf, 0x8d, 0xf1, 0x93, 0x6f, 0x35, 0x0d, 0x0f, 0x40, 0x49, 0xc3, 0x87, 0x43,
	0x1a, 0x1f, 0x6a, 0x96, 0xf9, 0x96, 0xc6, 0xce, 0xc0, 0x1d, 0x22, 0x23, 0x9a, 0x68, 0x47, 0x79,
	0xbb, 0x6d, 0x35, 0xe6, 0x8f, 0xf0, 0x8f, 0xc5, 0xd7, 0x06, 0x4a, 0x23, 0xa3, 0x85, 0xc9, 0x57,
	0x4b, 0x63, 0x7d, 0x76, 0x23, 0x94, 0x45, 0xcf, 0x67, 0x87, 0xa0, 0xa6, 0x76, 0xe9, 0xd8, 0xb9,
	0xe2, 0xf0, 0x09, 0xf8, 0x47, 0xdc, 0xde, 0x94, 0xdf, 0x7c, 0x0e, 0x5a, 0x8a, 0xaf, 0x0d, 0xd8,
	0xcf, 0x70, 0xbf, 0xa5, 0x52, 0xae, 0x8f, 0xfa, 0x02, 0x9d, 0x47, 0x87, 0x0b, 0xa1, 0x08, 0x2e,
	0x37, 0x59, 0x54, 0x93, 0xb5, 0x35, 0x15, 0x68, 0x92, 0xbc, 0x83, 0x67, 0xef, 0x5c, 0x87, 0xeb,
	0x14, 0xee, 0x56, 0x2e, 0x05, 0x56, 0x07, 0x83, 0x50, 0x7b, 0x29, 0xcb, 0xdc, 0xc2, 0xce, 0xe0,
	0x1d, 0xdd, 0xad, 0x16, 0x77, 0x7a, 0x5f, 0x71, 0x64, 0x11, 0x26, 0x43, 0x2d, 0xa9, 0x84, 0xc2,
	0xf9, 0x18, 0x1e, 0xc1, 0x73, 0x0e, 0xd5, 0x2a, 0x2f, 0x5e, 0x17, 0x89, 0xf5, 0x21, 0x28, 0x64,
	0xf1, 0x3b, 0xd7, 0x8f, 0x10, 0xef, 0x0f, 0xfd, 0x11, 0xf2, 0x20, 0xaf, 0xc4, 0x8f, 0x90, 0xe2,
	0x3a, 0x80, 0xe9, 0x91, 0x7c, 0xa2, 0xe9, 0xcb, 0xbf, 0x9c, 0xde, 0x9b, 0x42, 0x67, 0x77, 0x50,
	0x9e, 0x6f, 0x71, 0x78, 0x11, 0xca, 0x5f, 0x21, 0x3f, 0x10, 0x55, 0x38, 0xa8, 0x59, 0xe6, 0x03,
	0xcc, 0x0b, 0xaa, 0x34, 0x91, 0x2b, 0xf4, 0x33, 0x5f, 0xae, 0xb7, 0x8f, 0x1b, 0xdb, 0x0a, 0xd3,
	0x2f, 0xe0, 0x29, 0xfe, 0xf9, 0x9f, 0xd9, 0x4b, 0x86, 0xcf, 0x78, 0x01, 0x68, 0x5b, 0xbf, 0x85,
	0x63, 0xe5, 0xf1, 0xc1, 0xd2, 0xec, 0xd9, 0xd2, 0x99, 0x71, 0x36, 0xd7, 0x1b, 0x13, 0xc9, 0xe8,
	0x13, 0x85, 0x7b, 0xb6, 0x1d, 0x8e, 0xe9, 0xd7, 0x3f, 0x98, 0xda, 0xcd, 0xa4, 0xfd, 0x62, 0x77,
	0x7a, 0x37, 0x50, 0xdf, 0xec, 0x8f, 0xbf, 0xf1, 0xa3, 0x94, 0xee, 0xd0, 0x72, 0x30, 0xaa, 0xe0,
	0x75, 0xea, 0xef, 0xb6, 0x92, 0xb3, 0x29, 0x4d, 0xe4, 0x16, 0x47, 0x99, 0x2b, 0xfc, 0x7d, 0x6e,
	0x57, 0xf8, 0x7c, 0x6e, 0x98, 0xe3, 0xf2, 0xd9, 0x49, 0x80, 0xda, 0x96, 0x63, 0xfe, 0x85, 0xe2,
	0xab, 0x53, 0xe5, 0x29, 0xd4, 0x49, 0x3e, 0x37, 0x54, 0xea, 0x9b, 0x29, 0xbc, 0x76, 0x92, 0xf9,
	0x4c, 0x4f, 0x82, 0x4e, 0x6a, 0x2e, 0x47, 0x27, 0x7f, 0x5b, 0xa2, 0xaf, 0x68, 0xda, 0x95, 0x6a,
	0xed, 0x44, 0x67, 0x77, 0x50, 0x88, 0xa4, 0xf0, 0xa6, 0x07, 0xc2, 0xb4, 0xb1, 0x29, 0x02, 0x92,
	0xb9, 0xfe, 0x2d, 0xb1, 0xcc, 0x8b, 0x31, 0x72, 0x93, 0xe8, 0xa9, 0x87, 0x4c, 0xd9, 0xd0, 0x1b,
	0xa7, 0x63, 0x11, 0x55, 0x72, 0xe1, 0x8d, 0x7c, 0x6e, 0x98, 0x2b, 0x80, 0xb7, 0x17, 0x2e, 0xcc,
	0x40, 0x39, 0x6e, 0x0c, 0x00, 0x17, 0xbe, 0xea, 0xa3, 0xde, 0xe7, 0x1d, 0x8f, 0xca, 0xec, 0x6c,
	0x61, 0xee, 0xf9, 0xe2, 0x24, 0x7e, 0xb4, 0x1f, 0x9c, 0x3f, 0xc2, 0x7b, 0x21, 0x81, 0x33, 0xc6,
	0xfe, 0x81, 0xed, 0xce, 0xf5, 0x97, 0x0f, 0xcc, 0x97, 0xc6, 0xcf, 0xd8, 0x6b, 0x8e, 0xfe, 0x7f,
	0x88, 0xd9, 0x01, 0x24, 0xfc, 0x5c, 0x83, 0x89, 0x2f, 0x1f, 0x98, 0xcf, 0x2f, 0xbc, 0x5e, 0x9e,
	0x7a, 0x0e, 0x27, 0x3a, 0xab, 0x0d, 0x5e, 0xca, 0x1d, 0xe2, 0x45, 0xc8, 0x61, 0x71, 0x43, 0xf1,
	0x70, 0xf8, 0x9f, 0xe5, 0x85, 0x63, 0x85, 0xd9, 0x37, 0x2f, 0xcd, 0x0d, 0x42, 0xe3, 0x62, 0xef,
	0x58, 0x79, 0xe1, 0x20, 0xc6, 0x31, 0x8e, 0xf5, 0x3d, 0xd4, 0x9a, 0x79, 0x0a, 0x56, 0x01, 0x64,
	0x9a, 0x82, 0x55, 0xcf, 0xd6, 0xc2, 0x1d, 0x35, 0x8d, 0x15, 0x8c, 0x3b, 0x6d, 0x63, 0x83, 0x7f,
	0xfa, 0xff, 0xf4, 0xeb, 0x7c, 0xe3, 0xd5, 0xd2, 0xe0, 0x77, 0xa9, 0x91, 0x80, 0xd8, 0x04, 0xd8,
	0x1c, 0x09, 0x8b, 0x53, 0x20, 0xb7, 0xc4, 0x32, 0xff, 0x1e, 0x23, 0xf7, 0x07, 0x4c, 0x01, 0x3a,
	0xdf, 0x17, 0x4a, 0x47, 0x4f, 0x3e, 0xbd, 0x27, 0xd5, 0xfd, 0x7d, 0x48, 0x6f, 0x07, 0x73, 0x42,
	0xac, 0xb6, 0xfe, 0xbf, 0x19, 0xf3, 0x6f, 0xcc, 0x98, 0x6d, 0x92, 0x19, 0xd3, 0x10, 0x3e, 0x63,
	0xc8, 0xef, 0xf1, 0xe5, 0xc5, 0x65, 0x2a, 0x36, 0x06, 0x44, 0xce, 0x04, 0xff, 0x6c, 0xf8, 0x81,
	0x38, 0x4b, 0x32, 0x96, 0x79, 0x07, 0x59, 0x8e, 0x97, 0x3b, 0xe9, 0x76, 0x76, 0xff, 0x8d, 0x29,
	0xaa, 0x69, 0x4d, 0xd9, 0x61, 0x6e, 0x0d, 0x6d, 0x9b, 0x0a, 0xdb, 0x2c, 0xe1, 0xe6, 0x67, 0x2b,
	0xa9, 0xd4, 0x16, 0x92, 0x3f, 0x2d, 0xd1, 0x6f, 0x80, 0x5d, 0x2d, 0x6d, 0xdf, 0x9e, 0xca, 0x74,
	0x74, 0xa7, 0x68, 0x28, 0x17, 0xa9, 0x93, 0xef, 0x7e, 0xbd, 0x38, 0x46, 0xb4, 0x3e, 0x2a, 0x1c,
	0xe9, 0x16, 0x63, 0x96, 0x39, 0x1e, 0x23, 0xab, 0x60, 0x93, 0x2c, 0x20, 0xf0, 0xdd, 0xbd, 0x3f,
	0xe6, 0xdd, 0x3e, 0x67, 0x27, 0x7d, 0x28, 0xf4, 0x17, 0x87, 0xf3, 0x8a, 0xb9, 0xb1, 0xc2, 0xd4,
	0x5c, 0xf9, 0xe0, 0x39, 0xfe, 0x04, 0x4e, 0x0f, 0xc8, 0x6c, 0xf1, 0xf6, 0xf1, 0xc2, 0xdc, 0x48,
	0xa1, 0xff, 0x04, 0x14, 0xe0, 0x80, 0x69, 0xc2, 0xfd, 0x9f, 0x0a, 0x17, 0x66, 0xc0, 0x61, 0x08,
	0x56, 0x8a, 0xb8, 0x04, 0x60, 0x03, 0x5a, 0x1a, 0xeb, 0x6b, 0x77, 0xbe, 0xbc, 0x70, 0xe8, 0x54,
	0xf9, 0xc0, 0x7c, 0x71, 0xea, 0x68, 0x61, 0xfe, 0x48, 0x61, 0x60, 0xa8, 0x3c, 0xd1, 0x57, 0x3c,
	0x39, 0x5e, 0xf8, 0xc9, 0x04, 0x9f, 0xda, 0xc5, 0xa9, 0xa3, 0xf9, 0x0b, 0x3f, 0x28, 0x0c, 0x0c,
	0xd1, 0xa2, 0x42, 0xc7, 0x9c, 0xcd, 0xee, 0xc1, 0x43, 0x85, 0xe9, 0x43, 0xe2, 0x10, 0xc2, 0xb3,
	0xe5, 0xa9, 0xf3, 0xb0, 0xfc, 0x7d, 0x66, 0x04, 0x7c, 0x36, 0x12, 0xdb, 0x2a, 0x18, 0x58, 0x14,
	0x94, 0x99, 0xbb, 0xd9, 0x98, 0x6c, 0x88, 0xbf, 0xd6, 0xf1, 0x4c, 0xa4, 0x21, 0xb6, 0x71, 0x15,
	0x0c, 0x31, 0xc0, 0x71, 0x88, 0xdf, 0xd1, 0x2c, 0xf3, 0x59, 0xcf, 0x08, 0xdb, 0x00, 0x1c, 0xe1,
	0x56, 0xff, 0x00, 0x0b, 0x49, 0x5e, 0x01, 0x54, 0x1a, 0xeb, 0x13, 0x1e, 0x44, 0x5b, 0x31, 0x32,
	0x4d, 0x15, 0x9d, 0xb3, 0xed, 0xe2, 0xab, 0x53, 0xf9, 0x85, 0x33, 0xc5, 0xc9, 0x1f, 0x43, 0xb4,
	0x7a, 0x3e, 0x3b, 0x94, 0xcf, 0xf6, 0x96, 0x0f, 0x9e, 0x2b, 0x1e, 0xe8, 0x2f, 0xbc, 0xf0, 0xf3,
	0xcb, 0x57, 0x5e, 0xa6, 0xe3, 0x19, 0xaa, 0xbc, 0x91, 0x98, 0x5e, 0xf5, 0x05, 0x5a, 0x8c, 0x9a,
	0x8b, 0xc9, 0x4a, 0x37, 0xa7, 0x48, 0xd2, 0xab, 0x0f, 0x15, 0x92, 0x29, 0x70, 0x4b, 0xf4, 0x07,
	0x50, 0x85, 0x23, 0x9a, 0x65, 0xee, 0x24, 0xd5, 0x50, 0x26, 0x9b, 0xef, 0x22, 0xd1, 0x17, 0x9d,
	0xba, 0x6b, 0xf0, 0xaa, 0xd9, 0x86, 0x0b, 0x85, 0xb3, 0x8b, 0x42, 0xe0, 0xa5, 0x19, 0x82, 0x67,
	0xa9, 0x4a, 0xee, 0x49, 0x7c, 0xae, 0x02, 0x95, 0xb0, 0x41, 0x49, 0x25, 0xa1, 0x2c, 0xb7, 0xad,
	0x97, 0xd1, 0x98, 0x7e, 0xe3, 0x76, 0xc8, 0x41, 0x27, 0x51, 0x8c, 0x8f, 0xa7, 0x12, 0xca, 0x34,
	0xb3, 0xb5, 0x82, 0x27, 0x50, 0x35, 0x2f, 0xa3, 0x6a, 0xfa, 0xcf, 0x2e, 0xbe, 0x32, 0x19, 0xaa,
	0x1a, 0x01, 0x15, 0xa8, 0x1a, 0x33, 0x71, 0xd7, 0x65, 0xa9, 0x06, 0x13, 0xf2, 0xe1, 0x25, 0xb3,
	0x0e, 0x47, 0x1f, 0x34, 0x1a, 0x5e, 0x11, 0xc3, 0x6f, 0xf7, 0xa9, 0x43, 0x2b, 0x04, 0x08, 0xd2,
	0x7d, 0xd4, 0x32, 0x1b, 0xd9, 0xdd, 0x32, 0x86, 0x4e, 0x57, 0xe3, 0xdd, 0xf2, 0xc8, 0x02, 0x24,
	0xf5, 0x84, 0x32, 0xac, 0xa5, 0xb1, 0xbe, 0xc2, 0x4b, 0xc3, 0x85, 0x43, 0xd3, 0x42, 0x70, 0xfb,
	0xcd, 0x09, 0x59, 0xec, 0x4b, 0x4f, 0x6b, 0xe6, 0x29, 0x5b, 0xe0, 0x03, 0x31, 0xfd, 0x6a, 0x1a,
	0x7b, 0x4f, 0xe5, 0x8d, 0x4b, 0xc3, 0xf2, 0x45, 0x71, 0xd7, 0x06, 0x20, 0x50, 0xda, 0x69, 0xba,
	0xf4, 0x97, 0x63, 0xcc, 0x3e, 0x0d, 0xc6, 0xb7, 0xfb, 0x8d, 0x27, 0x31, 0x54, 0x9f, 0xb6, 0x94,
	0xc6, 0xfa, 0x40, 0xc6, 0xda, 0x38, 0xd8, 0x63, 0x80, 0x43, 0x62, 0x9c, 0xfa, 0x38, 0x7c, 0xca,
	0xe7, 0xfa, 0x17, 0x47, 0x5f, 0xca, 0xcf, 0x0e, 0xc3, 0x33, 0xf0, 0x40, 0x3e, 0x7b, 0x34, 0x9f,
	0x1b, 0x06, 0xeb, 0x0b, 0xed, 0x99, 0x9e, 0x54, 0x17, 0x66, 0x60, 0x1e, 0x98, 0x28, 0x8f, 0x0f,
	0x06, 0xdc, 0x59, 0xdb, 0xb4, 0x93, 0xfb, 0x20, 0x41, 0xab, 0x10, 0xcd, 0x3f, 0xce, 0x43, 0x9f,
	0xe4, 0xc3, 0xe6, 0xf4, 0x85, 0x84, 0x3e, 0xb9, 0x14, 0xb1, 0xd3, 0x32, 0xd7, 0x10, 0x1d, 0x2c,
	0x1d, 0xd5, 0xc0, 0x72, 0xe7, 0x6f, 0xe1, 0x0c, 0x40, 0x1e, 0x3d, 0xe2, 0x92, 0xd4, 0x96, 0xf1,
	0x87, 0x9a, 0xae, 0x63, 0xd6, 0x46, 0xa9, 0x8c, 0x4e, 0x9f, 0x52, 0x46, 0x11, 0x82, 0x32, 0xee,
	0xa0, 0x32, 0xc2, 0xe9, 0x0a, 0xc8, 0x28, 0x9e, 0xf7, 0xd8, 0x2d, 0x10, 0x21, 0x52, 0x13, 0x2a,
	0x23, 0x79, 0x1d, 0x42, 0xdd, 0xa8, 0x74, 0xb2, 0x50, 0x37, 0x51, 0xb4, 0x5b, 0x94, 0xfd, 0x28,
	0xd7, 0x57, 0x2d, 0x73, 0x03, 0x0b, 0x75, 0xa3, 0x72, 0x55, 0x89, 0x87, 0x29, 0x0f, 0xd1, 0xaf,
	0x14, 0x74, 0x98, 0x20, 0xe1, 0xf2, 0x8d, 0xc6, 0xf4, 0xab, 0xec, 0x1d, 0x18, 0x15, 0x50, 0x1a,
	0x68, 0x29, 0x4a, 0x18, 0x57, 0x03, 0x50, 0xc4, 0xf7, 0x34, 0xcb, 0x7c, 0x53, 0x63, 0xdb, 0x36,
	0xbb, 0x0b, 0xb7, 0x6d, 0x87, 0x95, 0x27, 0x25, 0x0e, 0xe8, 0x4a, 0x1c, 0x92, 0xdc, 0x48, 0x54,
	0x96, 0x80, 0xbc, 0x14, 0xd3, 0x57, 0x81, 0xe1, 0x61, 0xc6, 0xb6, 0xa3, 0xf3, 0x89, 0x07, 0xa0,
	0xe4, 0x75, 0xbd, 0xdc, 0x42, 0xf9, 0x80, 0x4c, 0x73, 0xc9, 0xc8, 0x78, 0x54, 0xe4, 0x11, 0xcd,
	0x32, 0x5b, 0xc9, 0x1a, 0x57, 0x7a, 0x0f, 0x1f, 0xda, 0xb8, 0x3b, 0xb8, 0x9f, 0x1f, 0x16, 0xe3,
	0x97, 0xd7, 0x71, 0xfb, 0xdc, 0xbd, 0xd8, 0x3f, 0x54, 0x9a, 0x3f, 0x43, 0x55, 0xb0, 0x29, 0x21,
	0x73, 0xd5, 0xf7, 0xe5, 0x97, 0xa7, 0x9e, 0x7b, 0x31, 0x16, 0x74, 0x12, 0x41, 0x25, 0x0a, 0xa0,
	0x52, 0x25, 0x4a, 0x3c, 0xaa, 0xa4, 0x0c, 0xc7, 0xb1, 0x77, 0xb8, 0x22, 0x4b, 0x64, 0x9c, 0x5d,
	0xaf, 0x6b, 0xb4, 0x3a, 0x24, 0x3c, 0x62, 0xec, 0xf2, 0x3d, 0x9a, 0xf1, 0x3c, 0x9a, 0xcf, 0xf6,
	0xe6, 0xb3, 0xa7, 0x54, 0xff, 0xdb, 0xb6, 0xd4, 0xb3, 0x47, 0x01, 0x03, 0x73, 0xc8, 0xd6, 0xf0,
	0xb9, 0x1f, 0x15, 0xe6, 0x46, 0x60, 0xdd, 0xe5, 0xb3, 0xb3, 0x6e, 0xff, 0x50, 0x79, 0xa4, 0x8b,
	0x4f, 0xb7, 0xde, 0x34, 0x14, 0x07, 0x63, 0x2c, 0xd2, 0x25, 0x82, 0x9e, 0x15, 0x40, 0xa5, 0x9e,
	0x95, 0x78, 0xd4, 0xf3, 0x8b, 0xf4, 0xbc, 0x6e, 0x8d, 0x2b, 0xb2, 0xc5, 0x3f, 0xf5, 0xea, 0xf0,
	0xf4, 0x19, 0x5e, 0xca, 0x21, 0xe2, 0x74, 0xac, 0x4f, 0x05, 0x0f, 0x88, 0x87, 0x09, 0x54, 0x86,
	0xad, 0x89, 0xeb, 0xef, 0x4b, 0xf5, 0xf8, 0xd5, 0xb0, 0x59, 0x62, 0x2d, 0x95, 0x3a, 0xa8, 0x8d,
	0x06, 0x16, 0xd6, 0xde, 0x23, 0x64, 0x8d, 0x2b, 0xc8, 0xc5, 0xaf, 0x80, 0x6d, 0xa2, 0xf1, 0xe5,
	0x0a, 0x08, 0xd0, 0x81, 0x78, 0x75, 0x4c, 0x2a, 0xd7, 0xc4, 0x5f, 0x62, 0x10, 0x19, 0xe4, 0x57,
	0x85, 0x34, 0x35, 0x83, 0x52, 0x17, 0x75, 0x11, 0xd1, 0xa8, 0x8c, 0x7f, 0x6a, 0x96, 0xf9, 0xbe,
	0x46, 0xaa, 0x83, 0xb5, 0x81, 0x56, 0xfe, 0x44, 0x58, 0xb4, 0xbd, 0xe2, 0xc1, 0x2b, 0x61, 0xf9,
	0xe5, 0x11, 0x4a, 0xbe, 0x31, 0x20, 0x2f, 0xca, 0x6c, 0x1e, 0x66, 0x6e, 0x0f, 0xb7, 0x79, 0x00,
	0x8c, 0x6e, 0xf3, 0x18, 0x1e, 0xb5, 0x3f, 0xa4, 0x59, 0xe6, 0x97, 0x48, 0x02, 0xde, 0x64, 0x92,
	0xb0, 0x6b, 0xc7, 0xe3, 0x72, 0x7a, 0xff, 0xe7, 0x6c, 0xe9, 0x23, 0x60, 0x28, 0xed, 0xbb, 0x8c,
	0xcf, 0x56, 0x3a, 0xf5, 0x92, 0x50, 0xc2, 0xce, 0x36, 0x4c, 0xbf, 0xd1, 0x74, 0x22, 0x38, 0x7d,
	0x98, 0x90, 0xdf, 0xd1, 0x9f, 0x63, 0xc5, 0x8f, 0x51, 0xe6, 0x58, 0x91, 0x41, 0x9d, 0x48, 0xde,
	0x7a, 0xb2, 0x92, 0xfb, 0x8c, 0x40, 0x5e, 0x49, 0x7c, 0x5b, 0x96, 0x37, 0x07, 0xa6, 0xae, 0x4a,
	0xef, 0x69, 0xcf, 0x08, 0x3e, 0x0c, 0x98, 0x9c, 0x92, 0xf2, 0xfa, 0x83, 0xa6, 0x13, 0xc1, 0x23,
	0x44, 0xc9, 0xcb, 0x8f, 0x51, 0xf2, 0x92, 0x41, 0x91, 0x57, 0xa7, 0xdb, 0xc9, 0x0c, 0x08, 0x08,
	0x4e, 0x66, 0x3e, 0x46, 0x9f, 0x37, 0x6e, 0xaf, 0x84, 0x51, 0x72, 0x1f, 0xaf, 0xca, 0xb4, 0x1f,
	0x73, 0x59, 0x11, 0xc1, 0x5d, 0x44, 0xc9, 0xce, 0x8f, 0x51, 0xb2, 0x93, 0x41, 0x91, 0xdd, 0x7e,
	0xcb, 0xbc, 0x93, 0x54, 0x89, 0x1e, 0x28, 0xae, 0x81, 0x5b, 0xe3, 0x77, 0x42, 0xf1, 0xf1, 0xbd,
	0xb3, 0xe6, 0xb2, 0xf9, 0x92, 0x0f, 0x62, 0x82, 0x73, 0x05, 0xa3, 0xaa, 0x76, 0xae, 0xf0, 0x10,
	0xbd, 0x35, 0x1c, 0x88, 0x34, 0x3f, 0xd6, 0x2c, 0x73, 0x46, 0x73, 0xbb, 0x57, 0x00, 0x11, 0x34,
	0x86, 0xa3, 0x21, 0x1e, 0x2a, 0x22, 0xf8, 0xbf, 0x66, 0x00, 0xe1, 0x4b, 0xa9, 0x92, 0xeb, 0x49,
	0x45, 0xcb, 0x84, 0xfc, 0x39, 0xa6, 0xdf, 0xe0, 0xd5, 0xc6, 0x43, 0xe9, 0xe6, 0x54, 0xf7, 0x6e,
	0x79, 0x26, 0x21, 0x11, 0x67, 0xa3, 0x02, 0x33, 0x09, 0xf9, 0xc1, 0xa8, 0xe6, 0x7f, 0x68, 0x96,
	0xf9, 0x81, 0x46, 0x6e, 0x57, 0xa9, 0xb9, 0x36, 0x0e, 0x27, 0x5f, 0x98, 0x1b, 0x03, 0x52, 0x9e,
	0xc2, 0x11, 0x27, 0x7d, 0xe2, 0x53, 0x3f, 0x0c, 0x72, 0x5f, 0x21, 0xae, 0xf5, 0x8b, 0x9a, 0x7e,
	0xad, 0xe3, 0x41, 0x09, 0xae, 0x42, 0x1b, 0xd4, 0x2e, 0x96, 0x2e, 0x4f, 0xa1, 0x8d, 0xa1, 0x38,
	0xc7, 0xd0, 0x36, 0x90, 0x55, 0x20, 0x20, 0x1d, 0x78, 0x70, 0xfc, 0xc1, 0x89, 0xac, 0xea, 0x08,
	0x4c, 0x46, 0xe5, 0x99, 0x45, 0xdd, 0x28, 0x7a, 0x59, 0xd3, 0xaf, 0x73, 0x4b, 0xf1, 0x58, 0xba,
	0x33, 0x95, 0xf1, 0x5f, 0x36, 0x49, 0x40, 0xca, 0xcb, 0x26, 0x29, 0x16, 0xa9, 0x7d, 0xcf, 0x32,
	0xb7, 0x93, 0xb8, 0x9f, 0x01, 0x2f, 0xb4, 0x09, 0x1c, 0x43, 0x11, 0x70, 0x80, 0x42, 0x36, 0x45,
	0x21, 0x4b, 0x8b, 0x5d, 0x93, 0x8f, 0x35, 0x61, 0xbd, 0x80, 0x68, 0x2c, 0x1a, 0xb8, 0x2e, 0xc4,
	0x85, 0xcb, 0x93, 0x7b, 0xab, 0x3e, 0x2a, 0x1c, 0x39, 0xef, 0x81, 0x30, 0x7d, 0x2f, 0x23, 0x16,
	0x2d, 0x47, 0x09, 0x07, 0x77, 0x57, 0x62, 0x20, 0x78, 0x5e, 0x9f, 0x0f, 0x45, 0xb7, 0x36, 0x2c,
	0x82, 0x19, 0x60, 0x79, 0xdd, 0xb5, 0x47, 0x03, 0x2c, 0xaf, 0xa7, 0x9e, 0xa6, 0x3d, 0xa4, 0xf7,
	0x32, 0x8f, 0x8c, 0xbd, 0x5d, 0x6d, 0x62, 0x5d, 0x4d, 0x63, 0x53, 0xa0, 0x0f, 0x98, 0x58, 0x7d,
	0xb1, 0x92, 0xd9, 0x9b, 0x41, 0x32, 0x25, 0x4d, 0x2c, 0x73, 0xeb, 0xaa, 0xca, 0x47, 0xd4, 0x83,
	0x24, 0x2d, 0x86, 0xe8, 0xdf, 0x0b, 0x86, 0x94, 0x40, 0x4c, 0x3c, 0x25, 0x44, 0x85, 0x7a, 0x6a,
	0xfe, 0x19, 0xf2, 0x66, 0xf0, 0x08, 0x20, 0x0d, 0x91, 0x28, 0xe2, 0x97, 0x3e, 0x01, 0x6c, 0x2e,
	0x89, 0x93, 0x57, 0xac, 0xfb, 0x9f, 0x21, 0x6a, 0xfb, 0x2d, 0xe2, 0x02, 0x5f, 0x37, 0x24, 0x68,
	0x67, 0x6c, 0xef, 0x62, 0xc7, 0x47, 0xd4, 0x6b, 0x8a, 0x56, 0xc2, 0x37, 0x6e, 0x85, 0x61, 0x2d,
	0x4d, 0x1e, 0x5b, 0xec, 0x1d, 0x10, 0x73, 0x10, 0x38, 0x18, 0x81, 0xf2, 0x6d, 0x64, 0x6b, 0x14,
	0xca, 0x1d, 0x28, 0x40, 0x0f, 0xa5, 0xf5, 0x57, 0x71, 0xf6, 0xb2, 0x1a, 0xdb, 0xea, 0xd9, 0xeb,
	0x2e, 0x89, 0x1e, 0x30, 0x7b, 0x3d, 0x95, 0xbf, 0x69, 0x26, 0xc8, 0xc7, 0x58, 0xe2, 0x40, 0x2a,
	0xbe, 0xa2, 0x06, 0xb8, 0xd1, 0x18, 0x48, 0x5a, 0xf1, 0x54, 0x25, 0xd3, 0x3a, 0x9d, 0xa1, 0x85,
	0xc1, 0xc9, 0x7b, 0x98, 0x6b, 0xcc, 0x55, 0x1e, 0x4d, 0x9e, 0x70, 0x42, 0x56, 0x97, 0x4e, 0x9e,
	0x70, 0x42, 0x5a, 0x6b, 0x2d, 0xf1, 0xb8, 0x65, 0x36, 0x12, 0x57, 0xfd, 0x78, 0x28, 0xf9, 0x85,
	0x94, 0x95, 0x3d, 0x01, 0x27, 0x9a, 0xbc, 0xa6, 0xde, 0x2e, 0x5b, 0xea, 0x5f, 0x61, 0x54, 0xa2,
	0x3b, 0xbb, 0xbf, 0x3c, 0x0b, 0xa4, 0xb4, 0x02, 0x80, 0x3f, 0x4f, 0x9e, 0x3b, 0xc9, 0x33, 0xe4,
	0xb4, 0xac, 0x52, 0x55, 0x38, 0x30, 0x94, 0x3d, 0x01, 0x23, 0xc3, 0xc2, 0xf8, 0x32, 0x54, 0x10,
	0xc1, 0x87, 0xf6, 0x22, 0x84, 0x90, 0x7a, 0xc8, 0xc8, 0x32, 0xd7, 0xc8, 0xb9, 0x18, 0x72, 0x2e,
	0x94, 0xc7, 0xd3, 0x0a, 0x1e, 0x98, 0xc7, 0x45, 0xd9, 0x13, 0x60, 0x55, 0x54, 0x3c, 0x58, 0xbc,
	0xfc, 0xcb, 0x31, 0xfd, 0x3a, 0x49, 0x6a, 0x77, 0x12, 0x31, 0x63, 0xbe, 0xfc, 0xd7, 0x3f, 0x20,
	0x57, 0x7c, 0xe2, 0x84, 0x66, 0x99, 0xbb, 0x48, 0x63, 0xf1, 0xf8, 0xf8, 0xe2, 0xa9, 0x41, 0x31,
	0x2b, 0x7e, 0x6d, 0x61, 0xfe, 0x48, 0xf1, 0x95, 0xe3, 0xf0, 0xa1, 0xf8, 0xca, 0x0c, 0xf3, 0xda,
	0xc0, 0x96, 0xaf, 0x3f, 0xb8, 0xd3, 0xb8, 0xac, 0xa7, 0x02, 0x72, 0xb1, 0xd2, 0x7c, 0xf9, 0x49,
	0xc8, 0xc2, 0x4f, 0x5f, 0x59, 0x40, 0x56, 0xfa, 0x86, 0x76, 0x5a, 0x83, 0x60, 0x35, 0x4c, 0x05,
	0x2e, 0x0f, 0x56, 0x73, 0xe7, 0x09, 0x0f, 0x9d, 0xa7, 0x8f, 0x0a, 0xbf, 0x17, 0x9e, 0x64, 0xe2,
	0x86, 0xbc, 0x39, 0x60, 0x91, 0x75, 0xa6, 0xdb, 0x53, 0xbb, 0x5b, 0x3b, 0x31, 0x84, 0xe4, 0xd7,
	0x9a, 0xbe, 0xcc, 0x9d, 0x0f, 0x5c, 0x1e, 0xf6, 0xeb, 0xcb, 0x17, 0x1e, 0x38, 0x21, 0xf7, 0x5b,
	0xe6, 0x3d, 0xec, 0xd8, 0x4d, 0x95, 0x50, 0xdc, 0x08, 0xe9, 0x0f, 0xfc, 0xc9, 0xf3, 0xa7, 0xfd,
	0x6c, 0x6b, 0x4b, 0xf6, 0xa0, 0x84, 0xf7, 0xee, 0xb4, 0xcc, 0x1d, 0x24, 0xae, 0xaf, 0xc2, 0xdd,
	0x54, 0x1c, 0x13, 0x95, 0xc7, 0xcd, 0xe6, 0x1d, 0xf1, 0xed, 0xe9, 0xb6, 0x86, 0xff, 0xdf, 0x52,
	0xbf, 0xb5, 0x7e, 0x4b, 0x8d, 0xa6, 0x35, 0x2c, 0x6f, 0xed, 0xea, 0xda, 0xd5, 0xd1, 0x46, 0x8d,
	0x4e, 0xf2, 0x3b, 0x99, 0x74, 0xe7, 0x9d, 0xbe, 0x96, 0x6f, 0x7f, 0x86, 0x26, 0x95, 0xbf, 0xed,
	0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xfa, 0x92, 0x6f, 0xf9, 0x1d, 0xf0, 0x02, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ClusterManagerClient is the client API for ClusterManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClusterManagerClient interface {
	//* cluster management
	CreateCluster(ctx context.Context, in *CreateClusterReq, opts ...grpc.CallOption) (*CreateClusterResp, error)
	RetryCreateClusterTask(ctx context.Context, in *RetryCreateClusterReq, opts ...grpc.CallOption) (*RetryCreateClusterResp, error)
	CheckCloudKubeConfig(ctx context.Context, in *KubeConfigReq, opts ...grpc.CallOption) (*KubeConfigResp, error)
	ImportCluster(ctx context.Context, in *ImportClusterReq, opts ...grpc.CallOption) (*ImportClusterResp, error)
	UpdateCluster(ctx context.Context, in *UpdateClusterReq, opts ...grpc.CallOption) (*UpdateClusterResp, error)
	AddNodesToCluster(ctx context.Context, in *AddNodesRequest, opts ...grpc.CallOption) (*AddNodesResponse, error)
	DeleteNodesFromCluster(ctx context.Context, in *DeleteNodesRequest, opts ...grpc.CallOption) (*DeleteNodesResponse, error)
	ListNodesInCluster(ctx context.Context, in *ListNodesInClusterRequest, opts ...grpc.CallOption) (*ListNodesInClusterResponse, error)
	ListMastersInCluster(ctx context.Context, in *ListMastersInClusterRequest, opts ...grpc.CallOption) (*ListMastersInClusterResponse, error)
	DeleteCluster(ctx context.Context, in *DeleteClusterReq, opts ...grpc.CallOption) (*DeleteClusterResp, error)
	GetCluster(ctx context.Context, in *GetClusterReq, opts ...grpc.CallOption) (*GetClusterResp, error)
	ListCluster(ctx context.Context, in *ListClusterReq, opts ...grpc.CallOption) (*ListClusterResp, error)
	ListCommonCluster(ctx context.Context, in *ListCommonClusterReq, opts ...grpc.CallOption) (*ListCommonClusterResp, error)
	//* node management
	GetNode(ctx context.Context, in *GetNodeRequest, opts ...grpc.CallOption) (*GetNodeResponse, error)
	UpdateNode(ctx context.Context, in *UpdateNodeRequest, opts ...grpc.CallOption) (*UpdateNodeResponse, error)
	CheckNodeInCluster(ctx context.Context, in *CheckNodesRequest, opts ...grpc.CallOption) (*CheckNodesResponse, error)
	CordonNode(ctx context.Context, in *CordonNodeRequest, opts ...grpc.CallOption) (*CordonNodeResponse, error)
	UnCordonNode(ctx context.Context, in *UnCordonNodeRequest, opts ...grpc.CallOption) (*UnCordonNodeResponse, error)
	DrainNode(ctx context.Context, in *DrainNodeRequest, opts ...grpc.CallOption) (*DrainNodeResponse, error)
	UpdateNodeLabels(ctx context.Context, in *UpdateNodeLabelsRequest, opts ...grpc.CallOption) (*UpdateNodeLabelsResponse, error)
	UpdateNodeTaints(ctx context.Context, in *UpdateNodeTaintsRequest, opts ...grpc.CallOption) (*UpdateNodeTaintsResponse, error)
	//* cluster credential management
	GetClusterCredential(ctx context.Context, in *GetClusterCredentialReq, opts ...grpc.CallOption) (*GetClusterCredentialResp, error)
	UpdateClusterCredential(ctx context.Context, in *UpdateClusterCredentialReq, opts ...grpc.CallOption) (*UpdateClusterCredentialResp, error)
	DeleteClusterCredential(ctx context.Context, in *DeleteClusterCredentialReq, opts ...grpc.CallOption) (*DeleteClusterCredentialResp, error)
	ListClusterCredential(ctx context.Context, in *ListClusterCredentialReq, opts ...grpc.CallOption) (*ListClusterCredentialResp, error)
	//* federation cluster management
	InitFederationCluster(ctx context.Context, in *InitFederationClusterReq, opts ...grpc.CallOption) (*InitFederationClusterResp, error)
	AddFederatedCluster(ctx context.Context, in *AddFederatedClusterReq, opts ...grpc.CallOption) (*AddFederatedClusterResp, error)
	//* namespace management *
	CreateNamespace(ctx context.Context, in *CreateNamespaceReq, opts ...grpc.CallOption) (*CreateNamespaceResp, error)
	UpdateNamespace(ctx context.Context, in *UpdateNamespaceReq, opts ...grpc.CallOption) (*UpdateNamespaceResp, error)
	DeleteNamespace(ctx context.Context, in *DeleteNamespaceReq, opts ...grpc.CallOption) (*DeleteNamespaceResp, error)
	GetNamespace(ctx context.Context, in *GetNamespaceReq, opts ...grpc.CallOption) (*GetNamespaceResp, error)
	ListNamespace(ctx context.Context, in *ListNamespaceReq, opts ...grpc.CallOption) (*ListNamespaceResp, error)
	//* NamespaceQuota management *
	CreateNamespaceQuota(ctx context.Context, in *CreateNamespaceQuotaReq, opts ...grpc.CallOption) (*CreateNamespaceQuotaResp, error)
	UpdateNamespaceQuota(ctx context.Context, in *UpdateNamespaceQuotaReq, opts ...grpc.CallOption) (*UpdateNamespaceQuotaResp, error)
	DeleteNamespaceQuota(ctx context.Context, in *DeleteNamespaceQuotaReq, opts ...grpc.CallOption) (*DeleteNamespaceQuotaResp, error)
	GetNamespaceQuota(ctx context.Context, in *GetNamespaceQuotaReq, opts ...grpc.CallOption) (*GetNamespaceQuotaResp, error)
	ListNamespaceQuota(ctx context.Context, in *ListNamespaceQuotaReq, opts ...grpc.CallOption) (*ListNamespaceQuotaResp, error)
	CreateNamespaceWithQuota(ctx context.Context, in *CreateNamespaceWithQuotaReq, opts ...grpc.CallOption) (*CreateNamespaceWithQuotaResp, error)
	//* project information management *
	CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*CreateProjectResponse, error)
	UpdateProject(ctx context.Context, in *UpdateProjectRequest, opts ...grpc.CallOption) (*UpdateProjectResponse, error)
	DeleteProject(ctx context.Context, in *DeleteProjectRequest, opts ...grpc.CallOption) (*DeleteProjectResponse, error)
	GetProject(ctx context.Context, in *GetProjectRequest, opts ...grpc.CallOption) (*GetProjectResponse, error)
	ListProject(ctx context.Context, in *ListProjectRequest, opts ...grpc.CallOption) (*ListProjectResponse, error)
	//* Cloud information management *
	CreateCloud(ctx context.Context, in *CreateCloudRequest, opts ...grpc.CallOption) (*CreateCloudResponse, error)
	UpdateCloud(ctx context.Context, in *UpdateCloudRequest, opts ...grpc.CallOption) (*UpdateCloudResponse, error)
	DeleteCloud(ctx context.Context, in *DeleteCloudRequest, opts ...grpc.CallOption) (*DeleteCloudResponse, error)
	GetCloud(ctx context.Context, in *GetCloudRequest, opts ...grpc.CallOption) (*GetCloudResponse, error)
	ListCloud(ctx context.Context, in *ListCloudRequest, opts ...grpc.CallOption) (*ListCloudResponse, error)
	//* Cloud VPC information management *
	CreateCloudVPC(ctx context.Context, in *CreateCloudVPCRequest, opts ...grpc.CallOption) (*CreateCloudVPCResponse, error)
	UpdateCloudVPC(ctx context.Context, in *UpdateCloudVPCRequest, opts ...grpc.CallOption) (*UpdateCloudVPCResponse, error)
	DeleteCloudVPC(ctx context.Context, in *DeleteCloudVPCRequest, opts ...grpc.CallOption) (*DeleteCloudVPCResponse, error)
	ListCloudVPC(ctx context.Context, in *ListCloudVPCRequest, opts ...grpc.CallOption) (*ListCloudVPCResponse, error)
	ListCloudRegions(ctx context.Context, in *ListCloudRegionsRequest, opts ...grpc.CallOption) (*ListCloudRegionsResponse, error)
	GetVPCCidr(ctx context.Context, in *GetVPCCidrRequest, opts ...grpc.CallOption) (*GetVPCCidrResponse, error)
	//* NodeGroup information management *
	CreateNodeGroup(ctx context.Context, in *CreateNodeGroupRequest, opts ...grpc.CallOption) (*CreateNodeGroupResponse, error)
	UpdateNodeGroup(ctx context.Context, in *UpdateNodeGroupRequest, opts ...grpc.CallOption) (*UpdateNodeGroupResponse, error)
	DeleteNodeGroup(ctx context.Context, in *DeleteNodeGroupRequest, opts ...grpc.CallOption) (*DeleteNodeGroupResponse, error)
	GetNodeGroup(ctx context.Context, in *GetNodeGroupRequest, opts ...grpc.CallOption) (*GetNodeGroupResponse, error)
	ListNodeGroup(ctx context.Context, in *ListNodeGroupRequest, opts ...grpc.CallOption) (*ListNodeGroupResponse, error)
	MoveNodesToGroup(ctx context.Context, in *MoveNodesToGroupRequest, opts ...grpc.CallOption) (*MoveNodesToGroupResponse, error)
	RemoveNodesFromGroup(ctx context.Context, in *RemoveNodesFromGroupRequest, opts ...grpc.CallOption) (*RemoveNodesFromGroupResponse, error)
	CleanNodesInGroup(ctx context.Context, in *CleanNodesInGroupRequest, opts ...grpc.CallOption) (*CleanNodesInGroupResponse, error)
	CleanNodesInGroupV2(ctx context.Context, in *CleanNodesInGroupV2Request, opts ...grpc.CallOption) (*CleanNodesInGroupV2Response, error)
	ListNodesInGroup(ctx context.Context, in *ListNodesInGroupRequest, opts ...grpc.CallOption) (*ListNodesInGroupResponse, error)
	UpdateGroupDesiredNode(ctx context.Context, in *UpdateGroupDesiredNodeRequest, opts ...grpc.CallOption) (*UpdateGroupDesiredNodeResponse, error)
	UpdateGroupDesiredSize(ctx context.Context, in *UpdateGroupDesiredSizeRequest, opts ...grpc.CallOption) (*UpdateGroupDesiredSizeResponse, error)
	EnableNodeGroupAutoScale(ctx context.Context, in *EnableNodeGroupAutoScaleRequest, opts ...grpc.CallOption) (*EnableNodeGroupAutoScaleResponse, error)
	DisableNodeGroupAutoScale(ctx context.Context, in *DisableNodeGroupAutoScaleRequest, opts ...grpc.CallOption) (*DisableNodeGroupAutoScaleResponse, error)
	//* Task information management *
	CreateTask(ctx context.Context, in *CreateTaskRequest, opts ...grpc.CallOption) (*CreateTaskResponse, error)
	RetryTask(ctx context.Context, in *RetryTaskRequest, opts ...grpc.CallOption) (*RetryTaskResponse, error)
	UpdateTask(ctx context.Context, in *UpdateTaskRequest, opts ...grpc.CallOption) (*UpdateTaskResponse, error)
	DeleteTask(ctx context.Context, in *DeleteTaskRequest, opts ...grpc.CallOption) (*DeleteTaskResponse, error)
	GetTask(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*GetTaskResponse, error)
	ListTask(ctx context.Context, in *ListTaskRequest, opts ...grpc.CallOption) (*ListTaskResponse, error)
	//* ClusterAutoScalingOption information management *
	CreateAutoScalingOption(ctx context.Context, in *CreateAutoScalingOptionRequest, opts ...grpc.CallOption) (*CreateAutoScalingOptionResponse, error)
	UpdateAutoScalingOption(ctx context.Context, in *UpdateAutoScalingOptionRequest, opts ...grpc.CallOption) (*UpdateAutoScalingOptionResponse, error)
	DeleteAutoScalingOption(ctx context.Context, in *DeleteAutoScalingOptionRequest, opts ...grpc.CallOption) (*DeleteAutoScalingOptionResponse, error)
	GetAutoScalingOption(ctx context.Context, in *GetAutoScalingOptionRequest, opts ...grpc.CallOption) (*GetAutoScalingOptionResponse, error)
	ListAutoScalingOption(ctx context.Context, in *ListAutoScalingOptionRequest, opts ...grpc.CallOption) (*ListAutoScalingOptionResponse, error)
	UpdateAutoScalingStatus(ctx context.Context, in *UpdateAutoScalingStatusRequest, opts ...grpc.CallOption) (*UpdateAutoScalingStatusResponse, error)
	// Cloud Account information management
	CreateCloudAccount(ctx context.Context, in *CreateCloudAccountRequest, opts ...grpc.CallOption) (*CreateCloudAccountResponse, error)
	UpdateCloudAccount(ctx context.Context, in *UpdateCloudAccountRequest, opts ...grpc.CallOption) (*UpdateCloudAccountResponse, error)
	DeleteCloudAccount(ctx context.Context, in *DeleteCloudAccountRequest, opts ...grpc.CallOption) (*DeleteCloudAccountResponse, error)
	ListCloudAccount(ctx context.Context, in *ListCloudAccountRequest, opts ...grpc.CallOption) (*ListCloudAccountResponse, error)
	ListCloudAccountToPerm(ctx context.Context, in *ListCloudAccountPermRequest, opts ...grpc.CallOption) (*ListCloudAccountPermResponse, error)
	// Cloud Resource management
	GetCloudRegions(ctx context.Context, in *GetCloudRegionsRequest, opts ...grpc.CallOption) (*GetCloudRegionsResponse, error)
	GetCloudRegionZones(ctx context.Context, in *GetCloudRegionZonesRequest, opts ...grpc.CallOption) (*GetCloudRegionZonesResponse, error)
	ListCloudRegionCluster(ctx context.Context, in *ListCloudRegionClusterRequest, opts ...grpc.CallOption) (*ListCloudRegionClusterResponse, error)
	ListCloudSubnets(ctx context.Context, in *ListCloudSubnetsRequest, opts ...grpc.CallOption) (*ListCloudSubnetsResponse, error)
	ListCloudSecurityGroups(ctx context.Context, in *ListCloudSecurityGroupsRequest, opts ...grpc.CallOption) (*ListCloudSecurityGroupsResponse, error)
	ListCloudInstanceTypes(ctx context.Context, in *ListCloudInstanceTypeRequest, opts ...grpc.CallOption) (*ListCloudInstanceTypeResponse, error)
	ListCloudOsImage(ctx context.Context, in *ListCloudOsImageRequest, opts ...grpc.CallOption) (*ListCloudOsImageResponse, error)
	// Operation logs
	ListOperationLogs(ctx context.Context, in *ListOperationLogsRequest, opts ...grpc.CallOption) (*ListOperationLogsResponse, error)
	// ** ResourceSchema **
	// ListResourceSchema
	ListResourceSchema(ctx context.Context, in *ListResourceSchemaRequest, opts ...grpc.CallOption) (*CommonListResp, error)
	// GetResourceSchema
	GetResourceSchema(ctx context.Context, in *GetResourceSchemaRequest, opts ...grpc.CallOption) (*CommonResp, error)
	// Perm interface
	QueryPermByActionID(ctx context.Context, in *QueryPermByActionIDRequest, opts ...grpc.CallOption) (*QueryPermByActionIDResponse, error)
	// third party
	// list bk cloud
	ListBKCloud(ctx context.Context, in *ListBKCloudRequest, opts ...grpc.CallOption) (*CommonListResp, error)
	ListCCTopology(ctx context.Context, in *ListCCTopologyRequest, opts ...grpc.CallOption) (*CommonResp, error)
}

type clusterManagerClient struct {
	cc *grpc.ClientConn
}

func NewClusterManagerClient(cc *grpc.ClientConn) ClusterManagerClient {
	return &clusterManagerClient{cc}
}

func (c *clusterManagerClient) CreateCluster(ctx context.Context, in *CreateClusterReq, opts ...grpc.CallOption) (*CreateClusterResp, error) {
	out := new(CreateClusterResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CreateCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) RetryCreateClusterTask(ctx context.Context, in *RetryCreateClusterReq, opts ...grpc.CallOption) (*RetryCreateClusterResp, error) {
	out := new(RetryCreateClusterResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/RetryCreateClusterTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CheckCloudKubeConfig(ctx context.Context, in *KubeConfigReq, opts ...grpc.CallOption) (*KubeConfigResp, error) {
	out := new(KubeConfigResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CheckCloudKubeConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ImportCluster(ctx context.Context, in *ImportClusterReq, opts ...grpc.CallOption) (*ImportClusterResp, error) {
	out := new(ImportClusterResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ImportCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateCluster(ctx context.Context, in *UpdateClusterReq, opts ...grpc.CallOption) (*UpdateClusterResp, error) {
	out := new(UpdateClusterResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) AddNodesToCluster(ctx context.Context, in *AddNodesRequest, opts ...grpc.CallOption) (*AddNodesResponse, error) {
	out := new(AddNodesResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/AddNodesToCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteNodesFromCluster(ctx context.Context, in *DeleteNodesRequest, opts ...grpc.CallOption) (*DeleteNodesResponse, error) {
	out := new(DeleteNodesResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteNodesFromCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListNodesInCluster(ctx context.Context, in *ListNodesInClusterRequest, opts ...grpc.CallOption) (*ListNodesInClusterResponse, error) {
	out := new(ListNodesInClusterResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListNodesInCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListMastersInCluster(ctx context.Context, in *ListMastersInClusterRequest, opts ...grpc.CallOption) (*ListMastersInClusterResponse, error) {
	out := new(ListMastersInClusterResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListMastersInCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteCluster(ctx context.Context, in *DeleteClusterReq, opts ...grpc.CallOption) (*DeleteClusterResp, error) {
	out := new(DeleteClusterResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetCluster(ctx context.Context, in *GetClusterReq, opts ...grpc.CallOption) (*GetClusterResp, error) {
	out := new(GetClusterResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListCluster(ctx context.Context, in *ListClusterReq, opts ...grpc.CallOption) (*ListClusterResp, error) {
	out := new(ListClusterResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListCommonCluster(ctx context.Context, in *ListCommonClusterReq, opts ...grpc.CallOption) (*ListCommonClusterResp, error) {
	out := new(ListCommonClusterResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListCommonCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetNode(ctx context.Context, in *GetNodeRequest, opts ...grpc.CallOption) (*GetNodeResponse, error) {
	out := new(GetNodeResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateNode(ctx context.Context, in *UpdateNodeRequest, opts ...grpc.CallOption) (*UpdateNodeResponse, error) {
	out := new(UpdateNodeResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CheckNodeInCluster(ctx context.Context, in *CheckNodesRequest, opts ...grpc.CallOption) (*CheckNodesResponse, error) {
	out := new(CheckNodesResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CheckNodeInCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CordonNode(ctx context.Context, in *CordonNodeRequest, opts ...grpc.CallOption) (*CordonNodeResponse, error) {
	out := new(CordonNodeResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CordonNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UnCordonNode(ctx context.Context, in *UnCordonNodeRequest, opts ...grpc.CallOption) (*UnCordonNodeResponse, error) {
	out := new(UnCordonNodeResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UnCordonNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DrainNode(ctx context.Context, in *DrainNodeRequest, opts ...grpc.CallOption) (*DrainNodeResponse, error) {
	out := new(DrainNodeResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DrainNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateNodeLabels(ctx context.Context, in *UpdateNodeLabelsRequest, opts ...grpc.CallOption) (*UpdateNodeLabelsResponse, error) {
	out := new(UpdateNodeLabelsResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateNodeLabels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateNodeTaints(ctx context.Context, in *UpdateNodeTaintsRequest, opts ...grpc.CallOption) (*UpdateNodeTaintsResponse, error) {
	out := new(UpdateNodeTaintsResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateNodeTaints", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetClusterCredential(ctx context.Context, in *GetClusterCredentialReq, opts ...grpc.CallOption) (*GetClusterCredentialResp, error) {
	out := new(GetClusterCredentialResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetClusterCredential", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateClusterCredential(ctx context.Context, in *UpdateClusterCredentialReq, opts ...grpc.CallOption) (*UpdateClusterCredentialResp, error) {
	out := new(UpdateClusterCredentialResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateClusterCredential", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteClusterCredential(ctx context.Context, in *DeleteClusterCredentialReq, opts ...grpc.CallOption) (*DeleteClusterCredentialResp, error) {
	out := new(DeleteClusterCredentialResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteClusterCredential", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListClusterCredential(ctx context.Context, in *ListClusterCredentialReq, opts ...grpc.CallOption) (*ListClusterCredentialResp, error) {
	out := new(ListClusterCredentialResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListClusterCredential", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) InitFederationCluster(ctx context.Context, in *InitFederationClusterReq, opts ...grpc.CallOption) (*InitFederationClusterResp, error) {
	out := new(InitFederationClusterResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/InitFederationCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) AddFederatedCluster(ctx context.Context, in *AddFederatedClusterReq, opts ...grpc.CallOption) (*AddFederatedClusterResp, error) {
	out := new(AddFederatedClusterResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/AddFederatedCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CreateNamespace(ctx context.Context, in *CreateNamespaceReq, opts ...grpc.CallOption) (*CreateNamespaceResp, error) {
	out := new(CreateNamespaceResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CreateNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateNamespace(ctx context.Context, in *UpdateNamespaceReq, opts ...grpc.CallOption) (*UpdateNamespaceResp, error) {
	out := new(UpdateNamespaceResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteNamespace(ctx context.Context, in *DeleteNamespaceReq, opts ...grpc.CallOption) (*DeleteNamespaceResp, error) {
	out := new(DeleteNamespaceResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetNamespace(ctx context.Context, in *GetNamespaceReq, opts ...grpc.CallOption) (*GetNamespaceResp, error) {
	out := new(GetNamespaceResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListNamespace(ctx context.Context, in *ListNamespaceReq, opts ...grpc.CallOption) (*ListNamespaceResp, error) {
	out := new(ListNamespaceResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CreateNamespaceQuota(ctx context.Context, in *CreateNamespaceQuotaReq, opts ...grpc.CallOption) (*CreateNamespaceQuotaResp, error) {
	out := new(CreateNamespaceQuotaResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CreateNamespaceQuota", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateNamespaceQuota(ctx context.Context, in *UpdateNamespaceQuotaReq, opts ...grpc.CallOption) (*UpdateNamespaceQuotaResp, error) {
	out := new(UpdateNamespaceQuotaResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateNamespaceQuota", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteNamespaceQuota(ctx context.Context, in *DeleteNamespaceQuotaReq, opts ...grpc.CallOption) (*DeleteNamespaceQuotaResp, error) {
	out := new(DeleteNamespaceQuotaResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteNamespaceQuota", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetNamespaceQuota(ctx context.Context, in *GetNamespaceQuotaReq, opts ...grpc.CallOption) (*GetNamespaceQuotaResp, error) {
	out := new(GetNamespaceQuotaResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetNamespaceQuota", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListNamespaceQuota(ctx context.Context, in *ListNamespaceQuotaReq, opts ...grpc.CallOption) (*ListNamespaceQuotaResp, error) {
	out := new(ListNamespaceQuotaResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListNamespaceQuota", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CreateNamespaceWithQuota(ctx context.Context, in *CreateNamespaceWithQuotaReq, opts ...grpc.CallOption) (*CreateNamespaceWithQuotaResp, error) {
	out := new(CreateNamespaceWithQuotaResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CreateNamespaceWithQuota", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*CreateProjectResponse, error) {
	out := new(CreateProjectResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CreateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateProject(ctx context.Context, in *UpdateProjectRequest, opts ...grpc.CallOption) (*UpdateProjectResponse, error) {
	out := new(UpdateProjectResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteProject(ctx context.Context, in *DeleteProjectRequest, opts ...grpc.CallOption) (*DeleteProjectResponse, error) {
	out := new(DeleteProjectResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetProject(ctx context.Context, in *GetProjectRequest, opts ...grpc.CallOption) (*GetProjectResponse, error) {
	out := new(GetProjectResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListProject(ctx context.Context, in *ListProjectRequest, opts ...grpc.CallOption) (*ListProjectResponse, error) {
	out := new(ListProjectResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CreateCloud(ctx context.Context, in *CreateCloudRequest, opts ...grpc.CallOption) (*CreateCloudResponse, error) {
	out := new(CreateCloudResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CreateCloud", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateCloud(ctx context.Context, in *UpdateCloudRequest, opts ...grpc.CallOption) (*UpdateCloudResponse, error) {
	out := new(UpdateCloudResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateCloud", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteCloud(ctx context.Context, in *DeleteCloudRequest, opts ...grpc.CallOption) (*DeleteCloudResponse, error) {
	out := new(DeleteCloudResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteCloud", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetCloud(ctx context.Context, in *GetCloudRequest, opts ...grpc.CallOption) (*GetCloudResponse, error) {
	out := new(GetCloudResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetCloud", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListCloud(ctx context.Context, in *ListCloudRequest, opts ...grpc.CallOption) (*ListCloudResponse, error) {
	out := new(ListCloudResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListCloud", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CreateCloudVPC(ctx context.Context, in *CreateCloudVPCRequest, opts ...grpc.CallOption) (*CreateCloudVPCResponse, error) {
	out := new(CreateCloudVPCResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CreateCloudVPC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateCloudVPC(ctx context.Context, in *UpdateCloudVPCRequest, opts ...grpc.CallOption) (*UpdateCloudVPCResponse, error) {
	out := new(UpdateCloudVPCResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateCloudVPC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteCloudVPC(ctx context.Context, in *DeleteCloudVPCRequest, opts ...grpc.CallOption) (*DeleteCloudVPCResponse, error) {
	out := new(DeleteCloudVPCResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteCloudVPC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListCloudVPC(ctx context.Context, in *ListCloudVPCRequest, opts ...grpc.CallOption) (*ListCloudVPCResponse, error) {
	out := new(ListCloudVPCResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListCloudVPC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListCloudRegions(ctx context.Context, in *ListCloudRegionsRequest, opts ...grpc.CallOption) (*ListCloudRegionsResponse, error) {
	out := new(ListCloudRegionsResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListCloudRegions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetVPCCidr(ctx context.Context, in *GetVPCCidrRequest, opts ...grpc.CallOption) (*GetVPCCidrResponse, error) {
	out := new(GetVPCCidrResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetVPCCidr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CreateNodeGroup(ctx context.Context, in *CreateNodeGroupRequest, opts ...grpc.CallOption) (*CreateNodeGroupResponse, error) {
	out := new(CreateNodeGroupResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CreateNodeGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateNodeGroup(ctx context.Context, in *UpdateNodeGroupRequest, opts ...grpc.CallOption) (*UpdateNodeGroupResponse, error) {
	out := new(UpdateNodeGroupResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateNodeGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteNodeGroup(ctx context.Context, in *DeleteNodeGroupRequest, opts ...grpc.CallOption) (*DeleteNodeGroupResponse, error) {
	out := new(DeleteNodeGroupResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteNodeGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetNodeGroup(ctx context.Context, in *GetNodeGroupRequest, opts ...grpc.CallOption) (*GetNodeGroupResponse, error) {
	out := new(GetNodeGroupResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetNodeGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListNodeGroup(ctx context.Context, in *ListNodeGroupRequest, opts ...grpc.CallOption) (*ListNodeGroupResponse, error) {
	out := new(ListNodeGroupResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListNodeGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) MoveNodesToGroup(ctx context.Context, in *MoveNodesToGroupRequest, opts ...grpc.CallOption) (*MoveNodesToGroupResponse, error) {
	out := new(MoveNodesToGroupResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/MoveNodesToGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) RemoveNodesFromGroup(ctx context.Context, in *RemoveNodesFromGroupRequest, opts ...grpc.CallOption) (*RemoveNodesFromGroupResponse, error) {
	out := new(RemoveNodesFromGroupResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/RemoveNodesFromGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CleanNodesInGroup(ctx context.Context, in *CleanNodesInGroupRequest, opts ...grpc.CallOption) (*CleanNodesInGroupResponse, error) {
	out := new(CleanNodesInGroupResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CleanNodesInGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CleanNodesInGroupV2(ctx context.Context, in *CleanNodesInGroupV2Request, opts ...grpc.CallOption) (*CleanNodesInGroupV2Response, error) {
	out := new(CleanNodesInGroupV2Response)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CleanNodesInGroupV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListNodesInGroup(ctx context.Context, in *ListNodesInGroupRequest, opts ...grpc.CallOption) (*ListNodesInGroupResponse, error) {
	out := new(ListNodesInGroupResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListNodesInGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateGroupDesiredNode(ctx context.Context, in *UpdateGroupDesiredNodeRequest, opts ...grpc.CallOption) (*UpdateGroupDesiredNodeResponse, error) {
	out := new(UpdateGroupDesiredNodeResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateGroupDesiredNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateGroupDesiredSize(ctx context.Context, in *UpdateGroupDesiredSizeRequest, opts ...grpc.CallOption) (*UpdateGroupDesiredSizeResponse, error) {
	out := new(UpdateGroupDesiredSizeResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateGroupDesiredSize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) EnableNodeGroupAutoScale(ctx context.Context, in *EnableNodeGroupAutoScaleRequest, opts ...grpc.CallOption) (*EnableNodeGroupAutoScaleResponse, error) {
	out := new(EnableNodeGroupAutoScaleResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/EnableNodeGroupAutoScale", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DisableNodeGroupAutoScale(ctx context.Context, in *DisableNodeGroupAutoScaleRequest, opts ...grpc.CallOption) (*DisableNodeGroupAutoScaleResponse, error) {
	out := new(DisableNodeGroupAutoScaleResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DisableNodeGroupAutoScale", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CreateTask(ctx context.Context, in *CreateTaskRequest, opts ...grpc.CallOption) (*CreateTaskResponse, error) {
	out := new(CreateTaskResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CreateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) RetryTask(ctx context.Context, in *RetryTaskRequest, opts ...grpc.CallOption) (*RetryTaskResponse, error) {
	out := new(RetryTaskResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/RetryTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateTask(ctx context.Context, in *UpdateTaskRequest, opts ...grpc.CallOption) (*UpdateTaskResponse, error) {
	out := new(UpdateTaskResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteTask(ctx context.Context, in *DeleteTaskRequest, opts ...grpc.CallOption) (*DeleteTaskResponse, error) {
	out := new(DeleteTaskResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetTask(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*GetTaskResponse, error) {
	out := new(GetTaskResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListTask(ctx context.Context, in *ListTaskRequest, opts ...grpc.CallOption) (*ListTaskResponse, error) {
	out := new(ListTaskResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CreateAutoScalingOption(ctx context.Context, in *CreateAutoScalingOptionRequest, opts ...grpc.CallOption) (*CreateAutoScalingOptionResponse, error) {
	out := new(CreateAutoScalingOptionResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CreateAutoScalingOption", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateAutoScalingOption(ctx context.Context, in *UpdateAutoScalingOptionRequest, opts ...grpc.CallOption) (*UpdateAutoScalingOptionResponse, error) {
	out := new(UpdateAutoScalingOptionResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateAutoScalingOption", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteAutoScalingOption(ctx context.Context, in *DeleteAutoScalingOptionRequest, opts ...grpc.CallOption) (*DeleteAutoScalingOptionResponse, error) {
	out := new(DeleteAutoScalingOptionResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteAutoScalingOption", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetAutoScalingOption(ctx context.Context, in *GetAutoScalingOptionRequest, opts ...grpc.CallOption) (*GetAutoScalingOptionResponse, error) {
	out := new(GetAutoScalingOptionResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetAutoScalingOption", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListAutoScalingOption(ctx context.Context, in *ListAutoScalingOptionRequest, opts ...grpc.CallOption) (*ListAutoScalingOptionResponse, error) {
	out := new(ListAutoScalingOptionResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListAutoScalingOption", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateAutoScalingStatus(ctx context.Context, in *UpdateAutoScalingStatusRequest, opts ...grpc.CallOption) (*UpdateAutoScalingStatusResponse, error) {
	out := new(UpdateAutoScalingStatusResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateAutoScalingStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CreateCloudAccount(ctx context.Context, in *CreateCloudAccountRequest, opts ...grpc.CallOption) (*CreateCloudAccountResponse, error) {
	out := new(CreateCloudAccountResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CreateCloudAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateCloudAccount(ctx context.Context, in *UpdateCloudAccountRequest, opts ...grpc.CallOption) (*UpdateCloudAccountResponse, error) {
	out := new(UpdateCloudAccountResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateCloudAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteCloudAccount(ctx context.Context, in *DeleteCloudAccountRequest, opts ...grpc.CallOption) (*DeleteCloudAccountResponse, error) {
	out := new(DeleteCloudAccountResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteCloudAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListCloudAccount(ctx context.Context, in *ListCloudAccountRequest, opts ...grpc.CallOption) (*ListCloudAccountResponse, error) {
	out := new(ListCloudAccountResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListCloudAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListCloudAccountToPerm(ctx context.Context, in *ListCloudAccountPermRequest, opts ...grpc.CallOption) (*ListCloudAccountPermResponse, error) {
	out := new(ListCloudAccountPermResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListCloudAccountToPerm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetCloudRegions(ctx context.Context, in *GetCloudRegionsRequest, opts ...grpc.CallOption) (*GetCloudRegionsResponse, error) {
	out := new(GetCloudRegionsResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetCloudRegions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetCloudRegionZones(ctx context.Context, in *GetCloudRegionZonesRequest, opts ...grpc.CallOption) (*GetCloudRegionZonesResponse, error) {
	out := new(GetCloudRegionZonesResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetCloudRegionZones", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListCloudRegionCluster(ctx context.Context, in *ListCloudRegionClusterRequest, opts ...grpc.CallOption) (*ListCloudRegionClusterResponse, error) {
	out := new(ListCloudRegionClusterResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListCloudRegionCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListCloudSubnets(ctx context.Context, in *ListCloudSubnetsRequest, opts ...grpc.CallOption) (*ListCloudSubnetsResponse, error) {
	out := new(ListCloudSubnetsResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListCloudSubnets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListCloudSecurityGroups(ctx context.Context, in *ListCloudSecurityGroupsRequest, opts ...grpc.CallOption) (*ListCloudSecurityGroupsResponse, error) {
	out := new(ListCloudSecurityGroupsResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListCloudSecurityGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListCloudInstanceTypes(ctx context.Context, in *ListCloudInstanceTypeRequest, opts ...grpc.CallOption) (*ListCloudInstanceTypeResponse, error) {
	out := new(ListCloudInstanceTypeResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListCloudInstanceTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListCloudOsImage(ctx context.Context, in *ListCloudOsImageRequest, opts ...grpc.CallOption) (*ListCloudOsImageResponse, error) {
	out := new(ListCloudOsImageResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListCloudOsImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListOperationLogs(ctx context.Context, in *ListOperationLogsRequest, opts ...grpc.CallOption) (*ListOperationLogsResponse, error) {
	out := new(ListOperationLogsResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListOperationLogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListResourceSchema(ctx context.Context, in *ListResourceSchemaRequest, opts ...grpc.CallOption) (*CommonListResp, error) {
	out := new(CommonListResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListResourceSchema", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetResourceSchema(ctx context.Context, in *GetResourceSchemaRequest, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetResourceSchema", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) QueryPermByActionID(ctx context.Context, in *QueryPermByActionIDRequest, opts ...grpc.CallOption) (*QueryPermByActionIDResponse, error) {
	out := new(QueryPermByActionIDResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/QueryPermByActionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListBKCloud(ctx context.Context, in *ListBKCloudRequest, opts ...grpc.CallOption) (*CommonListResp, error) {
	out := new(CommonListResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListBKCloud", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListCCTopology(ctx context.Context, in *ListCCTopologyRequest, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListCCTopology", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClusterManagerServer is the server API for ClusterManager service.
type ClusterManagerServer interface {
	//* cluster management
	CreateCluster(context.Context, *CreateClusterReq) (*CreateClusterResp, error)
	RetryCreateClusterTask(context.Context, *RetryCreateClusterReq) (*RetryCreateClusterResp, error)
	CheckCloudKubeConfig(context.Context, *KubeConfigReq) (*KubeConfigResp, error)
	ImportCluster(context.Context, *ImportClusterReq) (*ImportClusterResp, error)
	UpdateCluster(context.Context, *UpdateClusterReq) (*UpdateClusterResp, error)
	AddNodesToCluster(context.Context, *AddNodesRequest) (*AddNodesResponse, error)
	DeleteNodesFromCluster(context.Context, *DeleteNodesRequest) (*DeleteNodesResponse, error)
	ListNodesInCluster(context.Context, *ListNodesInClusterRequest) (*ListNodesInClusterResponse, error)
	ListMastersInCluster(context.Context, *ListMastersInClusterRequest) (*ListMastersInClusterResponse, error)
	DeleteCluster(context.Context, *DeleteClusterReq) (*DeleteClusterResp, error)
	GetCluster(context.Context, *GetClusterReq) (*GetClusterResp, error)
	ListCluster(context.Context, *ListClusterReq) (*ListClusterResp, error)
	ListCommonCluster(context.Context, *ListCommonClusterReq) (*ListCommonClusterResp, error)
	//* node management
	GetNode(context.Context, *GetNodeRequest) (*GetNodeResponse, error)
	UpdateNode(context.Context, *UpdateNodeRequest) (*UpdateNodeResponse, error)
	CheckNodeInCluster(context.Context, *CheckNodesRequest) (*CheckNodesResponse, error)
	CordonNode(context.Context, *CordonNodeRequest) (*CordonNodeResponse, error)
	UnCordonNode(context.Context, *UnCordonNodeRequest) (*UnCordonNodeResponse, error)
	DrainNode(context.Context, *DrainNodeRequest) (*DrainNodeResponse, error)
	UpdateNodeLabels(context.Context, *UpdateNodeLabelsRequest) (*UpdateNodeLabelsResponse, error)
	UpdateNodeTaints(context.Context, *UpdateNodeTaintsRequest) (*UpdateNodeTaintsResponse, error)
	//* cluster credential management
	GetClusterCredential(context.Context, *GetClusterCredentialReq) (*GetClusterCredentialResp, error)
	UpdateClusterCredential(context.Context, *UpdateClusterCredentialReq) (*UpdateClusterCredentialResp, error)
	DeleteClusterCredential(context.Context, *DeleteClusterCredentialReq) (*DeleteClusterCredentialResp, error)
	ListClusterCredential(context.Context, *ListClusterCredentialReq) (*ListClusterCredentialResp, error)
	//* federation cluster management
	InitFederationCluster(context.Context, *InitFederationClusterReq) (*InitFederationClusterResp, error)
	AddFederatedCluster(context.Context, *AddFederatedClusterReq) (*AddFederatedClusterResp, error)
	//* namespace management *
	CreateNamespace(context.Context, *CreateNamespaceReq) (*CreateNamespaceResp, error)
	UpdateNamespace(context.Context, *UpdateNamespaceReq) (*UpdateNamespaceResp, error)
	DeleteNamespace(context.Context, *DeleteNamespaceReq) (*DeleteNamespaceResp, error)
	GetNamespace(context.Context, *GetNamespaceReq) (*GetNamespaceResp, error)
	ListNamespace(context.Context, *ListNamespaceReq) (*ListNamespaceResp, error)
	//* NamespaceQuota management *
	CreateNamespaceQuota(context.Context, *CreateNamespaceQuotaReq) (*CreateNamespaceQuotaResp, error)
	UpdateNamespaceQuota(context.Context, *UpdateNamespaceQuotaReq) (*UpdateNamespaceQuotaResp, error)
	DeleteNamespaceQuota(context.Context, *DeleteNamespaceQuotaReq) (*DeleteNamespaceQuotaResp, error)
	GetNamespaceQuota(context.Context, *GetNamespaceQuotaReq) (*GetNamespaceQuotaResp, error)
	ListNamespaceQuota(context.Context, *ListNamespaceQuotaReq) (*ListNamespaceQuotaResp, error)
	CreateNamespaceWithQuota(context.Context, *CreateNamespaceWithQuotaReq) (*CreateNamespaceWithQuotaResp, error)
	//* project information management *
	CreateProject(context.Context, *CreateProjectRequest) (*CreateProjectResponse, error)
	UpdateProject(context.Context, *UpdateProjectRequest) (*UpdateProjectResponse, error)
	DeleteProject(context.Context, *DeleteProjectRequest) (*DeleteProjectResponse, error)
	GetProject(context.Context, *GetProjectRequest) (*GetProjectResponse, error)
	ListProject(context.Context, *ListProjectRequest) (*ListProjectResponse, error)
	//* Cloud information management *
	CreateCloud(context.Context, *CreateCloudRequest) (*CreateCloudResponse, error)
	UpdateCloud(context.Context, *UpdateCloudRequest) (*UpdateCloudResponse, error)
	DeleteCloud(context.Context, *DeleteCloudRequest) (*DeleteCloudResponse, error)
	GetCloud(context.Context, *GetCloudRequest) (*GetCloudResponse, error)
	ListCloud(context.Context, *ListCloudRequest) (*ListCloudResponse, error)
	//* Cloud VPC information management *
	CreateCloudVPC(context.Context, *CreateCloudVPCRequest) (*CreateCloudVPCResponse, error)
	UpdateCloudVPC(context.Context, *UpdateCloudVPCRequest) (*UpdateCloudVPCResponse, error)
	DeleteCloudVPC(context.Context, *DeleteCloudVPCRequest) (*DeleteCloudVPCResponse, error)
	ListCloudVPC(context.Context, *ListCloudVPCRequest) (*ListCloudVPCResponse, error)
	ListCloudRegions(context.Context, *ListCloudRegionsRequest) (*ListCloudRegionsResponse, error)
	GetVPCCidr(context.Context, *GetVPCCidrRequest) (*GetVPCCidrResponse, error)
	//* NodeGroup information management *
	CreateNodeGroup(context.Context, *CreateNodeGroupRequest) (*CreateNodeGroupResponse, error)
	UpdateNodeGroup(context.Context, *UpdateNodeGroupRequest) (*UpdateNodeGroupResponse, error)
	DeleteNodeGroup(context.Context, *DeleteNodeGroupRequest) (*DeleteNodeGroupResponse, error)
	GetNodeGroup(context.Context, *GetNodeGroupRequest) (*GetNodeGroupResponse, error)
	ListNodeGroup(context.Context, *ListNodeGroupRequest) (*ListNodeGroupResponse, error)
	MoveNodesToGroup(context.Context, *MoveNodesToGroupRequest) (*MoveNodesToGroupResponse, error)
	RemoveNodesFromGroup(context.Context, *RemoveNodesFromGroupRequest) (*RemoveNodesFromGroupResponse, error)
	CleanNodesInGroup(context.Context, *CleanNodesInGroupRequest) (*CleanNodesInGroupResponse, error)
	CleanNodesInGroupV2(context.Context, *CleanNodesInGroupV2Request) (*CleanNodesInGroupV2Response, error)
	ListNodesInGroup(context.Context, *ListNodesInGroupRequest) (*ListNodesInGroupResponse, error)
	UpdateGroupDesiredNode(context.Context, *UpdateGroupDesiredNodeRequest) (*UpdateGroupDesiredNodeResponse, error)
	UpdateGroupDesiredSize(context.Context, *UpdateGroupDesiredSizeRequest) (*UpdateGroupDesiredSizeResponse, error)
	EnableNodeGroupAutoScale(context.Context, *EnableNodeGroupAutoScaleRequest) (*EnableNodeGroupAutoScaleResponse, error)
	DisableNodeGroupAutoScale(context.Context, *DisableNodeGroupAutoScaleRequest) (*DisableNodeGroupAutoScaleResponse, error)
	//* Task information management *
	CreateTask(context.Context, *CreateTaskRequest) (*CreateTaskResponse, error)
	RetryTask(context.Context, *RetryTaskRequest) (*RetryTaskResponse, error)
	UpdateTask(context.Context, *UpdateTaskRequest) (*UpdateTaskResponse, error)
	DeleteTask(context.Context, *DeleteTaskRequest) (*DeleteTaskResponse, error)
	GetTask(context.Context, *GetTaskRequest) (*GetTaskResponse, error)
	ListTask(context.Context, *ListTaskRequest) (*ListTaskResponse, error)
	//* ClusterAutoScalingOption information management *
	CreateAutoScalingOption(context.Context, *CreateAutoScalingOptionRequest) (*CreateAutoScalingOptionResponse, error)
	UpdateAutoScalingOption(context.Context, *UpdateAutoScalingOptionRequest) (*UpdateAutoScalingOptionResponse, error)
	DeleteAutoScalingOption(context.Context, *DeleteAutoScalingOptionRequest) (*DeleteAutoScalingOptionResponse, error)
	GetAutoScalingOption(context.Context, *GetAutoScalingOptionRequest) (*GetAutoScalingOptionResponse, error)
	ListAutoScalingOption(context.Context, *ListAutoScalingOptionRequest) (*ListAutoScalingOptionResponse, error)
	UpdateAutoScalingStatus(context.Context, *UpdateAutoScalingStatusRequest) (*UpdateAutoScalingStatusResponse, error)
	// Cloud Account information management
	CreateCloudAccount(context.Context, *CreateCloudAccountRequest) (*CreateCloudAccountResponse, error)
	UpdateCloudAccount(context.Context, *UpdateCloudAccountRequest) (*UpdateCloudAccountResponse, error)
	DeleteCloudAccount(context.Context, *DeleteCloudAccountRequest) (*DeleteCloudAccountResponse, error)
	ListCloudAccount(context.Context, *ListCloudAccountRequest) (*ListCloudAccountResponse, error)
	ListCloudAccountToPerm(context.Context, *ListCloudAccountPermRequest) (*ListCloudAccountPermResponse, error)
	// Cloud Resource management
	GetCloudRegions(context.Context, *GetCloudRegionsRequest) (*GetCloudRegionsResponse, error)
	GetCloudRegionZones(context.Context, *GetCloudRegionZonesRequest) (*GetCloudRegionZonesResponse, error)
	ListCloudRegionCluster(context.Context, *ListCloudRegionClusterRequest) (*ListCloudRegionClusterResponse, error)
	ListCloudSubnets(context.Context, *ListCloudSubnetsRequest) (*ListCloudSubnetsResponse, error)
	ListCloudSecurityGroups(context.Context, *ListCloudSecurityGroupsRequest) (*ListCloudSecurityGroupsResponse, error)
	ListCloudInstanceTypes(context.Context, *ListCloudInstanceTypeRequest) (*ListCloudInstanceTypeResponse, error)
	ListCloudOsImage(context.Context, *ListCloudOsImageRequest) (*ListCloudOsImageResponse, error)
	// Operation logs
	ListOperationLogs(context.Context, *ListOperationLogsRequest) (*ListOperationLogsResponse, error)
	// ** ResourceSchema **
	// ListResourceSchema
	ListResourceSchema(context.Context, *ListResourceSchemaRequest) (*CommonListResp, error)
	// GetResourceSchema
	GetResourceSchema(context.Context, *GetResourceSchemaRequest) (*CommonResp, error)
	// Perm interface
	QueryPermByActionID(context.Context, *QueryPermByActionIDRequest) (*QueryPermByActionIDResponse, error)
	// third party
	// list bk cloud
	ListBKCloud(context.Context, *ListBKCloudRequest) (*CommonListResp, error)
	ListCCTopology(context.Context, *ListCCTopologyRequest) (*CommonResp, error)
}

// UnimplementedClusterManagerServer can be embedded to have forward compatible implementations.
type UnimplementedClusterManagerServer struct {
}

func (*UnimplementedClusterManagerServer) CreateCluster(ctx context.Context, req *CreateClusterReq) (*CreateClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCluster not implemented")
}
func (*UnimplementedClusterManagerServer) RetryCreateClusterTask(ctx context.Context, req *RetryCreateClusterReq) (*RetryCreateClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetryCreateClusterTask not implemented")
}
func (*UnimplementedClusterManagerServer) CheckCloudKubeConfig(ctx context.Context, req *KubeConfigReq) (*KubeConfigResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckCloudKubeConfig not implemented")
}
func (*UnimplementedClusterManagerServer) ImportCluster(ctx context.Context, req *ImportClusterReq) (*ImportClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportCluster not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateCluster(ctx context.Context, req *UpdateClusterReq) (*UpdateClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCluster not implemented")
}
func (*UnimplementedClusterManagerServer) AddNodesToCluster(ctx context.Context, req *AddNodesRequest) (*AddNodesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddNodesToCluster not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteNodesFromCluster(ctx context.Context, req *DeleteNodesRequest) (*DeleteNodesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNodesFromCluster not implemented")
}
func (*UnimplementedClusterManagerServer) ListNodesInCluster(ctx context.Context, req *ListNodesInClusterRequest) (*ListNodesInClusterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNodesInCluster not implemented")
}
func (*UnimplementedClusterManagerServer) ListMastersInCluster(ctx context.Context, req *ListMastersInClusterRequest) (*ListMastersInClusterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMastersInCluster not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteCluster(ctx context.Context, req *DeleteClusterReq) (*DeleteClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCluster not implemented")
}
func (*UnimplementedClusterManagerServer) GetCluster(ctx context.Context, req *GetClusterReq) (*GetClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCluster not implemented")
}
func (*UnimplementedClusterManagerServer) ListCluster(ctx context.Context, req *ListClusterReq) (*ListClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCluster not implemented")
}
func (*UnimplementedClusterManagerServer) ListCommonCluster(ctx context.Context, req *ListCommonClusterReq) (*ListCommonClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCommonCluster not implemented")
}
func (*UnimplementedClusterManagerServer) GetNode(ctx context.Context, req *GetNodeRequest) (*GetNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNode not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateNode(ctx context.Context, req *UpdateNodeRequest) (*UpdateNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNode not implemented")
}
func (*UnimplementedClusterManagerServer) CheckNodeInCluster(ctx context.Context, req *CheckNodesRequest) (*CheckNodesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckNodeInCluster not implemented")
}
func (*UnimplementedClusterManagerServer) CordonNode(ctx context.Context, req *CordonNodeRequest) (*CordonNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CordonNode not implemented")
}
func (*UnimplementedClusterManagerServer) UnCordonNode(ctx context.Context, req *UnCordonNodeRequest) (*UnCordonNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnCordonNode not implemented")
}
func (*UnimplementedClusterManagerServer) DrainNode(ctx context.Context, req *DrainNodeRequest) (*DrainNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DrainNode not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateNodeLabels(ctx context.Context, req *UpdateNodeLabelsRequest) (*UpdateNodeLabelsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNodeLabels not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateNodeTaints(ctx context.Context, req *UpdateNodeTaintsRequest) (*UpdateNodeTaintsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNodeTaints not implemented")
}
func (*UnimplementedClusterManagerServer) GetClusterCredential(ctx context.Context, req *GetClusterCredentialReq) (*GetClusterCredentialResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetClusterCredential not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateClusterCredential(ctx context.Context, req *UpdateClusterCredentialReq) (*UpdateClusterCredentialResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateClusterCredential not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteClusterCredential(ctx context.Context, req *DeleteClusterCredentialReq) (*DeleteClusterCredentialResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteClusterCredential not implemented")
}
func (*UnimplementedClusterManagerServer) ListClusterCredential(ctx context.Context, req *ListClusterCredentialReq) (*ListClusterCredentialResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListClusterCredential not implemented")
}
func (*UnimplementedClusterManagerServer) InitFederationCluster(ctx context.Context, req *InitFederationClusterReq) (*InitFederationClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitFederationCluster not implemented")
}
func (*UnimplementedClusterManagerServer) AddFederatedCluster(ctx context.Context, req *AddFederatedClusterReq) (*AddFederatedClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFederatedCluster not implemented")
}
func (*UnimplementedClusterManagerServer) CreateNamespace(ctx context.Context, req *CreateNamespaceReq) (*CreateNamespaceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNamespace not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateNamespace(ctx context.Context, req *UpdateNamespaceReq) (*UpdateNamespaceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNamespace not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteNamespace(ctx context.Context, req *DeleteNamespaceReq) (*DeleteNamespaceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNamespace not implemented")
}
func (*UnimplementedClusterManagerServer) GetNamespace(ctx context.Context, req *GetNamespaceReq) (*GetNamespaceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNamespace not implemented")
}
func (*UnimplementedClusterManagerServer) ListNamespace(ctx context.Context, req *ListNamespaceReq) (*ListNamespaceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNamespace not implemented")
}
func (*UnimplementedClusterManagerServer) CreateNamespaceQuota(ctx context.Context, req *CreateNamespaceQuotaReq) (*CreateNamespaceQuotaResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNamespaceQuota not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateNamespaceQuota(ctx context.Context, req *UpdateNamespaceQuotaReq) (*UpdateNamespaceQuotaResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNamespaceQuota not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteNamespaceQuota(ctx context.Context, req *DeleteNamespaceQuotaReq) (*DeleteNamespaceQuotaResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNamespaceQuota not implemented")
}
func (*UnimplementedClusterManagerServer) GetNamespaceQuota(ctx context.Context, req *GetNamespaceQuotaReq) (*GetNamespaceQuotaResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNamespaceQuota not implemented")
}
func (*UnimplementedClusterManagerServer) ListNamespaceQuota(ctx context.Context, req *ListNamespaceQuotaReq) (*ListNamespaceQuotaResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNamespaceQuota not implemented")
}
func (*UnimplementedClusterManagerServer) CreateNamespaceWithQuota(ctx context.Context, req *CreateNamespaceWithQuotaReq) (*CreateNamespaceWithQuotaResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNamespaceWithQuota not implemented")
}
func (*UnimplementedClusterManagerServer) CreateProject(ctx context.Context, req *CreateProjectRequest) (*CreateProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProject not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateProject(ctx context.Context, req *UpdateProjectRequest) (*UpdateProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProject not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteProject(ctx context.Context, req *DeleteProjectRequest) (*DeleteProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProject not implemented")
}
func (*UnimplementedClusterManagerServer) GetProject(ctx context.Context, req *GetProjectRequest) (*GetProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProject not implemented")
}
func (*UnimplementedClusterManagerServer) ListProject(ctx context.Context, req *ListProjectRequest) (*ListProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProject not implemented")
}
func (*UnimplementedClusterManagerServer) CreateCloud(ctx context.Context, req *CreateCloudRequest) (*CreateCloudResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCloud not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateCloud(ctx context.Context, req *UpdateCloudRequest) (*UpdateCloudResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCloud not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteCloud(ctx context.Context, req *DeleteCloudRequest) (*DeleteCloudResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCloud not implemented")
}
func (*UnimplementedClusterManagerServer) GetCloud(ctx context.Context, req *GetCloudRequest) (*GetCloudResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCloud not implemented")
}
func (*UnimplementedClusterManagerServer) ListCloud(ctx context.Context, req *ListCloudRequest) (*ListCloudResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCloud not implemented")
}
func (*UnimplementedClusterManagerServer) CreateCloudVPC(ctx context.Context, req *CreateCloudVPCRequest) (*CreateCloudVPCResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCloudVPC not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateCloudVPC(ctx context.Context, req *UpdateCloudVPCRequest) (*UpdateCloudVPCResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCloudVPC not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteCloudVPC(ctx context.Context, req *DeleteCloudVPCRequest) (*DeleteCloudVPCResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCloudVPC not implemented")
}
func (*UnimplementedClusterManagerServer) ListCloudVPC(ctx context.Context, req *ListCloudVPCRequest) (*ListCloudVPCResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCloudVPC not implemented")
}
func (*UnimplementedClusterManagerServer) ListCloudRegions(ctx context.Context, req *ListCloudRegionsRequest) (*ListCloudRegionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCloudRegions not implemented")
}
func (*UnimplementedClusterManagerServer) GetVPCCidr(ctx context.Context, req *GetVPCCidrRequest) (*GetVPCCidrResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVPCCidr not implemented")
}
func (*UnimplementedClusterManagerServer) CreateNodeGroup(ctx context.Context, req *CreateNodeGroupRequest) (*CreateNodeGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNodeGroup not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateNodeGroup(ctx context.Context, req *UpdateNodeGroupRequest) (*UpdateNodeGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNodeGroup not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteNodeGroup(ctx context.Context, req *DeleteNodeGroupRequest) (*DeleteNodeGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNodeGroup not implemented")
}
func (*UnimplementedClusterManagerServer) GetNodeGroup(ctx context.Context, req *GetNodeGroupRequest) (*GetNodeGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNodeGroup not implemented")
}
func (*UnimplementedClusterManagerServer) ListNodeGroup(ctx context.Context, req *ListNodeGroupRequest) (*ListNodeGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNodeGroup not implemented")
}
func (*UnimplementedClusterManagerServer) MoveNodesToGroup(ctx context.Context, req *MoveNodesToGroupRequest) (*MoveNodesToGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MoveNodesToGroup not implemented")
}
func (*UnimplementedClusterManagerServer) RemoveNodesFromGroup(ctx context.Context, req *RemoveNodesFromGroupRequest) (*RemoveNodesFromGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveNodesFromGroup not implemented")
}
func (*UnimplementedClusterManagerServer) CleanNodesInGroup(ctx context.Context, req *CleanNodesInGroupRequest) (*CleanNodesInGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CleanNodesInGroup not implemented")
}
func (*UnimplementedClusterManagerServer) CleanNodesInGroupV2(ctx context.Context, req *CleanNodesInGroupV2Request) (*CleanNodesInGroupV2Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CleanNodesInGroupV2 not implemented")
}
func (*UnimplementedClusterManagerServer) ListNodesInGroup(ctx context.Context, req *ListNodesInGroupRequest) (*ListNodesInGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNodesInGroup not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateGroupDesiredNode(ctx context.Context, req *UpdateGroupDesiredNodeRequest) (*UpdateGroupDesiredNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGroupDesiredNode not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateGroupDesiredSize(ctx context.Context, req *UpdateGroupDesiredSizeRequest) (*UpdateGroupDesiredSizeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGroupDesiredSize not implemented")
}
func (*UnimplementedClusterManagerServer) EnableNodeGroupAutoScale(ctx context.Context, req *EnableNodeGroupAutoScaleRequest) (*EnableNodeGroupAutoScaleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnableNodeGroupAutoScale not implemented")
}
func (*UnimplementedClusterManagerServer) DisableNodeGroupAutoScale(ctx context.Context, req *DisableNodeGroupAutoScaleRequest) (*DisableNodeGroupAutoScaleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DisableNodeGroupAutoScale not implemented")
}
func (*UnimplementedClusterManagerServer) CreateTask(ctx context.Context, req *CreateTaskRequest) (*CreateTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTask not implemented")
}
func (*UnimplementedClusterManagerServer) RetryTask(ctx context.Context, req *RetryTaskRequest) (*RetryTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetryTask not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateTask(ctx context.Context, req *UpdateTaskRequest) (*UpdateTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTask not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteTask(ctx context.Context, req *DeleteTaskRequest) (*DeleteTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTask not implemented")
}
func (*UnimplementedClusterManagerServer) GetTask(ctx context.Context, req *GetTaskRequest) (*GetTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTask not implemented")
}
func (*UnimplementedClusterManagerServer) ListTask(ctx context.Context, req *ListTaskRequest) (*ListTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTask not implemented")
}
func (*UnimplementedClusterManagerServer) CreateAutoScalingOption(ctx context.Context, req *CreateAutoScalingOptionRequest) (*CreateAutoScalingOptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAutoScalingOption not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateAutoScalingOption(ctx context.Context, req *UpdateAutoScalingOptionRequest) (*UpdateAutoScalingOptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAutoScalingOption not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteAutoScalingOption(ctx context.Context, req *DeleteAutoScalingOptionRequest) (*DeleteAutoScalingOptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAutoScalingOption not implemented")
}
func (*UnimplementedClusterManagerServer) GetAutoScalingOption(ctx context.Context, req *GetAutoScalingOptionRequest) (*GetAutoScalingOptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAutoScalingOption not implemented")
}
func (*UnimplementedClusterManagerServer) ListAutoScalingOption(ctx context.Context, req *ListAutoScalingOptionRequest) (*ListAutoScalingOptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAutoScalingOption not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateAutoScalingStatus(ctx context.Context, req *UpdateAutoScalingStatusRequest) (*UpdateAutoScalingStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAutoScalingStatus not implemented")
}
func (*UnimplementedClusterManagerServer) CreateCloudAccount(ctx context.Context, req *CreateCloudAccountRequest) (*CreateCloudAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCloudAccount not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateCloudAccount(ctx context.Context, req *UpdateCloudAccountRequest) (*UpdateCloudAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCloudAccount not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteCloudAccount(ctx context.Context, req *DeleteCloudAccountRequest) (*DeleteCloudAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCloudAccount not implemented")
}
func (*UnimplementedClusterManagerServer) ListCloudAccount(ctx context.Context, req *ListCloudAccountRequest) (*ListCloudAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCloudAccount not implemented")
}
func (*UnimplementedClusterManagerServer) ListCloudAccountToPerm(ctx context.Context, req *ListCloudAccountPermRequest) (*ListCloudAccountPermResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCloudAccountToPerm not implemented")
}
func (*UnimplementedClusterManagerServer) GetCloudRegions(ctx context.Context, req *GetCloudRegionsRequest) (*GetCloudRegionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCloudRegions not implemented")
}
func (*UnimplementedClusterManagerServer) GetCloudRegionZones(ctx context.Context, req *GetCloudRegionZonesRequest) (*GetCloudRegionZonesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCloudRegionZones not implemented")
}
func (*UnimplementedClusterManagerServer) ListCloudRegionCluster(ctx context.Context, req *ListCloudRegionClusterRequest) (*ListCloudRegionClusterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCloudRegionCluster not implemented")
}
func (*UnimplementedClusterManagerServer) ListCloudSubnets(ctx context.Context, req *ListCloudSubnetsRequest) (*ListCloudSubnetsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCloudSubnets not implemented")
}
func (*UnimplementedClusterManagerServer) ListCloudSecurityGroups(ctx context.Context, req *ListCloudSecurityGroupsRequest) (*ListCloudSecurityGroupsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCloudSecurityGroups not implemented")
}
func (*UnimplementedClusterManagerServer) ListCloudInstanceTypes(ctx context.Context, req *ListCloudInstanceTypeRequest) (*ListCloudInstanceTypeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCloudInstanceTypes not implemented")
}
func (*UnimplementedClusterManagerServer) ListCloudOsImage(ctx context.Context, req *ListCloudOsImageRequest) (*ListCloudOsImageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCloudOsImage not implemented")
}
func (*UnimplementedClusterManagerServer) ListOperationLogs(ctx context.Context, req *ListOperationLogsRequest) (*ListOperationLogsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOperationLogs not implemented")
}
func (*UnimplementedClusterManagerServer) ListResourceSchema(ctx context.Context, req *ListResourceSchemaRequest) (*CommonListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListResourceSchema not implemented")
}
func (*UnimplementedClusterManagerServer) GetResourceSchema(ctx context.Context, req *GetResourceSchemaRequest) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResourceSchema not implemented")
}
func (*UnimplementedClusterManagerServer) QueryPermByActionID(ctx context.Context, req *QueryPermByActionIDRequest) (*QueryPermByActionIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryPermByActionID not implemented")
}
func (*UnimplementedClusterManagerServer) ListBKCloud(ctx context.Context, req *ListBKCloudRequest) (*CommonListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBKCloud not implemented")
}
func (*UnimplementedClusterManagerServer) ListCCTopology(ctx context.Context, req *ListCCTopologyRequest) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCCTopology not implemented")
}

func RegisterClusterManagerServer(s *grpc.Server, srv ClusterManagerServer) {
	s.RegisterService(&_ClusterManager_serviceDesc, srv)
}

func _ClusterManager_CreateCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CreateCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateCluster(ctx, req.(*CreateClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_RetryCreateClusterTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetryCreateClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).RetryCreateClusterTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/RetryCreateClusterTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).RetryCreateClusterTask(ctx, req.(*RetryCreateClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CheckCloudKubeConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KubeConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CheckCloudKubeConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CheckCloudKubeConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CheckCloudKubeConfig(ctx, req.(*KubeConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ImportCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ImportCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ImportCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ImportCluster(ctx, req.(*ImportClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateCluster(ctx, req.(*UpdateClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_AddNodesToCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).AddNodesToCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/AddNodesToCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).AddNodesToCluster(ctx, req.(*AddNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteNodesFromCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteNodesFromCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteNodesFromCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteNodesFromCluster(ctx, req.(*DeleteNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListNodesInCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNodesInClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListNodesInCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListNodesInCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListNodesInCluster(ctx, req.(*ListNodesInClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListMastersInCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMastersInClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListMastersInCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListMastersInCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListMastersInCluster(ctx, req.(*ListMastersInClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteCluster(ctx, req.(*DeleteClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetCluster(ctx, req.(*GetClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListCluster(ctx, req.(*ListClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListCommonCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCommonClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListCommonCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListCommonCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListCommonCluster(ctx, req.(*ListCommonClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetNode(ctx, req.(*GetNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateNode(ctx, req.(*UpdateNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CheckNodeInCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CheckNodeInCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CheckNodeInCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CheckNodeInCluster(ctx, req.(*CheckNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CordonNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CordonNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CordonNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CordonNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CordonNode(ctx, req.(*CordonNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UnCordonNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnCordonNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UnCordonNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UnCordonNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UnCordonNode(ctx, req.(*UnCordonNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DrainNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DrainNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DrainNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DrainNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DrainNode(ctx, req.(*DrainNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateNodeLabels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNodeLabelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateNodeLabels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateNodeLabels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateNodeLabels(ctx, req.(*UpdateNodeLabelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateNodeTaints_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNodeTaintsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateNodeTaints(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateNodeTaints",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateNodeTaints(ctx, req.(*UpdateNodeTaintsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetClusterCredential_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetClusterCredentialReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetClusterCredential(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetClusterCredential",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetClusterCredential(ctx, req.(*GetClusterCredentialReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateClusterCredential_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateClusterCredentialReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateClusterCredential(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateClusterCredential",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateClusterCredential(ctx, req.(*UpdateClusterCredentialReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteClusterCredential_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteClusterCredentialReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteClusterCredential(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteClusterCredential",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteClusterCredential(ctx, req.(*DeleteClusterCredentialReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListClusterCredential_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListClusterCredentialReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListClusterCredential(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListClusterCredential",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListClusterCredential(ctx, req.(*ListClusterCredentialReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_InitFederationCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitFederationClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).InitFederationCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/InitFederationCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).InitFederationCluster(ctx, req.(*InitFederationClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_AddFederatedCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFederatedClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).AddFederatedCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/AddFederatedCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).AddFederatedCluster(ctx, req.(*AddFederatedClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CreateNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNamespaceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CreateNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateNamespace(ctx, req.(*CreateNamespaceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNamespaceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateNamespace(ctx, req.(*UpdateNamespaceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNamespaceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteNamespace(ctx, req.(*DeleteNamespaceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNamespaceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetNamespace(ctx, req.(*GetNamespaceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNamespaceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListNamespace(ctx, req.(*ListNamespaceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CreateNamespaceQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNamespaceQuotaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateNamespaceQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CreateNamespaceQuota",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateNamespaceQuota(ctx, req.(*CreateNamespaceQuotaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateNamespaceQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNamespaceQuotaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateNamespaceQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateNamespaceQuota",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateNamespaceQuota(ctx, req.(*UpdateNamespaceQuotaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteNamespaceQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNamespaceQuotaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteNamespaceQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteNamespaceQuota",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteNamespaceQuota(ctx, req.(*DeleteNamespaceQuotaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetNamespaceQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNamespaceQuotaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetNamespaceQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetNamespaceQuota",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetNamespaceQuota(ctx, req.(*GetNamespaceQuotaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListNamespaceQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNamespaceQuotaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListNamespaceQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListNamespaceQuota",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListNamespaceQuota(ctx, req.(*ListNamespaceQuotaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CreateNamespaceWithQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNamespaceWithQuotaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateNamespaceWithQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CreateNamespaceWithQuota",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateNamespaceWithQuota(ctx, req.(*CreateNamespaceWithQuotaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CreateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CreateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateProject(ctx, req.(*CreateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateProject(ctx, req.(*UpdateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteProject(ctx, req.(*DeleteProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetProject(ctx, req.(*GetProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListProject(ctx, req.(*ListProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CreateCloud_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCloudRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateCloud(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CreateCloud",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateCloud(ctx, req.(*CreateCloudRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateCloud_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCloudRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateCloud(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateCloud",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateCloud(ctx, req.(*UpdateCloudRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteCloud_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCloudRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteCloud(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteCloud",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteCloud(ctx, req.(*DeleteCloudRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetCloud_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCloudRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetCloud(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetCloud",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetCloud(ctx, req.(*GetCloudRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListCloud_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCloudRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListCloud(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListCloud",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListCloud(ctx, req.(*ListCloudRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CreateCloudVPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCloudVPCRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateCloudVPC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CreateCloudVPC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateCloudVPC(ctx, req.(*CreateCloudVPCRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateCloudVPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCloudVPCRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateCloudVPC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateCloudVPC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateCloudVPC(ctx, req.(*UpdateCloudVPCRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteCloudVPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCloudVPCRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteCloudVPC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteCloudVPC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteCloudVPC(ctx, req.(*DeleteCloudVPCRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListCloudVPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCloudVPCRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListCloudVPC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListCloudVPC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListCloudVPC(ctx, req.(*ListCloudVPCRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListCloudRegions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCloudRegionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListCloudRegions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListCloudRegions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListCloudRegions(ctx, req.(*ListCloudRegionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetVPCCidr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVPCCidrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetVPCCidr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetVPCCidr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetVPCCidr(ctx, req.(*GetVPCCidrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CreateNodeGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNodeGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateNodeGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CreateNodeGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateNodeGroup(ctx, req.(*CreateNodeGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateNodeGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNodeGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateNodeGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateNodeGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateNodeGroup(ctx, req.(*UpdateNodeGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteNodeGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNodeGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteNodeGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteNodeGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteNodeGroup(ctx, req.(*DeleteNodeGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetNodeGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetNodeGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetNodeGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetNodeGroup(ctx, req.(*GetNodeGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListNodeGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNodeGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListNodeGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListNodeGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListNodeGroup(ctx, req.(*ListNodeGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_MoveNodesToGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveNodesToGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).MoveNodesToGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/MoveNodesToGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).MoveNodesToGroup(ctx, req.(*MoveNodesToGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_RemoveNodesFromGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveNodesFromGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).RemoveNodesFromGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/RemoveNodesFromGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).RemoveNodesFromGroup(ctx, req.(*RemoveNodesFromGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CleanNodesInGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CleanNodesInGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CleanNodesInGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CleanNodesInGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CleanNodesInGroup(ctx, req.(*CleanNodesInGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CleanNodesInGroupV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CleanNodesInGroupV2Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CleanNodesInGroupV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CleanNodesInGroupV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CleanNodesInGroupV2(ctx, req.(*CleanNodesInGroupV2Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListNodesInGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNodesInGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListNodesInGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListNodesInGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListNodesInGroup(ctx, req.(*ListNodesInGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateGroupDesiredNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateGroupDesiredNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateGroupDesiredNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateGroupDesiredNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateGroupDesiredNode(ctx, req.(*UpdateGroupDesiredNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateGroupDesiredSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateGroupDesiredSizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateGroupDesiredSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateGroupDesiredSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateGroupDesiredSize(ctx, req.(*UpdateGroupDesiredSizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_EnableNodeGroupAutoScale_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnableNodeGroupAutoScaleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).EnableNodeGroupAutoScale(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/EnableNodeGroupAutoScale",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).EnableNodeGroupAutoScale(ctx, req.(*EnableNodeGroupAutoScaleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DisableNodeGroupAutoScale_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisableNodeGroupAutoScaleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DisableNodeGroupAutoScale(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DisableNodeGroupAutoScale",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DisableNodeGroupAutoScale(ctx, req.(*DisableNodeGroupAutoScaleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CreateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateTask(ctx, req.(*CreateTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_RetryTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetryTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).RetryTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/RetryTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).RetryTask(ctx, req.(*RetryTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateTask(ctx, req.(*UpdateTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteTask(ctx, req.(*DeleteTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetTask(ctx, req.(*GetTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListTask(ctx, req.(*ListTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CreateAutoScalingOption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAutoScalingOptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateAutoScalingOption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CreateAutoScalingOption",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateAutoScalingOption(ctx, req.(*CreateAutoScalingOptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateAutoScalingOption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAutoScalingOptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateAutoScalingOption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateAutoScalingOption",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateAutoScalingOption(ctx, req.(*UpdateAutoScalingOptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteAutoScalingOption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAutoScalingOptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteAutoScalingOption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteAutoScalingOption",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteAutoScalingOption(ctx, req.(*DeleteAutoScalingOptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetAutoScalingOption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAutoScalingOptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetAutoScalingOption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetAutoScalingOption",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetAutoScalingOption(ctx, req.(*GetAutoScalingOptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListAutoScalingOption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAutoScalingOptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListAutoScalingOption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListAutoScalingOption",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListAutoScalingOption(ctx, req.(*ListAutoScalingOptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateAutoScalingStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAutoScalingStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateAutoScalingStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateAutoScalingStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateAutoScalingStatus(ctx, req.(*UpdateAutoScalingStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CreateCloudAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCloudAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateCloudAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CreateCloudAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateCloudAccount(ctx, req.(*CreateCloudAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateCloudAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCloudAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateCloudAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateCloudAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateCloudAccount(ctx, req.(*UpdateCloudAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteCloudAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCloudAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteCloudAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteCloudAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteCloudAccount(ctx, req.(*DeleteCloudAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListCloudAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCloudAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListCloudAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListCloudAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListCloudAccount(ctx, req.(*ListCloudAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListCloudAccountToPerm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCloudAccountPermRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListCloudAccountToPerm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListCloudAccountToPerm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListCloudAccountToPerm(ctx, req.(*ListCloudAccountPermRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetCloudRegions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCloudRegionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetCloudRegions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetCloudRegions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetCloudRegions(ctx, req.(*GetCloudRegionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetCloudRegionZones_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCloudRegionZonesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetCloudRegionZones(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetCloudRegionZones",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetCloudRegionZones(ctx, req.(*GetCloudRegionZonesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListCloudRegionCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCloudRegionClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListCloudRegionCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListCloudRegionCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListCloudRegionCluster(ctx, req.(*ListCloudRegionClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListCloudSubnets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCloudSubnetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListCloudSubnets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListCloudSubnets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListCloudSubnets(ctx, req.(*ListCloudSubnetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListCloudSecurityGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCloudSecurityGroupsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListCloudSecurityGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListCloudSecurityGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListCloudSecurityGroups(ctx, req.(*ListCloudSecurityGroupsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListCloudInstanceTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCloudInstanceTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListCloudInstanceTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListCloudInstanceTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListCloudInstanceTypes(ctx, req.(*ListCloudInstanceTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListCloudOsImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCloudOsImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListCloudOsImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListCloudOsImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListCloudOsImage(ctx, req.(*ListCloudOsImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListOperationLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOperationLogsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListOperationLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListOperationLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListOperationLogs(ctx, req.(*ListOperationLogsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListResourceSchema_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListResourceSchemaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListResourceSchema(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListResourceSchema",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListResourceSchema(ctx, req.(*ListResourceSchemaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetResourceSchema_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetResourceSchemaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetResourceSchema(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetResourceSchema",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetResourceSchema(ctx, req.(*GetResourceSchemaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_QueryPermByActionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryPermByActionIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).QueryPermByActionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/QueryPermByActionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).QueryPermByActionID(ctx, req.(*QueryPermByActionIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListBKCloud_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBKCloudRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListBKCloud(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListBKCloud",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListBKCloud(ctx, req.(*ListBKCloudRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListCCTopology_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCCTopologyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListCCTopology(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListCCTopology",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListCCTopology(ctx, req.(*ListCCTopologyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClusterManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clustermanager.ClusterManager",
	HandlerType: (*ClusterManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCluster",
			Handler:    _ClusterManager_CreateCluster_Handler,
		},
		{
			MethodName: "RetryCreateClusterTask",
			Handler:    _ClusterManager_RetryCreateClusterTask_Handler,
		},
		{
			MethodName: "CheckCloudKubeConfig",
			Handler:    _ClusterManager_CheckCloudKubeConfig_Handler,
		},
		{
			MethodName: "ImportCluster",
			Handler:    _ClusterManager_ImportCluster_Handler,
		},
		{
			MethodName: "UpdateCluster",
			Handler:    _ClusterManager_UpdateCluster_Handler,
		},
		{
			MethodName: "AddNodesToCluster",
			Handler:    _ClusterManager_AddNodesToCluster_Handler,
		},
		{
			MethodName: "DeleteNodesFromCluster",
			Handler:    _ClusterManager_DeleteNodesFromCluster_Handler,
		},
		{
			MethodName: "ListNodesInCluster",
			Handler:    _ClusterManager_ListNodesInCluster_Handler,
		},
		{
			MethodName: "ListMastersInCluster",
			Handler:    _ClusterManager_ListMastersInCluster_Handler,
		},
		{
			MethodName: "DeleteCluster",
			Handler:    _ClusterManager_DeleteCluster_Handler,
		},
		{
			MethodName: "GetCluster",
			Handler:    _ClusterManager_GetCluster_Handler,
		},
		{
			MethodName: "ListCluster",
			Handler:    _ClusterManager_ListCluster_Handler,
		},
		{
			MethodName: "ListCommonCluster",
			Handler:    _ClusterManager_ListCommonCluster_Handler,
		},
		{
			MethodName: "GetNode",
			Handler:    _ClusterManager_GetNode_Handler,
		},
		{
			MethodName: "UpdateNode",
			Handler:    _ClusterManager_UpdateNode_Handler,
		},
		{
			MethodName: "CheckNodeInCluster",
			Handler:    _ClusterManager_CheckNodeInCluster_Handler,
		},
		{
			MethodName: "CordonNode",
			Handler:    _ClusterManager_CordonNode_Handler,
		},
		{
			MethodName: "UnCordonNode",
			Handler:    _ClusterManager_UnCordonNode_Handler,
		},
		{
			MethodName: "DrainNode",
			Handler:    _ClusterManager_DrainNode_Handler,
		},
		{
			MethodName: "UpdateNodeLabels",
			Handler:    _ClusterManager_UpdateNodeLabels_Handler,
		},
		{
			MethodName: "UpdateNodeTaints",
			Handler:    _ClusterManager_UpdateNodeTaints_Handler,
		},
		{
			MethodName: "GetClusterCredential",
			Handler:    _ClusterManager_GetClusterCredential_Handler,
		},
		{
			MethodName: "UpdateClusterCredential",
			Handler:    _ClusterManager_UpdateClusterCredential_Handler,
		},
		{
			MethodName: "DeleteClusterCredential",
			Handler:    _ClusterManager_DeleteClusterCredential_Handler,
		},
		{
			MethodName: "ListClusterCredential",
			Handler:    _ClusterManager_ListClusterCredential_Handler,
		},
		{
			MethodName: "InitFederationCluster",
			Handler:    _ClusterManager_InitFederationCluster_Handler,
		},
		{
			MethodName: "AddFederatedCluster",
			Handler:    _ClusterManager_AddFederatedCluster_Handler,
		},
		{
			MethodName: "CreateNamespace",
			Handler:    _ClusterManager_CreateNamespace_Handler,
		},
		{
			MethodName: "UpdateNamespace",
			Handler:    _ClusterManager_UpdateNamespace_Handler,
		},
		{
			MethodName: "DeleteNamespace",
			Handler:    _ClusterManager_DeleteNamespace_Handler,
		},
		{
			MethodName: "GetNamespace",
			Handler:    _ClusterManager_GetNamespace_Handler,
		},
		{
			MethodName: "ListNamespace",
			Handler:    _ClusterManager_ListNamespace_Handler,
		},
		{
			MethodName: "CreateNamespaceQuota",
			Handler:    _ClusterManager_CreateNamespaceQuota_Handler,
		},
		{
			MethodName: "UpdateNamespaceQuota",
			Handler:    _ClusterManager_UpdateNamespaceQuota_Handler,
		},
		{
			MethodName: "DeleteNamespaceQuota",
			Handler:    _ClusterManager_DeleteNamespaceQuota_Handler,
		},
		{
			MethodName: "GetNamespaceQuota",
			Handler:    _ClusterManager_GetNamespaceQuota_Handler,
		},
		{
			MethodName: "ListNamespaceQuota",
			Handler:    _ClusterManager_ListNamespaceQuota_Handler,
		},
		{
			MethodName: "CreateNamespaceWithQuota",
			Handler:    _ClusterManager_CreateNamespaceWithQuota_Handler,
		},
		{
			MethodName: "CreateProject",
			Handler:    _ClusterManager_CreateProject_Handler,
		},
		{
			MethodName: "UpdateProject",
			Handler:    _ClusterManager_UpdateProject_Handler,
		},
		{
			MethodName: "DeleteProject",
			Handler:    _ClusterManager_DeleteProject_Handler,
		},
		{
			MethodName: "GetProject",
			Handler:    _ClusterManager_GetProject_Handler,
		},
		{
			MethodName: "ListProject",
			Handler:    _ClusterManager_ListProject_Handler,
		},
		{
			MethodName: "CreateCloud",
			Handler:    _ClusterManager_CreateCloud_Handler,
		},
		{
			MethodName: "UpdateCloud",
			Handler:    _ClusterManager_UpdateCloud_Handler,
		},
		{
			MethodName: "DeleteCloud",
			Handler:    _ClusterManager_DeleteCloud_Handler,
		},
		{
			MethodName: "GetCloud",
			Handler:    _ClusterManager_GetCloud_Handler,
		},
		{
			MethodName: "ListCloud",
			Handler:    _ClusterManager_ListCloud_Handler,
		},
		{
			MethodName: "CreateCloudVPC",
			Handler:    _ClusterManager_CreateCloudVPC_Handler,
		},
		{
			MethodName: "UpdateCloudVPC",
			Handler:    _ClusterManager_UpdateCloudVPC_Handler,
		},
		{
			MethodName: "DeleteCloudVPC",
			Handler:    _ClusterManager_DeleteCloudVPC_Handler,
		},
		{
			MethodName: "ListCloudVPC",
			Handler:    _ClusterManager_ListCloudVPC_Handler,
		},
		{
			MethodName: "ListCloudRegions",
			Handler:    _ClusterManager_ListCloudRegions_Handler,
		},
		{
			MethodName: "GetVPCCidr",
			Handler:    _ClusterManager_GetVPCCidr_Handler,
		},
		{
			MethodName: "CreateNodeGroup",
			Handler:    _ClusterManager_CreateNodeGroup_Handler,
		},
		{
			MethodName: "UpdateNodeGroup",
			Handler:    _ClusterManager_UpdateNodeGroup_Handler,
		},
		{
			MethodName: "DeleteNodeGroup",
			Handler:    _ClusterManager_DeleteNodeGroup_Handler,
		},
		{
			MethodName: "GetNodeGroup",
			Handler:    _ClusterManager_GetNodeGroup_Handler,
		},
		{
			MethodName: "ListNodeGroup",
			Handler:    _ClusterManager_ListNodeGroup_Handler,
		},
		{
			MethodName: "MoveNodesToGroup",
			Handler:    _ClusterManager_MoveNodesToGroup_Handler,
		},
		{
			MethodName: "RemoveNodesFromGroup",
			Handler:    _ClusterManager_RemoveNodesFromGroup_Handler,
		},
		{
			MethodName: "CleanNodesInGroup",
			Handler:    _ClusterManager_CleanNodesInGroup_Handler,
		},
		{
			MethodName: "CleanNodesInGroupV2",
			Handler:    _ClusterManager_CleanNodesInGroupV2_Handler,
		},
		{
			MethodName: "ListNodesInGroup",
			Handler:    _ClusterManager_ListNodesInGroup_Handler,
		},
		{
			MethodName: "UpdateGroupDesiredNode",
			Handler:    _ClusterManager_UpdateGroupDesiredNode_Handler,
		},
		{
			MethodName: "UpdateGroupDesiredSize",
			Handler:    _ClusterManager_UpdateGroupDesiredSize_Handler,
		},
		{
			MethodName: "EnableNodeGroupAutoScale",
			Handler:    _ClusterManager_EnableNodeGroupAutoScale_Handler,
		},
		{
			MethodName: "DisableNodeGroupAutoScale",
			Handler:    _ClusterManager_DisableNodeGroupAutoScale_Handler,
		},
		{
			MethodName: "CreateTask",
			Handler:    _ClusterManager_CreateTask_Handler,
		},
		{
			MethodName: "RetryTask",
			Handler:    _ClusterManager_RetryTask_Handler,
		},
		{
			MethodName: "UpdateTask",
			Handler:    _ClusterManager_UpdateTask_Handler,
		},
		{
			MethodName: "DeleteTask",
			Handler:    _ClusterManager_DeleteTask_Handler,
		},
		{
			MethodName: "GetTask",
			Handler:    _ClusterManager_GetTask_Handler,
		},
		{
			MethodName: "ListTask",
			Handler:    _ClusterManager_ListTask_Handler,
		},
		{
			MethodName: "CreateAutoScalingOption",
			Handler:    _ClusterManager_CreateAutoScalingOption_Handler,
		},
		{
			MethodName: "UpdateAutoScalingOption",
			Handler:    _ClusterManager_UpdateAutoScalingOption_Handler,
		},
		{
			MethodName: "DeleteAutoScalingOption",
			Handler:    _ClusterManager_DeleteAutoScalingOption_Handler,
		},
		{
			MethodName: "GetAutoScalingOption",
			Handler:    _ClusterManager_GetAutoScalingOption_Handler,
		},
		{
			MethodName: "ListAutoScalingOption",
			Handler:    _ClusterManager_ListAutoScalingOption_Handler,
		},
		{
			MethodName: "UpdateAutoScalingStatus",
			Handler:    _ClusterManager_UpdateAutoScalingStatus_Handler,
		},
		{
			MethodName: "CreateCloudAccount",
			Handler:    _ClusterManager_CreateCloudAccount_Handler,
		},
		{
			MethodName: "UpdateCloudAccount",
			Handler:    _ClusterManager_UpdateCloudAccount_Handler,
		},
		{
			MethodName: "DeleteCloudAccount",
			Handler:    _ClusterManager_DeleteCloudAccount_Handler,
		},
		{
			MethodName: "ListCloudAccount",
			Handler:    _ClusterManager_ListCloudAccount_Handler,
		},
		{
			MethodName: "ListCloudAccountToPerm",
			Handler:    _ClusterManager_ListCloudAccountToPerm_Handler,
		},
		{
			MethodName: "GetCloudRegions",
			Handler:    _ClusterManager_GetCloudRegions_Handler,
		},
		{
			MethodName: "GetCloudRegionZones",
			Handler:    _ClusterManager_GetCloudRegionZones_Handler,
		},
		{
			MethodName: "ListCloudRegionCluster",
			Handler:    _ClusterManager_ListCloudRegionCluster_Handler,
		},
		{
			MethodName: "ListCloudSubnets",
			Handler:    _ClusterManager_ListCloudSubnets_Handler,
		},
		{
			MethodName: "ListCloudSecurityGroups",
			Handler:    _ClusterManager_ListCloudSecurityGroups_Handler,
		},
		{
			MethodName: "ListCloudInstanceTypes",
			Handler:    _ClusterManager_ListCloudInstanceTypes_Handler,
		},
		{
			MethodName: "ListCloudOsImage",
			Handler:    _ClusterManager_ListCloudOsImage_Handler,
		},
		{
			MethodName: "ListOperationLogs",
			Handler:    _ClusterManager_ListOperationLogs_Handler,
		},
		{
			MethodName: "ListResourceSchema",
			Handler:    _ClusterManager_ListResourceSchema_Handler,
		},
		{
			MethodName: "GetResourceSchema",
			Handler:    _ClusterManager_GetResourceSchema_Handler,
		},
		{
			MethodName: "QueryPermByActionID",
			Handler:    _ClusterManager_QueryPermByActionID_Handler,
		},
		{
			MethodName: "ListBKCloud",
			Handler:    _ClusterManager_ListBKCloud_Handler,
		},
		{
			MethodName: "ListCCTopology",
			Handler:    _ClusterManager_ListCCTopology_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "clustermanager.proto",
}
