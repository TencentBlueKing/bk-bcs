// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/sdk/instance/instance.proto

package instance

import (
	context "context"
	fmt "fmt"
	v1alpha1 "github.com/Tencent/bk-bcs/bcs-services/bcs-argocd-manager/pkg/apis/tkex/v1alpha1"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// CRUD for Argocd Instance
type CreateArgocdInstanceRequest struct {
	Instance             *v1alpha1.ArgocdInstance `protobuf:"bytes,1,req,name=instance" json:"instance,omitempty"`
	Upsert               *bool                    `protobuf:"varint,2,opt,name=upsert" json:"upsert,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CreateArgocdInstanceRequest) Reset()         { *m = CreateArgocdInstanceRequest{} }
func (m *CreateArgocdInstanceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateArgocdInstanceRequest) ProtoMessage()    {}
func (*CreateArgocdInstanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5da53afe5ad220b3, []int{0}
}

func (m *CreateArgocdInstanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateArgocdInstanceRequest.Unmarshal(m, b)
}
func (m *CreateArgocdInstanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateArgocdInstanceRequest.Marshal(b, m, deterministic)
}
func (m *CreateArgocdInstanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateArgocdInstanceRequest.Merge(m, src)
}
func (m *CreateArgocdInstanceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateArgocdInstanceRequest.Size(m)
}
func (m *CreateArgocdInstanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateArgocdInstanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateArgocdInstanceRequest proto.InternalMessageInfo

func (m *CreateArgocdInstanceRequest) GetInstance() *v1alpha1.ArgocdInstance {
	if m != nil {
		return m.Instance
	}
	return nil
}

func (m *CreateArgocdInstanceRequest) GetUpsert() bool {
	if m != nil && m.Upsert != nil {
		return *m.Upsert
	}
	return false
}

type CreateArgocdInstanceResponse struct {
	Code                 *uint32                  `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	Message              *string                  `protobuf:"bytes,2,req,name=message" json:"message,omitempty"`
	Instance             *v1alpha1.ArgocdInstance `protobuf:"bytes,3,opt,name=instance" json:"instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CreateArgocdInstanceResponse) Reset()         { *m = CreateArgocdInstanceResponse{} }
func (m *CreateArgocdInstanceResponse) String() string { return proto.CompactTextString(m) }
func (*CreateArgocdInstanceResponse) ProtoMessage()    {}
func (*CreateArgocdInstanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5da53afe5ad220b3, []int{1}
}

func (m *CreateArgocdInstanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateArgocdInstanceResponse.Unmarshal(m, b)
}
func (m *CreateArgocdInstanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateArgocdInstanceResponse.Marshal(b, m, deterministic)
}
func (m *CreateArgocdInstanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateArgocdInstanceResponse.Merge(m, src)
}
func (m *CreateArgocdInstanceResponse) XXX_Size() int {
	return xxx_messageInfo_CreateArgocdInstanceResponse.Size(m)
}
func (m *CreateArgocdInstanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateArgocdInstanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateArgocdInstanceResponse proto.InternalMessageInfo

func (m *CreateArgocdInstanceResponse) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *CreateArgocdInstanceResponse) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CreateArgocdInstanceResponse) GetInstance() *v1alpha1.ArgocdInstance {
	if m != nil {
		return m.Instance
	}
	return nil
}

type UpdateArgocdInstanceRequest struct {
	Instance             *v1alpha1.ArgocdInstance `protobuf:"bytes,1,req,name=instance" json:"instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *UpdateArgocdInstanceRequest) Reset()         { *m = UpdateArgocdInstanceRequest{} }
func (m *UpdateArgocdInstanceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateArgocdInstanceRequest) ProtoMessage()    {}
func (*UpdateArgocdInstanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5da53afe5ad220b3, []int{2}
}

func (m *UpdateArgocdInstanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateArgocdInstanceRequest.Unmarshal(m, b)
}
func (m *UpdateArgocdInstanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateArgocdInstanceRequest.Marshal(b, m, deterministic)
}
func (m *UpdateArgocdInstanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateArgocdInstanceRequest.Merge(m, src)
}
func (m *UpdateArgocdInstanceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateArgocdInstanceRequest.Size(m)
}
func (m *UpdateArgocdInstanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateArgocdInstanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateArgocdInstanceRequest proto.InternalMessageInfo

func (m *UpdateArgocdInstanceRequest) GetInstance() *v1alpha1.ArgocdInstance {
	if m != nil {
		return m.Instance
	}
	return nil
}

type UpdateArgocdInstanceResponse struct {
	Code                 *uint32                  `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	Message              *string                  `protobuf:"bytes,2,req,name=message" json:"message,omitempty"`
	Instance             *v1alpha1.ArgocdInstance `protobuf:"bytes,3,opt,name=instance" json:"instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *UpdateArgocdInstanceResponse) Reset()         { *m = UpdateArgocdInstanceResponse{} }
func (m *UpdateArgocdInstanceResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateArgocdInstanceResponse) ProtoMessage()    {}
func (*UpdateArgocdInstanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5da53afe5ad220b3, []int{3}
}

func (m *UpdateArgocdInstanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateArgocdInstanceResponse.Unmarshal(m, b)
}
func (m *UpdateArgocdInstanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateArgocdInstanceResponse.Marshal(b, m, deterministic)
}
func (m *UpdateArgocdInstanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateArgocdInstanceResponse.Merge(m, src)
}
func (m *UpdateArgocdInstanceResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateArgocdInstanceResponse.Size(m)
}
func (m *UpdateArgocdInstanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateArgocdInstanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateArgocdInstanceResponse proto.InternalMessageInfo

func (m *UpdateArgocdInstanceResponse) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *UpdateArgocdInstanceResponse) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *UpdateArgocdInstanceResponse) GetInstance() *v1alpha1.ArgocdInstance {
	if m != nil {
		return m.Instance
	}
	return nil
}

type DeleteArgocdInstanceRequest struct {
	Name                 *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteArgocdInstanceRequest) Reset()         { *m = DeleteArgocdInstanceRequest{} }
func (m *DeleteArgocdInstanceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteArgocdInstanceRequest) ProtoMessage()    {}
func (*DeleteArgocdInstanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5da53afe5ad220b3, []int{4}
}

func (m *DeleteArgocdInstanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteArgocdInstanceRequest.Unmarshal(m, b)
}
func (m *DeleteArgocdInstanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteArgocdInstanceRequest.Marshal(b, m, deterministic)
}
func (m *DeleteArgocdInstanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteArgocdInstanceRequest.Merge(m, src)
}
func (m *DeleteArgocdInstanceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteArgocdInstanceRequest.Size(m)
}
func (m *DeleteArgocdInstanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteArgocdInstanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteArgocdInstanceRequest proto.InternalMessageInfo

func (m *DeleteArgocdInstanceRequest) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type DeleteArgocdInstanceResponse struct {
	Code                 *uint32  `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	Message              *string  `protobuf:"bytes,2,req,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteArgocdInstanceResponse) Reset()         { *m = DeleteArgocdInstanceResponse{} }
func (m *DeleteArgocdInstanceResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteArgocdInstanceResponse) ProtoMessage()    {}
func (*DeleteArgocdInstanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5da53afe5ad220b3, []int{5}
}

func (m *DeleteArgocdInstanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteArgocdInstanceResponse.Unmarshal(m, b)
}
func (m *DeleteArgocdInstanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteArgocdInstanceResponse.Marshal(b, m, deterministic)
}
func (m *DeleteArgocdInstanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteArgocdInstanceResponse.Merge(m, src)
}
func (m *DeleteArgocdInstanceResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteArgocdInstanceResponse.Size(m)
}
func (m *DeleteArgocdInstanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteArgocdInstanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteArgocdInstanceResponse proto.InternalMessageInfo

func (m *DeleteArgocdInstanceResponse) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *DeleteArgocdInstanceResponse) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type GetArgocdInstanceRequest struct {
	Name                 *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetArgocdInstanceRequest) Reset()         { *m = GetArgocdInstanceRequest{} }
func (m *GetArgocdInstanceRequest) String() string { return proto.CompactTextString(m) }
func (*GetArgocdInstanceRequest) ProtoMessage()    {}
func (*GetArgocdInstanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5da53afe5ad220b3, []int{6}
}

func (m *GetArgocdInstanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetArgocdInstanceRequest.Unmarshal(m, b)
}
func (m *GetArgocdInstanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetArgocdInstanceRequest.Marshal(b, m, deterministic)
}
func (m *GetArgocdInstanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArgocdInstanceRequest.Merge(m, src)
}
func (m *GetArgocdInstanceRequest) XXX_Size() int {
	return xxx_messageInfo_GetArgocdInstanceRequest.Size(m)
}
func (m *GetArgocdInstanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArgocdInstanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetArgocdInstanceRequest proto.InternalMessageInfo

func (m *GetArgocdInstanceRequest) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type GetArgocdInstanceResponse struct {
	Code                 *uint32                  `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	Message              *string                  `protobuf:"bytes,2,req,name=message" json:"message,omitempty"`
	Instance             *v1alpha1.ArgocdInstance `protobuf:"bytes,3,opt,name=instance" json:"instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetArgocdInstanceResponse) Reset()         { *m = GetArgocdInstanceResponse{} }
func (m *GetArgocdInstanceResponse) String() string { return proto.CompactTextString(m) }
func (*GetArgocdInstanceResponse) ProtoMessage()    {}
func (*GetArgocdInstanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5da53afe5ad220b3, []int{7}
}

func (m *GetArgocdInstanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetArgocdInstanceResponse.Unmarshal(m, b)
}
func (m *GetArgocdInstanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetArgocdInstanceResponse.Marshal(b, m, deterministic)
}
func (m *GetArgocdInstanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArgocdInstanceResponse.Merge(m, src)
}
func (m *GetArgocdInstanceResponse) XXX_Size() int {
	return xxx_messageInfo_GetArgocdInstanceResponse.Size(m)
}
func (m *GetArgocdInstanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArgocdInstanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetArgocdInstanceResponse proto.InternalMessageInfo

func (m *GetArgocdInstanceResponse) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *GetArgocdInstanceResponse) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *GetArgocdInstanceResponse) GetInstance() *v1alpha1.ArgocdInstance {
	if m != nil {
		return m.Instance
	}
	return nil
}

type ListArgocdInstancesRequest struct {
	Project              *string  `protobuf:"bytes,1,opt,name=project" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListArgocdInstancesRequest) Reset()         { *m = ListArgocdInstancesRequest{} }
func (m *ListArgocdInstancesRequest) String() string { return proto.CompactTextString(m) }
func (*ListArgocdInstancesRequest) ProtoMessage()    {}
func (*ListArgocdInstancesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5da53afe5ad220b3, []int{8}
}

func (m *ListArgocdInstancesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArgocdInstancesRequest.Unmarshal(m, b)
}
func (m *ListArgocdInstancesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArgocdInstancesRequest.Marshal(b, m, deterministic)
}
func (m *ListArgocdInstancesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArgocdInstancesRequest.Merge(m, src)
}
func (m *ListArgocdInstancesRequest) XXX_Size() int {
	return xxx_messageInfo_ListArgocdInstancesRequest.Size(m)
}
func (m *ListArgocdInstancesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArgocdInstancesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListArgocdInstancesRequest proto.InternalMessageInfo

func (m *ListArgocdInstancesRequest) GetProject() string {
	if m != nil && m.Project != nil {
		return *m.Project
	}
	return ""
}

type ListArgocdInstancesResponse struct {
	Code                 *uint32                      `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	Message              *string                      `protobuf:"bytes,2,req,name=message" json:"message,omitempty"`
	Instances            *v1alpha1.ArgocdInstanceList `protobuf:"bytes,3,opt,name=instances" json:"instances,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ListArgocdInstancesResponse) Reset()         { *m = ListArgocdInstancesResponse{} }
func (m *ListArgocdInstancesResponse) String() string { return proto.CompactTextString(m) }
func (*ListArgocdInstancesResponse) ProtoMessage()    {}
func (*ListArgocdInstancesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5da53afe5ad220b3, []int{9}
}

func (m *ListArgocdInstancesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArgocdInstancesResponse.Unmarshal(m, b)
}
func (m *ListArgocdInstancesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArgocdInstancesResponse.Marshal(b, m, deterministic)
}
func (m *ListArgocdInstancesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArgocdInstancesResponse.Merge(m, src)
}
func (m *ListArgocdInstancesResponse) XXX_Size() int {
	return xxx_messageInfo_ListArgocdInstancesResponse.Size(m)
}
func (m *ListArgocdInstancesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArgocdInstancesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListArgocdInstancesResponse proto.InternalMessageInfo

func (m *ListArgocdInstancesResponse) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ListArgocdInstancesResponse) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ListArgocdInstancesResponse) GetInstances() *v1alpha1.ArgocdInstanceList {
	if m != nil {
		return m.Instances
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateArgocdInstanceRequest)(nil), "instance.CreateArgocdInstanceRequest")
	proto.RegisterType((*CreateArgocdInstanceResponse)(nil), "instance.CreateArgocdInstanceResponse")
	proto.RegisterType((*UpdateArgocdInstanceRequest)(nil), "instance.UpdateArgocdInstanceRequest")
	proto.RegisterType((*UpdateArgocdInstanceResponse)(nil), "instance.UpdateArgocdInstanceResponse")
	proto.RegisterType((*DeleteArgocdInstanceRequest)(nil), "instance.DeleteArgocdInstanceRequest")
	proto.RegisterType((*DeleteArgocdInstanceResponse)(nil), "instance.DeleteArgocdInstanceResponse")
	proto.RegisterType((*GetArgocdInstanceRequest)(nil), "instance.GetArgocdInstanceRequest")
	proto.RegisterType((*GetArgocdInstanceResponse)(nil), "instance.GetArgocdInstanceResponse")
	proto.RegisterType((*ListArgocdInstancesRequest)(nil), "instance.ListArgocdInstancesRequest")
	proto.RegisterType((*ListArgocdInstancesResponse)(nil), "instance.ListArgocdInstancesResponse")
}

func init() { proto.RegisterFile("pkg/sdk/instance/instance.proto", fileDescriptor_5da53afe5ad220b3) }

var fileDescriptor_5da53afe5ad220b3 = []byte{
	// 1090 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x57, 0xcf, 0x6f, 0x1b, 0x45,
	0x14, 0xd6, 0xba, 0xa5, 0x49, 0xa6, 0x42, 0xd0, 0x25, 0xa2, 0x66, 0x1d, 0xab, 0x5b, 0xbb, 0xa9,
	0xdc, 0x25, 0x9e, 0xad, 0xf7, 0x04, 0x6e, 0x69, 0x98, 0x6d, 0x44, 0x15, 0x09, 0x24, 0x64, 0xb5,
	0x12, 0xe2, 0x40, 0xba, 0x5e, 0x0f, 0x5b, 0xd7, 0xce, 0xee, 0xe2, 0xd9, 0x04, 0x24, 0x84, 0x44,
	0x2b, 0x54, 0x55, 0x02, 0xa4, 0x6a, 0x88, 0x68, 0x4b, 0x50, 0x69, 0x68, 0x40, 0x5c, 0x88, 0xa9,
	0x84, 0xa0, 0x34, 0x88, 0x48, 0x1c, 0x38, 0x72, 0x80, 0x7f, 0xc1, 0x76, 0x9c, 0x0b, 0x5c, 0xf8,
	0x03, 0x90, 0xf7, 0x87, 0xed, 0xe0, 0xd9, 0x75, 0x38, 0xd0, 0x1c, 0xe8, 0xc9, 0xde, 0xb7, 0x6f,
	0xe6, 0x7d, 0xdf, 0x37, 0xdf, 0xcc, 0x9b, 0x05, 0x87, 0xec, 0x8a, 0x21, 0x93, 0x52, 0x45, 0x2e,
	0x9b, 0xc4, 0xd1, 0x4c, 0x1d, 0x77, 0xff, 0x40, 0xbb, 0x66, 0x39, 0x16, 0x3f, 0x1a, 0x3c, 0x0b,
	0xe7, 0x8d, 0xb2, 0x73, 0x61, 0xa1, 0x08, 0x75, 0x6b, 0x5e, 0x3e, 0x8b, 0x4d, 0x1d, 0x9b, 0x8e,
	0x5c, 0xac, 0x64, 0x8b, 0x3a, 0x91, 0x8b, 0x3a, 0xc9, 0x12, 0x5c, 0x5b, 0x2c, 0xeb, 0xd8, 0x7b,
	0xd0, 0x6a, 0x86, 0xa5, 0x97, 0xb2, 0xf3, 0x9a, 0xa9, 0x19, 0xb8, 0x26, 0x77, 0x8a, 0x68, 0x76,
	0x99, 0xc8, 0x4e, 0x05, 0xbf, 0x25, 0x2f, 0xe6, 0xb4, 0xaa, 0x7d, 0x41, 0xcb, 0xc9, 0x06, 0x36,
	0x71, 0x4d, 0x73, 0x70, 0xc9, 0xab, 0x25, 0x4c, 0xb9, 0x3f, 0x7a, 0xd6, 0xc0, 0x66, 0x96, 0xbc,
	0xa9, 0x19, 0x9d, 0xa1, 0x96, 0xed, 0x94, 0x2d, 0x93, 0xc8, 0x9a, 0x69, 0x5a, 0x8e, 0xe6, 0xfe,
	0xf7, 0xb3, 0x27, 0x0c, 0xcb, 0x32, 0xaa, 0xb8, 0x33, 0xf1, 0xe0, 0xdb, 0xd4, 0x6f, 0x31, 0x90,
	0x38, 0x5d, 0xc3, 0x9a, 0x83, 0x91, 0x8b, 0x65, 0xd6, 0xa7, 0x51, 0xc0, 0x6f, 0x2c, 0x60, 0xe2,
	0xf0, 0xab, 0x1c, 0xe8, 0x52, 0x8b, 0x73, 0x62, 0x2c, 0xb3, 0x5f, 0x39, 0x0f, 0x7b, 0x0c, 0xa1,
	0xcf, 0x10, 0x16, 0x2b, 0x73, 0x45, 0x9d, 0xc0, 0xa2, 0x4e, 0xe6, 0x02, 0x86, 0xee, 0x83, 0xc7,
	0x70, 0xce, 0x67, 0x08, 0xed, 0x8a, 0x01, 0x3b, 0x0c, 0x61, 0x87, 0x21, 0x0c, 0x18, 0xc2, 0xed,
	0xb5, 0xd5, 0xa3, 0x14, 0xa5, 0xa5, 0x6e, 0x59, 0xe5, 0xa0, 0xe8, 0xbd, 0x17, 0x9b, 0x6b, 0xb7,
	0x1a, 0x3f, 0xbd, 0xbf, 0xf9, 0xc9, 0x7b, 0x8d, 0x8d, 0x95, 0xd6, 0xa5, 0x7a, 0xa1, 0x9b, 0xc2,
	0xcf, 0x82, 0x7d, 0x0b, 0x36, 0xc1, 0x35, 0x27, 0x1e, 0x13, 0xb9, 0xcc, 0xa8, 0x9a, 0xa3, 0x08,
	0x4a, 0x7e, 0x48, 0x39, 0xd2, 0xba, 0x51, 0x6f, 0x5e, 0xfb, 0xb2, 0xb5, 0xfc, 0x6d, 0xeb, 0xe3,
	0x6f, 0xbc, 0x39, 0xfe, 0xfc, 0xf1, 0x83, 0xad, 0xf5, 0x1b, 0xed, 0xb5, 0xd5, 0xc6, 0xbd, 0xfb,
	0xe2, 0xeb, 0x5a, 0x95, 0xe0, 0x82, 0x9f, 0x9d, 0x47, 0x14, 0x9d, 0x02, 0x27, 0xa5, 0x28, 0x55,
	0x94, 0x64, 0xf3, 0xea, 0x72, 0x73, 0xfd, 0xfe, 0x00, 0xae, 0x76, 0xfd, 0xfb, 0xd6, 0xdd, 0xcb,
	0xa9, 0xbf, 0x62, 0x60, 0x82, 0x3d, 0x9c, 0xd8, 0x96, 0x49, 0x30, 0x0f, 0xc1, 0x5e, 0xdd, 0x2a,
	0x79, 0x82, 0x3e, 0xaa, 0x0a, 0x14, 0x1d, 0x94, 0xdc, 0x80, 0xf2, 0x58, 0x7b, 0x63, 0xa9, 0xb9,
	0x7c, 0x6b, 0x6b, 0xe9, 0x66, 0xbb, 0x5e, 0xdf, 0xbc, 0x7d, 0xa9, 0xe0, 0x86, 0xf9, 0x3c, 0x18,
	0x99, 0xc7, 0x84, 0x68, 0x06, 0x8e, 0xc7, 0xc4, 0x58, 0x66, 0x4c, 0x15, 0x29, 0x4a, 0x4a, 0x41,
	0x4c, 0xe1, 0xfb, 0x47, 0xf9, 0xda, 0x04, 0x2f, 0xf9, 0x3b, 0xfd, 0x2b, 0xb8, 0x47, 0xe4, 0x1e,
	0xc8, 0x0a, 0x4e, 0x52, 0x94, 0xea, 0x5b, 0xc1, 0x27, 0x87, 0x2d, 0x60, 0x5e, 0xa5, 0x68, 0x1a,
	0x3c, 0x27, 0x45, 0xca, 0x16, 0x2e, 0xbb, 0x4b, 0x3f, 0x75, 0x25, 0x06, 0x12, 0xe7, 0xec, 0x52,
	0xa8, 0x97, 0xef, 0xec, 0x86, 0x97, 0xff, 0xb5, 0x12, 0x81, 0xff, 0x22, 0x98, 0x28, 0x49, 0xcf,
	0xcb, 0x51, 0xfe, 0x63, 0x0f, 0xff, 0x5f, 0xf9, 0x6f, 0xc4, 0xae, 0x59, 0x17, 0xb1, 0xee, 0xec,
	0xe0, 0x00, 0xe9, 0xfa, 0x2f, 0x4a, 0xb6, 0x70, 0xd9, 0x3d, 0xff, 0xad, 0x70, 0x20, 0x31, 0x83,
	0xab, 0x38, 0xcc, 0x7f, 0xd3, 0x60, 0xaf, 0xa9, 0xcd, 0x7b, 0xaa, 0x8f, 0xa9, 0x4f, 0x53, 0x94,
	0x91, 0xdc, 0x80, 0x32, 0x30, 0x61, 0xf3, 0xda, 0x87, 0xcd, 0xaf, 0xaf, 0x67, 0x9a, 0x4b, 0xf5,
	0xc6, 0xbd, 0x77, 0xcb, 0xa5, 0x63, 0x05, 0x37, 0xaf, 0x6b, 0x8d, 0x88, 0x22, 0x9d, 0x3d, 0x72,
	0x7b, 0xeb, 0xe6, 0x6a, 0x98, 0x35, 0x7e, 0xe5, 0xc0, 0x04, 0x7b, 0xf8, 0x83, 0xb7, 0x46, 0x57,
	0xf4, 0x28, 0x40, 0xe1, 0x84, 0x3c, 0xd1, 0x3f, 0xe5, 0x40, 0xfc, 0x0c, 0x76, 0xd8, 0x8a, 0x3f,
	0xbf, 0x4d, 0xf1, 0x29, 0x8a, 0x8e, 0xf9, 0x8a, 0x1f, 0xde, 0xa9, 0xe4, 0xa7, 0x28, 0x3a, 0x01,
	0x9e, 0x95, 0x42, 0x4b, 0x28, 0xc9, 0xd6, 0x67, 0x5f, 0xb4, 0xeb, 0x9f, 0x87, 0xe9, 0xfd, 0x47,
	0x0c, 0x3c, 0xc5, 0x18, 0xfb, 0xb0, 0x0f, 0x84, 0xec, 0xc3, 0x69, 0x8a, 0x4e, 0x82, 0xbc, 0x14,
	0xae, 0xd9, 0x30, 0x3f, 0x2c, 0x71, 0x40, 0x78, 0xb1, 0x4c, 0xfe, 0x31, 0x9a, 0x04, 0x8e, 0x80,
	0x20, 0x38, 0x15, 0xe2, 0x9c, 0xc8, 0x65, 0xc6, 0xd4, 0x71, 0x8a, 0x0e, 0xf4, 0x4e, 0x8a, 0x7d,
	0x5b, 0x2b, 0x3f, 0x6c, 0x2e, 0xaf, 0x15, 0x82, 0x40, 0xfe, 0x05, 0x8a, 0x4e, 0x03, 0x24, 0x45,
	0x4c, 0xa9, 0xa4, 0x59, 0x0e, 0x68, 0x5e, 0xbd, 0xde, 0x5e, 0xf9, 0xaa, 0xe7, 0x83, 0x2b, 0x7b,
	0x40, 0x82, 0x39, 0xc7, 0x2e, 0x38, 0xe1, 0x2e, 0x07, 0xc6, 0x02, 0xc1, 0x89, 0x6f, 0x85, 0xd2,
	0x7f, 0x6d, 0x85, 0x0e, 0x79, 0x35, 0x4b, 0x91, 0x24, 0xf5, 0x6a, 0x2b, 0xc9, 0x10, 0xd1, 0x7c,
	0xc4, 0xbd, 0xcc, 0xfc, 0x19, 0x8a, 0x66, 0x80, 0x2a, 0x45, 0x69, 0x38, 0x6c, 0x21, 0x5c, 0x45,
	0x94, 0x5f, 0x46, 0xc0, 0x68, 0x30, 0x94, 0x5f, 0xe7, 0xc0, 0x38, 0xeb, 0xc6, 0xc1, 0x4f, 0xc2,
	0xee, 0xfd, 0x3e, 0xe2, 0x1e, 0x28, 0x1c, 0x1d, 0x96, 0xe6, 0x21, 0x4b, 0x9d, 0xa5, 0x68, 0x8a,
	0x1f, 0x67, 0xdd, 0x5e, 0x04, 0x66, 0xf4, 0xf2, 0xef, 0x8d, 0x8f, 0x62, 0x87, 0x52, 0x82, 0xec,
	0x29, 0x1d, 0x7c, 0x1f, 0x2c, 0xe6, 0xba, 0x9f, 0x1d, 0x79, 0x4e, 0x72, 0xd1, 0xb3, 0xfa, 0x55,
	0x3f, 0xfa, 0x88, 0x5b, 0x44, 0x3f, 0xfa, 0xa8, 0xb6, 0xe7, 0xa3, 0x67, 0xf5, 0x3e, 0x81, 0x19,
	0xf5, 0xd0, 0x0b, 0x43, 0xd0, 0x6f, 0x70, 0x60, 0x9c, 0x75, 0xf0, 0xf7, 0xa3, 0x8f, 0x68, 0x74,
	0xfd, 0xe8, 0xa3, 0xfa, 0x47, 0xea, 0x15, 0x5f, 0xfb, 0xc1, 0x43, 0x43, 0x60, 0x46, 0x5d, 0xf4,
	0x69, 0xe9, 0x70, 0x38, 0x7a, 0xf9, 0xed, 0x4e, 0x6b, 0x78, 0x87, 0xff, 0x8e, 0x03, 0x07, 0x06,
	0xce, 0x29, 0x3e, 0xd5, 0xc3, 0x15, 0xd6, 0x34, 0x84, 0x74, 0x64, 0xce, 0x36, 0xe0, 0x2c, 0x4f,
	0x0b, 0xcc, 0xa8, 0x07, 0x9c, 0xdf, 0x01, 0xf0, 0x9f, 0x39, 0xf0, 0x04, 0x63, 0x23, 0xf1, 0x47,
	0x7a, 0xb0, 0xc2, 0xcf, 0x3b, 0x61, 0x72, 0x48, 0x96, 0x0f, 0xff, 0x35, 0x8a, 0x9e, 0xe1, 0x85,
	0xf0, 0x2d, 0x29, 0x44, 0xbc, 0x73, 0xa9, 0x24, 0xf9, 0x44, 0x38, 0x15, 0xa2, 0x62, 0x8a, 0xce,
	0xf1, 0x53, 0x20, 0xad, 0xea, 0x24, 0x98, 0xe2, 0x25, 0x2f, 0x4f, 0x0c, 0xc0, 0x88, 0xe8, 0xe5,
	0x59, 0x71, 0xc6, 0xd2, 0x95, 0x47, 0x8e, 0xc3, 0x1c, 0x3c, 0x2e, 0x71, 0x9c, 0xf2, 0xb8, 0x66,
	0xdb, 0xd5, 0xb2, 0xee, 0x7e, 0x03, 0xcb, 0x17, 0x89, 0x65, 0xe6, 0x07, 0x22, 0xaf, 0xee, 0x87,
	0xf2, 0x89, 0xa0, 0xce, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf8, 0xd2, 0x05, 0x1c, 0xfa, 0x0f,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InstanceClient is the client API for Instance service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InstanceClient interface {
	CreateArgocdInstance(ctx context.Context, in *CreateArgocdInstanceRequest, opts ...grpc.CallOption) (*CreateArgocdInstanceResponse, error)
	UpdateArgocdInstance(ctx context.Context, in *UpdateArgocdInstanceRequest, opts ...grpc.CallOption) (*UpdateArgocdInstanceResponse, error)
	DeleteArgocdInstance(ctx context.Context, in *DeleteArgocdInstanceRequest, opts ...grpc.CallOption) (*DeleteArgocdInstanceResponse, error)
	GetArgocdInstance(ctx context.Context, in *GetArgocdInstanceRequest, opts ...grpc.CallOption) (*GetArgocdInstanceResponse, error)
	ListArgocdInstances(ctx context.Context, in *ListArgocdInstancesRequest, opts ...grpc.CallOption) (*ListArgocdInstancesResponse, error)
}

type instanceClient struct {
	cc *grpc.ClientConn
}

func NewInstanceClient(cc *grpc.ClientConn) InstanceClient {
	return &instanceClient{cc}
}

func (c *instanceClient) CreateArgocdInstance(ctx context.Context, in *CreateArgocdInstanceRequest, opts ...grpc.CallOption) (*CreateArgocdInstanceResponse, error) {
	out := new(CreateArgocdInstanceResponse)
	err := c.cc.Invoke(ctx, "/instance.Instance/CreateArgocdInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instanceClient) UpdateArgocdInstance(ctx context.Context, in *UpdateArgocdInstanceRequest, opts ...grpc.CallOption) (*UpdateArgocdInstanceResponse, error) {
	out := new(UpdateArgocdInstanceResponse)
	err := c.cc.Invoke(ctx, "/instance.Instance/UpdateArgocdInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instanceClient) DeleteArgocdInstance(ctx context.Context, in *DeleteArgocdInstanceRequest, opts ...grpc.CallOption) (*DeleteArgocdInstanceResponse, error) {
	out := new(DeleteArgocdInstanceResponse)
	err := c.cc.Invoke(ctx, "/instance.Instance/DeleteArgocdInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instanceClient) GetArgocdInstance(ctx context.Context, in *GetArgocdInstanceRequest, opts ...grpc.CallOption) (*GetArgocdInstanceResponse, error) {
	out := new(GetArgocdInstanceResponse)
	err := c.cc.Invoke(ctx, "/instance.Instance/GetArgocdInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instanceClient) ListArgocdInstances(ctx context.Context, in *ListArgocdInstancesRequest, opts ...grpc.CallOption) (*ListArgocdInstancesResponse, error) {
	out := new(ListArgocdInstancesResponse)
	err := c.cc.Invoke(ctx, "/instance.Instance/ListArgocdInstances", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InstanceServer is the server API for Instance service.
type InstanceServer interface {
	CreateArgocdInstance(context.Context, *CreateArgocdInstanceRequest) (*CreateArgocdInstanceResponse, error)
	UpdateArgocdInstance(context.Context, *UpdateArgocdInstanceRequest) (*UpdateArgocdInstanceResponse, error)
	DeleteArgocdInstance(context.Context, *DeleteArgocdInstanceRequest) (*DeleteArgocdInstanceResponse, error)
	GetArgocdInstance(context.Context, *GetArgocdInstanceRequest) (*GetArgocdInstanceResponse, error)
	ListArgocdInstances(context.Context, *ListArgocdInstancesRequest) (*ListArgocdInstancesResponse, error)
}

// UnimplementedInstanceServer can be embedded to have forward compatible implementations.
type UnimplementedInstanceServer struct {
}

func (*UnimplementedInstanceServer) CreateArgocdInstance(ctx context.Context, req *CreateArgocdInstanceRequest) (*CreateArgocdInstanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateArgocdInstance not implemented")
}
func (*UnimplementedInstanceServer) UpdateArgocdInstance(ctx context.Context, req *UpdateArgocdInstanceRequest) (*UpdateArgocdInstanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateArgocdInstance not implemented")
}
func (*UnimplementedInstanceServer) DeleteArgocdInstance(ctx context.Context, req *DeleteArgocdInstanceRequest) (*DeleteArgocdInstanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteArgocdInstance not implemented")
}
func (*UnimplementedInstanceServer) GetArgocdInstance(ctx context.Context, req *GetArgocdInstanceRequest) (*GetArgocdInstanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArgocdInstance not implemented")
}
func (*UnimplementedInstanceServer) ListArgocdInstances(ctx context.Context, req *ListArgocdInstancesRequest) (*ListArgocdInstancesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListArgocdInstances not implemented")
}

func RegisterInstanceServer(s *grpc.Server, srv InstanceServer) {
	s.RegisterService(&_Instance_serviceDesc, srv)
}

func _Instance_CreateArgocdInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateArgocdInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstanceServer).CreateArgocdInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/instance.Instance/CreateArgocdInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstanceServer).CreateArgocdInstance(ctx, req.(*CreateArgocdInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Instance_UpdateArgocdInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateArgocdInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstanceServer).UpdateArgocdInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/instance.Instance/UpdateArgocdInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstanceServer).UpdateArgocdInstance(ctx, req.(*UpdateArgocdInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Instance_DeleteArgocdInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteArgocdInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstanceServer).DeleteArgocdInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/instance.Instance/DeleteArgocdInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstanceServer).DeleteArgocdInstance(ctx, req.(*DeleteArgocdInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Instance_GetArgocdInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetArgocdInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstanceServer).GetArgocdInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/instance.Instance/GetArgocdInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstanceServer).GetArgocdInstance(ctx, req.(*GetArgocdInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Instance_ListArgocdInstances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListArgocdInstancesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstanceServer).ListArgocdInstances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/instance.Instance/ListArgocdInstances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstanceServer).ListArgocdInstances(ctx, req.(*ListArgocdInstancesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Instance_serviceDesc = grpc.ServiceDesc{
	ServiceName: "instance.Instance",
	HandlerType: (*InstanceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateArgocdInstance",
			Handler:    _Instance_CreateArgocdInstance_Handler,
		},
		{
			MethodName: "UpdateArgocdInstance",
			Handler:    _Instance_UpdateArgocdInstance_Handler,
		},
		{
			MethodName: "DeleteArgocdInstance",
			Handler:    _Instance_DeleteArgocdInstance_Handler,
		},
		{
			MethodName: "GetArgocdInstance",
			Handler:    _Instance_GetArgocdInstance_Handler,
		},
		{
			MethodName: "ListArgocdInstances",
			Handler:    _Instance_ListArgocdInstances_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/sdk/instance/instance.proto",
}
