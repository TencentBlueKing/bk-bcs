syntax = "proto2";
option go_package = "github.com/Tencent/bk-bcs/bcs-services/bcs-argocd-manager/pkg/sdk/plugin";

package plugin;

import "github.com/Tencent/bk-bcs/bcs-services/bcs-argocd-manager/pkg/apis/tkex/v1alpha1/generated.proto";

// CRUD for Argocd Plugin
message CreateArgocdPluginRequest {
  required github.com.Tencent.bk_bcs.bcs_services.bcs_argocd_manager.pkg.apis.tkex.v1alpha1.ArgocdPlugin plugin = 1;
  optional bool upsert = 2;
}

message CreateArgocdPluginResponse {
  required github.com.Tencent.bk_bcs.bcs_services.bcs_argocd_manager.pkg.apis.tkex.v1alpha1.ArgocdPlugin plugin = 1;
}

message UpdateArgocdPluginRequest {
  required github.com.Tencent.bk_bcs.bcs_services.bcs_argocd_manager.pkg.apis.tkex.v1alpha1.ArgocdPlugin plugin = 1;
}

message UpdateArgocdPluginResponse {
  required github.com.Tencent.bk_bcs.bcs_services.bcs_argocd_manager.pkg.apis.tkex.v1alpha1.ArgocdPlugin plugin = 1;
}

message DeleteArgocdPluginRequest {
  required string name = 1;
}

message DeleteArgocdPluginResponse {
}

message GetArgocdPluginRequest {
  required string name = 1;
}

message GetArgocdPluginResponse {
  required github.com.Tencent.bk_bcs.bcs_services.bcs_argocd_manager.pkg.apis.tkex.v1alpha1.ArgocdPlugin plugin = 1;
}

message ListArgocdPluginsRequest {
  optional string project = 1;
}

message ListArgocdPluginsResponse {
  required github.com.Tencent.bk_bcs.bcs_services.bcs_argocd_manager.pkg.apis.tkex.v1alpha1.ArgocdPluginList plugins = 1;
}

service PluginService {
  rpc CreateArgocdPlugin(CreateArgocdPluginRequest) returns (CreateArgocdPluginResponse) {}
  rpc UpdateArgocdPlugin(UpdateArgocdPluginRequest) returns (UpdateArgocdPluginResponse) {}
  rpc DeleteArgocdPlugin(DeleteArgocdPluginRequest) returns (DeleteArgocdPluginResponse) {}
  rpc GetArgocdPlugin(GetArgocdPluginRequest) returns (GetArgocdPluginResponse) {}
  rpc ListArgocdPlugins(ListArgocdPluginsRequest) returns (ListArgocdPluginsResponse) {}
}