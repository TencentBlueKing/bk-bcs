// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/sdk/project/project.proto

package project

import (
	context "context"
	fmt "fmt"
	v1alpha1 "github.com/Tencent/bk-bcs/bcs-services/bcs-argocd-manager/pkg/apis/tkex/v1alpha1"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// CRUD for Argocd Project
type CreateArgocdProjectRequest struct {
	Project              *v1alpha1.ArgocdProject `protobuf:"bytes,1,req,name=project" json:"project,omitempty"`
	Upsert               *bool                   `protobuf:"varint,2,opt,name=upsert" json:"upsert,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CreateArgocdProjectRequest) Reset()         { *m = CreateArgocdProjectRequest{} }
func (m *CreateArgocdProjectRequest) String() string { return proto.CompactTextString(m) }
func (*CreateArgocdProjectRequest) ProtoMessage()    {}
func (*CreateArgocdProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b910ed87ec468929, []int{0}
}

func (m *CreateArgocdProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateArgocdProjectRequest.Unmarshal(m, b)
}
func (m *CreateArgocdProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateArgocdProjectRequest.Marshal(b, m, deterministic)
}
func (m *CreateArgocdProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateArgocdProjectRequest.Merge(m, src)
}
func (m *CreateArgocdProjectRequest) XXX_Size() int {
	return xxx_messageInfo_CreateArgocdProjectRequest.Size(m)
}
func (m *CreateArgocdProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateArgocdProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateArgocdProjectRequest proto.InternalMessageInfo

func (m *CreateArgocdProjectRequest) GetProject() *v1alpha1.ArgocdProject {
	if m != nil {
		return m.Project
	}
	return nil
}

func (m *CreateArgocdProjectRequest) GetUpsert() bool {
	if m != nil && m.Upsert != nil {
		return *m.Upsert
	}
	return false
}

type CreateArgocdProjectResponse struct {
	Project              *v1alpha1.ArgocdProject `protobuf:"bytes,1,req,name=project" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CreateArgocdProjectResponse) Reset()         { *m = CreateArgocdProjectResponse{} }
func (m *CreateArgocdProjectResponse) String() string { return proto.CompactTextString(m) }
func (*CreateArgocdProjectResponse) ProtoMessage()    {}
func (*CreateArgocdProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b910ed87ec468929, []int{1}
}

func (m *CreateArgocdProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateArgocdProjectResponse.Unmarshal(m, b)
}
func (m *CreateArgocdProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateArgocdProjectResponse.Marshal(b, m, deterministic)
}
func (m *CreateArgocdProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateArgocdProjectResponse.Merge(m, src)
}
func (m *CreateArgocdProjectResponse) XXX_Size() int {
	return xxx_messageInfo_CreateArgocdProjectResponse.Size(m)
}
func (m *CreateArgocdProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateArgocdProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateArgocdProjectResponse proto.InternalMessageInfo

func (m *CreateArgocdProjectResponse) GetProject() *v1alpha1.ArgocdProject {
	if m != nil {
		return m.Project
	}
	return nil
}

type UpdateArgocdProjectRequest struct {
	Project              *v1alpha1.ArgocdProject `protobuf:"bytes,1,req,name=project" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *UpdateArgocdProjectRequest) Reset()         { *m = UpdateArgocdProjectRequest{} }
func (m *UpdateArgocdProjectRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateArgocdProjectRequest) ProtoMessage()    {}
func (*UpdateArgocdProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b910ed87ec468929, []int{2}
}

func (m *UpdateArgocdProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateArgocdProjectRequest.Unmarshal(m, b)
}
func (m *UpdateArgocdProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateArgocdProjectRequest.Marshal(b, m, deterministic)
}
func (m *UpdateArgocdProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateArgocdProjectRequest.Merge(m, src)
}
func (m *UpdateArgocdProjectRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateArgocdProjectRequest.Size(m)
}
func (m *UpdateArgocdProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateArgocdProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateArgocdProjectRequest proto.InternalMessageInfo

func (m *UpdateArgocdProjectRequest) GetProject() *v1alpha1.ArgocdProject {
	if m != nil {
		return m.Project
	}
	return nil
}

type UpdateArgocdProjectResponse struct {
	Project              *v1alpha1.ArgocdProject `protobuf:"bytes,1,req,name=project" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *UpdateArgocdProjectResponse) Reset()         { *m = UpdateArgocdProjectResponse{} }
func (m *UpdateArgocdProjectResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateArgocdProjectResponse) ProtoMessage()    {}
func (*UpdateArgocdProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b910ed87ec468929, []int{3}
}

func (m *UpdateArgocdProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateArgocdProjectResponse.Unmarshal(m, b)
}
func (m *UpdateArgocdProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateArgocdProjectResponse.Marshal(b, m, deterministic)
}
func (m *UpdateArgocdProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateArgocdProjectResponse.Merge(m, src)
}
func (m *UpdateArgocdProjectResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateArgocdProjectResponse.Size(m)
}
func (m *UpdateArgocdProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateArgocdProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateArgocdProjectResponse proto.InternalMessageInfo

func (m *UpdateArgocdProjectResponse) GetProject() *v1alpha1.ArgocdProject {
	if m != nil {
		return m.Project
	}
	return nil
}

type DeleteArgocdProjectRequest struct {
	Name                 *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteArgocdProjectRequest) Reset()         { *m = DeleteArgocdProjectRequest{} }
func (m *DeleteArgocdProjectRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteArgocdProjectRequest) ProtoMessage()    {}
func (*DeleteArgocdProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b910ed87ec468929, []int{4}
}

func (m *DeleteArgocdProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteArgocdProjectRequest.Unmarshal(m, b)
}
func (m *DeleteArgocdProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteArgocdProjectRequest.Marshal(b, m, deterministic)
}
func (m *DeleteArgocdProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteArgocdProjectRequest.Merge(m, src)
}
func (m *DeleteArgocdProjectRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteArgocdProjectRequest.Size(m)
}
func (m *DeleteArgocdProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteArgocdProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteArgocdProjectRequest proto.InternalMessageInfo

func (m *DeleteArgocdProjectRequest) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type DeleteArgocdProjectResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteArgocdProjectResponse) Reset()         { *m = DeleteArgocdProjectResponse{} }
func (m *DeleteArgocdProjectResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteArgocdProjectResponse) ProtoMessage()    {}
func (*DeleteArgocdProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b910ed87ec468929, []int{5}
}

func (m *DeleteArgocdProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteArgocdProjectResponse.Unmarshal(m, b)
}
func (m *DeleteArgocdProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteArgocdProjectResponse.Marshal(b, m, deterministic)
}
func (m *DeleteArgocdProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteArgocdProjectResponse.Merge(m, src)
}
func (m *DeleteArgocdProjectResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteArgocdProjectResponse.Size(m)
}
func (m *DeleteArgocdProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteArgocdProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteArgocdProjectResponse proto.InternalMessageInfo

type GetArgocdProjectRequest struct {
	Name                 *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetArgocdProjectRequest) Reset()         { *m = GetArgocdProjectRequest{} }
func (m *GetArgocdProjectRequest) String() string { return proto.CompactTextString(m) }
func (*GetArgocdProjectRequest) ProtoMessage()    {}
func (*GetArgocdProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b910ed87ec468929, []int{6}
}

func (m *GetArgocdProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetArgocdProjectRequest.Unmarshal(m, b)
}
func (m *GetArgocdProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetArgocdProjectRequest.Marshal(b, m, deterministic)
}
func (m *GetArgocdProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArgocdProjectRequest.Merge(m, src)
}
func (m *GetArgocdProjectRequest) XXX_Size() int {
	return xxx_messageInfo_GetArgocdProjectRequest.Size(m)
}
func (m *GetArgocdProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArgocdProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetArgocdProjectRequest proto.InternalMessageInfo

func (m *GetArgocdProjectRequest) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type GetArgocdProjectResponse struct {
	Project              *v1alpha1.ArgocdProject `protobuf:"bytes,1,req,name=project" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetArgocdProjectResponse) Reset()         { *m = GetArgocdProjectResponse{} }
func (m *GetArgocdProjectResponse) String() string { return proto.CompactTextString(m) }
func (*GetArgocdProjectResponse) ProtoMessage()    {}
func (*GetArgocdProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b910ed87ec468929, []int{7}
}

func (m *GetArgocdProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetArgocdProjectResponse.Unmarshal(m, b)
}
func (m *GetArgocdProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetArgocdProjectResponse.Marshal(b, m, deterministic)
}
func (m *GetArgocdProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArgocdProjectResponse.Merge(m, src)
}
func (m *GetArgocdProjectResponse) XXX_Size() int {
	return xxx_messageInfo_GetArgocdProjectResponse.Size(m)
}
func (m *GetArgocdProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArgocdProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetArgocdProjectResponse proto.InternalMessageInfo

func (m *GetArgocdProjectResponse) GetProject() *v1alpha1.ArgocdProject {
	if m != nil {
		return m.Project
	}
	return nil
}

type ListArgocdProjectsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListArgocdProjectsRequest) Reset()         { *m = ListArgocdProjectsRequest{} }
func (m *ListArgocdProjectsRequest) String() string { return proto.CompactTextString(m) }
func (*ListArgocdProjectsRequest) ProtoMessage()    {}
func (*ListArgocdProjectsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b910ed87ec468929, []int{8}
}

func (m *ListArgocdProjectsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArgocdProjectsRequest.Unmarshal(m, b)
}
func (m *ListArgocdProjectsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArgocdProjectsRequest.Marshal(b, m, deterministic)
}
func (m *ListArgocdProjectsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArgocdProjectsRequest.Merge(m, src)
}
func (m *ListArgocdProjectsRequest) XXX_Size() int {
	return xxx_messageInfo_ListArgocdProjectsRequest.Size(m)
}
func (m *ListArgocdProjectsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArgocdProjectsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListArgocdProjectsRequest proto.InternalMessageInfo

type ListArgocdProjectsResponse struct {
	Projects             *v1alpha1.ArgocdProjectList `protobuf:"bytes,1,req,name=projects" json:"projects,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ListArgocdProjectsResponse) Reset()         { *m = ListArgocdProjectsResponse{} }
func (m *ListArgocdProjectsResponse) String() string { return proto.CompactTextString(m) }
func (*ListArgocdProjectsResponse) ProtoMessage()    {}
func (*ListArgocdProjectsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b910ed87ec468929, []int{9}
}

func (m *ListArgocdProjectsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArgocdProjectsResponse.Unmarshal(m, b)
}
func (m *ListArgocdProjectsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArgocdProjectsResponse.Marshal(b, m, deterministic)
}
func (m *ListArgocdProjectsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArgocdProjectsResponse.Merge(m, src)
}
func (m *ListArgocdProjectsResponse) XXX_Size() int {
	return xxx_messageInfo_ListArgocdProjectsResponse.Size(m)
}
func (m *ListArgocdProjectsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArgocdProjectsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListArgocdProjectsResponse proto.InternalMessageInfo

func (m *ListArgocdProjectsResponse) GetProjects() *v1alpha1.ArgocdProjectList {
	if m != nil {
		return m.Projects
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateArgocdProjectRequest)(nil), "project.CreateArgocdProjectRequest")
	proto.RegisterType((*CreateArgocdProjectResponse)(nil), "project.CreateArgocdProjectResponse")
	proto.RegisterType((*UpdateArgocdProjectRequest)(nil), "project.UpdateArgocdProjectRequest")
	proto.RegisterType((*UpdateArgocdProjectResponse)(nil), "project.UpdateArgocdProjectResponse")
	proto.RegisterType((*DeleteArgocdProjectRequest)(nil), "project.DeleteArgocdProjectRequest")
	proto.RegisterType((*DeleteArgocdProjectResponse)(nil), "project.DeleteArgocdProjectResponse")
	proto.RegisterType((*GetArgocdProjectRequest)(nil), "project.GetArgocdProjectRequest")
	proto.RegisterType((*GetArgocdProjectResponse)(nil), "project.GetArgocdProjectResponse")
	proto.RegisterType((*ListArgocdProjectsRequest)(nil), "project.ListArgocdProjectsRequest")
	proto.RegisterType((*ListArgocdProjectsResponse)(nil), "project.ListArgocdProjectsResponse")
}

func init() { proto.RegisterFile("pkg/sdk/project/project.proto", fileDescriptor_b910ed87ec468929) }

var fileDescriptor_b910ed87ec468929 = []byte{
	// 942 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x96, 0xdf, 0x6b, 0xe4, 0x54,
	0x14, 0xc7, 0xc9, 0xa0, 0xbb, 0xeb, 0x55, 0x70, 0xc9, 0x32, 0xd8, 0xde, 0xb6, 0x92, 0xcd, 0x2e,
	0x38, 0x46, 0x27, 0xe9, 0x64, 0xdd, 0xa5, 0x3b, 0x8b, 0x42, 0x66, 0x17, 0x16, 0xc1, 0x85, 0x65,
	0x58, 0x41, 0xf6, 0x65, 0xcc, 0x64, 0xae, 0xd9, 0xd9, 0x99, 0x26, 0x31, 0x37, 0xad, 0x82, 0x08,
	0xba, 0xec, 0xc3, 0x22, 0x8a, 0x25, 0x96, 0x5a, 0x1d, 0xd0, 0x56, 0x5a, 0x7f, 0x80, 0x74, 0x2a,
	0xf8, 0xa3, 0xb6, 0x42, 0xff, 0x08, 0x1f, 0xfc, 0x07, 0x66, 0xd2, 0xe9, 0x83, 0x88, 0xf8, 0x0f,
	0x48, 0x92, 0x9b, 0x4c, 0x32, 0x93, 0xc4, 0x17, 0x17, 0xda, 0xa7, 0x99, 0x7b, 0x73, 0xce, 0x3d,
	0x9f, 0xef, 0x39, 0x27, 0x27, 0x17, 0xcc, 0x18, 0x2d, 0x55, 0xc0, 0x8d, 0x96, 0x60, 0x98, 0xfa,
	0x5d, 0xa4, 0x58, 0xc1, 0x2f, 0x6f, 0x98, 0xba, 0xa5, 0xd3, 0x27, 0xc9, 0x12, 0xbe, 0xae, 0x36,
	0xad, 0x3b, 0x0b, 0x75, 0x5e, 0xd1, 0xe7, 0x85, 0x5b, 0x48, 0x53, 0x90, 0x66, 0x09, 0xf5, 0x56,
	0xb1, 0xae, 0x60, 0xa1, 0xae, 0xe0, 0x22, 0x46, 0xe6, 0x62, 0x53, 0x41, 0xfe, 0x42, 0x36, 0x55,
	0x5d, 0x69, 0x14, 0xe7, 0x65, 0x4d, 0x56, 0x91, 0x29, 0xb8, 0x11, 0x64, 0xa3, 0x89, 0x05, 0xab,
	0x85, 0xde, 0x16, 0x16, 0x4b, 0x72, 0xdb, 0xb8, 0x23, 0x97, 0x04, 0x15, 0x69, 0xc8, 0x94, 0x2d,
	0xd4, 0xf0, 0x43, 0xc1, 0xe7, 0xbd, 0x1f, 0xa5, 0xa8, 0x22, 0xad, 0x88, 0xdf, 0x92, 0x55, 0xd7,
	0x55, 0x37, 0xac, 0xa6, 0xae, 0x61, 0x41, 0xd6, 0x34, 0xdd, 0x92, 0xbd, 0xff, 0xc4, 0x7a, 0x5a,
	0xd5, 0x75, 0xb5, 0x8d, 0xdc, 0x83, 0xc7, 0x9f, 0xb2, 0x3f, 0xe5, 0x00, 0xbc, 0x6a, 0x22, 0xd9,
	0x42, 0x92, 0xc7, 0x72, 0xd3, 0x57, 0x51, 0x45, 0x6f, 0x2e, 0x20, 0x6c, 0xd1, 0xab, 0x14, 0x08,
	0x84, 0x4d, 0x50, 0x4c, 0xae, 0xf0, 0xb8, 0x58, 0xe3, 0x87, 0xfa, 0x78, 0xa2, 0x8f, 0xaf, 0xb7,
	0x6a, 0x75, 0x05, 0xf3, 0x75, 0x05, 0xd7, 0x02, 0x7d, 0xde, 0xc2, 0xd7, 0x57, 0x23, 0xfa, 0x78,
	0xa3, 0xa5, 0xf2, 0xae, 0x3e, 0xde, 0xd5, 0xc7, 0x07, 0xfa, 0xf8, 0x58, 0xe4, 0xca, 0x8c, 0x2d,
	0x41, 0x2e, 0x08, 0x2a, 0x3e, 0x79, 0xb8, 0xfe, 0xeb, 0x41, 0x67, 0xeb, 0xe0, 0xf3, 0xfb, 0xbd,
	0xfd, 0x75, 0xe7, 0xfd, 0x6e, 0x35, 0x78, 0x42, 0x57, 0xc0, 0x89, 0x05, 0x03, 0x23, 0xd3, 0x9a,
	0xc8, 0x31, 0x54, 0xe1, 0x54, 0x85, 0xb3, 0xa5, 0x67, 0x38, 0xb2, 0x25, 0xce, 0x38, 0xab, 0xdd,
	0xfe, 0xd2, 0xd7, 0x4e, 0xe7, 0x47, 0x67, 0x65, 0xfb, 0xaf, 0xdf, 0x3e, 0x3c, 0xdc, 0x5b, 0x1d,
	0x6c, 0x6d, 0xf4, 0x76, 0x76, 0xdf, 0x90, 0xdb, 0x18, 0x55, 0x89, 0x59, 0x79, 0xce, 0x96, 0x2e,
	0x82, 0x0b, 0x5c, 0x46, 0x06, 0xc4, 0x7c, 0xff, 0x41, 0xa7, 0xbf, 0xb7, 0x1b, 0x62, 0x0c, 0xba,
	0xbf, 0x38, 0x3f, 0xdc, 0x63, 0xff, 0xa1, 0xc0, 0x54, 0xa2, 0x17, 0x36, 0x74, 0x0d, 0xa3, 0x23,
	0x9c, 0xb8, 0xf2, 0x65, 0x5b, 0xba, 0x04, 0x5e, 0xe0, 0xb2, 0xf0, 0xc5, 0xbc, 0xb3, 0xb2, 0x1d,
	0x53, 0xbd, 0xbf, 0xdc, 0xef, 0x7c, 0xc1, 0xfe, 0x4d, 0x01, 0xf8, 0xaa, 0xd1, 0x38, 0x7e, 0xdd,
	0x12, 0x56, 0x3a, 0x9d, 0x5e, 0xcc, 0xfb, 0xdd, 0x92, 0x54, 0xe9, 0x44, 0xaf, 0xe3, 0x53, 0xe9,
	0x0c, 0xfc, 0x40, 0xb5, 0xf3, 0xb1, 0xdd, 0xdb, 0xfb, 0x79, 0x58, 0xe9, 0x25, 0x0a, 0xc0, 0x6b,
	0xa8, 0x8d, 0x52, 0x2a, 0x3d, 0x07, 0x1e, 0xd1, 0xe4, 0x79, 0xe4, 0x09, 0x7e, 0xac, 0x72, 0xde,
	0x96, 0xce, 0x72, 0xde, 0x86, 0x38, 0x19, 0xc2, 0xf4, 0x97, 0x3e, 0x3a, 0xf8, 0x66, 0xbb, 0xd0,
	0x5f, 0xee, 0xf6, 0x76, 0xde, 0x6b, 0x36, 0x9e, 0xad, 0x7a, 0x06, 0x61, 0x21, 0xd2, 0x0f, 0x77,
	0x5f, 0xb9, 0xb5, 0xc3, 0xcf, 0x36, 0x46, 0x0b, 0xf1, 0x1a, 0x98, 0x4a, 0x74, 0xf2, 0x85, 0x84,
	0x62, 0x33, 0x6c, 0xd2, 0x4e, 0xfe, 0x80, 0x02, 0x4f, 0x5d, 0x47, 0xd6, 0xff, 0xac, 0xf4, 0xa2,
	0x2d, 0x89, 0x60, 0x96, 0x4b, 0x3b, 0x59, 0xcc, 0x3b, 0x5f, 0x6e, 0x0e, 0xba, 0x5f, 0x8d, 0xc2,
	0xfc, 0x49, 0x81, 0x89, 0x71, 0x97, 0xa3, 0xdf, 0x6c, 0x97, 0x6c, 0xe9, 0x02, 0x28, 0x71, 0xa9,
	0xec, 0x81, 0xde, 0xd1, 0x4e, 0xbb, 0x0d, 0x26, 0x5f, 0x69, 0xe2, 0xb8, 0x0f, 0x26, 0x39, 0x2a,
	0xbf, 0x68, 0x4b, 0x65, 0x30, 0xc7, 0xa5, 0x5b, 0x88, 0x53, 0xd1, 0x2c, 0xf6, 0x1f, 0x7c, 0x3a,
	0x58, 0xff, 0x76, 0x98, 0xcb, 0xfb, 0x39, 0x00, 0x93, 0x5c, 0x49, 0x36, 0x37, 0x29, 0x70, 0x8a,
	0xe0, 0x63, 0x92, 0x4e, 0xe5, 0x21, 0xa7, 0xd3, 0xa5, 0xf1, 0xbb, 0x28, 0x8c, 0x2c, 0xe6, 0x47,
	0xe0, 0x49, 0x66, 0x43, 0x83, 0xf2, 0x4b, 0xb6, 0x74, 0x05, 0x5c, 0xe6, 0x32, 0xa4, 0xa4, 0xa5,
	0xc1, 0x4b, 0xb1, 0xf8, 0xc7, 0x09, 0x70, 0x92, 0x78, 0xb8, 0x9a, 0xcf, 0x24, 0x4c, 0x7e, 0xfa,
	0x1c, 0x1f, 0xdc, 0x67, 0xd2, 0x3f, 0x86, 0xf0, 0x7c, 0xb6, 0x91, 0xcf, 0xc2, 0x5e, 0xb5, 0xa5,
	0x69, 0xfa, 0x89, 0xe8, 0x77, 0x13, 0xc6, 0x56, 0xf7, 0x7e, 0xef, 0x7d, 0x92, 0x7b, 0x9a, 0x9d,
	0x14, 0xfc, 0xfc, 0x05, 0xb7, 0x9f, 0xc5, 0x52, 0x70, 0xa5, 0x2a, 0x53, 0x9c, 0xc7, 0x99, 0x30,
	0xb7, 0x22, 0x9c, 0xe9, 0xa3, 0x3c, 0xc2, 0x99, 0x31, 0xfa, 0x08, 0x67, 0x74, 0xea, 0xc3, 0xd8,
	0xca, 0xe7, 0x84, 0xd9, 0x9c, 0xdf, 0x51, 0xe0, 0x4c, 0xc2, 0xc8, 0x89, 0x70, 0xa6, 0x4f, 0xba,
	0x08, 0x67, 0xc6, 0xd4, 0x62, 0xaf, 0x93, 0x7c, 0x0e, 0x47, 0x17, 0x8c, 0xad, 0x3c, 0x4e, 0x96,
	0x63, 0x52, 0x39, 0x85, 0x77, 0xdc, 0x81, 0xf4, 0x2e, 0xbd, 0x46, 0x81, 0xd3, 0xa3, 0xaf, 0x27,
	0xcd, 0x84, 0x0c, 0x29, 0x83, 0x0a, 0x9e, 0xcd, 0xb0, 0x88, 0x21, 0x46, 0x7b, 0x10, 0xc6, 0x56,
	0x3e, 0x22, 0xfd, 0xdf, 0x88, 0xdf, 0x53, 0x80, 0x1e, 0x6f, 0x73, 0x9a, 0x0d, 0x11, 0x52, 0x27,
	0x01, 0x3c, 0x97, 0x69, 0x43, 0x40, 0x6f, 0xd8, 0x52, 0x81, 0xa6, 0xc7, 0x5f, 0x16, 0x98, 0xb0,
	0xe7, 0x41, 0x4f, 0xd3, 0x30, 0x15, 0x1a, 0x57, 0x14, 0x5b, 0xba, 0x45, 0x3f, 0x07, 0xd8, 0x8a,
	0x82, 0x19, 0x3f, 0x22, 0x73, 0xc3, 0x37, 0x63, 0x48, 0x68, 0x46, 0xba, 0xf9, 0x32, 0x73, 0x4d,
	0x57, 0xc4, 0x47, 0x67, 0xf9, 0x12, 0x3f, 0xcb, 0x51, 0x94, 0x78, 0x5a, 0x36, 0x8c, 0x76, 0x53,
	0xf1, 0xee, 0xe1, 0xc2, 0x5d, 0xac, 0x6b, 0xe5, 0xb1, 0x9d, 0xdb, 0x80, 0x17, 0xae, 0x90, 0x28,
	0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x8a, 0x74, 0x1f, 0x8d, 0x7a, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProjectClient is the client API for Project service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProjectClient interface {
	CreateArgocdProject(ctx context.Context, in *CreateArgocdProjectRequest, opts ...grpc.CallOption) (*CreateArgocdProjectResponse, error)
	UpdateArgocdProject(ctx context.Context, in *UpdateArgocdProjectRequest, opts ...grpc.CallOption) (*UpdateArgocdProjectResponse, error)
	DeleteArgocdProject(ctx context.Context, in *DeleteArgocdProjectRequest, opts ...grpc.CallOption) (*DeleteArgocdProjectResponse, error)
	GetArgocdProject(ctx context.Context, in *GetArgocdProjectRequest, opts ...grpc.CallOption) (*GetArgocdProjectResponse, error)
	ListArgocdProjects(ctx context.Context, in *ListArgocdProjectsRequest, opts ...grpc.CallOption) (*ListArgocdProjectsResponse, error)
}

type projectClient struct {
	cc *grpc.ClientConn
}

func NewProjectClient(cc *grpc.ClientConn) ProjectClient {
	return &projectClient{cc}
}

func (c *projectClient) CreateArgocdProject(ctx context.Context, in *CreateArgocdProjectRequest, opts ...grpc.CallOption) (*CreateArgocdProjectResponse, error) {
	out := new(CreateArgocdProjectResponse)
	err := c.cc.Invoke(ctx, "/project.Project/CreateArgocdProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectClient) UpdateArgocdProject(ctx context.Context, in *UpdateArgocdProjectRequest, opts ...grpc.CallOption) (*UpdateArgocdProjectResponse, error) {
	out := new(UpdateArgocdProjectResponse)
	err := c.cc.Invoke(ctx, "/project.Project/UpdateArgocdProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectClient) DeleteArgocdProject(ctx context.Context, in *DeleteArgocdProjectRequest, opts ...grpc.CallOption) (*DeleteArgocdProjectResponse, error) {
	out := new(DeleteArgocdProjectResponse)
	err := c.cc.Invoke(ctx, "/project.Project/DeleteArgocdProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectClient) GetArgocdProject(ctx context.Context, in *GetArgocdProjectRequest, opts ...grpc.CallOption) (*GetArgocdProjectResponse, error) {
	out := new(GetArgocdProjectResponse)
	err := c.cc.Invoke(ctx, "/project.Project/GetArgocdProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectClient) ListArgocdProjects(ctx context.Context, in *ListArgocdProjectsRequest, opts ...grpc.CallOption) (*ListArgocdProjectsResponse, error) {
	out := new(ListArgocdProjectsResponse)
	err := c.cc.Invoke(ctx, "/project.Project/ListArgocdProjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProjectServer is the server API for Project service.
type ProjectServer interface {
	CreateArgocdProject(context.Context, *CreateArgocdProjectRequest) (*CreateArgocdProjectResponse, error)
	UpdateArgocdProject(context.Context, *UpdateArgocdProjectRequest) (*UpdateArgocdProjectResponse, error)
	DeleteArgocdProject(context.Context, *DeleteArgocdProjectRequest) (*DeleteArgocdProjectResponse, error)
	GetArgocdProject(context.Context, *GetArgocdProjectRequest) (*GetArgocdProjectResponse, error)
	ListArgocdProjects(context.Context, *ListArgocdProjectsRequest) (*ListArgocdProjectsResponse, error)
}

// UnimplementedProjectServer can be embedded to have forward compatible implementations.
type UnimplementedProjectServer struct {
}

func (*UnimplementedProjectServer) CreateArgocdProject(ctx context.Context, req *CreateArgocdProjectRequest) (*CreateArgocdProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateArgocdProject not implemented")
}
func (*UnimplementedProjectServer) UpdateArgocdProject(ctx context.Context, req *UpdateArgocdProjectRequest) (*UpdateArgocdProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateArgocdProject not implemented")
}
func (*UnimplementedProjectServer) DeleteArgocdProject(ctx context.Context, req *DeleteArgocdProjectRequest) (*DeleteArgocdProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteArgocdProject not implemented")
}
func (*UnimplementedProjectServer) GetArgocdProject(ctx context.Context, req *GetArgocdProjectRequest) (*GetArgocdProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArgocdProject not implemented")
}
func (*UnimplementedProjectServer) ListArgocdProjects(ctx context.Context, req *ListArgocdProjectsRequest) (*ListArgocdProjectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListArgocdProjects not implemented")
}

func RegisterProjectServer(s *grpc.Server, srv ProjectServer) {
	s.RegisterService(&_Project_serviceDesc, srv)
}

func _Project_CreateArgocdProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateArgocdProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServer).CreateArgocdProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.Project/CreateArgocdProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServer).CreateArgocdProject(ctx, req.(*CreateArgocdProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Project_UpdateArgocdProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateArgocdProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServer).UpdateArgocdProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.Project/UpdateArgocdProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServer).UpdateArgocdProject(ctx, req.(*UpdateArgocdProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Project_DeleteArgocdProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteArgocdProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServer).DeleteArgocdProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.Project/DeleteArgocdProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServer).DeleteArgocdProject(ctx, req.(*DeleteArgocdProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Project_GetArgocdProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetArgocdProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServer).GetArgocdProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.Project/GetArgocdProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServer).GetArgocdProject(ctx, req.(*GetArgocdProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Project_ListArgocdProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListArgocdProjectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServer).ListArgocdProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.Project/ListArgocdProjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServer).ListArgocdProjects(ctx, req.(*ListArgocdProjectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Project_serviceDesc = grpc.ServiceDesc{
	ServiceName: "project.Project",
	HandlerType: (*ProjectServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateArgocdProject",
			Handler:    _Project_CreateArgocdProject_Handler,
		},
		{
			MethodName: "UpdateArgocdProject",
			Handler:    _Project_UpdateArgocdProject_Handler,
		},
		{
			MethodName: "DeleteArgocdProject",
			Handler:    _Project_DeleteArgocdProject_Handler,
		},
		{
			MethodName: "GetArgocdProject",
			Handler:    _Project_GetArgocdProject_Handler,
		},
		{
			MethodName: "ListArgocdProjects",
			Handler:    _Project_ListArgocdProjects_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/sdk/project/project.proto",
}
