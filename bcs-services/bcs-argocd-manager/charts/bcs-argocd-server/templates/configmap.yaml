apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "common.names.fullname" . }}-config
  namespace: {{ .Release.Namespace }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: bcs-argocd-server
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" (dict "value" .Values.commonLabels "context" $) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" (dict "value" .Values.commonAnnotations "context" $) | nindent 4 }}
  {{- end }}
data:
  bcs-argocd-server.json.template: |-
    {
      "etcd": {
        "endpoints": "{{ include "bcs-common.etcd.host" ( dict "localStorage" .Values.storage "globalStorage" .Values.global.storage "namespace" .Release.Namespace ) }}",
        "cert": "/data/bcs/cert/etcd/etcd.pem",
        "key": "/data/bcs/cert/etcd/etcd-key.pem",
        "ca": "/data/bcs/cert/etcd/etcd-ca.pem"
      },
      "bcslog": {
        "dir": "{{ .Values.argocdserver.log.dir }}",
        "maxsize": {{ .Values.argocdserver.log.maxSize }},
        "maxnum": {{ .Values.argocdserver.log.maxNum }},
        "tostderr": false,
        "alsotostderr": true,
        "v": {{ .Values.argocdserver.log.verbosity }},
        "stderrthreshold": "2",
        "vmodule": "",
        "backtraceat": ""
      },
      "swagger": {
        "dir": "/data/bcs/swagger"
      },
      "masterurl": "",
      "kubeconfig": "",
      "debug": false,
      "address": "$localIp",
      "insecureaddress": "$localIp",
      "port": {{ .Values.argocdserver.service.grpcPort }},
      "httpport": {{ .Values.argocdserver.service.httpPort }},
      "metricport": {{ .Values.argocdserver.service.metricPort }},
      "serverca": "/data/bcs/cert/bcs/bcs-ca.crt",
      "servercert": "/data/bcs/cert/bcs/bcs-server.crt",
      "serverkey": "/data/bcs/cert/bcs/bcs-server.key",
      "clientca": "/data/bcs/cert/bcs/bcs-ca.crt",
      "clientcert": "/data/bcs/cert/bcs/bcs-client.crt",
      "clientkey": "/data/bcs/cert/bcs/bcs-client.key"
    }
