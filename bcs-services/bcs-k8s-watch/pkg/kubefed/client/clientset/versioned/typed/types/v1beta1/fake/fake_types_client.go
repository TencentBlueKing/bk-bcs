/*
 * Tencent is pleased to support the open source community by making Blueking Container Service available.
 * Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
 * Licensed under the MIT License (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * http://opensource.org/licenses/MIT
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1beta1 "github.com/Tencent/bk-bcs/bcs-services/bcs-k8s-watch/pkg/kubefed/client/clientset/versioned/typed/types/v1beta1"

	rest "k8s.io/client-go/rest"
	testing "k8s.io/client-go/testing"
)

type FakeTypesV1beta1 struct {
	*testing.Fake
}

func (c *FakeTypesV1beta1) FederatedClusterRoles(namespace string) v1beta1.FederatedClusterRoleInterface {
	return &FakeFederatedClusterRoles{c, namespace}
}

func (c *FakeTypesV1beta1) FederatedClusterRoleBindings(namespace string) v1beta1.FederatedClusterRoleBindingInterface {
	return &FakeFederatedClusterRoleBindings{c, namespace}
}

func (c *FakeTypesV1beta1) FederatedConfigMaps(namespace string) v1beta1.FederatedConfigMapInterface {
	return &FakeFederatedConfigMaps{c, namespace}
}

func (c *FakeTypesV1beta1) FederatedDaemonSets(namespace string) v1beta1.FederatedDaemonSetInterface {
	return &FakeFederatedDaemonSets{c, namespace}
}

func (c *FakeTypesV1beta1) FederatedDeployments(namespace string) v1beta1.FederatedDeploymentInterface {
	return &FakeFederatedDeployments{c, namespace}
}

func (c *FakeTypesV1beta1) FederatedEndpointses(namespace string) v1beta1.FederatedEndpointsInterface {
	return &FakeFederatedEndpointses{c, namespace}
}

func (c *FakeTypesV1beta1) FederatedIngresses(namespace string) v1beta1.FederatedIngressInterface {
	return &FakeFederatedIngresses{c, namespace}
}

func (c *FakeTypesV1beta1) FederatedJobs(namespace string) v1beta1.FederatedJobInterface {
	return &FakeFederatedJobs{c, namespace}
}

func (c *FakeTypesV1beta1) FederatedNamespaces(namespace string) v1beta1.FederatedNamespaceInterface {
	return &FakeFederatedNamespaces{c, namespace}
}

func (c *FakeTypesV1beta1) FederatedReplicaSets(namespace string) v1beta1.FederatedReplicaSetInterface {
	return &FakeFederatedReplicaSets{c, namespace}
}

func (c *FakeTypesV1beta1) FederatedReplicationControllers(namespace string) v1beta1.FederatedReplicationControllerInterface {
	return &FakeFederatedReplicationControllers{c, namespace}
}

func (c *FakeTypesV1beta1) FederatedRoles(namespace string) v1beta1.FederatedRoleInterface {
	return &FakeFederatedRoles{c, namespace}
}

func (c *FakeTypesV1beta1) FederatedRoleBindings(namespace string) v1beta1.FederatedRoleBindingInterface {
	return &FakeFederatedRoleBindings{c, namespace}
}

func (c *FakeTypesV1beta1) FederatedSecrets(namespace string) v1beta1.FederatedSecretInterface {
	return &FakeFederatedSecrets{c, namespace}
}

func (c *FakeTypesV1beta1) FederatedServices(namespace string) v1beta1.FederatedServiceInterface {
	return &FakeFederatedServices{c, namespace}
}

func (c *FakeTypesV1beta1) FederatedServiceAccounts(namespace string) v1beta1.FederatedServiceAccountInterface {
	return &FakeFederatedServiceAccounts{c, namespace}
}

func (c *FakeTypesV1beta1) FederatedStatefulSets(namespace string) v1beta1.FederatedStatefulSetInterface {
	return &FakeFederatedStatefulSets{c, namespace}
}

// RESTClient returns a RESTClient that is used to communicate
// with API server by this client implementation.
func (c *FakeTypesV1beta1) RESTClient() rest.Interface {
	var ret *rest.RESTClient
	return ret
}
