syntax = "proto2";

package helmmanager;
option go_package = "./;helmmanager";

import "google/api/httpbody.proto";
import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "validate/validate.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    info: {
        title: "Helm Manager API Doc"
        version: "0.2.0"
    };
    base_path: "/bcsapi/v4"
    security_definitions: {
		security: {
			key: "ApiKeyAuth";
			value: {
				type: TYPE_API_KEY;
				in: IN_HEADER;
				name: "Authorization";
			};
		}
	};
	security: {
		security_requirement: {
			key: "ApiKeyAuth";
			value: {};
		}
	};
    schemes: HTTPS
    consumes: "application/json"
    produces: "application/json"
};

service HelmManager {
    //* common service
    rpc Available(AvailableReq) returns (AvailableResp) {
        option (google.api.http) = {
            get: "/helmmanager/v1/available"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "查询helm-manager服务是否可用"
            summary: "查询helm-manager服务是否可用"
        };
    }

    //* repository service
    rpc CreateRepository(CreateRepositoryReq) returns (CreateRepositoryResp) {
        option (google.api.http) = {
            post: "/helmmanager/v1/projects/{projectCode}/repos"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "创建仓库"
            summary: "创建仓库"
        };
    }
    rpc UpdateRepository(UpdateRepositoryReq) returns (UpdateRepositoryResp) {
        option (google.api.http) = {
            put: "/helmmanager/v1/projects/{projectCode}/repos/{name}"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "更新仓库"
            summary: "更新仓库"
        };
    }
    rpc GetRepository(GetRepositoryReq) returns (GetRepositoryResp) {
        option (google.api.http) = {
            get: "/helmmanager/v1/projects/{projectCode}/repos/{name}"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "查询仓库"
            summary: "查询仓库"
        };
    }
    rpc DeleteRepository(DeleteRepositoryReq) returns (DeleteRepositoryResp) {
        option (google.api.http) = {
            delete: "/helmmanager/v1/projects/{projectCode}/repos/{name}"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "删除仓库"
            summary: "删除仓库"
        };
    }
    rpc ListRepository(ListRepositoryReq) returns (ListRepositoryResp) {
        option (google.api.http) = {
            get: "/helmmanager/v1/projects/{projectCode}/repos"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "查询仓库列表"
            summary: "查询仓库列表"
        };
    }

    //* chart service
    rpc ListChartV1(ListChartV1Req) returns (ListChartV1Resp) {
        option (google.api.http) = {
            get: "/helmmanager/v1/projects/{projectCode}/repos/{repoName}/charts"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "批量查询chart包"
            summary: "批量查询chart包"
        };
    }
    rpc GetChartDetailV1(GetChartDetailV1Req) returns (GetChartDetailV1Resp) {
        option (google.api.http) = {
            get: "/helmmanager/v1/projects/{projectCode}/repos/{repoName}/charts/{name}"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "查询chart包详细信息"
            summary: "查询chart包详细信息"
        };
    }
    rpc ListChartVersionV1(ListChartVersionV1Req) returns (ListChartVersionV1Resp) {
        option (google.api.http) = {
            get: "/helmmanager/v1/projects/{projectCode}/repos/{repoName}/charts/{name}/versions"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "查询chart包的版本列表"
            summary: "查询chart包的版本列表"
        };
    }
    rpc GetVersionDetailV1(GetVersionDetailV1Req) returns (GetVersionDetailV1Resp) {
        option (google.api.http) = {
            get: "/helmmanager/v1/projects/{projectCode}/repos/{repoName}/charts/{name}/versions/{version}"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "查询指定版本的chart包详细信息"
            summary: "查询指定版本的chart包详细信息"
        };
    }
    rpc DeleteChart(DeleteChartReq) returns (DeleteChartResp) {
        option (google.api.http) = {
            delete: "/helmmanager/v1/projects/{projectCode}/repos/{repoName}/charts/{name}"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "删除指定 chart，将会从 chart 仓库中删除"
            summary: "删除指定 chart"
        };
    }
    rpc DeleteChartVersion(DeleteChartVersionReq) returns (DeleteChartVersionResp) {
        option (google.api.http) = {
            delete: "/helmmanager/v1/projects/{projectCode}/repos/{repoName}/charts/{name}/versions/{version}"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "删除 chart 指定版本，将会从 chart 仓库中删除"
            summary: "删除 chart 指定版本"
        };
    }
    rpc DownloadChart(DownloadChartReq) returns (google.api.HttpBody) {
        option (google.api.http) = {
            get: "/helmmanager/v1/projects/{projectCode}/repos/{repoName}/charts/{name}/versions/{version}/download"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "下载指定版本的chart"
            summary: "下载chart"
        };
    }
    rpc UploadChart(UploadChartReq) returns (UploadChartResp) {
        option (google.api.http) = {
            post: "/helmmanager/v1/projects/{projectCode}/repos/{repoName}/charts/version/{version}/upload"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "上传自定义版本的chart"
            summary: "上传chart"
        };
    }
    rpc GetChartRelease(GetChartReleaseReq) returns (GetChartReleaseResp) {
        option (google.api.http) = {
            post: "/helmmanager/v1/projects/{projectCode}/repos/{repoName}/charts/{name}/releases"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "获取 chart 关联的 releases"
            summary: "获取 chart 关联的 releases"
        };
    }
    //* release service
    rpc ListReleaseV1(ListReleaseV1Req) returns (ListReleaseV1Resp) {
        option (google.api.http) = {
            get: "/helmmanager/v1/projects/{projectCode}/clusters/{clusterID}/releases"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "查询指定集群的chart release信息"
            summary: "查询指定集群的chart release信息"
        };
    }
    rpc GetReleaseDetailV1(GetReleaseDetailV1Req) returns (GetReleaseDetailV1Resp) {
        option (google.api.http) = {
            get: "/helmmanager/v1/projects/{projectCode}/clusters/{clusterID}/namespaces/{namespace}/releases/{name}"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "查询指定release的详细信息"
            summary: "查询指定release详细信息"
        };
    }
    rpc InstallReleaseV1(InstallReleaseV1Req) returns (InstallReleaseV1Resp) {
        option (google.api.http) = {
            post: "/helmmanager/v1/projects/{projectCode}/clusters/{clusterID}/namespaces/{namespace}/releases/{name}"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "执行指定集群的chart release install"
            summary: "执行指定集群的chart release install"
        };
    }
    rpc UninstallReleaseV1(UninstallReleaseV1Req) returns (UninstallReleaseV1Resp) {
        option (google.api.http) = {
            delete: "/helmmanager/v1/projects/{projectCode}/clusters/{clusterID}/namespaces/{namespace}/releases/{name}"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "执行指定集群的chart release uninstall"
            summary: "执行指定集群的chart release uninstall"
        };
    }
    rpc UpgradeReleaseV1(UpgradeReleaseV1Req) returns (UpgradeReleaseV1Resp) {
        option (google.api.http) = {
            put: "/helmmanager/v1/projects/{projectCode}/clusters/{clusterID}/namespaces/{namespace}/releases/{name}"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "执行指定集群的chart release upgrade"
            summary: "执行指定集群的chart release upgrade"
        };
    }
    rpc RollbackReleaseV1(RollbackReleaseV1Req) returns (RollbackReleaseV1Resp) {
        option (google.api.http) = {
            put: "/helmmanager/v1/projects/{projectCode}/clusters/{clusterID}/namespaces/{namespace}/releases/{name}/rollback"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "执行指定集群的chart release rollback"
            summary: "执行指定集群的chart release rollback"
        };
    }
    rpc ReleasePreview(ReleasePreviewReq) returns (ReleasePreviewResp) {
        option (google.api.http) = {
            post: "/helmmanager/v1/projects/{projectCode}/clusters/{clusterID}/namespaces/{namespace}/releases/{name}/preview"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "预览 Release 资源，如果已经部署则同时展示 diff"
            summary: "预览 Release 资源"
        };
    }
    rpc GetReleaseHistory(GetReleaseHistoryReq) returns (GetReleaseHistoryResp) {
        option (google.api.http) = {
            get: "/helmmanager/v1/projects/{projectCode}/clusters/{clusterID}/namespaces/{namespace}/releases/{name}/history"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "查询指定集群的chart release历史信息"
            summary: "查询指定集群的chart release历史信息"
        };
    }
    rpc GetReleaseManifest(GetReleaseManifestReq) returns (GetReleaseManifestResp) {
        option (google.api.http) = {
            get: "/helmmanager/v1/projects/{projectCode}/clusters/{clusterID}/namespaces/{namespace}/releases/{name}/revisions/{revision}/manifest"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "查询指定集群的chart release manifest"
            summary: "查询指定集群的chart release manifest"
        };
    }
    rpc GetReleaseStatus(GetReleaseStatusReq) returns (CommonListResp) {
        option (google.api.http) = {
            get: "/helmmanager/v1/projects/{projectCode}/clusters/{clusterID}/namespaces/{namespace}/releases/{name}/status"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "获取 release 下所有资源的部署状态，如果是 workload 则增加 pod 状态"
            summary: "获取 release 资源的状态"
        };
    }
    rpc GetReleasePods(GetReleasePodsReq) returns (CommonListResp) {
        option (google.api.http) = {
            get: "/helmmanager/v1/projects/{projectCode}/clusters/{clusterID}/namespaces/{namespace}/releases/{name}/pods"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "获取 release 下所有pod, 支持根据时间筛选"
            summary: "获取 release pods"
        };
    }
    rpc ImportClusterRelease(ImportClusterReleaseReq) returns (ImportClusterReleaseResp) {
        option (google.api.http) = {
            post: "/helmmanager/v1/projects/{projectCode}/clusters/{clusterID}/namespaces/{namespace}/releases/{name}/import"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "导出 cluster releases"
            summary: "导出 cluster releases"
        };
    }
}

// 组件库
service ClusterAddons {
    rpc ListAddons(ListAddonsReq) returns (ListAddonsResp) {
        option (google.api.http) = {
            get: "/helmmanager/v1/projects/{projectCode}/clusters/{clusterID}/addons"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            summary: "获取集群组件列表"
            description: "获取集群组件列表"
        };
    }
    rpc GetAddonsDetail(GetAddonsDetailReq) returns (GetAddonsDetailResp) {
        option (google.api.http) = {
            get: "/helmmanager/v1/projects/{projectCode}/clusters/{clusterID}/addons/{name}"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            summary: "获取集群组件详情"
            description: "获取集群组件详情"
        };
    }
    rpc InstallAddons(InstallAddonsReq) returns (InstallAddonsResp) {
        option (google.api.http) = {
            post: "/helmmanager/v1/projects/{projectCode}/clusters/{clusterID}/addons"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            summary: "安装集群组件"
            description: "安装集群组件"
        };
    }
    rpc UpgradeAddons(UpgradeAddonsReq) returns (UpgradeAddonsResp) {
        option (google.api.http) = {
            put: "/helmmanager/v1/projects/{projectCode}/clusters/{clusterID}/addons/{name}"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            summary: "更新集群组件"
            description: "更新集群组件"
        };
    }
    rpc StopAddons(StopAddonsReq) returns (StopAddonsResp) {
        option (google.api.http) = {
            put: "/helmmanager/v1/projects/{projectCode}/clusters/{clusterID}/addons/{name}/stop"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            summary: "停止集群组件运行"
            description: "停止组件实例运行，保留配置相关信息"
        };
    }
    rpc UninstallAddons(UninstallAddonsReq) returns (UninstallAddonsResp) {
        option (google.api.http) = {
            delete: "/helmmanager/v1/projects/{projectCode}/clusters/{clusterID}/addons/{name}"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            summary: "卸载集群组件"
            description: "删除组件所有内容"
        };
    }
}

message CommonResp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "CommonResp"
            description : "通用返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional google.protobuf.Struct data = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "data",
        description: "返回数据"
    }];
    optional string requestID = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message CommonListResp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "CommonListResp"
            description : "通用列表返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional google.protobuf.ListValue data = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "data",
        description: "返回数据"
    }];
    optional string requestID = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message WebAnnotations {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "WebAnnotations"
            description : "权限信息返回"
        }
    };

    optional google.protobuf.Struct perms = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "perms",
        description: "权限信息"
    }];
}

message AvailableReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
          title: "AvailableReq"
          description: "查询helm-manager服务是否可用参数"
        }
    };
}

message AvailableResp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            title: "AvailableResp"
            description: "查询helm-manager服务是否可用返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
}

message CreateRepositoryReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            title: "CreateRepositoryReq",
            description: "创建仓库的参数"
        }
    };

    optional string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    optional string name = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "仓库名称"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    optional string type = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "type",
        description: "仓库类型，HELM(Helm仓库), GENERIC(通用二进制文件仓库)"
    }];
    optional bool takeover = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "takeover",
        description: "是否为接管已存在的仓库"
    }];
    optional string repoURL = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "repoURL",
        description: "接管仓库的仓库地址"
    }];
    optional string username = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "username",
        description: "接管仓库的用户名"
    }];
    optional string password = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "password",
        description: "接管仓库的密码"
    }];
    optional bool remote = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "remote",
        description: "是否为远程仓库"
    }];
    optional string remoteURL = 9[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "remoteURL",
        description: "远程仓库地址"
    }];
    optional string remoteUsername = 10[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "remoteUsername",
        description: "远程仓库用户名"
    }];
    optional string remotePassword = 11[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "remotePassword",
        description: "远程仓库密码"
    }];
    optional string displayName = 12[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "displayName",
        description: "展示名称"
    }];
}

message CreateRepositoryResp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "CreateRepositoryResp"
            description : "创建仓库的返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional Repository data = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "data",
        description: "创建的仓库信息"
    }];
    optional string requestID = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message UpdateRepositoryReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            title: "UpdateRepositoryReq",
            description: "更新仓库的参数"
        }
    };

    optional string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    optional string name = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "仓库名称"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    optional string type = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "type",
        description: "仓库类型"
    }];
    optional bool remote = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "remote",
        description: "是否为远程仓库"
    }];
    optional string remoteURL = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "remoteURL",
        description: "远程仓库地址"
    }];
    optional string username = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "username",
        description: "用户名"
    }];
    optional string password = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "password",
        description: "密码"
    }];
}

message UpdateRepositoryResp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "UpdateRepositoryResp"
            description : "更新仓库的返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional Repository data = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "data",
        description: "更新的仓库信息"
    }];
    optional string requestID = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message GetRepositoryReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            title: "GetRepositoryReq",
            description: "查询仓库的参数"
        }
    };

    optional string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1, max_len : 32}];
    optional string name = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "仓库名称"
    }, (validate.rules).string = {min_len : 1, max_len : 32}];
}

message GetRepositoryResp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "GetRepositoryResp"
            description : "查询仓库的返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional Repository data = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "data",
        description: "查询的仓库信息"
    }];
    optional string requestID = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message ListRepositoryReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            title: "ListRepositoryReq",
            description: "获取仓库列表"
        }
    };

    optional string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
}

message ListRepositoryResp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "ListRepositoryResp"
            description : "获取仓库列表的返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    repeated Repository data = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "data",
        description: "仓库列表"
    }];
    optional string requestID = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message DeleteRepositoryReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            title: "DeleteRepositoryReq",
            description: "删除仓库的参数"
        }
    };

    optional string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    optional string name = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "仓库名称"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
}

message DeleteRepositoryResp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "DeleteRepositoryResp"
            description : "删除仓库的返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message Repository {
    optional string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }];
    optional string name = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "仓库名称"
    }];
    optional string type = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "type",
        description: "仓库类型"
    }];
    optional string repoURL = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "repoURL",
        description: "当前仓库的url"
    }];
    optional string username = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "username",
        description: "用户名"
    }];
    optional string password = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "password",
        description: "密码"
    }];
    optional bool remote = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "remote",
        description: "是否为远程仓库"
    }];
    optional string remoteURL = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "remoteURL",
        description: "远程仓库地址"
    }];
    optional string remoteUsername = 9[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "remoteUsername",
        description: "远程仓库username"
    }];
    optional string remotePassword = 10[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "remotePassword",
        description: "远程仓库password"
    }];
    optional string createBy = 11[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "createBy",
        description: "创建者"
    }];
    optional string updateBy = 12[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "updateBy",
        description: "更新者"
    }];
    optional string createTime = 13[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "createTime",
        description: "创建时间"
    }];
    optional string updateTime = 14[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "updateTime",
        description: "更新时间"
    }];
    optional string displayName = 15[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "displayName",
        description: "展示名称"
    }];
    optional bool public = 16[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "public",
        description: "是否是公共仓库"
    }];
}

message ChartListData {
    optional uint32 page = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "page",
        description: "页数"
    }];
    optional uint32 size = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "size",
        description: "每页数量"
    }];
    optional uint32 total = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "total",
        description: "总数"
    }];
    repeated Chart data = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "data",
        description: "查询的仓库信息"
    }];
}

message Chart {
    optional string projectID = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectID",
        description: "项目id"
    }];
    optional string repository = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "repository",
        description: "仓库名称"
    }];
    optional string type = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "type",
        description: "仓库类型"
    }];
    optional string key = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "key",
        description: "chart key"
    }];
    optional string name = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "chart名称"
    }];
    optional string latestVersion = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "latestVersion",
        description: "最新的chart version"
    }];
    optional string latestAppVersion = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "latestAppVersion",
        description: "最新的app version"
    }];
    optional string latestDescription = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "latestDescription",
        description: "最新的description"
    }];
    optional string createBy = 9[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "createBy",
        description: "创建者"
    }];
    optional string updateBy = 10[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "updateBy",
        description: "更新者"
    }];
    optional string createTime = 11[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "createTime",
        description: "创建时间"
    }];
    optional string updateTime = 12[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "updateTime",
        description: "更新时间"
    }];
    optional string projectCode = 13[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代号"
    }];
    optional string icon = 14[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "icon",
        description: "chart图标"
    }];
}

message ChartVersionListData {
    optional uint32 page = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "page",
        description: "页数"
    }];
    optional uint32 size = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "size",
        description: "每页数量"
    }];
    optional uint32 total = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "total",
        description: "总数"
    }];
    repeated ChartVersion data = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "data",
        description: "查询的chart版本列表"
    }];
}

message ChartVersion {
    optional string name = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "chart name"
    }];
    optional string version = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "version",
        description: "chart version"
    }];
    optional string appVersion = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "appVersion",
        description: "chart app version"
    }];
    optional string description = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "description",
        description: "chart description"
    }];
    optional string createBy = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "createBy",
        description: "创建者"
    }];
    optional string updateBy = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "updateBy",
        description: "更新者"
    }];
    optional string createTime = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "createTime",
        description: "创建时间"
    }];
    optional string updateTime = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "updateTime",
        description: "更新时间"
    }];
    optional string url = 9[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "url",
        description: "chart url"
    }];
}

message ChartDetail {
    optional string name = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "chart名称"
    }];
    optional string version = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "version",
        description: "chart版本"
    }];
    optional string readme = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "readme",
        description: "chart自述"
    }];
    repeated string valuesFile = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "valuesFile",
        description: "values文件列表"
    }];
    map<string, FileContent> contents = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "contents",
        description: "chart包所含文件"
    }];
    optional string url = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "url",
        description: "chart url"
    }];
}

message FileContent {
    optional string name = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "文件名"
    }];
    optional string path = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "path",
        description: "文件相对chart包入口的路径"
    }];
    optional string content = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "content",
        description: "文件内容"
    }];
}

message ListChartV1Req {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "ListChartV1Req"
            description : "批量查询chart的参数"
        }
    };

    optional uint32 page = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "page",
        description: "页数"
    }];
    optional uint32 size = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "size",
        description: "每页数量"
    }];
    required string projectCode = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    required string repoName = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "repoName",
        description: "仓库名称"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    optional string name = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "chart 名称，支持模糊搜索"
    }];
}

message ListChartV1Resp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "ListChartV1Resp"
            description : "批量查询chart的返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional ChartListData data = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "data",
        description: "查询的chart的信息"
    }];
    optional string requestID = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message GetChartDetailV1Req {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "GetChartDetailV1Req"
            description : "查询chart包详细信息的参数"
        }
    };

    required string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    required string repoName = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "repoName",
        description: "仓库名称"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    required string name = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "chart名称"
    }, (validate.rules).string = {min_len : 1}];
}

message GetChartDetailV1Resp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "GetChartDetailV1Resp"
            description : "查询chart包详细信息的返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional Chart data = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "data",
        description: "chart包详细信息"
    }];
    optional string requestID = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message ListChartVersionV1Req {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "ListChartVersionV1Req"
            description : "查询chart版本的参数"
        }
    };

    optional uint32 page = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "page",
        description: "页数"
    }];
    optional uint32 size = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "size",
        description: "每页数量"
    }];
    required string projectCode = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    required string repoName = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "repoName",
        description: "仓库名称"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    required string name = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "chart名称"
    }, (validate.rules).string = {min_len : 1}];
}

message ListChartVersionV1Resp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "ListChartVersionV1Resp"
            description : "查询chart版本的返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional ChartVersionListData data = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "data",
        description: "查询的chart的版本信息"
    }];
    optional string requestID = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message GetVersionDetailV1Req {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "GetVersionDetailV1Req"
            description : "查询指定版本的chart包详细信息的参数"
        }
    };

    required string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    required string repoName = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "repoName",
        description: "仓库名称"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    required string name = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "chart名称"
    }, (validate.rules).string = {min_len : 1}];
    required string version = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "version",
        description: "chart版本"
    }, (validate.rules).string = {min_len : 1}];
}

message GetVersionDetailV1Resp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "GetVersionDetailV1Resp"
            description : "查询指定版本的chart包详细信息的返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional ChartDetail data = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "data",
        description: "查询指定版本的chart包详细信息"
    }];
    optional string requestID = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message DeleteChartReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "DeleteChartReq"
            description : "删除 Chart 请求参数"
        }
    };

    required string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    required string repoName = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "repoName",
        description: "仓库名称"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    required string name = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "chart名称"
    }, (validate.rules).string = {min_len : 1}];
}

message DeleteChartResp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "DeleteChartResp"
            description : "删除 Chart 的返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message DeleteChartVersionReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "DeleteChartVersionReq"
            description : "删除 Chart 指定版本请求参数"
        }
    };

    required string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    required string repoName = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "repoName",
        description: "仓库名称"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    required string name = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "chart名称"
    }, (validate.rules).string = {min_len : 1}];
    required string version = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "version",
        description: "chart版本"
    }, (validate.rules).string = {min_len : 1}];
}

message DeleteChartVersionResp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "DeleteChartVersionResp"
            description : "删除 Chart 版本的返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message DownloadChartReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "DownloadChartReq"
            description : "下载 Chart 指定版本请求参数"
        }
    };

    required string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    required string repoName = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "repoName",
        description: "仓库名称"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    required string name = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "chart名称"
    }, (validate.rules).string = {min_len : 1}];
    required string version = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "version",
        description: "chart版本"
    }, (validate.rules).string = {min_len : 1}];
}

message UploadChartReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "UploadChartReq"
            description : "上传 Chart 自定义版本请求参数"
        }
    };

    optional string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    optional string repoName = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "repoName",
        description: "仓库名称"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    optional bytes file = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "file",
        description: "file 上传文件"
    }];
    optional string version = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "version",
        description: "chart版本"
    }];
    optional bool force = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "force",
        description: "是否强制上传"
    }];
}

message UploadChartResp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "UploadChartResp"
            description : "上传 Chart 的返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message GetChartReleaseReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "GetChartReleaseReq"
            description : "获取 chart 关联的 releases 请求参数"
        }
    };

    optional string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    optional string repoName = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "repoName",
        description: "仓库名称"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    optional string name = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "chart名称"
    }, (validate.rules).string = {min_len : 1}];
    repeated string versions = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "versions",
        description: "chart版本, 不传版本则获取所有版本的 release"
    }];
}

message GetChartReleaseResp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "GetChartReleaseResp"
            description : "获取 chart 关联的 releases 的返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    repeated Release data = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "data",
        description: "release信息"
    }];
    optional string requestID = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message ImportClusterReleaseReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "ImportClusterReleaseReq"
            description : "导出 cluster releases 请求参数"
        }
    };

    optional string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    optional string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "clusterID",
        description: "集群ID"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    optional string namespace = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "namespace",
        description: "查询目标namespace"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    optional string name = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "查询目标name"
    }, (validate.rules).string = {min_len : 1}];
    optional string repoName = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "repoName",
        description: "仓库名称"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    optional string chartName = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "chartName",
        description: "chart名称"
    }, (validate.rules).string = {min_len : 1}];
}

message ImportClusterReleaseResp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "ImportClusterReleaseResp"
            description : "导出 cluster releases 的返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message ReleaseListData {
    optional uint32 page = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "page",
        description: "页数"
    }];
    optional uint32 size = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "size",
        description: "每页数量"
    }];
    optional uint32 total = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "total",
        description: "总数"
    }];
    repeated Release data = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "data",
        description: "查询的chart release列表"
    }];
}

message Release {
    optional string name = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "chart release名称"
    }];
    optional string namespace = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "namespace",
        description: "所在的namespace"
    }];
    optional uint32 revision = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "revision",
        description: "所处于的版本"
    }];
    optional string status = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "status",
        description: "当前的状态"
    }];
    optional string chart = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "chart",
        description: "chart名称"
    }];
    optional string appVersion = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "appVersion",
        description: "所处于的app version"
    }];
    optional string updateTime = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "updateTime",
        description: "更新时间"
    }];
    optional string chartVersion = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "chartVersion",
        description: "chart的版本"
    }];
    optional string createBy = 9[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "createBy",
        description: "创建者"
    }];
    optional string updateBy = 10[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "updateBy",
        description: "更新者"
    }];
    optional string message = 11[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "报错消息"
    }];
    optional string repo = 12[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "repo",
        description: "chart 仓库"
    }];
    optional string iamNamespaceID = 13[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "iamNamespaceID",
        description: "iamNamespaceID"
    }];
    optional string projectCode = 14[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目编码"
    }];
    optional string clusterID = 15[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "clusterID",
        description: "集群 ID"
    }];
}

message ReleaseDetail {
    optional string name = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "chart release名称"
    }];
    optional string namespace = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "namespace",
        description: "所在的namespace"
    }];
    optional uint32 revision = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "revision",
        description: "所处于的版本"
    }];
    optional string status = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "status",
        description: "当前的状态"
    }];
    optional string chart = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "chart",
        description: "chart名称"
    }];
    optional string appVersion = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "appVersion",
        description: "所处于的app version"
    }];
    optional string updateTime = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "updateTime",
        description: "更新时间"
    }];
    optional string chartVersion = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "chartVersion",
        description: "chart的版本"
    }];
    repeated string values = 9[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "values",
        description: "当前revision部署时的values文件"
    }];
    optional string description = 10[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "description",
        description: "release 描述"
    }];
    optional string notes = 11[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "notes",
        description: "release notes"
    }];
    repeated string args = 12[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "args",
        description: "当前revision部署时的 helm 参数"
    }];
    optional string createBy = 13[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "createBy",
        description: "创建者"
    }];
    optional string updateBy = 14[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "updateBy",
        description: "更新者"
    }];
    optional string message = 15[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "报错消息"
    }];
    optional string repo = 16[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "repo",
        description: "chart 仓库"
    }];
    optional string valueFile = 17[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "valueFile",
        description: "value 文件，上一次更新使用的文件"
    }];
}

message ListReleaseV1Req {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "ListReleaseV1Req"
            description : "查询指定集群的chart release信息的参数"
        }
    };

    required string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    required string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "clusterID",
        description: "集群ID"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    optional string namespace = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "namespace",
        description: "指定命名空间查询，默认全部命名空间"
    }];
    optional string name = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "指定 release 名称查询，支持正则表达式，如 'ara[a-z]+' 可以搜索到 maudlin-arachnid"
    }];
    optional uint32 page = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "page",
        description: "页数"
    }];
    optional uint32 size = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "size",
        description: "每页数量"
    }];
}

message ListReleaseV1Resp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "ListReleaseV1Resp"
            description : "查询指定集群的chart release信息的返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional ReleaseListData data = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "data",
        description: "指定集群的chart release信息"
    }];
    optional WebAnnotations web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "web_annotations",
        description: "返回数据"
    }];
    optional string requestID = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
}

message GetReleaseDetailV1Req {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "GetReleaseDetailV1Req"
            description : "查询指定release信息的参数"
        }
    };

    required string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    required string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "clusterID",
        description: "集群ID"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    required string namespace = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "namespace",
        description: "查询目标namespace"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    required string name = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "查询目标name"
    }, (validate.rules).string = {min_len : 1}];
}

message GetReleaseDetailV1Resp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "GetReleaseDetailV1Resp"
            description : "查询指定release信息的返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional ReleaseDetail data = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "data",
        description: "指定release信息"
    }];
    optional string requestID = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message InstallReleaseV1Req {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "InstallReleaseV1Req"
            description : "安装 release 的参数"
        }
    };

    optional string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    optional string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "clusterID",
        description: "所在的集群ID"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    optional string namespace = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "namespace",
        description: "所在的namespace"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    optional string name = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "chart release名称"
    }, (validate.rules).string = {min_len : 1}];
    optional string repository = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "repository",
        description: "chart所属的仓库"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    optional string chart = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "chart",
        description: "chart名称"
    }, (validate.rules).string = {min_len : 1}];
    optional string version = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "version",
        description: "chart版本"
    }, (validate.rules).string = {min_len : 1}];
    repeated string values = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "values",
        description: "values文件内容, 越靠后优先级越高"
    }];
    repeated string args = 9[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "args",
        description: "额外的参数"
    }];
    optional string valueFile = 10[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "valueFile",
        description: "value 文件，上一次更新使用的文件"
    }];
    optional string operator = 11[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "operator",
        description: "操作者"
    }];
}

message InstallReleaseV1Resp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "InstallReleaseV1Resp"
            description : "安装 release 的返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message UninstallReleaseV1Req {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "UninstallReleaseV1Req"
            description : "卸载 release 的参数"
        }
    };

    optional string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    optional string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "clusterID",
        description: "所在的集群ID"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    optional string namespace = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "namespace",
        description: "所在的namespace"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    optional string name = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "chart release名称"
    }, (validate.rules).string = {min_len : 1}];
}

message UninstallReleaseV1Resp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "UninstallReleaseV1Resp"
            description : "卸载 release 的返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message UpgradeReleaseV1Req {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "UpgradeReleaseV1Req"
            description : "升级 release 的参数"
        }
    };

    optional string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    optional string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "clusterID",
        description: "所在的集群ID"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    optional string namespace = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "namespace",
        description: "所在的namespace"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    optional string name = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "chart release名称"
    }, (validate.rules).string = {min_len : 1}];
    optional string repository = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "repository",
        description: "chart所属的仓库"
    }];
    optional string chart = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "chart",
        description: "chart名称"
    }];
    optional string version = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "version",
        description: "chart版本"
    }];
    repeated string values = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "values",
        description: "values文件, 越靠后优先级越高"
    }];
    repeated string args = 9[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "args",
        description: "额外的参数"
    }];
    optional string valueFile = 10[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "valueFile",
        description: "value 文件，上一次更新使用的文件"
    }];
    optional string operator = 11[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "operator",
        description: "操作者"
    }];
}

message UpgradeReleaseV1Resp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "UpgradeReleaseV1Resp"
            description : "升级 release 的返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message RollbackReleaseV1Req {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "RollbackReleaseV1Req"
            description : "回滚 release 的参数"
        }
    };

    optional string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    optional string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "clusterID",
        description: "所在的集群ID"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    optional string namespace = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "namespace",
        description: "所在的namespace"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    optional string name = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "chart release名称"
    }, (validate.rules).string = {min_len : 1}];
    optional uint32 revision = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "revision",
        description: "要回滚到的revision"
    }];
}

message RollbackReleaseV1Resp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "RollbackReleaseV1Resp"
            description : "回滚 release 的返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message ReleasePreviewReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "ReleasePreviewReq"
            description : "release 预览的参数"
        }
    };

    optional string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    optional string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "clusterID",
        description: "所在的集群ID"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    optional string namespace = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "namespace",
        description: "所在的namespace"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    optional string name = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "chart release名称"
    }, (validate.rules).string = {min_len : 1}];
    optional string repository = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "repository",
        description: "chart所属的仓库"
    }];
    optional string chart = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "chart",
        description: "chart名称"
    }];
    optional string version = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "version",
        description: "chart版本"
    }];
    repeated string values = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "values",
        description: "values文件, 越靠后优先级越高"
    }];
    repeated string args = 9[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "args",
        description: "额外的参数"
    }];
    optional uint32 revision = 10[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "revision",
        description: "release revision 版本, 如果revision为0, 则对比当前渲染结果和已部署的最新版本, 如果不为0, 则对比最新版本和指定版本"
    }];
}

message ReleasePreviewResp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "ReleasePreviewResp"
            description : "release 预览的返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional ReleasePreview data = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "data",
        description: "返回数据"
    }];
    optional string requestID = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message ReleasePreview {
    map<string, FileContent> newContents = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "newContents",
        description: "新版本 release manifest 内容，根据资源类型分类，键格式：{Kind}/{name}"
    }];
    map<string, FileContent> oldContents = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "oldContents",
        description: "旧版本 release manifest 内容，根据资源类型分类，键格式：{Kind}/{name}"
    }];
    optional string newContent = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "newContent",
        description: "新版本 release manifest 内容"
    }];
    optional string oldContent = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "oldContent",
        description: "旧版本 release manifest 内容"
    }];
}

message GetReleaseHistoryReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "GetReleaseHistoryReq"
            description : "release history的参数"
        }
    };

    required string name = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "chart release名称"
    }, (validate.rules).string = {min_len : 1}];
    required string namespace = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "namespace",
        description: "所在的namespace"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    required string clusterID = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "clusterID",
        description: "所在的集群ID"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    required string projectCode = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    optional string filter = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "filter",
        description: "状态过滤"
    }];
}

message GetReleaseHistoryResp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "GetReleaseHistoryResp"
            description : "release history的返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    repeated ReleaseHistory data = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "data",
        description: "release history"
    }];
    optional string requestID = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message ReleaseHistory {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "ReleaseHistory"
            description : "release history"
        }
    };

    optional uint32 revision = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "revision",
        description: "release revision"
    }];
    optional string name = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "release name"
    }];
    optional string namespace = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "namespace",
        description: "release namespace"
    }];
    optional string updateTime = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "updateTime",
        description: "更新时间"
    }];
    optional string description = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "description",
        description: "release 描述"
    }];
    optional string status = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "status",
        description: "release 状态"
    }];
    optional string chart = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "chart",
        description: "release chart"
    }];
    optional string chartVersion = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "chartVersion",
        description: "chart 版本"
    }];
    optional string appVersion = 9[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "appVersion",
        description: "release appVersion"
    }];
    optional string values = 10[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "values",
        description: "release values"
    }];
}

message GetReleaseManifestReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "GetReleaseManifestReq"
            description : "get release manifest的参数"
        }
    };

    required string name = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "chart release名称"
    }, (validate.rules).string = {min_len : 1}];
    required string namespace = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "namespace",
        description: "所在的namespace"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    required string clusterID = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "clusterID",
        description: "所在的集群ID"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    required string projectCode = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    required uint32 revision = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "revision",
        description: "release 版本"
    }];
}

message GetReleaseManifestResp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "GetReleaseManifestResp"
            description : "get release manifest的返回"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    map<string, FileContent> data = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "data",
        description: "release manifest"
    }];
    optional string requestID = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message GetReleaseStatusReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "GetReleaseStatusReq"
            description : "获取 release 状态的参数"
        }
    };

    required string name = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "chart release名称"
    }, (validate.rules).string = {min_len : 1}];
    required string namespace = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "namespace",
        description: "所在的namespace"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    required string clusterID = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "clusterID",
        description: "所在的集群ID"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    required string projectCode = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
}

message GetReleasePodsReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "GetReleasePodsReq"
            description : "获取 release pods 的参数"
        }
    };

    required string name = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "chart release名称"
    }, (validate.rules).string = {min_len : 1}];
    required string namespace = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "namespace",
        description: "所在的namespace"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    required string clusterID = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "clusterID",
        description: "所在的集群ID"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    required string projectCode = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    optional uint32 after = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "after",
        description: "查询指定时间之后的 pods"
    }];
}

message ListAddonsReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "ListAddonsReq"
        }
    };

    required string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    required string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "clusterID",
        description: "所在的集群ID"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
}

message ListAddonsResp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "ListAddonsResp"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    repeated Addons data = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "data",
        description: "组件列表"
    }];
    optional string requestID = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message Addons {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "Addons"
            description : "集群组件"
        }
    };

    required string name = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "组件名称"
    }];
    required string chartName = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "chartName",
        description: "chart name"
    }];
    optional string description = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "description",
        description: "组件描述"
    }];
    optional string logo = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "logo",
        description: "logo"
    }];
    optional string docsLink = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "docsLink",
        description: "文档链接"
    }];
    required string version = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "version",
        description: "组件最新版本"
    }];
    optional string currentVersion = 7[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "currentVersion",
        description: "组件当前安装版本，空代表没安装"
    }];
    required string namespace = 8[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "namespace",
        description: "部署的命名空间"
    }];
    optional string defaultValues = 9[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "defaultValues",
        description: "默认配置，空代表可以直接安装，不需要填写自定义配置"
    }];
    optional string currentValues = 10[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "currentValues",
        description: "当前部署配置"
    }];
    optional string status = 11[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "status",
        description: "部署状态，同 Helm release 状态，空代表没安装"
    }];
    optional string message = 12[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "部署信息，部署异常则显示报错信息"
    }];
    repeated string supportedActions = 13[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "supportedActions",
        description: "组件支持的操作，目前有 install, upgrade, stop, uninstall"
    }];
}

message GetAddonsDetailReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "GetAddonsDetailReq"
        }
    };

    required string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    required string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "clusterID",
        description: "所在的集群ID"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    required string name = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "组件名称"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
}

message GetAddonsDetailResp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "GetAddonsDetailResp"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional Addons data = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "data",
        description: "组件信息"
    }];
    optional string requestID = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 6[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message InstallAddonsReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "InstallAddonsReq"
        }
    };

    optional string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    optional string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "clusterID",
        description: "所在的集群ID"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    required string name = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "组件名称"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    required string version = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "version",
        description: "组件版本"
    }, (validate.rules).string = {min_len : 1}];
    optional string values = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "values",
        description: "values"
    }];
}

message InstallAddonsResp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "InstallAddonsResp"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message UpgradeAddonsReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "UpgradeAddonsReq"
        }
    };

    optional string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    optional string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "clusterID",
        description: "所在的集群ID"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    optional string name = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "组件名称"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    optional string version = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "version",
        description: "组件版本"
    }];
    optional string values = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "values",
        description: "values"
    }];
}

message UpgradeAddonsResp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "UpgradeAddonsResp"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message StopAddonsReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "StopAddonsReq"
        }
    };

    optional string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    optional string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "clusterID",
        description: "所在的集群ID"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    optional string name = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "组件名称"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
}

message StopAddonsResp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "StopAddonsResp"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}

message UninstallAddonsReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "UninstallAddonsReq"
        }
    };

    optional string projectCode = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "projectCode",
        description: "项目代码"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
    optional string clusterID = 2[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "clusterID",
        description: "所在的集群ID"
    }, (validate.rules).string = {min_len : 1 , max_len : 64}];
    optional string name = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "name",
        description: "组件名称"
    }, (validate.rules).string = {min_len : 1 , max_len : 32}];
}

message UninstallAddonsResp {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema : {
            title : "UninstallAddonsResp"
        }
    };

    optional uint32 code = 1[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "code",
        description: "返回错误码"
    }];
    optional string message = 2[ (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "message",
        description: "返回错误信息"
    }];
    optional bool result = 3[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "result",
        description: "返回结果"
    }];
    optional string requestID = 4[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title: "requestID",
        description: "requestID"
    }];
    optional WebAnnotations web_annotations = 5[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
        title : "web_annotations",
        description : "权限信息"
    }, json_name = "web_annotations"];
}