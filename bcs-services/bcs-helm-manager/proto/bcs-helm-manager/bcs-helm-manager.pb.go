// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bcs-helm-manager.proto

package helmmanager

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	httpbody "google.golang.org/genproto/googleapis/api/httpbody"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CommonResp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *_struct.Struct `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	RequestID            *string         `protobuf:"bytes,5,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,6,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CommonResp) Reset()         { *m = CommonResp{} }
func (m *CommonResp) String() string { return proto.CompactTextString(m) }
func (*CommonResp) ProtoMessage()    {}
func (*CommonResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{0}
}

func (m *CommonResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonResp.Unmarshal(m, b)
}
func (m *CommonResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonResp.Marshal(b, m, deterministic)
}
func (m *CommonResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonResp.Merge(m, src)
}
func (m *CommonResp) XXX_Size() int {
	return xxx_messageInfo_CommonResp.Size(m)
}
func (m *CommonResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonResp.DiscardUnknown(m)
}

var xxx_messageInfo_CommonResp proto.InternalMessageInfo

func (m *CommonResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *CommonResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CommonResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *CommonResp) GetData() *_struct.Struct {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CommonResp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *CommonResp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type CommonListResp struct {
	Code                 *uint32            `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string            `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool              `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *_struct.ListValue `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	RequestID            *string            `protobuf:"bytes,5,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations    `protobuf:"bytes,6,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CommonListResp) Reset()         { *m = CommonListResp{} }
func (m *CommonListResp) String() string { return proto.CompactTextString(m) }
func (*CommonListResp) ProtoMessage()    {}
func (*CommonListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{1}
}

func (m *CommonListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonListResp.Unmarshal(m, b)
}
func (m *CommonListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonListResp.Marshal(b, m, deterministic)
}
func (m *CommonListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonListResp.Merge(m, src)
}
func (m *CommonListResp) XXX_Size() int {
	return xxx_messageInfo_CommonListResp.Size(m)
}
func (m *CommonListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonListResp.DiscardUnknown(m)
}

var xxx_messageInfo_CommonListResp proto.InternalMessageInfo

func (m *CommonListResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *CommonListResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CommonListResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *CommonListResp) GetData() *_struct.ListValue {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CommonListResp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *CommonListResp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type WebAnnotations struct {
	Perms                *_struct.Struct `protobuf:"bytes,1,opt,name=perms" json:"perms,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *WebAnnotations) Reset()         { *m = WebAnnotations{} }
func (m *WebAnnotations) String() string { return proto.CompactTextString(m) }
func (*WebAnnotations) ProtoMessage()    {}
func (*WebAnnotations) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{2}
}

func (m *WebAnnotations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WebAnnotations.Unmarshal(m, b)
}
func (m *WebAnnotations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WebAnnotations.Marshal(b, m, deterministic)
}
func (m *WebAnnotations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebAnnotations.Merge(m, src)
}
func (m *WebAnnotations) XXX_Size() int {
	return xxx_messageInfo_WebAnnotations.Size(m)
}
func (m *WebAnnotations) XXX_DiscardUnknown() {
	xxx_messageInfo_WebAnnotations.DiscardUnknown(m)
}

var xxx_messageInfo_WebAnnotations proto.InternalMessageInfo

func (m *WebAnnotations) GetPerms() *_struct.Struct {
	if m != nil {
		return m.Perms
	}
	return nil
}

type AvailableReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvailableReq) Reset()         { *m = AvailableReq{} }
func (m *AvailableReq) String() string { return proto.CompactTextString(m) }
func (*AvailableReq) ProtoMessage()    {}
func (*AvailableReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{3}
}

func (m *AvailableReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvailableReq.Unmarshal(m, b)
}
func (m *AvailableReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvailableReq.Marshal(b, m, deterministic)
}
func (m *AvailableReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvailableReq.Merge(m, src)
}
func (m *AvailableReq) XXX_Size() int {
	return xxx_messageInfo_AvailableReq.Size(m)
}
func (m *AvailableReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AvailableReq.DiscardUnknown(m)
}

var xxx_messageInfo_AvailableReq proto.InternalMessageInfo

type AvailableResp struct {
	Code                 *uint32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool    `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvailableResp) Reset()         { *m = AvailableResp{} }
func (m *AvailableResp) String() string { return proto.CompactTextString(m) }
func (*AvailableResp) ProtoMessage()    {}
func (*AvailableResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{4}
}

func (m *AvailableResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvailableResp.Unmarshal(m, b)
}
func (m *AvailableResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvailableResp.Marshal(b, m, deterministic)
}
func (m *AvailableResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvailableResp.Merge(m, src)
}
func (m *AvailableResp) XXX_Size() int {
	return xxx_messageInfo_AvailableResp.Size(m)
}
func (m *AvailableResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AvailableResp.DiscardUnknown(m)
}

var xxx_messageInfo_AvailableResp proto.InternalMessageInfo

func (m *AvailableResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *AvailableResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *AvailableResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type CreateRepositoryReq struct {
	ProjectCode          *string  `protobuf:"bytes,1,opt,name=projectCode" json:"projectCode,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type                 *string  `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Takeover             *bool    `protobuf:"varint,4,opt,name=takeover" json:"takeover,omitempty"`
	RepoURL              *string  `protobuf:"bytes,5,opt,name=repoURL" json:"repoURL,omitempty"`
	Username             *string  `protobuf:"bytes,6,opt,name=username" json:"username,omitempty"`
	Password             *string  `protobuf:"bytes,7,opt,name=password" json:"password,omitempty"`
	Remote               *bool    `protobuf:"varint,8,opt,name=remote" json:"remote,omitempty"`
	RemoteURL            *string  `protobuf:"bytes,9,opt,name=remoteURL" json:"remoteURL,omitempty"`
	RemoteUsername       *string  `protobuf:"bytes,10,opt,name=remoteUsername" json:"remoteUsername,omitempty"`
	RemotePassword       *string  `protobuf:"bytes,11,opt,name=remotePassword" json:"remotePassword,omitempty"`
	DisplayName          *string  `protobuf:"bytes,12,opt,name=displayName" json:"displayName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRepositoryReq) Reset()         { *m = CreateRepositoryReq{} }
func (m *CreateRepositoryReq) String() string { return proto.CompactTextString(m) }
func (*CreateRepositoryReq) ProtoMessage()    {}
func (*CreateRepositoryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{5}
}

func (m *CreateRepositoryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRepositoryReq.Unmarshal(m, b)
}
func (m *CreateRepositoryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRepositoryReq.Marshal(b, m, deterministic)
}
func (m *CreateRepositoryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRepositoryReq.Merge(m, src)
}
func (m *CreateRepositoryReq) XXX_Size() int {
	return xxx_messageInfo_CreateRepositoryReq.Size(m)
}
func (m *CreateRepositoryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRepositoryReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRepositoryReq proto.InternalMessageInfo

func (m *CreateRepositoryReq) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *CreateRepositoryReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CreateRepositoryReq) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *CreateRepositoryReq) GetTakeover() bool {
	if m != nil && m.Takeover != nil {
		return *m.Takeover
	}
	return false
}

func (m *CreateRepositoryReq) GetRepoURL() string {
	if m != nil && m.RepoURL != nil {
		return *m.RepoURL
	}
	return ""
}

func (m *CreateRepositoryReq) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *CreateRepositoryReq) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *CreateRepositoryReq) GetRemote() bool {
	if m != nil && m.Remote != nil {
		return *m.Remote
	}
	return false
}

func (m *CreateRepositoryReq) GetRemoteURL() string {
	if m != nil && m.RemoteURL != nil {
		return *m.RemoteURL
	}
	return ""
}

func (m *CreateRepositoryReq) GetRemoteUsername() string {
	if m != nil && m.RemoteUsername != nil {
		return *m.RemoteUsername
	}
	return ""
}

func (m *CreateRepositoryReq) GetRemotePassword() string {
	if m != nil && m.RemotePassword != nil {
		return *m.RemotePassword
	}
	return ""
}

func (m *CreateRepositoryReq) GetDisplayName() string {
	if m != nil && m.DisplayName != nil {
		return *m.DisplayName
	}
	return ""
}

type CreateRepositoryResp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *Repository     `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	RequestID            *string         `protobuf:"bytes,5,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,6,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreateRepositoryResp) Reset()         { *m = CreateRepositoryResp{} }
func (m *CreateRepositoryResp) String() string { return proto.CompactTextString(m) }
func (*CreateRepositoryResp) ProtoMessage()    {}
func (*CreateRepositoryResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{6}
}

func (m *CreateRepositoryResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRepositoryResp.Unmarshal(m, b)
}
func (m *CreateRepositoryResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRepositoryResp.Marshal(b, m, deterministic)
}
func (m *CreateRepositoryResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRepositoryResp.Merge(m, src)
}
func (m *CreateRepositoryResp) XXX_Size() int {
	return xxx_messageInfo_CreateRepositoryResp.Size(m)
}
func (m *CreateRepositoryResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRepositoryResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRepositoryResp proto.InternalMessageInfo

func (m *CreateRepositoryResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *CreateRepositoryResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CreateRepositoryResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *CreateRepositoryResp) GetData() *Repository {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateRepositoryResp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *CreateRepositoryResp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type UpdateRepositoryReq struct {
	ProjectCode          *string  `protobuf:"bytes,1,opt,name=projectCode" json:"projectCode,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type                 *string  `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Remote               *bool    `protobuf:"varint,4,opt,name=remote" json:"remote,omitempty"`
	RemoteURL            *string  `protobuf:"bytes,5,opt,name=remoteURL" json:"remoteURL,omitempty"`
	Username             *string  `protobuf:"bytes,6,opt,name=username" json:"username,omitempty"`
	Password             *string  `protobuf:"bytes,7,opt,name=password" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRepositoryReq) Reset()         { *m = UpdateRepositoryReq{} }
func (m *UpdateRepositoryReq) String() string { return proto.CompactTextString(m) }
func (*UpdateRepositoryReq) ProtoMessage()    {}
func (*UpdateRepositoryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{7}
}

func (m *UpdateRepositoryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRepositoryReq.Unmarshal(m, b)
}
func (m *UpdateRepositoryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRepositoryReq.Marshal(b, m, deterministic)
}
func (m *UpdateRepositoryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRepositoryReq.Merge(m, src)
}
func (m *UpdateRepositoryReq) XXX_Size() int {
	return xxx_messageInfo_UpdateRepositoryReq.Size(m)
}
func (m *UpdateRepositoryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRepositoryReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRepositoryReq proto.InternalMessageInfo

func (m *UpdateRepositoryReq) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *UpdateRepositoryReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *UpdateRepositoryReq) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *UpdateRepositoryReq) GetRemote() bool {
	if m != nil && m.Remote != nil {
		return *m.Remote
	}
	return false
}

func (m *UpdateRepositoryReq) GetRemoteURL() string {
	if m != nil && m.RemoteURL != nil {
		return *m.RemoteURL
	}
	return ""
}

func (m *UpdateRepositoryReq) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *UpdateRepositoryReq) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

type UpdateRepositoryResp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *Repository     `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	RequestID            *string         `protobuf:"bytes,5,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,6,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateRepositoryResp) Reset()         { *m = UpdateRepositoryResp{} }
func (m *UpdateRepositoryResp) String() string { return proto.CompactTextString(m) }
func (*UpdateRepositoryResp) ProtoMessage()    {}
func (*UpdateRepositoryResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{8}
}

func (m *UpdateRepositoryResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRepositoryResp.Unmarshal(m, b)
}
func (m *UpdateRepositoryResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRepositoryResp.Marshal(b, m, deterministic)
}
func (m *UpdateRepositoryResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRepositoryResp.Merge(m, src)
}
func (m *UpdateRepositoryResp) XXX_Size() int {
	return xxx_messageInfo_UpdateRepositoryResp.Size(m)
}
func (m *UpdateRepositoryResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRepositoryResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRepositoryResp proto.InternalMessageInfo

func (m *UpdateRepositoryResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *UpdateRepositoryResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *UpdateRepositoryResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *UpdateRepositoryResp) GetData() *Repository {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateRepositoryResp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *UpdateRepositoryResp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type GetRepositoryReq struct {
	ProjectCode          *string  `protobuf:"bytes,1,opt,name=projectCode" json:"projectCode,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRepositoryReq) Reset()         { *m = GetRepositoryReq{} }
func (m *GetRepositoryReq) String() string { return proto.CompactTextString(m) }
func (*GetRepositoryReq) ProtoMessage()    {}
func (*GetRepositoryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{9}
}

func (m *GetRepositoryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepositoryReq.Unmarshal(m, b)
}
func (m *GetRepositoryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepositoryReq.Marshal(b, m, deterministic)
}
func (m *GetRepositoryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepositoryReq.Merge(m, src)
}
func (m *GetRepositoryReq) XXX_Size() int {
	return xxx_messageInfo_GetRepositoryReq.Size(m)
}
func (m *GetRepositoryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepositoryReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepositoryReq proto.InternalMessageInfo

func (m *GetRepositoryReq) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *GetRepositoryReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type GetRepositoryResp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *Repository     `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	RequestID            *string         `protobuf:"bytes,5,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,6,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetRepositoryResp) Reset()         { *m = GetRepositoryResp{} }
func (m *GetRepositoryResp) String() string { return proto.CompactTextString(m) }
func (*GetRepositoryResp) ProtoMessage()    {}
func (*GetRepositoryResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{10}
}

func (m *GetRepositoryResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepositoryResp.Unmarshal(m, b)
}
func (m *GetRepositoryResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepositoryResp.Marshal(b, m, deterministic)
}
func (m *GetRepositoryResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepositoryResp.Merge(m, src)
}
func (m *GetRepositoryResp) XXX_Size() int {
	return xxx_messageInfo_GetRepositoryResp.Size(m)
}
func (m *GetRepositoryResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepositoryResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepositoryResp proto.InternalMessageInfo

func (m *GetRepositoryResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *GetRepositoryResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *GetRepositoryResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *GetRepositoryResp) GetData() *Repository {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetRepositoryResp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *GetRepositoryResp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type ListRepositoryReq struct {
	ProjectCode          *string  `protobuf:"bytes,1,opt,name=projectCode" json:"projectCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRepositoryReq) Reset()         { *m = ListRepositoryReq{} }
func (m *ListRepositoryReq) String() string { return proto.CompactTextString(m) }
func (*ListRepositoryReq) ProtoMessage()    {}
func (*ListRepositoryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{11}
}

func (m *ListRepositoryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRepositoryReq.Unmarshal(m, b)
}
func (m *ListRepositoryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRepositoryReq.Marshal(b, m, deterministic)
}
func (m *ListRepositoryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRepositoryReq.Merge(m, src)
}
func (m *ListRepositoryReq) XXX_Size() int {
	return xxx_messageInfo_ListRepositoryReq.Size(m)
}
func (m *ListRepositoryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRepositoryReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListRepositoryReq proto.InternalMessageInfo

func (m *ListRepositoryReq) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

type ListRepositoryResp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 []*Repository   `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	RequestID            *string         `protobuf:"bytes,5,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,6,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListRepositoryResp) Reset()         { *m = ListRepositoryResp{} }
func (m *ListRepositoryResp) String() string { return proto.CompactTextString(m) }
func (*ListRepositoryResp) ProtoMessage()    {}
func (*ListRepositoryResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{12}
}

func (m *ListRepositoryResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRepositoryResp.Unmarshal(m, b)
}
func (m *ListRepositoryResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRepositoryResp.Marshal(b, m, deterministic)
}
func (m *ListRepositoryResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRepositoryResp.Merge(m, src)
}
func (m *ListRepositoryResp) XXX_Size() int {
	return xxx_messageInfo_ListRepositoryResp.Size(m)
}
func (m *ListRepositoryResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRepositoryResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListRepositoryResp proto.InternalMessageInfo

func (m *ListRepositoryResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ListRepositoryResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ListRepositoryResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ListRepositoryResp) GetData() []*Repository {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListRepositoryResp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *ListRepositoryResp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type DeleteRepositoryReq struct {
	ProjectCode          *string  `protobuf:"bytes,1,opt,name=projectCode" json:"projectCode,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRepositoryReq) Reset()         { *m = DeleteRepositoryReq{} }
func (m *DeleteRepositoryReq) String() string { return proto.CompactTextString(m) }
func (*DeleteRepositoryReq) ProtoMessage()    {}
func (*DeleteRepositoryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{13}
}

func (m *DeleteRepositoryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRepositoryReq.Unmarshal(m, b)
}
func (m *DeleteRepositoryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRepositoryReq.Marshal(b, m, deterministic)
}
func (m *DeleteRepositoryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRepositoryReq.Merge(m, src)
}
func (m *DeleteRepositoryReq) XXX_Size() int {
	return xxx_messageInfo_DeleteRepositoryReq.Size(m)
}
func (m *DeleteRepositoryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRepositoryReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRepositoryReq proto.InternalMessageInfo

func (m *DeleteRepositoryReq) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *DeleteRepositoryReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type DeleteRepositoryResp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	RequestID            *string         `protobuf:"bytes,4,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,5,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DeleteRepositoryResp) Reset()         { *m = DeleteRepositoryResp{} }
func (m *DeleteRepositoryResp) String() string { return proto.CompactTextString(m) }
func (*DeleteRepositoryResp) ProtoMessage()    {}
func (*DeleteRepositoryResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{14}
}

func (m *DeleteRepositoryResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRepositoryResp.Unmarshal(m, b)
}
func (m *DeleteRepositoryResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRepositoryResp.Marshal(b, m, deterministic)
}
func (m *DeleteRepositoryResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRepositoryResp.Merge(m, src)
}
func (m *DeleteRepositoryResp) XXX_Size() int {
	return xxx_messageInfo_DeleteRepositoryResp.Size(m)
}
func (m *DeleteRepositoryResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRepositoryResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRepositoryResp proto.InternalMessageInfo

func (m *DeleteRepositoryResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *DeleteRepositoryResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *DeleteRepositoryResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *DeleteRepositoryResp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *DeleteRepositoryResp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type Repository struct {
	ProjectCode          *string  `protobuf:"bytes,1,opt,name=projectCode" json:"projectCode,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type                 *string  `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	RepoURL              *string  `protobuf:"bytes,4,opt,name=repoURL" json:"repoURL,omitempty"`
	Username             *string  `protobuf:"bytes,5,opt,name=username" json:"username,omitempty"`
	Password             *string  `protobuf:"bytes,6,opt,name=password" json:"password,omitempty"`
	Remote               *bool    `protobuf:"varint,7,opt,name=remote" json:"remote,omitempty"`
	RemoteURL            *string  `protobuf:"bytes,8,opt,name=remoteURL" json:"remoteURL,omitempty"`
	RemoteUsername       *string  `protobuf:"bytes,9,opt,name=remoteUsername" json:"remoteUsername,omitempty"`
	RemotePassword       *string  `protobuf:"bytes,10,opt,name=remotePassword" json:"remotePassword,omitempty"`
	CreateBy             *string  `protobuf:"bytes,11,opt,name=createBy" json:"createBy,omitempty"`
	UpdateBy             *string  `protobuf:"bytes,12,opt,name=updateBy" json:"updateBy,omitempty"`
	CreateTime           *string  `protobuf:"bytes,13,opt,name=createTime" json:"createTime,omitempty"`
	UpdateTime           *string  `protobuf:"bytes,14,opt,name=updateTime" json:"updateTime,omitempty"`
	DisplayName          *string  `protobuf:"bytes,15,opt,name=displayName" json:"displayName,omitempty"`
	Public               *bool    `protobuf:"varint,16,opt,name=public" json:"public,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Repository) Reset()         { *m = Repository{} }
func (m *Repository) String() string { return proto.CompactTextString(m) }
func (*Repository) ProtoMessage()    {}
func (*Repository) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{15}
}

func (m *Repository) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Repository.Unmarshal(m, b)
}
func (m *Repository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Repository.Marshal(b, m, deterministic)
}
func (m *Repository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Repository.Merge(m, src)
}
func (m *Repository) XXX_Size() int {
	return xxx_messageInfo_Repository.Size(m)
}
func (m *Repository) XXX_DiscardUnknown() {
	xxx_messageInfo_Repository.DiscardUnknown(m)
}

var xxx_messageInfo_Repository proto.InternalMessageInfo

func (m *Repository) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *Repository) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Repository) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Repository) GetRepoURL() string {
	if m != nil && m.RepoURL != nil {
		return *m.RepoURL
	}
	return ""
}

func (m *Repository) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *Repository) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *Repository) GetRemote() bool {
	if m != nil && m.Remote != nil {
		return *m.Remote
	}
	return false
}

func (m *Repository) GetRemoteURL() string {
	if m != nil && m.RemoteURL != nil {
		return *m.RemoteURL
	}
	return ""
}

func (m *Repository) GetRemoteUsername() string {
	if m != nil && m.RemoteUsername != nil {
		return *m.RemoteUsername
	}
	return ""
}

func (m *Repository) GetRemotePassword() string {
	if m != nil && m.RemotePassword != nil {
		return *m.RemotePassword
	}
	return ""
}

func (m *Repository) GetCreateBy() string {
	if m != nil && m.CreateBy != nil {
		return *m.CreateBy
	}
	return ""
}

func (m *Repository) GetUpdateBy() string {
	if m != nil && m.UpdateBy != nil {
		return *m.UpdateBy
	}
	return ""
}

func (m *Repository) GetCreateTime() string {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return ""
}

func (m *Repository) GetUpdateTime() string {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return ""
}

func (m *Repository) GetDisplayName() string {
	if m != nil && m.DisplayName != nil {
		return *m.DisplayName
	}
	return ""
}

func (m *Repository) GetPublic() bool {
	if m != nil && m.Public != nil {
		return *m.Public
	}
	return false
}

type ChartListData struct {
	Page                 *uint32  `protobuf:"varint,1,opt,name=page" json:"page,omitempty"`
	Size                 *uint32  `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	Total                *uint32  `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
	Data                 []*Chart `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChartListData) Reset()         { *m = ChartListData{} }
func (m *ChartListData) String() string { return proto.CompactTextString(m) }
func (*ChartListData) ProtoMessage()    {}
func (*ChartListData) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{16}
}

func (m *ChartListData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartListData.Unmarshal(m, b)
}
func (m *ChartListData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartListData.Marshal(b, m, deterministic)
}
func (m *ChartListData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartListData.Merge(m, src)
}
func (m *ChartListData) XXX_Size() int {
	return xxx_messageInfo_ChartListData.Size(m)
}
func (m *ChartListData) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartListData.DiscardUnknown(m)
}

var xxx_messageInfo_ChartListData proto.InternalMessageInfo

func (m *ChartListData) GetPage() uint32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *ChartListData) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *ChartListData) GetTotal() uint32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *ChartListData) GetData() []*Chart {
	if m != nil {
		return m.Data
	}
	return nil
}

type Chart struct {
	ProjectID            *string  `protobuf:"bytes,1,opt,name=projectID" json:"projectID,omitempty"`
	Repository           *string  `protobuf:"bytes,2,opt,name=repository" json:"repository,omitempty"`
	Type                 *string  `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Key                  *string  `protobuf:"bytes,4,opt,name=key" json:"key,omitempty"`
	Name                 *string  `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	LatestVersion        *string  `protobuf:"bytes,6,opt,name=latestVersion" json:"latestVersion,omitempty"`
	LatestAppVersion     *string  `protobuf:"bytes,7,opt,name=latestAppVersion" json:"latestAppVersion,omitempty"`
	LatestDescription    *string  `protobuf:"bytes,8,opt,name=latestDescription" json:"latestDescription,omitempty"`
	CreateBy             *string  `protobuf:"bytes,9,opt,name=createBy" json:"createBy,omitempty"`
	UpdateBy             *string  `protobuf:"bytes,10,opt,name=updateBy" json:"updateBy,omitempty"`
	CreateTime           *string  `protobuf:"bytes,11,opt,name=createTime" json:"createTime,omitempty"`
	UpdateTime           *string  `protobuf:"bytes,12,opt,name=updateTime" json:"updateTime,omitempty"`
	ProjectCode          *string  `protobuf:"bytes,13,opt,name=projectCode" json:"projectCode,omitempty"`
	Icon                 *string  `protobuf:"bytes,14,opt,name=icon" json:"icon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chart) Reset()         { *m = Chart{} }
func (m *Chart) String() string { return proto.CompactTextString(m) }
func (*Chart) ProtoMessage()    {}
func (*Chart) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{17}
}

func (m *Chart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chart.Unmarshal(m, b)
}
func (m *Chart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chart.Marshal(b, m, deterministic)
}
func (m *Chart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chart.Merge(m, src)
}
func (m *Chart) XXX_Size() int {
	return xxx_messageInfo_Chart.Size(m)
}
func (m *Chart) XXX_DiscardUnknown() {
	xxx_messageInfo_Chart.DiscardUnknown(m)
}

var xxx_messageInfo_Chart proto.InternalMessageInfo

func (m *Chart) GetProjectID() string {
	if m != nil && m.ProjectID != nil {
		return *m.ProjectID
	}
	return ""
}

func (m *Chart) GetRepository() string {
	if m != nil && m.Repository != nil {
		return *m.Repository
	}
	return ""
}

func (m *Chart) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Chart) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Chart) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Chart) GetLatestVersion() string {
	if m != nil && m.LatestVersion != nil {
		return *m.LatestVersion
	}
	return ""
}

func (m *Chart) GetLatestAppVersion() string {
	if m != nil && m.LatestAppVersion != nil {
		return *m.LatestAppVersion
	}
	return ""
}

func (m *Chart) GetLatestDescription() string {
	if m != nil && m.LatestDescription != nil {
		return *m.LatestDescription
	}
	return ""
}

func (m *Chart) GetCreateBy() string {
	if m != nil && m.CreateBy != nil {
		return *m.CreateBy
	}
	return ""
}

func (m *Chart) GetUpdateBy() string {
	if m != nil && m.UpdateBy != nil {
		return *m.UpdateBy
	}
	return ""
}

func (m *Chart) GetCreateTime() string {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return ""
}

func (m *Chart) GetUpdateTime() string {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return ""
}

func (m *Chart) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *Chart) GetIcon() string {
	if m != nil && m.Icon != nil {
		return *m.Icon
	}
	return ""
}

type ChartVersionListData struct {
	Page                 *uint32         `protobuf:"varint,1,opt,name=page" json:"page,omitempty"`
	Size                 *uint32         `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	Total                *uint32         `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
	Data                 []*ChartVersion `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ChartVersionListData) Reset()         { *m = ChartVersionListData{} }
func (m *ChartVersionListData) String() string { return proto.CompactTextString(m) }
func (*ChartVersionListData) ProtoMessage()    {}
func (*ChartVersionListData) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{18}
}

func (m *ChartVersionListData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartVersionListData.Unmarshal(m, b)
}
func (m *ChartVersionListData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartVersionListData.Marshal(b, m, deterministic)
}
func (m *ChartVersionListData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartVersionListData.Merge(m, src)
}
func (m *ChartVersionListData) XXX_Size() int {
	return xxx_messageInfo_ChartVersionListData.Size(m)
}
func (m *ChartVersionListData) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartVersionListData.DiscardUnknown(m)
}

var xxx_messageInfo_ChartVersionListData proto.InternalMessageInfo

func (m *ChartVersionListData) GetPage() uint32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *ChartVersionListData) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *ChartVersionListData) GetTotal() uint32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *ChartVersionListData) GetData() []*ChartVersion {
	if m != nil {
		return m.Data
	}
	return nil
}

type ChartVersion struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Version              *string  `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	AppVersion           *string  `protobuf:"bytes,3,opt,name=appVersion" json:"appVersion,omitempty"`
	Description          *string  `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	CreateBy             *string  `protobuf:"bytes,5,opt,name=createBy" json:"createBy,omitempty"`
	UpdateBy             *string  `protobuf:"bytes,6,opt,name=updateBy" json:"updateBy,omitempty"`
	CreateTime           *string  `protobuf:"bytes,7,opt,name=createTime" json:"createTime,omitempty"`
	UpdateTime           *string  `protobuf:"bytes,8,opt,name=updateTime" json:"updateTime,omitempty"`
	Url                  *string  `protobuf:"bytes,9,opt,name=url" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChartVersion) Reset()         { *m = ChartVersion{} }
func (m *ChartVersion) String() string { return proto.CompactTextString(m) }
func (*ChartVersion) ProtoMessage()    {}
func (*ChartVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{19}
}

func (m *ChartVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartVersion.Unmarshal(m, b)
}
func (m *ChartVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartVersion.Marshal(b, m, deterministic)
}
func (m *ChartVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartVersion.Merge(m, src)
}
func (m *ChartVersion) XXX_Size() int {
	return xxx_messageInfo_ChartVersion.Size(m)
}
func (m *ChartVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartVersion.DiscardUnknown(m)
}

var xxx_messageInfo_ChartVersion proto.InternalMessageInfo

func (m *ChartVersion) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ChartVersion) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *ChartVersion) GetAppVersion() string {
	if m != nil && m.AppVersion != nil {
		return *m.AppVersion
	}
	return ""
}

func (m *ChartVersion) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *ChartVersion) GetCreateBy() string {
	if m != nil && m.CreateBy != nil {
		return *m.CreateBy
	}
	return ""
}

func (m *ChartVersion) GetUpdateBy() string {
	if m != nil && m.UpdateBy != nil {
		return *m.UpdateBy
	}
	return ""
}

func (m *ChartVersion) GetCreateTime() string {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return ""
}

func (m *ChartVersion) GetUpdateTime() string {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return ""
}

func (m *ChartVersion) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

type ChartDetail struct {
	Name                 *string                 `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Version              *string                 `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	Readme               *string                 `protobuf:"bytes,3,opt,name=readme" json:"readme,omitempty"`
	ValuesFile           []string                `protobuf:"bytes,4,rep,name=valuesFile" json:"valuesFile,omitempty"`
	Contents             map[string]*FileContent `protobuf:"bytes,5,rep,name=contents" json:"contents,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Url                  *string                 `protobuf:"bytes,6,opt,name=url" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ChartDetail) Reset()         { *m = ChartDetail{} }
func (m *ChartDetail) String() string { return proto.CompactTextString(m) }
func (*ChartDetail) ProtoMessage()    {}
func (*ChartDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{20}
}

func (m *ChartDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartDetail.Unmarshal(m, b)
}
func (m *ChartDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartDetail.Marshal(b, m, deterministic)
}
func (m *ChartDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartDetail.Merge(m, src)
}
func (m *ChartDetail) XXX_Size() int {
	return xxx_messageInfo_ChartDetail.Size(m)
}
func (m *ChartDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ChartDetail proto.InternalMessageInfo

func (m *ChartDetail) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ChartDetail) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *ChartDetail) GetReadme() string {
	if m != nil && m.Readme != nil {
		return *m.Readme
	}
	return ""
}

func (m *ChartDetail) GetValuesFile() []string {
	if m != nil {
		return m.ValuesFile
	}
	return nil
}

func (m *ChartDetail) GetContents() map[string]*FileContent {
	if m != nil {
		return m.Contents
	}
	return nil
}

func (m *ChartDetail) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

type FileContent struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Path                 *string  `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Content              *string  `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileContent) Reset()         { *m = FileContent{} }
func (m *FileContent) String() string { return proto.CompactTextString(m) }
func (*FileContent) ProtoMessage()    {}
func (*FileContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{21}
}

func (m *FileContent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileContent.Unmarshal(m, b)
}
func (m *FileContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileContent.Marshal(b, m, deterministic)
}
func (m *FileContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileContent.Merge(m, src)
}
func (m *FileContent) XXX_Size() int {
	return xxx_messageInfo_FileContent.Size(m)
}
func (m *FileContent) XXX_DiscardUnknown() {
	xxx_messageInfo_FileContent.DiscardUnknown(m)
}

var xxx_messageInfo_FileContent proto.InternalMessageInfo

func (m *FileContent) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *FileContent) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *FileContent) GetContent() string {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return ""
}

type ListChartV1Req struct {
	Page                 *uint32  `protobuf:"varint,1,opt,name=page" json:"page,omitempty"`
	Size                 *uint32  `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	ProjectCode          *string  `protobuf:"bytes,3,req,name=projectCode" json:"projectCode,omitempty"`
	RepoName             *string  `protobuf:"bytes,4,req,name=repoName" json:"repoName,omitempty"`
	Name                 *string  `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListChartV1Req) Reset()         { *m = ListChartV1Req{} }
func (m *ListChartV1Req) String() string { return proto.CompactTextString(m) }
func (*ListChartV1Req) ProtoMessage()    {}
func (*ListChartV1Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{22}
}

func (m *ListChartV1Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListChartV1Req.Unmarshal(m, b)
}
func (m *ListChartV1Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListChartV1Req.Marshal(b, m, deterministic)
}
func (m *ListChartV1Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListChartV1Req.Merge(m, src)
}
func (m *ListChartV1Req) XXX_Size() int {
	return xxx_messageInfo_ListChartV1Req.Size(m)
}
func (m *ListChartV1Req) XXX_DiscardUnknown() {
	xxx_messageInfo_ListChartV1Req.DiscardUnknown(m)
}

var xxx_messageInfo_ListChartV1Req proto.InternalMessageInfo

func (m *ListChartV1Req) GetPage() uint32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *ListChartV1Req) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *ListChartV1Req) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *ListChartV1Req) GetRepoName() string {
	if m != nil && m.RepoName != nil {
		return *m.RepoName
	}
	return ""
}

func (m *ListChartV1Req) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type ListChartV1Resp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *ChartListData  `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	RequestID            *string         `protobuf:"bytes,5,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,6,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListChartV1Resp) Reset()         { *m = ListChartV1Resp{} }
func (m *ListChartV1Resp) String() string { return proto.CompactTextString(m) }
func (*ListChartV1Resp) ProtoMessage()    {}
func (*ListChartV1Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{23}
}

func (m *ListChartV1Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListChartV1Resp.Unmarshal(m, b)
}
func (m *ListChartV1Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListChartV1Resp.Marshal(b, m, deterministic)
}
func (m *ListChartV1Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListChartV1Resp.Merge(m, src)
}
func (m *ListChartV1Resp) XXX_Size() int {
	return xxx_messageInfo_ListChartV1Resp.Size(m)
}
func (m *ListChartV1Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListChartV1Resp.DiscardUnknown(m)
}

var xxx_messageInfo_ListChartV1Resp proto.InternalMessageInfo

func (m *ListChartV1Resp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ListChartV1Resp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ListChartV1Resp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ListChartV1Resp) GetData() *ChartListData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListChartV1Resp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *ListChartV1Resp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type GetChartDetailV1Req struct {
	ProjectCode          *string  `protobuf:"bytes,1,req,name=projectCode" json:"projectCode,omitempty"`
	RepoName             *string  `protobuf:"bytes,2,req,name=repoName" json:"repoName,omitempty"`
	Name                 *string  `protobuf:"bytes,3,req,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChartDetailV1Req) Reset()         { *m = GetChartDetailV1Req{} }
func (m *GetChartDetailV1Req) String() string { return proto.CompactTextString(m) }
func (*GetChartDetailV1Req) ProtoMessage()    {}
func (*GetChartDetailV1Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{24}
}

func (m *GetChartDetailV1Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChartDetailV1Req.Unmarshal(m, b)
}
func (m *GetChartDetailV1Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChartDetailV1Req.Marshal(b, m, deterministic)
}
func (m *GetChartDetailV1Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChartDetailV1Req.Merge(m, src)
}
func (m *GetChartDetailV1Req) XXX_Size() int {
	return xxx_messageInfo_GetChartDetailV1Req.Size(m)
}
func (m *GetChartDetailV1Req) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChartDetailV1Req.DiscardUnknown(m)
}

var xxx_messageInfo_GetChartDetailV1Req proto.InternalMessageInfo

func (m *GetChartDetailV1Req) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *GetChartDetailV1Req) GetRepoName() string {
	if m != nil && m.RepoName != nil {
		return *m.RepoName
	}
	return ""
}

func (m *GetChartDetailV1Req) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type GetChartDetailV1Resp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *Chart          `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	RequestID            *string         `protobuf:"bytes,5,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,6,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetChartDetailV1Resp) Reset()         { *m = GetChartDetailV1Resp{} }
func (m *GetChartDetailV1Resp) String() string { return proto.CompactTextString(m) }
func (*GetChartDetailV1Resp) ProtoMessage()    {}
func (*GetChartDetailV1Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{25}
}

func (m *GetChartDetailV1Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChartDetailV1Resp.Unmarshal(m, b)
}
func (m *GetChartDetailV1Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChartDetailV1Resp.Marshal(b, m, deterministic)
}
func (m *GetChartDetailV1Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChartDetailV1Resp.Merge(m, src)
}
func (m *GetChartDetailV1Resp) XXX_Size() int {
	return xxx_messageInfo_GetChartDetailV1Resp.Size(m)
}
func (m *GetChartDetailV1Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChartDetailV1Resp.DiscardUnknown(m)
}

var xxx_messageInfo_GetChartDetailV1Resp proto.InternalMessageInfo

func (m *GetChartDetailV1Resp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *GetChartDetailV1Resp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *GetChartDetailV1Resp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *GetChartDetailV1Resp) GetData() *Chart {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetChartDetailV1Resp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *GetChartDetailV1Resp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type ListChartVersionV1Req struct {
	Page                 *uint32  `protobuf:"varint,1,opt,name=page" json:"page,omitempty"`
	Size                 *uint32  `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	ProjectCode          *string  `protobuf:"bytes,3,req,name=projectCode" json:"projectCode,omitempty"`
	RepoName             *string  `protobuf:"bytes,4,req,name=repoName" json:"repoName,omitempty"`
	Name                 *string  `protobuf:"bytes,5,req,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListChartVersionV1Req) Reset()         { *m = ListChartVersionV1Req{} }
func (m *ListChartVersionV1Req) String() string { return proto.CompactTextString(m) }
func (*ListChartVersionV1Req) ProtoMessage()    {}
func (*ListChartVersionV1Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{26}
}

func (m *ListChartVersionV1Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListChartVersionV1Req.Unmarshal(m, b)
}
func (m *ListChartVersionV1Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListChartVersionV1Req.Marshal(b, m, deterministic)
}
func (m *ListChartVersionV1Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListChartVersionV1Req.Merge(m, src)
}
func (m *ListChartVersionV1Req) XXX_Size() int {
	return xxx_messageInfo_ListChartVersionV1Req.Size(m)
}
func (m *ListChartVersionV1Req) XXX_DiscardUnknown() {
	xxx_messageInfo_ListChartVersionV1Req.DiscardUnknown(m)
}

var xxx_messageInfo_ListChartVersionV1Req proto.InternalMessageInfo

func (m *ListChartVersionV1Req) GetPage() uint32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *ListChartVersionV1Req) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *ListChartVersionV1Req) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *ListChartVersionV1Req) GetRepoName() string {
	if m != nil && m.RepoName != nil {
		return *m.RepoName
	}
	return ""
}

func (m *ListChartVersionV1Req) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type ListChartVersionV1Resp struct {
	Code                 *uint32               `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string               `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool                 `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *ChartVersionListData `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	RequestID            *string               `protobuf:"bytes,5,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations       `protobuf:"bytes,6,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ListChartVersionV1Resp) Reset()         { *m = ListChartVersionV1Resp{} }
func (m *ListChartVersionV1Resp) String() string { return proto.CompactTextString(m) }
func (*ListChartVersionV1Resp) ProtoMessage()    {}
func (*ListChartVersionV1Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{27}
}

func (m *ListChartVersionV1Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListChartVersionV1Resp.Unmarshal(m, b)
}
func (m *ListChartVersionV1Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListChartVersionV1Resp.Marshal(b, m, deterministic)
}
func (m *ListChartVersionV1Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListChartVersionV1Resp.Merge(m, src)
}
func (m *ListChartVersionV1Resp) XXX_Size() int {
	return xxx_messageInfo_ListChartVersionV1Resp.Size(m)
}
func (m *ListChartVersionV1Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListChartVersionV1Resp.DiscardUnknown(m)
}

var xxx_messageInfo_ListChartVersionV1Resp proto.InternalMessageInfo

func (m *ListChartVersionV1Resp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ListChartVersionV1Resp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ListChartVersionV1Resp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ListChartVersionV1Resp) GetData() *ChartVersionListData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListChartVersionV1Resp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *ListChartVersionV1Resp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type GetVersionDetailV1Req struct {
	ProjectCode          *string  `protobuf:"bytes,1,req,name=projectCode" json:"projectCode,omitempty"`
	RepoName             *string  `protobuf:"bytes,2,req,name=repoName" json:"repoName,omitempty"`
	Name                 *string  `protobuf:"bytes,3,req,name=name" json:"name,omitempty"`
	Version              *string  `protobuf:"bytes,4,req,name=version" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVersionDetailV1Req) Reset()         { *m = GetVersionDetailV1Req{} }
func (m *GetVersionDetailV1Req) String() string { return proto.CompactTextString(m) }
func (*GetVersionDetailV1Req) ProtoMessage()    {}
func (*GetVersionDetailV1Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{28}
}

func (m *GetVersionDetailV1Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionDetailV1Req.Unmarshal(m, b)
}
func (m *GetVersionDetailV1Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionDetailV1Req.Marshal(b, m, deterministic)
}
func (m *GetVersionDetailV1Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionDetailV1Req.Merge(m, src)
}
func (m *GetVersionDetailV1Req) XXX_Size() int {
	return xxx_messageInfo_GetVersionDetailV1Req.Size(m)
}
func (m *GetVersionDetailV1Req) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionDetailV1Req.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionDetailV1Req proto.InternalMessageInfo

func (m *GetVersionDetailV1Req) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *GetVersionDetailV1Req) GetRepoName() string {
	if m != nil && m.RepoName != nil {
		return *m.RepoName
	}
	return ""
}

func (m *GetVersionDetailV1Req) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *GetVersionDetailV1Req) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

type GetVersionDetailV1Resp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *ChartDetail    `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	RequestID            *string         `protobuf:"bytes,5,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,6,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetVersionDetailV1Resp) Reset()         { *m = GetVersionDetailV1Resp{} }
func (m *GetVersionDetailV1Resp) String() string { return proto.CompactTextString(m) }
func (*GetVersionDetailV1Resp) ProtoMessage()    {}
func (*GetVersionDetailV1Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{29}
}

func (m *GetVersionDetailV1Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionDetailV1Resp.Unmarshal(m, b)
}
func (m *GetVersionDetailV1Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionDetailV1Resp.Marshal(b, m, deterministic)
}
func (m *GetVersionDetailV1Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionDetailV1Resp.Merge(m, src)
}
func (m *GetVersionDetailV1Resp) XXX_Size() int {
	return xxx_messageInfo_GetVersionDetailV1Resp.Size(m)
}
func (m *GetVersionDetailV1Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionDetailV1Resp.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionDetailV1Resp proto.InternalMessageInfo

func (m *GetVersionDetailV1Resp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *GetVersionDetailV1Resp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *GetVersionDetailV1Resp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *GetVersionDetailV1Resp) GetData() *ChartDetail {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetVersionDetailV1Resp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *GetVersionDetailV1Resp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type DeleteChartReq struct {
	ProjectCode          *string  `protobuf:"bytes,1,req,name=projectCode" json:"projectCode,omitempty"`
	RepoName             *string  `protobuf:"bytes,2,req,name=repoName" json:"repoName,omitempty"`
	Name                 *string  `protobuf:"bytes,3,req,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteChartReq) Reset()         { *m = DeleteChartReq{} }
func (m *DeleteChartReq) String() string { return proto.CompactTextString(m) }
func (*DeleteChartReq) ProtoMessage()    {}
func (*DeleteChartReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{30}
}

func (m *DeleteChartReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteChartReq.Unmarshal(m, b)
}
func (m *DeleteChartReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteChartReq.Marshal(b, m, deterministic)
}
func (m *DeleteChartReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteChartReq.Merge(m, src)
}
func (m *DeleteChartReq) XXX_Size() int {
	return xxx_messageInfo_DeleteChartReq.Size(m)
}
func (m *DeleteChartReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteChartReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteChartReq proto.InternalMessageInfo

func (m *DeleteChartReq) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *DeleteChartReq) GetRepoName() string {
	if m != nil && m.RepoName != nil {
		return *m.RepoName
	}
	return ""
}

func (m *DeleteChartReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type DeleteChartResp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	RequestID            *string         `protobuf:"bytes,4,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,5,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DeleteChartResp) Reset()         { *m = DeleteChartResp{} }
func (m *DeleteChartResp) String() string { return proto.CompactTextString(m) }
func (*DeleteChartResp) ProtoMessage()    {}
func (*DeleteChartResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{31}
}

func (m *DeleteChartResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteChartResp.Unmarshal(m, b)
}
func (m *DeleteChartResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteChartResp.Marshal(b, m, deterministic)
}
func (m *DeleteChartResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteChartResp.Merge(m, src)
}
func (m *DeleteChartResp) XXX_Size() int {
	return xxx_messageInfo_DeleteChartResp.Size(m)
}
func (m *DeleteChartResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteChartResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteChartResp proto.InternalMessageInfo

func (m *DeleteChartResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *DeleteChartResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *DeleteChartResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *DeleteChartResp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *DeleteChartResp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type DeleteChartVersionReq struct {
	ProjectCode          *string  `protobuf:"bytes,1,req,name=projectCode" json:"projectCode,omitempty"`
	RepoName             *string  `protobuf:"bytes,2,req,name=repoName" json:"repoName,omitempty"`
	Name                 *string  `protobuf:"bytes,3,req,name=name" json:"name,omitempty"`
	Version              *string  `protobuf:"bytes,4,req,name=version" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteChartVersionReq) Reset()         { *m = DeleteChartVersionReq{} }
func (m *DeleteChartVersionReq) String() string { return proto.CompactTextString(m) }
func (*DeleteChartVersionReq) ProtoMessage()    {}
func (*DeleteChartVersionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{32}
}

func (m *DeleteChartVersionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteChartVersionReq.Unmarshal(m, b)
}
func (m *DeleteChartVersionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteChartVersionReq.Marshal(b, m, deterministic)
}
func (m *DeleteChartVersionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteChartVersionReq.Merge(m, src)
}
func (m *DeleteChartVersionReq) XXX_Size() int {
	return xxx_messageInfo_DeleteChartVersionReq.Size(m)
}
func (m *DeleteChartVersionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteChartVersionReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteChartVersionReq proto.InternalMessageInfo

func (m *DeleteChartVersionReq) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *DeleteChartVersionReq) GetRepoName() string {
	if m != nil && m.RepoName != nil {
		return *m.RepoName
	}
	return ""
}

func (m *DeleteChartVersionReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *DeleteChartVersionReq) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

type DeleteChartVersionResp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	RequestID            *string         `protobuf:"bytes,4,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,5,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DeleteChartVersionResp) Reset()         { *m = DeleteChartVersionResp{} }
func (m *DeleteChartVersionResp) String() string { return proto.CompactTextString(m) }
func (*DeleteChartVersionResp) ProtoMessage()    {}
func (*DeleteChartVersionResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{33}
}

func (m *DeleteChartVersionResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteChartVersionResp.Unmarshal(m, b)
}
func (m *DeleteChartVersionResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteChartVersionResp.Marshal(b, m, deterministic)
}
func (m *DeleteChartVersionResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteChartVersionResp.Merge(m, src)
}
func (m *DeleteChartVersionResp) XXX_Size() int {
	return xxx_messageInfo_DeleteChartVersionResp.Size(m)
}
func (m *DeleteChartVersionResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteChartVersionResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteChartVersionResp proto.InternalMessageInfo

func (m *DeleteChartVersionResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *DeleteChartVersionResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *DeleteChartVersionResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *DeleteChartVersionResp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *DeleteChartVersionResp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type DownloadChartReq struct {
	ProjectCode          *string  `protobuf:"bytes,1,req,name=projectCode" json:"projectCode,omitempty"`
	RepoName             *string  `protobuf:"bytes,2,req,name=repoName" json:"repoName,omitempty"`
	Name                 *string  `protobuf:"bytes,3,req,name=name" json:"name,omitempty"`
	Version              *string  `protobuf:"bytes,4,req,name=version" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadChartReq) Reset()         { *m = DownloadChartReq{} }
func (m *DownloadChartReq) String() string { return proto.CompactTextString(m) }
func (*DownloadChartReq) ProtoMessage()    {}
func (*DownloadChartReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{34}
}

func (m *DownloadChartReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadChartReq.Unmarshal(m, b)
}
func (m *DownloadChartReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadChartReq.Marshal(b, m, deterministic)
}
func (m *DownloadChartReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadChartReq.Merge(m, src)
}
func (m *DownloadChartReq) XXX_Size() int {
	return xxx_messageInfo_DownloadChartReq.Size(m)
}
func (m *DownloadChartReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadChartReq.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadChartReq proto.InternalMessageInfo

func (m *DownloadChartReq) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *DownloadChartReq) GetRepoName() string {
	if m != nil && m.RepoName != nil {
		return *m.RepoName
	}
	return ""
}

func (m *DownloadChartReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *DownloadChartReq) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

type UploadChartReq struct {
	ProjectCode          *string  `protobuf:"bytes,1,opt,name=projectCode" json:"projectCode,omitempty"`
	RepoName             *string  `protobuf:"bytes,2,opt,name=repoName" json:"repoName,omitempty"`
	File                 []byte   `protobuf:"bytes,3,opt,name=file" json:"file,omitempty"`
	Version              *string  `protobuf:"bytes,4,opt,name=version" json:"version,omitempty"`
	Force                *bool    `protobuf:"varint,5,opt,name=force" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadChartReq) Reset()         { *m = UploadChartReq{} }
func (m *UploadChartReq) String() string { return proto.CompactTextString(m) }
func (*UploadChartReq) ProtoMessage()    {}
func (*UploadChartReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{35}
}

func (m *UploadChartReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadChartReq.Unmarshal(m, b)
}
func (m *UploadChartReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadChartReq.Marshal(b, m, deterministic)
}
func (m *UploadChartReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadChartReq.Merge(m, src)
}
func (m *UploadChartReq) XXX_Size() int {
	return xxx_messageInfo_UploadChartReq.Size(m)
}
func (m *UploadChartReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadChartReq.DiscardUnknown(m)
}

var xxx_messageInfo_UploadChartReq proto.InternalMessageInfo

func (m *UploadChartReq) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *UploadChartReq) GetRepoName() string {
	if m != nil && m.RepoName != nil {
		return *m.RepoName
	}
	return ""
}

func (m *UploadChartReq) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *UploadChartReq) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *UploadChartReq) GetForce() bool {
	if m != nil && m.Force != nil {
		return *m.Force
	}
	return false
}

type UploadChartResp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	RequestID            *string         `protobuf:"bytes,4,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,5,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UploadChartResp) Reset()         { *m = UploadChartResp{} }
func (m *UploadChartResp) String() string { return proto.CompactTextString(m) }
func (*UploadChartResp) ProtoMessage()    {}
func (*UploadChartResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{36}
}

func (m *UploadChartResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadChartResp.Unmarshal(m, b)
}
func (m *UploadChartResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadChartResp.Marshal(b, m, deterministic)
}
func (m *UploadChartResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadChartResp.Merge(m, src)
}
func (m *UploadChartResp) XXX_Size() int {
	return xxx_messageInfo_UploadChartResp.Size(m)
}
func (m *UploadChartResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadChartResp.DiscardUnknown(m)
}

var xxx_messageInfo_UploadChartResp proto.InternalMessageInfo

func (m *UploadChartResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *UploadChartResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *UploadChartResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *UploadChartResp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *UploadChartResp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type GetChartReleaseReq struct {
	ProjectCode          *string  `protobuf:"bytes,1,opt,name=projectCode" json:"projectCode,omitempty"`
	RepoName             *string  `protobuf:"bytes,2,opt,name=repoName" json:"repoName,omitempty"`
	Name                 *string  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Versions             []string `protobuf:"bytes,4,rep,name=versions" json:"versions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChartReleaseReq) Reset()         { *m = GetChartReleaseReq{} }
func (m *GetChartReleaseReq) String() string { return proto.CompactTextString(m) }
func (*GetChartReleaseReq) ProtoMessage()    {}
func (*GetChartReleaseReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{37}
}

func (m *GetChartReleaseReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChartReleaseReq.Unmarshal(m, b)
}
func (m *GetChartReleaseReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChartReleaseReq.Marshal(b, m, deterministic)
}
func (m *GetChartReleaseReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChartReleaseReq.Merge(m, src)
}
func (m *GetChartReleaseReq) XXX_Size() int {
	return xxx_messageInfo_GetChartReleaseReq.Size(m)
}
func (m *GetChartReleaseReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChartReleaseReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetChartReleaseReq proto.InternalMessageInfo

func (m *GetChartReleaseReq) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *GetChartReleaseReq) GetRepoName() string {
	if m != nil && m.RepoName != nil {
		return *m.RepoName
	}
	return ""
}

func (m *GetChartReleaseReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *GetChartReleaseReq) GetVersions() []string {
	if m != nil {
		return m.Versions
	}
	return nil
}

type GetChartReleaseResp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 []*Release      `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	RequestID            *string         `protobuf:"bytes,5,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,6,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetChartReleaseResp) Reset()         { *m = GetChartReleaseResp{} }
func (m *GetChartReleaseResp) String() string { return proto.CompactTextString(m) }
func (*GetChartReleaseResp) ProtoMessage()    {}
func (*GetChartReleaseResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{38}
}

func (m *GetChartReleaseResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChartReleaseResp.Unmarshal(m, b)
}
func (m *GetChartReleaseResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChartReleaseResp.Marshal(b, m, deterministic)
}
func (m *GetChartReleaseResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChartReleaseResp.Merge(m, src)
}
func (m *GetChartReleaseResp) XXX_Size() int {
	return xxx_messageInfo_GetChartReleaseResp.Size(m)
}
func (m *GetChartReleaseResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChartReleaseResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetChartReleaseResp proto.InternalMessageInfo

func (m *GetChartReleaseResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *GetChartReleaseResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *GetChartReleaseResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *GetChartReleaseResp) GetData() []*Release {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetChartReleaseResp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *GetChartReleaseResp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type ImportClusterReleaseReq struct {
	ProjectCode          *string  `protobuf:"bytes,1,opt,name=projectCode" json:"projectCode,omitempty"`
	ClusterID            *string  `protobuf:"bytes,2,opt,name=clusterID" json:"clusterID,omitempty"`
	Namespace            *string  `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	Name                 *string  `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	RepoName             *string  `protobuf:"bytes,5,opt,name=repoName" json:"repoName,omitempty"`
	ChartName            *string  `protobuf:"bytes,6,opt,name=chartName" json:"chartName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportClusterReleaseReq) Reset()         { *m = ImportClusterReleaseReq{} }
func (m *ImportClusterReleaseReq) String() string { return proto.CompactTextString(m) }
func (*ImportClusterReleaseReq) ProtoMessage()    {}
func (*ImportClusterReleaseReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{39}
}

func (m *ImportClusterReleaseReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportClusterReleaseReq.Unmarshal(m, b)
}
func (m *ImportClusterReleaseReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportClusterReleaseReq.Marshal(b, m, deterministic)
}
func (m *ImportClusterReleaseReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportClusterReleaseReq.Merge(m, src)
}
func (m *ImportClusterReleaseReq) XXX_Size() int {
	return xxx_messageInfo_ImportClusterReleaseReq.Size(m)
}
func (m *ImportClusterReleaseReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportClusterReleaseReq.DiscardUnknown(m)
}

var xxx_messageInfo_ImportClusterReleaseReq proto.InternalMessageInfo

func (m *ImportClusterReleaseReq) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *ImportClusterReleaseReq) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *ImportClusterReleaseReq) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *ImportClusterReleaseReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ImportClusterReleaseReq) GetRepoName() string {
	if m != nil && m.RepoName != nil {
		return *m.RepoName
	}
	return ""
}

func (m *ImportClusterReleaseReq) GetChartName() string {
	if m != nil && m.ChartName != nil {
		return *m.ChartName
	}
	return ""
}

type ImportClusterReleaseResp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	RequestID            *string         `protobuf:"bytes,4,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,5,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ImportClusterReleaseResp) Reset()         { *m = ImportClusterReleaseResp{} }
func (m *ImportClusterReleaseResp) String() string { return proto.CompactTextString(m) }
func (*ImportClusterReleaseResp) ProtoMessage()    {}
func (*ImportClusterReleaseResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{40}
}

func (m *ImportClusterReleaseResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportClusterReleaseResp.Unmarshal(m, b)
}
func (m *ImportClusterReleaseResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportClusterReleaseResp.Marshal(b, m, deterministic)
}
func (m *ImportClusterReleaseResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportClusterReleaseResp.Merge(m, src)
}
func (m *ImportClusterReleaseResp) XXX_Size() int {
	return xxx_messageInfo_ImportClusterReleaseResp.Size(m)
}
func (m *ImportClusterReleaseResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportClusterReleaseResp.DiscardUnknown(m)
}

var xxx_messageInfo_ImportClusterReleaseResp proto.InternalMessageInfo

func (m *ImportClusterReleaseResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ImportClusterReleaseResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ImportClusterReleaseResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ImportClusterReleaseResp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *ImportClusterReleaseResp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type ReleaseListData struct {
	Page                 *uint32    `protobuf:"varint,1,opt,name=page" json:"page,omitempty"`
	Size                 *uint32    `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	Total                *uint32    `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
	Data                 []*Release `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ReleaseListData) Reset()         { *m = ReleaseListData{} }
func (m *ReleaseListData) String() string { return proto.CompactTextString(m) }
func (*ReleaseListData) ProtoMessage()    {}
func (*ReleaseListData) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{41}
}

func (m *ReleaseListData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseListData.Unmarshal(m, b)
}
func (m *ReleaseListData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseListData.Marshal(b, m, deterministic)
}
func (m *ReleaseListData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseListData.Merge(m, src)
}
func (m *ReleaseListData) XXX_Size() int {
	return xxx_messageInfo_ReleaseListData.Size(m)
}
func (m *ReleaseListData) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseListData.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseListData proto.InternalMessageInfo

func (m *ReleaseListData) GetPage() uint32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *ReleaseListData) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *ReleaseListData) GetTotal() uint32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *ReleaseListData) GetData() []*Release {
	if m != nil {
		return m.Data
	}
	return nil
}

type Release struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespace            *string  `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	Revision             *uint32  `protobuf:"varint,3,opt,name=revision" json:"revision,omitempty"`
	Status               *string  `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
	Chart                *string  `protobuf:"bytes,5,opt,name=chart" json:"chart,omitempty"`
	AppVersion           *string  `protobuf:"bytes,6,opt,name=appVersion" json:"appVersion,omitempty"`
	UpdateTime           *string  `protobuf:"bytes,7,opt,name=updateTime" json:"updateTime,omitempty"`
	ChartVersion         *string  `protobuf:"bytes,8,opt,name=chartVersion" json:"chartVersion,omitempty"`
	CreateBy             *string  `protobuf:"bytes,9,opt,name=createBy" json:"createBy,omitempty"`
	UpdateBy             *string  `protobuf:"bytes,10,opt,name=updateBy" json:"updateBy,omitempty"`
	Message              *string  `protobuf:"bytes,11,opt,name=message" json:"message,omitempty"`
	Repo                 *string  `protobuf:"bytes,12,opt,name=repo" json:"repo,omitempty"`
	IamNamespaceID       *string  `protobuf:"bytes,13,opt,name=iamNamespaceID" json:"iamNamespaceID,omitempty"`
	ProjectCode          *string  `protobuf:"bytes,14,opt,name=projectCode" json:"projectCode,omitempty"`
	ClusterID            *string  `protobuf:"bytes,15,opt,name=clusterID" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Release) Reset()         { *m = Release{} }
func (m *Release) String() string { return proto.CompactTextString(m) }
func (*Release) ProtoMessage()    {}
func (*Release) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{42}
}

func (m *Release) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Release.Unmarshal(m, b)
}
func (m *Release) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Release.Marshal(b, m, deterministic)
}
func (m *Release) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Release.Merge(m, src)
}
func (m *Release) XXX_Size() int {
	return xxx_messageInfo_Release.Size(m)
}
func (m *Release) XXX_DiscardUnknown() {
	xxx_messageInfo_Release.DiscardUnknown(m)
}

var xxx_messageInfo_Release proto.InternalMessageInfo

func (m *Release) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Release) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *Release) GetRevision() uint32 {
	if m != nil && m.Revision != nil {
		return *m.Revision
	}
	return 0
}

func (m *Release) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

func (m *Release) GetChart() string {
	if m != nil && m.Chart != nil {
		return *m.Chart
	}
	return ""
}

func (m *Release) GetAppVersion() string {
	if m != nil && m.AppVersion != nil {
		return *m.AppVersion
	}
	return ""
}

func (m *Release) GetUpdateTime() string {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return ""
}

func (m *Release) GetChartVersion() string {
	if m != nil && m.ChartVersion != nil {
		return *m.ChartVersion
	}
	return ""
}

func (m *Release) GetCreateBy() string {
	if m != nil && m.CreateBy != nil {
		return *m.CreateBy
	}
	return ""
}

func (m *Release) GetUpdateBy() string {
	if m != nil && m.UpdateBy != nil {
		return *m.UpdateBy
	}
	return ""
}

func (m *Release) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *Release) GetRepo() string {
	if m != nil && m.Repo != nil {
		return *m.Repo
	}
	return ""
}

func (m *Release) GetIamNamespaceID() string {
	if m != nil && m.IamNamespaceID != nil {
		return *m.IamNamespaceID
	}
	return ""
}

func (m *Release) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *Release) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

type ReleaseDetail struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespace            *string  `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	Revision             *uint32  `protobuf:"varint,3,opt,name=revision" json:"revision,omitempty"`
	Status               *string  `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
	Chart                *string  `protobuf:"bytes,5,opt,name=chart" json:"chart,omitempty"`
	AppVersion           *string  `protobuf:"bytes,6,opt,name=appVersion" json:"appVersion,omitempty"`
	UpdateTime           *string  `protobuf:"bytes,7,opt,name=updateTime" json:"updateTime,omitempty"`
	ChartVersion         *string  `protobuf:"bytes,8,opt,name=chartVersion" json:"chartVersion,omitempty"`
	Values               []string `protobuf:"bytes,9,rep,name=values" json:"values,omitempty"`
	Description          *string  `protobuf:"bytes,10,opt,name=description" json:"description,omitempty"`
	Notes                *string  `protobuf:"bytes,11,opt,name=notes" json:"notes,omitempty"`
	Args                 []string `protobuf:"bytes,12,rep,name=args" json:"args,omitempty"`
	CreateBy             *string  `protobuf:"bytes,13,opt,name=createBy" json:"createBy,omitempty"`
	UpdateBy             *string  `protobuf:"bytes,14,opt,name=updateBy" json:"updateBy,omitempty"`
	Message              *string  `protobuf:"bytes,15,opt,name=message" json:"message,omitempty"`
	Repo                 *string  `protobuf:"bytes,16,opt,name=repo" json:"repo,omitempty"`
	ValueFile            *string  `protobuf:"bytes,17,opt,name=valueFile" json:"valueFile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseDetail) Reset()         { *m = ReleaseDetail{} }
func (m *ReleaseDetail) String() string { return proto.CompactTextString(m) }
func (*ReleaseDetail) ProtoMessage()    {}
func (*ReleaseDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{43}
}

func (m *ReleaseDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseDetail.Unmarshal(m, b)
}
func (m *ReleaseDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseDetail.Marshal(b, m, deterministic)
}
func (m *ReleaseDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseDetail.Merge(m, src)
}
func (m *ReleaseDetail) XXX_Size() int {
	return xxx_messageInfo_ReleaseDetail.Size(m)
}
func (m *ReleaseDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseDetail proto.InternalMessageInfo

func (m *ReleaseDetail) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ReleaseDetail) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *ReleaseDetail) GetRevision() uint32 {
	if m != nil && m.Revision != nil {
		return *m.Revision
	}
	return 0
}

func (m *ReleaseDetail) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

func (m *ReleaseDetail) GetChart() string {
	if m != nil && m.Chart != nil {
		return *m.Chart
	}
	return ""
}

func (m *ReleaseDetail) GetAppVersion() string {
	if m != nil && m.AppVersion != nil {
		return *m.AppVersion
	}
	return ""
}

func (m *ReleaseDetail) GetUpdateTime() string {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return ""
}

func (m *ReleaseDetail) GetChartVersion() string {
	if m != nil && m.ChartVersion != nil {
		return *m.ChartVersion
	}
	return ""
}

func (m *ReleaseDetail) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *ReleaseDetail) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *ReleaseDetail) GetNotes() string {
	if m != nil && m.Notes != nil {
		return *m.Notes
	}
	return ""
}

func (m *ReleaseDetail) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *ReleaseDetail) GetCreateBy() string {
	if m != nil && m.CreateBy != nil {
		return *m.CreateBy
	}
	return ""
}

func (m *ReleaseDetail) GetUpdateBy() string {
	if m != nil && m.UpdateBy != nil {
		return *m.UpdateBy
	}
	return ""
}

func (m *ReleaseDetail) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ReleaseDetail) GetRepo() string {
	if m != nil && m.Repo != nil {
		return *m.Repo
	}
	return ""
}

func (m *ReleaseDetail) GetValueFile() string {
	if m != nil && m.ValueFile != nil {
		return *m.ValueFile
	}
	return ""
}

type ListReleaseV1Req struct {
	ProjectCode          *string  `protobuf:"bytes,1,req,name=projectCode" json:"projectCode,omitempty"`
	ClusterID            *string  `protobuf:"bytes,2,req,name=clusterID" json:"clusterID,omitempty"`
	Namespace            *string  `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	Name                 *string  `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Page                 *uint32  `protobuf:"varint,5,opt,name=page" json:"page,omitempty"`
	Size                 *uint32  `protobuf:"varint,6,opt,name=size" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListReleaseV1Req) Reset()         { *m = ListReleaseV1Req{} }
func (m *ListReleaseV1Req) String() string { return proto.CompactTextString(m) }
func (*ListReleaseV1Req) ProtoMessage()    {}
func (*ListReleaseV1Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{44}
}

func (m *ListReleaseV1Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReleaseV1Req.Unmarshal(m, b)
}
func (m *ListReleaseV1Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReleaseV1Req.Marshal(b, m, deterministic)
}
func (m *ListReleaseV1Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReleaseV1Req.Merge(m, src)
}
func (m *ListReleaseV1Req) XXX_Size() int {
	return xxx_messageInfo_ListReleaseV1Req.Size(m)
}
func (m *ListReleaseV1Req) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReleaseV1Req.DiscardUnknown(m)
}

var xxx_messageInfo_ListReleaseV1Req proto.InternalMessageInfo

func (m *ListReleaseV1Req) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *ListReleaseV1Req) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *ListReleaseV1Req) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *ListReleaseV1Req) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ListReleaseV1Req) GetPage() uint32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *ListReleaseV1Req) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

type ListReleaseV1Resp struct {
	Code                 *uint32          `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string          `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool            `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *ReleaseListData `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	WebAnnotations       *WebAnnotations  `protobuf:"bytes,5,opt,name=web_annotations,json=webAnnotations" json:"web_annotations,omitempty"`
	RequestID            *string          `protobuf:"bytes,6,opt,name=requestID" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListReleaseV1Resp) Reset()         { *m = ListReleaseV1Resp{} }
func (m *ListReleaseV1Resp) String() string { return proto.CompactTextString(m) }
func (*ListReleaseV1Resp) ProtoMessage()    {}
func (*ListReleaseV1Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{45}
}

func (m *ListReleaseV1Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReleaseV1Resp.Unmarshal(m, b)
}
func (m *ListReleaseV1Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReleaseV1Resp.Marshal(b, m, deterministic)
}
func (m *ListReleaseV1Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReleaseV1Resp.Merge(m, src)
}
func (m *ListReleaseV1Resp) XXX_Size() int {
	return xxx_messageInfo_ListReleaseV1Resp.Size(m)
}
func (m *ListReleaseV1Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReleaseV1Resp.DiscardUnknown(m)
}

var xxx_messageInfo_ListReleaseV1Resp proto.InternalMessageInfo

func (m *ListReleaseV1Resp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ListReleaseV1Resp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ListReleaseV1Resp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ListReleaseV1Resp) GetData() *ReleaseListData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListReleaseV1Resp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

func (m *ListReleaseV1Resp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

type GetReleaseDetailV1Req struct {
	ProjectCode          *string  `protobuf:"bytes,1,req,name=projectCode" json:"projectCode,omitempty"`
	ClusterID            *string  `protobuf:"bytes,2,req,name=clusterID" json:"clusterID,omitempty"`
	Namespace            *string  `protobuf:"bytes,3,req,name=namespace" json:"namespace,omitempty"`
	Name                 *string  `protobuf:"bytes,4,req,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReleaseDetailV1Req) Reset()         { *m = GetReleaseDetailV1Req{} }
func (m *GetReleaseDetailV1Req) String() string { return proto.CompactTextString(m) }
func (*GetReleaseDetailV1Req) ProtoMessage()    {}
func (*GetReleaseDetailV1Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{46}
}

func (m *GetReleaseDetailV1Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReleaseDetailV1Req.Unmarshal(m, b)
}
func (m *GetReleaseDetailV1Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReleaseDetailV1Req.Marshal(b, m, deterministic)
}
func (m *GetReleaseDetailV1Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReleaseDetailV1Req.Merge(m, src)
}
func (m *GetReleaseDetailV1Req) XXX_Size() int {
	return xxx_messageInfo_GetReleaseDetailV1Req.Size(m)
}
func (m *GetReleaseDetailV1Req) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReleaseDetailV1Req.DiscardUnknown(m)
}

var xxx_messageInfo_GetReleaseDetailV1Req proto.InternalMessageInfo

func (m *GetReleaseDetailV1Req) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *GetReleaseDetailV1Req) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *GetReleaseDetailV1Req) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *GetReleaseDetailV1Req) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type GetReleaseDetailV1Resp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *ReleaseDetail  `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	RequestID            *string         `protobuf:"bytes,5,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,6,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetReleaseDetailV1Resp) Reset()         { *m = GetReleaseDetailV1Resp{} }
func (m *GetReleaseDetailV1Resp) String() string { return proto.CompactTextString(m) }
func (*GetReleaseDetailV1Resp) ProtoMessage()    {}
func (*GetReleaseDetailV1Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{47}
}

func (m *GetReleaseDetailV1Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReleaseDetailV1Resp.Unmarshal(m, b)
}
func (m *GetReleaseDetailV1Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReleaseDetailV1Resp.Marshal(b, m, deterministic)
}
func (m *GetReleaseDetailV1Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReleaseDetailV1Resp.Merge(m, src)
}
func (m *GetReleaseDetailV1Resp) XXX_Size() int {
	return xxx_messageInfo_GetReleaseDetailV1Resp.Size(m)
}
func (m *GetReleaseDetailV1Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReleaseDetailV1Resp.DiscardUnknown(m)
}

var xxx_messageInfo_GetReleaseDetailV1Resp proto.InternalMessageInfo

func (m *GetReleaseDetailV1Resp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *GetReleaseDetailV1Resp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *GetReleaseDetailV1Resp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *GetReleaseDetailV1Resp) GetData() *ReleaseDetail {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetReleaseDetailV1Resp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *GetReleaseDetailV1Resp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type InstallReleaseV1Req struct {
	ProjectCode          *string  `protobuf:"bytes,1,opt,name=projectCode" json:"projectCode,omitempty"`
	ClusterID            *string  `protobuf:"bytes,2,opt,name=clusterID" json:"clusterID,omitempty"`
	Namespace            *string  `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	Name                 *string  `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Repository           *string  `protobuf:"bytes,5,opt,name=repository" json:"repository,omitempty"`
	Chart                *string  `protobuf:"bytes,6,opt,name=chart" json:"chart,omitempty"`
	Version              *string  `protobuf:"bytes,7,opt,name=version" json:"version,omitempty"`
	Values               []string `protobuf:"bytes,8,rep,name=values" json:"values,omitempty"`
	Args                 []string `protobuf:"bytes,9,rep,name=args" json:"args,omitempty"`
	ValueFile            *string  `protobuf:"bytes,10,opt,name=valueFile" json:"valueFile,omitempty"`
	Operator             *string  `protobuf:"bytes,11,opt,name=operator" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstallReleaseV1Req) Reset()         { *m = InstallReleaseV1Req{} }
func (m *InstallReleaseV1Req) String() string { return proto.CompactTextString(m) }
func (*InstallReleaseV1Req) ProtoMessage()    {}
func (*InstallReleaseV1Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{48}
}

func (m *InstallReleaseV1Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstallReleaseV1Req.Unmarshal(m, b)
}
func (m *InstallReleaseV1Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstallReleaseV1Req.Marshal(b, m, deterministic)
}
func (m *InstallReleaseV1Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstallReleaseV1Req.Merge(m, src)
}
func (m *InstallReleaseV1Req) XXX_Size() int {
	return xxx_messageInfo_InstallReleaseV1Req.Size(m)
}
func (m *InstallReleaseV1Req) XXX_DiscardUnknown() {
	xxx_messageInfo_InstallReleaseV1Req.DiscardUnknown(m)
}

var xxx_messageInfo_InstallReleaseV1Req proto.InternalMessageInfo

func (m *InstallReleaseV1Req) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *InstallReleaseV1Req) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *InstallReleaseV1Req) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *InstallReleaseV1Req) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *InstallReleaseV1Req) GetRepository() string {
	if m != nil && m.Repository != nil {
		return *m.Repository
	}
	return ""
}

func (m *InstallReleaseV1Req) GetChart() string {
	if m != nil && m.Chart != nil {
		return *m.Chart
	}
	return ""
}

func (m *InstallReleaseV1Req) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *InstallReleaseV1Req) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *InstallReleaseV1Req) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *InstallReleaseV1Req) GetValueFile() string {
	if m != nil && m.ValueFile != nil {
		return *m.ValueFile
	}
	return ""
}

func (m *InstallReleaseV1Req) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

type InstallReleaseV1Resp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	RequestID            *string         `protobuf:"bytes,4,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,5,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *InstallReleaseV1Resp) Reset()         { *m = InstallReleaseV1Resp{} }
func (m *InstallReleaseV1Resp) String() string { return proto.CompactTextString(m) }
func (*InstallReleaseV1Resp) ProtoMessage()    {}
func (*InstallReleaseV1Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{49}
}

func (m *InstallReleaseV1Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstallReleaseV1Resp.Unmarshal(m, b)
}
func (m *InstallReleaseV1Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstallReleaseV1Resp.Marshal(b, m, deterministic)
}
func (m *InstallReleaseV1Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstallReleaseV1Resp.Merge(m, src)
}
func (m *InstallReleaseV1Resp) XXX_Size() int {
	return xxx_messageInfo_InstallReleaseV1Resp.Size(m)
}
func (m *InstallReleaseV1Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_InstallReleaseV1Resp.DiscardUnknown(m)
}

var xxx_messageInfo_InstallReleaseV1Resp proto.InternalMessageInfo

func (m *InstallReleaseV1Resp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *InstallReleaseV1Resp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *InstallReleaseV1Resp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *InstallReleaseV1Resp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *InstallReleaseV1Resp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type UninstallReleaseV1Req struct {
	ProjectCode          *string  `protobuf:"bytes,1,opt,name=projectCode" json:"projectCode,omitempty"`
	ClusterID            *string  `protobuf:"bytes,2,opt,name=clusterID" json:"clusterID,omitempty"`
	Namespace            *string  `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	Name                 *string  `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UninstallReleaseV1Req) Reset()         { *m = UninstallReleaseV1Req{} }
func (m *UninstallReleaseV1Req) String() string { return proto.CompactTextString(m) }
func (*UninstallReleaseV1Req) ProtoMessage()    {}
func (*UninstallReleaseV1Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{50}
}

func (m *UninstallReleaseV1Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UninstallReleaseV1Req.Unmarshal(m, b)
}
func (m *UninstallReleaseV1Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UninstallReleaseV1Req.Marshal(b, m, deterministic)
}
func (m *UninstallReleaseV1Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UninstallReleaseV1Req.Merge(m, src)
}
func (m *UninstallReleaseV1Req) XXX_Size() int {
	return xxx_messageInfo_UninstallReleaseV1Req.Size(m)
}
func (m *UninstallReleaseV1Req) XXX_DiscardUnknown() {
	xxx_messageInfo_UninstallReleaseV1Req.DiscardUnknown(m)
}

var xxx_messageInfo_UninstallReleaseV1Req proto.InternalMessageInfo

func (m *UninstallReleaseV1Req) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *UninstallReleaseV1Req) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *UninstallReleaseV1Req) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *UninstallReleaseV1Req) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type UninstallReleaseV1Resp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	RequestID            *string         `protobuf:"bytes,4,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,5,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UninstallReleaseV1Resp) Reset()         { *m = UninstallReleaseV1Resp{} }
func (m *UninstallReleaseV1Resp) String() string { return proto.CompactTextString(m) }
func (*UninstallReleaseV1Resp) ProtoMessage()    {}
func (*UninstallReleaseV1Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{51}
}

func (m *UninstallReleaseV1Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UninstallReleaseV1Resp.Unmarshal(m, b)
}
func (m *UninstallReleaseV1Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UninstallReleaseV1Resp.Marshal(b, m, deterministic)
}
func (m *UninstallReleaseV1Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UninstallReleaseV1Resp.Merge(m, src)
}
func (m *UninstallReleaseV1Resp) XXX_Size() int {
	return xxx_messageInfo_UninstallReleaseV1Resp.Size(m)
}
func (m *UninstallReleaseV1Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_UninstallReleaseV1Resp.DiscardUnknown(m)
}

var xxx_messageInfo_UninstallReleaseV1Resp proto.InternalMessageInfo

func (m *UninstallReleaseV1Resp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *UninstallReleaseV1Resp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *UninstallReleaseV1Resp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *UninstallReleaseV1Resp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *UninstallReleaseV1Resp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type UpgradeReleaseV1Req struct {
	ProjectCode          *string  `protobuf:"bytes,1,opt,name=projectCode" json:"projectCode,omitempty"`
	ClusterID            *string  `protobuf:"bytes,2,opt,name=clusterID" json:"clusterID,omitempty"`
	Namespace            *string  `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	Name                 *string  `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Repository           *string  `protobuf:"bytes,5,opt,name=repository" json:"repository,omitempty"`
	Chart                *string  `protobuf:"bytes,6,opt,name=chart" json:"chart,omitempty"`
	Version              *string  `protobuf:"bytes,7,opt,name=version" json:"version,omitempty"`
	Values               []string `protobuf:"bytes,8,rep,name=values" json:"values,omitempty"`
	Args                 []string `protobuf:"bytes,9,rep,name=args" json:"args,omitempty"`
	ValueFile            *string  `protobuf:"bytes,10,opt,name=valueFile" json:"valueFile,omitempty"`
	Operator             *string  `protobuf:"bytes,11,opt,name=operator" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpgradeReleaseV1Req) Reset()         { *m = UpgradeReleaseV1Req{} }
func (m *UpgradeReleaseV1Req) String() string { return proto.CompactTextString(m) }
func (*UpgradeReleaseV1Req) ProtoMessage()    {}
func (*UpgradeReleaseV1Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{52}
}

func (m *UpgradeReleaseV1Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpgradeReleaseV1Req.Unmarshal(m, b)
}
func (m *UpgradeReleaseV1Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpgradeReleaseV1Req.Marshal(b, m, deterministic)
}
func (m *UpgradeReleaseV1Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpgradeReleaseV1Req.Merge(m, src)
}
func (m *UpgradeReleaseV1Req) XXX_Size() int {
	return xxx_messageInfo_UpgradeReleaseV1Req.Size(m)
}
func (m *UpgradeReleaseV1Req) XXX_DiscardUnknown() {
	xxx_messageInfo_UpgradeReleaseV1Req.DiscardUnknown(m)
}

var xxx_messageInfo_UpgradeReleaseV1Req proto.InternalMessageInfo

func (m *UpgradeReleaseV1Req) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *UpgradeReleaseV1Req) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *UpgradeReleaseV1Req) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *UpgradeReleaseV1Req) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *UpgradeReleaseV1Req) GetRepository() string {
	if m != nil && m.Repository != nil {
		return *m.Repository
	}
	return ""
}

func (m *UpgradeReleaseV1Req) GetChart() string {
	if m != nil && m.Chart != nil {
		return *m.Chart
	}
	return ""
}

func (m *UpgradeReleaseV1Req) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *UpgradeReleaseV1Req) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *UpgradeReleaseV1Req) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *UpgradeReleaseV1Req) GetValueFile() string {
	if m != nil && m.ValueFile != nil {
		return *m.ValueFile
	}
	return ""
}

func (m *UpgradeReleaseV1Req) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

type UpgradeReleaseV1Resp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	RequestID            *string         `protobuf:"bytes,4,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,5,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpgradeReleaseV1Resp) Reset()         { *m = UpgradeReleaseV1Resp{} }
func (m *UpgradeReleaseV1Resp) String() string { return proto.CompactTextString(m) }
func (*UpgradeReleaseV1Resp) ProtoMessage()    {}
func (*UpgradeReleaseV1Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{53}
}

func (m *UpgradeReleaseV1Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpgradeReleaseV1Resp.Unmarshal(m, b)
}
func (m *UpgradeReleaseV1Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpgradeReleaseV1Resp.Marshal(b, m, deterministic)
}
func (m *UpgradeReleaseV1Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpgradeReleaseV1Resp.Merge(m, src)
}
func (m *UpgradeReleaseV1Resp) XXX_Size() int {
	return xxx_messageInfo_UpgradeReleaseV1Resp.Size(m)
}
func (m *UpgradeReleaseV1Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpgradeReleaseV1Resp.DiscardUnknown(m)
}

var xxx_messageInfo_UpgradeReleaseV1Resp proto.InternalMessageInfo

func (m *UpgradeReleaseV1Resp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *UpgradeReleaseV1Resp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *UpgradeReleaseV1Resp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *UpgradeReleaseV1Resp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *UpgradeReleaseV1Resp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type RollbackReleaseV1Req struct {
	ProjectCode          *string  `protobuf:"bytes,1,opt,name=projectCode" json:"projectCode,omitempty"`
	ClusterID            *string  `protobuf:"bytes,2,opt,name=clusterID" json:"clusterID,omitempty"`
	Namespace            *string  `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	Name                 *string  `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Revision             *uint32  `protobuf:"varint,5,opt,name=revision" json:"revision,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RollbackReleaseV1Req) Reset()         { *m = RollbackReleaseV1Req{} }
func (m *RollbackReleaseV1Req) String() string { return proto.CompactTextString(m) }
func (*RollbackReleaseV1Req) ProtoMessage()    {}
func (*RollbackReleaseV1Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{54}
}

func (m *RollbackReleaseV1Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollbackReleaseV1Req.Unmarshal(m, b)
}
func (m *RollbackReleaseV1Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollbackReleaseV1Req.Marshal(b, m, deterministic)
}
func (m *RollbackReleaseV1Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollbackReleaseV1Req.Merge(m, src)
}
func (m *RollbackReleaseV1Req) XXX_Size() int {
	return xxx_messageInfo_RollbackReleaseV1Req.Size(m)
}
func (m *RollbackReleaseV1Req) XXX_DiscardUnknown() {
	xxx_messageInfo_RollbackReleaseV1Req.DiscardUnknown(m)
}

var xxx_messageInfo_RollbackReleaseV1Req proto.InternalMessageInfo

func (m *RollbackReleaseV1Req) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *RollbackReleaseV1Req) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *RollbackReleaseV1Req) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *RollbackReleaseV1Req) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *RollbackReleaseV1Req) GetRevision() uint32 {
	if m != nil && m.Revision != nil {
		return *m.Revision
	}
	return 0
}

type RollbackReleaseV1Resp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	RequestID            *string         `protobuf:"bytes,4,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,5,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RollbackReleaseV1Resp) Reset()         { *m = RollbackReleaseV1Resp{} }
func (m *RollbackReleaseV1Resp) String() string { return proto.CompactTextString(m) }
func (*RollbackReleaseV1Resp) ProtoMessage()    {}
func (*RollbackReleaseV1Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{55}
}

func (m *RollbackReleaseV1Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollbackReleaseV1Resp.Unmarshal(m, b)
}
func (m *RollbackReleaseV1Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollbackReleaseV1Resp.Marshal(b, m, deterministic)
}
func (m *RollbackReleaseV1Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollbackReleaseV1Resp.Merge(m, src)
}
func (m *RollbackReleaseV1Resp) XXX_Size() int {
	return xxx_messageInfo_RollbackReleaseV1Resp.Size(m)
}
func (m *RollbackReleaseV1Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_RollbackReleaseV1Resp.DiscardUnknown(m)
}

var xxx_messageInfo_RollbackReleaseV1Resp proto.InternalMessageInfo

func (m *RollbackReleaseV1Resp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *RollbackReleaseV1Resp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *RollbackReleaseV1Resp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *RollbackReleaseV1Resp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *RollbackReleaseV1Resp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type ReleasePreviewReq struct {
	ProjectCode          *string  `protobuf:"bytes,1,opt,name=projectCode" json:"projectCode,omitempty"`
	ClusterID            *string  `protobuf:"bytes,2,opt,name=clusterID" json:"clusterID,omitempty"`
	Namespace            *string  `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	Name                 *string  `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Repository           *string  `protobuf:"bytes,5,opt,name=repository" json:"repository,omitempty"`
	Chart                *string  `protobuf:"bytes,6,opt,name=chart" json:"chart,omitempty"`
	Version              *string  `protobuf:"bytes,7,opt,name=version" json:"version,omitempty"`
	Values               []string `protobuf:"bytes,8,rep,name=values" json:"values,omitempty"`
	Args                 []string `protobuf:"bytes,9,rep,name=args" json:"args,omitempty"`
	Revision             *uint32  `protobuf:"varint,10,opt,name=revision" json:"revision,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleasePreviewReq) Reset()         { *m = ReleasePreviewReq{} }
func (m *ReleasePreviewReq) String() string { return proto.CompactTextString(m) }
func (*ReleasePreviewReq) ProtoMessage()    {}
func (*ReleasePreviewReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{56}
}

func (m *ReleasePreviewReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleasePreviewReq.Unmarshal(m, b)
}
func (m *ReleasePreviewReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleasePreviewReq.Marshal(b, m, deterministic)
}
func (m *ReleasePreviewReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleasePreviewReq.Merge(m, src)
}
func (m *ReleasePreviewReq) XXX_Size() int {
	return xxx_messageInfo_ReleasePreviewReq.Size(m)
}
func (m *ReleasePreviewReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleasePreviewReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReleasePreviewReq proto.InternalMessageInfo

func (m *ReleasePreviewReq) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *ReleasePreviewReq) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *ReleasePreviewReq) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *ReleasePreviewReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ReleasePreviewReq) GetRepository() string {
	if m != nil && m.Repository != nil {
		return *m.Repository
	}
	return ""
}

func (m *ReleasePreviewReq) GetChart() string {
	if m != nil && m.Chart != nil {
		return *m.Chart
	}
	return ""
}

func (m *ReleasePreviewReq) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *ReleasePreviewReq) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *ReleasePreviewReq) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *ReleasePreviewReq) GetRevision() uint32 {
	if m != nil && m.Revision != nil {
		return *m.Revision
	}
	return 0
}

type ReleasePreviewResp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *ReleasePreview `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	RequestID            *string         `protobuf:"bytes,5,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,6,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ReleasePreviewResp) Reset()         { *m = ReleasePreviewResp{} }
func (m *ReleasePreviewResp) String() string { return proto.CompactTextString(m) }
func (*ReleasePreviewResp) ProtoMessage()    {}
func (*ReleasePreviewResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{57}
}

func (m *ReleasePreviewResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleasePreviewResp.Unmarshal(m, b)
}
func (m *ReleasePreviewResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleasePreviewResp.Marshal(b, m, deterministic)
}
func (m *ReleasePreviewResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleasePreviewResp.Merge(m, src)
}
func (m *ReleasePreviewResp) XXX_Size() int {
	return xxx_messageInfo_ReleasePreviewResp.Size(m)
}
func (m *ReleasePreviewResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleasePreviewResp.DiscardUnknown(m)
}

var xxx_messageInfo_ReleasePreviewResp proto.InternalMessageInfo

func (m *ReleasePreviewResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ReleasePreviewResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ReleasePreviewResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ReleasePreviewResp) GetData() *ReleasePreview {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReleasePreviewResp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *ReleasePreviewResp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type ReleasePreview struct {
	NewContents          map[string]*FileContent `protobuf:"bytes,1,rep,name=newContents" json:"newContents,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	OldContents          map[string]*FileContent `protobuf:"bytes,2,rep,name=oldContents" json:"oldContents,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	NewContent           *string                 `protobuf:"bytes,3,opt,name=newContent" json:"newContent,omitempty"`
	OldContent           *string                 `protobuf:"bytes,4,opt,name=oldContent" json:"oldContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ReleasePreview) Reset()         { *m = ReleasePreview{} }
func (m *ReleasePreview) String() string { return proto.CompactTextString(m) }
func (*ReleasePreview) ProtoMessage()    {}
func (*ReleasePreview) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{58}
}

func (m *ReleasePreview) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleasePreview.Unmarshal(m, b)
}
func (m *ReleasePreview) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleasePreview.Marshal(b, m, deterministic)
}
func (m *ReleasePreview) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleasePreview.Merge(m, src)
}
func (m *ReleasePreview) XXX_Size() int {
	return xxx_messageInfo_ReleasePreview.Size(m)
}
func (m *ReleasePreview) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleasePreview.DiscardUnknown(m)
}

var xxx_messageInfo_ReleasePreview proto.InternalMessageInfo

func (m *ReleasePreview) GetNewContents() map[string]*FileContent {
	if m != nil {
		return m.NewContents
	}
	return nil
}

func (m *ReleasePreview) GetOldContents() map[string]*FileContent {
	if m != nil {
		return m.OldContents
	}
	return nil
}

func (m *ReleasePreview) GetNewContent() string {
	if m != nil && m.NewContent != nil {
		return *m.NewContent
	}
	return ""
}

func (m *ReleasePreview) GetOldContent() string {
	if m != nil && m.OldContent != nil {
		return *m.OldContent
	}
	return ""
}

type GetReleaseHistoryReq struct {
	Name                 *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Namespace            *string  `protobuf:"bytes,2,req,name=namespace" json:"namespace,omitempty"`
	ClusterID            *string  `protobuf:"bytes,3,req,name=clusterID" json:"clusterID,omitempty"`
	ProjectCode          *string  `protobuf:"bytes,4,req,name=projectCode" json:"projectCode,omitempty"`
	Filter               *string  `protobuf:"bytes,5,opt,name=filter" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReleaseHistoryReq) Reset()         { *m = GetReleaseHistoryReq{} }
func (m *GetReleaseHistoryReq) String() string { return proto.CompactTextString(m) }
func (*GetReleaseHistoryReq) ProtoMessage()    {}
func (*GetReleaseHistoryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{59}
}

func (m *GetReleaseHistoryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReleaseHistoryReq.Unmarshal(m, b)
}
func (m *GetReleaseHistoryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReleaseHistoryReq.Marshal(b, m, deterministic)
}
func (m *GetReleaseHistoryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReleaseHistoryReq.Merge(m, src)
}
func (m *GetReleaseHistoryReq) XXX_Size() int {
	return xxx_messageInfo_GetReleaseHistoryReq.Size(m)
}
func (m *GetReleaseHistoryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReleaseHistoryReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetReleaseHistoryReq proto.InternalMessageInfo

func (m *GetReleaseHistoryReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *GetReleaseHistoryReq) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *GetReleaseHistoryReq) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *GetReleaseHistoryReq) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *GetReleaseHistoryReq) GetFilter() string {
	if m != nil && m.Filter != nil {
		return *m.Filter
	}
	return ""
}

type GetReleaseHistoryResp struct {
	Code                 *uint32           `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string           `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool             `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 []*ReleaseHistory `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	RequestID            *string           `protobuf:"bytes,5,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations   `protobuf:"bytes,6,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetReleaseHistoryResp) Reset()         { *m = GetReleaseHistoryResp{} }
func (m *GetReleaseHistoryResp) String() string { return proto.CompactTextString(m) }
func (*GetReleaseHistoryResp) ProtoMessage()    {}
func (*GetReleaseHistoryResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{60}
}

func (m *GetReleaseHistoryResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReleaseHistoryResp.Unmarshal(m, b)
}
func (m *GetReleaseHistoryResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReleaseHistoryResp.Marshal(b, m, deterministic)
}
func (m *GetReleaseHistoryResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReleaseHistoryResp.Merge(m, src)
}
func (m *GetReleaseHistoryResp) XXX_Size() int {
	return xxx_messageInfo_GetReleaseHistoryResp.Size(m)
}
func (m *GetReleaseHistoryResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReleaseHistoryResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetReleaseHistoryResp proto.InternalMessageInfo

func (m *GetReleaseHistoryResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *GetReleaseHistoryResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *GetReleaseHistoryResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *GetReleaseHistoryResp) GetData() []*ReleaseHistory {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetReleaseHistoryResp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *GetReleaseHistoryResp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type ReleaseHistory struct {
	Revision             *uint32  `protobuf:"varint,1,opt,name=revision" json:"revision,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Namespace            *string  `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	UpdateTime           *string  `protobuf:"bytes,4,opt,name=updateTime" json:"updateTime,omitempty"`
	Description          *string  `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	Status               *string  `protobuf:"bytes,6,opt,name=status" json:"status,omitempty"`
	Chart                *string  `protobuf:"bytes,7,opt,name=chart" json:"chart,omitempty"`
	ChartVersion         *string  `protobuf:"bytes,8,opt,name=chartVersion" json:"chartVersion,omitempty"`
	AppVersion           *string  `protobuf:"bytes,9,opt,name=appVersion" json:"appVersion,omitempty"`
	Values               *string  `protobuf:"bytes,10,opt,name=values" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseHistory) Reset()         { *m = ReleaseHistory{} }
func (m *ReleaseHistory) String() string { return proto.CompactTextString(m) }
func (*ReleaseHistory) ProtoMessage()    {}
func (*ReleaseHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{61}
}

func (m *ReleaseHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseHistory.Unmarshal(m, b)
}
func (m *ReleaseHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseHistory.Marshal(b, m, deterministic)
}
func (m *ReleaseHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseHistory.Merge(m, src)
}
func (m *ReleaseHistory) XXX_Size() int {
	return xxx_messageInfo_ReleaseHistory.Size(m)
}
func (m *ReleaseHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseHistory.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseHistory proto.InternalMessageInfo

func (m *ReleaseHistory) GetRevision() uint32 {
	if m != nil && m.Revision != nil {
		return *m.Revision
	}
	return 0
}

func (m *ReleaseHistory) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ReleaseHistory) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *ReleaseHistory) GetUpdateTime() string {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return ""
}

func (m *ReleaseHistory) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *ReleaseHistory) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

func (m *ReleaseHistory) GetChart() string {
	if m != nil && m.Chart != nil {
		return *m.Chart
	}
	return ""
}

func (m *ReleaseHistory) GetChartVersion() string {
	if m != nil && m.ChartVersion != nil {
		return *m.ChartVersion
	}
	return ""
}

func (m *ReleaseHistory) GetAppVersion() string {
	if m != nil && m.AppVersion != nil {
		return *m.AppVersion
	}
	return ""
}

func (m *ReleaseHistory) GetValues() string {
	if m != nil && m.Values != nil {
		return *m.Values
	}
	return ""
}

type GetReleaseManifestReq struct {
	Name                 *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Namespace            *string  `protobuf:"bytes,2,req,name=namespace" json:"namespace,omitempty"`
	ClusterID            *string  `protobuf:"bytes,3,req,name=clusterID" json:"clusterID,omitempty"`
	ProjectCode          *string  `protobuf:"bytes,4,req,name=projectCode" json:"projectCode,omitempty"`
	Revision             *uint32  `protobuf:"varint,5,req,name=revision" json:"revision,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReleaseManifestReq) Reset()         { *m = GetReleaseManifestReq{} }
func (m *GetReleaseManifestReq) String() string { return proto.CompactTextString(m) }
func (*GetReleaseManifestReq) ProtoMessage()    {}
func (*GetReleaseManifestReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{62}
}

func (m *GetReleaseManifestReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReleaseManifestReq.Unmarshal(m, b)
}
func (m *GetReleaseManifestReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReleaseManifestReq.Marshal(b, m, deterministic)
}
func (m *GetReleaseManifestReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReleaseManifestReq.Merge(m, src)
}
func (m *GetReleaseManifestReq) XXX_Size() int {
	return xxx_messageInfo_GetReleaseManifestReq.Size(m)
}
func (m *GetReleaseManifestReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReleaseManifestReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetReleaseManifestReq proto.InternalMessageInfo

func (m *GetReleaseManifestReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *GetReleaseManifestReq) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *GetReleaseManifestReq) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *GetReleaseManifestReq) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *GetReleaseManifestReq) GetRevision() uint32 {
	if m != nil && m.Revision != nil {
		return *m.Revision
	}
	return 0
}

type GetReleaseManifestResp struct {
	Code                 *uint32                 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string                 `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool                   `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 map[string]*FileContent `protobuf:"bytes,4,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RequestID            *string                 `protobuf:"bytes,5,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations         `protobuf:"bytes,6,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetReleaseManifestResp) Reset()         { *m = GetReleaseManifestResp{} }
func (m *GetReleaseManifestResp) String() string { return proto.CompactTextString(m) }
func (*GetReleaseManifestResp) ProtoMessage()    {}
func (*GetReleaseManifestResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{63}
}

func (m *GetReleaseManifestResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReleaseManifestResp.Unmarshal(m, b)
}
func (m *GetReleaseManifestResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReleaseManifestResp.Marshal(b, m, deterministic)
}
func (m *GetReleaseManifestResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReleaseManifestResp.Merge(m, src)
}
func (m *GetReleaseManifestResp) XXX_Size() int {
	return xxx_messageInfo_GetReleaseManifestResp.Size(m)
}
func (m *GetReleaseManifestResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReleaseManifestResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetReleaseManifestResp proto.InternalMessageInfo

func (m *GetReleaseManifestResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *GetReleaseManifestResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *GetReleaseManifestResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *GetReleaseManifestResp) GetData() map[string]*FileContent {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetReleaseManifestResp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *GetReleaseManifestResp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type GetReleaseStatusReq struct {
	Name                 *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Namespace            *string  `protobuf:"bytes,2,req,name=namespace" json:"namespace,omitempty"`
	ClusterID            *string  `protobuf:"bytes,3,req,name=clusterID" json:"clusterID,omitempty"`
	ProjectCode          *string  `protobuf:"bytes,4,req,name=projectCode" json:"projectCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReleaseStatusReq) Reset()         { *m = GetReleaseStatusReq{} }
func (m *GetReleaseStatusReq) String() string { return proto.CompactTextString(m) }
func (*GetReleaseStatusReq) ProtoMessage()    {}
func (*GetReleaseStatusReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{64}
}

func (m *GetReleaseStatusReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReleaseStatusReq.Unmarshal(m, b)
}
func (m *GetReleaseStatusReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReleaseStatusReq.Marshal(b, m, deterministic)
}
func (m *GetReleaseStatusReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReleaseStatusReq.Merge(m, src)
}
func (m *GetReleaseStatusReq) XXX_Size() int {
	return xxx_messageInfo_GetReleaseStatusReq.Size(m)
}
func (m *GetReleaseStatusReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReleaseStatusReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetReleaseStatusReq proto.InternalMessageInfo

func (m *GetReleaseStatusReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *GetReleaseStatusReq) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *GetReleaseStatusReq) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *GetReleaseStatusReq) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

type GetReleasePodsReq struct {
	Name                 *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Namespace            *string  `protobuf:"bytes,2,req,name=namespace" json:"namespace,omitempty"`
	ClusterID            *string  `protobuf:"bytes,3,req,name=clusterID" json:"clusterID,omitempty"`
	ProjectCode          *string  `protobuf:"bytes,4,req,name=projectCode" json:"projectCode,omitempty"`
	After                *uint32  `protobuf:"varint,5,opt,name=after" json:"after,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReleasePodsReq) Reset()         { *m = GetReleasePodsReq{} }
func (m *GetReleasePodsReq) String() string { return proto.CompactTextString(m) }
func (*GetReleasePodsReq) ProtoMessage()    {}
func (*GetReleasePodsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{65}
}

func (m *GetReleasePodsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReleasePodsReq.Unmarshal(m, b)
}
func (m *GetReleasePodsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReleasePodsReq.Marshal(b, m, deterministic)
}
func (m *GetReleasePodsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReleasePodsReq.Merge(m, src)
}
func (m *GetReleasePodsReq) XXX_Size() int {
	return xxx_messageInfo_GetReleasePodsReq.Size(m)
}
func (m *GetReleasePodsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReleasePodsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetReleasePodsReq proto.InternalMessageInfo

func (m *GetReleasePodsReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *GetReleasePodsReq) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *GetReleasePodsReq) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *GetReleasePodsReq) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *GetReleasePodsReq) GetAfter() uint32 {
	if m != nil && m.After != nil {
		return *m.After
	}
	return 0
}

type ListAddonsReq struct {
	ProjectCode          *string  `protobuf:"bytes,1,req,name=projectCode" json:"projectCode,omitempty"`
	ClusterID            *string  `protobuf:"bytes,2,req,name=clusterID" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAddonsReq) Reset()         { *m = ListAddonsReq{} }
func (m *ListAddonsReq) String() string { return proto.CompactTextString(m) }
func (*ListAddonsReq) ProtoMessage()    {}
func (*ListAddonsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{66}
}

func (m *ListAddonsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAddonsReq.Unmarshal(m, b)
}
func (m *ListAddonsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAddonsReq.Marshal(b, m, deterministic)
}
func (m *ListAddonsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAddonsReq.Merge(m, src)
}
func (m *ListAddonsReq) XXX_Size() int {
	return xxx_messageInfo_ListAddonsReq.Size(m)
}
func (m *ListAddonsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAddonsReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListAddonsReq proto.InternalMessageInfo

func (m *ListAddonsReq) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *ListAddonsReq) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

type ListAddonsResp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 []*Addons       `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	RequestID            *string         `protobuf:"bytes,5,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,6,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListAddonsResp) Reset()         { *m = ListAddonsResp{} }
func (m *ListAddonsResp) String() string { return proto.CompactTextString(m) }
func (*ListAddonsResp) ProtoMessage()    {}
func (*ListAddonsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{67}
}

func (m *ListAddonsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAddonsResp.Unmarshal(m, b)
}
func (m *ListAddonsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAddonsResp.Marshal(b, m, deterministic)
}
func (m *ListAddonsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAddonsResp.Merge(m, src)
}
func (m *ListAddonsResp) XXX_Size() int {
	return xxx_messageInfo_ListAddonsResp.Size(m)
}
func (m *ListAddonsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAddonsResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListAddonsResp proto.InternalMessageInfo

func (m *ListAddonsResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ListAddonsResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ListAddonsResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ListAddonsResp) GetData() []*Addons {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListAddonsResp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *ListAddonsResp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type Addons struct {
	Name                 *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	ChartName            *string  `protobuf:"bytes,2,req,name=chartName" json:"chartName,omitempty"`
	Description          *string  `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Logo                 *string  `protobuf:"bytes,4,opt,name=logo" json:"logo,omitempty"`
	DocsLink             *string  `protobuf:"bytes,5,opt,name=docsLink" json:"docsLink,omitempty"`
	Version              *string  `protobuf:"bytes,6,req,name=version" json:"version,omitempty"`
	CurrentVersion       *string  `protobuf:"bytes,7,opt,name=currentVersion" json:"currentVersion,omitempty"`
	Namespace            *string  `protobuf:"bytes,8,req,name=namespace" json:"namespace,omitempty"`
	DefaultValues        *string  `protobuf:"bytes,9,opt,name=defaultValues" json:"defaultValues,omitempty"`
	CurrentValues        *string  `protobuf:"bytes,10,opt,name=currentValues" json:"currentValues,omitempty"`
	Status               *string  `protobuf:"bytes,11,opt,name=status" json:"status,omitempty"`
	Message              *string  `protobuf:"bytes,12,opt,name=message" json:"message,omitempty"`
	SupportedActions     []string `protobuf:"bytes,13,rep,name=supportedActions" json:"supportedActions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Addons) Reset()         { *m = Addons{} }
func (m *Addons) String() string { return proto.CompactTextString(m) }
func (*Addons) ProtoMessage()    {}
func (*Addons) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{68}
}

func (m *Addons) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Addons.Unmarshal(m, b)
}
func (m *Addons) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Addons.Marshal(b, m, deterministic)
}
func (m *Addons) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Addons.Merge(m, src)
}
func (m *Addons) XXX_Size() int {
	return xxx_messageInfo_Addons.Size(m)
}
func (m *Addons) XXX_DiscardUnknown() {
	xxx_messageInfo_Addons.DiscardUnknown(m)
}

var xxx_messageInfo_Addons proto.InternalMessageInfo

func (m *Addons) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Addons) GetChartName() string {
	if m != nil && m.ChartName != nil {
		return *m.ChartName
	}
	return ""
}

func (m *Addons) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Addons) GetLogo() string {
	if m != nil && m.Logo != nil {
		return *m.Logo
	}
	return ""
}

func (m *Addons) GetDocsLink() string {
	if m != nil && m.DocsLink != nil {
		return *m.DocsLink
	}
	return ""
}

func (m *Addons) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *Addons) GetCurrentVersion() string {
	if m != nil && m.CurrentVersion != nil {
		return *m.CurrentVersion
	}
	return ""
}

func (m *Addons) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *Addons) GetDefaultValues() string {
	if m != nil && m.DefaultValues != nil {
		return *m.DefaultValues
	}
	return ""
}

func (m *Addons) GetCurrentValues() string {
	if m != nil && m.CurrentValues != nil {
		return *m.CurrentValues
	}
	return ""
}

func (m *Addons) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

func (m *Addons) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *Addons) GetSupportedActions() []string {
	if m != nil {
		return m.SupportedActions
	}
	return nil
}

type GetAddonsDetailReq struct {
	ProjectCode          *string  `protobuf:"bytes,1,req,name=projectCode" json:"projectCode,omitempty"`
	ClusterID            *string  `protobuf:"bytes,2,req,name=clusterID" json:"clusterID,omitempty"`
	Name                 *string  `protobuf:"bytes,3,req,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAddonsDetailReq) Reset()         { *m = GetAddonsDetailReq{} }
func (m *GetAddonsDetailReq) String() string { return proto.CompactTextString(m) }
func (*GetAddonsDetailReq) ProtoMessage()    {}
func (*GetAddonsDetailReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{69}
}

func (m *GetAddonsDetailReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAddonsDetailReq.Unmarshal(m, b)
}
func (m *GetAddonsDetailReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAddonsDetailReq.Marshal(b, m, deterministic)
}
func (m *GetAddonsDetailReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAddonsDetailReq.Merge(m, src)
}
func (m *GetAddonsDetailReq) XXX_Size() int {
	return xxx_messageInfo_GetAddonsDetailReq.Size(m)
}
func (m *GetAddonsDetailReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAddonsDetailReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetAddonsDetailReq proto.InternalMessageInfo

func (m *GetAddonsDetailReq) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *GetAddonsDetailReq) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *GetAddonsDetailReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type GetAddonsDetailResp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *Addons         `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	RequestID            *string         `protobuf:"bytes,5,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,6,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetAddonsDetailResp) Reset()         { *m = GetAddonsDetailResp{} }
func (m *GetAddonsDetailResp) String() string { return proto.CompactTextString(m) }
func (*GetAddonsDetailResp) ProtoMessage()    {}
func (*GetAddonsDetailResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{70}
}

func (m *GetAddonsDetailResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAddonsDetailResp.Unmarshal(m, b)
}
func (m *GetAddonsDetailResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAddonsDetailResp.Marshal(b, m, deterministic)
}
func (m *GetAddonsDetailResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAddonsDetailResp.Merge(m, src)
}
func (m *GetAddonsDetailResp) XXX_Size() int {
	return xxx_messageInfo_GetAddonsDetailResp.Size(m)
}
func (m *GetAddonsDetailResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAddonsDetailResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetAddonsDetailResp proto.InternalMessageInfo

func (m *GetAddonsDetailResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *GetAddonsDetailResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *GetAddonsDetailResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *GetAddonsDetailResp) GetData() *Addons {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetAddonsDetailResp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *GetAddonsDetailResp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type InstallAddonsReq struct {
	ProjectCode          *string  `protobuf:"bytes,1,opt,name=projectCode" json:"projectCode,omitempty"`
	ClusterID            *string  `protobuf:"bytes,2,opt,name=clusterID" json:"clusterID,omitempty"`
	Name                 *string  `protobuf:"bytes,3,req,name=name" json:"name,omitempty"`
	Version              *string  `protobuf:"bytes,4,req,name=version" json:"version,omitempty"`
	Values               *string  `protobuf:"bytes,5,opt,name=values" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstallAddonsReq) Reset()         { *m = InstallAddonsReq{} }
func (m *InstallAddonsReq) String() string { return proto.CompactTextString(m) }
func (*InstallAddonsReq) ProtoMessage()    {}
func (*InstallAddonsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{71}
}

func (m *InstallAddonsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstallAddonsReq.Unmarshal(m, b)
}
func (m *InstallAddonsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstallAddonsReq.Marshal(b, m, deterministic)
}
func (m *InstallAddonsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstallAddonsReq.Merge(m, src)
}
func (m *InstallAddonsReq) XXX_Size() int {
	return xxx_messageInfo_InstallAddonsReq.Size(m)
}
func (m *InstallAddonsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InstallAddonsReq.DiscardUnknown(m)
}

var xxx_messageInfo_InstallAddonsReq proto.InternalMessageInfo

func (m *InstallAddonsReq) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *InstallAddonsReq) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *InstallAddonsReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *InstallAddonsReq) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *InstallAddonsReq) GetValues() string {
	if m != nil && m.Values != nil {
		return *m.Values
	}
	return ""
}

type InstallAddonsResp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	RequestID            *string         `protobuf:"bytes,4,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,5,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *InstallAddonsResp) Reset()         { *m = InstallAddonsResp{} }
func (m *InstallAddonsResp) String() string { return proto.CompactTextString(m) }
func (*InstallAddonsResp) ProtoMessage()    {}
func (*InstallAddonsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{72}
}

func (m *InstallAddonsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstallAddonsResp.Unmarshal(m, b)
}
func (m *InstallAddonsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstallAddonsResp.Marshal(b, m, deterministic)
}
func (m *InstallAddonsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstallAddonsResp.Merge(m, src)
}
func (m *InstallAddonsResp) XXX_Size() int {
	return xxx_messageInfo_InstallAddonsResp.Size(m)
}
func (m *InstallAddonsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_InstallAddonsResp.DiscardUnknown(m)
}

var xxx_messageInfo_InstallAddonsResp proto.InternalMessageInfo

func (m *InstallAddonsResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *InstallAddonsResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *InstallAddonsResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *InstallAddonsResp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *InstallAddonsResp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type UpgradeAddonsReq struct {
	ProjectCode          *string  `protobuf:"bytes,1,opt,name=projectCode" json:"projectCode,omitempty"`
	ClusterID            *string  `protobuf:"bytes,2,opt,name=clusterID" json:"clusterID,omitempty"`
	Name                 *string  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Version              *string  `protobuf:"bytes,4,opt,name=version" json:"version,omitempty"`
	Values               *string  `protobuf:"bytes,5,opt,name=values" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpgradeAddonsReq) Reset()         { *m = UpgradeAddonsReq{} }
func (m *UpgradeAddonsReq) String() string { return proto.CompactTextString(m) }
func (*UpgradeAddonsReq) ProtoMessage()    {}
func (*UpgradeAddonsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{73}
}

func (m *UpgradeAddonsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpgradeAddonsReq.Unmarshal(m, b)
}
func (m *UpgradeAddonsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpgradeAddonsReq.Marshal(b, m, deterministic)
}
func (m *UpgradeAddonsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpgradeAddonsReq.Merge(m, src)
}
func (m *UpgradeAddonsReq) XXX_Size() int {
	return xxx_messageInfo_UpgradeAddonsReq.Size(m)
}
func (m *UpgradeAddonsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpgradeAddonsReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpgradeAddonsReq proto.InternalMessageInfo

func (m *UpgradeAddonsReq) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *UpgradeAddonsReq) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *UpgradeAddonsReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *UpgradeAddonsReq) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *UpgradeAddonsReq) GetValues() string {
	if m != nil && m.Values != nil {
		return *m.Values
	}
	return ""
}

type UpgradeAddonsResp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	RequestID            *string         `protobuf:"bytes,4,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,5,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpgradeAddonsResp) Reset()         { *m = UpgradeAddonsResp{} }
func (m *UpgradeAddonsResp) String() string { return proto.CompactTextString(m) }
func (*UpgradeAddonsResp) ProtoMessage()    {}
func (*UpgradeAddonsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{74}
}

func (m *UpgradeAddonsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpgradeAddonsResp.Unmarshal(m, b)
}
func (m *UpgradeAddonsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpgradeAddonsResp.Marshal(b, m, deterministic)
}
func (m *UpgradeAddonsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpgradeAddonsResp.Merge(m, src)
}
func (m *UpgradeAddonsResp) XXX_Size() int {
	return xxx_messageInfo_UpgradeAddonsResp.Size(m)
}
func (m *UpgradeAddonsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpgradeAddonsResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpgradeAddonsResp proto.InternalMessageInfo

func (m *UpgradeAddonsResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *UpgradeAddonsResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *UpgradeAddonsResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *UpgradeAddonsResp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *UpgradeAddonsResp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type StopAddonsReq struct {
	ProjectCode          *string  `protobuf:"bytes,1,opt,name=projectCode" json:"projectCode,omitempty"`
	ClusterID            *string  `protobuf:"bytes,2,opt,name=clusterID" json:"clusterID,omitempty"`
	Name                 *string  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopAddonsReq) Reset()         { *m = StopAddonsReq{} }
func (m *StopAddonsReq) String() string { return proto.CompactTextString(m) }
func (*StopAddonsReq) ProtoMessage()    {}
func (*StopAddonsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{75}
}

func (m *StopAddonsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopAddonsReq.Unmarshal(m, b)
}
func (m *StopAddonsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopAddonsReq.Marshal(b, m, deterministic)
}
func (m *StopAddonsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopAddonsReq.Merge(m, src)
}
func (m *StopAddonsReq) XXX_Size() int {
	return xxx_messageInfo_StopAddonsReq.Size(m)
}
func (m *StopAddonsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StopAddonsReq.DiscardUnknown(m)
}

var xxx_messageInfo_StopAddonsReq proto.InternalMessageInfo

func (m *StopAddonsReq) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *StopAddonsReq) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *StopAddonsReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type StopAddonsResp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	RequestID            *string         `protobuf:"bytes,4,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,5,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StopAddonsResp) Reset()         { *m = StopAddonsResp{} }
func (m *StopAddonsResp) String() string { return proto.CompactTextString(m) }
func (*StopAddonsResp) ProtoMessage()    {}
func (*StopAddonsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{76}
}

func (m *StopAddonsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopAddonsResp.Unmarshal(m, b)
}
func (m *StopAddonsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopAddonsResp.Marshal(b, m, deterministic)
}
func (m *StopAddonsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopAddonsResp.Merge(m, src)
}
func (m *StopAddonsResp) XXX_Size() int {
	return xxx_messageInfo_StopAddonsResp.Size(m)
}
func (m *StopAddonsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_StopAddonsResp.DiscardUnknown(m)
}

var xxx_messageInfo_StopAddonsResp proto.InternalMessageInfo

func (m *StopAddonsResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *StopAddonsResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *StopAddonsResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *StopAddonsResp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *StopAddonsResp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type UninstallAddonsReq struct {
	ProjectCode          *string  `protobuf:"bytes,1,opt,name=projectCode" json:"projectCode,omitempty"`
	ClusterID            *string  `protobuf:"bytes,2,opt,name=clusterID" json:"clusterID,omitempty"`
	Name                 *string  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UninstallAddonsReq) Reset()         { *m = UninstallAddonsReq{} }
func (m *UninstallAddonsReq) String() string { return proto.CompactTextString(m) }
func (*UninstallAddonsReq) ProtoMessage()    {}
func (*UninstallAddonsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{77}
}

func (m *UninstallAddonsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UninstallAddonsReq.Unmarshal(m, b)
}
func (m *UninstallAddonsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UninstallAddonsReq.Marshal(b, m, deterministic)
}
func (m *UninstallAddonsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UninstallAddonsReq.Merge(m, src)
}
func (m *UninstallAddonsReq) XXX_Size() int {
	return xxx_messageInfo_UninstallAddonsReq.Size(m)
}
func (m *UninstallAddonsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UninstallAddonsReq.DiscardUnknown(m)
}

var xxx_messageInfo_UninstallAddonsReq proto.InternalMessageInfo

func (m *UninstallAddonsReq) GetProjectCode() string {
	if m != nil && m.ProjectCode != nil {
		return *m.ProjectCode
	}
	return ""
}

func (m *UninstallAddonsReq) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *UninstallAddonsReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type UninstallAddonsResp struct {
	Code                 *uint32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool           `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	RequestID            *string         `protobuf:"bytes,4,opt,name=requestID" json:"requestID,omitempty"`
	WebAnnotations       *WebAnnotations `protobuf:"bytes,5,opt,name=web_annotations" json:"web_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UninstallAddonsResp) Reset()         { *m = UninstallAddonsResp{} }
func (m *UninstallAddonsResp) String() string { return proto.CompactTextString(m) }
func (*UninstallAddonsResp) ProtoMessage()    {}
func (*UninstallAddonsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{78}
}

func (m *UninstallAddonsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UninstallAddonsResp.Unmarshal(m, b)
}
func (m *UninstallAddonsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UninstallAddonsResp.Marshal(b, m, deterministic)
}
func (m *UninstallAddonsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UninstallAddonsResp.Merge(m, src)
}
func (m *UninstallAddonsResp) XXX_Size() int {
	return xxx_messageInfo_UninstallAddonsResp.Size(m)
}
func (m *UninstallAddonsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UninstallAddonsResp.DiscardUnknown(m)
}

var xxx_messageInfo_UninstallAddonsResp proto.InternalMessageInfo

func (m *UninstallAddonsResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *UninstallAddonsResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *UninstallAddonsResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *UninstallAddonsResp) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *UninstallAddonsResp) GetWebAnnotations() *WebAnnotations {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

func init() {
	proto.RegisterType((*CommonResp)(nil), "helmmanager.CommonResp")
	proto.RegisterType((*CommonListResp)(nil), "helmmanager.CommonListResp")
	proto.RegisterType((*WebAnnotations)(nil), "helmmanager.WebAnnotations")
	proto.RegisterType((*AvailableReq)(nil), "helmmanager.AvailableReq")
	proto.RegisterType((*AvailableResp)(nil), "helmmanager.AvailableResp")
	proto.RegisterType((*CreateRepositoryReq)(nil), "helmmanager.CreateRepositoryReq")
	proto.RegisterType((*CreateRepositoryResp)(nil), "helmmanager.CreateRepositoryResp")
	proto.RegisterType((*UpdateRepositoryReq)(nil), "helmmanager.UpdateRepositoryReq")
	proto.RegisterType((*UpdateRepositoryResp)(nil), "helmmanager.UpdateRepositoryResp")
	proto.RegisterType((*GetRepositoryReq)(nil), "helmmanager.GetRepositoryReq")
	proto.RegisterType((*GetRepositoryResp)(nil), "helmmanager.GetRepositoryResp")
	proto.RegisterType((*ListRepositoryReq)(nil), "helmmanager.ListRepositoryReq")
	proto.RegisterType((*ListRepositoryResp)(nil), "helmmanager.ListRepositoryResp")
	proto.RegisterType((*DeleteRepositoryReq)(nil), "helmmanager.DeleteRepositoryReq")
	proto.RegisterType((*DeleteRepositoryResp)(nil), "helmmanager.DeleteRepositoryResp")
	proto.RegisterType((*Repository)(nil), "helmmanager.Repository")
	proto.RegisterType((*ChartListData)(nil), "helmmanager.ChartListData")
	proto.RegisterType((*Chart)(nil), "helmmanager.Chart")
	proto.RegisterType((*ChartVersionListData)(nil), "helmmanager.ChartVersionListData")
	proto.RegisterType((*ChartVersion)(nil), "helmmanager.ChartVersion")
	proto.RegisterType((*ChartDetail)(nil), "helmmanager.ChartDetail")
	proto.RegisterMapType((map[string]*FileContent)(nil), "helmmanager.ChartDetail.ContentsEntry")
	proto.RegisterType((*FileContent)(nil), "helmmanager.FileContent")
	proto.RegisterType((*ListChartV1Req)(nil), "helmmanager.ListChartV1Req")
	proto.RegisterType((*ListChartV1Resp)(nil), "helmmanager.ListChartV1Resp")
	proto.RegisterType((*GetChartDetailV1Req)(nil), "helmmanager.GetChartDetailV1Req")
	proto.RegisterType((*GetChartDetailV1Resp)(nil), "helmmanager.GetChartDetailV1Resp")
	proto.RegisterType((*ListChartVersionV1Req)(nil), "helmmanager.ListChartVersionV1Req")
	proto.RegisterType((*ListChartVersionV1Resp)(nil), "helmmanager.ListChartVersionV1Resp")
	proto.RegisterType((*GetVersionDetailV1Req)(nil), "helmmanager.GetVersionDetailV1Req")
	proto.RegisterType((*GetVersionDetailV1Resp)(nil), "helmmanager.GetVersionDetailV1Resp")
	proto.RegisterType((*DeleteChartReq)(nil), "helmmanager.DeleteChartReq")
	proto.RegisterType((*DeleteChartResp)(nil), "helmmanager.DeleteChartResp")
	proto.RegisterType((*DeleteChartVersionReq)(nil), "helmmanager.DeleteChartVersionReq")
	proto.RegisterType((*DeleteChartVersionResp)(nil), "helmmanager.DeleteChartVersionResp")
	proto.RegisterType((*DownloadChartReq)(nil), "helmmanager.DownloadChartReq")
	proto.RegisterType((*UploadChartReq)(nil), "helmmanager.UploadChartReq")
	proto.RegisterType((*UploadChartResp)(nil), "helmmanager.UploadChartResp")
	proto.RegisterType((*GetChartReleaseReq)(nil), "helmmanager.GetChartReleaseReq")
	proto.RegisterType((*GetChartReleaseResp)(nil), "helmmanager.GetChartReleaseResp")
	proto.RegisterType((*ImportClusterReleaseReq)(nil), "helmmanager.ImportClusterReleaseReq")
	proto.RegisterType((*ImportClusterReleaseResp)(nil), "helmmanager.ImportClusterReleaseResp")
	proto.RegisterType((*ReleaseListData)(nil), "helmmanager.ReleaseListData")
	proto.RegisterType((*Release)(nil), "helmmanager.Release")
	proto.RegisterType((*ReleaseDetail)(nil), "helmmanager.ReleaseDetail")
	proto.RegisterType((*ListReleaseV1Req)(nil), "helmmanager.ListReleaseV1Req")
	proto.RegisterType((*ListReleaseV1Resp)(nil), "helmmanager.ListReleaseV1Resp")
	proto.RegisterType((*GetReleaseDetailV1Req)(nil), "helmmanager.GetReleaseDetailV1Req")
	proto.RegisterType((*GetReleaseDetailV1Resp)(nil), "helmmanager.GetReleaseDetailV1Resp")
	proto.RegisterType((*InstallReleaseV1Req)(nil), "helmmanager.InstallReleaseV1Req")
	proto.RegisterType((*InstallReleaseV1Resp)(nil), "helmmanager.InstallReleaseV1Resp")
	proto.RegisterType((*UninstallReleaseV1Req)(nil), "helmmanager.UninstallReleaseV1Req")
	proto.RegisterType((*UninstallReleaseV1Resp)(nil), "helmmanager.UninstallReleaseV1Resp")
	proto.RegisterType((*UpgradeReleaseV1Req)(nil), "helmmanager.UpgradeReleaseV1Req")
	proto.RegisterType((*UpgradeReleaseV1Resp)(nil), "helmmanager.UpgradeReleaseV1Resp")
	proto.RegisterType((*RollbackReleaseV1Req)(nil), "helmmanager.RollbackReleaseV1Req")
	proto.RegisterType((*RollbackReleaseV1Resp)(nil), "helmmanager.RollbackReleaseV1Resp")
	proto.RegisterType((*ReleasePreviewReq)(nil), "helmmanager.ReleasePreviewReq")
	proto.RegisterType((*ReleasePreviewResp)(nil), "helmmanager.ReleasePreviewResp")
	proto.RegisterType((*ReleasePreview)(nil), "helmmanager.ReleasePreview")
	proto.RegisterMapType((map[string]*FileContent)(nil), "helmmanager.ReleasePreview.NewContentsEntry")
	proto.RegisterMapType((map[string]*FileContent)(nil), "helmmanager.ReleasePreview.OldContentsEntry")
	proto.RegisterType((*GetReleaseHistoryReq)(nil), "helmmanager.GetReleaseHistoryReq")
	proto.RegisterType((*GetReleaseHistoryResp)(nil), "helmmanager.GetReleaseHistoryResp")
	proto.RegisterType((*ReleaseHistory)(nil), "helmmanager.ReleaseHistory")
	proto.RegisterType((*GetReleaseManifestReq)(nil), "helmmanager.GetReleaseManifestReq")
	proto.RegisterType((*GetReleaseManifestResp)(nil), "helmmanager.GetReleaseManifestResp")
	proto.RegisterMapType((map[string]*FileContent)(nil), "helmmanager.GetReleaseManifestResp.DataEntry")
	proto.RegisterType((*GetReleaseStatusReq)(nil), "helmmanager.GetReleaseStatusReq")
	proto.RegisterType((*GetReleasePodsReq)(nil), "helmmanager.GetReleasePodsReq")
	proto.RegisterType((*ListAddonsReq)(nil), "helmmanager.ListAddonsReq")
	proto.RegisterType((*ListAddonsResp)(nil), "helmmanager.ListAddonsResp")
	proto.RegisterType((*Addons)(nil), "helmmanager.Addons")
	proto.RegisterType((*GetAddonsDetailReq)(nil), "helmmanager.GetAddonsDetailReq")
	proto.RegisterType((*GetAddonsDetailResp)(nil), "helmmanager.GetAddonsDetailResp")
	proto.RegisterType((*InstallAddonsReq)(nil), "helmmanager.InstallAddonsReq")
	proto.RegisterType((*InstallAddonsResp)(nil), "helmmanager.InstallAddonsResp")
	proto.RegisterType((*UpgradeAddonsReq)(nil), "helmmanager.UpgradeAddonsReq")
	proto.RegisterType((*UpgradeAddonsResp)(nil), "helmmanager.UpgradeAddonsResp")
	proto.RegisterType((*StopAddonsReq)(nil), "helmmanager.StopAddonsReq")
	proto.RegisterType((*StopAddonsResp)(nil), "helmmanager.StopAddonsResp")
	proto.RegisterType((*UninstallAddonsReq)(nil), "helmmanager.UninstallAddonsReq")
	proto.RegisterType((*UninstallAddonsResp)(nil), "helmmanager.UninstallAddonsResp")
}

func init() { proto.RegisterFile("bcs-helm-manager.proto", fileDescriptor_29783c92bc89288d) }

var fileDescriptor_29783c92bc89288d = []byte{
	// 8028 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x7d, 0x7b, 0x70, 0x14, 0xc7,
	0xf9, 0xe0, 0xcd, 0xae, 0x24, 0xa4, 0xd6, 0x93, 0x46, 0x02, 0x79, 0x79, 0x78, 0x19, 0x1b, 0x1b,
	0x06, 0x3d, 0x60, 0x90, 0x1f, 0x88, 0xd8, 0x66, 0x24, 0x11, 0xe0, 0x07, 0xc6, 0xf6, 0x3a, 0x7e,
	0x14, 0x49, 0xce, 0x59, 0xa4, 0x41, 0xac, 0x59, 0x69, 0xd7, 0xbb, 0x2b, 0x38, 0xe2, 0x72, 0x1d,
	0xd8, 0x08, 0x04, 0x96, 0x10, 0x19, 0xb0, 0x79, 0x48, 0x26, 0x88, 0x87, 0x8d, 0x5f, 0x12, 0x10,
	0x87, 0x87, 0x24, 0xa0, 0xae, 0xae, 0xea, 0x92, 0x54, 0xa5, 0x2e, 0x55, 0x97, 0xca, 0xdd, 0xa5,
	0x2a, 0xa9, 0x5c, 0xe5, 0x34, 0xb3, 0x52, 0xee, 0x41, 0xaa, 0x2e, 0xa9, 0x54, 0xe5, 0xfe, 0xf9,
	0xd5, 0x74, 0xf7, 0xcc, 0x74, 0xcf, 0xcc, 0xea, 0xc5, 0x42, 0x49, 0x58, 0xff, 0x80, 0xf6, 0xeb,
	0xc7, 0xf4, 0xf7, 0xfe, 0xba, 0xfb, 0xeb, 0x6e, 0x30, 0x77, 0x5b, 0x7d, 0xbc, 0x7c, 0x87, 0x1c,
	0x6e, 0x2a, 0x6f, 0x0a, 0x36, 0x07, 0x1b, 0xe5, 0x58, 0x45, 0x34, 0x16, 0x49, 0x44, 0x60, 0xae,
	0x0e, 0x23, 0x20, 0xdf, 0x23, 0x8d, 0x91, 0x48, 0x63, 0x58, 0xae, 0x0c, 0x46, 0x43, 0x95, 0x3b,
	0x12, 0x89, 0xe8, 0xb6, 0x48, 0xc3, 0x1e, 0x5c, 0xcf, 0xb7, 0x80, 0x2a, 0x0a, 0x36, 0x37, 0x47,
	0x12, 0xc1, 0x44, 0x28, 0xd2, 0x1c, 0xb7, 0x95, 0xa2, 0x5f, 0xdb, 0x5a, 0xb6, 0x57, 0xc6, 0x13,
	0xb1, 0x96, 0xfa, 0x04, 0x29, 0x2d, 0x43, 0xff, 0xd5, 0x97, 0x37, 0xca, 0xcd, 0xe5, 0xf1, 0xdd,
	0xc1, 0xc6, 0x46, 0x39, 0x56, 0x19, 0x89, 0xa2, 0xf6, 0x2e, 0x7d, 0xcd, 0xdb, 0x15, 0x0c, 0x87,
	0x1a, 0x82, 0x09, 0xb9, 0xd2, 0xf8, 0x03, 0x17, 0xf0, 0xd7, 0xbc, 0x00, 0xd4, 0x46, 0x9a, 0x9a,
	0x22, 0xcd, 0x01, 0x39, 0x1e, 0x85, 0x15, 0x20, 0xa3, 0x3e, 0xd2, 0x20, 0x97, 0x72, 0x7e, 0x6e,
	0x69, 0x7e, 0x8d, 0x4f, 0x91, 0xe6, 0x09, 0x08, 0x20, 0x16, 0x0e, 0xdf, 0x39, 0xae, 0x76, 0x9d,
	0x19, 0x39, 0x7e, 0x6a, 0xb8, 0xaf, 0x2f, 0x79, 0x76, 0x5f, 0x00, 0x81, 0x61, 0x35, 0x98, 0xd5,
	0x24, 0xc7, 0xe3, 0xc1, 0x46, 0xb9, 0xd4, 0xe3, 0xe7, 0x96, 0xe6, 0xd4, 0xf8, 0x15, 0x69, 0xa1,
	0x60, 0xc0, 0x44, 0x48, 0xb7, 0x1a, 0xba, 0xd3, 0xa3, 0xed, 0xeb, 0x0b, 0x18, 0x85, 0x70, 0x25,
	0xc8, 0x8a, 0xc9, 0xf1, 0x96, 0x70, 0xa2, 0xd4, 0xeb, 0xe7, 0x96, 0x66, 0xd7, 0x3c, 0xa2, 0x48,
	0x73, 0x05, 0x02, 0x12, 0xf3, 0x70, 0xcb, 0xe4, 0xc0, 0x31, 0xed, 0x4c, 0x77, 0x80, 0x40, 0x61,
	0x1d, 0xc8, 0x68, 0x08, 0x26, 0x82, 0xa5, 0x19, 0x7e, 0x6e, 0x69, 0xae, 0x38, 0xaf, 0x02, 0x53,
	0xa8, 0xc2, 0xa0, 0x50, 0xc5, 0xab, 0x88, 0x42, 0x35, 0xf3, 0x14, 0xa9, 0x58, 0x40, 0x35, 0x8d,
	0x7e, 0xb4, 0x8f, 0x2e, 0x6b, 0x1d, 0xbd, 0x01, 0x04, 0x83, 0xcf, 0x80, 0x9c, 0x98, 0xfc, 0x4e,
	0x8b, 0x1c, 0x4f, 0x6c, 0xac, 0x2b, 0xcd, 0x44, 0xc3, 0x46, 0xdf, 0xb6, 0xa0, 0xa2, 0xf5, 0x67,
	0xc0, 0xfa, 0x13, 0x86, 0x40, 0xe1, 0x6e, 0x79, 0xdb, 0x5b, 0x14, 0x79, 0x4b, 0xb3, 0xd0, 0x48,
	0xe6, 0x57, 0x50, 0x1c, 0xaf, 0x78, 0x43, 0xde, 0x26, 0x59, 0x55, 0x6a, 0x78, 0x45, 0x7a, 0x54,
	0xb0, 0x37, 0x14, 0xf3, 0xb4, 0x4f, 0x3e, 0x18, 0x39, 0x75, 0x94, 0x10, 0xc5, 0x5e, 0x5c, 0xfd,
	0xa8, 0x22, 0x2d, 0x00, 0x3e, 0x81, 0xe2, 0x8d, 0x98, 0x37, 0xb2, 0xf7, 0x74, 0xf2, 0xf8, 0x25,
	0x8c, 0x10, 0xff, 0x0b, 0x2f, 0x28, 0xc0, 0x85, 0x9b, 0x43, 0xf1, 0xc4, 0x74, 0x60, 0xde, 0x7a,
	0x86, 0x79, 0x3e, 0x07, 0xf3, 0x74, 0x3c, 0x5e, 0x0f, 0x86, 0x5b, 0xe4, 0x87, 0x81, 0x7f, 0xcb,
	0x14, 0xe9, 0x09, 0xf0, 0xb8, 0x60, 0x63, 0x91, 0x08, 0x31, 0x0f, 0xd5, 0xb6, 0x13, 0xc3, 0x3d,
	0x06, 0x27, 0xf7, 0x73, 0xa0, 0x80, 0xfd, 0x24, 0x5c, 0x0f, 0x32, 0xa3, 0x72, 0xac, 0x29, 0x8e,
	0x58, 0x39, 0x8a, 0xa0, 0x97, 0x2a, 0x52, 0x89, 0x80, 0xab, 0xda, 0x06, 0x84, 0x81, 0xe6, 0x30,
	0xd8, 0xfe, 0x45, 0x48, 0xd7, 0x25, 0xc3, 0x78, 0x09, 0xe4, 0x49, 0xbb, 0x82, 0xa1, 0x70, 0x70,
	0x5b, 0x58, 0x0e, 0xc8, 0xef, 0x54, 0xbf, 0xa0, 0x48, 0xdf, 0x01, 0xd5, 0x02, 0x03, 0x14, 0x05,
	0xed, 0xa7, 0x17, 0x87, 0xfb, 0xce, 0xd1, 0x36, 0x4f, 0xeb, 0xee, 0x50, 0x0f, 0xf7, 0x68, 0x27,
	0xfb, 0xd4, 0xa3, 0x9f, 0xaa, 0x9d, 0x7d, 0x3a, 0x76, 0x9d, 0xef, 0x6b, 0x1f, 0x5d, 0xe6, 0xff,
	0xca, 0x81, 0x7c, 0xaa, 0xf1, 0x94, 0x17, 0xd0, 0xea, 0xb5, 0x8a, 0xf4, 0x1c, 0x58, 0x23, 0xb0,
	0x83, 0x1e, 0x1f, 0xca, 0x84, 0x86, 0xbd, 0xb3, 0xc0, 0x9c, 0xda, 0x98, 0x1c, 0x4c, 0xc8, 0x01,
	0x39, 0x1a, 0x89, 0x87, 0x12, 0x91, 0xd8, 0x9e, 0x80, 0xfc, 0x0e, 0xdc, 0x08, 0x72, 0xa3, 0xb1,
	0xc8, 0xdb, 0x72, 0x7d, 0xa2, 0xd6, 0xc0, 0x3f, 0xa7, 0xe6, 0x49, 0x45, 0x9a, 0x2f, 0xd0, 0x70,
	0x31, 0x6f, 0xa4, 0xe7, 0x66, 0xb2, 0xab, 0x77, 0x68, 0xe0, 0x7c, 0xf2, 0xec, 0xbe, 0x7f, 0xd6,
	0x64, 0xc5, 0x32, 0x8a, 0xb8, 0x52, 0x7f, 0x80, 0xae, 0x03, 0xab, 0x40, 0x46, 0x73, 0xb0, 0x89,
	0x22, 0x48, 0xb1, 0x80, 0x00, 0x62, 0xde, 0xd0, 0xc0, 0x31, 0xb5, 0xff, 0x98, 0x7a, 0xb4, 0x23,
	0xf9, 0xd9, 0x65, 0xab, 0x31, 0x2a, 0x84, 0x0d, 0x20, 0x23, 0xb1, 0x27, 0x2a, 0x23, 0x5a, 0xe4,
	0xd4, 0xbc, 0xac, 0x48, 0x2f, 0x0a, 0x08, 0x20, 0xae, 0xc3, 0xad, 0x92, 0x57, 0x06, 0xd4, 0x33,
	0x1f, 0xde, 0x1d, 0x6c, 0xdf, 0xb0, 0x6e, 0xf3, 0x8b, 0x4b, 0x37, 0xc8, 0xe1, 0x26, 0x0c, 0x5f,
	0x56, 0xe6, 0x5f, 0xbf, 0x6e, 0xcb, 0xba, 0xc0, 0xc6, 0xda, 0xa5, 0x58, 0x72, 0x87, 0xfa, 0xdb,
	0x87, 0xef, 0x74, 0xa9, 0x6d, 0xd7, 0xb4, 0x8f, 0x0f, 0x0e, 0x0d, 0x5c, 0x23, 0xb5, 0x02, 0xa8,
	0x33, 0xb8, 0x19, 0x64, 0x27, 0x82, 0x3b, 0xe5, 0xc8, 0x2e, 0x39, 0x86, 0xb4, 0x3c, 0xbb, 0x66,
	0x85, 0x22, 0x95, 0x0b, 0x26, 0x50, 0x5c, 0x8c, 0x69, 0x36, 0x74, 0xa3, 0x5f, 0x3b, 0x72, 0x31,
	0xd9, 0xdb, 0xa3, 0x5e, 0xbf, 0xaa, 0x7e, 0x7d, 0x52, 0xed, 0xbe, 0x94, 0x3c, 0xbd, 0x1f, 0x77,
	0x15, 0x30, 0x2b, 0xc3, 0x5a, 0x30, 0x2b, 0x26, 0x47, 0x23, 0xaf, 0x05, 0x36, 0x13, 0x25, 0xd7,
	0x85, 0x59, 0x30, 0x60, 0xe2, 0x7c, 0xdc, 0x05, 0x19, 0xbf, 0xd1, 0x5e, 0xed, 0xbe, 0xac, 0x7e,
	0xb2, 0x37, 0x60, 0xd4, 0x82, 0xb5, 0x20, 0xbb, 0x25, 0x2e, 0xc7, 0x10, 0xc9, 0xb2, 0x0c, 0xb2,
	0x3f, 0x2e, 0x98, 0x40, 0xb1, 0xd4, 0xd6, 0x4d, 0xf2, 0xf8, 0x25, 0xad, 0xed, 0xba, 0x7a, 0xb4,
	0x23, 0x60, 0xd6, 0x81, 0x6b, 0x41, 0x76, 0x34, 0x18, 0x8f, 0xef, 0x8e, 0xc4, 0x1a, 0x4a, 0x67,
	0xa1, 0x4e, 0x1e, 0x57, 0xa4, 0xc5, 0x82, 0x09, 0x14, 0x4b, 0x6c, 0x9d, 0xa8, 0x7d, 0x07, 0x74,
	0x29, 0x36, 0x2b, 0xc0, 0x6a, 0x5d, 0x1a, 0x9b, 0x22, 0x09, 0xb9, 0x34, 0x1b, 0xd1, 0x05, 0xd9,
	0x14, 0x02, 0x12, 0x4b, 0x4c, 0xaa, 0x0c, 0xdf, 0xe9, 0x4e, 0x5e, 0xfa, 0x90, 0x50, 0x82, 0x14,
	0xc3, 0xb5, 0xba, 0xb9, 0xd3, 0xff, 0xd2, 0x29, 0x91, 0x83, 0x3e, 0x8f, 0x9a, 0x5b, 0x50, 0x5d,
	0x13, 0xac, 0x86, 0x84, 0x04, 0x56, 0x31, 0x0c, 0x80, 0x02, 0xf2, 0xc3, 0x20, 0x05, 0x40, 0xdd,
	0x08, 0x8a, 0xf4, 0xa4, 0x60, 0x2b, 0x12, 0x4b, 0xe8, 0xbe, 0x2c, 0x6a, 0xd8, 0xaa, 0xc1, 0x97,
	0x8c, 0x3e, 0x5f, 0x36, 0x28, 0x93, 0x6b, 0x91, 0xd7, 0x56, 0x64, 0x1b, 0x1f, 0x26, 0x8e, 0xad,
	0x0e, 0x5c, 0x0b, 0x72, 0x1b, 0x42, 0xf1, 0x68, 0x38, 0xb8, 0x67, 0x8b, 0x3e, 0xc2, 0x3c, 0xd4,
	0xdb, 0x22, 0xa4, 0x23, 0x14, 0x5c, 0xcc, 0x53, 0xaf, 0x7c, 0x94, 0xbc, 0xd0, 0x8f, 0xc5, 0x3c,
	0x40, 0x17, 0x55, 0xaf, 0x54, 0xa4, 0x0a, 0x50, 0x26, 0xb8, 0x69, 0xa0, 0x58, 0xa2, 0xb6, 0x75,
	0xa9, 0x03, 0xfd, 0x16, 0x87, 0xb0, 0x8d, 0xfa, 0x83, 0x17, 0x14, 0x3b, 0xab, 0x4f, 0x7d, 0x5f,
	0xfa, 0xa2, 0x2d, 0x10, 0xa2, 0xdd, 0x97, 0x85, 0x09, 0x1e, 0x04, 0x76, 0xa4, 0x84, 0x00, 0xa6,
	0xa2, 0x90, 0x41, 0x4c, 0x1f, 0x8f, 0x2a, 0x2a, 0x52, 0x25, 0x28, 0x17, 0x5c, 0xd9, 0xe5, 0x60,
	0x2f, 0xb1, 0xc7, 0x7f, 0xf4, 0x82, 0x39, 0xaf, 0x45, 0x1b, 0xa6, 0x9e, 0x3d, 0x5e, 0xce, 0xd8,
	0x63, 0x1c, 0xef, 0x20, 0x7b, 0x9c, 0x47, 0xdb, 0x63, 0x62, 0x56, 0x2d, 0xe3, 0x91, 0x71, 0x6f,
	0xc6, 0x23, 0x73, 0x32, 0xc6, 0xa3, 0xca, 0x61, 0x41, 0x51, 0xd4, 0x61, 0x59, 0xd0, 0x1c, 0x37,
	0x93, 0xb9, 0xd2, 0x61, 0x32, 0x4b, 0x14, 0x09, 0x52, 0x26, 0x33, 0xcb, 0x6e, 0x23, 0x4d, 0xf5,
	0x75, 0x61, 0x98, 0x58, 0xa2, 0x75, 0x7d, 0xa3, 0x7d, 0x7c, 0xd9, 0x4d, 0x7d, 0x9d, 0xd5, 0x1f,
	0x4a, 0xf5, 0xc5, 0x04, 0x98, 0xfe, 0xea, 0xeb, 0xc6, 0x2e, 0x07, 0x7b, 0x89, 0xfa, 0xfe, 0x47,
	0x0e, 0x14, 0xad, 0x97, 0x13, 0x53, 0x4b, 0x77, 0xab, 0x2b, 0x14, 0x69, 0x39, 0x58, 0x26, 0x38,
	0x46, 0x26, 0x96, 0xe0, 0x48, 0xd1, 0x2e, 0xa4, 0xff, 0xd5, 0x0b, 0x66, 0xdb, 0xea, 0x3e, 0x9c,
	0x12, 0x8a, 0xb0, 0x9f, 0xbe, 0x12, 0x5a, 0xa9, 0x48, 0x65, 0x40, 0x10, 0x9c, 0xbc, 0x72, 0x30,
	0x96, 0x88, 0x67, 0x3b, 0x07, 0x66, 0xe3, 0x99, 0xdd, 0xfd, 0x91, 0xcf, 0xea, 0x32, 0x45, 0x5a,
	0x06, 0x9e, 0x14, 0x9c, 0x1f, 0x11, 0xe1, 0xf0, 0x91, 0xeb, 0x6a, 0xe7, 0xc7, 0x44, 0x4c, 0xd1,
	0x6c, 0x92, 0xff, 0x9d, 0x17, 0x40, 0x7b, 0xcd, 0xe9, 0xb4, 0xa4, 0xe3, 0x1d, 0x4d, 0xd0, 0xe8,
	0x25, 0x01, 0x1a, 0xeb, 0x69, 0x24, 0x5f, 0x4f, 0x2b, 0xd2, 0x2a, 0xb0, 0x52, 0x70, 0xe1, 0x91,
	0x38, 0xdf, 0xc9, 0x4e, 0x4b, 0xcc, 0x7e, 0xc5, 0x81, 0x39, 0x75, 0x72, 0x58, 0x9e, 0x6a, 0x41,
	0x8c, 0xe9, 0xb0, 0x5d, 0x06, 0xa7, 0x07, 0x64, 0x67, 0x47, 0x4e, 0x5d, 0xb0, 0xdb, 0xc2, 0x0e,
	0x2f, 0x28, 0x76, 0x56, 0x9f, 0xfa, 0x52, 0xca, 0xc8, 0x57, 0xc6, 0xbd, 0xc9, 0x57, 0xe6, 0x7d,
	0xf6, 0xb0, 0x6e, 0xf4, 0x75, 0xf0, 0x83, 0xc8, 0xd6, 0xef, 0x67, 0x01, 0x60, 0xd5, 0xd4, 0xe7,
	0x60, 0x4e, 0x91, 0x5a, 0x34, 0xba, 0x48, 0xb1, 0x92, 0xb4, 0x9c, 0x91, 0xa4, 0x79, 0x29, 0x24,
	0x69, 0x72, 0x51, 0xb0, 0xb9, 0x1c, 0x90, 0x41, 0x71, 0xdc, 0x58, 0x0e, 0x80, 0xea, 0xad, 0x63,
	0xea, 0xa1, 0x0e, 0x13, 0xc1, 0x96, 0x58, 0xd8, 0x5a, 0x05, 0xa0, 0x63, 0xd8, 0xcc, 0x49, 0xc5,
	0xb0, 0x59, 0xe3, 0x8a, 0x61, 0xa9, 0x50, 0x7d, 0xd6, 0xbd, 0x85, 0xea, 0xd9, 0x93, 0x09, 0xd5,
	0x5f, 0x71, 0xcc, 0xf3, 0x73, 0xac, 0x85, 0x13, 0xfb, 0x3c, 0xbf, 0x98, 0xee, 0xcb, 0xc0, 0xd9,
	0x31, 0xcd, 0x7f, 0xc5, 0x31, 0xcd, 0x07, 0x8e, 0x2e, 0xcd, 0x69, 0x3e, 0xd3, 0xa5, 0x41, 0x13,
	0xc7, 0x44, 0xbf, 0x0a, 0x64, 0xd7, 0xa3, 0x39, 0x5c, 0xcd, 0x1e, 0xb2, 0x66, 0x80, 0x99, 0x61,
	0x00, 0xc5, 0x1c, 0x3c, 0x99, 0x1b, 0xde, 0xdb, 0x1a, 0x30, 0x81, 0x88, 0x85, 0x28, 0x74, 0xac,
	0xd9, 0x43, 0xd6, 0x06, 0x08, 0x0b, 0x09, 0x50, 0xcc, 0xc1, 0x31, 0x24, 0x6a, 0x65, 0x00, 0xe1,
	0x73, 0x00, 0xe0, 0x1e, 0xbe, 0x17, 0x6a, 0x92, 0x4b, 0xf3, 0x51, 0xbb, 0x85, 0x8a, 0xe4, 0x13,
	0x28, 0xb0, 0x98, 0x87, 0xbf, 0xa7, 0x9d, 0xb8, 0x36, 0x72, 0xe2, 0x9b, 0x00, 0x55, 0xa2, 0x37,
	0xc7, 0x5d, 0xa1, 0xe6, 0x05, 0x54, 0x73, 0x0b, 0x2c, 0xe6, 0xe1, 0x0f, 0x1b, 0xcd, 0xad, 0x12,
	0xfb, 0x92, 0x46, 0xe1, 0x84, 0x97, 0x34, 0x74, 0x79, 0x8a, 0xb6, 0x6c, 0x0b, 0x87, 0xea, 0x4b,
	0x8b, 0x28, 0x79, 0xc2, 0x20, 0x43, 0x9e, 0xf4, 0x7f, 0x5b, 0xbf, 0x52, 0x5b, 0xaf, 0x18, 0xf2,
	0x84, 0x8b, 0xf9, 0xff, 0xc6, 0x81, 0xfc, 0xda, 0x1d, 0xc1, 0x58, 0x42, 0x77, 0x38, 0x75, 0xba,
	0x97, 0x5c, 0x02, 0x32, 0xa2, 0xba, 0xc5, 0xc4, 0x46, 0x76, 0xb6, 0x22, 0x15, 0x08, 0x08, 0x20,
	0x66, 0x8d, 0xf4, 0xfc, 0x5c, 0xfb, 0xe8, 0x72, 0x00, 0xfd, 0xd2, 0xd5, 0x32, 0x1e, 0xfa, 0x31,
	0xd6, 0xe1, 0x7c, 0xa2, 0x96, 0x3a, 0x40, 0xcc, 0xd3, 0xfa, 0x3a, 0x71, 0xcd, 0x91, 0x83, 0x9d,
	0x01, 0x04, 0x83, 0x4b, 0x41, 0x66, 0x22, 0x92, 0x08, 0x86, 0x91, 0x12, 0xe7, 0xd7, 0x40, 0x45,
	0x2a, 0x14, 0x30, 0x44, 0xcc, 0xd2, 0xf6, 0x0e, 0xe8, 0xbd, 0xe2, 0x9f, 0x70, 0x03, 0xe3, 0xe9,
	0x21, 0x63, 0xff, 0xd0, 0x38, 0xc7, 0x1b, 0x4d, 0xf2, 0x7f, 0xcc, 0x02, 0x99, 0xa8, 0x05, 0x7c,
	0x1a, 0xe4, 0x10, 0xeb, 0xb3, 0xb1, 0x8e, 0x98, 0x2b, 0x24, 0x16, 0x16, 0x54, 0xcc, 0xc6, 0xc6,
	0x2a, 0xd4, 0x10, 0xb0, 0x80, 0x3a, 0x63, 0x63, 0xa6, 0xd9, 0x23, 0xc6, 0x0a, 0x33, 0xd6, 0x02,
	0xdb, 0x4c, 0x16, 0x55, 0x32, 0x31, 0xc3, 0xb5, 0x04, 0x78, 0x77, 0xca, 0x7b, 0x88, 0xd1, 0x9a,
	0xa3, 0x48, 0x45, 0x82, 0xfe, 0x5b, 0xcc, 0xa9, 0xd7, 0x31, 0xf0, 0xef, 0x94, 0xf7, 0x04, 0xf4,
	0xdf, 0x50, 0x20, 0x96, 0x13, 0xdb, 0xa7, 0xb9, 0x8a, 0x34, 0x87, 0x58, 0xce, 0x5c, 0x54, 0x91,
	0x31, 0x9c, 0x2f, 0x83, 0xfc, 0x70, 0x30, 0x21, 0xc7, 0x13, 0xaf, 0xcb, 0xb1, 0x78, 0x28, 0xd2,
	0x4c, 0xcc, 0x13, 0x5a, 0xcf, 0x63, 0x4b, 0xc4, 0xb9, 0x5a, 0xf7, 0x5e, 0x3c, 0x71, 0xc4, 0xdf,
	0xdb, 0x85, 0xe1, 0x01, 0xb6, 0x1a, 0x7c, 0x03, 0x14, 0x61, 0x80, 0x14, 0x8d, 0x1a, 0x9d, 0xe2,
	0x79, 0xfb, 0x72, 0x45, 0x5a, 0x2a, 0x38, 0x0a, 0xc5, 0x62, 0xb3, 0xdf, 0x60, 0x34, 0x6a, 0xf6,
	0xea, 0xa8, 0x07, 0xb7, 0x82, 0xd9, 0x18, 0x56, 0x27, 0xc7, 0xeb, 0x63, 0x21, 0xb4, 0x43, 0x49,
	0xac, 0x9b, 0x1e, 0xde, 0x0a, 0xce, 0x52, 0xaa, 0xeb, 0x06, 0x0b, 0x1a, 0x70, 0x56, 0x64, 0x2c,
	0x49, 0xce, 0xa4, 0x2c, 0x09, 0x98, 0xa4, 0x25, 0xc9, 0xbd, 0x37, 0x4b, 0x92, 0x37, 0x09, 0x4b,
	0x42, 0x3b, 0xe6, 0xfc, 0x31, 0x1d, 0xb3, 0xda, 0x79, 0x9d, 0x75, 0xcc, 0x02, 0xc8, 0x08, 0xd5,
	0x47, 0x9a, 0x89, 0x11, 0xc3, 0xe2, 0xa5, 0x03, 0x0c, 0xf1, 0xea, 0xba, 0xad, 0x9d, 0x3d, 0x18,
	0x40, 0x20, 0xfe, 0x2f, 0x1c, 0x28, 0x46, 0xfa, 0x45, 0x98, 0x38, 0x45, 0x0c, 0xc8, 0xf7, 0x18,
	0x03, 0xf2, 0x88, 0xd3, 0x80, 0x90, 0xe1, 0xd6, 0x2c, 0x51, 0x24, 0x9e, 0xd8, 0x11, 0x9f, 0x69,
	0x47, 0x10, 0x9a, 0xc9, 0x43, 0x6d, 0x5a, 0xf7, 0x57, 0xf4, 0xd4, 0x81, 0x6f, 0xcf, 0x00, 0x79,
	0x74, 0x6b, 0xb8, 0x8c, 0x28, 0x22, 0x67, 0xb9, 0x7c, 0xac, 0x88, 0x00, 0x6b, 0x10, 0xf2, 0x93,
	0x58, 0x0f, 0x9f, 0x02, 0xb3, 0x88, 0xe4, 0x13, 0x1b, 0x32, 0x5f, 0x91, 0x4a, 0x05, 0x03, 0x26,
	0xe6, 0xb3, 0x2a, 0x67, 0xc0, 0x61, 0x0d, 0x00, 0x41, 0x4b, 0xcd, 0xbc, 0x96, 0xab, 0xa7, 0xc0,
	0xe2, 0x6c, 0xdc, 0x98, 0xd6, 0x2e, 0xaa, 0x18, 0xae, 0x03, 0xb9, 0x94, 0x76, 0x10, 0xeb, 0xf2,
	0x98, 0x22, 0xf9, 0x05, 0x1a, 0x6e, 0xf4, 0x42, 0x2b, 0x12, 0x5d, 0xce, 0xa8, 0x50, 0xe6, 0xa4,
	0x54, 0x28, 0x6b, 0x92, 0x2a, 0x34, 0xeb, 0xde, 0x54, 0x28, 0x7b, 0xa2, 0x2a, 0xb4, 0x04, 0x78,
	0x5b, 0x62, 0x61, 0x62, 0x27, 0xb0, 0x19, 0x6e, 0x89, 0x85, 0x0d, 0x33, 0xac, 0x87, 0x8b, 0xfa,
	0x6f, 0xfe, 0xd7, 0x5e, 0x90, 0x8b, 0xc4, 0xa1, 0x4e, 0x4e, 0x04, 0x43, 0x61, 0xd3, 0x2c, 0x73,
	0xe3, 0x30, 0xcb, 0xab, 0xec, 0xe2, 0x80, 0xe6, 0x08, 0xa6, 0x38, 0xe4, 0x52, 0x22, 0x68, 0x09,
	0xc3, 0x0a, 0x3d, 0x64, 0x0c, 0x36, 0x34, 0x19, 0xde, 0x04, 0x51, 0x92, 0x80, 0x48, 0x93, 0xe1,
	0x83, 0x5f, 0x0c, 0xdf, 0xb9, 0x1c, 0x20, 0x40, 0x58, 0x0b, 0xc0, 0xae, 0x60, 0xb8, 0x45, 0x8e,
	0x7f, 0x37, 0x14, 0x96, 0x91, 0x36, 0x10, 0xce, 0x53, 0x60, 0x11, 0xe2, 0xbf, 0xf1, 0x36, 0x1d,
	0x11, 0x78, 0xaa, 0x1c, 0x36, 0x82, 0xec, 0xfa, 0x48, 0x73, 0x42, 0x6e, 0x4e, 0xe8, 0x33, 0x12,
	0x5d, 0xa1, 0x9e, 0x70, 0x2a, 0x14, 0xa6, 0x41, 0x45, 0x2d, 0xa9, 0xb8, 0xae, 0x39, 0x11, 0xdb,
	0x83, 0x3f, 0x65, 0x36, 0x16, 0x8b, 0x31, 0x1d, 0xda, 0x5b, 0xb5, 0x43, 0x7b, 0xd5, 0xa3, 0x5f,
	0xe2, 0x0f, 0x06, 0xcc, 0x72, 0x83, 0xee, 0x59, 0xa3, 0xd3, 0xdd, 0xf7, 0x1a, 0xc8, 0x67, 0x3e,
	0x03, 0x8b, 0xb0, 0xdb, 0x44, 0x74, 0xc7, 0x1e, 0xb2, 0x02, 0x64, 0x22, 0x04, 0x10, 0x71, 0x73,
	0xc5, 0x52, 0x66, 0xbc, 0x3a, 0x52, 0xa4, 0x83, 0x00, 0xae, 0x56, 0xed, 0x79, 0x96, 0xe3, 0xaf,
	0x70, 0x20, 0x97, 0x2a, 0x82, 0x4b, 0x19, 0x76, 0x16, 0x2b, 0xd2, 0x6c, 0xc2, 0xce, 0x1c, 0x42,
	0xa9, 0xa3, 0x1d, 0x84, 0x99, 0x35, 0xba, 0xad, 0x4b, 0xec, 0x20, 0x9c, 0xac, 0x50, 0xa4, 0xe5,
	0x02, 0x02, 0x88, 0x8f, 0xe1, 0x9a, 0xc9, 0xae, 0x1b, 0x6a, 0xdf, 0x4d, 0x03, 0x79, 0xb5, 0xf5,
	0xa2, 0xda, 0x79, 0x5e, 0x9f, 0x58, 0x5d, 0xef, 0x53, 0x6f, 0xef, 0x0f, 0xa0, 0xaa, 0xb0, 0x0a,
	0xcc, 0x22, 0x74, 0x20, 0xcc, 0x45, 0x13, 0x5b, 0x03, 0x26, 0xe6, 0x91, 0x6f, 0x1e, 0x68, 0x55,
	0x7b, 0x6f, 0x06, 0x0c, 0x30, 0xaf, 0x79, 0x40, 0x81, 0x6e, 0x72, 0xb1, 0x55, 0x5a, 0xa9, 0xcf,
	0xf5, 0xef, 0x87, 0xe1, 0xb5, 0xad, 0x1f, 0x78, 0xfd, 0x9e, 0x49, 0xaf, 0x1f, 0xac, 0x05, 0xd9,
	0x7a, 0x74, 0x84, 0xa2, 0xdc, 0x0c, 0xd4, 0xcf, 0xe3, 0xba, 0x21, 0x34, 0x81, 0xee, 0xeb, 0x08,
	0x6b, 0x03, 0x66, 0x05, 0xb8, 0x96, 0x89, 0x7e, 0x50, 0x64, 0x80, 0xf9, 0xb2, 0x18, 0xcb, 0x09,
	0x6e, 0x79, 0x77, 0xb0, 0x5d, 0x3b, 0xde, 0xa7, 0xb5, 0xef, 0xd3, 0x2e, 0xf5, 0x24, 0x7f, 0x76,
	0x58, 0x3b, 0xda, 0x9d, 0xfc, 0xe6, 0x1c, 0xbb, 0x1a, 0x61, 0xa3, 0x9c, 0xe8, 0xd3, 0x0e, 0xdd,
	0x1c, 0x39, 0xd8, 0x89, 0xdd, 0x00, 0x56, 0x40, 0x7a, 0xfb, 0xa0, 0x90, 0xa9, 0x3e, 0xf5, 0x17,
	0x22, 0x02, 0xb6, 0x24, 0x1a, 0x87, 0xca, 0x1a, 0xbe, 0x1a, 0x3b, 0x14, 0xec, 0x04, 0xe7, 0xd9,
	0x9c, 0xe0, 0xe9, 0xfd, 0xd3, 0x75, 0xfb, 0xc0, 0xce, 0x2e, 0x77, 0xf6, 0x92, 0xc5, 0x8d, 0x8f,
	0x3d, 0x60, 0xce, 0x7a, 0x39, 0x41, 0x59, 0x32, 0xac, 0x4c, 0x8e, 0x85, 0xb3, 0xf4, 0x08, 0xbe,
	0x67, 0x52, 0x82, 0xbf, 0x92, 0x08, 0x3e, 0x56, 0xbf, 0x85, 0xee, 0xfe, 0xe5, 0x9f, 0x35, 0x19,
	0x31, 0x4f, 0x11, 0x47, 0x24, 0x9d, 0x64, 0xe6, 0xb8, 0xe1, 0x26, 0x3e, 0x46, 0x51, 0x42, 0x6d,
	0x6f, 0x1d, 0xee, 0xfb, 0x34, 0x39, 0x70, 0x00, 0x13, 0xd5, 0x92, 0xfb, 0x21, 0x2f, 0x28, 0x76,
	0x36, 0x9e, 0x6e, 0x19, 0x64, 0x6e, 0x33, 0xc8, 0x47, 0x15, 0x69, 0x01, 0x11, 0xfa, 0x62, 0x37,
	0x1a, 0x4c, 0x23, 0x89, 0x27, 0xd9, 0x48, 0xae, 0x8c, 0x1a, 0x83, 0xcd, 0x44, 0xfe, 0x55, 0x0f,
	0x28, 0xb1, 0xf4, 0x05, 0x87, 0x1b, 0xdf, 0x12, 0x77, 0xb2, 0xd2, 0x74, 0x27, 0xe3, 0xd6, 0xaa,
	0x67, 0x15, 0xe9, 0x29, 0xb0, 0x4a, 0x70, 0xa7, 0x98, 0x31, 0x8f, 0xa0, 0x22, 0x38, 0x4b, 0x9d,
	0xfe, 0xe1, 0x05, 0x73, 0xdd, 0x5a, 0x4d, 0x7d, 0x85, 0x7a, 0x8b, 0x51, 0xa8, 0xc5, 0x29, 0x67,
	0x54, 0xa6, 0x53, 0x59, 0xaa, 0x48, 0x4b, 0x88, 0x7e, 0x2d, 0x74, 0x38, 0x15, 0x4c, 0x97, 0x69,
	0xa7, 0x68, 0xab, 0x15, 0xe9, 0x69, 0x50, 0x25, 0xa4, 0x60, 0xa1, 0x3b, 0xe7, 0x29, 0x0d, 0x5b,
	0x2f, 0x1b, 0x0d, 0x1e, 0x22, 0x1f, 0xa3, 0x0b, 0xa2, 0x31, 0x95, 0xc1, 0x1a, 0xe8, 0x4f, 0x39,
	0x95, 0x31, 0x1a, 0x1a, 0x85, 0xd5, 0x2f, 0x2b, 0xd2, 0x8b, 0x60, 0x93, 0xe0, 0x4e, 0x19, 0x51,
	0xc4, 0xf4, 0xd4, 0xda, 0x0f, 0xaa, 0xbd, 0xa7, 0x4d, 0x82, 0x8e, 0xee, 0xb0, 0x94, 0x0c, 0x30,
	0xd7, 0xad, 0xb7, 0xa9, 0xaf, 0x61, 0xdb, 0x18, 0x0d, 0x2b, 0x4d, 0x35, 0xc5, 0xaa, 0xa9, 0x52,
	0xa4, 0x95, 0x44, 0xb1, 0x96, 0x8d, 0x9b, 0x40, 0xd3, 0x48, 0xc9, 0x5e, 0x51, 0xa4, 0x2d, 0x60,
	0xb3, 0x90, 0x82, 0x8b, 0x13, 0x13, 0x0a, 0xa2, 0x7c, 0xef, 0x7b, 0x40, 0x01, 0xde, 0xeb, 0x42,
	0x84, 0x7c, 0x18, 0x22, 0xbb, 0x15, 0x8a, 0x54, 0x0e, 0x96, 0x0b, 0x36, 0xb4, 0xc4, 0x47, 0xf0,
	0xe6, 0x9d, 0x1f, 0x01, 0xfc, 0xc3, 0x7d, 0xd7, 0xb5, 0x2b, 0xef, 0x13, 0xcd, 0xd8, 0xef, 0x05,
	0x85, 0x4c, 0xed, 0x99, 0xbd, 0xd4, 0x74, 0x88, 0x2b, 0xc9, 0xf1, 0xb1, 0x93, 0x56, 0x9c, 0xcb,
	0x70, 0xc2, 0x92, 0xc5, 0xff, 0xee, 0x01, 0x25, 0x54, 0x5d, 0x22, 0xe2, 0xdf, 0x76, 0x47, 0x50,
	0xab, 0x48, 0x6b, 0xc1, 0xf3, 0x82, 0x3b, 0x65, 0xc4, 0x25, 0x0c, 0x2d, 0x69, 0xd5, 0x67, 0x24,
	0xfc, 0xa4, 0x17, 0xcc, 0x75, 0xeb, 0x60, 0x46, 0xd0, 0xd3, 0x21, 0xe8, 0x6b, 0x14, 0xe9, 0x59,
	0xf0, 0xb4, 0x90, 0x82, 0xc2, 0xe2, 0x02, 0x56, 0xde, 0x6d, 0xe1, 0xcf, 0x7f, 0xf6, 0x80, 0xa2,
	0xba, 0xc8, 0xee, 0xe6, 0x70, 0x24, 0xd8, 0xf0, 0xb0, 0xd8, 0xe0, 0x7b, 0x12, 0xf8, 0xe7, 0x15,
	0x69, 0x0d, 0x58, 0x2d, 0x38, 0x88, 0x22, 0x2e, 0x19, 0xba, 0xf1, 0xe1, 0xf0, 0xad, 0x5b, 0x63,
	0xc9, 0xfa, 0xff, 0xf7, 0x80, 0x82, 0xd7, 0xa2, 0xa3, 0x93, 0x93, 0x4b, 0x13, 0x39, 0xb9, 0x49,
	0x90, 0x73, 0x05, 0xc8, 0xd8, 0x1e, 0x0a, 0xe3, 0x95, 0xea, 0xbc, 0x9a, 0x05, 0x8a, 0xf4, 0x88,
	0x80, 0x00, 0xe2, 0x6c, 0xfd, 0x5f, 0xff, 0xd0, 0x8d, 0xc3, 0x43, 0x83, 0x67, 0xc9, 0x0a, 0x30,
	0x2a, 0xa0, 0x97, 0xc4, 0x33, 0xc6, 0xbd, 0x24, 0x5e, 0x05, 0x32, 0xb7, 0x47, 0x62, 0xf5, 0x78,
	0x35, 0x30, 0x1b, 0xef, 0x73, 0x61, 0x88, 0x08, 0xc9, 0xa9, 0x9b, 0xc1, 0x7e, 0xb5, 0xed, 0x1a,
	0xfe, 0x5e, 0x00, 0x17, 0x19, 0xcb, 0x22, 0x36, 0x02, 0x8a, 0x4b, 0x71, 0x2d, 0xc3, 0x79, 0x1e,
	0xfc, 0x42, 0xed, 0x3d, 0x3d, 0x74, 0xf3, 0x90, 0x0b, 0xf5, 0x75, 0x5f, 0xca, 0x34, 0x9e, 0x31,
	0x31, 0xe9, 0xf4, 0xa5, 0x36, 0xd2, 0x8a, 0x73, 0x19, 0xc6, 0x58, 0x56, 0xe5, 0x03, 0x2f, 0x80,
	0xc6, 0xa2, 0x47, 0x40, 0x0e, 0xcb, 0xc1, 0xb8, 0x3c, 0xe5, 0x14, 0xc1, 0xb2, 0x2b, 0xdc, 0x78,
	0xed, 0x4a, 0x03, 0xc8, 0x26, 0xf2, 0x1d, 0x27, 0x7b, 0x36, 0x1b, 0x14, 0x69, 0x9d, 0x60, 0x02,
	0xc5, 0xd5, 0x94, 0x2e, 0x94, 0xf9, 0x87, 0x6e, 0x74, 0x0c, 0x0d, 0x9e, 0x35, 0xf6, 0x2b, 0x4f,
	0xe1, 0x04, 0x41, 0xed, 0xd0, 0x5e, 0xad, 0xfb, 0x90, 0x69, 0x86, 0xfd, 0x31, 0x42, 0x1e, 0xb3,
	0x93, 0xea, 0xf5, 0x8a, 0x54, 0x07, 0x6a, 0x04, 0x17, 0x02, 0x8a, 0x65, 0xb8, 0x0f, 0x3f, 0x59,
	0x50, 0x6f, 0xfd, 0xd9, 0xf0, 0xbe, 0xe3, 0x54, 0x27, 0x71, 0x36, 0xb0, 0xfc, 0x9f, 0x5e, 0x6b,
	0xf1, 0xd4, 0xec, 0x64, 0xea, 0x2b, 0x44, 0x0d, 0xb3, 0x47, 0x5c, 0x6c, 0x4b, 0x27, 0x45, 0x68,
	0xe0, 0x1d, 0x36, 0x3c, 0xd7, 0xca, 0x27, 0xc8, 0x4f, 0xbb, 0xf9, 0xd4, 0x3a, 0x45, 0xaa, 0x01,
	0x6b, 0x05, 0x37, 0x16, 0x89, 0xcb, 0xc6, 0x62, 0xb4, 0xa5, 0x6b, 0x7f, 0xf7, 0x82, 0x79, 0x1b,
	0x9b, 0xa2, 0x91, 0x58, 0xa2, 0x36, 0xdc, 0x12, 0x4f, 0xc8, 0xb1, 0xfb, 0xa3, 0x70, 0x2f, 0x80,
	0x9c, 0x7a, 0xdc, 0xff, 0xc6, 0x3a, 0x22, 0x06, 0x8b, 0x51, 0x9a, 0x8e, 0x09, 0x15, 0xb3, 0x47,
	0xba, 0x0e, 0x24, 0x6f, 0x5f, 0xd8, 0x58, 0x67, 0xa9, 0x9b, 0x55, 0x0a, 0x37, 0x83, 0x1c, 0x5d,
	0x89, 0xe2, 0xd1, 0x60, 0xbd, 0xa1, 0x74, 0x15, 0x8a, 0xc4, 0x0b, 0x16, 0xd4, 0xcc, 0x18, 0xea,
	0xea, 0xd5, 0xce, 0x1e, 0x34, 0xc1, 0x54, 0x6f, 0x26, 0x0c, 0x3e, 0x4d, 0xb4, 0x37, 0xc3, 0xd8,
	0x79, 0x2f, 0x25, 0xda, 0x5b, 0x64, 0xef, 0x83, 0x55, 0x61, 0xda, 0x6e, 0x64, 0x4e, 0xca, 0x6e,
	0xac, 0x05, 0x78, 0xdf, 0x73, 0x8b, 0x75, 0x9a, 0x06, 0x7d, 0xde, 0x82, 0xba, 0x5a, 0x10, 0xab,
	0xb8, 0xba, 0x4e, 0x91, 0x24, 0xf0, 0x82, 0x90, 0x8a, 0x6b, 0xe2, 0xe3, 0x6a, 0xdf, 0xa0, 0x7a,
	0xb0, 0xdf, 0x4f, 0x68, 0x97, 0x42, 0xbb, 0x7b, 0xbc, 0xa0, 0xd4, 0xbd, 0x87, 0x19, 0x9f, 0x97,
	0x0e, 0xf5, 0xac, 0x51, 0xa4, 0x17, 0xc0, 0x73, 0x42, 0x4a, 0x1a, 0x8b, 0x8b, 0x53, 0xb1, 0xc9,
	0xd2, 0xcd, 0x3f, 0x73, 0xa0, 0x90, 0x34, 0x99, 0x22, 0x09, 0x38, 0xaf, 0x8c, 0xc3, 0xb8, 0xa2,
	0xf3, 0x9f, 0xd8, 0xb8, 0x2e, 0x60, 0x57, 0x88, 0x0d, 0x1c, 0x99, 0xec, 0x9b, 0xc3, 0xb3, 0xc0,
	0x2c, 0xd2, 0x14, 0x8a, 0xcc, 0xde, 0x3c, 0x8a, 0xfa, 0xb0, 0x5a, 0xce, 0x61, 0xdb, 0xd3, 0x29,
	0x17, 0x6b, 0x69, 0xc3, 0xe0, 0xa1, 0x92, 0x66, 0x2d, 0xc3, 0x00, 0xb5, 0x43, 0x7b, 0xf1, 0x11,
	0x63, 0x13, 0x46, 0x1b, 0x83, 0xe7, 0x74, 0xa5, 0xde, 0x15, 0x32, 0x53, 0x71, 0xf2, 0x75, 0xd3,
	0xb4, 0x48, 0x30, 0x81, 0xb8, 0xfd, 0x85, 0xfd, 0x43, 0xfd, 0x47, 0xcc, 0x35, 0xee, 0x80, 0x59,
	0x0a, 0xab, 0x40, 0x56, 0x3c, 0x11, 0x4c, 0xb4, 0xc4, 0x89, 0x28, 0xa2, 0xa0, 0x98, 0x80, 0xc4,
	0x42, 0x9c, 0x94, 0xac, 0xb7, 0x3b, 0x7c, 0x4d, 0xdb, 0xbb, 0x2f, 0x40, 0x0a, 0x60, 0x39, 0xc8,
	0x44, 0x38, 0x11, 0x33, 0x82, 0x38, 0x84, 0x21, 0x6c, 0x5e, 0x09, 0x86, 0xc1, 0x0d, 0x4c, 0xc2,
	0x10, 0xb6, 0x1b, 0x68, 0x29, 0x9e, 0x4e, 0x18, 0x9a, 0x47, 0x8f, 0x33, 0x55, 0xda, 0x10, 0x9b,
	0x44, 0x33, 0x6b, 0xa2, 0x49, 0x34, 0xeb, 0x40, 0x5e, 0x3d, 0x35, 0x47, 0x24, 0x59, 0x38, 0x88,
	0x60, 0x4c, 0x81, 0x58, 0xc0, 0x6e, 0x0a, 0x04, 0x98, 0xd2, 0x07, 0x9a, 0xb8, 0x57, 0x65, 0x59,
	0xa7, 0x5c, 0x2a, 0x07, 0xc3, 0xb0, 0x4e, 0x79, 0xda, 0xe1, 0x8b, 0x23, 0xc7, 0x4f, 0x69, 0xd7,
	0xda, 0x18, 0xbb, 0xb4, 0x1c, 0x64, 0xe8, 0x46, 0x9b, 0x64, 0xea, 0x61, 0x0d, 0xd2, 0x01, 0x22,
	0x46, 0xc4, 0x4f, 0x72, 0x6d, 0x11, 0x0c, 0x6e, 0x02, 0x05, 0xa1, 0x60, 0xd3, 0x16, 0x43, 0xa4,
	0x36, 0xd6, 0x91, 0x04, 0x3d, 0x94, 0x29, 0x63, 0x2b, 0x12, 0x6d, 0xbf, 0x03, 0xb6, 0xdf, 0xf6,
	0x54, 0xbf, 0x82, 0xd1, 0x53, 0xfd, 0x92, 0x83, 0x1f, 0x3b, 0x72, 0xf0, 0x9f, 0xa1, 0xbd, 0x6d,
	0x21, 0x65, 0x20, 0x2d, 0x6f, 0x9b, 0x83, 0xbd, 0xad, 0x5f, 0x37, 0x90, 0x26, 0x94, 0xef, 0xcd,
	0x06, 0xf9, 0x44, 0x19, 0x49, 0xf6, 0xd3, 0x8c, 0x4a, 0x7e, 0x5b, 0x54, 0x72, 0x13, 0xc8, 0xc2,
	0xd9, 0x61, 0xa5, 0x39, 0x68, 0x72, 0xb2, 0x4a, 0x91, 0x56, 0x08, 0x04, 0x24, 0x3e, 0x81, 0x89,
	0x66, 0x50, 0x78, 0xe4, 0x83, 0x4b, 0xc9, 0x5b, 0x57, 0xb5, 0x13, 0xd7, 0x92, 0xa7, 0xf7, 0xd3,
	0x69, 0x66, 0x01, 0x52, 0x1f, 0xd6, 0xb0, 0xc9, 0x89, 0xc0, 0x8a, 0x0a, 0x98, 0xe4, 0xc4, 0x02,
	0x22, 0x3e, 0x7e, 0xad, 0xb3, 0x73, 0xf8, 0xce, 0x65, 0x36, 0x33, 0xb1, 0x12, 0x64, 0x36, 0x47,
	0x12, 0x72, 0x9c, 0x68, 0x2d, 0x92, 0x60, 0x0c, 0x31, 0xa3, 0x76, 0x3f, 0xfa, 0x19, 0xc0, 0x50,
	0xb8, 0x0e, 0x64, 0x04, 0x63, 0x8d, 0xf1, 0xd2, 0x3c, 0x34, 0xfe, 0x95, 0x8a, 0x54, 0x21, 0x20,
	0xc0, 0x68, 0xa3, 0xf7, 0xeb, 0x2e, 0xcc, 0x8f, 0x83, 0xa2, 0x00, 0xaa, 0xcd, 0xd8, 0xa6, 0xfc,
	0x49, 0xd9, 0xa6, 0x82, 0xc9, 0xd8, 0xa6, 0xc2, 0x89, 0xdb, 0xa6, 0xa2, 0xf1, 0xd8, 0xa6, 0xef,
	0x83, 0x1c, 0xc4, 0x14, 0x94, 0x2b, 0x38, 0x1b, 0xb5, 0x78, 0x4e, 0x91, 0xaa, 0x05, 0x0b, 0x2a,
	0x96, 0xa3, 0x3f, 0xfd, 0x98, 0x87, 0x77, 0x07, 0xdb, 0xf5, 0x79, 0xf9, 0x8d, 0xbd, 0xda, 0x57,
	0x3d, 0xe4, 0x54, 0xee, 0xad, 0x3b, 0xc9, 0xe3, 0xba, 0xae, 0x12, 0x26, 0x5b, 0x2d, 0xf9, 0xcf,
	0x33, 0x40, 0x11, 0x3e, 0xce, 0x86, 0xf8, 0x91, 0xf6, 0xad, 0x4f, 0xdb, 0xbc, 0xc1, 0x33, 0xe1,
	0x79, 0x43, 0xd0, 0x39, 0x6f, 0xa8, 0x55, 0xa4, 0xb5, 0xb4, 0x2d, 0x5a, 0x85, 0x57, 0xe3, 0xd4,
	0x9f, 0xdc, 0xd2, 0x15, 0xfc, 0xf3, 0xfe, 0x91, 0x13, 0xdf, 0xe0, 0xb8, 0xe5, 0xee, 0x60, 0xfb,
	0xc8, 0xc0, 0xc9, 0xe1, 0xde, 0x0b, 0x6a, 0xeb, 0xa5, 0x91, 0x0f, 0x2e, 0xd1, 0x15, 0x68, 0x63,
	0xd5, 0xca, 0x31, 0xb3, 0x89, 0x77, 0x14, 0xa9, 0x99, 0xd8, 0xc8, 0xed, 0xb8, 0x67, 0xc3, 0x48,
	0x92, 0x1c, 0x36, 0xb3, 0x73, 0x92, 0xc9, 0xf6, 0xf5, 0x79, 0x7d, 0x7a, 0xdf, 0x73, 0x69, 0xf8,
	0xf6, 0x6d, 0x75, 0xb0, 0xf3, 0xee, 0x60, 0xbb, 0xfa, 0xe9, 0xfb, 0xfe, 0x27, 0x83, 0xb1, 0xe0,
	0xf7, 0x83, 0xe5, 0x3f, 0xfe, 0xe1, 0xf2, 0x27, 0xfd, 0x6a, 0x67, 0xdf, 0xd0, 0xc0, 0x45, 0x9c,
	0xeb, 0xa6, 0xb6, 0x5d, 0xf6, 0x37, 0x05, 0x5b, 0x1a, 0xc2, 0xa1, 0xe6, 0xf2, 0x60, 0x2c, 0x58,
	0xbf, 0xa3, 0x39, 0xd4, 0x40, 0xcc, 0xae, 0x11, 0x1a, 0x66, 0x8e, 0x2f, 0x34, 0xcc, 0x1a, 0x47,
	0x68, 0x58, 0xfd, 0x2f, 0x8a, 0xb4, 0x1e, 0xac, 0x13, 0x1c, 0x3c, 0x16, 0x57, 0xd2, 0xfb, 0x75,
	0x98, 0x03, 0xf6, 0x30, 0xcf, 0xbe, 0x87, 0xfb, 0x41, 0x86, 0x71, 0x5a, 0xd6, 0xec, 0x67, 0xba,
	0x25, 0x48, 0x2c, 0x70, 0x8b, 0x78, 0xcd, 0xdc, 0x88, 0x72, 0x45, 0x12, 0x48, 0xe4, 0xcb, 0x8f,
	0x4d, 0x18, 0xb2, 0xd6, 0xb0, 0x23, 0x9d, 0x73, 0x12, 0xe6, 0xae, 0xac, 0x82, 0xdd, 0xec, 0x9d,
	0x52, 0xcc, 0xb4, 0x29, 0x6b, 0xfc, 0xd3, 0xa6, 0xea, 0x4d, 0x8a, 0xb4, 0x01, 0x7c, 0x57, 0x70,
	0x32, 0x6f, 0x42, 0x52, 0x40, 0x26, 0x35, 0xff, 0x0b, 0x67, 0x4c, 0x30, 0x51, 0xc6, 0xd4, 0x33,
	0x1b, 0xb6, 0xe5, 0x06, 0x4f, 0xba, 0x96, 0x1b, 0x3c, 0x13, 0x59, 0x6e, 0x30, 0x32, 0xc0, 0xdc,
	0xe9, 0x25, 0xf2, 0x34, 0xf1, 0x53, 0xe8, 0xdc, 0xff, 0xf5, 0xa2, 0xbc, 0x09, 0x47, 0xeb, 0xa9,
	0xaf, 0x78, 0x5b, 0x46, 0xc9, 0x73, 0x65, 0xd0, 0x21, 0x41, 0x29, 0x52, 0xbb, 0x39, 0x2e, 0xc4,
	0x98, 0x46, 0x6b, 0x7a, 0x92, 0x22, 0x3d, 0x0f, 0xbe, 0x23, 0xa4, 0xe0, 0xd8, 0xe8, 0x0c, 0x27,
	0xea, 0x75, 0x3b, 0x0b, 0xcc, 0xd9, 0xd8, 0x1c, 0x4f, 0x04, 0xc3, 0xe1, 0xd1, 0x7d, 0xf2, 0xe4,
	0xd7, 0xf2, 0x36, 0x38, 0xd7, 0xf2, 0x04, 0x3d, 0xd8, 0xa4, 0x94, 0x6b, 0xb6, 0x19, 0xde, 0x8f,
	0xaa, 0x65, 0x1b, 0x9d, 0xce, 0x79, 0xf9, 0xd8, 0x13, 0x05, 0x57, 0x15, 0x5b, 0xcd, 0xf8, 0xe0,
	0x25, 0xa3, 0xcf, 0x53, 0xd8, 0x45, 0xbd, 0x2d, 0xcc, 0x51, 0xc0, 0x4c, 0x6b, 0x6d, 0x91, 0x3e,
	0x0a, 0x88, 0x93, 0x49, 0xf5, 0xc1, 0x5c, 0x39, 0x63, 0x9e, 0x49, 0xb4, 0x46, 0x42, 0x9f, 0x0d,
	0xac, 0x32, 0xe6, 0x11, 0x59, 0xc6, 0x9c, 0xc9, 0x75, 0x1e, 0x61, 0x0c, 0x82, 0x4c, 0x27, 0xa8,
	0x5d, 0xc7, 0x59, 0x86, 0x7a, 0x8d, 0x73, 0xd7, 0x11, 0xbe, 0x62, 0x86, 0xee, 0xd9, 0x28, 0xf4,
	0x5d, 0xad, 0x48, 0x4f, 0x9b, 0xa1, 0x7b, 0x19, 0x73, 0x0e, 0x04, 0x9d, 0x34, 0x28, 0xf3, 0x0f,
	0x5f, 0x3b, 0x3c, 0xf2, 0xc9, 0x59, 0xf5, 0xe8, 0x91, 0xa1, 0xc1, 0x93, 0x6a, 0x6b, 0x5b, 0xb2,
	0xff, 0x33, 0x1d, 0xf2, 0xe5, 0x49, 0x33, 0x80, 0xaf, 0x20, 0xb1, 0x34, 0x9e, 0x0b, 0x60, 0xeb,
	0x80, 0x62, 0xe9, 0xc2, 0x91, 0x73, 0x9f, 0xa8, 0x17, 0x3e, 0x36, 0x4d, 0x0c, 0x09, 0x9a, 0x99,
	0x28, 0x13, 0xa4, 0x37, 0xca, 0xd4, 0x63, 0xeb, 0x48, 0x54, 0x8e, 0x05, 0x13, 0x91, 0x18, 0x73,
	0x60, 0xd8, 0x00, 0x8a, 0x39, 0xda, 0xb1, 0x8e, 0xa1, 0x5b, 0xdd, 0x28, 0xb6, 0x36, 0x80, 0xd5,
	0x55, 0x8a, 0xb4, 0x12, 0x54, 0x0a, 0x6e, 0xea, 0x20, 0x96, 0xaa, 0xbd, 0x87, 0x86, 0xcf, 0xb7,
	0x9a, 0x91, 0x99, 0x65, 0x31, 0x8f, 0x7a, 0x41, 0xb1, 0xb3, 0xc5, 0xcc, 0xa2, 0x68, 0x3a, 0xec,
	0xdb, 0x53, 0x8a, 0x24, 0x82, 0x15, 0x82, 0x2b, 0x7d, 0xdd, 0x58, 0x42, 0x6c, 0xda, 0x5f, 0x3c,
	0xa0, 0xe4, 0xb5, 0xe6, 0xd0, 0x8c, 0x55, 0x9b, 0x80, 0x55, 0x33, 0x2e, 0x1b, 0x71, 0x27, 0x9c,
	0x58, 0xaa, 0x76, 0xdc, 0x18, 0xbe, 0x75, 0xcb, 0x45, 0xfe, 0x8f, 0x7b, 0xc1, 0x5c, 0xb7, 0x36,
	0x33, 0x1a, 0x90, 0x0e, 0x0d, 0x78, 0x46, 0x91, 0xaa, 0x80, 0x28, 0xa4, 0xa0, 0xb0, 0x1b, 0x5b,
	0x88, 0x0e, 0xf4, 0x64, 0x81, 0x39, 0xaf, 0x45, 0x1b, 0x63, 0xc1, 0x06, 0x79, 0x46, 0x03, 0xc6,
	0xe7, 0xd7, 0xd7, 0xb9, 0xf8, 0xf5, 0x25, 0xe3, 0xf2, 0xeb, 0x8c, 0x3b, 0x2f, 0x67, 0xdd, 0xf9,
	0x58, 0xcb, 0x82, 0xab, 0xec, 0x7e, 0x7c, 0x3c, 0xf9, 0x2e, 0x9b, 0x6c, 0x0e, 0x9c, 0x5d, 0x7b,
	0xa3, 0x1d, 0xf8, 0xb7, 0xcb, 0x75, 0xbb, 0x48, 0xbc, 0xae, 0x23, 0x07, 0x93, 0xfd, 0x9f, 0xa5,
	0x70, 0xdd, 0xce, 0x16, 0x33, 0x86, 0x2b, 0x9d, 0xae, 0xdb, 0x8d, 0xbe, 0x6e, 0x2c, 0x21, 0x66,
	0xeb, 0x2b, 0x2f, 0x28, 0x0e, 0x44, 0xc2, 0xe1, 0x6d, 0xc1, 0xfa, 0x9d, 0x33, 0x76, 0x6b, 0x7c,
	0x76, 0xab, 0x86, 0xda, 0xfc, 0xc0, 0x6b, 0x79, 0x4f, 0x28, 0xd2, 0x63, 0xd4, 0xe6, 0xc7, 0xbc,
	0xe1, 0x4f, 0xf7, 0xa9, 0x5d, 0x67, 0xb4, 0x81, 0xd3, 0x6a, 0xdb, 0xe5, 0xe4, 0xe9, 0xfd, 0x46,
	0x81, 0xb5, 0x03, 0x62, 0xb2, 0xcb, 0x8d, 0xf6, 0x62, 0x29, 0x6e, 0xec, 0xa2, 0x41, 0x8a, 0x17,
	0x94, 0xb8, 0x34, 0x99, 0x51, 0xa1, 0x34, 0x5e, 0xff, 0xe6, 0x4e, 0x60, 0x37, 0xa6, 0x10, 0x1d,
	0xfa, 0x2f, 0x59, 0x60, 0x36, 0xa9, 0xfb, 0xb2, 0xce, 0x60, 0x79, 0xf7, 0x8c, 0x02, 0xcd, 0x38,
	0xfe, 0x34, 0x38, 0xfe, 0xff, 0xc4, 0x51, 0x96, 0x06, 0x20, 0xc5, 0xfe, 0x9c, 0x53, 0xa4, 0x8b,
	0x1c, 0x65, 0x6b, 0x4e, 0x72, 0x86, 0x40, 0x1a, 0x20, 0xbf, 0x91, 0xa0, 0xa8, 0x7e, 0xfa, 0xbe,
	0x76, 0xa6, 0xdb, 0x00, 0x0f, 0xdd, 0xe8, 0x5f, 0x51, 0xe6, 0x57, 0xdb, 0x4e, 0xa9, 0x7d, 0x37,
	0xb5, 0xbe, 0xe3, 0x78, 0xc7, 0x4d, 0xbb, 0x71, 0x55, 0xfb, 0xe9, 0x31, 0xac, 0xab, 0xaa, 0xd2,
	0xae, 0x5e, 0xbf, 0x8a, 0xf7, 0xde, 0xf4, 0x50, 0x01, 0x5f, 0xf1, 0xc3, 0xf4, 0x35, 0x74, 0xa3,
	0xc3, 0xd6, 0x0d, 0x5d, 0x4b, 0x55, 0xda, 0xe9, 0xbc, 0x69, 0xca, 0xda, 0x91, 0x93, 0xff, 0x4e,
	0x2d, 0x11, 0xe7, 0x19, 0xa3, 0x1f, 0x39, 0xb7, 0x7f, 0xf8, 0xb3, 0x36, 0xcb, 0xd2, 0xfd, 0xce,
	0x0b, 0xa0, 0xbd, 0xfa, 0xd4, 0x37, 0x73, 0x1b, 0x98, 0x45, 0xd1, 0xf9, 0x6e, 0x8b, 0xa2, 0x04,
	0x9b, 0x87, 0xe1, 0x09, 0x0d, 0x72, 0xe4, 0xdf, 0x85, 0x4f, 0x2e, 0x7c, 0x25, 0xc6, 0x52, 0xcb,
	0x04, 0x05, 0x6c, 0x7d, 0xd8, 0xcf, 0x81, 0xdc, 0x66, 0x79, 0xb7, 0x71, 0xb9, 0x48, 0x29, 0x87,
	0x92, 0x97, 0xca, 0x46, 0x21, 0x5e, 0xc5, 0x16, 0xab, 0x3a, 0xbe, 0xf2, 0xe4, 0x6d, 0x45, 0x6a,
	0x14, 0xe8, 0x5e, 0xc4, 0x37, 0x4d, 0xb9, 0x34, 0x4d, 0x76, 0x53, 0xb0, 0x39, 0xb4, 0x5d, 0x8e,
	0x27, 0xfc, 0x78, 0x95, 0xed, 0xee, 0x60, 0xbb, 0x76, 0xf6, 0xa6, 0xd6, 0xd1, 0x3b, 0xfc, 0xf3,
	0xfd, 0x5a, 0xff, 0x51, 0x7c, 0x25, 0x98, 0xda, 0x76, 0x20, 0x79, 0x65, 0xe0, 0xee, 0x60, 0xfb,
	0xc8, 0xf1, 0x5e, 0xed, 0xec, 0x20, 0xda, 0xf0, 0x3b, 0xfd, 0xee, 0xa6, 0x50, 0x73, 0xc3, 0x7b,
	0x95, 0xef, 0xea, 0xd6, 0xeb, 0xbd, 0x00, 0xfd, 0x19, 0x34, 0xf8, 0x48, 0xb8, 0xc1, 0x1c, 0xbc,
	0x67, 0xec, 0xc1, 0xbf, 0x64, 0x55, 0xa7, 0x07, 0x4f, 0xf5, 0x22, 0xbe, 0xa9, 0x9d, 0xf8, 0xec,
	0x3e, 0x0d, 0x9e, 0xfa, 0x0c, 0x0c, 0x00, 0x60, 0xe1, 0x42, 0xfc, 0x81, 0xce, 0x54, 0x81, 0x02,
	0x8b, 0x8b, 0xc7, 0x24, 0x64, 0x80, 0xaa, 0xae, 0xf7, 0x69, 0x7d, 0x82, 0x78, 0x07, 0xdc, 0xa7,
	0x05, 0x16, 0x17, 0x8f, 0x89, 0x5f, 0x80, 0xaa, 0xee, 0x7b, 0x13, 0x14, 0xd9, 0x39, 0x9e, 0x9e,
	0xdb, 0x67, 0xf4, 0x9e, 0xed, 0xec, 0x48, 0xd3, 0xbd, 0x36, 0x5d, 0xf8, 0x0a, 0x07, 0xc2, 0xfb,
	0x0d, 0xa1, 0xb8, 0x71, 0x2b, 0xec, 0x6a, 0x33, 0x63, 0xc7, 0x33, 0x51, 0xc7, 0xb9, 0x91, 0x4d,
	0xdc, 0xf1, 0xdc, 0x83, 0xfb, 0x66, 0x62, 0x0a, 0xbc, 0x81, 0x36, 0xe9, 0x98, 0x82, 0x09, 0x74,
	0x32, 0xee, 0x61, 0x5b, 0x70, 0x25, 0xc8, 0xda, 0x1e, 0x0a, 0x27, 0xe4, 0x18, 0x6d, 0xf1, 0x08,
	0x48, 0xcc, 0xc3, 0xe9, 0x40, 0xc3, 0x77, 0x0e, 0x6a, 0x03, 0x17, 0x02, 0x04, 0x6a, 0x06, 0xd2,
	0x6e, 0xa4, 0x16, 0x4b, 0x0d, 0xe1, 0xda, 0x81, 0x61, 0x96, 0x7b, 0xf9, 0x93, 0x97, 0xde, 0xe5,
	0x34, 0x9b, 0x4c, 0x7d, 0x0f, 0xb3, 0x89, 0xc9, 0xf0, 0x74, 0xf5, 0x30, 0x04, 0x1b, 0x32, 0x76,
	0xe4, 0x61, 0x0a, 0x6d, 0x84, 0x98, 0x7e, 0x97, 0x32, 0xbb, 0x73, 0xcb, 0x8d, 0xc3, 0xc4, 0xd1,
	0x7c, 0x68, 0x39, 0x1a, 0xd2, 0x00, 0xae, 0xa1, 0xc2, 0x29, 0xcc, 0x5e, 0x74, 0x1b, 0x89, 0x15,
	0x4c, 0x15, 0xd9, 0x63, 0x29, 0x2a, 0x67, 0x2d, 0xf5, 0xbd, 0xb9, 0x66, 0xae, 0x93, 0x75, 0xed,
	0xdc, 0x0b, 0xce, 0x38, 0x1b, 0xe5, 0x7b, 0x51, 0x8a, 0x3a, 0x9b, 0x6e, 0xe6, 0x92, 0x60, 0x47,
	0xa7, 0x9c, 0x65, 0x4c, 0x34, 0xe5, 0xcc, 0x96, 0xde, 0x95, 0x39, 0x99, 0xf4, 0xae, 0x55, 0x66,
	0x92, 0x5e, 0x96, 0x75, 0x73, 0x9e, 0x91, 0xa4, 0x67, 0xb6, 0xb4, 0xe5, 0xe8, 0x55, 0x1a, 0x31,
	0x39, 0x15, 0x62, 0x93, 0x98, 0xdc, 0xcc, 0x09, 0x43, 0x3f, 0x8d, 0xa8, 0xbc, 0xd6, 0x35, 0x39,
	0x0e, 0xf1, 0x85, 0x4d, 0x8e, 0x23, 0xa9, 0x53, 0xae, 0xa9, 0x71, 0xb5, 0x4c, 0xaa, 0x5f, 0x8e,
	0x95, 0xda, 0x49, 0xa7, 0xfa, 0x41, 0xe3, 0xfb, 0x16, 0x8c, 0xc9, 0xf2, 0x5b, 0x65, 0x86, 0xfa,
	0x80, 0xc2, 0x97, 0x84, 0xfa, 0x26, 0xbe, 0xf8, 0xb7, 0x11, 0xd2, 0x57, 0xeb, 0x33, 0x7f, 0xb0,
	0x58, 0xb0, 0x49, 0x9a, 0x43, 0xdf, 0xf8, 0x2f, 0x18, 0x7b, 0xf3, 0x22, 0xf1, 0x75, 0x33, 0xee,
	0x60, 0x54, 0x77, 0xb0, 0x9a, 0x59, 0x68, 0xf1, 0x2c, 0xcd, 0xc7, 0x2a, 0x60, 0xe9, 0xab, 0x25,
	0x85, 0xf6, 0x19, 0x07, 0x39, 0x35, 0xeb, 0x4e, 0x73, 0x71, 0x61, 0xa3, 0x9c, 0x70, 0x04, 0x1e,
	0x96, 0x73, 0xf8, 0x75, 0x06, 0x9d, 0x94, 0x61, 0x35, 0x9c, 0xfa, 0xde, 0xe1, 0xdf, 0x32, 0xde,
	0xa1, 0x9c, 0x31, 0xc6, 0xee, 0x18, 0x55, 0xd4, 0x05, 0x13, 0x41, 0x1c, 0x86, 0x22, 0x81, 0xc7,
	0xfe, 0xa2, 0xc8, 0x4e, 0x9c, 0xe9, 0xe3, 0x30, 0x7c, 0xaf, 0x80, 0x1c, 0x13, 0xa7, 0xf4, 0xc4,
	0x72, 0xd5, 0xdf, 0x51, 0xa4, 0xd5, 0xe0, 0x19, 0x21, 0x85, 0x50, 0xa4, 0x14, 0x27, 0xe2, 0x89,
	0xfe, 0x37, 0xbe, 0xe5, 0x8c, 0xb4, 0x7c, 0x15, 0x19, 0xca, 0x19, 0xcd, 0x1f, 0xf5, 0x5d, 0x8d,
	0x6a, 0x45, 0x7a, 0x06, 0x3c, 0x25, 0xb8, 0x91, 0x4d, 0x5c, 0x44, 0x0e, 0xcf, 0xb1, 0x1e, 0xc8,
	0xd2, 0xde, 0x2f, 0x8d, 0xd7, 0x5c, 0xf0, 0xa4, 0x2b, 0xd2, 0x30, 0x43, 0xec, 0xd1, 0xcd, 0x6c,
	0x0d, 0xc8, 0x0c, 0x6e, 0x37, 0x82, 0xee, 0x7c, 0x7c, 0xb5, 0x23, 0x86, 0x88, 0x7e, 0x3a, 0xa3,
	0x09, 0xc7, 0x19, 0x43, 0x37, 0x3f, 0x54, 0x8f, 0x1e, 0x49, 0x9e, 0xde, 0xef, 0x8f, 0xea, 0xa4,
	0xc5, 0x15, 0x8d, 0x7d, 0x53, 0x27, 0xe1, 0xc5, 0x85, 0x36, 0x76, 0xe9, 0xad, 0xa8, 0x15, 0xed,
	0x7e, 0x0e, 0xe4, 0x6f, 0x0e, 0xc5, 0x13, 0x52, 0x43, 0x43, 0xa4, 0x39, 0x9e, 0xe6, 0x34, 0xc3,
	0x0d, 0xce, 0x34, 0xc3, 0xc9, 0x91, 0xbb, 0xba, 0x58, 0x91, 0x66, 0x83, 0x42, 0x81, 0x1d, 0x2a,
	0xff, 0x95, 0x17, 0xdf, 0x03, 0x6a, 0x40, 0xa6, 0xbe, 0x83, 0x58, 0xcb, 0x38, 0x88, 0x39, 0x8c,
	0xf1, 0xc3, 0x58, 0x30, 0x0b, 0x53, 0xc9, 0x81, 0xfd, 0xd6, 0xe5, 0xb4, 0xd3, 0x67, 0xce, 0x50,
	0xa2, 0x48, 0x10, 0x14, 0x09, 0x36, 0xde, 0xf0, 0xdf, 0x64, 0x83, 0x2c, 0xfc, 0xd3, 0x8c, 0xe6,
	0xb1, 0x74, 0xd1, 0xd1, 0x3c, 0x41, 0x99, 0x3e, 0x2f, 0xf3, 0x2c, 0x7d, 0x26, 0x14, 0x8b, 0x11,
	0x62, 0x2c, 0x75, 0x26, 0x94, 0xbe, 0x79, 0xda, 0x02, 0xa3, 0xf7, 0x05, 0xa8, 0x38, 0xdc, 0x4b,
	0xbf, 0x2f, 0x40, 0xc5, 0xe1, 0xe4, 0xa3, 0x6e, 0x51, 0xf8, 0x63, 0x20, 0x23, 0x1c, 0x69, 0x8c,
	0x90, 0x29, 0x40, 0xa1, 0x22, 0xe5, 0x09, 0x08, 0x20, 0xa2, 0x7f, 0x03, 0xe8, 0x5f, 0xf8, 0x0c,
	0xc8, 0x6e, 0x88, 0xd4, 0xc7, 0x37, 0x87, 0x9a, 0x77, 0x12, 0x96, 0x20, 0x5f, 0x6e, 0x02, 0xd1,
	0x3d, 0xb6, 0x5a, 0xcf, 0xf9, 0x91, 0x63, 0xb7, 0xb5, 0x23, 0x17, 0x03, 0x26, 0x9c, 0x4e, 0x6a,
	0xcb, 0x32, 0xae, 0xd2, 0x58, 0x68, 0xad, 0x89, 0x43, 0x32, 0x2e, 0x6a, 0x91, 0xd7, 0x5a, 0x1a,
	0x7f, 0x1b, 0x14, 0xd4, 0xb7, 0xc4, 0x62, 0x72, 0x73, 0x82, 0xbd, 0x8e, 0xbe, 0x46, 0x91, 0x5e,
	0x10, 0x6c, 0x45, 0x62, 0x39, 0x21, 0x2b, 0x5a, 0x75, 0xc6, 0x89, 0x44, 0xb8, 0xbf, 0xbb, 0x83,
	0xed, 0xc9, 0xcf, 0xfb, 0x87, 0x06, 0xce, 0x0f, 0xf7, 0x5c, 0xd2, 0xae, 0xf6, 0xe0, 0xa2, 0x80,
	0xad, 0x39, 0xac, 0xa5, 0x4d, 0x70, 0xb6, 0x61, 0xc2, 0xd9, 0x74, 0x5f, 0x73, 0xe5, 0x7a, 0x94,
	0x73, 0x00, 0xf9, 0x0d, 0xf2, 0xf6, 0x60, 0x4b, 0x18, 0xbf, 0x62, 0x1c, 0x27, 0x33, 0x85, 0xb7,
	0x14, 0xe9, 0x07, 0x02, 0x5b, 0x22, 0x6e, 0xc2, 0x07, 0x0b, 0x46, 0x5a, 0x3b, 0x92, 0xb7, 0x7a,
	0xe9, 0x31, 0xe2, 0x5c, 0xff, 0x64, 0xd7, 0x37, 0xda, 0x91, 0x8b, 0x78, 0xb0, 0x68, 0xbb, 0xbd,
	0x63, 0xa4, 0x7b, 0xef, 0xf0, 0xa7, 0xfb, 0xd4, 0x9e, 0x2f, 0xd5, 0x03, 0xa7, 0xcc, 0x2b, 0x2c,
	0x70, 0xf3, 0x00, 0xdb, 0x37, 0xdc, 0x0c, 0xf2, 0x0d, 0xf4, 0xe8, 0xf9, 0x06, 0xda, 0x44, 0x64,
	0x4b, 0x8c, 0x37, 0x53, 0x30, 0x6a, 0x46, 0x6f, 0x4c, 0x15, 0xf8, 0x23, 0x73, 0x9a, 0x86, 0xb7,
	0xef, 0xd1, 0x9d, 0x05, 0xc6, 0x34, 0x6d, 0x0d, 0x21, 0x0a, 0x72, 0x91, 0x77, 0x07, 0xdb, 0xd5,
	0xa3, 0xed, 0xfe, 0x0d, 0x72, 0xb8, 0xc9, 0xe6, 0x3c, 0xdd, 0x99, 0x60, 0xcc, 0xe9, 0xde, 0xb4,
	0x4c, 0x14, 0x3e, 0x6c, 0xf7, 0xbc, 0x22, 0xad, 0xb1, 0x4c, 0xd4, 0x0a, 0xfc, 0x0d, 0xac, 0x8b,
	0x77, 0x07, 0xdb, 0xf1, 0x4f, 0x75, 0xf0, 0x7d, 0xf5, 0xc6, 0x0d, 0xb5, 0xed, 0x94, 0x76, 0xf2,
	0x76, 0xf2, 0x42, 0x3f, 0x3e, 0x27, 0x63, 0x37, 0x60, 0x07, 0x38, 0x50, 0x14, 0x6f, 0x89, 0x46,
	0x23, 0xb1, 0x84, 0xdc, 0x20, 0xd5, 0x63, 0xa3, 0x90, 0x8f, 0x76, 0x47, 0xb6, 0x2a, 0xd2, 0x1b,
	0x82, 0xa3, 0x50, 0xac, 0x25, 0x12, 0x89, 0x4e, 0x66, 0x24, 0x4f, 0xef, 0xc7, 0xc9, 0x09, 0xfa,
	0xf8, 0xbb, 0x7a, 0xd5, 0x43, 0x1d, 0x5a, 0xf7, 0x21, 0x3f, 0x49, 0xdc, 0x29, 0xf3, 0xb7, 0xe0,
	0xad, 0xf0, 0x32, 0x7f, 0x3c, 0x11, 0x89, 0x96, 0xf9, 0x5b, 0xcc, 0x94, 0x1e, 0x47, 0xb7, 0xd5,
	0xba, 0xba, 0x80, 0xb9, 0x02, 0xb1, 0x0e, 0x62, 0x1e, 0x49, 0x95, 0x47, 0xdf, 0xe2, 0xff, 0xc9,
	0xa1, 0xeb, 0x2e, 0x70, 0x19, 0x4e, 0xf8, 0x9d, 0xaa, 0x7e, 0xca, 0x7c, 0x27, 0xca, 0x6b, 0x68,
	0xb3, 0xab, 0x5d, 0xb3, 0xbf, 0x13, 0xa5, 0x1b, 0x70, 0x50, 0x2c, 0xb8, 0x60, 0xc9, 0x5f, 0xc3,
	0xb7, 0x4c, 0xb0, 0xe0, 0xe9, 0xe4, 0xe7, 0xb8, 0xf1, 0xfb, 0xb9, 0x69, 0x97, 0x8f, 0xae, 0x93,
	0x1d, 0x94, 0x08, 0x6e, 0x0c, 0xe2, 0xff, 0x87, 0x07, 0x14, 0x91, 0x3c, 0xce, 0x51, 0x62, 0xab,
	0xa9, 0xb0, 0x29, 0x3d, 0x29, 0x99, 0x85, 0x6b, 0xec, 0xb7, 0x40, 0x2d, 0x46, 0x27, 0xf3, 0x0c,
	0xd7, 0x45, 0xda, 0xa6, 0x48, 0xc8, 0x5e, 0x6e, 0xae, 0xf5, 0x64, 0x5a, 0xb7, 0xde, 0x1b, 0x6b,
	0x3d, 0x59, 0xb6, 0x35, 0x1e, 0x5d, 0x50, 0x00, 0x14, 0x1c, 0xd4, 0xe4, 0xff, 0xea, 0x01, 0xb3,
	0x6d, 0xc0, 0x99, 0x4c, 0x8c, 0x74, 0xc8, 0x75, 0xa9, 0x22, 0x95, 0x80, 0x39, 0x82, 0x93, 0xb8,
	0xfc, 0xef, 0x3d, 0xa0, 0x88, 0xa4, 0x38, 0x4d, 0x1b, 0xa9, 0xe6, 0x26, 0x20, 0xd5, 0x55, 0xf6,
	0xdb, 0xb8, 0x7c, 0xa9, 0xa5, 0xfa, 0x1e, 0xc5, 0xd9, 0x4e, 0x46, 0x24, 0xce, 0x36, 0xe0, 0x8c,
	0x38, 0xa7, 0x53, 0x9c, 0x1d, 0xc4, 0xe5, 0xff, 0xca, 0x81, 0xfc, 0x57, 0x13, 0x91, 0xe8, 0xc3,
	0x28, 0xcb, 0xe6, 0x9c, 0x99, 0x41, 0x90, 0xff, 0x8b, 0x07, 0x14, 0xd0, 0x90, 0x19, 0x11, 0x4b,
	0xe7, 0x8c, 0x97, 0xa5, 0x2c, 0x0a, 0x5d, 0xcd, 0x54, 0xf6, 0x87, 0x52, 0xc8, 0x8c, 0xd0, 0xd5,
	0x89, 0x25, 0xff, 0x37, 0x0f, 0x98, 0xe3, 0x00, 0xcf, 0x88, 0x5b, 0x3a, 0x03, 0x4f, 0x17, 0xf2,
	0x8a, 0x07, 0x9f, 0x02, 0xb9, 0xfa, 0x1c, 0xf3, 0x45, 0xfc, 0x3d, 0xf8, 0x0d, 0x07, 0x72, 0xa4,
	0x5d, 0xc1, 0x50, 0x38, 0xb8, 0x2d, 0x2c, 0x43, 0xf6, 0x51, 0x30, 0x13, 0x1e, 0x90, 0xdf, 0xf1,
	0xf9, 0x52, 0x15, 0xc5, 0xa3, 0x7c, 0x54, 0x91, 0x36, 0xc3, 0xc7, 0xf1, 0x6a, 0xa4, 0x5e, 0xab,
	0x9c, 0x54, 0xd3, 0xba, 0x3b, 0xd4, 0xc3, 0x3d, 0xe4, 0xca, 0xc9, 0xce, 0xbe, 0xe4, 0xf1, 0x4b,
	0xbe, 0x71, 0xd5, 0x7a, 0xff, 0xb7, 0x43, 0xc7, 0x3c, 0xf3, 0xe1, 0x23, 0x95, 0xd4, 0x27, 0x2b,
	0x77, 0xad, 0xac, 0x0c, 0x9a, 0x03, 0xed, 0xe3, 0x40, 0x51, 0x2d, 0xba, 0x3c, 0x82, 0x7a, 0x7e,
	0xd5, 0xcf, 0x5e, 0x0f, 0x6e, 0x2b, 0xd6, 0x91, 0x58, 0x3c, 0x46, 0x8d, 0x78, 0x94, 0x7f, 0x5d,
	0x91, 0x16, 0x40, 0xf2, 0x8a, 0x16, 0x4e, 0x6b, 0xf4, 0x31, 0xbf, 0xd0, 0xd8, 0x56, 0xf2, 0x65,
	0xf6, 0xb1, 0x11, 0xb5, 0x8b, 0x57, 0xbe, 0x4b, 0x29, 0xe0, 0x7b, 0x95, 0x28, 0x23, 0xb2, 0x9a,
	0x13, 0xe0, 0x35, 0x4e, 0x8f, 0x8d, 0x1a, 0x46, 0x1b, 0xb1, 0xcb, 0xcb, 0xfd, 0xb6, 0x11, 0xbb,
	0xbd, 0xfe, 0xce, 0xff, 0x10, 0x8d, 0x98, 0x7e, 0x02, 0xde, 0xc7, 0xfc, 0x42, 0x23, 0x7e, 0xd6,
	0xb7, 0x6a, 0x22, 0x23, 0x26, 0x09, 0x49, 0xfa, 0xc0, 0xbf, 0xe0, 0x40, 0x3e, 0xf3, 0xa6, 0x37,
	0x5c, 0xe8, 0xdc, 0xb9, 0xa2, 0x87, 0xbc, 0x68, 0xb4, 0xe2, 0x78, 0x94, 0xdf, 0x8a, 0xc7, 0x4b,
	0xbd, 0x09, 0xee, 0x63, 0x7e, 0xa1, 0xf1, 0x3e, 0x05, 0x27, 0x33, 0x5e, 0x44, 0x65, 0xfb, 0x03,
	0xbe, 0x36, 0x2a, 0xbb, 0x3c, 0xb7, 0x6c, 0xa3, 0xb2, 0xdb, 0x0b, 0xc0, 0x84, 0xca, 0xf4, 0x33,
	0xc0, 0x3e, 0xe6, 0x17, 0xa6, 0xb2, 0x30, 0x59, 0x2a, 0x5f, 0xe5, 0xf0, 0x62, 0x35, 0x35, 0x6c,
	0x96, 0x8e, 0x8e, 0x47, 0xcc, 0x7d, 0x8f, 0x8e, 0x5a, 0x1e, 0x8f, 0xf2, 0x6f, 0x29, 0xd2, 0x52,
	0x08, 0x69, 0xd2, 0xe2, 0xb5, 0x62, 0x9f, 0x0b, 0x0c, 0x0d, 0xbf, 0x02, 0x4e, 0x48, 0xac, 0xe1,
	0x1d, 0x0e, 0xe4, 0x52, 0x2f, 0x0a, 0xc1, 0xf9, 0x8e, 0x11, 0x59, 0x2f, 0x49, 0xf9, 0x16, 0xa4,
	0x2e, 0x8c, 0x47, 0xf9, 0x16, 0x45, 0x2a, 0x83, 0xc5, 0x8e, 0xd7, 0x88, 0xd4, 0xf6, 0x56, 0x9f,
	0x2b, 0x14, 0x8d, 0x77, 0x2d, 0x7c, 0x7e, 0x62, 0xe4, 0x36, 0x2e, 0x12, 0x7c, 0xaf, 0x12, 0xf5,
	0x13, 0x87, 0x7f, 0xe6, 0x40, 0x91, 0xfd, 0x85, 0x18, 0x9b, 0xbc, 0xb8, 0x3c, 0x13, 0x64, 0x93,
	0x17, 0xb7, 0x27, 0x66, 0xf8, 0x36, 0x4e, 0x91, 0x9e, 0x85, 0xbe, 0xd4, 0x0f, 0xcd, 0xf8, 0x46,
	0x29, 0x43, 0xd8, 0xad, 0x87, 0xeb, 0xee, 0x0d, 0x3b, 0x43, 0x29, 0xfe, 0xc1, 0xe1, 0x97, 0xed,
	0xd9, 0xd7, 0x39, 0x20, 0x9f, 0x82, 0x21, 0xd4, 0xbb, 0x2d, 0xbe, 0xc7, 0xc6, 0xac, 0x13, 0x8f,
	0xf2, 0x27, 0x38, 0x45, 0x7a, 0x1e, 0x2e, 0x64, 0xd1, 0x31, 0x2f, 0x4a, 0x22, 0x32, 0x37, 0x7a,
	0x31, 0x42, 0xf8, 0x65, 0xb8, 0x25, 0x2d, 0x08, 0x57, 0x1a, 0xd7, 0xb9, 0xc2, 0x53, 0x1e, 0xb4,
	0x38, 0x68, 0x7b, 0x32, 0xc1, 0x86, 0xb9, 0xeb, 0x3b, 0x1b, 0x36, 0xcc, 0xdd, 0xdf, 0x5d, 0xe0,
	0x6f, 0x72, 0x8a, 0xf4, 0x3a, 0x1c, 0xff, 0x8b, 0x13, 0xbe, 0xf1, 0x57, 0x45, 0x14, 0xd9, 0x0a,
	0xdf, 0x4c, 0x2f, 0x45, 0x2a, 0xdf, 0x25, 0x7f, 0xbd, 0x07, 0x55, 0x0e, 0xe4, 0x52, 0xd7, 0x96,
	0xdb, 0x94, 0x97, 0x7d, 0x42, 0xc1, 0xa6, 0xbc, 0xb6, 0x6b, 0xfd, 0xf9, 0xd3, 0x9c, 0x22, 0xfd,
	0x0b, 0x84, 0xd8, 0x1c, 0x92, 0x5b, 0x7b, 0xd0, 0xf7, 0x7d, 0x55, 0x4e, 0xd8, 0xdd, 0xc1, 0x76,
	0xf5, 0xf2, 0x81, 0xa1, 0xc1, 0xd3, 0x43, 0x03, 0x47, 0xfc, 0xf4, 0x8d, 0x4b, 0x43, 0x37, 0xbe,
	0xc6, 0xb5, 0xb1, 0xf4, 0x0b, 0x69, 0x92, 0xfe, 0x2e, 0x0f, 0x80, 0xce, 0xeb, 0xd9, 0x6d, 0x32,
	0xe0, 0x7a, 0xc5, 0xbe, 0x4d, 0x06, 0xdc, 0xef, 0x78, 0xe7, 0x07, 0x38, 0x45, 0x7a, 0x13, 0x1a,
	0x6f, 0x4c, 0xd4, 0x3b, 0x6e, 0x28, 0xf7, 0xad, 0x49, 0x59, 0x34, 0x4e, 0x52, 0x6c, 0x15, 0xee,
	0x9f, 0x14, 0xfc, 0x81, 0x03, 0xf9, 0xcc, 0x75, 0xeb, 0x36, 0xef, 0x6e, 0xbf, 0x8a, 0xdd, 0x57,
	0x5c, 0xd1, 0x18, 0x89, 0x34, 0x86, 0xe5, 0x8a, 0x60, 0x34, 0x54, 0xb1, 0x21, 0x91, 0x88, 0xd6,
	0x44, 0x1a, 0xf6, 0xf0, 0x1f, 0x71, 0x8a, 0xb4, 0x0c, 0xe6, 0xe2, 0x6b, 0xda, 0x31, 0xeb, 0x7d,
	0xf8, 0x87, 0x9b, 0xa8, 0x23, 0xac, 0xea, 0x61, 0xf0, 0x7e, 0x61, 0x55, 0xd9, 0x40, 0x46, 0xad,
	0xa3, 0x97, 0x4b, 0x5d, 0x9c, 0x6d, 0x13, 0x72, 0xf6, 0xaa, 0x73, 0x9b, 0x90, 0xdb, 0xee, 0xdb,
	0xe6, 0x7f, 0xc2, 0xe9, 0x2e, 0x2a, 0x17, 0xdf, 0xba, 0x8d, 0x51, 0x5c, 0x88, 0x7f, 0xd8, 0x2e,
	0x45, 0x67, 0xb0, 0xfc, 0x01, 0xff, 0xc6, 0x3d, 0x62, 0x49, 0x90, 0xa2, 0xb0, 0x6b, 0x41, 0x23,
	0xd3, 0xa3, 0x86, 0xbf, 0x73, 0xa0, 0xd0, 0x76, 0x85, 0x31, 0x7c, 0xd4, 0xd5, 0x37, 0x59, 0x57,
	0xdc, 0xfa, 0xfc, 0xa3, 0x57, 0x88, 0x47, 0xf9, 0x33, 0x9c, 0x22, 0xd5, 0xc0, 0x47, 0xc7, 0xb8,
	0x07, 0xd9, 0x37, 0x56, 0x05, 0x44, 0x80, 0x57, 0xf9, 0x34, 0x19, 0x75, 0xa3, 0x57, 0x1d, 0xef,
	0xbf, 0x91, 0xbc, 0x04, 0xf3, 0x10, 0x98, 0x4d, 0x6a, 0xed, 0x17, 0x6e, 0xf9, 0x16, 0x8d, 0x56,
	0x1c, 0x8f, 0xf2, 0xe7, 0x39, 0x45, 0xfa, 0x1e, 0x5c, 0x3a, 0xde, 0x0b, 0x99, 0x7c, 0xe3, 0xae,
	0x89, 0x68, 0xf0, 0x5d, 0x58, 0x37, 0x4e, 0x1a, 0x90, 0x09, 0x77, 0xbc, 0xf2, 0x5d, 0x73, 0xea,
	0x6d, 0x61, 0x0e, 0x15, 0xec, 0xce, 0x6c, 0xb7, 0xdb, 0x38, 0xdd, 0x99, 0xf3, 0xba, 0x23, 0xa7,
	0x3b, 0x73, 0xb9, 0x22, 0x87, 0xbf, 0xca, 0x29, 0xd2, 0x3a, 0xf8, 0xa8, 0xcb, 0x45, 0x39, 0x8c,
	0x13, 0x73, 0xbb, 0x49, 0x27, 0x79, 0x7a, 0xbf, 0xc3, 0x7b, 0x35, 0xc0, 0x6d, 0xf7, 0x82, 0xb6,
	0xb9, 0x37, 0x4c, 0x44, 0x00, 0xfd, 0x6d, 0x51, 0xc3, 0xb0, 0xef, 0xe7, 0xac, 0xad, 0x14, 0x4b,
	0x1c, 0x58, 0x19, 0x77, 0xb9, 0xc3, 0xc4, 0x16, 0xc2, 0xb9, 0xdd, 0xa9, 0xc1, 0xff, 0x12, 0x59,
	0x76, 0x41, 0x3b, 0xf4, 0xd9, 0x70, 0x4f, 0xfb, 0x68, 0xac, 0x36, 0x76, 0x35, 0x7d, 0x13, 0xa8,
	0x8b, 0x28, 0xd4, 0xc8, 0x3f, 0x00, 0x0a, 0xe9, 0x0a, 0xf3, 0x95, 0x87, 0x5a, 0x6a, 0xb2, 0xc8,
	0xc4, 0x4a, 0x8e, 0xeb, 0x65, 0x17, 0x36, 0xc9, 0x71, 0xbf, 0x7a, 0x81, 0xff, 0x35, 0xa7, 0x48,
	0x3f, 0x80, 0x65, 0xe3, 0x40, 0xdf, 0xdc, 0xe8, 0xf5, 0x4d, 0xa8, 0x36, 0x26, 0x97, 0xf0, 0x80,
	0xc8, 0x75, 0xce, 0xda, 0xc8, 0x48, 0x25, 0x53, 0x2e, 0x87, 0xeb, 0x1d, 0x93, 0x75, 0xe7, 0x61,
	0xef, 0x09, 0xc8, 0x14, 0xd9, 0x20, 0xf7, 0x4d, 0xa0, 0x2e, 0x26, 0x92, 0xef, 0x01, 0x11, 0xe9,
	0xb2, 0x07, 0xcc, 0x76, 0x9c, 0xc6, 0x85, 0x2c, 0x0d, 0xdc, 0x4e, 0x50, 0xfb, 0xf8, 0xb1, 0xaa,
	0xc4, 0xa3, 0xfc, 0x6f, 0x39, 0x45, 0xda, 0x0a, 0x97, 0x8f, 0x03, 0xf7, 0x18, 0x69, 0xef, 0x9b,
	0x48, 0x65, 0x44, 0xa9, 0xa8, 0x6f, 0xe7, 0xfd, 0xa7, 0x54, 0xa5, 0xf1, 0x49, 0x9d, 0x64, 0xe7,
	0x3d, 0x8e, 0xf3, 0x75, 0x8b, 0x46, 0x39, 0x8c, 0xe6, 0x9c, 0xe5, 0x3b, 0x0f, 0xf3, 0xf1, 0xbf,
	0xe1, 0x14, 0xe9, 0x0d, 0x58, 0x82, 0x8f, 0xf2, 0xf9, 0x49, 0x05, 0x3f, 0x3e, 0x78, 0xe6, 0x7b,
	0xde, 0x15, 0x8c, 0x6f, 0xc9, 0xd4, 0xce, 0x74, 0xab, 0xd7, 0xaf, 0x26, 0x07, 0x3a, 0x49, 0x4e,
	0x48, 0xdb, 0x29, 0xf5, 0x68, 0xbb, 0x76, 0xe2, 0x9a, 0x7a, 0xe5, 0xa3, 0xe4, 0x85, 0x7e, 0x7f,
	0x43, 0x68, 0xfb, 0x76, 0x44, 0xa6, 0x08, 0xff, 0xf6, 0x03, 0x20, 0x53, 0x14, 0xa3, 0x84, 0xd6,
	0x42, 0x3c, 0x74, 0x8e, 0xa8, 0x71, 0x3e, 0x64, 0x71, 0x0a, 0x0f, 0x66, 0x9d, 0x28, 0xf2, 0xf1,
	0x63, 0x55, 0x89, 0x47, 0xf9, 0xdf, 0x71, 0x8a, 0xf4, 0x23, 0x58, 0x31, 0xb6, 0xff, 0x56, 0x8f,
	0x1c, 0x50, 0x3b, 0x49, 0xe2, 0x8c, 0x6f, 0x82, 0xf5, 0x11, 0xdd, 0xc2, 0xf0, 0x41, 0xd0, 0x8d,
	0x9c, 0x61, 0x80, 0xbf, 0x60, 0x62, 0x03, 0x23, 0x03, 0x3a, 0x65, 0x6c, 0x40, 0x25, 0xdc, 0xa7,
	0x8c, 0x0d, 0xe8, 0x34, 0x6a, 0x3e, 0x49, 0x14, 0x72, 0x4c, 0x3a, 0x98, 0x39, 0xd6, 0xbe, 0x89,
	0x54, 0x46, 0x14, 0xfb, 0x80, 0x83, 0x7b, 0xb9, 0x07, 0xa1, 0x92, 0xe4, 0x20, 0x02, 0x8a, 0x36,
	0xf1, 0x9f, 0xef, 0x55, 0x1a, 0x23, 0x81, 0xff, 0xc1, 0x83, 0xd6, 0x84, 0x98, 0xd4, 0x66, 0xe7,
	0x9a, 0x90, 0x3d, 0xf3, 0xd9, 0xc7, 0x4e, 0x2d, 0x6a, 0x23, 0x4d, 0x4d, 0xf8, 0xe1, 0x57, 0x44,
	0xbd, 0xff, 0xc3, 0x29, 0xd2, 0x1e, 0x68, 0x4f, 0x8e, 0x26, 0xa7, 0x43, 0x8d, 0xbb, 0xb4, 0x7d,
	0x6f, 0xd8, 0xca, 0x87, 0x6e, 0x7c, 0x88, 0x9f, 0xac, 0x31, 0x2b, 0xda, 0x33, 0xc6, 0x90, 0x16,
	0x6b, 0x27, 0xfb, 0xfc, 0xbb, 0x23, 0xb1, 0x9d, 0xfa, 0xac, 0x00, 0x1d, 0xfe, 0x3e, 0x77, 0x46,
	0x3d, 0x7c, 0xd6, 0x1f, 0x8d, 0x34, 0x90, 0x0c, 0x32, 0x44, 0xdc, 0x9d, 0x30, 0xf4, 0x00, 0x48,
	0x4b, 0xb2, 0xd2, 0x8e, 0x78, 0x40, 0x01, 0x9b, 0x6d, 0x0c, 0x17, 0xa5, 0xa0, 0x20, 0x49, 0x45,
	0x1e, 0x9d, 0x7e, 0xb7, 0x39, 0x45, 0xda, 0x0c, 0xe7, 0xb8, 0x64, 0x2b, 0xfb, 0x9e, 0x4a, 0x45,
	0xb4, 0x68, 0xa4, 0xa1, 0xcc, 0x4f, 0x6e, 0x09, 0x46, 0x87, 0x71, 0x71, 0x8a, 0x74, 0xf2, 0xeb,
	0xae, 0x91, 0xbd, 0x87, 0x10, 0x49, 0x42, 0xb0, 0xf1, 0x41, 0x58, 0x36, 0x1d, 0xfb, 0x4e, 0x0f,
	0x28, 0x76, 0x7b, 0xcd, 0x02, 0x3e, 0xce, 0xc6, 0xa1, 0xee, 0xcf, 0x92, 0xf8, 0x96, 0x8c, 0xa3,
	0x56, 0x3c, 0xca, 0x7f, 0xce, 0x29, 0x92, 0x08, 0xe7, 0xa5, 0x78, 0x1c, 0xc3, 0x97, 0xaa, 0x00,
	0x11, 0xa3, 0x99, 0x7f, 0x10, 0xf2, 0x11, 0x42, 0x43, 0xaf, 0xe6, 0x04, 0xb1, 0x0f, 0x80, 0x7c,
	0x82, 0x02, 0x49, 0xfb, 0xfd, 0x15, 0x07, 0x80, 0x95, 0x14, 0x0c, 0x7d, 0x8e, 0x39, 0x9b, 0xb9,
	0x7b, 0xe8, 0x9b, 0x9f, 0xb2, 0x2c, 0x1e, 0xe5, 0xf7, 0x71, 0x8a, 0x54, 0x05, 0x4b, 0xb1, 0x5c,
	0xd0, 0xc9, 0x82, 0x64, 0x29, 0x32, 0x65, 0x09, 0xa2, 0x43, 0x1d, 0xac, 0xb9, 0x17, 0x3a, 0x04,
	0xf1, 0xe0, 0xff, 0x84, 0x67, 0xe6, 0x74, 0xe2, 0x97, 0x73, 0x66, 0x6e, 0x4b, 0xe7, 0x73, 0xce,
	0xcc, 0x1d, 0x79, 0x63, 0x6d, 0xa9, 0x50, 0x1b, 0xee, 0xfb, 0x54, 0xfb, 0xa0, 0xd5, 0x97, 0xb2,
	0x04, 0xa1, 0xb6, 0x09, 0x6e, 0xbc, 0x77, 0xd4, 0x8c, 0x79, 0xd7, 0x2f, 0x39, 0x90, 0xcf, 0xa4,
	0x00, 0xd9, 0xe6, 0xe0, 0xf6, 0x84, 0x2c, 0xdb, 0x1c, 0xdc, 0x99, 0x3d, 0xf4, 0xef, 0xd0, 0x76,
	0x05, 0x4e, 0x6f, 0xa5, 0x11, 0xf0, 0xb9, 0xc0, 0xf0, 0x12, 0x21, 0x9f, 0x06, 0x4e, 0xe9, 0x01,
	0xc7, 0x6f, 0x38, 0x90, 0xcf, 0xa4, 0x7f, 0xd8, 0x50, 0xb1, 0x27, 0xe3, 0xd8, 0x50, 0x71, 0x66,
	0x8e, 0xfc, 0x7b, 0xbc, 0xf3, 0x82, 0x36, 0xe1, 0x58, 0x54, 0x9c, 0x30, 0x84, 0xca, 0x16, 0x5f,
	0xfa, 0x38, 0xa3, 0x63, 0xf4, 0xff, 0x38, 0x00, 0xac, 0x6c, 0x03, 0x9b, 0x2a, 0x31, 0x29, 0x1f,
	0x36, 0x55, 0xb2, 0xa5, 0x28, 0x7c, 0xc9, 0x29, 0xd2, 0x4b, 0xb0, 0x54, 0xdd, 0xd7, 0xad, 0x7d,
	0x7d, 0x8e, 0x91, 0xaa, 0x3b, 0x47, 0x87, 0x7b, 0xda, 0x7d, 0xab, 0x70, 0x09, 0x51, 0xa2, 0xde,
	0x33, 0x43, 0xb7, 0x3f, 0xc4, 0x25, 0x77, 0x07, 0xdb, 0x87, 0xee, 0x7c, 0x92, 0xfc, 0xe8, 0x14,
	0xce, 0x8b, 0x4e, 0x76, 0xdd, 0x50, 0x5b, 0x7f, 0x46, 0x05, 0x47, 0xaf, 0xfa, 0xb6, 0xa4, 0x0d,
	0xe1, 0xca, 0x78, 0x22, 0x12, 0xd5, 0xb1, 0xfe, 0x03, 0x07, 0x0a, 0x6d, 0x9b, 0xde, 0x36, 0xa5,
	0x73, 0x26, 0x22, 0xd8, 0x94, 0xce, 0x65, 0xcf, 0x9c, 0x6f, 0xe5, 0x14, 0xa9, 0x02, 0x42, 0x7c,
	0xbb, 0x20, 0xc3, 0xce, 0x52, 0xbc, 0x4a, 0x4b, 0xd2, 0x9e, 0x91, 0xd7, 0xc1, 0x17, 0x24, 0x60,
	0xa6, 0x0a, 0x69, 0x65, 0x6a, 0xcd, 0x27, 0x9c, 0x22, 0x1d, 0xe2, 0xe0, 0x42, 0x50, 0x8c, 0xb2,
	0xc4, 0xc9, 0x16, 0xbe, 0x5f, 0x7a, 0x79, 0xa3, 0xbf, 0x2e, 0x52, 0x2f, 0x66, 0xae, 0xa8, 0x10,
	0x2b, 0x56, 0xf0, 0xa0, 0x72, 0x5b, 0x7d, 0x3c, 0x18, 0x0d, 0x55, 0xee, 0xaa, 0x12, 0x38, 0x8f,
	0x58, 0x14, 0x8c, 0x46, 0xc3, 0xa1, 0x7a, 0x94, 0x1a, 0x50, 0xf9, 0x76, 0x3c, 0xd2, 0x5c, 0xed,
	0x80, 0x6c, 0x7d, 0x0c, 0x2c, 0x06, 0x40, 0x8a, 0x86, 0x36, 0xc9, 0x7b, 0xa4, 0x96, 0xc4, 0x0e,
	0x38, 0x27, 0xdb, 0xe3, 0xcb, 0xd7, 0xff, 0x8a, 0xc4, 0x42, 0x3f, 0x46, 0xf5, 0xfc, 0x9e, 0x6d,
	0x45, 0xa0, 0x80, 0xa9, 0xf4, 0x6f, 0xb6, 0x16, 0x54, 0x54, 0xae, 0xa1, 0xf0, 0xfb, 0xd7, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x3a, 0xb6, 0xa9, 0x09, 0xd0, 0xab, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HelmManagerClient is the client API for HelmManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HelmManagerClient interface {
	//* common service
	Available(ctx context.Context, in *AvailableReq, opts ...grpc.CallOption) (*AvailableResp, error)
	//* repository service
	CreateRepository(ctx context.Context, in *CreateRepositoryReq, opts ...grpc.CallOption) (*CreateRepositoryResp, error)
	UpdateRepository(ctx context.Context, in *UpdateRepositoryReq, opts ...grpc.CallOption) (*UpdateRepositoryResp, error)
	GetRepository(ctx context.Context, in *GetRepositoryReq, opts ...grpc.CallOption) (*GetRepositoryResp, error)
	DeleteRepository(ctx context.Context, in *DeleteRepositoryReq, opts ...grpc.CallOption) (*DeleteRepositoryResp, error)
	ListRepository(ctx context.Context, in *ListRepositoryReq, opts ...grpc.CallOption) (*ListRepositoryResp, error)
	//* chart service
	ListChartV1(ctx context.Context, in *ListChartV1Req, opts ...grpc.CallOption) (*ListChartV1Resp, error)
	GetChartDetailV1(ctx context.Context, in *GetChartDetailV1Req, opts ...grpc.CallOption) (*GetChartDetailV1Resp, error)
	ListChartVersionV1(ctx context.Context, in *ListChartVersionV1Req, opts ...grpc.CallOption) (*ListChartVersionV1Resp, error)
	GetVersionDetailV1(ctx context.Context, in *GetVersionDetailV1Req, opts ...grpc.CallOption) (*GetVersionDetailV1Resp, error)
	DeleteChart(ctx context.Context, in *DeleteChartReq, opts ...grpc.CallOption) (*DeleteChartResp, error)
	DeleteChartVersion(ctx context.Context, in *DeleteChartVersionReq, opts ...grpc.CallOption) (*DeleteChartVersionResp, error)
	DownloadChart(ctx context.Context, in *DownloadChartReq, opts ...grpc.CallOption) (*httpbody.HttpBody, error)
	UploadChart(ctx context.Context, in *UploadChartReq, opts ...grpc.CallOption) (*UploadChartResp, error)
	GetChartRelease(ctx context.Context, in *GetChartReleaseReq, opts ...grpc.CallOption) (*GetChartReleaseResp, error)
	//* release service
	ListReleaseV1(ctx context.Context, in *ListReleaseV1Req, opts ...grpc.CallOption) (*ListReleaseV1Resp, error)
	GetReleaseDetailV1(ctx context.Context, in *GetReleaseDetailV1Req, opts ...grpc.CallOption) (*GetReleaseDetailV1Resp, error)
	InstallReleaseV1(ctx context.Context, in *InstallReleaseV1Req, opts ...grpc.CallOption) (*InstallReleaseV1Resp, error)
	UninstallReleaseV1(ctx context.Context, in *UninstallReleaseV1Req, opts ...grpc.CallOption) (*UninstallReleaseV1Resp, error)
	UpgradeReleaseV1(ctx context.Context, in *UpgradeReleaseV1Req, opts ...grpc.CallOption) (*UpgradeReleaseV1Resp, error)
	RollbackReleaseV1(ctx context.Context, in *RollbackReleaseV1Req, opts ...grpc.CallOption) (*RollbackReleaseV1Resp, error)
	ReleasePreview(ctx context.Context, in *ReleasePreviewReq, opts ...grpc.CallOption) (*ReleasePreviewResp, error)
	GetReleaseHistory(ctx context.Context, in *GetReleaseHistoryReq, opts ...grpc.CallOption) (*GetReleaseHistoryResp, error)
	GetReleaseManifest(ctx context.Context, in *GetReleaseManifestReq, opts ...grpc.CallOption) (*GetReleaseManifestResp, error)
	GetReleaseStatus(ctx context.Context, in *GetReleaseStatusReq, opts ...grpc.CallOption) (*CommonListResp, error)
	GetReleasePods(ctx context.Context, in *GetReleasePodsReq, opts ...grpc.CallOption) (*CommonListResp, error)
	ImportClusterRelease(ctx context.Context, in *ImportClusterReleaseReq, opts ...grpc.CallOption) (*ImportClusterReleaseResp, error)
}

type helmManagerClient struct {
	cc *grpc.ClientConn
}

func NewHelmManagerClient(cc *grpc.ClientConn) HelmManagerClient {
	return &helmManagerClient{cc}
}

func (c *helmManagerClient) Available(ctx context.Context, in *AvailableReq, opts ...grpc.CallOption) (*AvailableResp, error) {
	out := new(AvailableResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/Available", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) CreateRepository(ctx context.Context, in *CreateRepositoryReq, opts ...grpc.CallOption) (*CreateRepositoryResp, error) {
	out := new(CreateRepositoryResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/CreateRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) UpdateRepository(ctx context.Context, in *UpdateRepositoryReq, opts ...grpc.CallOption) (*UpdateRepositoryResp, error) {
	out := new(UpdateRepositoryResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/UpdateRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) GetRepository(ctx context.Context, in *GetRepositoryReq, opts ...grpc.CallOption) (*GetRepositoryResp, error) {
	out := new(GetRepositoryResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/GetRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) DeleteRepository(ctx context.Context, in *DeleteRepositoryReq, opts ...grpc.CallOption) (*DeleteRepositoryResp, error) {
	out := new(DeleteRepositoryResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/DeleteRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) ListRepository(ctx context.Context, in *ListRepositoryReq, opts ...grpc.CallOption) (*ListRepositoryResp, error) {
	out := new(ListRepositoryResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/ListRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) ListChartV1(ctx context.Context, in *ListChartV1Req, opts ...grpc.CallOption) (*ListChartV1Resp, error) {
	out := new(ListChartV1Resp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/ListChartV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) GetChartDetailV1(ctx context.Context, in *GetChartDetailV1Req, opts ...grpc.CallOption) (*GetChartDetailV1Resp, error) {
	out := new(GetChartDetailV1Resp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/GetChartDetailV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) ListChartVersionV1(ctx context.Context, in *ListChartVersionV1Req, opts ...grpc.CallOption) (*ListChartVersionV1Resp, error) {
	out := new(ListChartVersionV1Resp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/ListChartVersionV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) GetVersionDetailV1(ctx context.Context, in *GetVersionDetailV1Req, opts ...grpc.CallOption) (*GetVersionDetailV1Resp, error) {
	out := new(GetVersionDetailV1Resp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/GetVersionDetailV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) DeleteChart(ctx context.Context, in *DeleteChartReq, opts ...grpc.CallOption) (*DeleteChartResp, error) {
	out := new(DeleteChartResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/DeleteChart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) DeleteChartVersion(ctx context.Context, in *DeleteChartVersionReq, opts ...grpc.CallOption) (*DeleteChartVersionResp, error) {
	out := new(DeleteChartVersionResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/DeleteChartVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) DownloadChart(ctx context.Context, in *DownloadChartReq, opts ...grpc.CallOption) (*httpbody.HttpBody, error) {
	out := new(httpbody.HttpBody)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/DownloadChart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) UploadChart(ctx context.Context, in *UploadChartReq, opts ...grpc.CallOption) (*UploadChartResp, error) {
	out := new(UploadChartResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/UploadChart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) GetChartRelease(ctx context.Context, in *GetChartReleaseReq, opts ...grpc.CallOption) (*GetChartReleaseResp, error) {
	out := new(GetChartReleaseResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/GetChartRelease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) ListReleaseV1(ctx context.Context, in *ListReleaseV1Req, opts ...grpc.CallOption) (*ListReleaseV1Resp, error) {
	out := new(ListReleaseV1Resp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/ListReleaseV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) GetReleaseDetailV1(ctx context.Context, in *GetReleaseDetailV1Req, opts ...grpc.CallOption) (*GetReleaseDetailV1Resp, error) {
	out := new(GetReleaseDetailV1Resp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/GetReleaseDetailV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) InstallReleaseV1(ctx context.Context, in *InstallReleaseV1Req, opts ...grpc.CallOption) (*InstallReleaseV1Resp, error) {
	out := new(InstallReleaseV1Resp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/InstallReleaseV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) UninstallReleaseV1(ctx context.Context, in *UninstallReleaseV1Req, opts ...grpc.CallOption) (*UninstallReleaseV1Resp, error) {
	out := new(UninstallReleaseV1Resp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/UninstallReleaseV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) UpgradeReleaseV1(ctx context.Context, in *UpgradeReleaseV1Req, opts ...grpc.CallOption) (*UpgradeReleaseV1Resp, error) {
	out := new(UpgradeReleaseV1Resp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/UpgradeReleaseV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) RollbackReleaseV1(ctx context.Context, in *RollbackReleaseV1Req, opts ...grpc.CallOption) (*RollbackReleaseV1Resp, error) {
	out := new(RollbackReleaseV1Resp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/RollbackReleaseV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) ReleasePreview(ctx context.Context, in *ReleasePreviewReq, opts ...grpc.CallOption) (*ReleasePreviewResp, error) {
	out := new(ReleasePreviewResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/ReleasePreview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) GetReleaseHistory(ctx context.Context, in *GetReleaseHistoryReq, opts ...grpc.CallOption) (*GetReleaseHistoryResp, error) {
	out := new(GetReleaseHistoryResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/GetReleaseHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) GetReleaseManifest(ctx context.Context, in *GetReleaseManifestReq, opts ...grpc.CallOption) (*GetReleaseManifestResp, error) {
	out := new(GetReleaseManifestResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/GetReleaseManifest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) GetReleaseStatus(ctx context.Context, in *GetReleaseStatusReq, opts ...grpc.CallOption) (*CommonListResp, error) {
	out := new(CommonListResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/GetReleaseStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) GetReleasePods(ctx context.Context, in *GetReleasePodsReq, opts ...grpc.CallOption) (*CommonListResp, error) {
	out := new(CommonListResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/GetReleasePods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) ImportClusterRelease(ctx context.Context, in *ImportClusterReleaseReq, opts ...grpc.CallOption) (*ImportClusterReleaseResp, error) {
	out := new(ImportClusterReleaseResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/ImportClusterRelease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HelmManagerServer is the server API for HelmManager service.
type HelmManagerServer interface {
	//* common service
	Available(context.Context, *AvailableReq) (*AvailableResp, error)
	//* repository service
	CreateRepository(context.Context, *CreateRepositoryReq) (*CreateRepositoryResp, error)
	UpdateRepository(context.Context, *UpdateRepositoryReq) (*UpdateRepositoryResp, error)
	GetRepository(context.Context, *GetRepositoryReq) (*GetRepositoryResp, error)
	DeleteRepository(context.Context, *DeleteRepositoryReq) (*DeleteRepositoryResp, error)
	ListRepository(context.Context, *ListRepositoryReq) (*ListRepositoryResp, error)
	//* chart service
	ListChartV1(context.Context, *ListChartV1Req) (*ListChartV1Resp, error)
	GetChartDetailV1(context.Context, *GetChartDetailV1Req) (*GetChartDetailV1Resp, error)
	ListChartVersionV1(context.Context, *ListChartVersionV1Req) (*ListChartVersionV1Resp, error)
	GetVersionDetailV1(context.Context, *GetVersionDetailV1Req) (*GetVersionDetailV1Resp, error)
	DeleteChart(context.Context, *DeleteChartReq) (*DeleteChartResp, error)
	DeleteChartVersion(context.Context, *DeleteChartVersionReq) (*DeleteChartVersionResp, error)
	DownloadChart(context.Context, *DownloadChartReq) (*httpbody.HttpBody, error)
	UploadChart(context.Context, *UploadChartReq) (*UploadChartResp, error)
	GetChartRelease(context.Context, *GetChartReleaseReq) (*GetChartReleaseResp, error)
	//* release service
	ListReleaseV1(context.Context, *ListReleaseV1Req) (*ListReleaseV1Resp, error)
	GetReleaseDetailV1(context.Context, *GetReleaseDetailV1Req) (*GetReleaseDetailV1Resp, error)
	InstallReleaseV1(context.Context, *InstallReleaseV1Req) (*InstallReleaseV1Resp, error)
	UninstallReleaseV1(context.Context, *UninstallReleaseV1Req) (*UninstallReleaseV1Resp, error)
	UpgradeReleaseV1(context.Context, *UpgradeReleaseV1Req) (*UpgradeReleaseV1Resp, error)
	RollbackReleaseV1(context.Context, *RollbackReleaseV1Req) (*RollbackReleaseV1Resp, error)
	ReleasePreview(context.Context, *ReleasePreviewReq) (*ReleasePreviewResp, error)
	GetReleaseHistory(context.Context, *GetReleaseHistoryReq) (*GetReleaseHistoryResp, error)
	GetReleaseManifest(context.Context, *GetReleaseManifestReq) (*GetReleaseManifestResp, error)
	GetReleaseStatus(context.Context, *GetReleaseStatusReq) (*CommonListResp, error)
	GetReleasePods(context.Context, *GetReleasePodsReq) (*CommonListResp, error)
	ImportClusterRelease(context.Context, *ImportClusterReleaseReq) (*ImportClusterReleaseResp, error)
}

// UnimplementedHelmManagerServer can be embedded to have forward compatible implementations.
type UnimplementedHelmManagerServer struct {
}

func (*UnimplementedHelmManagerServer) Available(ctx context.Context, req *AvailableReq) (*AvailableResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Available not implemented")
}
func (*UnimplementedHelmManagerServer) CreateRepository(ctx context.Context, req *CreateRepositoryReq) (*CreateRepositoryResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRepository not implemented")
}
func (*UnimplementedHelmManagerServer) UpdateRepository(ctx context.Context, req *UpdateRepositoryReq) (*UpdateRepositoryResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRepository not implemented")
}
func (*UnimplementedHelmManagerServer) GetRepository(ctx context.Context, req *GetRepositoryReq) (*GetRepositoryResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRepository not implemented")
}
func (*UnimplementedHelmManagerServer) DeleteRepository(ctx context.Context, req *DeleteRepositoryReq) (*DeleteRepositoryResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRepository not implemented")
}
func (*UnimplementedHelmManagerServer) ListRepository(ctx context.Context, req *ListRepositoryReq) (*ListRepositoryResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRepository not implemented")
}
func (*UnimplementedHelmManagerServer) ListChartV1(ctx context.Context, req *ListChartV1Req) (*ListChartV1Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListChartV1 not implemented")
}
func (*UnimplementedHelmManagerServer) GetChartDetailV1(ctx context.Context, req *GetChartDetailV1Req) (*GetChartDetailV1Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChartDetailV1 not implemented")
}
func (*UnimplementedHelmManagerServer) ListChartVersionV1(ctx context.Context, req *ListChartVersionV1Req) (*ListChartVersionV1Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListChartVersionV1 not implemented")
}
func (*UnimplementedHelmManagerServer) GetVersionDetailV1(ctx context.Context, req *GetVersionDetailV1Req) (*GetVersionDetailV1Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVersionDetailV1 not implemented")
}
func (*UnimplementedHelmManagerServer) DeleteChart(ctx context.Context, req *DeleteChartReq) (*DeleteChartResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteChart not implemented")
}
func (*UnimplementedHelmManagerServer) DeleteChartVersion(ctx context.Context, req *DeleteChartVersionReq) (*DeleteChartVersionResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteChartVersion not implemented")
}
func (*UnimplementedHelmManagerServer) DownloadChart(ctx context.Context, req *DownloadChartReq) (*httpbody.HttpBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DownloadChart not implemented")
}
func (*UnimplementedHelmManagerServer) UploadChart(ctx context.Context, req *UploadChartReq) (*UploadChartResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadChart not implemented")
}
func (*UnimplementedHelmManagerServer) GetChartRelease(ctx context.Context, req *GetChartReleaseReq) (*GetChartReleaseResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChartRelease not implemented")
}
func (*UnimplementedHelmManagerServer) ListReleaseV1(ctx context.Context, req *ListReleaseV1Req) (*ListReleaseV1Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListReleaseV1 not implemented")
}
func (*UnimplementedHelmManagerServer) GetReleaseDetailV1(ctx context.Context, req *GetReleaseDetailV1Req) (*GetReleaseDetailV1Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReleaseDetailV1 not implemented")
}
func (*UnimplementedHelmManagerServer) InstallReleaseV1(ctx context.Context, req *InstallReleaseV1Req) (*InstallReleaseV1Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InstallReleaseV1 not implemented")
}
func (*UnimplementedHelmManagerServer) UninstallReleaseV1(ctx context.Context, req *UninstallReleaseV1Req) (*UninstallReleaseV1Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UninstallReleaseV1 not implemented")
}
func (*UnimplementedHelmManagerServer) UpgradeReleaseV1(ctx context.Context, req *UpgradeReleaseV1Req) (*UpgradeReleaseV1Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpgradeReleaseV1 not implemented")
}
func (*UnimplementedHelmManagerServer) RollbackReleaseV1(ctx context.Context, req *RollbackReleaseV1Req) (*RollbackReleaseV1Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RollbackReleaseV1 not implemented")
}
func (*UnimplementedHelmManagerServer) ReleasePreview(ctx context.Context, req *ReleasePreviewReq) (*ReleasePreviewResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleasePreview not implemented")
}
func (*UnimplementedHelmManagerServer) GetReleaseHistory(ctx context.Context, req *GetReleaseHistoryReq) (*GetReleaseHistoryResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReleaseHistory not implemented")
}
func (*UnimplementedHelmManagerServer) GetReleaseManifest(ctx context.Context, req *GetReleaseManifestReq) (*GetReleaseManifestResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReleaseManifest not implemented")
}
func (*UnimplementedHelmManagerServer) GetReleaseStatus(ctx context.Context, req *GetReleaseStatusReq) (*CommonListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReleaseStatus not implemented")
}
func (*UnimplementedHelmManagerServer) GetReleasePods(ctx context.Context, req *GetReleasePodsReq) (*CommonListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReleasePods not implemented")
}
func (*UnimplementedHelmManagerServer) ImportClusterRelease(ctx context.Context, req *ImportClusterReleaseReq) (*ImportClusterReleaseResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportClusterRelease not implemented")
}

func RegisterHelmManagerServer(s *grpc.Server, srv HelmManagerServer) {
	s.RegisterService(&_HelmManager_serviceDesc, srv)
}

func _HelmManager_Available_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AvailableReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).Available(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/Available",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).Available(ctx, req.(*AvailableReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_CreateRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRepositoryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).CreateRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/CreateRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).CreateRepository(ctx, req.(*CreateRepositoryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_UpdateRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRepositoryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).UpdateRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/UpdateRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).UpdateRepository(ctx, req.(*UpdateRepositoryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_GetRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRepositoryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).GetRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/GetRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).GetRepository(ctx, req.(*GetRepositoryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_DeleteRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRepositoryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).DeleteRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/DeleteRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).DeleteRepository(ctx, req.(*DeleteRepositoryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_ListRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRepositoryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).ListRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/ListRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).ListRepository(ctx, req.(*ListRepositoryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_ListChartV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListChartV1Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).ListChartV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/ListChartV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).ListChartV1(ctx, req.(*ListChartV1Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_GetChartDetailV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChartDetailV1Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).GetChartDetailV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/GetChartDetailV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).GetChartDetailV1(ctx, req.(*GetChartDetailV1Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_ListChartVersionV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListChartVersionV1Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).ListChartVersionV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/ListChartVersionV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).ListChartVersionV1(ctx, req.(*ListChartVersionV1Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_GetVersionDetailV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVersionDetailV1Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).GetVersionDetailV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/GetVersionDetailV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).GetVersionDetailV1(ctx, req.(*GetVersionDetailV1Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_DeleteChart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteChartReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).DeleteChart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/DeleteChart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).DeleteChart(ctx, req.(*DeleteChartReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_DeleteChartVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteChartVersionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).DeleteChartVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/DeleteChartVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).DeleteChartVersion(ctx, req.(*DeleteChartVersionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_DownloadChart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownloadChartReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).DownloadChart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/DownloadChart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).DownloadChart(ctx, req.(*DownloadChartReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_UploadChart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadChartReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).UploadChart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/UploadChart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).UploadChart(ctx, req.(*UploadChartReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_GetChartRelease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChartReleaseReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).GetChartRelease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/GetChartRelease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).GetChartRelease(ctx, req.(*GetChartReleaseReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_ListReleaseV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReleaseV1Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).ListReleaseV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/ListReleaseV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).ListReleaseV1(ctx, req.(*ListReleaseV1Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_GetReleaseDetailV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReleaseDetailV1Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).GetReleaseDetailV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/GetReleaseDetailV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).GetReleaseDetailV1(ctx, req.(*GetReleaseDetailV1Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_InstallReleaseV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstallReleaseV1Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).InstallReleaseV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/InstallReleaseV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).InstallReleaseV1(ctx, req.(*InstallReleaseV1Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_UninstallReleaseV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UninstallReleaseV1Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).UninstallReleaseV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/UninstallReleaseV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).UninstallReleaseV1(ctx, req.(*UninstallReleaseV1Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_UpgradeReleaseV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpgradeReleaseV1Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).UpgradeReleaseV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/UpgradeReleaseV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).UpgradeReleaseV1(ctx, req.(*UpgradeReleaseV1Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_RollbackReleaseV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RollbackReleaseV1Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).RollbackReleaseV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/RollbackReleaseV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).RollbackReleaseV1(ctx, req.(*RollbackReleaseV1Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_ReleasePreview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleasePreviewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).ReleasePreview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/ReleasePreview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).ReleasePreview(ctx, req.(*ReleasePreviewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_GetReleaseHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReleaseHistoryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).GetReleaseHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/GetReleaseHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).GetReleaseHistory(ctx, req.(*GetReleaseHistoryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_GetReleaseManifest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReleaseManifestReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).GetReleaseManifest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/GetReleaseManifest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).GetReleaseManifest(ctx, req.(*GetReleaseManifestReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_GetReleaseStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReleaseStatusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).GetReleaseStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/GetReleaseStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).GetReleaseStatus(ctx, req.(*GetReleaseStatusReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_GetReleasePods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReleasePodsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).GetReleasePods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/GetReleasePods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).GetReleasePods(ctx, req.(*GetReleasePodsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_ImportClusterRelease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportClusterReleaseReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).ImportClusterRelease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/ImportClusterRelease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).ImportClusterRelease(ctx, req.(*ImportClusterReleaseReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _HelmManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "helmmanager.HelmManager",
	HandlerType: (*HelmManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Available",
			Handler:    _HelmManager_Available_Handler,
		},
		{
			MethodName: "CreateRepository",
			Handler:    _HelmManager_CreateRepository_Handler,
		},
		{
			MethodName: "UpdateRepository",
			Handler:    _HelmManager_UpdateRepository_Handler,
		},
		{
			MethodName: "GetRepository",
			Handler:    _HelmManager_GetRepository_Handler,
		},
		{
			MethodName: "DeleteRepository",
			Handler:    _HelmManager_DeleteRepository_Handler,
		},
		{
			MethodName: "ListRepository",
			Handler:    _HelmManager_ListRepository_Handler,
		},
		{
			MethodName: "ListChartV1",
			Handler:    _HelmManager_ListChartV1_Handler,
		},
		{
			MethodName: "GetChartDetailV1",
			Handler:    _HelmManager_GetChartDetailV1_Handler,
		},
		{
			MethodName: "ListChartVersionV1",
			Handler:    _HelmManager_ListChartVersionV1_Handler,
		},
		{
			MethodName: "GetVersionDetailV1",
			Handler:    _HelmManager_GetVersionDetailV1_Handler,
		},
		{
			MethodName: "DeleteChart",
			Handler:    _HelmManager_DeleteChart_Handler,
		},
		{
			MethodName: "DeleteChartVersion",
			Handler:    _HelmManager_DeleteChartVersion_Handler,
		},
		{
			MethodName: "DownloadChart",
			Handler:    _HelmManager_DownloadChart_Handler,
		},
		{
			MethodName: "UploadChart",
			Handler:    _HelmManager_UploadChart_Handler,
		},
		{
			MethodName: "GetChartRelease",
			Handler:    _HelmManager_GetChartRelease_Handler,
		},
		{
			MethodName: "ListReleaseV1",
			Handler:    _HelmManager_ListReleaseV1_Handler,
		},
		{
			MethodName: "GetReleaseDetailV1",
			Handler:    _HelmManager_GetReleaseDetailV1_Handler,
		},
		{
			MethodName: "InstallReleaseV1",
			Handler:    _HelmManager_InstallReleaseV1_Handler,
		},
		{
			MethodName: "UninstallReleaseV1",
			Handler:    _HelmManager_UninstallReleaseV1_Handler,
		},
		{
			MethodName: "UpgradeReleaseV1",
			Handler:    _HelmManager_UpgradeReleaseV1_Handler,
		},
		{
			MethodName: "RollbackReleaseV1",
			Handler:    _HelmManager_RollbackReleaseV1_Handler,
		},
		{
			MethodName: "ReleasePreview",
			Handler:    _HelmManager_ReleasePreview_Handler,
		},
		{
			MethodName: "GetReleaseHistory",
			Handler:    _HelmManager_GetReleaseHistory_Handler,
		},
		{
			MethodName: "GetReleaseManifest",
			Handler:    _HelmManager_GetReleaseManifest_Handler,
		},
		{
			MethodName: "GetReleaseStatus",
			Handler:    _HelmManager_GetReleaseStatus_Handler,
		},
		{
			MethodName: "GetReleasePods",
			Handler:    _HelmManager_GetReleasePods_Handler,
		},
		{
			MethodName: "ImportClusterRelease",
			Handler:    _HelmManager_ImportClusterRelease_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bcs-helm-manager.proto",
}

// ClusterAddonsClient is the client API for ClusterAddons service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClusterAddonsClient interface {
	ListAddons(ctx context.Context, in *ListAddonsReq, opts ...grpc.CallOption) (*ListAddonsResp, error)
	GetAddonsDetail(ctx context.Context, in *GetAddonsDetailReq, opts ...grpc.CallOption) (*GetAddonsDetailResp, error)
	InstallAddons(ctx context.Context, in *InstallAddonsReq, opts ...grpc.CallOption) (*InstallAddonsResp, error)
	UpgradeAddons(ctx context.Context, in *UpgradeAddonsReq, opts ...grpc.CallOption) (*UpgradeAddonsResp, error)
	StopAddons(ctx context.Context, in *StopAddonsReq, opts ...grpc.CallOption) (*StopAddonsResp, error)
	UninstallAddons(ctx context.Context, in *UninstallAddonsReq, opts ...grpc.CallOption) (*UninstallAddonsResp, error)
}

type clusterAddonsClient struct {
	cc *grpc.ClientConn
}

func NewClusterAddonsClient(cc *grpc.ClientConn) ClusterAddonsClient {
	return &clusterAddonsClient{cc}
}

func (c *clusterAddonsClient) ListAddons(ctx context.Context, in *ListAddonsReq, opts ...grpc.CallOption) (*ListAddonsResp, error) {
	out := new(ListAddonsResp)
	err := c.cc.Invoke(ctx, "/helmmanager.ClusterAddons/ListAddons", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterAddonsClient) GetAddonsDetail(ctx context.Context, in *GetAddonsDetailReq, opts ...grpc.CallOption) (*GetAddonsDetailResp, error) {
	out := new(GetAddonsDetailResp)
	err := c.cc.Invoke(ctx, "/helmmanager.ClusterAddons/GetAddonsDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterAddonsClient) InstallAddons(ctx context.Context, in *InstallAddonsReq, opts ...grpc.CallOption) (*InstallAddonsResp, error) {
	out := new(InstallAddonsResp)
	err := c.cc.Invoke(ctx, "/helmmanager.ClusterAddons/InstallAddons", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterAddonsClient) UpgradeAddons(ctx context.Context, in *UpgradeAddonsReq, opts ...grpc.CallOption) (*UpgradeAddonsResp, error) {
	out := new(UpgradeAddonsResp)
	err := c.cc.Invoke(ctx, "/helmmanager.ClusterAddons/UpgradeAddons", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterAddonsClient) StopAddons(ctx context.Context, in *StopAddonsReq, opts ...grpc.CallOption) (*StopAddonsResp, error) {
	out := new(StopAddonsResp)
	err := c.cc.Invoke(ctx, "/helmmanager.ClusterAddons/StopAddons", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterAddonsClient) UninstallAddons(ctx context.Context, in *UninstallAddonsReq, opts ...grpc.CallOption) (*UninstallAddonsResp, error) {
	out := new(UninstallAddonsResp)
	err := c.cc.Invoke(ctx, "/helmmanager.ClusterAddons/UninstallAddons", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClusterAddonsServer is the server API for ClusterAddons service.
type ClusterAddonsServer interface {
	ListAddons(context.Context, *ListAddonsReq) (*ListAddonsResp, error)
	GetAddonsDetail(context.Context, *GetAddonsDetailReq) (*GetAddonsDetailResp, error)
	InstallAddons(context.Context, *InstallAddonsReq) (*InstallAddonsResp, error)
	UpgradeAddons(context.Context, *UpgradeAddonsReq) (*UpgradeAddonsResp, error)
	StopAddons(context.Context, *StopAddonsReq) (*StopAddonsResp, error)
	UninstallAddons(context.Context, *UninstallAddonsReq) (*UninstallAddonsResp, error)
}

// UnimplementedClusterAddonsServer can be embedded to have forward compatible implementations.
type UnimplementedClusterAddonsServer struct {
}

func (*UnimplementedClusterAddonsServer) ListAddons(ctx context.Context, req *ListAddonsReq) (*ListAddonsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAddons not implemented")
}
func (*UnimplementedClusterAddonsServer) GetAddonsDetail(ctx context.Context, req *GetAddonsDetailReq) (*GetAddonsDetailResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAddonsDetail not implemented")
}
func (*UnimplementedClusterAddonsServer) InstallAddons(ctx context.Context, req *InstallAddonsReq) (*InstallAddonsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InstallAddons not implemented")
}
func (*UnimplementedClusterAddonsServer) UpgradeAddons(ctx context.Context, req *UpgradeAddonsReq) (*UpgradeAddonsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpgradeAddons not implemented")
}
func (*UnimplementedClusterAddonsServer) StopAddons(ctx context.Context, req *StopAddonsReq) (*StopAddonsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopAddons not implemented")
}
func (*UnimplementedClusterAddonsServer) UninstallAddons(ctx context.Context, req *UninstallAddonsReq) (*UninstallAddonsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UninstallAddons not implemented")
}

func RegisterClusterAddonsServer(s *grpc.Server, srv ClusterAddonsServer) {
	s.RegisterService(&_ClusterAddons_serviceDesc, srv)
}

func _ClusterAddons_ListAddons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAddonsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterAddonsServer).ListAddons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.ClusterAddons/ListAddons",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterAddonsServer).ListAddons(ctx, req.(*ListAddonsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterAddons_GetAddonsDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAddonsDetailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterAddonsServer).GetAddonsDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.ClusterAddons/GetAddonsDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterAddonsServer).GetAddonsDetail(ctx, req.(*GetAddonsDetailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterAddons_InstallAddons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstallAddonsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterAddonsServer).InstallAddons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.ClusterAddons/InstallAddons",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterAddonsServer).InstallAddons(ctx, req.(*InstallAddonsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterAddons_UpgradeAddons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpgradeAddonsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterAddonsServer).UpgradeAddons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.ClusterAddons/UpgradeAddons",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterAddonsServer).UpgradeAddons(ctx, req.(*UpgradeAddonsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterAddons_StopAddons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopAddonsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterAddonsServer).StopAddons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.ClusterAddons/StopAddons",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterAddonsServer).StopAddons(ctx, req.(*StopAddonsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterAddons_UninstallAddons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UninstallAddonsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterAddonsServer).UninstallAddons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.ClusterAddons/UninstallAddons",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterAddonsServer).UninstallAddons(ctx, req.(*UninstallAddonsReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClusterAddons_serviceDesc = grpc.ServiceDesc{
	ServiceName: "helmmanager.ClusterAddons",
	HandlerType: (*ClusterAddonsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListAddons",
			Handler:    _ClusterAddons_ListAddons_Handler,
		},
		{
			MethodName: "GetAddonsDetail",
			Handler:    _ClusterAddons_GetAddonsDetail_Handler,
		},
		{
			MethodName: "InstallAddons",
			Handler:    _ClusterAddons_InstallAddons_Handler,
		},
		{
			MethodName: "UpgradeAddons",
			Handler:    _ClusterAddons_UpgradeAddons_Handler,
		},
		{
			MethodName: "StopAddons",
			Handler:    _ClusterAddons_StopAddons_Handler,
		},
		{
			MethodName: "UninstallAddons",
			Handler:    _ClusterAddons_UninstallAddons_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bcs-helm-manager.proto",
}
