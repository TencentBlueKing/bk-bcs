// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bcs-helm-manager.proto

package helmmanager

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AvailableReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvailableReq) Reset()         { *m = AvailableReq{} }
func (m *AvailableReq) String() string { return proto.CompactTextString(m) }
func (*AvailableReq) ProtoMessage()    {}
func (*AvailableReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{0}
}

func (m *AvailableReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvailableReq.Unmarshal(m, b)
}
func (m *AvailableReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvailableReq.Marshal(b, m, deterministic)
}
func (m *AvailableReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvailableReq.Merge(m, src)
}
func (m *AvailableReq) XXX_Size() int {
	return xxx_messageInfo_AvailableReq.Size(m)
}
func (m *AvailableReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AvailableReq.DiscardUnknown(m)
}

var xxx_messageInfo_AvailableReq proto.InternalMessageInfo

type AvailableResp struct {
	Code                 *uint32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool    `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvailableResp) Reset()         { *m = AvailableResp{} }
func (m *AvailableResp) String() string { return proto.CompactTextString(m) }
func (*AvailableResp) ProtoMessage()    {}
func (*AvailableResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{1}
}

func (m *AvailableResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvailableResp.Unmarshal(m, b)
}
func (m *AvailableResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvailableResp.Marshal(b, m, deterministic)
}
func (m *AvailableResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvailableResp.Merge(m, src)
}
func (m *AvailableResp) XXX_Size() int {
	return xxx_messageInfo_AvailableResp.Size(m)
}
func (m *AvailableResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AvailableResp.DiscardUnknown(m)
}

var xxx_messageInfo_AvailableResp proto.InternalMessageInfo

func (m *AvailableResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *AvailableResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *AvailableResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type CreateRepositoryReq struct {
	ProjectID            *string  `protobuf:"bytes,1,opt,name=projectID" json:"projectID,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type                 *string  `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Remote               *bool    `protobuf:"varint,4,opt,name=remote" json:"remote,omitempty"`
	RemoteURL            *string  `protobuf:"bytes,5,opt,name=remoteURL" json:"remoteURL,omitempty"`
	Username             *string  `protobuf:"bytes,6,opt,name=username" json:"username,omitempty"`
	Password             *string  `protobuf:"bytes,7,opt,name=password" json:"password,omitempty"`
	Operator             *string  `protobuf:"bytes,8,opt,name=operator" json:"operator,omitempty"`
	Takeover             *bool    `protobuf:"varint,9,opt,name=takeover" json:"takeover,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRepositoryReq) Reset()         { *m = CreateRepositoryReq{} }
func (m *CreateRepositoryReq) String() string { return proto.CompactTextString(m) }
func (*CreateRepositoryReq) ProtoMessage()    {}
func (*CreateRepositoryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{2}
}

func (m *CreateRepositoryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRepositoryReq.Unmarshal(m, b)
}
func (m *CreateRepositoryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRepositoryReq.Marshal(b, m, deterministic)
}
func (m *CreateRepositoryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRepositoryReq.Merge(m, src)
}
func (m *CreateRepositoryReq) XXX_Size() int {
	return xxx_messageInfo_CreateRepositoryReq.Size(m)
}
func (m *CreateRepositoryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRepositoryReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRepositoryReq proto.InternalMessageInfo

func (m *CreateRepositoryReq) GetProjectID() string {
	if m != nil && m.ProjectID != nil {
		return *m.ProjectID
	}
	return ""
}

func (m *CreateRepositoryReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CreateRepositoryReq) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *CreateRepositoryReq) GetRemote() bool {
	if m != nil && m.Remote != nil {
		return *m.Remote
	}
	return false
}

func (m *CreateRepositoryReq) GetRemoteURL() string {
	if m != nil && m.RemoteURL != nil {
		return *m.RemoteURL
	}
	return ""
}

func (m *CreateRepositoryReq) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *CreateRepositoryReq) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *CreateRepositoryReq) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

func (m *CreateRepositoryReq) GetTakeover() bool {
	if m != nil && m.Takeover != nil {
		return *m.Takeover
	}
	return false
}

type CreateRepositoryResp struct {
	Code                 *uint32     `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string     `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool       `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *Repository `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateRepositoryResp) Reset()         { *m = CreateRepositoryResp{} }
func (m *CreateRepositoryResp) String() string { return proto.CompactTextString(m) }
func (*CreateRepositoryResp) ProtoMessage()    {}
func (*CreateRepositoryResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{3}
}

func (m *CreateRepositoryResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRepositoryResp.Unmarshal(m, b)
}
func (m *CreateRepositoryResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRepositoryResp.Marshal(b, m, deterministic)
}
func (m *CreateRepositoryResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRepositoryResp.Merge(m, src)
}
func (m *CreateRepositoryResp) XXX_Size() int {
	return xxx_messageInfo_CreateRepositoryResp.Size(m)
}
func (m *CreateRepositoryResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRepositoryResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRepositoryResp proto.InternalMessageInfo

func (m *CreateRepositoryResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *CreateRepositoryResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CreateRepositoryResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *CreateRepositoryResp) GetData() *Repository {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateRepositoryReq struct {
	ProjectID            *string  `protobuf:"bytes,1,opt,name=projectID" json:"projectID,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type                 *string  `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Remote               *bool    `protobuf:"varint,4,opt,name=remote" json:"remote,omitempty"`
	RemoteURL            *string  `protobuf:"bytes,5,opt,name=remoteURL" json:"remoteURL,omitempty"`
	Username             *string  `protobuf:"bytes,6,opt,name=username" json:"username,omitempty"`
	Password             *string  `protobuf:"bytes,7,opt,name=password" json:"password,omitempty"`
	Operator             *string  `protobuf:"bytes,8,opt,name=operator" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRepositoryReq) Reset()         { *m = UpdateRepositoryReq{} }
func (m *UpdateRepositoryReq) String() string { return proto.CompactTextString(m) }
func (*UpdateRepositoryReq) ProtoMessage()    {}
func (*UpdateRepositoryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{4}
}

func (m *UpdateRepositoryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRepositoryReq.Unmarshal(m, b)
}
func (m *UpdateRepositoryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRepositoryReq.Marshal(b, m, deterministic)
}
func (m *UpdateRepositoryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRepositoryReq.Merge(m, src)
}
func (m *UpdateRepositoryReq) XXX_Size() int {
	return xxx_messageInfo_UpdateRepositoryReq.Size(m)
}
func (m *UpdateRepositoryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRepositoryReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRepositoryReq proto.InternalMessageInfo

func (m *UpdateRepositoryReq) GetProjectID() string {
	if m != nil && m.ProjectID != nil {
		return *m.ProjectID
	}
	return ""
}

func (m *UpdateRepositoryReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *UpdateRepositoryReq) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *UpdateRepositoryReq) GetRemote() bool {
	if m != nil && m.Remote != nil {
		return *m.Remote
	}
	return false
}

func (m *UpdateRepositoryReq) GetRemoteURL() string {
	if m != nil && m.RemoteURL != nil {
		return *m.RemoteURL
	}
	return ""
}

func (m *UpdateRepositoryReq) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *UpdateRepositoryReq) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *UpdateRepositoryReq) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

type UpdateRepositoryResp struct {
	Code                 *uint32     `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string     `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool       `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *Repository `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpdateRepositoryResp) Reset()         { *m = UpdateRepositoryResp{} }
func (m *UpdateRepositoryResp) String() string { return proto.CompactTextString(m) }
func (*UpdateRepositoryResp) ProtoMessage()    {}
func (*UpdateRepositoryResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{5}
}

func (m *UpdateRepositoryResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRepositoryResp.Unmarshal(m, b)
}
func (m *UpdateRepositoryResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRepositoryResp.Marshal(b, m, deterministic)
}
func (m *UpdateRepositoryResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRepositoryResp.Merge(m, src)
}
func (m *UpdateRepositoryResp) XXX_Size() int {
	return xxx_messageInfo_UpdateRepositoryResp.Size(m)
}
func (m *UpdateRepositoryResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRepositoryResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRepositoryResp proto.InternalMessageInfo

func (m *UpdateRepositoryResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *UpdateRepositoryResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *UpdateRepositoryResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *UpdateRepositoryResp) GetData() *Repository {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetRepositoryReq struct {
	ProjectID            *string  `protobuf:"bytes,1,opt,name=projectID" json:"projectID,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRepositoryReq) Reset()         { *m = GetRepositoryReq{} }
func (m *GetRepositoryReq) String() string { return proto.CompactTextString(m) }
func (*GetRepositoryReq) ProtoMessage()    {}
func (*GetRepositoryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{6}
}

func (m *GetRepositoryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepositoryReq.Unmarshal(m, b)
}
func (m *GetRepositoryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepositoryReq.Marshal(b, m, deterministic)
}
func (m *GetRepositoryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepositoryReq.Merge(m, src)
}
func (m *GetRepositoryReq) XXX_Size() int {
	return xxx_messageInfo_GetRepositoryReq.Size(m)
}
func (m *GetRepositoryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepositoryReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepositoryReq proto.InternalMessageInfo

func (m *GetRepositoryReq) GetProjectID() string {
	if m != nil && m.ProjectID != nil {
		return *m.ProjectID
	}
	return ""
}

func (m *GetRepositoryReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type GetRepositoryResp struct {
	Code                 *uint32     `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string     `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool       `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *Repository `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetRepositoryResp) Reset()         { *m = GetRepositoryResp{} }
func (m *GetRepositoryResp) String() string { return proto.CompactTextString(m) }
func (*GetRepositoryResp) ProtoMessage()    {}
func (*GetRepositoryResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{7}
}

func (m *GetRepositoryResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepositoryResp.Unmarshal(m, b)
}
func (m *GetRepositoryResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepositoryResp.Marshal(b, m, deterministic)
}
func (m *GetRepositoryResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepositoryResp.Merge(m, src)
}
func (m *GetRepositoryResp) XXX_Size() int {
	return xxx_messageInfo_GetRepositoryResp.Size(m)
}
func (m *GetRepositoryResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepositoryResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepositoryResp proto.InternalMessageInfo

func (m *GetRepositoryResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *GetRepositoryResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *GetRepositoryResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *GetRepositoryResp) GetData() *Repository {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListRepositoryReq struct {
	Sort                 *string  `protobuf:"bytes,1,opt,name=sort" json:"sort,omitempty"`
	Desc                 *bool    `protobuf:"varint,2,opt,name=desc" json:"desc,omitempty"`
	Page                 *uint32  `protobuf:"varint,3,opt,name=page" json:"page,omitempty"`
	Size                 *uint32  `protobuf:"varint,4,opt,name=size" json:"size,omitempty"`
	ProjectID            *string  `protobuf:"bytes,5,opt,name=projectID" json:"projectID,omitempty"`
	Name                 *string  `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	Type                 *string  `protobuf:"bytes,7,opt,name=type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRepositoryReq) Reset()         { *m = ListRepositoryReq{} }
func (m *ListRepositoryReq) String() string { return proto.CompactTextString(m) }
func (*ListRepositoryReq) ProtoMessage()    {}
func (*ListRepositoryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{8}
}

func (m *ListRepositoryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRepositoryReq.Unmarshal(m, b)
}
func (m *ListRepositoryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRepositoryReq.Marshal(b, m, deterministic)
}
func (m *ListRepositoryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRepositoryReq.Merge(m, src)
}
func (m *ListRepositoryReq) XXX_Size() int {
	return xxx_messageInfo_ListRepositoryReq.Size(m)
}
func (m *ListRepositoryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRepositoryReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListRepositoryReq proto.InternalMessageInfo

func (m *ListRepositoryReq) GetSort() string {
	if m != nil && m.Sort != nil {
		return *m.Sort
	}
	return ""
}

func (m *ListRepositoryReq) GetDesc() bool {
	if m != nil && m.Desc != nil {
		return *m.Desc
	}
	return false
}

func (m *ListRepositoryReq) GetPage() uint32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *ListRepositoryReq) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *ListRepositoryReq) GetProjectID() string {
	if m != nil && m.ProjectID != nil {
		return *m.ProjectID
	}
	return ""
}

func (m *ListRepositoryReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ListRepositoryReq) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

type ListRepositoryResp struct {
	Code                 *uint32             `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string             `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool               `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *RepositoryListData `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ListRepositoryResp) Reset()         { *m = ListRepositoryResp{} }
func (m *ListRepositoryResp) String() string { return proto.CompactTextString(m) }
func (*ListRepositoryResp) ProtoMessage()    {}
func (*ListRepositoryResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{9}
}

func (m *ListRepositoryResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRepositoryResp.Unmarshal(m, b)
}
func (m *ListRepositoryResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRepositoryResp.Marshal(b, m, deterministic)
}
func (m *ListRepositoryResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRepositoryResp.Merge(m, src)
}
func (m *ListRepositoryResp) XXX_Size() int {
	return xxx_messageInfo_ListRepositoryResp.Size(m)
}
func (m *ListRepositoryResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRepositoryResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListRepositoryResp proto.InternalMessageInfo

func (m *ListRepositoryResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ListRepositoryResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ListRepositoryResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ListRepositoryResp) GetData() *RepositoryListData {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteRepositoryReq struct {
	ProjectID            *string  `protobuf:"bytes,1,opt,name=projectID" json:"projectID,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Operator             *string  `protobuf:"bytes,3,opt,name=operator" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRepositoryReq) Reset()         { *m = DeleteRepositoryReq{} }
func (m *DeleteRepositoryReq) String() string { return proto.CompactTextString(m) }
func (*DeleteRepositoryReq) ProtoMessage()    {}
func (*DeleteRepositoryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{10}
}

func (m *DeleteRepositoryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRepositoryReq.Unmarshal(m, b)
}
func (m *DeleteRepositoryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRepositoryReq.Marshal(b, m, deterministic)
}
func (m *DeleteRepositoryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRepositoryReq.Merge(m, src)
}
func (m *DeleteRepositoryReq) XXX_Size() int {
	return xxx_messageInfo_DeleteRepositoryReq.Size(m)
}
func (m *DeleteRepositoryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRepositoryReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRepositoryReq proto.InternalMessageInfo

func (m *DeleteRepositoryReq) GetProjectID() string {
	if m != nil && m.ProjectID != nil {
		return *m.ProjectID
	}
	return ""
}

func (m *DeleteRepositoryReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *DeleteRepositoryReq) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

type DeleteRepositoryResp struct {
	Code                 *uint32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool    `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRepositoryResp) Reset()         { *m = DeleteRepositoryResp{} }
func (m *DeleteRepositoryResp) String() string { return proto.CompactTextString(m) }
func (*DeleteRepositoryResp) ProtoMessage()    {}
func (*DeleteRepositoryResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{11}
}

func (m *DeleteRepositoryResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRepositoryResp.Unmarshal(m, b)
}
func (m *DeleteRepositoryResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRepositoryResp.Marshal(b, m, deterministic)
}
func (m *DeleteRepositoryResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRepositoryResp.Merge(m, src)
}
func (m *DeleteRepositoryResp) XXX_Size() int {
	return xxx_messageInfo_DeleteRepositoryResp.Size(m)
}
func (m *DeleteRepositoryResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRepositoryResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRepositoryResp proto.InternalMessageInfo

func (m *DeleteRepositoryResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *DeleteRepositoryResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *DeleteRepositoryResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type DeleteRepositoriesReq struct {
	ProjectID            *string  `protobuf:"bytes,1,opt,name=projectID" json:"projectID,omitempty"`
	Names                []string `protobuf:"bytes,2,rep,name=names" json:"names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRepositoriesReq) Reset()         { *m = DeleteRepositoriesReq{} }
func (m *DeleteRepositoriesReq) String() string { return proto.CompactTextString(m) }
func (*DeleteRepositoriesReq) ProtoMessage()    {}
func (*DeleteRepositoriesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{12}
}

func (m *DeleteRepositoriesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRepositoriesReq.Unmarshal(m, b)
}
func (m *DeleteRepositoriesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRepositoriesReq.Marshal(b, m, deterministic)
}
func (m *DeleteRepositoriesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRepositoriesReq.Merge(m, src)
}
func (m *DeleteRepositoriesReq) XXX_Size() int {
	return xxx_messageInfo_DeleteRepositoriesReq.Size(m)
}
func (m *DeleteRepositoriesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRepositoriesReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRepositoriesReq proto.InternalMessageInfo

func (m *DeleteRepositoriesReq) GetProjectID() string {
	if m != nil && m.ProjectID != nil {
		return *m.ProjectID
	}
	return ""
}

func (m *DeleteRepositoriesReq) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

type DeleteRepositoriesResp struct {
	Code                 *uint32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool    `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRepositoriesResp) Reset()         { *m = DeleteRepositoriesResp{} }
func (m *DeleteRepositoriesResp) String() string { return proto.CompactTextString(m) }
func (*DeleteRepositoriesResp) ProtoMessage()    {}
func (*DeleteRepositoriesResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{13}
}

func (m *DeleteRepositoriesResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRepositoriesResp.Unmarshal(m, b)
}
func (m *DeleteRepositoriesResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRepositoriesResp.Marshal(b, m, deterministic)
}
func (m *DeleteRepositoriesResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRepositoriesResp.Merge(m, src)
}
func (m *DeleteRepositoriesResp) XXX_Size() int {
	return xxx_messageInfo_DeleteRepositoriesResp.Size(m)
}
func (m *DeleteRepositoriesResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRepositoriesResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRepositoriesResp proto.InternalMessageInfo

func (m *DeleteRepositoriesResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *DeleteRepositoriesResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *DeleteRepositoriesResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type RepositoryListData struct {
	Page                 *uint32       `protobuf:"varint,1,opt,name=page" json:"page,omitempty"`
	Size                 *uint32       `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	Total                *uint32       `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
	Data                 []*Repository `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RepositoryListData) Reset()         { *m = RepositoryListData{} }
func (m *RepositoryListData) String() string { return proto.CompactTextString(m) }
func (*RepositoryListData) ProtoMessage()    {}
func (*RepositoryListData) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{14}
}

func (m *RepositoryListData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepositoryListData.Unmarshal(m, b)
}
func (m *RepositoryListData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepositoryListData.Marshal(b, m, deterministic)
}
func (m *RepositoryListData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepositoryListData.Merge(m, src)
}
func (m *RepositoryListData) XXX_Size() int {
	return xxx_messageInfo_RepositoryListData.Size(m)
}
func (m *RepositoryListData) XXX_DiscardUnknown() {
	xxx_messageInfo_RepositoryListData.DiscardUnknown(m)
}

var xxx_messageInfo_RepositoryListData proto.InternalMessageInfo

func (m *RepositoryListData) GetPage() uint32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *RepositoryListData) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *RepositoryListData) GetTotal() uint32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *RepositoryListData) GetData() []*Repository {
	if m != nil {
		return m.Data
	}
	return nil
}

type Repository struct {
	ProjectID            *string  `protobuf:"bytes,1,opt,name=projectID" json:"projectID,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type                 *string  `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Remote               *bool    `protobuf:"varint,4,opt,name=remote" json:"remote,omitempty"`
	RemoteURL            *string  `protobuf:"bytes,5,opt,name=remoteURL" json:"remoteURL,omitempty"`
	Username             *string  `protobuf:"bytes,6,opt,name=username" json:"username,omitempty"`
	Password             *string  `protobuf:"bytes,7,opt,name=password" json:"password,omitempty"`
	CreateBy             *string  `protobuf:"bytes,8,opt,name=createBy" json:"createBy,omitempty"`
	UpdateBy             *string  `protobuf:"bytes,9,opt,name=updateBy" json:"updateBy,omitempty"`
	CreateTime           *string  `protobuf:"bytes,10,opt,name=createTime" json:"createTime,omitempty"`
	UpdateTime           *string  `protobuf:"bytes,11,opt,name=updateTime" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Repository) Reset()         { *m = Repository{} }
func (m *Repository) String() string { return proto.CompactTextString(m) }
func (*Repository) ProtoMessage()    {}
func (*Repository) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{15}
}

func (m *Repository) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Repository.Unmarshal(m, b)
}
func (m *Repository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Repository.Marshal(b, m, deterministic)
}
func (m *Repository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Repository.Merge(m, src)
}
func (m *Repository) XXX_Size() int {
	return xxx_messageInfo_Repository.Size(m)
}
func (m *Repository) XXX_DiscardUnknown() {
	xxx_messageInfo_Repository.DiscardUnknown(m)
}

var xxx_messageInfo_Repository proto.InternalMessageInfo

func (m *Repository) GetProjectID() string {
	if m != nil && m.ProjectID != nil {
		return *m.ProjectID
	}
	return ""
}

func (m *Repository) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Repository) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Repository) GetRemote() bool {
	if m != nil && m.Remote != nil {
		return *m.Remote
	}
	return false
}

func (m *Repository) GetRemoteURL() string {
	if m != nil && m.RemoteURL != nil {
		return *m.RemoteURL
	}
	return ""
}

func (m *Repository) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *Repository) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *Repository) GetCreateBy() string {
	if m != nil && m.CreateBy != nil {
		return *m.CreateBy
	}
	return ""
}

func (m *Repository) GetUpdateBy() string {
	if m != nil && m.UpdateBy != nil {
		return *m.UpdateBy
	}
	return ""
}

func (m *Repository) GetCreateTime() string {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return ""
}

func (m *Repository) GetUpdateTime() string {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return ""
}

type ListChartReq struct {
	Page                 *uint32  `protobuf:"varint,1,opt,name=page" json:"page,omitempty"`
	Size                 *uint32  `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	ProjectID            *string  `protobuf:"bytes,3,opt,name=projectID" json:"projectID,omitempty"`
	Repository           *string  `protobuf:"bytes,4,opt,name=repository" json:"repository,omitempty"`
	Operator             *string  `protobuf:"bytes,5,opt,name=operator" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListChartReq) Reset()         { *m = ListChartReq{} }
func (m *ListChartReq) String() string { return proto.CompactTextString(m) }
func (*ListChartReq) ProtoMessage()    {}
func (*ListChartReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{16}
}

func (m *ListChartReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListChartReq.Unmarshal(m, b)
}
func (m *ListChartReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListChartReq.Marshal(b, m, deterministic)
}
func (m *ListChartReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListChartReq.Merge(m, src)
}
func (m *ListChartReq) XXX_Size() int {
	return xxx_messageInfo_ListChartReq.Size(m)
}
func (m *ListChartReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListChartReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListChartReq proto.InternalMessageInfo

func (m *ListChartReq) GetPage() uint32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *ListChartReq) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *ListChartReq) GetProjectID() string {
	if m != nil && m.ProjectID != nil {
		return *m.ProjectID
	}
	return ""
}

func (m *ListChartReq) GetRepository() string {
	if m != nil && m.Repository != nil {
		return *m.Repository
	}
	return ""
}

func (m *ListChartReq) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

type ListChartResp struct {
	Code                 *uint32        `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string        `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool          `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *ChartListData `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListChartResp) Reset()         { *m = ListChartResp{} }
func (m *ListChartResp) String() string { return proto.CompactTextString(m) }
func (*ListChartResp) ProtoMessage()    {}
func (*ListChartResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{17}
}

func (m *ListChartResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListChartResp.Unmarshal(m, b)
}
func (m *ListChartResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListChartResp.Marshal(b, m, deterministic)
}
func (m *ListChartResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListChartResp.Merge(m, src)
}
func (m *ListChartResp) XXX_Size() int {
	return xxx_messageInfo_ListChartResp.Size(m)
}
func (m *ListChartResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListChartResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListChartResp proto.InternalMessageInfo

func (m *ListChartResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ListChartResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ListChartResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ListChartResp) GetData() *ChartListData {
	if m != nil {
		return m.Data
	}
	return nil
}

type ChartListData struct {
	Page                 *uint32  `protobuf:"varint,1,opt,name=page" json:"page,omitempty"`
	Size                 *uint32  `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	Total                *uint32  `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
	Data                 []*Chart `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChartListData) Reset()         { *m = ChartListData{} }
func (m *ChartListData) String() string { return proto.CompactTextString(m) }
func (*ChartListData) ProtoMessage()    {}
func (*ChartListData) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{18}
}

func (m *ChartListData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartListData.Unmarshal(m, b)
}
func (m *ChartListData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartListData.Marshal(b, m, deterministic)
}
func (m *ChartListData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartListData.Merge(m, src)
}
func (m *ChartListData) XXX_Size() int {
	return xxx_messageInfo_ChartListData.Size(m)
}
func (m *ChartListData) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartListData.DiscardUnknown(m)
}

var xxx_messageInfo_ChartListData proto.InternalMessageInfo

func (m *ChartListData) GetPage() uint32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *ChartListData) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *ChartListData) GetTotal() uint32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *ChartListData) GetData() []*Chart {
	if m != nil {
		return m.Data
	}
	return nil
}

type Chart struct {
	ProjectID            *string  `protobuf:"bytes,1,opt,name=projectID" json:"projectID,omitempty"`
	Repository           *string  `protobuf:"bytes,2,opt,name=repository" json:"repository,omitempty"`
	Type                 *string  `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Key                  *string  `protobuf:"bytes,4,opt,name=key" json:"key,omitempty"`
	Name                 *string  `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	LatestVersion        *string  `protobuf:"bytes,6,opt,name=latestVersion" json:"latestVersion,omitempty"`
	LatestAppVersion     *string  `protobuf:"bytes,7,opt,name=latestAppVersion" json:"latestAppVersion,omitempty"`
	LatestDescription    *string  `protobuf:"bytes,8,opt,name=latestDescription" json:"latestDescription,omitempty"`
	CreateBy             *string  `protobuf:"bytes,9,opt,name=createBy" json:"createBy,omitempty"`
	UpdateBy             *string  `protobuf:"bytes,10,opt,name=updateBy" json:"updateBy,omitempty"`
	CreateTime           *string  `protobuf:"bytes,11,opt,name=createTime" json:"createTime,omitempty"`
	UpdateTime           *string  `protobuf:"bytes,12,opt,name=updateTime" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chart) Reset()         { *m = Chart{} }
func (m *Chart) String() string { return proto.CompactTextString(m) }
func (*Chart) ProtoMessage()    {}
func (*Chart) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{19}
}

func (m *Chart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chart.Unmarshal(m, b)
}
func (m *Chart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chart.Marshal(b, m, deterministic)
}
func (m *Chart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chart.Merge(m, src)
}
func (m *Chart) XXX_Size() int {
	return xxx_messageInfo_Chart.Size(m)
}
func (m *Chart) XXX_DiscardUnknown() {
	xxx_messageInfo_Chart.DiscardUnknown(m)
}

var xxx_messageInfo_Chart proto.InternalMessageInfo

func (m *Chart) GetProjectID() string {
	if m != nil && m.ProjectID != nil {
		return *m.ProjectID
	}
	return ""
}

func (m *Chart) GetRepository() string {
	if m != nil && m.Repository != nil {
		return *m.Repository
	}
	return ""
}

func (m *Chart) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Chart) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Chart) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Chart) GetLatestVersion() string {
	if m != nil && m.LatestVersion != nil {
		return *m.LatestVersion
	}
	return ""
}

func (m *Chart) GetLatestAppVersion() string {
	if m != nil && m.LatestAppVersion != nil {
		return *m.LatestAppVersion
	}
	return ""
}

func (m *Chart) GetLatestDescription() string {
	if m != nil && m.LatestDescription != nil {
		return *m.LatestDescription
	}
	return ""
}

func (m *Chart) GetCreateBy() string {
	if m != nil && m.CreateBy != nil {
		return *m.CreateBy
	}
	return ""
}

func (m *Chart) GetUpdateBy() string {
	if m != nil && m.UpdateBy != nil {
		return *m.UpdateBy
	}
	return ""
}

func (m *Chart) GetCreateTime() string {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return ""
}

func (m *Chart) GetUpdateTime() string {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return ""
}

type ListChartVersionReq struct {
	Page                 *uint32  `protobuf:"varint,1,opt,name=page" json:"page,omitempty"`
	Size                 *uint32  `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	ProjectID            *string  `protobuf:"bytes,3,opt,name=projectID" json:"projectID,omitempty"`
	Repository           *string  `protobuf:"bytes,4,opt,name=repository" json:"repository,omitempty"`
	Name                 *string  `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Operator             *string  `protobuf:"bytes,6,opt,name=operator" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListChartVersionReq) Reset()         { *m = ListChartVersionReq{} }
func (m *ListChartVersionReq) String() string { return proto.CompactTextString(m) }
func (*ListChartVersionReq) ProtoMessage()    {}
func (*ListChartVersionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{20}
}

func (m *ListChartVersionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListChartVersionReq.Unmarshal(m, b)
}
func (m *ListChartVersionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListChartVersionReq.Marshal(b, m, deterministic)
}
func (m *ListChartVersionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListChartVersionReq.Merge(m, src)
}
func (m *ListChartVersionReq) XXX_Size() int {
	return xxx_messageInfo_ListChartVersionReq.Size(m)
}
func (m *ListChartVersionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListChartVersionReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListChartVersionReq proto.InternalMessageInfo

func (m *ListChartVersionReq) GetPage() uint32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *ListChartVersionReq) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *ListChartVersionReq) GetProjectID() string {
	if m != nil && m.ProjectID != nil {
		return *m.ProjectID
	}
	return ""
}

func (m *ListChartVersionReq) GetRepository() string {
	if m != nil && m.Repository != nil {
		return *m.Repository
	}
	return ""
}

func (m *ListChartVersionReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ListChartVersionReq) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

type ListChartVersionResp struct {
	Code                 *uint32               `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string               `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool                 `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *ChartVersionListData `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ListChartVersionResp) Reset()         { *m = ListChartVersionResp{} }
func (m *ListChartVersionResp) String() string { return proto.CompactTextString(m) }
func (*ListChartVersionResp) ProtoMessage()    {}
func (*ListChartVersionResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{21}
}

func (m *ListChartVersionResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListChartVersionResp.Unmarshal(m, b)
}
func (m *ListChartVersionResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListChartVersionResp.Marshal(b, m, deterministic)
}
func (m *ListChartVersionResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListChartVersionResp.Merge(m, src)
}
func (m *ListChartVersionResp) XXX_Size() int {
	return xxx_messageInfo_ListChartVersionResp.Size(m)
}
func (m *ListChartVersionResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListChartVersionResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListChartVersionResp proto.InternalMessageInfo

func (m *ListChartVersionResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ListChartVersionResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ListChartVersionResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ListChartVersionResp) GetData() *ChartVersionListData {
	if m != nil {
		return m.Data
	}
	return nil
}

type ChartVersionListData struct {
	Page                 *uint32         `protobuf:"varint,1,opt,name=page" json:"page,omitempty"`
	Size                 *uint32         `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	Total                *uint32         `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
	Data                 []*ChartVersion `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ChartVersionListData) Reset()         { *m = ChartVersionListData{} }
func (m *ChartVersionListData) String() string { return proto.CompactTextString(m) }
func (*ChartVersionListData) ProtoMessage()    {}
func (*ChartVersionListData) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{22}
}

func (m *ChartVersionListData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartVersionListData.Unmarshal(m, b)
}
func (m *ChartVersionListData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartVersionListData.Marshal(b, m, deterministic)
}
func (m *ChartVersionListData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartVersionListData.Merge(m, src)
}
func (m *ChartVersionListData) XXX_Size() int {
	return xxx_messageInfo_ChartVersionListData.Size(m)
}
func (m *ChartVersionListData) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartVersionListData.DiscardUnknown(m)
}

var xxx_messageInfo_ChartVersionListData proto.InternalMessageInfo

func (m *ChartVersionListData) GetPage() uint32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *ChartVersionListData) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *ChartVersionListData) GetTotal() uint32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *ChartVersionListData) GetData() []*ChartVersion {
	if m != nil {
		return m.Data
	}
	return nil
}

type ChartVersion struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Version              *string  `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	AppVersion           *string  `protobuf:"bytes,3,opt,name=appVersion" json:"appVersion,omitempty"`
	Description          *string  `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	CreateBy             *string  `protobuf:"bytes,5,opt,name=createBy" json:"createBy,omitempty"`
	UpdateBy             *string  `protobuf:"bytes,6,opt,name=updateBy" json:"updateBy,omitempty"`
	CreateTime           *string  `protobuf:"bytes,7,opt,name=createTime" json:"createTime,omitempty"`
	UpdateTime           *string  `protobuf:"bytes,8,opt,name=updateTime" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChartVersion) Reset()         { *m = ChartVersion{} }
func (m *ChartVersion) String() string { return proto.CompactTextString(m) }
func (*ChartVersion) ProtoMessage()    {}
func (*ChartVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{23}
}

func (m *ChartVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartVersion.Unmarshal(m, b)
}
func (m *ChartVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartVersion.Marshal(b, m, deterministic)
}
func (m *ChartVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartVersion.Merge(m, src)
}
func (m *ChartVersion) XXX_Size() int {
	return xxx_messageInfo_ChartVersion.Size(m)
}
func (m *ChartVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartVersion.DiscardUnknown(m)
}

var xxx_messageInfo_ChartVersion proto.InternalMessageInfo

func (m *ChartVersion) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ChartVersion) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *ChartVersion) GetAppVersion() string {
	if m != nil && m.AppVersion != nil {
		return *m.AppVersion
	}
	return ""
}

func (m *ChartVersion) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *ChartVersion) GetCreateBy() string {
	if m != nil && m.CreateBy != nil {
		return *m.CreateBy
	}
	return ""
}

func (m *ChartVersion) GetUpdateBy() string {
	if m != nil && m.UpdateBy != nil {
		return *m.UpdateBy
	}
	return ""
}

func (m *ChartVersion) GetCreateTime() string {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return ""
}

func (m *ChartVersion) GetUpdateTime() string {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return ""
}

type GetChartDetailReq struct {
	ProjectID            *string  `protobuf:"bytes,3,opt,name=projectID" json:"projectID,omitempty"`
	Repository           *string  `protobuf:"bytes,4,opt,name=repository" json:"repository,omitempty"`
	Name                 *string  `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Version              *string  `protobuf:"bytes,6,opt,name=version" json:"version,omitempty"`
	Operator             *string  `protobuf:"bytes,7,opt,name=operator" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChartDetailReq) Reset()         { *m = GetChartDetailReq{} }
func (m *GetChartDetailReq) String() string { return proto.CompactTextString(m) }
func (*GetChartDetailReq) ProtoMessage()    {}
func (*GetChartDetailReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{24}
}

func (m *GetChartDetailReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChartDetailReq.Unmarshal(m, b)
}
func (m *GetChartDetailReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChartDetailReq.Marshal(b, m, deterministic)
}
func (m *GetChartDetailReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChartDetailReq.Merge(m, src)
}
func (m *GetChartDetailReq) XXX_Size() int {
	return xxx_messageInfo_GetChartDetailReq.Size(m)
}
func (m *GetChartDetailReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChartDetailReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetChartDetailReq proto.InternalMessageInfo

func (m *GetChartDetailReq) GetProjectID() string {
	if m != nil && m.ProjectID != nil {
		return *m.ProjectID
	}
	return ""
}

func (m *GetChartDetailReq) GetRepository() string {
	if m != nil && m.Repository != nil {
		return *m.Repository
	}
	return ""
}

func (m *GetChartDetailReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *GetChartDetailReq) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *GetChartDetailReq) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

type GetChartDetailResp struct {
	Code                 *uint32      `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string      `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool        `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *ChartDetail `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetChartDetailResp) Reset()         { *m = GetChartDetailResp{} }
func (m *GetChartDetailResp) String() string { return proto.CompactTextString(m) }
func (*GetChartDetailResp) ProtoMessage()    {}
func (*GetChartDetailResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{25}
}

func (m *GetChartDetailResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChartDetailResp.Unmarshal(m, b)
}
func (m *GetChartDetailResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChartDetailResp.Marshal(b, m, deterministic)
}
func (m *GetChartDetailResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChartDetailResp.Merge(m, src)
}
func (m *GetChartDetailResp) XXX_Size() int {
	return xxx_messageInfo_GetChartDetailResp.Size(m)
}
func (m *GetChartDetailResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChartDetailResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetChartDetailResp proto.InternalMessageInfo

func (m *GetChartDetailResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *GetChartDetailResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *GetChartDetailResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *GetChartDetailResp) GetData() *ChartDetail {
	if m != nil {
		return m.Data
	}
	return nil
}

type ChartDetail struct {
	Name                 *string                 `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Version              *string                 `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	Readme               *string                 `protobuf:"bytes,3,opt,name=readme" json:"readme,omitempty"`
	ValuesFile           []string                `protobuf:"bytes,4,rep,name=valuesFile" json:"valuesFile,omitempty"`
	Contents             map[string]*FileContent `protobuf:"bytes,5,rep,name=contents" json:"contents,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ChartDetail) Reset()         { *m = ChartDetail{} }
func (m *ChartDetail) String() string { return proto.CompactTextString(m) }
func (*ChartDetail) ProtoMessage()    {}
func (*ChartDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{26}
}

func (m *ChartDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartDetail.Unmarshal(m, b)
}
func (m *ChartDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartDetail.Marshal(b, m, deterministic)
}
func (m *ChartDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartDetail.Merge(m, src)
}
func (m *ChartDetail) XXX_Size() int {
	return xxx_messageInfo_ChartDetail.Size(m)
}
func (m *ChartDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ChartDetail proto.InternalMessageInfo

func (m *ChartDetail) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ChartDetail) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *ChartDetail) GetReadme() string {
	if m != nil && m.Readme != nil {
		return *m.Readme
	}
	return ""
}

func (m *ChartDetail) GetValuesFile() []string {
	if m != nil {
		return m.ValuesFile
	}
	return nil
}

func (m *ChartDetail) GetContents() map[string]*FileContent {
	if m != nil {
		return m.Contents
	}
	return nil
}

type FileContent struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Path                 *string  `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Content              *string  `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileContent) Reset()         { *m = FileContent{} }
func (m *FileContent) String() string { return proto.CompactTextString(m) }
func (*FileContent) ProtoMessage()    {}
func (*FileContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{27}
}

func (m *FileContent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileContent.Unmarshal(m, b)
}
func (m *FileContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileContent.Marshal(b, m, deterministic)
}
func (m *FileContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileContent.Merge(m, src)
}
func (m *FileContent) XXX_Size() int {
	return xxx_messageInfo_FileContent.Size(m)
}
func (m *FileContent) XXX_DiscardUnknown() {
	xxx_messageInfo_FileContent.DiscardUnknown(m)
}

var xxx_messageInfo_FileContent proto.InternalMessageInfo

func (m *FileContent) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *FileContent) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *FileContent) GetContent() string {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return ""
}

type ListReleaseReq struct {
	Page                 *uint32  `protobuf:"varint,1,opt,name=page" json:"page,omitempty"`
	Size                 *uint32  `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	ClusterID            *string  `protobuf:"bytes,3,opt,name=clusterID" json:"clusterID,omitempty"`
	Namespace            *string  `protobuf:"bytes,4,opt,name=namespace" json:"namespace,omitempty"`
	Name                 *string  `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListReleaseReq) Reset()         { *m = ListReleaseReq{} }
func (m *ListReleaseReq) String() string { return proto.CompactTextString(m) }
func (*ListReleaseReq) ProtoMessage()    {}
func (*ListReleaseReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{28}
}

func (m *ListReleaseReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReleaseReq.Unmarshal(m, b)
}
func (m *ListReleaseReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReleaseReq.Marshal(b, m, deterministic)
}
func (m *ListReleaseReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReleaseReq.Merge(m, src)
}
func (m *ListReleaseReq) XXX_Size() int {
	return xxx_messageInfo_ListReleaseReq.Size(m)
}
func (m *ListReleaseReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReleaseReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListReleaseReq proto.InternalMessageInfo

func (m *ListReleaseReq) GetPage() uint32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *ListReleaseReq) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *ListReleaseReq) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *ListReleaseReq) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *ListReleaseReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type ListReleaseResp struct {
	Code                 *uint32          `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string          `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool            `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Data                 *ReleaseListData `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListReleaseResp) Reset()         { *m = ListReleaseResp{} }
func (m *ListReleaseResp) String() string { return proto.CompactTextString(m) }
func (*ListReleaseResp) ProtoMessage()    {}
func (*ListReleaseResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{29}
}

func (m *ListReleaseResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReleaseResp.Unmarshal(m, b)
}
func (m *ListReleaseResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReleaseResp.Marshal(b, m, deterministic)
}
func (m *ListReleaseResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReleaseResp.Merge(m, src)
}
func (m *ListReleaseResp) XXX_Size() int {
	return xxx_messageInfo_ListReleaseResp.Size(m)
}
func (m *ListReleaseResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReleaseResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListReleaseResp proto.InternalMessageInfo

func (m *ListReleaseResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ListReleaseResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ListReleaseResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ListReleaseResp) GetData() *ReleaseListData {
	if m != nil {
		return m.Data
	}
	return nil
}

type ReleaseListData struct {
	Page                 *uint32    `protobuf:"varint,1,opt,name=page" json:"page,omitempty"`
	Size                 *uint32    `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	Total                *uint32    `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
	Data                 []*Release `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ReleaseListData) Reset()         { *m = ReleaseListData{} }
func (m *ReleaseListData) String() string { return proto.CompactTextString(m) }
func (*ReleaseListData) ProtoMessage()    {}
func (*ReleaseListData) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{30}
}

func (m *ReleaseListData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseListData.Unmarshal(m, b)
}
func (m *ReleaseListData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseListData.Marshal(b, m, deterministic)
}
func (m *ReleaseListData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseListData.Merge(m, src)
}
func (m *ReleaseListData) XXX_Size() int {
	return xxx_messageInfo_ReleaseListData.Size(m)
}
func (m *ReleaseListData) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseListData.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseListData proto.InternalMessageInfo

func (m *ReleaseListData) GetPage() uint32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *ReleaseListData) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *ReleaseListData) GetTotal() uint32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *ReleaseListData) GetData() []*Release {
	if m != nil {
		return m.Data
	}
	return nil
}

type Release struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespace            *string  `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	Revision             *uint32  `protobuf:"varint,3,opt,name=revision" json:"revision,omitempty"`
	Status               *string  `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
	Chart                *string  `protobuf:"bytes,5,opt,name=chart" json:"chart,omitempty"`
	AppVersion           *string  `protobuf:"bytes,6,opt,name=appVersion" json:"appVersion,omitempty"`
	UpdateTime           *string  `protobuf:"bytes,7,opt,name=updateTime" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Release) Reset()         { *m = Release{} }
func (m *Release) String() string { return proto.CompactTextString(m) }
func (*Release) ProtoMessage()    {}
func (*Release) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{31}
}

func (m *Release) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Release.Unmarshal(m, b)
}
func (m *Release) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Release.Marshal(b, m, deterministic)
}
func (m *Release) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Release.Merge(m, src)
}
func (m *Release) XXX_Size() int {
	return xxx_messageInfo_Release.Size(m)
}
func (m *Release) XXX_DiscardUnknown() {
	xxx_messageInfo_Release.DiscardUnknown(m)
}

var xxx_messageInfo_Release proto.InternalMessageInfo

func (m *Release) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Release) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *Release) GetRevision() uint32 {
	if m != nil && m.Revision != nil {
		return *m.Revision
	}
	return 0
}

func (m *Release) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

func (m *Release) GetChart() string {
	if m != nil && m.Chart != nil {
		return *m.Chart
	}
	return ""
}

func (m *Release) GetAppVersion() string {
	if m != nil && m.AppVersion != nil {
		return *m.AppVersion
	}
	return ""
}

func (m *Release) GetUpdateTime() string {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return ""
}

type InstallReleaseReq struct {
	Name                 *string           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespace            *string           `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	ClusterID            *string           `protobuf:"bytes,3,opt,name=clusterID" json:"clusterID,omitempty"`
	ProjectID            *string           `protobuf:"bytes,4,opt,name=projectID" json:"projectID,omitempty"`
	Repository           *string           `protobuf:"bytes,5,opt,name=repository" json:"repository,omitempty"`
	Chart                *string           `protobuf:"bytes,6,opt,name=chart" json:"chart,omitempty"`
	Version              *string           `protobuf:"bytes,7,opt,name=version" json:"version,omitempty"`
	Operator             *string           `protobuf:"bytes,8,opt,name=operator" json:"operator,omitempty"`
	Values               []string          `protobuf:"bytes,9,rep,name=values" json:"values,omitempty"`
	Args                 []string          `protobuf:"bytes,10,rep,name=args" json:"args,omitempty"`
	BcsSysVar            map[string]string `protobuf:"bytes,11,rep,name=bcsSysVar" json:"bcsSysVar,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *InstallReleaseReq) Reset()         { *m = InstallReleaseReq{} }
func (m *InstallReleaseReq) String() string { return proto.CompactTextString(m) }
func (*InstallReleaseReq) ProtoMessage()    {}
func (*InstallReleaseReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{32}
}

func (m *InstallReleaseReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstallReleaseReq.Unmarshal(m, b)
}
func (m *InstallReleaseReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstallReleaseReq.Marshal(b, m, deterministic)
}
func (m *InstallReleaseReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstallReleaseReq.Merge(m, src)
}
func (m *InstallReleaseReq) XXX_Size() int {
	return xxx_messageInfo_InstallReleaseReq.Size(m)
}
func (m *InstallReleaseReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InstallReleaseReq.DiscardUnknown(m)
}

var xxx_messageInfo_InstallReleaseReq proto.InternalMessageInfo

func (m *InstallReleaseReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *InstallReleaseReq) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *InstallReleaseReq) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *InstallReleaseReq) GetProjectID() string {
	if m != nil && m.ProjectID != nil {
		return *m.ProjectID
	}
	return ""
}

func (m *InstallReleaseReq) GetRepository() string {
	if m != nil && m.Repository != nil {
		return *m.Repository
	}
	return ""
}

func (m *InstallReleaseReq) GetChart() string {
	if m != nil && m.Chart != nil {
		return *m.Chart
	}
	return ""
}

func (m *InstallReleaseReq) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *InstallReleaseReq) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

func (m *InstallReleaseReq) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *InstallReleaseReq) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *InstallReleaseReq) GetBcsSysVar() map[string]string {
	if m != nil {
		return m.BcsSysVar
	}
	return nil
}

type InstallReleaseResp struct {
	Code                 *uint32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool    `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstallReleaseResp) Reset()         { *m = InstallReleaseResp{} }
func (m *InstallReleaseResp) String() string { return proto.CompactTextString(m) }
func (*InstallReleaseResp) ProtoMessage()    {}
func (*InstallReleaseResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{33}
}

func (m *InstallReleaseResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstallReleaseResp.Unmarshal(m, b)
}
func (m *InstallReleaseResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstallReleaseResp.Marshal(b, m, deterministic)
}
func (m *InstallReleaseResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstallReleaseResp.Merge(m, src)
}
func (m *InstallReleaseResp) XXX_Size() int {
	return xxx_messageInfo_InstallReleaseResp.Size(m)
}
func (m *InstallReleaseResp) XXX_DiscardUnknown() {
	xxx_messageInfo_InstallReleaseResp.DiscardUnknown(m)
}

var xxx_messageInfo_InstallReleaseResp proto.InternalMessageInfo

func (m *InstallReleaseResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *InstallReleaseResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *InstallReleaseResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type UninstallReleaseReq struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespace            *string  `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	ClusterID            *string  `protobuf:"bytes,3,opt,name=clusterID" json:"clusterID,omitempty"`
	Operator             *string  `protobuf:"bytes,4,opt,name=operator" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UninstallReleaseReq) Reset()         { *m = UninstallReleaseReq{} }
func (m *UninstallReleaseReq) String() string { return proto.CompactTextString(m) }
func (*UninstallReleaseReq) ProtoMessage()    {}
func (*UninstallReleaseReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{34}
}

func (m *UninstallReleaseReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UninstallReleaseReq.Unmarshal(m, b)
}
func (m *UninstallReleaseReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UninstallReleaseReq.Marshal(b, m, deterministic)
}
func (m *UninstallReleaseReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UninstallReleaseReq.Merge(m, src)
}
func (m *UninstallReleaseReq) XXX_Size() int {
	return xxx_messageInfo_UninstallReleaseReq.Size(m)
}
func (m *UninstallReleaseReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UninstallReleaseReq.DiscardUnknown(m)
}

var xxx_messageInfo_UninstallReleaseReq proto.InternalMessageInfo

func (m *UninstallReleaseReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *UninstallReleaseReq) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *UninstallReleaseReq) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *UninstallReleaseReq) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

type UninstallReleaseResp struct {
	Code                 *uint32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool    `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UninstallReleaseResp) Reset()         { *m = UninstallReleaseResp{} }
func (m *UninstallReleaseResp) String() string { return proto.CompactTextString(m) }
func (*UninstallReleaseResp) ProtoMessage()    {}
func (*UninstallReleaseResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{35}
}

func (m *UninstallReleaseResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UninstallReleaseResp.Unmarshal(m, b)
}
func (m *UninstallReleaseResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UninstallReleaseResp.Marshal(b, m, deterministic)
}
func (m *UninstallReleaseResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UninstallReleaseResp.Merge(m, src)
}
func (m *UninstallReleaseResp) XXX_Size() int {
	return xxx_messageInfo_UninstallReleaseResp.Size(m)
}
func (m *UninstallReleaseResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UninstallReleaseResp.DiscardUnknown(m)
}

var xxx_messageInfo_UninstallReleaseResp proto.InternalMessageInfo

func (m *UninstallReleaseResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *UninstallReleaseResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *UninstallReleaseResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type UpgradeReleaseReq struct {
	Name                 *string           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespace            *string           `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	ClusterID            *string           `protobuf:"bytes,3,opt,name=clusterID" json:"clusterID,omitempty"`
	ProjectID            *string           `protobuf:"bytes,4,opt,name=projectID" json:"projectID,omitempty"`
	Repository           *string           `protobuf:"bytes,5,opt,name=repository" json:"repository,omitempty"`
	Chart                *string           `protobuf:"bytes,6,opt,name=chart" json:"chart,omitempty"`
	Version              *string           `protobuf:"bytes,7,opt,name=version" json:"version,omitempty"`
	Operator             *string           `protobuf:"bytes,8,opt,name=operator" json:"operator,omitempty"`
	Values               []string          `protobuf:"bytes,9,rep,name=values" json:"values,omitempty"`
	Args                 []string          `protobuf:"bytes,10,rep,name=args" json:"args,omitempty"`
	BcsSysVar            map[string]string `protobuf:"bytes,11,rep,name=bcsSysVar" json:"bcsSysVar,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UpgradeReleaseReq) Reset()         { *m = UpgradeReleaseReq{} }
func (m *UpgradeReleaseReq) String() string { return proto.CompactTextString(m) }
func (*UpgradeReleaseReq) ProtoMessage()    {}
func (*UpgradeReleaseReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{36}
}

func (m *UpgradeReleaseReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpgradeReleaseReq.Unmarshal(m, b)
}
func (m *UpgradeReleaseReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpgradeReleaseReq.Marshal(b, m, deterministic)
}
func (m *UpgradeReleaseReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpgradeReleaseReq.Merge(m, src)
}
func (m *UpgradeReleaseReq) XXX_Size() int {
	return xxx_messageInfo_UpgradeReleaseReq.Size(m)
}
func (m *UpgradeReleaseReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpgradeReleaseReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpgradeReleaseReq proto.InternalMessageInfo

func (m *UpgradeReleaseReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *UpgradeReleaseReq) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *UpgradeReleaseReq) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *UpgradeReleaseReq) GetProjectID() string {
	if m != nil && m.ProjectID != nil {
		return *m.ProjectID
	}
	return ""
}

func (m *UpgradeReleaseReq) GetRepository() string {
	if m != nil && m.Repository != nil {
		return *m.Repository
	}
	return ""
}

func (m *UpgradeReleaseReq) GetChart() string {
	if m != nil && m.Chart != nil {
		return *m.Chart
	}
	return ""
}

func (m *UpgradeReleaseReq) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *UpgradeReleaseReq) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

func (m *UpgradeReleaseReq) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *UpgradeReleaseReq) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *UpgradeReleaseReq) GetBcsSysVar() map[string]string {
	if m != nil {
		return m.BcsSysVar
	}
	return nil
}

type UpgradeReleaseResp struct {
	Code                 *uint32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool    `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpgradeReleaseResp) Reset()         { *m = UpgradeReleaseResp{} }
func (m *UpgradeReleaseResp) String() string { return proto.CompactTextString(m) }
func (*UpgradeReleaseResp) ProtoMessage()    {}
func (*UpgradeReleaseResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{37}
}

func (m *UpgradeReleaseResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpgradeReleaseResp.Unmarshal(m, b)
}
func (m *UpgradeReleaseResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpgradeReleaseResp.Marshal(b, m, deterministic)
}
func (m *UpgradeReleaseResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpgradeReleaseResp.Merge(m, src)
}
func (m *UpgradeReleaseResp) XXX_Size() int {
	return xxx_messageInfo_UpgradeReleaseResp.Size(m)
}
func (m *UpgradeReleaseResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpgradeReleaseResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpgradeReleaseResp proto.InternalMessageInfo

func (m *UpgradeReleaseResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *UpgradeReleaseResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *UpgradeReleaseResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type RollbackReleaseReq struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespace            *string  `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	ClusterID            *string  `protobuf:"bytes,3,opt,name=clusterID" json:"clusterID,omitempty"`
	Revision             *uint32  `protobuf:"varint,4,opt,name=revision" json:"revision,omitempty"`
	Operator             *string  `protobuf:"bytes,5,opt,name=operator" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RollbackReleaseReq) Reset()         { *m = RollbackReleaseReq{} }
func (m *RollbackReleaseReq) String() string { return proto.CompactTextString(m) }
func (*RollbackReleaseReq) ProtoMessage()    {}
func (*RollbackReleaseReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{38}
}

func (m *RollbackReleaseReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollbackReleaseReq.Unmarshal(m, b)
}
func (m *RollbackReleaseReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollbackReleaseReq.Marshal(b, m, deterministic)
}
func (m *RollbackReleaseReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollbackReleaseReq.Merge(m, src)
}
func (m *RollbackReleaseReq) XXX_Size() int {
	return xxx_messageInfo_RollbackReleaseReq.Size(m)
}
func (m *RollbackReleaseReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RollbackReleaseReq.DiscardUnknown(m)
}

var xxx_messageInfo_RollbackReleaseReq proto.InternalMessageInfo

func (m *RollbackReleaseReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *RollbackReleaseReq) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *RollbackReleaseReq) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *RollbackReleaseReq) GetRevision() uint32 {
	if m != nil && m.Revision != nil {
		return *m.Revision
	}
	return 0
}

func (m *RollbackReleaseReq) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

type RollbackReleaseResp struct {
	Code                 *uint32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message              *string  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Result               *bool    `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RollbackReleaseResp) Reset()         { *m = RollbackReleaseResp{} }
func (m *RollbackReleaseResp) String() string { return proto.CompactTextString(m) }
func (*RollbackReleaseResp) ProtoMessage()    {}
func (*RollbackReleaseResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29783c92bc89288d, []int{39}
}

func (m *RollbackReleaseResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollbackReleaseResp.Unmarshal(m, b)
}
func (m *RollbackReleaseResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollbackReleaseResp.Marshal(b, m, deterministic)
}
func (m *RollbackReleaseResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollbackReleaseResp.Merge(m, src)
}
func (m *RollbackReleaseResp) XXX_Size() int {
	return xxx_messageInfo_RollbackReleaseResp.Size(m)
}
func (m *RollbackReleaseResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RollbackReleaseResp.DiscardUnknown(m)
}

var xxx_messageInfo_RollbackReleaseResp proto.InternalMessageInfo

func (m *RollbackReleaseResp) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *RollbackReleaseResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *RollbackReleaseResp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func init() {
	proto.RegisterType((*AvailableReq)(nil), "helmmanager.AvailableReq")
	proto.RegisterType((*AvailableResp)(nil), "helmmanager.AvailableResp")
	proto.RegisterType((*CreateRepositoryReq)(nil), "helmmanager.CreateRepositoryReq")
	proto.RegisterType((*CreateRepositoryResp)(nil), "helmmanager.CreateRepositoryResp")
	proto.RegisterType((*UpdateRepositoryReq)(nil), "helmmanager.UpdateRepositoryReq")
	proto.RegisterType((*UpdateRepositoryResp)(nil), "helmmanager.UpdateRepositoryResp")
	proto.RegisterType((*GetRepositoryReq)(nil), "helmmanager.GetRepositoryReq")
	proto.RegisterType((*GetRepositoryResp)(nil), "helmmanager.GetRepositoryResp")
	proto.RegisterType((*ListRepositoryReq)(nil), "helmmanager.ListRepositoryReq")
	proto.RegisterType((*ListRepositoryResp)(nil), "helmmanager.ListRepositoryResp")
	proto.RegisterType((*DeleteRepositoryReq)(nil), "helmmanager.DeleteRepositoryReq")
	proto.RegisterType((*DeleteRepositoryResp)(nil), "helmmanager.DeleteRepositoryResp")
	proto.RegisterType((*DeleteRepositoriesReq)(nil), "helmmanager.DeleteRepositoriesReq")
	proto.RegisterType((*DeleteRepositoriesResp)(nil), "helmmanager.DeleteRepositoriesResp")
	proto.RegisterType((*RepositoryListData)(nil), "helmmanager.RepositoryListData")
	proto.RegisterType((*Repository)(nil), "helmmanager.Repository")
	proto.RegisterType((*ListChartReq)(nil), "helmmanager.ListChartReq")
	proto.RegisterType((*ListChartResp)(nil), "helmmanager.ListChartResp")
	proto.RegisterType((*ChartListData)(nil), "helmmanager.ChartListData")
	proto.RegisterType((*Chart)(nil), "helmmanager.Chart")
	proto.RegisterType((*ListChartVersionReq)(nil), "helmmanager.ListChartVersionReq")
	proto.RegisterType((*ListChartVersionResp)(nil), "helmmanager.ListChartVersionResp")
	proto.RegisterType((*ChartVersionListData)(nil), "helmmanager.ChartVersionListData")
	proto.RegisterType((*ChartVersion)(nil), "helmmanager.ChartVersion")
	proto.RegisterType((*GetChartDetailReq)(nil), "helmmanager.GetChartDetailReq")
	proto.RegisterType((*GetChartDetailResp)(nil), "helmmanager.GetChartDetailResp")
	proto.RegisterType((*ChartDetail)(nil), "helmmanager.ChartDetail")
	proto.RegisterMapType((map[string]*FileContent)(nil), "helmmanager.ChartDetail.ContentsEntry")
	proto.RegisterType((*FileContent)(nil), "helmmanager.FileContent")
	proto.RegisterType((*ListReleaseReq)(nil), "helmmanager.ListReleaseReq")
	proto.RegisterType((*ListReleaseResp)(nil), "helmmanager.ListReleaseResp")
	proto.RegisterType((*ReleaseListData)(nil), "helmmanager.ReleaseListData")
	proto.RegisterType((*Release)(nil), "helmmanager.Release")
	proto.RegisterType((*InstallReleaseReq)(nil), "helmmanager.InstallReleaseReq")
	proto.RegisterMapType((map[string]string)(nil), "helmmanager.InstallReleaseReq.BcsSysVarEntry")
	proto.RegisterType((*InstallReleaseResp)(nil), "helmmanager.InstallReleaseResp")
	proto.RegisterType((*UninstallReleaseReq)(nil), "helmmanager.UninstallReleaseReq")
	proto.RegisterType((*UninstallReleaseResp)(nil), "helmmanager.UninstallReleaseResp")
	proto.RegisterType((*UpgradeReleaseReq)(nil), "helmmanager.UpgradeReleaseReq")
	proto.RegisterMapType((map[string]string)(nil), "helmmanager.UpgradeReleaseReq.BcsSysVarEntry")
	proto.RegisterType((*UpgradeReleaseResp)(nil), "helmmanager.UpgradeReleaseResp")
	proto.RegisterType((*RollbackReleaseReq)(nil), "helmmanager.RollbackReleaseReq")
	proto.RegisterType((*RollbackReleaseResp)(nil), "helmmanager.RollbackReleaseResp")
}

func init() { proto.RegisterFile("bcs-helm-manager.proto", fileDescriptor_29783c92bc89288d) }

var fileDescriptor_29783c92bc89288d = []byte{
	// 3827 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5c, 0x5b, 0x6c, 0x14, 0x57,
	0x7f, 0xd7, 0xec, 0xfa, 0xb6, 0xc7, 0x36, 0xd8, 0xc7, 0x36, 0x2c, 0x03, 0x84, 0x65, 0xf9, 0x20,
	0x66, 0x7c, 0x59, 0x7b, 0x70, 0xf8, 0xbe, 0x2e, 0xe1, 0x83, 0x59, 0x0c, 0x98, 0x7c, 0xa4, 0x49,
	0xa7, 0x90, 0x34, 0x51, 0xa4, 0x6a, 0x58, 0x8f, 0x9c, 0x0d, 0x6b, 0xef, 0x66, 0x67, 0x21, 0x72,
	0x10, 0x92, 0x49, 0x30, 0x36, 0x09, 0x60, 0x34, 0x90, 0x40, 0xb0, 0x43, 0x71, 0x0a, 0xc1, 0xcd,
	0x05, 0x3b, 0x11, 0xe5, 0x62, 0x97, 0x20, 0xf5, 0xa9, 0x7d, 0xa8, 0xfa, 0xd0, 0x87, 0x3e, 0xb4,
	0xaa, 0xda, 0xca, 0x33, 0xbb, 0xee, 0x4b, 0x2b, 0xe5, 0xa5, 0x6a, 0xab, 0xb4, 0x9a, 0x73, 0xce,
	0xdc, 0xc7, 0x66, 0xd7, 0x24, 0x8a, 0x43, 0x79, 0xc2, 0xfb, 0x3f, 0xe7, 0x7f, 0xe6, 0x7f, 0xfd,
	0xfd, 0xff, 0xe7, 0xcc, 0x19, 0xc0, 0x8a, 0x43, 0x71, 0xa9, 0xe5, 0x4d, 0x31, 0xd9, 0xdb, 0xd2,
	0x2b, 0xf4, 0x09, 0x3d, 0x62, 0xa6, 0x35, 0x9d, 0x49, 0x65, 0x53, 0xb0, 0x52, 0xa3, 0x11, 0x12,
	0xbd, 0xa6, 0x27, 0x95, 0xea, 0x49, 0x8a, 0x11, 0x21, 0x9d, 0x88, 0x08, 0x7d, 0x7d, 0xa9, 0xac,
	0x90, 0x4d, 0xa4, 0xfa, 0x24, 0x3c, 0x95, 0x6e, 0x46, 0xff, 0xc4, 0x5b, 0x7a, 0xc4, 0xbe, 0x16,
	0xe9, 0x1d, 0xa1, 0xa7, 0x47, 0xcc, 0x44, 0x52, 0x69, 0x34, 0xc3, 0x63, 0xf6, 0xca, 0xa3, 0x42,
	0x32, 0xd1, 0x2d, 0x64, 0xc5, 0x88, 0xfe, 0x07, 0x1e, 0x08, 0xbf, 0x04, 0xaa, 0xb8, 0xa3, 0x42,
	0x22, 0x29, 0x1c, 0x4a, 0x8a, 0xbc, 0xf8, 0x76, 0x74, 0x87, 0xcc, 0x3d, 0x0f, 0xa2, 0x8c, 0x8d,
	0xc8, 0x32, 0xea, 0x9f, 0xdc, 0xc8, 0x4f, 0x7e, 0x66, 0x15, 0x58, 0x1d, 0x3b, 0xab, 0x7c, 0x30,
	0xae, 0x5e, 0x9e, 0x54, 0xce, 0x7f, 0xae, 0x8c, 0x4c, 0xe6, 0x2e, 0x4e, 0x28, 0x23, 0xef, 0xa9,
	0x1f, 0x4d, 0x85, 0xff, 0x83, 0x02, 0xd5, 0x16, 0x66, 0x29, 0x0d, 0x5b, 0x41, 0x49, 0x3c, 0xd5,
	0x2d, 0x06, 0xa9, 0x10, 0xd5, 0x58, 0x1d, 0xa3, 0x65, 0x6e, 0x25, 0x83, 0x08, 0xec, 0xf2, 0xfc,
	0xc3, 0x8b, 0xca, 0xe8, 0xd5, 0xb9, 0x8b, 0x9f, 0xe4, 0x27, 0x27, 0x73, 0xd7, 0x4e, 0xf0, 0x88,
	0x0c, 0xa3, 0xa0, 0xbc, 0x57, 0x94, 0x24, 0xa1, 0x47, 0x0c, 0xfa, 0x42, 0x54, 0x63, 0x20, 0x16,
	0x92, 0xb9, 0xb5, 0x8c, 0x4e, 0x63, 0xa1, 0x95, 0x6b, 0xf6, 0xe1, 0xb8, 0x7a, 0x62, 0x92, 0xd7,
	0x07, 0x61, 0x3b, 0x28, 0xcb, 0x88, 0xd2, 0x91, 0x64, 0x36, 0xe8, 0x0f, 0x51, 0x8d, 0x15, 0xb1,
	0x55, 0x32, 0xb7, 0x82, 0x21, 0x24, 0xb6, 0x0a, 0x73, 0xe6, 0x66, 0x2e, 0xa8, 0x57, 0xc7, 0x78,
	0x42, 0x8d, 0xee, 0x94, 0xb9, 0xed, 0x60, 0x1b, 0x63, 0x17, 0xba, 0x30, 0x95, 0xf1, 0x7a, 0xe1,
	0x7f, 0x2a, 0x01, 0x75, 0xbb, 0x32, 0xa2, 0x90, 0x15, 0x79, 0x31, 0x9d, 0x92, 0x12, 0xd9, 0x54,
	0xa6, 0x9f, 0x17, 0xdf, 0x86, 0x3b, 0x40, 0x20, 0x9d, 0x49, 0xbd, 0x25, 0xc6, 0xb3, 0xfb, 0x3a,
	0x91, 0xf6, 0x81, 0xd8, 0x7a, 0x99, 0x6b, 0x60, 0x4c, 0x2a, 0x5b, 0x31, 0x37, 0x7e, 0x3f, 0x37,
	0x7a, 0x2b, 0xd1, 0xfd, 0x5f, 0xb1, 0xb2, 0x4c, 0x49, 0x0d, 0x15, 0xdc, 0xc9, 0x9b, 0xa3, 0xb0,
	0x03, 0x94, 0xf4, 0x09, 0xbd, 0x16, 0x33, 0xd4, 0x33, 0x88, 0xc0, 0x56, 0xcd, 0xce, 0x5c, 0x50,
	0xa6, 0x2f, 0x28, 0xe7, 0xcf, 0xe6, 0x6e, 0x4e, 0x99, 0xac, 0x68, 0x10, 0x36, 0x81, 0x92, 0x6c,
	0x7f, 0x5a, 0x44, 0x16, 0x08, 0xc4, 0x56, 0x22, 0x2e, 0x8d, 0xa0, 0x73, 0xe5, 0xbe, 0x99, 0x51,
	0xae, 0x7e, 0xc8, 0x23, 0x1a, 0x8c, 0x6a, 0x06, 0xeb, 0x4d, 0x65, 0xc5, 0x60, 0x09, 0x32, 0x58,
	0x58, 0xe6, 0xd6, 0x31, 0x84, 0xc4, 0x36, 0x60, 0x65, 0x67, 0xef, 0x4d, 0xe7, 0x1f, 0x8e, 0xe5,
	0x26, 0x3e, 0xc4, 0xfc, 0x3c, 0x19, 0x86, 0x3b, 0x41, 0x00, 0xff, 0x75, 0x90, 0xdf, 0x1f, 0x2c,
	0x45, 0x4f, 0x43, 0xec, 0x26, 0x55, 0x73, 0x96, 0xc9, 0xa8, 0x8c, 0x4d, 0x29, 0x9f, 0x0e, 0xf0,
	0xe6, 0x30, 0xec, 0x00, 0x15, 0x47, 0x24, 0x31, 0x83, 0x94, 0x2c, 0x43, 0x0b, 0x04, 0x35, 0x03,
	0x19, 0x44, 0x36, 0x90, 0xbb, 0x38, 0xa1, 0x0e, 0xdf, 0x55, 0xce, 0x9f, 0xe5, 0x0d, 0x22, 0x6c,
	0x07, 0x15, 0x69, 0x41, 0x92, 0xde, 0x49, 0x65, 0xba, 0x83, 0xe5, 0x88, 0xab, 0x41, 0xe6, 0x20,
	0x63, 0x10, 0xd9, 0x32, 0x65, 0xf2, 0x94, 0x16, 0x4f, 0x06, 0x05, 0x6e, 0x07, 0x15, 0xa9, 0xb4,
	0x98, 0x11, 0xb2, 0xa9, 0x4c, 0xb0, 0xc2, 0xf4, 0x84, 0x41, 0x64, 0x03, 0xea, 0x85, 0xb3, 0xb3,
	0x0f, 0xc6, 0xf2, 0x03, 0x83, 0xa6, 0x39, 0x8d, 0x51, 0xf8, 0x02, 0xa8, 0xc8, 0x0a, 0x87, 0xc5,
	0xd4, 0x51, 0x31, 0x13, 0x0c, 0x20, 0x3b, 0xb5, 0xca, 0x5c, 0x13, 0x63, 0x10, 0xd9, 0x75, 0x86,
	0xa5, 0xd4, 0x73, 0x37, 0x72, 0xb7, 0xc6, 0x95, 0xbb, 0xdf, 0x2a, 0x5f, 0x5f, 0x56, 0xc6, 0x26,
	0x72, 0x57, 0x4e, 0x66, 0xc4, 0x74, 0x8a, 0x37, 0xa6, 0x46, 0xdb, 0x65, 0xae, 0x15, 0x34, 0x33,
	0x5e, 0x11, 0xc3, 0x36, 0x28, 0xc3, 0xa3, 0xca, 0xcc, 0x34, 0xf1, 0xd3, 0x95, 0x93, 0x24, 0xa7,
	0xee, 0xf9, 0x40, 0xbd, 0x7b, 0xfa, 0x92, 0x4f, 0x2d, 0xf8, 0x22, 0x28, 0xe9, 0x16, 0xb2, 0x02,
	0x0a, 0xad, 0x4a, 0x76, 0x65, 0xab, 0x05, 0xdd, 0x5a, 0x4d, 0x4d, 0xb0, 0x10, 0x68, 0xa6, 0x6e,
	0x80, 0xdc, 0x95, 0x93, 0xd8, 0x06, 0x44, 0x08, 0x34, 0x18, 0x65, 0x65, 0x2e, 0x02, 0x5a, 0x18,
	0x4f, 0x53, 0xb8, 0x4c, 0x47, 0x72, 0x53, 0x2e, 0x01, 0x75, 0x07, 0xd3, 0xdd, 0x4f, 0x73, 0xf3,
	0x49, 0xcd, 0x4d, 0x23, 0x9f, 0x3c, 0xbc, 0xcc, 0x36, 0xa8, 0xa3, 0xb7, 0xd5, 0x8f, 0xa7, 0xbc,
	0xf2, 0xc9, 0x3d, 0xfd, 0x89, 0xcc, 0x27, 0x6c, 0x80, 0x85, 0xf3, 0xc9, 0xcb, 0x14, 0x2e, 0xd3,
	0x91, 0x7c, 0xba, 0x4f, 0x81, 0x9a, 0xbd, 0x62, 0x76, 0x29, 0x24, 0x53, 0x54, 0xc3, 0x60, 0xb0,
	0x99, 0x71, 0xc9, 0xc3, 0x36, 0xe0, 0xe2, 0xed, 0x74, 0xfb, 0xb7, 0x3e, 0x50, 0xeb, 0x98, 0xfb,
	0x64, 0xfa, 0x1c, 0x69, 0xef, 0xed, 0xf3, 0x88, 0xcc, 0x35, 0x03, 0x86, 0x71, 0xdb, 0xc1, 0x65,
	0x34, 0xe2, 0xf0, 0xbb, 0x7e, 0x50, 0xbb, 0x3f, 0x21, 0x39, 0x3c, 0xde, 0x04, 0x4a, 0xa4, 0x54,
	0x26, 0x4b, 0x9c, 0x8d, 0x71, 0x4c, 0x23, 0xb0, 0x55, 0xea, 0x39, 0x59, 0x99, 0x1e, 0x99, 0x1b,
	0x9f, 0x56, 0xa6, 0x47, 0x78, 0x44, 0x83, 0x2f, 0x81, 0x92, 0x6e, 0x51, 0x8a, 0x23, 0x73, 0x55,
	0xc4, 0xb6, 0xc9, 0xdc, 0x6f, 0x18, 0x44, 0x60, 0xdb, 0xf0, 0x64, 0x03, 0xc9, 0x94, 0x01, 0xed,
	0x67, 0x73, 0x68, 0x76, 0x66, 0x50, 0x19, 0x9b, 0xd0, 0x78, 0xd5, 0x33, 0x43, 0xca, 0xad, 0x2b,
	0xea, 0xa5, 0x3b, 0xea, 0xd8, 0x69, 0xf5, 0xa3, 0x61, 0x1e, 0xf1, 0xc1, 0x8d, 0xa0, 0x24, 0xad,
	0xd9, 0xdf, 0x8f, 0x5c, 0x56, 0x2b, 0x73, 0xcb, 0x18, 0x44, 0x60, 0xcb, 0xe6, 0xc6, 0xff, 0x5c,
	0xfd, 0x68, 0x8a, 0x47, 0xbf, 0x90, 0x90, 0x89, 0x77, 0x31, 0x7a, 0x56, 0xeb, 0x42, 0x26, 0xde,
	0x15, 0xd9, 0x2a, 0x75, 0x72, 0x04, 0xcf, 0x9c, 0x1b, 0xd2, 0x84, 0x4c, 0xbc, 0x2b, 0xda, 0x63,
	0xb8, 0x74, 0x11, 0x31, 0xdc, 0x44, 0x62, 0xb8, 0xcc, 0x62, 0x12, 0x77, 0x0c, 0x3b, 0xea, 0x40,
	0x79, 0x01, 0x75, 0x20, 0xfa, 0x9c, 0xcc, 0xb1, 0xa0, 0x8d, 0x71, 0xbb, 0x81, 0x5d, 0xad, 0x9e,
	0xbe, 0x3f, 0x37, 0x34, 0xe2, 0x1d, 0xee, 0x7f, 0xe9, 0x03, 0xd0, 0xc9, 0xb2, 0xf4, 0xe3, 0xfd,
	0xa0, 0x2d, 0xde, 0xd7, 0xcd, 0x13, 0xef, 0x9a, 0x5e, 0x9d, 0x42, 0x56, 0x28, 0x38, 0xee, 0xb7,
	0xca, 0xdc, 0x16, 0xd0, 0xce, 0x78, 0x18, 0x64, 0x1e, 0x23, 0x92, 0xf0, 0xff, 0x81, 0x02, 0x75,
	0x9d, 0x62, 0x52, 0x5c, 0x22, 0xfd, 0x83, 0xb5, 0x56, 0xfa, 0x17, 0x5f, 0x2b, 0x3d, 0x34, 0xd2,
	0x1a, 0xa8, 0x6b, 0x73, 0x9f, 0x5c, 0x77, 0x46, 0xd1, 0x1c, 0x05, 0xea, 0xdd, 0xd3, 0x97, 0xfe,
	0xb6, 0x4e, 0x2f, 0x6e, 0x5e, 0xb2, 0xbb, 0x74, 0x25, 0xce, 0xfe, 0x2b, 0x0a, 0x34, 0x38, 0xe6,
	0x27, 0x44, 0xe9, 0x47, 0x71, 0xf7, 0x16, 0x50, 0xaa, 0x39, 0x50, 0x0a, 0xfa, 0x42, 0xfe, 0xc6,
	0x40, 0x6c, 0xad, 0xcc, 0xd1, 0xc4, 0xdf, 0xd0, 0xea, 0x6f, 0x65, 0xf8, 0x52, 0x7e, 0x7c, 0x82,
	0xc7, 0x73, 0xa3, 0xbf, 0x27, 0x73, 0x5b, 0x41, 0x07, 0xe3, 0x2d, 0x93, 0x1e, 0xb7, 0xde, 0x6e,
	0xfb, 0x9e, 0x02, 0x2b, 0xbc, 0xd8, 0x96, 0xbe, 0xe3, 0xa2, 0x32, 0xf7, 0x6b, 0xf0, 0x1c, 0x33,
	0x8f, 0xf4, 0xf3, 0x68, 0x4d, 0x1c, 0xf8, 0x2f, 0x14, 0x80, 0x6e, 0x90, 0x30, 0xea, 0x05, 0x55,
	0x58, 0xbd, 0xf0, 0x15, 0x52, 0x2f, 0x1a, 0x41, 0x69, 0x36, 0x95, 0x15, 0x92, 0xa4, 0x08, 0x41,
	0x99, 0x5b, 0xce, 0x60, 0x0a, 0x5b, 0xa6, 0x0e, 0xcc, 0x68, 0xab, 0xe2, 0x9f, 0x96, 0x0a, 0xee,
	0xff, 0x11, 0x2a, 0x78, 0xf8, 0xdf, 0x4b, 0x00, 0x30, 0xd9, 0xe0, 0x56, 0x77, 0x64, 0x06, 0xe7,
	0x8b, 0x4c, 0xaf, 0x72, 0xe5, 0x2b, 0xa6, 0x5c, 0x3d, 0xdd, 0xb6, 0x98, 0xdb, 0x96, 0x0e, 0x50,
	0x11, 0x47, 0x1b, 0xd1, 0x58, 0x3f, 0xd9, 0xb6, 0xe0, 0x07, 0xe9, 0x44, 0x36, 0x80, 0x77, 0xa4,
	0xf9, 0x81, 0x41, 0xde, 0x20, 0x22, 0xf1, 0x50, 0xbb, 0x1d, 0xeb, 0x47, 0x27, 0x09, 0x86, 0x78,
	0x84, 0xc8, 0x06, 0x70, 0xdf, 0x8d, 0xb8, 0x74, 0x22, 0xdc, 0x0e, 0x00, 0x5e, 0xe1, 0x40, 0xa2,
	0x57, 0x0c, 0x02, 0xc4, 0x87, 0x20, 0xc4, 0x42, 0x66, 0xab, 0xf0, 0xf3, 0xd4, 0x4b, 0x77, 0xe6,
	0x2e, 0xdd, 0xe6, 0x2d, 0x23, 0x1a, 0x3b, 0x5e, 0x0a, 0xb1, 0x57, 0x5a, 0xd8, 0x4d, 0x32, 0x5b,
	0x85, 0x1f, 0xac, 0xb3, 0x9b, 0x23, 0xe1, 0x7f, 0xf0, 0x81, 0x2a, 0x2d, 0x97, 0x76, 0xbd, 0x29,
	0x64, 0xb2, 0x1a, 0x1a, 0xfe, 0x14, 0xf9, 0x64, 0x43, 0x58, 0xff, 0x22, 0x10, 0x76, 0x0f, 0x00,
	0x19, 0x23, 0x2d, 0x50, 0xe8, 0x05, 0x62, 0x9b, 0x90, 0x92, 0x26, 0x79, 0xbe, 0xe2, 0x6a, 0x99,
	0x62, 0x2b, 0xb1, 0xa5, 0xde, 0x25, 0x16, 0x65, 0xe7, 0x3c, 0x25, 0x96, 0x34, 0xd8, 0x36, 0x83,
	0xb1, 0xb4, 0xb5, 0xc5, 0x88, 0x6b, 0x54, 0x13, 0xa9, 0x6f, 0xfb, 0x40, 0xb5, 0x65, 0xf2, 0xd2,
	0xef, 0xd0, 0x78, 0x5b, 0x87, 0x46, 0xdb, 0xf0, 0x0c, 0x29, 0x61, 0x34, 0x67, 0x28, 0x75, 0x31,
	0xa4, 0xad, 0x34, 0x20, 0x4d, 0x57, 0xdf, 0xd6, 0x9e, 0xb5, 0xc9, 0x5c, 0x0b, 0x68, 0x62, 0xec,
	0x86, 0xf0, 0x36, 0x1b, 0x81, 0xfa, 0xbf, 0xa7, 0x40, 0xb5, 0xed, 0x69, 0x3f, 0x33, 0xca, 0x77,
	0xd9, 0x50, 0x1e, 0xba, 0xad, 0x52, 0x38, 0xc0, 0x97, 0x82, 0x52, 0xc4, 0xb1, 0x68, 0x6c, 0xdf,
	0x6e, 0x4b, 0x05, 0x9f, 0x25, 0xdf, 0xe7, 0x4b, 0x05, 0x5b, 0x06, 0x14, 0x85, 0xf6, 0x1b, 0x81,
	0xff, 0xb0, 0xa8, 0xe7, 0x5b, 0x9d, 0xcc, 0xd5, 0x30, 0xda, 0x6f, 0x36, 0x80, 0xdc, 0x15, 0x3a,
	0x2c, 0xf6, 0xf3, 0xda, 0x6f, 0xc8, 0x90, 0x72, 0x83, 0x33, 0x6a, 0x85, 0xcc, 0xd5, 0x91, 0x72,
	0x53, 0x89, 0x26, 0xda, 0xaa, 0xcd, 0xcb, 0xa0, 0x3a, 0x29, 0x64, 0x45, 0x29, 0xfb, 0x8a, 0x98,
	0x91, 0x12, 0xa9, 0x3e, 0x82, 0xe3, 0x8c, 0xcc, 0x3d, 0xcb, 0xd8, 0x47, 0xd8, 0x15, 0xea, 0xd8,
	0x00, 0x3e, 0xdf, 0xc0, 0xcf, 0x3b, 0x8a, 0xe9, 0xbc, 0x7d, 0x1a, 0x7c, 0x15, 0xd4, 0x60, 0x02,
	0x97, 0x4e, 0xeb, 0x8b, 0x62, 0x98, 0x6f, 0x92, 0xb9, 0x46, 0xc6, 0x35, 0xc8, 0xd6, 0x1b, 0xeb,
	0x0a, 0xe9, 0xb4, 0xb1, 0xaa, 0x6b, 0x1e, 0x7c, 0x1d, 0xd4, 0x62, 0x5a, 0xa7, 0x28, 0xc5, 0x33,
	0x09, 0xf4, 0xfe, 0x85, 0x54, 0x83, 0x66, 0x99, 0xdb, 0xcc, 0xb8, 0x47, 0x2d, 0x4b, 0x77, 0x9b,
	0x54, 0xde, 0x3d, 0xd1, 0x56, 0x60, 0x02, 0x8b, 0x2a, 0x30, 0x60, 0x91, 0x05, 0xa6, 0xf2, 0xf1,
	0x0a, 0x4c, 0x55, 0xb1, 0x05, 0xe6, 0xaa, 0x1f, 0xd4, 0x19, 0x99, 0x4f, 0x4c, 0xfb, 0xc4, 0xd7,
	0x99, 0x2d, 0xb6, 0x8c, 0x58, 0xe7, 0x9d, 0x11, 0x0b, 0xed, 0xff, 0xca, 0x8a, 0x2f, 0x4e, 0x64,
	0x17, 0xec, 0x65, 0x6c, 0x96, 0xb6, 0xc2, 0xec, 0xe9, 0x61, 0x75, 0xec, 0x2b, 0xb3, 0x46, 0xfd,
	0xad, 0x0f, 0xd4, 0xbb, 0x79, 0x96, 0x7e, 0xa9, 0xfa, 0x63, 0x5b, 0xa9, 0x5a, 0xef, 0x06, 0x65,
	0xa2, 0x8b, 0x51, 0xb1, 0x1a, 0x65, 0x6e, 0x23, 0xc1, 0xe8, 0xb5, 0xae, 0x8a, 0x85, 0xad, 0x62,
	0xab, 0x5b, 0xbf, 0x96, 0xb9, 0x0e, 0xc0, 0x32, 0x9e, 0xc6, 0xf1, 0xb6, 0x28, 0x29, 0x5f, 0xff,
	0x46, 0x81, 0x7a, 0x2f, 0x09, 0x7e, 0xe6, 0x2a, 0x76, 0xc0, 0x56, 0xc5, 0x56, 0xcd, 0x6b, 0xb0,
	0xd8, 0x46, 0x99, 0x0b, 0x13, 0x43, 0xd1, 0x0e, 0x43, 0x21, 0x4d, 0xc9, 0x46, 0x16, 0x57, 0x34,
	0xc5, 0x0f, 0xaa, 0xac, 0xdc, 0x70, 0x33, 0x89, 0x7d, 0xca, 0x6c, 0xb5, 0x71, 0xec, 0x03, 0x0c,
	0xe3, 0xda, 0xdf, 0x24, 0xe2, 0x9f, 0x03, 0xe5, 0x04, 0x7e, 0x49, 0xc4, 0xac, 0x96, 0xb9, 0x20,
	0xa3, 0xd3, 0xd8, 0x6a, 0x3b, 0xee, 0xeb, 0x74, 0x18, 0x03, 0x40, 0x30, 0xb1, 0xde, 0x6f, 0xee,
	0x24, 0x2c, 0x64, 0xb6, 0x16, 0x33, 0x5b, 0x21, 0xde, 0x32, 0x0c, 0x77, 0x83, 0x4a, 0x0b, 0x44,
	0x93, 0x54, 0xdf, 0x20, 0x73, 0x21, 0xc6, 0x4a, 0xd7, 0x57, 0xb1, 0xa2, 0xb9, 0x75, 0xdc, 0x86,
	0xe3, 0xa5, 0x8b, 0xc2, 0xf1, 0xb2, 0x45, 0xe2, 0x78, 0xf9, 0xe3, 0xe1, 0x78, 0x45, 0xb1, 0x38,
	0x3e, 0xe6, 0x47, 0x07, 0xec, 0xc8, 0xd5, 0x9d, 0x62, 0x56, 0x48, 0x24, 0x5d, 0x67, 0x27, 0xbf,
	0x38, 0xc4, 0x7d, 0xde, 0x8c, 0xbf, 0x32, 0x3d, 0x8a, 0x56, 0x98, 0xf1, 0x57, 0x69, 0x89, 0x79,
	0x93, 0xd5, 0x08, 0x43, 0x2b, 0x5e, 0x97, 0x17, 0x8f, 0xd7, 0xfb, 0x65, 0x6e, 0x1f, 0xd8, 0xcb,
	0xb8, 0x8d, 0xca, 0xb2, 0x98, 0x0f, 0x9f, 0x8f, 0x1b, 0xe0, 0x82, 0xf5, 0x38, 0x33, 0x98, 0x9f,
	0xfc, 0x3c, 0x37, 0x73, 0x0a, 0x23, 0x95, 0x89, 0xe2, 0xaa, 0x0f, 0x40, 0xe7, 0x4a, 0x4b, 0x1f,
	0xc3, 0x0f, 0xd9, 0x30, 0x3c, 0xe8, 0x86, 0x24, 0xac, 0x4a, 0xac, 0x43, 0xe6, 0xda, 0x09, 0x22,
	0x6d, 0x2e, 0xd8, 0x38, 0x04, 0xc6, 0x5f, 0x94, 0xb9, 0x17, 0x40, 0x17, 0xe3, 0x61, 0x9d, 0xe2,
	0x0c, 0x4d, 0xc0, 0xfd, 0x86, 0x1f, 0x54, 0x5a, 0xd6, 0x31, 0x9a, 0x5f, 0xaa, 0x80, 0xe6, 0x77,
	0x8b, 0x13, 0xef, 0x56, 0xcd, 0x1b, 0x6f, 0x66, 0x98, 0xb5, 0x69, 0x66, 0x15, 0xba, 0x7b, 0xf5,
	0x9e, 0x1d, 0x41, 0x05, 0x21, 0x11, 0x96, 0xfc, 0xd0, 0x17, 0xf9, 0x87, 0x53, 0x3c, 0x21, 0xc2,
	0x5d, 0x00, 0x1c, 0x15, 0x92, 0x47, 0x44, 0x69, 0x4f, 0x22, 0x29, 0x22, 0xb8, 0x27, 0xd0, 0x66,
	0x21, 0xb3, 0x10, 0xff, 0xad, 0x7e, 0x3c, 0x34, 0x3b, 0x73, 0x87, 0x20, 0xba, 0x65, 0x1c, 0xf6,
	0x80, 0x8a, 0x78, 0xaa, 0x2f, 0x2b, 0xf6, 0x65, 0xa5, 0x60, 0x29, 0xaa, 0x18, 0x9b, 0xe6, 0x73,
	0x4f, 0xeb, 0x2e, 0x32, 0x71, 0x77, 0x5f, 0x36, 0xd3, 0x8f, 0x1f, 0x65, 0x30, 0xb3, 0xf5, 0xba,
	0x3d, 0xd5, 0xd3, 0x03, 0xca, 0xf9, 0x2f, 0xf1, 0x03, 0x79, 0x63, 0x9c, 0x3e, 0x08, 0xaa, 0x6d,
	0xfc, 0xb0, 0x06, 0xef, 0x3a, 0x90, 0x41, 0xf1, 0x06, 0xa3, 0x15, 0x94, 0x22, 0xc9, 0x90, 0xd5,
	0x9c, 0x71, 0xa2, 0x49, 0x4b, 0x16, 0xe0, 0xf1, 0xb4, 0xa8, 0xef, 0x37, 0x54, 0xf8, 0x1b, 0x0a,
	0x54, 0x5a, 0x86, 0x60, 0xa3, 0xcd, 0x4f, 0xf5, 0x32, 0x57, 0x4b, 0xfc, 0x14, 0x20, 0x26, 0x38,
	0x7f, 0x96, 0x78, 0x29, 0xa6, 0x55, 0xe9, 0xec, 0x9b, 0xc4, 0x45, 0xe8, 0x32, 0x08, 0x22, 0xb0,
	0x1b, 0xf0, 0xcc, 0xdc, 0xe8, 0x3d, 0x65, 0xf2, 0xbe, 0xae, 0x95, 0x32, 0x78, 0x43, 0x19, 0xf9,
	0x53, 0x2d, 0x3e, 0xee, 0x4e, 0x2a, 0xdf, 0x9d, 0xe4, 0xd1, 0x54, 0xd8, 0x01, 0xca, 0x89, 0x82,
	0xc4, 0x6b, 0x28, 0xf5, 0x74, 0x1a, 0x5b, 0x45, 0x9e, 0x79, 0x6a, 0x50, 0xb9, 0x75, 0x9f, 0xd7,
	0xc9, 0xe1, 0x21, 0x3f, 0x58, 0x86, 0x5f, 0x62, 0x24, 0x45, 0x41, 0x12, 0x7f, 0xc2, 0x36, 0x39,
	0x9e, 0x3c, 0x22, 0x65, 0xc5, 0x8c, 0x03, 0xb4, 0x0d, 0x2a, 0x5b, 0x31, 0x37, 0x7a, 0x2a, 0xf7,
	0xdd, 0xf5, 0x7d, 0x9d, 0x16, 0xd0, 0x36, 0x46, 0xe1, 0x01, 0x10, 0x40, 0x87, 0xd8, 0x69, 0x21,
	0x2e, 0x12, 0xcc, 0xd6, 0xba, 0x4f, 0xc6, 0xa4, 0xb2, 0x9b, 0x48, 0xe3, 0x30, 0x7a, 0x4b, 0xbd,
	0x36, 0x64, 0x90, 0x9b, 0x43, 0x73, 0x33, 0x97, 0xf3, 0xb7, 0xae, 0xab, 0x97, 0x27, 0x95, 0xc1,
	0x89, 0xb9, 0xf7, 0x27, 0x78, 0x93, 0x05, 0xee, 0xb4, 0x41, 0x38, 0xda, 0x62, 0x61, 0x0f, 0xad,
	0x77, 0xae, 0xe5, 0x5e, 0x06, 0xbf, 0x34, 0xee, 0x92, 0xb9, 0xdd, 0x60, 0x17, 0xe3, 0xb0, 0x21,
	0xdb, 0x6e, 0x4d, 0x73, 0xac, 0x98, 0xb1, 0xa9, 0xcc, 0xe0, 0x69, 0x4e, 0x38, 0xfd, 0x47, 0x1f,
	0x58, 0x6e, 0x5b, 0xe5, 0x97, 0xd6, 0x0f, 0xaf, 0x71, 0x1c, 0x45, 0x23, 0x35, 0x8c, 0x56, 0xb8,
	0x45, 0xe6, 0x18, 0x82, 0xa7, 0xe1, 0x47, 0x9b, 0x85, 0x00, 0xe9, 0x3e, 0x99, 0xdb, 0x03, 0x3a,
	0x19, 0xa7, 0x5d, 0x8a, 0x32, 0x2f, 0x01, 0xd1, 0x7f, 0xa5, 0xc0, 0x72, 0x87, 0x4c, 0x3f, 0x73,
	0x73, 0xfc, 0x07, 0xb6, 0xe6, 0xb8, 0xde, 0xcb, 0x7a, 0xb1, 0x67, 0x65, 0xee, 0x57, 0xc4, 0x6a,
	0x6b, 0xec, 0x7d, 0xb1, 0xae, 0xa7, 0xad, 0x33, 0xfe, 0xca, 0x0f, 0xca, 0x09, 0x2b, 0x64, 0x6d,
	0xe8, 0xf3, 0x8c, 0xcc, 0xad, 0x26, 0xb1, 0x5d, 0x67, 0xe7, 0xb7, 0x56, 0x8b, 0x9d, 0xd6, 0x2c,
	0xf3, 0x59, 0xce, 0xcb, 0xcd, 0x2c, 0x83, 0x1a, 0xa6, 0xa2, 0x8b, 0x68, 0x06, 0xcd, 0x9a, 0x51,
	0xdb, 0x41, 0x45, 0x46, 0x3c, 0x9a, 0x30, 0xda, 0xe4, 0x6a, 0x2d, 0xcf, 0x9f, 0x61, 0x0c, 0x22,
	0xe6, 0xbf, 0x7e, 0x72, 0x76, 0xfa, 0x9c, 0xb1, 0x05, 0xe2, 0x8d, 0x51, 0xd8, 0x01, 0xca, 0xa4,
	0xac, 0x90, 0x3d, 0x22, 0x91, 0x1c, 0x5f, 0x23, 0x73, 0xab, 0x18, 0x42, 0x62, 0x97, 0x2b, 0x0f,
	0x2e, 0x28, 0xa7, 0xcf, 0x6a, 0x7c, 0x1f, 0xdc, 0x51, 0x07, 0x4e, 0xf0, 0x64, 0x00, 0xb6, 0x80,
	0x52, 0xa4, 0x13, 0xc9, 0x63, 0xe4, 0x21, 0x4c, 0xb1, 0x97, 0x44, 0x4c, 0x83, 0x5d, 0xb6, 0x66,
	0x1e, 0xb7, 0x61, 0x68, 0xa7, 0x66, 0x6d, 0xe6, 0x57, 0x5a, 0xe5, 0x9c, 0xaf, 0xa5, 0xb7, 0x37,
	0xb8, 0xe5, 0xc5, 0x36, 0xb8, 0xd3, 0xe5, 0xa0, 0x76, 0x5f, 0x9f, 0x94, 0x15, 0x92, 0x49, 0x0b,
	0xfe, 0x6e, 0xb3, 0x39, 0xee, 0xd9, 0x85, 0x1d, 0xe7, 0xec, 0x2f, 0xf7, 0xb9, 0x3d, 0xd8, 0xf4,
	0x68, 0x0f, 0x5a, 0x20, 0xd7, 0x74, 0x65, 0x97, 0x1b, 0xb3, 0x19, 0xcd, 0x97, 0x16, 0xcc, 0xae,
	0x35, 0x96, 0x7a, 0x14, 0x78, 0x9b, 0x2d, 0xbb, 0x01, 0xde, 0x8c, 0xb5, 0x65, 0x5f, 0x8b, 0x74,
	0xd3, 0x96, 0xfb, 0xe6, 0xaa, 0xf1, 0x1a, 0xce, 0x18, 0xf6, 0xec, 0xe3, 0x7f, 0xdf, 0xd6, 0xc7,
	0x97, 0xea, 0xa5, 0x33, 0x6c, 0xeb, 0xe3, 0xeb, 0x2d, 0xeb, 0x1a, 0xe7, 0xa3, 0xde, 0xfd, 0xfc,
	0x56, 0x3d, 0x8a, 0xca, 0xcc, 0x77, 0xe8, 0x1e, 0x51, 0x64, 0x32, 0x93, 0x70, 0xb2, 0xb4, 0xf4,
	0xe5, 0x8f, 0xd7, 0xd2, 0x2f, 0x74, 0x5d, 0x6d, 0x76, 0x7a, 0xda, 0xeb, 0x2a, 0xe9, 0xef, 0x40,
	0x19, 0xee, 0xa0, 0x82, 0x01, 0xd4, 0x74, 0x6d, 0x91, 0xb9, 0x36, 0x86, 0x90, 0xd8, 0x4d, 0xd6,
	0x86, 0xab, 0x39, 0x94, 0xbf, 0xf3, 0xc1, 0xdc, 0xa7, 0xd7, 0x94, 0xf3, 0xe7, 0x66, 0xff, 0xe2,
	0xb2, 0x32, 0x38, 0x9c, 0x9b, 0xbe, 0xa9, 0x51, 0xbe, 0xbc, 0xcc, 0x93, 0xf9, 0x5a, 0xb9, 0x11,
	0x32, 0x3d, 0x52, 0x10, 0xa0, 0xa5, 0x70, 0xb9, 0xd1, 0x08, 0xec, 0xf2, 0xb9, 0xcf, 0x3e, 0x55,
	0xae, 0x7f, 0x6c, 0x14, 0x2b, 0x1e, 0x91, 0x61, 0x06, 0x04, 0x0e, 0xc5, 0xa5, 0x3f, 0xec, 0x97,
	0x5e, 0x11, 0x32, 0xc1, 0x4a, 0x04, 0x63, 0x2d, 0x36, 0x18, 0x73, 0x05, 0x77, 0x6b, 0x4c, 0x9f,
	0x8f, 0x1b, 0x37, 0xb4, 0xef, 0x37, 0x17, 0x61, 0x1b, 0x0e, 0xc5, 0x25, 0x75, 0xe4, 0xfc, 0xec,
	0x77, 0xa3, 0xb9, 0x2b, 0x27, 0xa5, 0x7e, 0x89, 0x3c, 0xce, 0x9c, 0x41, 0x3f, 0x0f, 0x96, 0xd9,
	0xd7, 0xf0, 0x68, 0xde, 0xea, 0xad, 0xcd, 0x5b, 0xc0, 0xd2, 0xa2, 0xe9, 0x05, 0xc5, 0x9d, 0x75,
	0x6c, 0x64, 0xee, 0xfd, 0x89, 0xdc, 0x83, 0x6f, 0x49, 0x63, 0xee, 0x38, 0x00, 0x56, 0x86, 0xa7,
	0x48, 0xd6, 0x99, 0xf5, 0xfa, 0x7f, 0x28, 0x00, 0x9d, 0xcb, 0x2c, 0xfd, 0xd7, 0xe1, 0x7b, 0x65,
	0xae, 0x13, 0xc4, 0xdc, 0x15, 0xb5, 0x70, 0xf5, 0x49, 0x3d, 0xfd, 0xde, 0x07, 0xea, 0x0e, 0xf6,
	0x25, 0xfe, 0x1f, 0xa0, 0x97, 0x35, 0x43, 0x4b, 0x8a, 0xce, 0xd0, 0xe8, 0xef, 0x64, 0xae, 0x0b,
	0xec, 0x61, 0xbc, 0x8c, 0xc5, 0x46, 0x66, 0x67, 0xce, 0xe9, 0x06, 0x39, 0x7b, 0x2f, 0xff, 0xe0,
	0x81, 0xb7, 0xfd, 0xcd, 0xa0, 0x7b, 0xdf, 0x07, 0xea, 0xdd, 0x0b, 0x2d, 0xfd, 0xb0, 0x23, 0x27,
	0x0f, 0x9e, 0xb2, 0x17, 0x61, 0x05, 0x12, 0x7b, 0x5a, 0xdd, 0x3c, 0x98, 0xee, 0xc9, 0x08, 0xdd,
	0xe2, 0xd3, 0xba, 0xf9, 0xb4, 0x6e, 0x3e, 0x79, 0x75, 0xd3, 0x15, 0xdc, 0x4b, 0xa5, 0x6e, 0xba,
	0x04, 0xb3, 0x27, 0xef, 0x50, 0x6e, 0xfa, 0xe6, 0xa3, 0x20, 0xec, 0x7f, 0x29, 0x00, 0x9d, 0xcb,
	0x2c, 0x7d, 0x00, 0x7b, 0x41, 0xe6, 0xf6, 0x82, 0xdd, 0x8c, 0x87, 0xe4, 0x45, 0x58, 0x80, 0xc0,
	0xd7, 0x98, 0x1f, 0x40, 0x3e, 0x95, 0x4c, 0x1e, 0x12, 0xe2, 0x87, 0x9f, 0x68, 0xfc, 0x8a, 0x59,
	0x36, 0x83, 0xf8, 0xd6, 0xf4, 0x26, 0x99, 0xdb, 0x60, 0xd9, 0x0c, 0xae, 0xcc, 0x7f, 0x7e, 0x42,
	0x19, 0xbd, 0xaa, 0xce, 0x5c, 0x51, 0x86, 0xa7, 0xd0, 0xb7, 0x4d, 0x78, 0xc0, 0xb2, 0x23, 0x2c,
	0xe0, 0xfe, 0xcc, 0x42, 0xd5, 0x97, 0x5c, 0x51, 0xf5, 0xb0, 0x37, 0xbb, 0x42, 0x37, 0x28, 0x12,
	0xc0, 0x0c, 0xd0, 0x3c, 0x05, 0xea, 0x5c, 0xd3, 0x7f, 0x31, 0x37, 0x54, 0xbd, 0x44, 0x77, 0xab,
	0x8a, 0x57, 0x60, 0xff, 0x3a, 0x08, 0x2a, 0xbb, 0xc4, 0x64, 0xef, 0x8b, 0x18, 0x77, 0xe0, 0x6d,
	0x0a, 0x04, 0x8c, 0x0f, 0x17, 0xa1, 0xfd, 0x7d, 0x9d, 0xf5, 0x13, 0x4e, 0x9a, 0x9e, 0x6f, 0x48,
	0x4a, 0x87, 0xd3, 0x32, 0xb7, 0x1f, 0xfe, 0xaa, 0x90, 0x0f, 0x1e, 0xe9, 0x82, 0x66, 0xbd, 0xf7,
	0x77, 0xb3, 0x17, 0x7c, 0xab, 0xe1, 0xaa, 0x88, 0xe5, 0x91, 0x91, 0xa3, 0xed, 0x11, 0xc1, 0x10,
	0x74, 0x8a, 0x02, 0x35, 0xce, 0xaf, 0xb8, 0x60, 0xc8, 0x7e, 0x76, 0xec, 0xfe, 0x3c, 0x8e, 0x5e,
	0xff, 0x88, 0x19, 0x52, 0x3a, 0xfc, 0xaa, 0xcc, 0xad, 0x81, 0x55, 0xd6, 0x6f, 0xc1, 0x68, 0xdb,
	0x2f, 0x24, 0x1b, 0x1b, 0x6e, 0x71, 0xca, 0x66, 0x96, 0xc7, 0xc8, 0x31, 0xa3, 0xf2, 0x1e, 0x8f,
	0x1c, 0xd3, 0xb2, 0xec, 0x78, 0x94, 0x62, 0x90, 0xc8, 0xce, 0x0f, 0x65, 0x1c, 0x22, 0x7b, 0x7c,
	0x81, 0xe4, 0x10, 0xd9, 0xeb, 0x4b, 0x1b, 0x22, 0xb2, 0xf5, 0x73, 0x1b, 0xda, 0xf6, 0x0b, 0x8b,
	0x4c, 0x17, 0x2f, 0xf2, 0x75, 0x0a, 0x54, 0xdb, 0xbe, 0xf3, 0x80, 0x6b, 0x6d, 0xd2, 0x38, 0xbf,
	0x9b, 0xa1, 0x9f, 0x59, 0x68, 0x58, 0x4a, 0x87, 0x0f, 0x60, 0x49, 0x2d, 0x17, 0xe5, 0x69, 0xdb,
	0x2f, 0x24, 0x69, 0x04, 0x16, 0x27, 0x29, 0xfc, 0x9a, 0x02, 0x35, 0xce, 0x5b, 0xda, 0x0e, 0xcb,
	0x7a, 0xdc, 0x57, 0x77, 0x58, 0xd6, 0xeb, 0x9a, 0x37, 0x91, 0xd7, 0x7a, 0x55, 0x98, 0xb6, 0xfd,
	0xc2, 0xf2, 0x32, 0x45, 0xca, 0xfb, 0x15, 0xa5, 0x9f, 0xc0, 0x1b, 0xd2, 0xda, 0x0d, 0xe7, 0xfa,
	0x4e, 0x83, 0x5e, 0xb7, 0xe0, 0xb8, 0x94, 0x0e, 0xbf, 0x26, 0x73, 0x8d, 0x10, 0x5a, 0x6d, 0x89,
	0x8f, 0x09, 0x69, 0x0f, 0x1a, 0x92, 0xba, 0x11, 0x6e, 0x2a, 0x4c, 0x6a, 0x38, 0x43, 0x01, 0xe8,
	0xbe, 0x4b, 0x0d, 0xc3, 0x0b, 0x99, 0x0f, 0xdf, 0x30, 0xa7, 0x37, 0x3c, 0x72, 0x8e, 0x94, 0x0e,
	0xbf, 0x81, 0x45, 0x77, 0xdd, 0xca, 0xa6, 0x3d, 0x68, 0x48, 0xf4, 0x26, 0xa6, 0x40, 0xd1, 0xb5,
	0x18, 0xfe, 0x33, 0x0a, 0x04, 0x8c, 0xcb, 0x15, 0x0e, 0x80, 0xb3, 0x5e, 0xb1, 0x74, 0x00, 0x9c,
	0xed, 0x1e, 0x61, 0x58, 0x94, 0xb9, 0x66, 0x58, 0xef, 0xba, 0x4c, 0xa8, 0x9c, 0x19, 0xa4, 0x3d,
	0xa9, 0x48, 0xcc, 0x36, 0xd8, 0xea, 0x14, 0x13, 0x8d, 0xdb, 0x43, 0xc2, 0x94, 0xfc, 0x38, 0xfc,
	0x67, 0x0a, 0xd4, 0x38, 0x2f, 0x82, 0x38, 0x02, 0xd9, 0xe3, 0xe2, 0x8d, 0x23, 0x90, 0xbd, 0x6e,
	0x92, 0x84, 0x4f, 0x51, 0x32, 0xf7, 0x5b, 0xb8, 0xd6, 0x2e, 0xa5, 0x71, 0x1c, 0x4b, 0x42, 0x65,
	0xe1, 0x61, 0xa4, 0xd3, 0x0e, 0xb8, 0xbd, 0x38, 0x9d, 0x48, 0xcc, 0x47, 0xf4, 0x26, 0xfe, 0xbf,
	0x29, 0xb0, 0xcc, 0xfe, 0x92, 0x14, 0xba, 0x40, 0xc3, 0xfe, 0xa6, 0xda, 0x11, 0xfb, 0xee, 0x37,
	0xac, 0xe1, 0x9b, 0x94, 0xcc, 0xbd, 0x02, 0x0b, 0x7f, 0x67, 0x4b, 0x17, 0x3e, 0x15, 0x29, 0xdd,
	0x05, 0xf7, 0x2c, 0x4e, 0xe9, 0x6e, 0x24, 0x63, 0xe4, 0x18, 0x51, 0xfe, 0x38, 0xfc, 0x1b, 0x0a,
	0x54, 0x5a, 0xce, 0x61, 0xe0, 0x6a, 0x8f, 0xb4, 0xd6, 0xbb, 0x15, 0x7a, 0xcd, 0xfc, 0x83, 0x52,
	0x3a, 0xfc, 0x1e, 0x25, 0x73, 0x07, 0x60, 0x63, 0xa1, 0xaf, 0x45, 0xe8, 0x82, 0x67, 0x22, 0x95,
	0x37, 0xc2, 0x0d, 0xee, 0x14, 0x43, 0x93, 0x22, 0xc7, 0x8c, 0x6e, 0xef, 0x38, 0xfc, 0x4f, 0x0a,
	0x2c, 0xb3, 0x9f, 0x88, 0x39, 0xbc, 0xe9, 0x3a, 0x75, 0x73, 0x78, 0xd3, 0x7d, 0x9c, 0x16, 0xbe,
	0x4e, 0xc9, 0xdc, 0x1f, 0x41, 0x46, 0x3d, 0x7d, 0x33, 0x3f, 0x7e, 0x66, 0x21, 0x71, 0x43, 0xe4,
	0x60, 0x81, 0x2e, 0x62, 0x2e, 0x52, 0x6e, 0x57, 0xf8, 0xb7, 0x05, 0x28, 0x87, 0x9d, 0x88, 0x1a,
	0x64, 0xc3, 0xa1, 0x64, 0x15, 0x0d, 0x57, 0x4e, 0xfa, 0x40, 0x8d, 0xf3, 0x6c, 0xc3, 0x59, 0xce,
	0xdd, 0xe7, 0x3f, 0xce, 0x72, 0xee, 0x71, 0x38, 0x12, 0xfe, 0x82, 0x92, 0xb9, 0x37, 0x60, 0x73,
	0x01, 0x4a, 0x1d, 0xd1, 0xd9, 0xe9, 0xa2, 0x66, 0x23, 0x23, 0xec, 0x0e, 0xef, 0x5c, 0xa4, 0x11,
	0x8c, 0x75, 0x34, 0x33, 0x68, 0x11, 0x60, 0xdf, 0x21, 0x39, 0x22, 0xc0, 0xb5, 0x7f, 0x74, 0x44,
	0x80, 0x7b, 0x7b, 0x55, 0x44, 0x04, 0x1c, 0xc1, 0xcc, 0x74, 0x11, 0x73, 0x1f, 0x33, 0x02, 0xc8,
	0x2a, 0x9a, 0xea, 0x3f, 0x50, 0x60, 0xb9, 0xa3, 0xf5, 0x86, 0x8e, 0xcf, 0x0d, 0x5d, 0x5b, 0x10,
	0x3a, 0xb4, 0xf0, 0x04, 0x82, 0x66, 0xaf, 0xc3, 0xa6, 0x02, 0x34, 0xca, 0x10, 0x6e, 0xba, 0x98,
	0xc9, 0x48, 0xff, 0xce, 0xf0, 0x8e, 0x45, 0xea, 0xaf, 0x2f, 0x13, 0xa5, 0x98, 0xd8, 0x6b, 0x32,
	0xb7, 0x07, 0xae, 0x05, 0xf5, 0xda, 0x7e, 0x22, 0x44, 0x36, 0x14, 0x21, 0xee, 0xe5, 0x7d, 0xa1,
	0xce, 0x54, 0x9c, 0x2d, 0x6d, 0x6b, 0x6d, 0x6f, 0x6d, 0x63, 0x28, 0x8a, 0xad, 0x11, 0xd2, 0xe9,
	0x64, 0x22, 0x8e, 0xfe, 0x3b, 0x99, 0xc8, 0x5b, 0x52, 0xaa, 0x2f, 0xea, 0xa2, 0xbc, 0xbe, 0xac,
	0x35, 0xb2, 0xcd, 0x22, 0xd0, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x24, 0x26, 0xd0, 0xe0,
	0x46, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HelmManagerClient is the client API for HelmManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HelmManagerClient interface {
	//* common service
	Available(ctx context.Context, in *AvailableReq, opts ...grpc.CallOption) (*AvailableResp, error)
	//* repository crud
	CreateRepository(ctx context.Context, in *CreateRepositoryReq, opts ...grpc.CallOption) (*CreateRepositoryResp, error)
	UpdateRepository(ctx context.Context, in *UpdateRepositoryReq, opts ...grpc.CallOption) (*UpdateRepositoryResp, error)
	GetRepository(ctx context.Context, in *GetRepositoryReq, opts ...grpc.CallOption) (*GetRepositoryResp, error)
	DeleteRepository(ctx context.Context, in *DeleteRepositoryReq, opts ...grpc.CallOption) (*DeleteRepositoryResp, error)
	ListRepository(ctx context.Context, in *ListRepositoryReq, opts ...grpc.CallOption) (*ListRepositoryResp, error)
	DeleteRepositories(ctx context.Context, in *DeleteRepositoriesReq, opts ...grpc.CallOption) (*DeleteRepositoriesResp, error)
	//* chart service
	ListChart(ctx context.Context, in *ListChartReq, opts ...grpc.CallOption) (*ListChartResp, error)
	ListChartVersion(ctx context.Context, in *ListChartVersionReq, opts ...grpc.CallOption) (*ListChartVersionResp, error)
	GetChartDetail(ctx context.Context, in *GetChartDetailReq, opts ...grpc.CallOption) (*GetChartDetailResp, error)
	//* release service
	ListRelease(ctx context.Context, in *ListReleaseReq, opts ...grpc.CallOption) (*ListReleaseResp, error)
	InstallRelease(ctx context.Context, in *InstallReleaseReq, opts ...grpc.CallOption) (*InstallReleaseResp, error)
	UninstallRelease(ctx context.Context, in *UninstallReleaseReq, opts ...grpc.CallOption) (*UninstallReleaseResp, error)
	UpgradeRelease(ctx context.Context, in *UpgradeReleaseReq, opts ...grpc.CallOption) (*UpgradeReleaseResp, error)
	RollbackRelease(ctx context.Context, in *RollbackReleaseReq, opts ...grpc.CallOption) (*RollbackReleaseResp, error)
}

type helmManagerClient struct {
	cc *grpc.ClientConn
}

func NewHelmManagerClient(cc *grpc.ClientConn) HelmManagerClient {
	return &helmManagerClient{cc}
}

func (c *helmManagerClient) Available(ctx context.Context, in *AvailableReq, opts ...grpc.CallOption) (*AvailableResp, error) {
	out := new(AvailableResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/Available", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) CreateRepository(ctx context.Context, in *CreateRepositoryReq, opts ...grpc.CallOption) (*CreateRepositoryResp, error) {
	out := new(CreateRepositoryResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/CreateRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) UpdateRepository(ctx context.Context, in *UpdateRepositoryReq, opts ...grpc.CallOption) (*UpdateRepositoryResp, error) {
	out := new(UpdateRepositoryResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/UpdateRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) GetRepository(ctx context.Context, in *GetRepositoryReq, opts ...grpc.CallOption) (*GetRepositoryResp, error) {
	out := new(GetRepositoryResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/GetRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) DeleteRepository(ctx context.Context, in *DeleteRepositoryReq, opts ...grpc.CallOption) (*DeleteRepositoryResp, error) {
	out := new(DeleteRepositoryResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/DeleteRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) ListRepository(ctx context.Context, in *ListRepositoryReq, opts ...grpc.CallOption) (*ListRepositoryResp, error) {
	out := new(ListRepositoryResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/ListRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) DeleteRepositories(ctx context.Context, in *DeleteRepositoriesReq, opts ...grpc.CallOption) (*DeleteRepositoriesResp, error) {
	out := new(DeleteRepositoriesResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/DeleteRepositories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) ListChart(ctx context.Context, in *ListChartReq, opts ...grpc.CallOption) (*ListChartResp, error) {
	out := new(ListChartResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/ListChart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) ListChartVersion(ctx context.Context, in *ListChartVersionReq, opts ...grpc.CallOption) (*ListChartVersionResp, error) {
	out := new(ListChartVersionResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/ListChartVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) GetChartDetail(ctx context.Context, in *GetChartDetailReq, opts ...grpc.CallOption) (*GetChartDetailResp, error) {
	out := new(GetChartDetailResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/GetChartDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) ListRelease(ctx context.Context, in *ListReleaseReq, opts ...grpc.CallOption) (*ListReleaseResp, error) {
	out := new(ListReleaseResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/ListRelease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) InstallRelease(ctx context.Context, in *InstallReleaseReq, opts ...grpc.CallOption) (*InstallReleaseResp, error) {
	out := new(InstallReleaseResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/InstallRelease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) UninstallRelease(ctx context.Context, in *UninstallReleaseReq, opts ...grpc.CallOption) (*UninstallReleaseResp, error) {
	out := new(UninstallReleaseResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/UninstallRelease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) UpgradeRelease(ctx context.Context, in *UpgradeReleaseReq, opts ...grpc.CallOption) (*UpgradeReleaseResp, error) {
	out := new(UpgradeReleaseResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/UpgradeRelease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helmManagerClient) RollbackRelease(ctx context.Context, in *RollbackReleaseReq, opts ...grpc.CallOption) (*RollbackReleaseResp, error) {
	out := new(RollbackReleaseResp)
	err := c.cc.Invoke(ctx, "/helmmanager.HelmManager/RollbackRelease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HelmManagerServer is the server API for HelmManager service.
type HelmManagerServer interface {
	//* common service
	Available(context.Context, *AvailableReq) (*AvailableResp, error)
	//* repository crud
	CreateRepository(context.Context, *CreateRepositoryReq) (*CreateRepositoryResp, error)
	UpdateRepository(context.Context, *UpdateRepositoryReq) (*UpdateRepositoryResp, error)
	GetRepository(context.Context, *GetRepositoryReq) (*GetRepositoryResp, error)
	DeleteRepository(context.Context, *DeleteRepositoryReq) (*DeleteRepositoryResp, error)
	ListRepository(context.Context, *ListRepositoryReq) (*ListRepositoryResp, error)
	DeleteRepositories(context.Context, *DeleteRepositoriesReq) (*DeleteRepositoriesResp, error)
	//* chart service
	ListChart(context.Context, *ListChartReq) (*ListChartResp, error)
	ListChartVersion(context.Context, *ListChartVersionReq) (*ListChartVersionResp, error)
	GetChartDetail(context.Context, *GetChartDetailReq) (*GetChartDetailResp, error)
	//* release service
	ListRelease(context.Context, *ListReleaseReq) (*ListReleaseResp, error)
	InstallRelease(context.Context, *InstallReleaseReq) (*InstallReleaseResp, error)
	UninstallRelease(context.Context, *UninstallReleaseReq) (*UninstallReleaseResp, error)
	UpgradeRelease(context.Context, *UpgradeReleaseReq) (*UpgradeReleaseResp, error)
	RollbackRelease(context.Context, *RollbackReleaseReq) (*RollbackReleaseResp, error)
}

// UnimplementedHelmManagerServer can be embedded to have forward compatible implementations.
type UnimplementedHelmManagerServer struct {
}

func (*UnimplementedHelmManagerServer) Available(ctx context.Context, req *AvailableReq) (*AvailableResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Available not implemented")
}
func (*UnimplementedHelmManagerServer) CreateRepository(ctx context.Context, req *CreateRepositoryReq) (*CreateRepositoryResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRepository not implemented")
}
func (*UnimplementedHelmManagerServer) UpdateRepository(ctx context.Context, req *UpdateRepositoryReq) (*UpdateRepositoryResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRepository not implemented")
}
func (*UnimplementedHelmManagerServer) GetRepository(ctx context.Context, req *GetRepositoryReq) (*GetRepositoryResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRepository not implemented")
}
func (*UnimplementedHelmManagerServer) DeleteRepository(ctx context.Context, req *DeleteRepositoryReq) (*DeleteRepositoryResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRepository not implemented")
}
func (*UnimplementedHelmManagerServer) ListRepository(ctx context.Context, req *ListRepositoryReq) (*ListRepositoryResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRepository not implemented")
}
func (*UnimplementedHelmManagerServer) DeleteRepositories(ctx context.Context, req *DeleteRepositoriesReq) (*DeleteRepositoriesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRepositories not implemented")
}
func (*UnimplementedHelmManagerServer) ListChart(ctx context.Context, req *ListChartReq) (*ListChartResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListChart not implemented")
}
func (*UnimplementedHelmManagerServer) ListChartVersion(ctx context.Context, req *ListChartVersionReq) (*ListChartVersionResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListChartVersion not implemented")
}
func (*UnimplementedHelmManagerServer) GetChartDetail(ctx context.Context, req *GetChartDetailReq) (*GetChartDetailResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChartDetail not implemented")
}
func (*UnimplementedHelmManagerServer) ListRelease(ctx context.Context, req *ListReleaseReq) (*ListReleaseResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRelease not implemented")
}
func (*UnimplementedHelmManagerServer) InstallRelease(ctx context.Context, req *InstallReleaseReq) (*InstallReleaseResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InstallRelease not implemented")
}
func (*UnimplementedHelmManagerServer) UninstallRelease(ctx context.Context, req *UninstallReleaseReq) (*UninstallReleaseResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UninstallRelease not implemented")
}
func (*UnimplementedHelmManagerServer) UpgradeRelease(ctx context.Context, req *UpgradeReleaseReq) (*UpgradeReleaseResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpgradeRelease not implemented")
}
func (*UnimplementedHelmManagerServer) RollbackRelease(ctx context.Context, req *RollbackReleaseReq) (*RollbackReleaseResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RollbackRelease not implemented")
}

func RegisterHelmManagerServer(s *grpc.Server, srv HelmManagerServer) {
	s.RegisterService(&_HelmManager_serviceDesc, srv)
}

func _HelmManager_Available_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AvailableReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).Available(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/Available",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).Available(ctx, req.(*AvailableReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_CreateRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRepositoryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).CreateRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/CreateRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).CreateRepository(ctx, req.(*CreateRepositoryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_UpdateRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRepositoryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).UpdateRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/UpdateRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).UpdateRepository(ctx, req.(*UpdateRepositoryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_GetRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRepositoryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).GetRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/GetRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).GetRepository(ctx, req.(*GetRepositoryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_DeleteRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRepositoryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).DeleteRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/DeleteRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).DeleteRepository(ctx, req.(*DeleteRepositoryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_ListRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRepositoryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).ListRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/ListRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).ListRepository(ctx, req.(*ListRepositoryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_DeleteRepositories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRepositoriesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).DeleteRepositories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/DeleteRepositories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).DeleteRepositories(ctx, req.(*DeleteRepositoriesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_ListChart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListChartReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).ListChart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/ListChart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).ListChart(ctx, req.(*ListChartReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_ListChartVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListChartVersionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).ListChartVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/ListChartVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).ListChartVersion(ctx, req.(*ListChartVersionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_GetChartDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChartDetailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).GetChartDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/GetChartDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).GetChartDetail(ctx, req.(*GetChartDetailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_ListRelease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReleaseReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).ListRelease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/ListRelease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).ListRelease(ctx, req.(*ListReleaseReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_InstallRelease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstallReleaseReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).InstallRelease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/InstallRelease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).InstallRelease(ctx, req.(*InstallReleaseReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_UninstallRelease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UninstallReleaseReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).UninstallRelease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/UninstallRelease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).UninstallRelease(ctx, req.(*UninstallReleaseReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_UpgradeRelease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpgradeReleaseReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).UpgradeRelease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/UpgradeRelease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).UpgradeRelease(ctx, req.(*UpgradeReleaseReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelmManager_RollbackRelease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RollbackReleaseReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelmManagerServer).RollbackRelease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helmmanager.HelmManager/RollbackRelease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelmManagerServer).RollbackRelease(ctx, req.(*RollbackReleaseReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _HelmManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "helmmanager.HelmManager",
	HandlerType: (*HelmManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Available",
			Handler:    _HelmManager_Available_Handler,
		},
		{
			MethodName: "CreateRepository",
			Handler:    _HelmManager_CreateRepository_Handler,
		},
		{
			MethodName: "UpdateRepository",
			Handler:    _HelmManager_UpdateRepository_Handler,
		},
		{
			MethodName: "GetRepository",
			Handler:    _HelmManager_GetRepository_Handler,
		},
		{
			MethodName: "DeleteRepository",
			Handler:    _HelmManager_DeleteRepository_Handler,
		},
		{
			MethodName: "ListRepository",
			Handler:    _HelmManager_ListRepository_Handler,
		},
		{
			MethodName: "DeleteRepositories",
			Handler:    _HelmManager_DeleteRepositories_Handler,
		},
		{
			MethodName: "ListChart",
			Handler:    _HelmManager_ListChart_Handler,
		},
		{
			MethodName: "ListChartVersion",
			Handler:    _HelmManager_ListChartVersion_Handler,
		},
		{
			MethodName: "GetChartDetail",
			Handler:    _HelmManager_GetChartDetail_Handler,
		},
		{
			MethodName: "ListRelease",
			Handler:    _HelmManager_ListRelease_Handler,
		},
		{
			MethodName: "InstallRelease",
			Handler:    _HelmManager_InstallRelease_Handler,
		},
		{
			MethodName: "UninstallRelease",
			Handler:    _HelmManager_UninstallRelease_Handler,
		},
		{
			MethodName: "UpgradeRelease",
			Handler:    _HelmManager_UpgradeRelease_Handler,
		},
		{
			MethodName: "RollbackRelease",
			Handler:    _HelmManager_RollbackRelease_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bcs-helm-manager.proto",
}
