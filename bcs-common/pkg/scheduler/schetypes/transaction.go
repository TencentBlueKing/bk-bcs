/*
 * Tencent is pleased to support the open source community by making Blueking Container Service available.
 * Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
 * Licensed under the MIT License (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * http://opensource.org/licenses/MIT
 * Unless required by applicable law or agreed to in writing, software distributed under,
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language governing permissions and
 * limitations under the License.
 */

package types

import (
	"fmt"
	"time"
)

const (
	// TransactionOpTypeLaunch type for launching app
	TransactionOpTypeLaunch = "LAUNCH"
	// TransactionOpTypeDelete type for deleting app
	TransactionOpTypeDelete = "DELETE"
	// TransactionOpTypeScale type for scaling app
	TransactionOpTypeScale = "SCALE"
	// TransactionOpTypeUpdate type for updating app
	TransactionOpTypeUpdate = "UPDATE"
	// TransactionOpTypeRollback type for rolling back
	TransactionOpTypeRollback = "OPERATION_ROLLBACK"
	// TransactionOpTypeReschedule type for rescheduling app
	TransactionOpTypeReschedule = "RESCHEDULE"
	// TransactionOpTypeInnerScale type for inner scale
	TransactionOpTypeInnerScale = "OPERATION_INNERSCALE"
	// TransactionOpTypeDepUpdateResource type for update deployment resource
	TransactionOpTypeDepUpdateResource = "DEPLOYMENT_UPDATE_RESOURCE"

	// TransactionObjectKindDeployment object kind for deployment
	TransactionObjectKindDeployment = "deployment"
	// TransactionObjectKindApplication object kind for application
	TransactionObjectKindApplication = "application"
	// TransactionObjectKindTaskgroup object kind for taskgroup
	TransactionObjectKindTaskgroup = "taskgroup"
)

// TransAPILaunchOpdata Launch application transaction data
type TransAPILaunchOpdata struct {
	// version definition for launch application
	Version *Version `json:"version"`
	// already launched taskgroups number
	LaunchedNum int `json:"lauchedNum"`
	// SchedulerNum current taskgroup scheduler number
	SchedulerNum int `json:"schedulerNum"`
	// resource for a taskgroup
	NeedResource *Resource `json:"resource"`
	// why do this operation
	Reason string `json:"reason"`
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransAPILaunchOpdata) DeepCopyInto(out *TransAPILaunchOpdata) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(Version)
		(*in).DeepCopyInto(*out)
	}
	if in.NeedResource != nil {
		in, out := &in.NeedResource, &out.NeedResource
		*out = new(Resource)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver.
func (in *TransAPILaunchOpdata) DeepCopy() *TransAPILaunchOpdata {
	if in == nil {
		return nil
	}
	out := new(TransAPILaunchOpdata)
	in.DeepCopyInto(out)
	return out
}

// TransAPIScaleOpdata Scale application transaction data
type TransAPIScaleOpdata struct {
	// version definition for application
	Version *Version `json:"version"`
	// resource for a taskgroup
	NeedResource *Resource `json:"needResource"`
	// the target count for application's taskgroups
	Instances uint64 `json:"instances"`
	// scale down or up
	IsDown bool `json:"isDown"`
	// IsInner is inner scale
	IsInner bool `json:"isInner"`
	// already launched taskgroups number
	LaunchedNum int `json:"lauchedNum"`
	// SchedulerNum current taskgroup scheduler number
	SchedulerNum int `json:"schedulerNum"`
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransAPIScaleOpdata) DeepCopyInto(out *TransAPIScaleOpdata) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(Version)
		(*in).DeepCopyInto(*out)
	}
	if in.NeedResource != nil {
		in, out := &in.NeedResource, &out.NeedResource
		*out = new(Resource)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver.
func (in *TransAPIScaleOpdata) DeepCopy() *TransAPIScaleOpdata {
	if in == nil {
		return nil
	}
	out := new(TransAPIScaleOpdata)
	in.DeepCopyInto(out)
	return out
}

// TransAPIUpdateOpdata Update application transaction data
type TransAPIUpdateOpdata struct {
	// version definition for application
	Version *Version `json:"version,omitempty"`
	// already updated count
	LaunchedNum int `json:"lauchedNum"`
	// the count of taskgroups to be updated
	Instances int `json:"instances"`
	// resource for one taskgroup
	NeedResource *Resource `json:"resource,omitempty"`
	// the taskgroups to be updated
	Taskgroups []*TaskGroup `json:"taskgroups,omitempty"`
	// is only update resource
	IsUpdateResource bool `json:"isUpdateResource,omitempty"`
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransAPIUpdateOpdata) DeepCopyInto(out *TransAPIUpdateOpdata) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(Version)
		(*in).DeepCopyInto(*out)
	}
	if in.NeedResource != nil {
		in, out := &in.NeedResource, &out.NeedResource
		*out = new(Resource)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver.
func (in *TransAPIUpdateOpdata) DeepCopy() *TransAPIUpdateOpdata {
	if in == nil {
		return nil
	}
	out := new(TransAPIUpdateOpdata)
	in.DeepCopyInto(out)
	return out
}

// TransAPIDeleteOpdata Delete application transaction data
type TransAPIDeleteOpdata struct {
	// if false, the operation will fail when some taskgroups cannot come to end status
	Enforce bool `json:"enforce"`
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransAPIDeleteOpdata) DeepCopyInto(out *TransAPIDeleteOpdata) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver.
func (in *TransAPIDeleteOpdata) DeepCopy() *TransAPIDeleteOpdata {
	if in == nil {
		return nil
	}
	out := new(TransAPIDeleteOpdata)
	in.DeepCopyInto(out)
	return out
}

// TransRescheduleOpData Reschedule taskgroup transaction data
type TransRescheduleOpData struct {
	// version definition for application
	Version *Version `json:"version,omitempty"`
	// the taskgroup to be rescheduled
	TaskGroupID string `json:"taskgroupID"`
	// if the taskgroup cannot come to end status, do the operation or not
	Force bool `json:"force"`
	// the operation is created by schedulder( taskgroup fail or lost ) or not
	IsInner bool `json:"isInner"`
	// resource for one taskgroup
	NeedResource *Resource `json:"resource,omitempty"`
	// host retain time
	HostRetainTime int64 `json:"hostRetainTime"`
	// host retain
	HostRetain string `json:"hostRetain"`
	// SchedulerNum current taskgroup scheduler number
	SchedulerNum int `json:"schedulerNum"`
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransRescheduleOpData) DeepCopyInto(out *TransRescheduleOpData) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(Version)
		(*in).DeepCopyInto(*out)
	}
	if in.NeedResource != nil {
		in, out := &in.NeedResource, &out.NeedResource
		*out = new(Resource)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver.
func (in *TransRescheduleOpData) DeepCopy() *TransRescheduleOpData {
	if in == nil {
		return nil
	}
	out := new(TransRescheduleOpData)
	in.DeepCopyInto(out)
	return out
}

// TransDeploymentUpdateOpData data for update deployment
type TransDeploymentUpdateOpData struct {
	// Version version definition for application
	Version *Version `json:"version,omitempty"`
	// IsUpdateResource is only update resource
	IsUpdateResource bool `json:"isUpdateResource,omitempty"`
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransDeploymentUpdateOpData) DeepCopyInto(out *TransDeploymentUpdateOpData) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(Version)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver.
func (in *TransDeploymentUpdateOpData) DeepCopy() *TransDeploymentUpdateOpData {
	if in == nil {
		return nil
	}
	out := new(TransDeploymentUpdateOpData)
	in.DeepCopyInto(out)
	return out
}

// TransactionOperartion operation strut for transaction
type TransactionOperartion struct {
	OpType           string                       `json:"opType"`
	OpLaunchData     *TransAPILaunchOpdata        `json:"opLaunchData,omitempty"`
	OpScaleData      *TransAPIScaleOpdata         `json:"opScaleData,omitempty"`
	OpUpdateData     *TransAPIUpdateOpdata        `json:"opUpdateData,omitempty"`
	OpDeleteData     *TransAPIDeleteOpdata        `json:"opDeleteData,omitempty"`
	OpRescheduleData *TransRescheduleOpData       `json:"opRescheduleData,omitempty"`
	OpDepUpdateData  *TransDeploymentUpdateOpData `json:"opDepUpdateData,omitempty"`
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransactionOperartion) DeepCopyInto(out *TransactionOperartion) {
	*out = *in
	if in.OpLaunchData != nil {
		in, out := &in.OpLaunchData, &out.OpLaunchData
		*out = new(TransAPILaunchOpdata)
		(*in).DeepCopyInto(*out)
	}
	if in.OpScaleData != nil {
		in, out := &in.OpScaleData, &out.OpScaleData
		*out = new(TransAPIScaleOpdata)
		(*in).DeepCopyInto(*out)
	}
	if in.OpUpdateData != nil {
		in, out := &in.OpUpdateData, &out.OpUpdateData
		*out = new(TransAPIUpdateOpdata)
		(*in).DeepCopyInto(*out)
	}
	if in.OpDeleteData != nil {
		in, out := &in.OpDeleteData, &out.OpDeleteData
		*out = new(TransAPIDeleteOpdata)
		(*in).DeepCopyInto(*out)
	}
	if in.OpRescheduleData != nil {
		in, out := &in.OpRescheduleData, &out.OpRescheduleData
		*out = new(TransRescheduleOpData)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver.
func (in *TransactionOperartion) DeepCopy() *TransactionOperartion {
	if in == nil {
		return nil
	}
	out := new(TransactionOperartion)
	in.DeepCopyInto(out)
	return out
}

// Transaction struct for scheduler transaction
type Transaction struct {
	// TransactionID id of transaction
	TransactionID string `json:"transactionID"`
	// ObjectKind the kind of object which is controlled by transaction
	ObjectKind string `json:"objectKind"`
	// ObjectName the name of object which is controlled by transaction
	ObjectName string `json:"objectName"`
	// Namespace the namespace of object which is controlled by transaction
	Namespace string `json:"namespace"`
	// ResourceVersion resource version
	ResourceVersion string `json:"-"`
	// PreOp last transaction operation
	PreOp *TransactionOperartion `json:"preOp,omitempty"`
	// CurOp current transaction operator
	CurOp *TransactionOperartion `json:"curOp,omitempty"`
	// Status status of transaction
	Status string `json:"status"`
	// Message message of transaction
	Message string `json:"message"`
	// CreateTime is transaction CreateTime
	CreateTime time.Time `json:"createTime"`
	// CheckInterval duration for check transaction data
	CheckInterval time.Duration `json:"checkInterval"`
	// DelayTime transaction delay time
	DelayTime time.Duration `json:"delayTime"`
	// ChildTransacationID child transactionID
	ChildTransacationID string `json:"childTransactionID"`
}

// GetUuid get uuid of transaction, uuid is composed of namespace and id
func (in *Transaction) GetUuid() string {
	return fmt.Sprintf("%s/%s", in.Namespace, in.TransactionID)
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Transaction) DeepCopyInto(out *Transaction) {
	*out = *in
	if in.PreOp != nil {
		in, out := &in.PreOp, &out.PreOp
		*out = new(TransactionOperartion)
		(*in).DeepCopyInto(*out)
	}
	if in.CurOp != nil {
		in, out := &in.CurOp, &out.CurOp
		*out = new(TransactionOperartion)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSpec.
func (t *Transaction) DeepCopy() *Transaction {
	if t == nil {
		return nil
	}
	out := new(Transaction)
	t.DeepCopyInto(out)
	return out
}
