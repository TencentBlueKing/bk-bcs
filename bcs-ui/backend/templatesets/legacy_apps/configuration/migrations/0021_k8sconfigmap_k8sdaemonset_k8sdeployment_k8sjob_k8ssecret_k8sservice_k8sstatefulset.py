# -*- coding: utf-8 -*-
"""
Tencent is pleased to support the open source community by making 蓝鲸智云PaaS平台社区版 (BlueKing PaaS Community
Edition) available.
Copyright (C) 2017-2021 THL A29 Limited, a Tencent company. All rights reserved.
Licensed under the MIT License (the "License"); you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://opensource.org/licenses/MIT

Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
specific language governing permissions and limitations under the License.
"""
# Generated by Django 1.11.5 on 2018-02-05 08:32
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('configuration', '0020_auto_20180108_1615'),
    ]

    operations = [
        migrations.CreateModel(
            name='K8sConfigMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creator', models.CharField(max_length=32, verbose_name='创建者')),
                ('updator', models.CharField(max_length=32, verbose_name='更新者')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_time', models.DateTimeField(blank=True, null=True)),
                ('config', models.TextField(verbose_name='配置信息')),
                ('name', models.CharField(default='', max_length=64, verbose_name='名称')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='K8sDaemonSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creator', models.CharField(max_length=32, verbose_name='创建者')),
                ('updator', models.CharField(max_length=32, verbose_name='更新者')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_time', models.DateTimeField(blank=True, null=True)),
                ('config', models.TextField(verbose_name='配置信息')),
                ('name', models.CharField(default='', max_length=64, verbose_name='名称')),
                ('desc', models.TextField(help_text='前台展示字段，bcs api 中无该信息', verbose_name='描述')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='K8sDeployment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creator', models.CharField(max_length=32, verbose_name='创建者')),
                ('updator', models.CharField(max_length=32, verbose_name='更新者')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_time', models.DateTimeField(blank=True, null=True)),
                ('config', models.TextField(verbose_name='配置信息')),
                ('name', models.CharField(default='', max_length=64, verbose_name='名称')),
                ('desc', models.TextField(help_text='前台展示字段，bcs api 中无该信息', verbose_name='描述')),
                ('deploy_tag', models.CharField(help_text='每次保存时会生成新的应用记录，用deploy_tag来记录与其他资源的关联关系', max_length=32, verbose_name='K8sDeployment 标识')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='K8sJob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creator', models.CharField(max_length=32, verbose_name='创建者')),
                ('updator', models.CharField(max_length=32, verbose_name='更新者')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_time', models.DateTimeField(blank=True, null=True)),
                ('config', models.TextField(verbose_name='配置信息')),
                ('name', models.CharField(default='', max_length=64, verbose_name='名称')),
                ('desc', models.TextField(help_text='前台展示字段，bcs api 中无该信息', verbose_name='描述')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='K8sSecret',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creator', models.CharField(max_length=32, verbose_name='创建者')),
                ('updator', models.CharField(max_length=32, verbose_name='更新者')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_time', models.DateTimeField(blank=True, null=True)),
                ('config', models.TextField(verbose_name='配置信息')),
                ('name', models.CharField(default='', max_length=64, verbose_name='名称')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='K8sService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creator', models.CharField(max_length=32, verbose_name='创建者')),
                ('updator', models.CharField(max_length=32, verbose_name='更新者')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_time', models.DateTimeField(blank=True, null=True)),
                ('deploy_tag', models.TextField(help_text='可以关联多个Deployment,json格式存储，选填', verbose_name='关联的Deployment ID')),
                ('config', models.TextField(verbose_name='配置信息')),
                ('name', models.CharField(default='', max_length=64, verbose_name='名称')),
                ('service_tag', models.CharField(help_text='每次保存时会生成新的应用记录，用来记录与其他资源的关联关系', max_length=32, verbose_name='K8sService 标识')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='K8sStatefulSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creator', models.CharField(max_length=32, verbose_name='创建者')),
                ('updator', models.CharField(max_length=32, verbose_name='更新者')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_time', models.DateTimeField(blank=True, null=True)),
                ('config', models.TextField(verbose_name='配置信息')),
                ('name', models.CharField(default='', max_length=64, verbose_name='名称')),
                ('desc', models.TextField(help_text='前台展示字段，bcs api 中无该信息', verbose_name='描述')),
                ('service_tag', models.CharField(max_length=32, verbose_name='K8sService 标识')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
