// +build !ignore_autogenerated

/*
 * Tencent is pleased to support the open source community by making Blueking Container Service available.
 * Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
 * Licensed under the MIT License (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * http://opensource.org/licenses/MIT
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClbBackendWeight) DeepCopyInto(out *ClbBackendWeight) {
	*out = *in
	if in.LabelSeletor != nil {
		in, out := &in.LabelSeletor, &out.LabelSeletor
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClbBackendWeight.
func (in *ClbBackendWeight) DeepCopy() *ClbBackendWeight {
	if in == nil {
		return nil
	}
	out := new(ClbBackendWeight)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClbHealthCheck) DeepCopyInto(out *ClbHealthCheck) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClbHealthCheck.
func (in *ClbHealthCheck) DeepCopy() *ClbHealthCheck {
	if in == nil {
		return nil
	}
	out := new(ClbHealthCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClbHttpRule) DeepCopyInto(out *ClbHttpRule) {
	*out = *in
	if in.TLS != nil {
		in, out := &in.TLS, &out.TLS
		*out = new(ClbTls)
		**out = **in
	}
	in.ClbRule.DeepCopyInto(&out.ClbRule)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClbHttpRule.
func (in *ClbHttpRule) DeepCopy() *ClbHttpRule {
	if in == nil {
		return nil
	}
	out := new(ClbHttpRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClbIngress) DeepCopyInto(out *ClbIngress) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClbIngress.
func (in *ClbIngress) DeepCopy() *ClbIngress {
	if in == nil {
		return nil
	}
	out := new(ClbIngress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClbIngress) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClbIngressList) DeepCopyInto(out *ClbIngressList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClbIngress, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClbIngressList.
func (in *ClbIngressList) DeepCopy() *ClbIngressList {
	if in == nil {
		return nil
	}
	out := new(ClbIngressList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClbIngressList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClbIngressSpec) DeepCopyInto(out *ClbIngressSpec) {
	*out = *in
	if in.HTTP != nil {
		in, out := &in.HTTP, &out.HTTP
		*out = make([]*ClbHttpRule, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ClbHttpRule)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.HTTPS != nil {
		in, out := &in.HTTPS, &out.HTTPS
		*out = make([]*ClbHttpRule, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ClbHttpRule)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TCP != nil {
		in, out := &in.TCP, &out.TCP
		*out = make([]*ClbRule, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ClbRule)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.UDP != nil {
		in, out := &in.UDP, &out.UDP
		*out = make([]*ClbRule, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ClbRule)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.StatefulSet != nil {
		in, out := &in.StatefulSet, &out.StatefulSet
		*out = new(ClbStatefulSet)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClbIngressSpec.
func (in *ClbIngressSpec) DeepCopy() *ClbIngressSpec {
	if in == nil {
		return nil
	}
	out := new(ClbIngressSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClbIngressStatus) DeepCopyInto(out *ClbIngressStatus) {
	*out = *in
	in.LastUpdateTime.DeepCopyInto(&out.LastUpdateTime)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClbIngressStatus.
func (in *ClbIngressStatus) DeepCopy() *ClbIngressStatus {
	if in == nil {
		return nil
	}
	out := new(ClbIngressStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClbLoadBalance) DeepCopyInto(out *ClbLoadBalance) {
	*out = *in
	if in.BackendWeights != nil {
		in, out := &in.BackendWeights, &out.BackendWeights
		*out = make([]ClbBackendWeight, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClbLoadBalance.
func (in *ClbLoadBalance) DeepCopy() *ClbLoadBalance {
	if in == nil {
		return nil
	}
	out := new(ClbLoadBalance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClbRule) DeepCopyInto(out *ClbRule) {
	*out = *in
	if in.LbPolicy != nil {
		in, out := &in.LbPolicy, &out.LbPolicy
		*out = new(ClbLoadBalance)
		(*in).DeepCopyInto(*out)
	}
	if in.HealthCheck != nil {
		in, out := &in.HealthCheck, &out.HealthCheck
		*out = new(ClbHealthCheck)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClbRule.
func (in *ClbRule) DeepCopy() *ClbRule {
	if in == nil {
		return nil
	}
	out := new(ClbRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClbStatefulSet) DeepCopyInto(out *ClbStatefulSet) {
	*out = *in
	if in.UDP != nil {
		in, out := &in.UDP, &out.UDP
		*out = make([]*ClbStatefulSetRule, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ClbStatefulSetRule)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TCP != nil {
		in, out := &in.TCP, &out.TCP
		*out = make([]*ClbStatefulSetRule, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ClbStatefulSetRule)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.HTTP != nil {
		in, out := &in.HTTP, &out.HTTP
		*out = make([]*ClbStatefulSetHttpRule, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ClbStatefulSetHttpRule)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.HTTPS != nil {
		in, out := &in.HTTPS, &out.HTTPS
		*out = make([]*ClbStatefulSetHttpRule, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ClbStatefulSetHttpRule)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClbStatefulSet.
func (in *ClbStatefulSet) DeepCopy() *ClbStatefulSet {
	if in == nil {
		return nil
	}
	out := new(ClbStatefulSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClbStatefulSetHttpRule) DeepCopyInto(out *ClbStatefulSetHttpRule) {
	*out = *in
	in.ClbHttpRule.DeepCopyInto(&out.ClbHttpRule)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClbStatefulSetHttpRule.
func (in *ClbStatefulSetHttpRule) DeepCopy() *ClbStatefulSetHttpRule {
	if in == nil {
		return nil
	}
	out := new(ClbStatefulSetHttpRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClbStatefulSetRule) DeepCopyInto(out *ClbStatefulSetRule) {
	*out = *in
	in.ClbRule.DeepCopyInto(&out.ClbRule)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClbStatefulSetRule.
func (in *ClbStatefulSetRule) DeepCopy() *ClbStatefulSetRule {
	if in == nil {
		return nil
	}
	out := new(ClbStatefulSetRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClbTls) DeepCopyInto(out *ClbTls) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClbTls.
func (in *ClbTls) DeepCopy() *ClbTls {
	if in == nil {
		return nil
	}
	out := new(ClbTls)
	in.DeepCopyInto(out)
	return out
}
