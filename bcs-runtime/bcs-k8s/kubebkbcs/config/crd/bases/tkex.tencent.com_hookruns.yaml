
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: hookruns.tkex.tencent.com
spec:
  group: tkex.tencent.com
  names:
    kind: HookRun
    listKind: HookRunList
    plural: hookruns
    singular: hookrun
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: HookRun is the Schema for the hookruns API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              args:
                items:
                  description: Argument is an argument to an AnalysisRun
                  properties:
                    name:
                      description: Name is the name of the argument
                      type: string
                    value:
                      description: Value is the value of the argument
                      type: string
                  required:
                  - name
                  type: object
                type: array
              metrics:
                items:
                  properties:
                    consecutiveErrorLimit:
                      description: 'ConsecutiveErrorLimit is the maximum number of
                        times the measurement is allowed to error in succession, before
                        the metric is considered error (default: 4)'
                      format: int32
                      type: integer
                    consecutiveSuccessfulLimit:
                      description: ConsecutiveSuccessfulLimit is the minmum number
                        of times the measurement is allowed to success in succession,
                        before the metric is considered success
                      format: int32
                      type: integer
                    count:
                      description: Count is the number of times to run the measurement.
                        If both interval and count are omitted, the effective count
                        is 1. If only interval is specified, metric runs indefinitely.
                        If count > 1, interval must be specified.
                      format: int32
                      type: integer
                    failureCondition:
                      description: FailureCondition is an expression which determines
                        if a measurement is considered failed If both success and
                        failure conditions are specified, and the measurement does
                        not fall into either condition, the measurement is considered
                        Inconclusive
                      type: string
                    failureLimit:
                      description: 'FailureLimit is the maximum number of times the
                        measurement is allowed to fail, before the entire metric is
                        considered Failed (default: 0)'
                      format: int32
                      type: integer
                    inconclusiveLimit:
                      description: 'InconclusiveLimit is the maximum number of times
                        the measurement is allowed to measure Inconclusive, before
                        the entire metric is considered Inconclusive (default: 0)'
                      format: int32
                      type: integer
                    initialDelay:
                      description: InitialDelay how long the AnalysisRun should wait
                        before starting this metric
                      type: string
                    interval:
                      description: Interval defines an interval string (e.g. 30s,
                        5m, 1h) between each measurement. If omitted, will perform
                        a single measurement
                      type: string
                    name:
                      type: string
                    provider:
                      description: Provider configuration to the external system to
                        use to verify the analysis
                      properties:
                        prometheus:
                          description: Prometheus specifies the prometheus metric
                            to query
                          properties:
                            address:
                              description: Address is the HTTP address and port of
                                the prometheus server
                              type: string
                            query:
                              description: Query is a raw prometheus query to perform
                              type: string
                          type: object
                        web:
                          properties:
                            headers:
                              items:
                                properties:
                                  key:
                                    type: string
                                  value:
                                    type: string
                                required:
                                - key
                                - value
                                type: object
                              type: array
                            jsonPath:
                              type: string
                            timeoutSeconds:
                              type: integer
                            url:
                              type: string
                          required:
                          - jsonPath
                          - url
                          type: object
                      type: object
                    successCondition:
                      description: 'SuccessCondition is an expression which determines
                        if a measurement is considered successful Expression is a
                        goevaluate expression. The keyword `result` is a variable
                        reference to the value of measurement. Results can be both
                        structured data or primitive. Examples:   result > 10   (result.requests_made
                        * result.requests_succeeded / 100) >= 90'
                      type: string
                    successfulLimit:
                      description: 'SuccessfulLimit is the maximum number of times
                        the measurement is to success, before the entire metric is
                        considered Running (default: 0)'
                      format: int32
                      type: integer
                  required:
                  - name
                  - provider
                  type: object
                type: array
              terminate:
                type: boolean
            required:
            - metrics
            type: object
          status:
            properties:
              message:
                type: string
              metricResults:
                items:
                  properties:
                    consecutiveError:
                      format: int32
                      type: integer
                    consecutiveSuccessful:
                      format: int32
                      type: integer
                    count:
                      format: int32
                      type: integer
                    error:
                      format: int32
                      type: integer
                    failed:
                      format: int32
                      type: integer
                    inconclusive:
                      format: int32
                      type: integer
                    measurements:
                      items:
                        properties:
                          finishedAt:
                            format: date-time
                            type: string
                          message:
                            type: string
                          phase:
                            type: string
                          resumeAt:
                            format: date-time
                            type: string
                          startedAt:
                            format: date-time
                            type: string
                          value:
                            type: string
                        required:
                        - phase
                        type: object
                      type: array
                    message:
                      type: string
                    name:
                      type: string
                    phase:
                      type: string
                    successful:
                      format: int32
                      type: integer
                  required:
                  - name
                  - phase
                  type: object
                type: array
              phase:
                type: string
              startedAt:
                format: date-time
                type: string
            required:
            - phase
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
