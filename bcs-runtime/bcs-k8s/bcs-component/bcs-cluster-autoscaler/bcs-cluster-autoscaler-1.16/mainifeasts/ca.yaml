apiVersion: v1
kind: ServiceAccount
metadata:
  name: bcs-cluster-autoscaler
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: bcs-cluster-autoscaler
rules:
  - apiGroups:
      - ""
    resources:
      - events
      - endpoints
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - pods/eviction
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - pods/status
    verbs:
      - update
  - apiGroups:
      - ""
    resourceNames:
      - bcs-cluster-autoscaler
    resources:
      - endpoints
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - watch
      - list
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - pods
      - services
      - replicationcontrollers
      - persistentvolumeclaims
      - persistentvolumes
    verbs:
      - watch
      - list
      - get
  - apiGroups:
      - extensions
    resources:
      - replicasets
      - daemonsets
    verbs:
      - watch
      - list
      - get
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - watch
      - list
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - statefulsets
      - replicasets
    verbs:
      - watch
      - list
      - get
  - apiGroups:
      - batch
    resources:
      - '*'
    verbs:
      - watch
      - list
      - get
  - apiGroups:
      - storage.k8s.io
    resources:
      - csinodes
      - storageclasses
    verbs:
      - watch
      - list
      - get
  - apiGroups:
      - coordination.k8s.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - ''
    resources:
      - configmaps
    verbs:
      - '*'

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: bcs-cluster-autoscaler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: bcs-cluster-autoscaler
subjects:
  - kind: ServiceAccount
    name: bcs-cluster-autoscaler
    namespace: kube-system
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: bcs-cluster-autoscaler
  name: bcs-cluster-autoscaler
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: bcs-cluster-autoscaler
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/scrape: 'true'
      labels:
        app: bcs-cluster-autoscaler
    spec:
      containers:
        - command:
            - ./bcs-cluster-autoscaler
            - --v=4
            - --expander=least-waste
            - --estimator=clusterresource
            - --scale-down-delay-after-add=5m
            - --scale-down-unneeded-time=3m
            - --stderrthreshold=info
            - --cloud-provider=tenc
            - --skip-nodes-with-local-storage=false
            - --nodes=0:15:tenc-abewdjkle-withtencipauto
            - --buffer-resource-ratio=0
            - --initial-node-group-backoff-duration=10s
            - --max-node-group-backoff-duration=3m
            - --node-group-backoff-reset-timeout=5m
            - --max-total-unready-percentage=70
            - --ok-total-unready-count=100
            - --scale-down-unready-time=8h
            - --cloud-config=/etc/kubernetes/qcloud.conf
          env:
            - name: InternalSecretId
              value: ${SK}
            - name: InternalSecretKey
              value: ${SK}
            - name: UserName
              value: scr-system
            - name: InternalClusterId
              value: ${ID}
          image: bcs/bcs-cluster-autoscaler:latest
          imagePullPolicy: IfNotPresent
          name: bcs-cluster-autoscaler
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 300Mi
          volumeMounts:
            - mountPath: /etc/kubernetes
              name: cloudconfig
              readOnly: true
          ports:
            - containerPort: 8085
              name: metrics
              protocal: TCP
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      serviceAccount: bcs-cluster-autoscaler
      serviceAccountName: bcs-cluster-autoscaler
      volumes:
        - hostPath:
            path: /etc/kubernetes
            type: Directory
          name: cloudconfig

---
apiVersion: v1
kind: Service
metadata:
  name: bcs-cluster-autoscaler
  namespace: kube-system
spec:
  selector:
    app: bcs-cluster-autoscaler
  ports:
    - port: 8085
      targetPort: 8085