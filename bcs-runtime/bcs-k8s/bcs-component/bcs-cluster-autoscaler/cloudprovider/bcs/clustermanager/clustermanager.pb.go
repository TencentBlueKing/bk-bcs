// Code generated by protoc-gen-go. DO NOT EDIT.
// source: clustermanager.proto

package clustermanager

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Cluster struct {
	ClusterID              string                  `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ClusterName            string                  `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	FederationClusterID    string                  `protobuf:"bytes,3,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	Provider               string                  `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	Region                 string                  `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	VpcID                  string                  `protobuf:"bytes,6,opt,name=vpcID,proto3" json:"vpcID,omitempty"`
	ProjectID              string                  `protobuf:"bytes,7,opt,name=projectID,proto3" json:"projectID,omitempty"`
	BusinessID             string                  `protobuf:"bytes,8,opt,name=businessID,proto3" json:"businessID,omitempty"`
	Environment            string                  `protobuf:"bytes,9,opt,name=environment,proto3" json:"environment,omitempty"`
	EngineType             string                  `protobuf:"bytes,10,opt,name=engineType,proto3" json:"engineType,omitempty"`
	IsExclusive            bool                    `protobuf:"varint,11,opt,name=isExclusive,proto3" json:"isExclusive,omitempty"`
	ClusterType            string                  `protobuf:"bytes,12,opt,name=clusterType,proto3" json:"clusterType,omitempty"`
	Labels                 map[string]string       `protobuf:"bytes,13,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Creator                string                  `protobuf:"bytes,14,opt,name=creator,proto3" json:"creator,omitempty"`
	CreateTime             string                  `protobuf:"bytes,15,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime             string                  `protobuf:"bytes,16,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	BcsAddons              map[string]*BKOpsPlugin `protobuf:"bytes,17,rep,name=bcsAddons,proto3" json:"bcsAddons,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ExtraAddons            map[string]*BKOpsPlugin `protobuf:"bytes,18,rep,name=extraAddons,proto3" json:"extraAddons,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SystemID               string                  `protobuf:"bytes,19,opt,name=systemID,proto3" json:"systemID,omitempty"`
	ManageType             string                  `protobuf:"bytes,20,opt,name=manageType,proto3" json:"manageType,omitempty"`
	Master                 map[string]*Node        `protobuf:"bytes,21,rep,name=master,proto3" json:"master,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NetworkSettings        *NetworkSetting         `protobuf:"bytes,22,opt,name=networkSettings,proto3" json:"networkSettings,omitempty"`
	ClusterBasicSettings   *ClusterBasicSetting    `protobuf:"bytes,23,opt,name=clusterBasicSettings,proto3" json:"clusterBasicSettings,omitempty"`
	ClusterAdvanceSettings *ClusterAdvanceSetting  `protobuf:"bytes,24,opt,name=clusterAdvanceSettings,proto3" json:"clusterAdvanceSettings,omitempty"`
	NodeSettings           *NodeSetting            `protobuf:"bytes,25,opt,name=nodeSettings,proto3" json:"nodeSettings,omitempty"`
	Status                 string                  `protobuf:"bytes,26,opt,name=status,proto3" json:"status,omitempty"`
	Updater                string                  `protobuf:"bytes,27,opt,name=updater,proto3" json:"updater,omitempty"`
	NetworkType            string                  `protobuf:"bytes,28,opt,name=networkType,proto3" json:"networkType,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                `json:"-" bson:"-"`
	XXX_unrecognized       []byte                  `json:"-" bson:"-"`
	XXX_sizecache          int32                   `json:"-" bson:"-"`
}

func (m *Cluster) Reset()         { *m = Cluster{} }
func (m *Cluster) String() string { return proto.CompactTextString(m) }
func (*Cluster) ProtoMessage()    {}
func (*Cluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{0}
}

func (m *Cluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cluster.Unmarshal(m, b)
}
func (m *Cluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cluster.Marshal(b, m, deterministic)
}
func (m *Cluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cluster.Merge(m, src)
}
func (m *Cluster) XXX_Size() int {
	return xxx_messageInfo_Cluster.Size(m)
}
func (m *Cluster) XXX_DiscardUnknown() {
	xxx_messageInfo_Cluster.DiscardUnknown(m)
}

var xxx_messageInfo_Cluster proto.InternalMessageInfo

func (m *Cluster) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *Cluster) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *Cluster) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *Cluster) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *Cluster) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Cluster) GetVpcID() string {
	if m != nil {
		return m.VpcID
	}
	return ""
}

func (m *Cluster) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *Cluster) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *Cluster) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *Cluster) GetEngineType() string {
	if m != nil {
		return m.EngineType
	}
	return ""
}

func (m *Cluster) GetIsExclusive() bool {
	if m != nil {
		return m.IsExclusive
	}
	return false
}

func (m *Cluster) GetClusterType() string {
	if m != nil {
		return m.ClusterType
	}
	return ""
}

func (m *Cluster) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Cluster) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Cluster) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *Cluster) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *Cluster) GetBcsAddons() map[string]*BKOpsPlugin {
	if m != nil {
		return m.BcsAddons
	}
	return nil
}

func (m *Cluster) GetExtraAddons() map[string]*BKOpsPlugin {
	if m != nil {
		return m.ExtraAddons
	}
	return nil
}

func (m *Cluster) GetSystemID() string {
	if m != nil {
		return m.SystemID
	}
	return ""
}

func (m *Cluster) GetManageType() string {
	if m != nil {
		return m.ManageType
	}
	return ""
}

func (m *Cluster) GetMaster() map[string]*Node {
	if m != nil {
		return m.Master
	}
	return nil
}

func (m *Cluster) GetNetworkSettings() *NetworkSetting {
	if m != nil {
		return m.NetworkSettings
	}
	return nil
}

func (m *Cluster) GetClusterBasicSettings() *ClusterBasicSetting {
	if m != nil {
		return m.ClusterBasicSettings
	}
	return nil
}

func (m *Cluster) GetClusterAdvanceSettings() *ClusterAdvanceSetting {
	if m != nil {
		return m.ClusterAdvanceSettings
	}
	return nil
}

func (m *Cluster) GetNodeSettings() *NodeSetting {
	if m != nil {
		return m.NodeSettings
	}
	return nil
}

func (m *Cluster) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Cluster) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *Cluster) GetNetworkType() string {
	if m != nil {
		return m.NetworkType
	}
	return ""
}

type Node struct {
	NodeID               string   `protobuf:"bytes,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	InnerIP              string   `protobuf:"bytes,2,opt,name=innerIP,proto3" json:"innerIP,omitempty"`
	InstanceType         string   `protobuf:"bytes,3,opt,name=instanceType,proto3" json:"instanceType,omitempty"`
	CPU                  uint32   `protobuf:"varint,4,opt,name=CPU,proto3" json:"CPU,omitempty"`
	Mem                  uint32   `protobuf:"varint,5,opt,name=mem,proto3" json:"mem,omitempty"`
	GPU                  uint32   `protobuf:"varint,6,opt,name=GPU,proto3" json:"GPU,omitempty"`
	Status               string   `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	ZoneID               string   `protobuf:"bytes,8,opt,name=zoneID,proto3" json:"zoneID,omitempty"`
	NodeGroupID          string   `protobuf:"bytes,9,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	ClusterID            string   `protobuf:"bytes,10,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	VPC                  string   `protobuf:"bytes,11,opt,name=VPC,proto3" json:"VPC,omitempty"`
	Region               string   `protobuf:"bytes,12,opt,name=region,proto3" json:"region,omitempty"`
	Passwd               string   `protobuf:"bytes,13,opt,name=passwd,proto3" json:"passwd,omitempty"`
	Zone                 uint32   `protobuf:"varint,14,opt,name=zone,proto3" json:"zone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{1}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetNodeID() string {
	if m != nil {
		return m.NodeID
	}
	return ""
}

func (m *Node) GetInnerIP() string {
	if m != nil {
		return m.InnerIP
	}
	return ""
}

func (m *Node) GetInstanceType() string {
	if m != nil {
		return m.InstanceType
	}
	return ""
}

func (m *Node) GetCPU() uint32 {
	if m != nil {
		return m.CPU
	}
	return 0
}

func (m *Node) GetMem() uint32 {
	if m != nil {
		return m.Mem
	}
	return 0
}

func (m *Node) GetGPU() uint32 {
	if m != nil {
		return m.GPU
	}
	return 0
}

func (m *Node) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Node) GetZoneID() string {
	if m != nil {
		return m.ZoneID
	}
	return ""
}

func (m *Node) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *Node) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *Node) GetVPC() string {
	if m != nil {
		return m.VPC
	}
	return ""
}

func (m *Node) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Node) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

func (m *Node) GetZone() uint32 {
	if m != nil {
		return m.Zone
	}
	return 0
}

type NetworkSetting struct {
	ClusterIPv4CIDR      string   `protobuf:"bytes,1,opt,name=clusterIPv4CIDR,proto3" json:"clusterIPv4CIDR,omitempty"`
	ServiceIPv4CIDR      string   `protobuf:"bytes,2,opt,name=serviceIPv4CIDR,proto3" json:"serviceIPv4CIDR,omitempty"`
	MaxNodePodNum        string   `protobuf:"bytes,3,opt,name=maxNodePodNum,proto3" json:"maxNodePodNum,omitempty"`
	MaxServiceNum        string   `protobuf:"bytes,4,opt,name=maxServiceNum,proto3" json:"maxServiceNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *NetworkSetting) Reset()         { *m = NetworkSetting{} }
func (m *NetworkSetting) String() string { return proto.CompactTextString(m) }
func (*NetworkSetting) ProtoMessage()    {}
func (*NetworkSetting) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{2}
}

func (m *NetworkSetting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSetting.Unmarshal(m, b)
}
func (m *NetworkSetting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSetting.Marshal(b, m, deterministic)
}
func (m *NetworkSetting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSetting.Merge(m, src)
}
func (m *NetworkSetting) XXX_Size() int {
	return xxx_messageInfo_NetworkSetting.Size(m)
}
func (m *NetworkSetting) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSetting.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSetting proto.InternalMessageInfo

func (m *NetworkSetting) GetClusterIPv4CIDR() string {
	if m != nil {
		return m.ClusterIPv4CIDR
	}
	return ""
}

func (m *NetworkSetting) GetServiceIPv4CIDR() string {
	if m != nil {
		return m.ServiceIPv4CIDR
	}
	return ""
}

func (m *NetworkSetting) GetMaxNodePodNum() string {
	if m != nil {
		return m.MaxNodePodNum
	}
	return ""
}

func (m *NetworkSetting) GetMaxServiceNum() string {
	if m != nil {
		return m.MaxServiceNum
	}
	return ""
}

type ClusterBasicSetting struct {
	OS                   string            `protobuf:"bytes,1,opt,name=OS,proto3" json:"OS,omitempty"`
	Version              string            `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	ClusterTags          map[string]string `protobuf:"bytes,3,rep,name=clusterTags,proto3" json:"clusterTags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *ClusterBasicSetting) Reset()         { *m = ClusterBasicSetting{} }
func (m *ClusterBasicSetting) String() string { return proto.CompactTextString(m) }
func (*ClusterBasicSetting) ProtoMessage()    {}
func (*ClusterBasicSetting) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{3}
}

func (m *ClusterBasicSetting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterBasicSetting.Unmarshal(m, b)
}
func (m *ClusterBasicSetting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterBasicSetting.Marshal(b, m, deterministic)
}
func (m *ClusterBasicSetting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterBasicSetting.Merge(m, src)
}
func (m *ClusterBasicSetting) XXX_Size() int {
	return xxx_messageInfo_ClusterBasicSetting.Size(m)
}
func (m *ClusterBasicSetting) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterBasicSetting.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterBasicSetting proto.InternalMessageInfo

func (m *ClusterBasicSetting) GetOS() string {
	if m != nil {
		return m.OS
	}
	return ""
}

func (m *ClusterBasicSetting) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ClusterBasicSetting) GetClusterTags() map[string]string {
	if m != nil {
		return m.ClusterTags
	}
	return nil
}

type ClusterAdvanceSetting struct {
	IPVS                 bool              `protobuf:"varint,1,opt,name=IPVS,proto3" json:"IPVS,omitempty"`
	ContainerRuntime     string            `protobuf:"bytes,2,opt,name=containerRuntime,proto3" json:"containerRuntime,omitempty"`
	RuntimeVersion       string            `protobuf:"bytes,3,opt,name=runtimeVersion,proto3" json:"runtimeVersion,omitempty"`
	ExtraArgs            map[string]string `protobuf:"bytes,4,rep,name=extraArgs,proto3" json:"extraArgs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *ClusterAdvanceSetting) Reset()         { *m = ClusterAdvanceSetting{} }
func (m *ClusterAdvanceSetting) String() string { return proto.CompactTextString(m) }
func (*ClusterAdvanceSetting) ProtoMessage()    {}
func (*ClusterAdvanceSetting) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{4}
}

func (m *ClusterAdvanceSetting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterAdvanceSetting.Unmarshal(m, b)
}
func (m *ClusterAdvanceSetting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterAdvanceSetting.Marshal(b, m, deterministic)
}
func (m *ClusterAdvanceSetting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterAdvanceSetting.Merge(m, src)
}
func (m *ClusterAdvanceSetting) XXX_Size() int {
	return xxx_messageInfo_ClusterAdvanceSetting.Size(m)
}
func (m *ClusterAdvanceSetting) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterAdvanceSetting.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterAdvanceSetting proto.InternalMessageInfo

func (m *ClusterAdvanceSetting) GetIPVS() bool {
	if m != nil {
		return m.IPVS
	}
	return false
}

func (m *ClusterAdvanceSetting) GetContainerRuntime() string {
	if m != nil {
		return m.ContainerRuntime
	}
	return ""
}

func (m *ClusterAdvanceSetting) GetRuntimeVersion() string {
	if m != nil {
		return m.RuntimeVersion
	}
	return ""
}

func (m *ClusterAdvanceSetting) GetExtraArgs() map[string]string {
	if m != nil {
		return m.ExtraArgs
	}
	return nil
}

type NodeSetting struct {
	DockerGraphPath      string   `protobuf:"bytes,1,opt,name=dockerGraphPath,proto3" json:"dockerGraphPath,omitempty"`
	MountTarget          string   `protobuf:"bytes,2,opt,name=mountTarget,proto3" json:"mountTarget,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *NodeSetting) Reset()         { *m = NodeSetting{} }
func (m *NodeSetting) String() string { return proto.CompactTextString(m) }
func (*NodeSetting) ProtoMessage()    {}
func (*NodeSetting) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{5}
}

func (m *NodeSetting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeSetting.Unmarshal(m, b)
}
func (m *NodeSetting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeSetting.Marshal(b, m, deterministic)
}
func (m *NodeSetting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeSetting.Merge(m, src)
}
func (m *NodeSetting) XXX_Size() int {
	return xxx_messageInfo_NodeSetting.Size(m)
}
func (m *NodeSetting) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeSetting.DiscardUnknown(m)
}

var xxx_messageInfo_NodeSetting proto.InternalMessageInfo

func (m *NodeSetting) GetDockerGraphPath() string {
	if m != nil {
		return m.DockerGraphPath
	}
	return ""
}

func (m *NodeSetting) GetMountTarget() string {
	if m != nil {
		return m.MountTarget
	}
	return ""
}

type ClusterCredential struct {
	ServerKey            string   `protobuf:"bytes,1,opt,name=serverKey,proto3" json:"serverKey,omitempty"`
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ClientModule         string   `protobuf:"bytes,3,opt,name=clientModule,proto3" json:"clientModule,omitempty"`
	ServerAddress        string   `protobuf:"bytes,4,opt,name=serverAddress,proto3" json:"serverAddress,omitempty"`
	CaCertData           string   `protobuf:"bytes,5,opt,name=caCertData,proto3" json:"caCertData,omitempty"`
	UserToken            string   `protobuf:"bytes,6,opt,name=userToken,proto3" json:"userToken,omitempty"`
	ClusterDomain        string   `protobuf:"bytes,7,opt,name=clusterDomain,proto3" json:"clusterDomain,omitempty"`
	ConnectMode          string   `protobuf:"bytes,8,opt,name=connectMode,proto3" json:"connectMode,omitempty"`
	CreateTime           string   `protobuf:"bytes,9,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string   `protobuf:"bytes,10,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ClusterCredential) Reset()         { *m = ClusterCredential{} }
func (m *ClusterCredential) String() string { return proto.CompactTextString(m) }
func (*ClusterCredential) ProtoMessage()    {}
func (*ClusterCredential) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{6}
}

func (m *ClusterCredential) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterCredential.Unmarshal(m, b)
}
func (m *ClusterCredential) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterCredential.Marshal(b, m, deterministic)
}
func (m *ClusterCredential) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterCredential.Merge(m, src)
}
func (m *ClusterCredential) XXX_Size() int {
	return xxx_messageInfo_ClusterCredential.Size(m)
}
func (m *ClusterCredential) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterCredential.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterCredential proto.InternalMessageInfo

func (m *ClusterCredential) GetServerKey() string {
	if m != nil {
		return m.ServerKey
	}
	return ""
}

func (m *ClusterCredential) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ClusterCredential) GetClientModule() string {
	if m != nil {
		return m.ClientModule
	}
	return ""
}

func (m *ClusterCredential) GetServerAddress() string {
	if m != nil {
		return m.ServerAddress
	}
	return ""
}

func (m *ClusterCredential) GetCaCertData() string {
	if m != nil {
		return m.CaCertData
	}
	return ""
}

func (m *ClusterCredential) GetUserToken() string {
	if m != nil {
		return m.UserToken
	}
	return ""
}

func (m *ClusterCredential) GetClusterDomain() string {
	if m != nil {
		return m.ClusterDomain
	}
	return ""
}

func (m *ClusterCredential) GetConnectMode() string {
	if m != nil {
		return m.ConnectMode
	}
	return ""
}

func (m *ClusterCredential) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *ClusterCredential) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

type Namespace struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FederationClusterID  string            `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ProjectID            string            `protobuf:"bytes,3,opt,name=projectID,proto3" json:"projectID,omitempty"`
	BusinessID           string            `protobuf:"bytes,4,opt,name=businessID,proto3" json:"businessID,omitempty"`
	Labels               map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MaxQuota             string            `protobuf:"bytes,6,opt,name=maxQuota,proto3" json:"maxQuota,omitempty"`
	CreateTime           string            `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string            `protobuf:"bytes,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	QuotaList            []*ResourceQuota  `protobuf:"bytes,9,rep,name=quotaList,proto3" json:"quotaList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *Namespace) Reset()         { *m = Namespace{} }
func (m *Namespace) String() string { return proto.CompactTextString(m) }
func (*Namespace) ProtoMessage()    {}
func (*Namespace) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{7}
}

func (m *Namespace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Namespace.Unmarshal(m, b)
}
func (m *Namespace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Namespace.Marshal(b, m, deterministic)
}
func (m *Namespace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Namespace.Merge(m, src)
}
func (m *Namespace) XXX_Size() int {
	return xxx_messageInfo_Namespace.Size(m)
}
func (m *Namespace) XXX_DiscardUnknown() {
	xxx_messageInfo_Namespace.DiscardUnknown(m)
}

var xxx_messageInfo_Namespace proto.InternalMessageInfo

func (m *Namespace) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Namespace) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *Namespace) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *Namespace) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *Namespace) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Namespace) GetMaxQuota() string {
	if m != nil {
		return m.MaxQuota
	}
	return ""
}

func (m *Namespace) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *Namespace) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *Namespace) GetQuotaList() []*ResourceQuota {
	if m != nil {
		return m.QuotaList
	}
	return nil
}

type ResourceQuota struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ClusterID            string   `protobuf:"bytes,3,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ResourceQuota        string   `protobuf:"bytes,4,opt,name=resourceQuota,proto3" json:"resourceQuota,omitempty"`
	Region               string   `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	CreateTime           string   `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string   `protobuf:"bytes,7,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	Status               string   `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Message              string   `protobuf:"bytes,9,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ResourceQuota) Reset()         { *m = ResourceQuota{} }
func (m *ResourceQuota) String() string { return proto.CompactTextString(m) }
func (*ResourceQuota) ProtoMessage()    {}
func (*ResourceQuota) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{8}
}

func (m *ResourceQuota) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceQuota.Unmarshal(m, b)
}
func (m *ResourceQuota) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceQuota.Marshal(b, m, deterministic)
}
func (m *ResourceQuota) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceQuota.Merge(m, src)
}
func (m *ResourceQuota) XXX_Size() int {
	return xxx_messageInfo_ResourceQuota.Size(m)
}
func (m *ResourceQuota) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceQuota.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceQuota proto.InternalMessageInfo

func (m *ResourceQuota) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ResourceQuota) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *ResourceQuota) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ResourceQuota) GetResourceQuota() string {
	if m != nil {
		return m.ResourceQuota
	}
	return ""
}

func (m *ResourceQuota) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *ResourceQuota) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *ResourceQuota) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *ResourceQuota) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ResourceQuota) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// Credential storage for cloud credential
type Credential struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Secret               string   `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *Credential) Reset()         { *m = Credential{} }
func (m *Credential) String() string { return proto.CompactTextString(m) }
func (*Credential) ProtoMessage()    {}
func (*Credential) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{9}
}

func (m *Credential) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Credential.Unmarshal(m, b)
}
func (m *Credential) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Credential.Marshal(b, m, deterministic)
}
func (m *Credential) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Credential.Merge(m, src)
}
func (m *Credential) XXX_Size() int {
	return xxx_messageInfo_Credential.Size(m)
}
func (m *Credential) XXX_DiscardUnknown() {
	xxx_messageInfo_Credential.DiscardUnknown(m)
}

var xxx_messageInfo_Credential proto.InternalMessageInfo

func (m *Credential) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Credential) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

type BKOpsPlugin struct {
	System               string            `protobuf:"bytes,1,opt,name=system,proto3" json:"system,omitempty"`
	Link                 string            `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
	Params               map[string]string `protobuf:"bytes,3,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *BKOpsPlugin) Reset()         { *m = BKOpsPlugin{} }
func (m *BKOpsPlugin) String() string { return proto.CompactTextString(m) }
func (*BKOpsPlugin) ProtoMessage()    {}
func (*BKOpsPlugin) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{10}
}

func (m *BKOpsPlugin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BKOpsPlugin.Unmarshal(m, b)
}
func (m *BKOpsPlugin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BKOpsPlugin.Marshal(b, m, deterministic)
}
func (m *BKOpsPlugin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BKOpsPlugin.Merge(m, src)
}
func (m *BKOpsPlugin) XXX_Size() int {
	return xxx_messageInfo_BKOpsPlugin.Size(m)
}
func (m *BKOpsPlugin) XXX_DiscardUnknown() {
	xxx_messageInfo_BKOpsPlugin.DiscardUnknown(m)
}

var xxx_messageInfo_BKOpsPlugin proto.InternalMessageInfo

func (m *BKOpsPlugin) GetSystem() string {
	if m != nil {
		return m.System
	}
	return ""
}

func (m *BKOpsPlugin) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *BKOpsPlugin) GetParams() map[string]string {
	if m != nil {
		return m.Params
	}
	return nil
}

type Action struct {
	PreActions           []string                `protobuf:"bytes,1,rep,name=preActions,proto3" json:"preActions,omitempty"`
	PostActions          []string                `protobuf:"bytes,2,rep,name=postActions,proto3" json:"postActions,omitempty"`
	Plugins              map[string]*BKOpsPlugin `protobuf:"bytes,3,rep,name=plugins,proto3" json:"plugins,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-" bson:"-"`
	XXX_unrecognized     []byte                  `json:"-" bson:"-"`
	XXX_sizecache        int32                   `json:"-" bson:"-"`
}

func (m *Action) Reset()         { *m = Action{} }
func (m *Action) String() string { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()    {}
func (*Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{11}
}

func (m *Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action.Unmarshal(m, b)
}
func (m *Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action.Marshal(b, m, deterministic)
}
func (m *Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action.Merge(m, src)
}
func (m *Action) XXX_Size() int {
	return xxx_messageInfo_Action.Size(m)
}
func (m *Action) XXX_DiscardUnknown() {
	xxx_messageInfo_Action.DiscardUnknown(m)
}

var xxx_messageInfo_Action proto.InternalMessageInfo

func (m *Action) GetPreActions() []string {
	if m != nil {
		return m.PreActions
	}
	return nil
}

func (m *Action) GetPostActions() []string {
	if m != nil {
		return m.PostActions
	}
	return nil
}

func (m *Action) GetPlugins() map[string]*BKOpsPlugin {
	if m != nil {
		return m.Plugins
	}
	return nil
}

type ClusterMgr struct {
	AvailableVersion       []string `protobuf:"bytes,1,rep,name=availableVersion,proto3" json:"availableVersion,omitempty"`
	CreateCluster          *Action  `protobuf:"bytes,2,opt,name=createCluster,proto3" json:"createCluster,omitempty"`
	DeleteCluster          *Action  `protobuf:"bytes,3,opt,name=deleteCluster,proto3" json:"deleteCluster,omitempty"`
	AddNodesToCluster      *Action  `protobuf:"bytes,4,opt,name=addNodesToCluster,proto3" json:"addNodesToCluster,omitempty"`
	DeleteNodesFromCluster *Action  `protobuf:"bytes,5,opt,name=deleteNodesFromCluster,proto3" json:"deleteNodesFromCluster,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-" bson:"-"`
	XXX_unrecognized       []byte   `json:"-" bson:"-"`
	XXX_sizecache          int32    `json:"-" bson:"-"`
}

func (m *ClusterMgr) Reset()         { *m = ClusterMgr{} }
func (m *ClusterMgr) String() string { return proto.CompactTextString(m) }
func (*ClusterMgr) ProtoMessage()    {}
func (*ClusterMgr) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{12}
}

func (m *ClusterMgr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterMgr.Unmarshal(m, b)
}
func (m *ClusterMgr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterMgr.Marshal(b, m, deterministic)
}
func (m *ClusterMgr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterMgr.Merge(m, src)
}
func (m *ClusterMgr) XXX_Size() int {
	return xxx_messageInfo_ClusterMgr.Size(m)
}
func (m *ClusterMgr) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterMgr.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterMgr proto.InternalMessageInfo

func (m *ClusterMgr) GetAvailableVersion() []string {
	if m != nil {
		return m.AvailableVersion
	}
	return nil
}

func (m *ClusterMgr) GetCreateCluster() *Action {
	if m != nil {
		return m.CreateCluster
	}
	return nil
}

func (m *ClusterMgr) GetDeleteCluster() *Action {
	if m != nil {
		return m.DeleteCluster
	}
	return nil
}

func (m *ClusterMgr) GetAddNodesToCluster() *Action {
	if m != nil {
		return m.AddNodesToCluster
	}
	return nil
}

func (m *ClusterMgr) GetDeleteNodesFromCluster() *Action {
	if m != nil {
		return m.DeleteNodesFromCluster
	}
	return nil
}

type NodeGroupMgr struct {
	CreateNodeGroup      *Action  `protobuf:"bytes,2,opt,name=createNodeGroup,proto3" json:"createNodeGroup,omitempty"`
	DeleteNodeGroup      *Action  `protobuf:"bytes,3,opt,name=deleteNodeGroup,proto3" json:"deleteNodeGroup,omitempty"`
	MoveNodesToGroup     *Action  `protobuf:"bytes,4,opt,name=moveNodesToGroup,proto3" json:"moveNodesToGroup,omitempty"`
	RemoveNodesFromGroup *Action  `protobuf:"bytes,5,opt,name=removeNodesFromGroup,proto3" json:"removeNodesFromGroup,omitempty"`
	CleanNodesInGroup    *Action  `protobuf:"bytes,6,opt,name=cleanNodesInGroup,proto3" json:"cleanNodesInGroup,omitempty"`
	UpdateDesiredNodes   *Action  `protobuf:"bytes,7,opt,name=updateDesiredNodes,proto3" json:"updateDesiredNodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *NodeGroupMgr) Reset()         { *m = NodeGroupMgr{} }
func (m *NodeGroupMgr) String() string { return proto.CompactTextString(m) }
func (*NodeGroupMgr) ProtoMessage()    {}
func (*NodeGroupMgr) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{13}
}

func (m *NodeGroupMgr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeGroupMgr.Unmarshal(m, b)
}
func (m *NodeGroupMgr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeGroupMgr.Marshal(b, m, deterministic)
}
func (m *NodeGroupMgr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeGroupMgr.Merge(m, src)
}
func (m *NodeGroupMgr) XXX_Size() int {
	return xxx_messageInfo_NodeGroupMgr.Size(m)
}
func (m *NodeGroupMgr) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeGroupMgr.DiscardUnknown(m)
}

var xxx_messageInfo_NodeGroupMgr proto.InternalMessageInfo

func (m *NodeGroupMgr) GetCreateNodeGroup() *Action {
	if m != nil {
		return m.CreateNodeGroup
	}
	return nil
}

func (m *NodeGroupMgr) GetDeleteNodeGroup() *Action {
	if m != nil {
		return m.DeleteNodeGroup
	}
	return nil
}

func (m *NodeGroupMgr) GetMoveNodesToGroup() *Action {
	if m != nil {
		return m.MoveNodesToGroup
	}
	return nil
}

func (m *NodeGroupMgr) GetRemoveNodesFromGroup() *Action {
	if m != nil {
		return m.RemoveNodesFromGroup
	}
	return nil
}

func (m *NodeGroupMgr) GetCleanNodesInGroup() *Action {
	if m != nil {
		return m.CleanNodesInGroup
	}
	return nil
}

func (m *NodeGroupMgr) GetUpdateDesiredNodes() *Action {
	if m != nil {
		return m.UpdateDesiredNodes
	}
	return nil
}

type OSInfo struct {
	AvailableVersion      []string          `protobuf:"bytes,1,rep,name=availableVersion,proto3" json:"availableVersion,omitempty"`
	InstanceType          []string          `protobuf:"bytes,2,rep,name=instanceType,proto3" json:"instanceType,omitempty"`
	DefaultSecurityGroups []string          `protobuf:"bytes,3,rep,name=defaultSecurityGroups,proto3" json:"defaultSecurityGroups,omitempty"`
	Regions               map[string]string `protobuf:"bytes,4,rep,name=regions,proto3" json:"regions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral  struct{}          `json:"-" bson:"-"`
	XXX_unrecognized      []byte            `json:"-" bson:"-"`
	XXX_sizecache         int32             `json:"-" bson:"-"`
}

func (m *OSInfo) Reset()         { *m = OSInfo{} }
func (m *OSInfo) String() string { return proto.CompactTextString(m) }
func (*OSInfo) ProtoMessage()    {}
func (*OSInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{14}
}

func (m *OSInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OSInfo.Unmarshal(m, b)
}
func (m *OSInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OSInfo.Marshal(b, m, deterministic)
}
func (m *OSInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OSInfo.Merge(m, src)
}
func (m *OSInfo) XXX_Size() int {
	return xxx_messageInfo_OSInfo.Size(m)
}
func (m *OSInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OSInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OSInfo proto.InternalMessageInfo

func (m *OSInfo) GetAvailableVersion() []string {
	if m != nil {
		return m.AvailableVersion
	}
	return nil
}

func (m *OSInfo) GetInstanceType() []string {
	if m != nil {
		return m.InstanceType
	}
	return nil
}

func (m *OSInfo) GetDefaultSecurityGroups() []string {
	if m != nil {
		return m.DefaultSecurityGroups
	}
	return nil
}

func (m *OSInfo) GetRegions() map[string]string {
	if m != nil {
		return m.Regions
	}
	return nil
}

type Cloud struct {
	CloudID              string                  `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	Name                 string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Editable             bool                    `protobuf:"varint,3,opt,name=editable,proto3" json:"editable,omitempty"`
	OpsPlugins           map[string]*BKOpsPlugin `protobuf:"bytes,4,rep,name=opsPlugins,proto3" json:"opsPlugins,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ExtraPlugins         map[string]*BKOpsPlugin `protobuf:"bytes,5,rep,name=extraPlugins,proto3" json:"extraPlugins,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CloudCredential      *Credential             `protobuf:"bytes,6,opt,name=cloudCredential,proto3" json:"cloudCredential,omitempty"`
	OsManagement         *OSInfo                 `protobuf:"bytes,7,opt,name=osManagement,proto3" json:"osManagement,omitempty"`
	ClusterManagement    *ClusterMgr             `protobuf:"bytes,8,opt,name=clusterManagement,proto3" json:"clusterManagement,omitempty"`
	NodeGroupManagement  *NodeGroupMgr           `protobuf:"bytes,10,opt,name=nodeGroupManagement,proto3" json:"nodeGroupManagement,omitempty"`
	Creator              string                  `protobuf:"bytes,11,opt,name=creator,proto3" json:"creator,omitempty"`
	Updater              string                  `protobuf:"bytes,12,opt,name=updater,proto3" json:"updater,omitempty"`
	CreatTime            string                  `protobuf:"bytes,13,opt,name=creatTime,proto3" json:"creatTime,omitempty"`
	UpdateTime           string                  `protobuf:"bytes,14,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	CloudProvider        string                  `protobuf:"bytes,15,opt,name=cloudProvider,proto3" json:"cloudProvider,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-" bson:"-"`
	XXX_unrecognized     []byte                  `json:"-" bson:"-"`
	XXX_sizecache        int32                   `json:"-" bson:"-"`
}

func (m *Cloud) Reset()         { *m = Cloud{} }
func (m *Cloud) String() string { return proto.CompactTextString(m) }
func (*Cloud) ProtoMessage()    {}
func (*Cloud) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{15}
}

func (m *Cloud) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cloud.Unmarshal(m, b)
}
func (m *Cloud) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cloud.Marshal(b, m, deterministic)
}
func (m *Cloud) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cloud.Merge(m, src)
}
func (m *Cloud) XXX_Size() int {
	return xxx_messageInfo_Cloud.Size(m)
}
func (m *Cloud) XXX_DiscardUnknown() {
	xxx_messageInfo_Cloud.DiscardUnknown(m)
}

var xxx_messageInfo_Cloud proto.InternalMessageInfo

func (m *Cloud) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *Cloud) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Cloud) GetEditable() bool {
	if m != nil {
		return m.Editable
	}
	return false
}

func (m *Cloud) GetOpsPlugins() map[string]*BKOpsPlugin {
	if m != nil {
		return m.OpsPlugins
	}
	return nil
}

func (m *Cloud) GetExtraPlugins() map[string]*BKOpsPlugin {
	if m != nil {
		return m.ExtraPlugins
	}
	return nil
}

func (m *Cloud) GetCloudCredential() *Credential {
	if m != nil {
		return m.CloudCredential
	}
	return nil
}

func (m *Cloud) GetOsManagement() *OSInfo {
	if m != nil {
		return m.OsManagement
	}
	return nil
}

func (m *Cloud) GetClusterManagement() *ClusterMgr {
	if m != nil {
		return m.ClusterManagement
	}
	return nil
}

func (m *Cloud) GetNodeGroupManagement() *NodeGroupMgr {
	if m != nil {
		return m.NodeGroupManagement
	}
	return nil
}

func (m *Cloud) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Cloud) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *Cloud) GetCreatTime() string {
	if m != nil {
		return m.CreatTime
	}
	return ""
}

func (m *Cloud) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *Cloud) GetCloudProvider() string {
	if m != nil {
		return m.CloudProvider
	}
	return ""
}

// NodeGroup pool for kubernetes cluster-autoscaling
type NodeGroup struct {
	NodeGroupID          string               `protobuf:"bytes,1,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ClusterID            string               `protobuf:"bytes,3,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Region               string               `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	EnableAutoscale      bool                 `protobuf:"varint,5,opt,name=enableAutoscale,proto3" json:"enableAutoscale,omitempty"`
	AutoScaling          *AutoScalingGroup    `protobuf:"bytes,6,opt,name=autoScaling,proto3" json:"autoScaling,omitempty"`
	LaunchTemplate       *LaunchConfiguration `protobuf:"bytes,7,opt,name=launchTemplate,proto3" json:"launchTemplate,omitempty"`
	Labels               map[string]string    `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Taints               map[string]string    `protobuf:"bytes,9,rep,name=taints,proto3" json:"taints,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NodeOS               string               `protobuf:"bytes,10,opt,name=nodeOS,proto3" json:"nodeOS,omitempty"`
	Creator              string               `protobuf:"bytes,11,opt,name=creator,proto3" json:"creator,omitempty"`
	Updater              string               `protobuf:"bytes,12,opt,name=updater,proto3" json:"updater,omitempty"`
	CreateTime           string               `protobuf:"bytes,13,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string               `protobuf:"bytes,14,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	ProjectID            string               `protobuf:"bytes,15,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Provider             string               `protobuf:"bytes,16,opt,name=provider,proto3" json:"provider,omitempty"`
	Status               string               `protobuf:"bytes,17,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *NodeGroup) Reset()         { *m = NodeGroup{} }
func (m *NodeGroup) String() string { return proto.CompactTextString(m) }
func (*NodeGroup) ProtoMessage()    {}
func (*NodeGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{16}
}

func (m *NodeGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeGroup.Unmarshal(m, b)
}
func (m *NodeGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeGroup.Marshal(b, m, deterministic)
}
func (m *NodeGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeGroup.Merge(m, src)
}
func (m *NodeGroup) XXX_Size() int {
	return xxx_messageInfo_NodeGroup.Size(m)
}
func (m *NodeGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeGroup.DiscardUnknown(m)
}

var xxx_messageInfo_NodeGroup proto.InternalMessageInfo

func (m *NodeGroup) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *NodeGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NodeGroup) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *NodeGroup) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *NodeGroup) GetEnableAutoscale() bool {
	if m != nil {
		return m.EnableAutoscale
	}
	return false
}

func (m *NodeGroup) GetAutoScaling() *AutoScalingGroup {
	if m != nil {
		return m.AutoScaling
	}
	return nil
}

func (m *NodeGroup) GetLaunchTemplate() *LaunchConfiguration {
	if m != nil {
		return m.LaunchTemplate
	}
	return nil
}

func (m *NodeGroup) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *NodeGroup) GetTaints() map[string]string {
	if m != nil {
		return m.Taints
	}
	return nil
}

func (m *NodeGroup) GetNodeOS() string {
	if m != nil {
		return m.NodeOS
	}
	return ""
}

func (m *NodeGroup) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *NodeGroup) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *NodeGroup) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *NodeGroup) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *NodeGroup) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *NodeGroup) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *NodeGroup) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// AutoScalingGroup define auto scaling information
type AutoScalingGroup struct {
	AutoScalingID         string   `protobuf:"bytes,1,opt,name=autoScalingID,proto3" json:"autoScalingID,omitempty"`
	AutoScalingName       string   `protobuf:"bytes,2,opt,name=autoScalingName,proto3" json:"autoScalingName,omitempty"`
	MinSize               uint32   `protobuf:"varint,3,opt,name=minSize,proto3" json:"minSize,omitempty"`
	MaxSize               uint32   `protobuf:"varint,4,opt,name=maxSize,proto3" json:"maxSize,omitempty"`
	DesiredSize           uint32   `protobuf:"varint,5,opt,name=desiredSize,proto3" json:"desiredSize,omitempty"`
	VpcID                 string   `protobuf:"bytes,6,opt,name=vpcID,proto3" json:"vpcID,omitempty"`
	DefaultCooldown       uint32   `protobuf:"varint,7,opt,name=defaultCooldown,proto3" json:"defaultCooldown,omitempty"`
	SubnetIDs             []string `protobuf:"bytes,8,rep,name=subnetIDs,proto3" json:"subnetIDs,omitempty"`
	Zones                 []string `protobuf:"bytes,9,rep,name=zones,proto3" json:"zones,omitempty"`
	RetryPolicy           string   `protobuf:"bytes,10,opt,name=retryPolicy,proto3" json:"retryPolicy,omitempty"`
	MultiZoneSubnetPolicy string   `protobuf:"bytes,11,opt,name=multiZoneSubnetPolicy,proto3" json:"multiZoneSubnetPolicy,omitempty"`
	ReplaceUnhealthy      bool     `protobuf:"varint,12,opt,name=replaceUnhealthy,proto3" json:"replaceUnhealthy,omitempty"`
	ScalingMode           string   `protobuf:"bytes,13,opt,name=scalingMode,proto3" json:"scalingMode,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-" bson:"-"`
	XXX_unrecognized      []byte   `json:"-" bson:"-"`
	XXX_sizecache         int32    `json:"-" bson:"-"`
}

func (m *AutoScalingGroup) Reset()         { *m = AutoScalingGroup{} }
func (m *AutoScalingGroup) String() string { return proto.CompactTextString(m) }
func (*AutoScalingGroup) ProtoMessage()    {}
func (*AutoScalingGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{17}
}

func (m *AutoScalingGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AutoScalingGroup.Unmarshal(m, b)
}
func (m *AutoScalingGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AutoScalingGroup.Marshal(b, m, deterministic)
}
func (m *AutoScalingGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutoScalingGroup.Merge(m, src)
}
func (m *AutoScalingGroup) XXX_Size() int {
	return xxx_messageInfo_AutoScalingGroup.Size(m)
}
func (m *AutoScalingGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_AutoScalingGroup.DiscardUnknown(m)
}

var xxx_messageInfo_AutoScalingGroup proto.InternalMessageInfo

func (m *AutoScalingGroup) GetAutoScalingID() string {
	if m != nil {
		return m.AutoScalingID
	}
	return ""
}

func (m *AutoScalingGroup) GetAutoScalingName() string {
	if m != nil {
		return m.AutoScalingName
	}
	return ""
}

func (m *AutoScalingGroup) GetMinSize() uint32 {
	if m != nil {
		return m.MinSize
	}
	return 0
}

func (m *AutoScalingGroup) GetMaxSize() uint32 {
	if m != nil {
		return m.MaxSize
	}
	return 0
}

func (m *AutoScalingGroup) GetDesiredSize() uint32 {
	if m != nil {
		return m.DesiredSize
	}
	return 0
}

func (m *AutoScalingGroup) GetVpcID() string {
	if m != nil {
		return m.VpcID
	}
	return ""
}

func (m *AutoScalingGroup) GetDefaultCooldown() uint32 {
	if m != nil {
		return m.DefaultCooldown
	}
	return 0
}

func (m *AutoScalingGroup) GetSubnetIDs() []string {
	if m != nil {
		return m.SubnetIDs
	}
	return nil
}

func (m *AutoScalingGroup) GetZones() []string {
	if m != nil {
		return m.Zones
	}
	return nil
}

func (m *AutoScalingGroup) GetRetryPolicy() string {
	if m != nil {
		return m.RetryPolicy
	}
	return ""
}

func (m *AutoScalingGroup) GetMultiZoneSubnetPolicy() string {
	if m != nil {
		return m.MultiZoneSubnetPolicy
	}
	return ""
}

func (m *AutoScalingGroup) GetReplaceUnhealthy() bool {
	if m != nil {
		return m.ReplaceUnhealthy
	}
	return false
}

func (m *AutoScalingGroup) GetScalingMode() string {
	if m != nil {
		return m.ScalingMode
	}
	return ""
}

// DataDisk 数据盘定义
type DataDisk struct {
	DiskType             string   `protobuf:"bytes,1,opt,name=diskType,proto3" json:"diskType,omitempty"`
	DiskSize             string   `protobuf:"bytes,2,opt,name=diskSize,proto3" json:"diskSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DataDisk) Reset()         { *m = DataDisk{} }
func (m *DataDisk) String() string { return proto.CompactTextString(m) }
func (*DataDisk) ProtoMessage()    {}
func (*DataDisk) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{18}
}

func (m *DataDisk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataDisk.Unmarshal(m, b)
}
func (m *DataDisk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataDisk.Marshal(b, m, deterministic)
}
func (m *DataDisk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataDisk.Merge(m, src)
}
func (m *DataDisk) XXX_Size() int {
	return xxx_messageInfo_DataDisk.Size(m)
}
func (m *DataDisk) XXX_DiscardUnknown() {
	xxx_messageInfo_DataDisk.DiscardUnknown(m)
}

var xxx_messageInfo_DataDisk proto.InternalMessageInfo

func (m *DataDisk) GetDiskType() string {
	if m != nil {
		return m.DiskType
	}
	return ""
}

func (m *DataDisk) GetDiskSize() string {
	if m != nil {
		return m.DiskSize
	}
	return ""
}

// InternetAccessible 公网带宽设置
type InternetAccessible struct {
	InternetChargeType   string   `protobuf:"bytes,1,opt,name=internetChargeType,proto3" json:"internetChargeType,omitempty"`
	InternetMaxBandwidth string   `protobuf:"bytes,2,opt,name=internetMaxBandwidth,proto3" json:"internetMaxBandwidth,omitempty"`
	PublicIPAssigned     bool     `protobuf:"varint,3,opt,name=publicIPAssigned,proto3" json:"publicIPAssigned,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *InternetAccessible) Reset()         { *m = InternetAccessible{} }
func (m *InternetAccessible) String() string { return proto.CompactTextString(m) }
func (*InternetAccessible) ProtoMessage()    {}
func (*InternetAccessible) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{19}
}

func (m *InternetAccessible) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternetAccessible.Unmarshal(m, b)
}
func (m *InternetAccessible) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternetAccessible.Marshal(b, m, deterministic)
}
func (m *InternetAccessible) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternetAccessible.Merge(m, src)
}
func (m *InternetAccessible) XXX_Size() int {
	return xxx_messageInfo_InternetAccessible.Size(m)
}
func (m *InternetAccessible) XXX_DiscardUnknown() {
	xxx_messageInfo_InternetAccessible.DiscardUnknown(m)
}

var xxx_messageInfo_InternetAccessible proto.InternalMessageInfo

func (m *InternetAccessible) GetInternetChargeType() string {
	if m != nil {
		return m.InternetChargeType
	}
	return ""
}

func (m *InternetAccessible) GetInternetMaxBandwidth() string {
	if m != nil {
		return m.InternetMaxBandwidth
	}
	return ""
}

func (m *InternetAccessible) GetPublicIPAssigned() bool {
	if m != nil {
		return m.PublicIPAssigned
	}
	return false
}

//LaunchConfigure template for scaling node
type LaunchConfiguration struct {
	LaunchConfigurationID string              `protobuf:"bytes,1,opt,name=launchConfigurationID,proto3" json:"launchConfigurationID,omitempty"`
	LaunchConfigureName   string              `protobuf:"bytes,2,opt,name=launchConfigureName,proto3" json:"launchConfigureName,omitempty"`
	ProjectID             string              `protobuf:"bytes,3,opt,name=projectID,proto3" json:"projectID,omitempty"`
	CPU                   uint32              `protobuf:"varint,4,opt,name=CPU,proto3" json:"CPU,omitempty"`
	Mem                   uint32              `protobuf:"varint,5,opt,name=Mem,proto3" json:"Mem,omitempty"`
	GPU                   uint32              `protobuf:"varint,6,opt,name=GPU,proto3" json:"GPU,omitempty"`
	InstanceType          string              `protobuf:"bytes,7,opt,name=instanceType,proto3" json:"instanceType,omitempty"`
	InstanceChargeType    string              `protobuf:"bytes,8,opt,name=instanceChargeType,proto3" json:"instanceChargeType,omitempty"`
	SystemDisk            *DataDisk           `protobuf:"bytes,9,opt,name=systemDisk,proto3" json:"systemDisk,omitempty"`
	DataDisks             []*DataDisk         `protobuf:"bytes,10,rep,name=dataDisks,proto3" json:"dataDisks,omitempty"`
	InternetAccess        *InternetAccessible `protobuf:"bytes,11,opt,name=internetAccess,proto3" json:"internetAccess,omitempty"`
	InitLoginPassword     string              `protobuf:"bytes,12,opt,name=initLoginPassword,proto3" json:"initLoginPassword,omitempty"`
	SecurityGroupIDs      []string            `protobuf:"bytes,13,rep,name=securityGroupIDs,proto3" json:"securityGroupIDs,omitempty"`
	ImageInfo             *ImageInfo          `protobuf:"bytes,14,opt,name=imageInfo,proto3" json:"imageInfo,omitempty"`
	IsSecurityService     bool                `protobuf:"varint,15,opt,name=isSecurityService,proto3" json:"isSecurityService,omitempty"`
	IsMonitorService      bool                `protobuf:"varint,16,opt,name=isMonitorService,proto3" json:"isMonitorService,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}            `json:"-" bson:"-"`
	XXX_unrecognized      []byte              `json:"-" bson:"-"`
	XXX_sizecache         int32               `json:"-" bson:"-"`
}

func (m *LaunchConfiguration) Reset()         { *m = LaunchConfiguration{} }
func (m *LaunchConfiguration) String() string { return proto.CompactTextString(m) }
func (*LaunchConfiguration) ProtoMessage()    {}
func (*LaunchConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{20}
}

func (m *LaunchConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LaunchConfiguration.Unmarshal(m, b)
}
func (m *LaunchConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LaunchConfiguration.Marshal(b, m, deterministic)
}
func (m *LaunchConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LaunchConfiguration.Merge(m, src)
}
func (m *LaunchConfiguration) XXX_Size() int {
	return xxx_messageInfo_LaunchConfiguration.Size(m)
}
func (m *LaunchConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_LaunchConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_LaunchConfiguration proto.InternalMessageInfo

func (m *LaunchConfiguration) GetLaunchConfigurationID() string {
	if m != nil {
		return m.LaunchConfigurationID
	}
	return ""
}

func (m *LaunchConfiguration) GetLaunchConfigureName() string {
	if m != nil {
		return m.LaunchConfigureName
	}
	return ""
}

func (m *LaunchConfiguration) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *LaunchConfiguration) GetCPU() uint32 {
	if m != nil {
		return m.CPU
	}
	return 0
}

func (m *LaunchConfiguration) GetMem() uint32 {
	if m != nil {
		return m.Mem
	}
	return 0
}

func (m *LaunchConfiguration) GetGPU() uint32 {
	if m != nil {
		return m.GPU
	}
	return 0
}

func (m *LaunchConfiguration) GetInstanceType() string {
	if m != nil {
		return m.InstanceType
	}
	return ""
}

func (m *LaunchConfiguration) GetInstanceChargeType() string {
	if m != nil {
		return m.InstanceChargeType
	}
	return ""
}

func (m *LaunchConfiguration) GetSystemDisk() *DataDisk {
	if m != nil {
		return m.SystemDisk
	}
	return nil
}

func (m *LaunchConfiguration) GetDataDisks() []*DataDisk {
	if m != nil {
		return m.DataDisks
	}
	return nil
}

func (m *LaunchConfiguration) GetInternetAccess() *InternetAccessible {
	if m != nil {
		return m.InternetAccess
	}
	return nil
}

func (m *LaunchConfiguration) GetInitLoginPassword() string {
	if m != nil {
		return m.InitLoginPassword
	}
	return ""
}

func (m *LaunchConfiguration) GetSecurityGroupIDs() []string {
	if m != nil {
		return m.SecurityGroupIDs
	}
	return nil
}

func (m *LaunchConfiguration) GetImageInfo() *ImageInfo {
	if m != nil {
		return m.ImageInfo
	}
	return nil
}

func (m *LaunchConfiguration) GetIsSecurityService() bool {
	if m != nil {
		return m.IsSecurityService
	}
	return false
}

func (m *LaunchConfiguration) GetIsMonitorService() bool {
	if m != nil {
		return m.IsMonitorService
	}
	return false
}

// ImageInfo 创建cvm实例的镜像信息
type ImageInfo struct {
	ImageID              string   `protobuf:"bytes,1,opt,name=imageID,proto3" json:"imageID,omitempty"`
	ImageName            string   `protobuf:"bytes,2,opt,name=imageName,proto3" json:"imageName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ImageInfo) Reset()         { *m = ImageInfo{} }
func (m *ImageInfo) String() string { return proto.CompactTextString(m) }
func (*ImageInfo) ProtoMessage()    {}
func (*ImageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{21}
}

func (m *ImageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageInfo.Unmarshal(m, b)
}
func (m *ImageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageInfo.Marshal(b, m, deterministic)
}
func (m *ImageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageInfo.Merge(m, src)
}
func (m *ImageInfo) XXX_Size() int {
	return xxx_messageInfo_ImageInfo.Size(m)
}
func (m *ImageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ImageInfo proto.InternalMessageInfo

func (m *ImageInfo) GetImageID() string {
	if m != nil {
		return m.ImageID
	}
	return ""
}

func (m *ImageInfo) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

// ClusterAutoScalingOption CA所使用的参数，一个集群仅有一份
type ClusterAutoScalingOption struct {
	IsScaleDwonEnable             bool     `protobuf:"varint,1,opt,name=isScaleDwonEnable,proto3" json:"isScaleDwonEnable,omitempty"`
	Expander                      string   `protobuf:"bytes,2,opt,name=expander,proto3" json:"expander,omitempty"`
	MaxEmptyBulkDelete            uint32   `protobuf:"varint,3,opt,name=maxEmptyBulkDelete,proto3" json:"maxEmptyBulkDelete,omitempty"`
	ScaleDownDelay                uint32   `protobuf:"varint,4,opt,name=scaleDownDelay,proto3" json:"scaleDownDelay,omitempty"`
	ScaleDownUnneededTime         uint32   `protobuf:"varint,5,opt,name=scaleDownUnneededTime,proto3" json:"scaleDownUnneededTime,omitempty"`
	ScaleDownUtilizationThreahold uint32   `protobuf:"varint,6,opt,name=scaleDownUtilizationThreahold,proto3" json:"scaleDownUtilizationThreahold,omitempty"`
	SkipNodesWithLocalStorage     bool     `protobuf:"varint,7,opt,name=skipNodesWithLocalStorage,proto3" json:"skipNodesWithLocalStorage,omitempty"`
	SkipNodesWithSystemPods       bool     `protobuf:"varint,8,opt,name=skipNodesWithSystemPods,proto3" json:"skipNodesWithSystemPods,omitempty"`
	IgnoreDaemonSetsUtilization   bool     `protobuf:"varint,9,opt,name=ignoreDaemonSetsUtilization,proto3" json:"ignoreDaemonSetsUtilization,omitempty"`
	OkTotalUnreadyCount           uint32   `protobuf:"varint,10,opt,name=okTotalUnreadyCount,proto3" json:"okTotalUnreadyCount,omitempty"`
	MaxTotalUnreadyPercentage     uint32   `protobuf:"varint,11,opt,name=maxTotalUnreadyPercentage,proto3" json:"maxTotalUnreadyPercentage,omitempty"`
	ScaleDownUnreadyTime          uint32   `protobuf:"varint,12,opt,name=scaleDownUnreadyTime,proto3" json:"scaleDownUnreadyTime,omitempty"`
	UnregisteredNodeRemovalTime   uint32   `protobuf:"varint,13,opt,name=unregisteredNodeRemovalTime,proto3" json:"unregisteredNodeRemovalTime,omitempty"`
	ProjectID                     string   `protobuf:"bytes,14,opt,name=projectID,proto3" json:"projectID,omitempty"`
	ClusterID                     string   `protobuf:"bytes,15,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Creator                       string   `protobuf:"bytes,16,opt,name=creator,proto3" json:"creator,omitempty"`
	CreateTime                    string   `protobuf:"bytes,17,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Updater                       string   `protobuf:"bytes,18,opt,name=updater,proto3" json:"updater,omitempty"`
	UpdateTime                    string   `protobuf:"bytes,19,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	Provider                      string   `protobuf:"bytes,20,opt,name=provider,proto3" json:"provider,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-" bson:"-"`
	XXX_unrecognized              []byte   `json:"-" bson:"-"`
	XXX_sizecache                 int32    `json:"-" bson:"-"`
}

func (m *ClusterAutoScalingOption) Reset()         { *m = ClusterAutoScalingOption{} }
func (m *ClusterAutoScalingOption) String() string { return proto.CompactTextString(m) }
func (*ClusterAutoScalingOption) ProtoMessage()    {}
func (*ClusterAutoScalingOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{22}
}

func (m *ClusterAutoScalingOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterAutoScalingOption.Unmarshal(m, b)
}
func (m *ClusterAutoScalingOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterAutoScalingOption.Marshal(b, m, deterministic)
}
func (m *ClusterAutoScalingOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterAutoScalingOption.Merge(m, src)
}
func (m *ClusterAutoScalingOption) XXX_Size() int {
	return xxx_messageInfo_ClusterAutoScalingOption.Size(m)
}
func (m *ClusterAutoScalingOption) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterAutoScalingOption.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterAutoScalingOption proto.InternalMessageInfo

func (m *ClusterAutoScalingOption) GetIsScaleDwonEnable() bool {
	if m != nil {
		return m.IsScaleDwonEnable
	}
	return false
}

func (m *ClusterAutoScalingOption) GetExpander() string {
	if m != nil {
		return m.Expander
	}
	return ""
}

func (m *ClusterAutoScalingOption) GetMaxEmptyBulkDelete() uint32 {
	if m != nil {
		return m.MaxEmptyBulkDelete
	}
	return 0
}

func (m *ClusterAutoScalingOption) GetScaleDownDelay() uint32 {
	if m != nil {
		return m.ScaleDownDelay
	}
	return 0
}

func (m *ClusterAutoScalingOption) GetScaleDownUnneededTime() uint32 {
	if m != nil {
		return m.ScaleDownUnneededTime
	}
	return 0
}

func (m *ClusterAutoScalingOption) GetScaleDownUtilizationThreahold() uint32 {
	if m != nil {
		return m.ScaleDownUtilizationThreahold
	}
	return 0
}

func (m *ClusterAutoScalingOption) GetSkipNodesWithLocalStorage() bool {
	if m != nil {
		return m.SkipNodesWithLocalStorage
	}
	return false
}

func (m *ClusterAutoScalingOption) GetSkipNodesWithSystemPods() bool {
	if m != nil {
		return m.SkipNodesWithSystemPods
	}
	return false
}

func (m *ClusterAutoScalingOption) GetIgnoreDaemonSetsUtilization() bool {
	if m != nil {
		return m.IgnoreDaemonSetsUtilization
	}
	return false
}

func (m *ClusterAutoScalingOption) GetOkTotalUnreadyCount() uint32 {
	if m != nil {
		return m.OkTotalUnreadyCount
	}
	return 0
}

func (m *ClusterAutoScalingOption) GetMaxTotalUnreadyPercentage() uint32 {
	if m != nil {
		return m.MaxTotalUnreadyPercentage
	}
	return 0
}

func (m *ClusterAutoScalingOption) GetScaleDownUnreadyTime() uint32 {
	if m != nil {
		return m.ScaleDownUnreadyTime
	}
	return 0
}

func (m *ClusterAutoScalingOption) GetUnregisteredNodeRemovalTime() uint32 {
	if m != nil {
		return m.UnregisteredNodeRemovalTime
	}
	return 0
}

func (m *ClusterAutoScalingOption) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *ClusterAutoScalingOption) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ClusterAutoScalingOption) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *ClusterAutoScalingOption) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *ClusterAutoScalingOption) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *ClusterAutoScalingOption) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *ClusterAutoScalingOption) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

type Project struct {
	ProjectID            string                 `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Name                 string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	EnglishName          string                 `protobuf:"bytes,3,opt,name=englishName,proto3" json:"englishName,omitempty"`
	Creator              string                 `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`
	Updater              string                 `protobuf:"bytes,5,opt,name=updater,proto3" json:"updater,omitempty"`
	ProjectType          uint32                 `protobuf:"varint,6,opt,name=projectType,proto3" json:"projectType,omitempty"`
	UseBKRes             bool                   `protobuf:"varint,7,opt,name=useBKRes,proto3" json:"useBKRes,omitempty"`
	Description          string                 `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	IsOffline            bool                   `protobuf:"varint,9,opt,name=isOffline,proto3" json:"isOffline,omitempty"`
	Kind                 string                 `protobuf:"bytes,10,opt,name=kind,proto3" json:"kind,omitempty"`
	BusinessID           string                 `protobuf:"bytes,11,opt,name=businessID,proto3" json:"businessID,omitempty"`
	DeployType           uint32                 `protobuf:"varint,12,opt,name=deployType,proto3" json:"deployType,omitempty"`
	BgID                 string                 `protobuf:"bytes,13,opt,name=bgID,proto3" json:"bgID,omitempty"`
	BgName               string                 `protobuf:"bytes,14,opt,name=bgName,proto3" json:"bgName,omitempty"`
	DeptID               string                 `protobuf:"bytes,15,opt,name=deptID,proto3" json:"deptID,omitempty"`
	DeptName             string                 `protobuf:"bytes,16,opt,name=deptName,proto3" json:"deptName,omitempty"`
	CenterID             string                 `protobuf:"bytes,17,opt,name=centerID,proto3" json:"centerID,omitempty"`
	CenterName           string                 `protobuf:"bytes,18,opt,name=centerName,proto3" json:"centerName,omitempty"`
	IsSecret             bool                   `protobuf:"varint,19,opt,name=isSecret,proto3" json:"isSecret,omitempty"`
	Credentials          map[string]*Credential `protobuf:"bytes,20,rep,name=credentials,proto3" json:"credentials,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreatTime            string                 `protobuf:"bytes,21,opt,name=creatTime,proto3" json:"creatTime,omitempty"`
	UpdateTime           string                 `protobuf:"bytes,22,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-" bson:"-"`
	XXX_unrecognized     []byte                 `json:"-" bson:"-"`
	XXX_sizecache        int32                  `json:"-" bson:"-"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()    {}
func (*Project) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{23}
}

func (m *Project) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Project.Unmarshal(m, b)
}
func (m *Project) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Project.Marshal(b, m, deterministic)
}
func (m *Project) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Project.Merge(m, src)
}
func (m *Project) XXX_Size() int {
	return xxx_messageInfo_Project.Size(m)
}
func (m *Project) XXX_DiscardUnknown() {
	xxx_messageInfo_Project.DiscardUnknown(m)
}

var xxx_messageInfo_Project proto.InternalMessageInfo

func (m *Project) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *Project) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Project) GetEnglishName() string {
	if m != nil {
		return m.EnglishName
	}
	return ""
}

func (m *Project) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Project) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *Project) GetProjectType() uint32 {
	if m != nil {
		return m.ProjectType
	}
	return 0
}

func (m *Project) GetUseBKRes() bool {
	if m != nil {
		return m.UseBKRes
	}
	return false
}

func (m *Project) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Project) GetIsOffline() bool {
	if m != nil {
		return m.IsOffline
	}
	return false
}

func (m *Project) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Project) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *Project) GetDeployType() uint32 {
	if m != nil {
		return m.DeployType
	}
	return 0
}

func (m *Project) GetBgID() string {
	if m != nil {
		return m.BgID
	}
	return ""
}

func (m *Project) GetBgName() string {
	if m != nil {
		return m.BgName
	}
	return ""
}

func (m *Project) GetDeptID() string {
	if m != nil {
		return m.DeptID
	}
	return ""
}

func (m *Project) GetDeptName() string {
	if m != nil {
		return m.DeptName
	}
	return ""
}

func (m *Project) GetCenterID() string {
	if m != nil {
		return m.CenterID
	}
	return ""
}

func (m *Project) GetCenterName() string {
	if m != nil {
		return m.CenterName
	}
	return ""
}

func (m *Project) GetIsSecret() bool {
	if m != nil {
		return m.IsSecret
	}
	return false
}

func (m *Project) GetCredentials() map[string]*Credential {
	if m != nil {
		return m.Credentials
	}
	return nil
}

func (m *Project) GetCreatTime() string {
	if m != nil {
		return m.CreatTime
	}
	return ""
}

func (m *Project) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

type Task struct {
	TaskID               string            `protobuf:"bytes,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	TaskType             string            `protobuf:"bytes,2,opt,name=taskType,proto3" json:"taskType,omitempty"`
	Status               string            `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Message              string            `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Start                string            `protobuf:"bytes,5,opt,name=start,proto3" json:"start,omitempty"`
	End                  string            `protobuf:"bytes,6,opt,name=end,proto3" json:"end,omitempty"`
	ExecutionTime        uint32            `protobuf:"varint,7,opt,name=executionTime,proto3" json:"executionTime,omitempty"`
	CurrentStep          string            `protobuf:"bytes,8,opt,name=currentStep,proto3" json:"currentStep,omitempty"`
	StepSequence         []string          `protobuf:"bytes,9,rep,name=stepSequence,proto3" json:"stepSequence,omitempty"`
	Steps                map[string]*Step  `protobuf:"bytes,10,rep,name=steps,proto3" json:"steps,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ClusterID            string            `protobuf:"bytes,11,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ProjectID            string            `protobuf:"bytes,12,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Creator              string            `protobuf:"bytes,13,opt,name=creator,proto3" json:"creator,omitempty"`
	LastUpdate           string            `protobuf:"bytes,14,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	Updater              string            `protobuf:"bytes,15,opt,name=updater,proto3" json:"updater,omitempty"`
	ForceTerminate       bool              `protobuf:"varint,16,opt,name=forceTerminate,proto3" json:"forceTerminate,omitempty"`
	CommonParams         map[string]string `protobuf:"bytes,17,rep,name=commonParams,proto3" json:"commonParams,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{24}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetTaskID() string {
	if m != nil {
		return m.TaskID
	}
	return ""
}

func (m *Task) GetTaskType() string {
	if m != nil {
		return m.TaskType
	}
	return ""
}

func (m *Task) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Task) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Task) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *Task) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

func (m *Task) GetExecutionTime() uint32 {
	if m != nil {
		return m.ExecutionTime
	}
	return 0
}

func (m *Task) GetCurrentStep() string {
	if m != nil {
		return m.CurrentStep
	}
	return ""
}

func (m *Task) GetStepSequence() []string {
	if m != nil {
		return m.StepSequence
	}
	return nil
}

func (m *Task) GetSteps() map[string]*Step {
	if m != nil {
		return m.Steps
	}
	return nil
}

func (m *Task) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *Task) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *Task) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Task) GetLastUpdate() string {
	if m != nil {
		return m.LastUpdate
	}
	return ""
}

func (m *Task) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *Task) GetForceTerminate() bool {
	if m != nil {
		return m.ForceTerminate
	}
	return false
}

func (m *Task) GetCommonParams() map[string]string {
	if m != nil {
		return m.CommonParams
	}
	return nil
}

type Step struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	System               string            `protobuf:"bytes,2,opt,name=system,proto3" json:"system,omitempty"`
	Link                 string            `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	Params               map[string]string `protobuf:"bytes,4,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Retry                uint32            `protobuf:"varint,5,opt,name=retry,proto3" json:"retry,omitempty"`
	Start                string            `protobuf:"bytes,6,opt,name=start,proto3" json:"start,omitempty"`
	End                  string            `protobuf:"bytes,7,opt,name=end,proto3" json:"end,omitempty"`
	ExecutionTime        uint32            `protobuf:"varint,8,opt,name=executionTime,proto3" json:"executionTime,omitempty"`
	Status               string            `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	Message              string            `protobuf:"bytes,10,opt,name=message,proto3" json:"message,omitempty"`
	LastUpdate           string            `protobuf:"bytes,11,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	TaskMethod           string            `protobuf:"bytes,12,opt,name=taskMethod,proto3" json:"taskMethod,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *Step) Reset()         { *m = Step{} }
func (m *Step) String() string { return proto.CompactTextString(m) }
func (*Step) ProtoMessage()    {}
func (*Step) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{25}
}

func (m *Step) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Step.Unmarshal(m, b)
}
func (m *Step) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Step.Marshal(b, m, deterministic)
}
func (m *Step) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Step.Merge(m, src)
}
func (m *Step) XXX_Size() int {
	return xxx_messageInfo_Step.Size(m)
}
func (m *Step) XXX_DiscardUnknown() {
	xxx_messageInfo_Step.DiscardUnknown(m)
}

var xxx_messageInfo_Step proto.InternalMessageInfo

func (m *Step) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Step) GetSystem() string {
	if m != nil {
		return m.System
	}
	return ""
}

func (m *Step) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *Step) GetParams() map[string]string {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *Step) GetRetry() uint32 {
	if m != nil {
		return m.Retry
	}
	return 0
}

func (m *Step) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *Step) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

func (m *Step) GetExecutionTime() uint32 {
	if m != nil {
		return m.ExecutionTime
	}
	return 0
}

func (m *Step) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Step) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Step) GetLastUpdate() string {
	if m != nil {
		return m.LastUpdate
	}
	return ""
}

func (m *Step) GetTaskMethod() string {
	if m != nil {
		return m.TaskMethod
	}
	return ""
}

type TkeCidr struct {
	VPC                  string   `protobuf:"bytes,1,opt,name=VPC,proto3" json:"VPC,omitempty"`
	CIDR                 string   `protobuf:"bytes,2,opt,name=CIDR,proto3" json:"CIDR,omitempty"`
	IPNumber             uint32   `protobuf:"varint,3,opt,name=IPNumber,proto3" json:"IPNumber,omitempty"`
	Status               string   `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Cluster              string   `protobuf:"bytes,5,opt,name=cluster,proto3" json:"cluster,omitempty"`
	CreateTime           string   `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string   `protobuf:"bytes,7,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *TkeCidr) Reset()         { *m = TkeCidr{} }
func (m *TkeCidr) String() string { return proto.CompactTextString(m) }
func (*TkeCidr) ProtoMessage()    {}
func (*TkeCidr) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{26}
}

func (m *TkeCidr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TkeCidr.Unmarshal(m, b)
}
func (m *TkeCidr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TkeCidr.Marshal(b, m, deterministic)
}
func (m *TkeCidr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TkeCidr.Merge(m, src)
}
func (m *TkeCidr) XXX_Size() int {
	return xxx_messageInfo_TkeCidr.Size(m)
}
func (m *TkeCidr) XXX_DiscardUnknown() {
	xxx_messageInfo_TkeCidr.DiscardUnknown(m)
}

var xxx_messageInfo_TkeCidr proto.InternalMessageInfo

func (m *TkeCidr) GetVPC() string {
	if m != nil {
		return m.VPC
	}
	return ""
}

func (m *TkeCidr) GetCIDR() string {
	if m != nil {
		return m.CIDR
	}
	return ""
}

func (m *TkeCidr) GetIPNumber() uint32 {
	if m != nil {
		return m.IPNumber
	}
	return 0
}

func (m *TkeCidr) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TkeCidr) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *TkeCidr) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *TkeCidr) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

type TkeCidrCount struct {
	Count                uint32   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	VPC                  string   `protobuf:"bytes,2,opt,name=VPC,proto3" json:"VPC,omitempty"`
	IPNumber             uint32   `protobuf:"varint,3,opt,name=IPNumber,proto3" json:"IPNumber,omitempty"`
	Status               string   `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *TkeCidrCount) Reset()         { *m = TkeCidrCount{} }
func (m *TkeCidrCount) String() string { return proto.CompactTextString(m) }
func (*TkeCidrCount) ProtoMessage()    {}
func (*TkeCidrCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{27}
}

func (m *TkeCidrCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TkeCidrCount.Unmarshal(m, b)
}
func (m *TkeCidrCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TkeCidrCount.Marshal(b, m, deterministic)
}
func (m *TkeCidrCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TkeCidrCount.Merge(m, src)
}
func (m *TkeCidrCount) XXX_Size() int {
	return xxx_messageInfo_TkeCidrCount.Size(m)
}
func (m *TkeCidrCount) XXX_DiscardUnknown() {
	xxx_messageInfo_TkeCidrCount.DiscardUnknown(m)
}

var xxx_messageInfo_TkeCidrCount proto.InternalMessageInfo

func (m *TkeCidrCount) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *TkeCidrCount) GetVPC() string {
	if m != nil {
		return m.VPC
	}
	return ""
}

func (m *TkeCidrCount) GetIPNumber() uint32 {
	if m != nil {
		return m.IPNumber
	}
	return 0
}

func (m *TkeCidrCount) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type CreateClusterReq struct {
	ClusterID           string            `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ClusterName         string            `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Provider            string            `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
	Region              string            `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	VpcID               string            `protobuf:"bytes,5,opt,name=vpcID,proto3" json:"vpcID,omitempty"`
	ProjectID           string            `protobuf:"bytes,6,opt,name=projectID,proto3" json:"projectID,omitempty"`
	BusinessID          string            `protobuf:"bytes,7,opt,name=businessID,proto3" json:"businessID,omitempty"`
	Environment         string            `protobuf:"bytes,8,opt,name=environment,proto3" json:"environment,omitempty"`
	EngineType          string            `protobuf:"bytes,9,opt,name=engineType,proto3" json:"engineType,omitempty"`
	IsExclusive         bool              `protobuf:"varint,10,opt,name=isExclusive,proto3" json:"isExclusive,omitempty"`
	ClusterType         string            `protobuf:"bytes,11,opt,name=clusterType,proto3" json:"clusterType,omitempty"`
	FederationClusterID string            `protobuf:"bytes,12,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	Labels              map[string]string `protobuf:"bytes,13,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Creator             string            `protobuf:"bytes,14,opt,name=creator,proto3" json:"creator,omitempty"`
	//集群创建的控制信息
	OnlyCreateInfo         bool                    `protobuf:"varint,15,opt,name=onlyCreateInfo,proto3" json:"onlyCreateInfo,omitempty"`
	BcsAddons              map[string]*BKOpsPlugin `protobuf:"bytes,17,rep,name=bcsAddons,proto3" json:"bcsAddons,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ExtraAddons            map[string]*BKOpsPlugin `protobuf:"bytes,18,rep,name=extraAddons,proto3" json:"extraAddons,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CloudID                string                  `protobuf:"bytes,19,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	ManageType             string                  `protobuf:"bytes,20,opt,name=manageType,proto3" json:"manageType,omitempty"`
	Master                 []string                `protobuf:"bytes,21,rep,name=master,proto3" json:"master,omitempty"`
	Nodes                  []string                `protobuf:"bytes,22,rep,name=nodes,proto3" json:"nodes,omitempty"`
	NetworkSettings        *NetworkSetting         `protobuf:"bytes,23,opt,name=networkSettings,proto3" json:"networkSettings,omitempty"`
	ClusterBasicSettings   *ClusterBasicSetting    `protobuf:"bytes,24,opt,name=clusterBasicSettings,proto3" json:"clusterBasicSettings,omitempty"`
	ClusterAdvanceSettings *ClusterAdvanceSetting  `protobuf:"bytes,25,opt,name=clusterAdvanceSettings,proto3" json:"clusterAdvanceSettings,omitempty"`
	NodeSettings           *NodeSetting            `protobuf:"bytes,26,opt,name=nodeSettings,proto3" json:"nodeSettings,omitempty"`
	SystemReinstall        bool                    `protobuf:"varint,27,opt,name=systemReinstall,proto3" json:"systemReinstall,omitempty"`
	InitLoginPassword      string                  `protobuf:"bytes,28,opt,name=initLoginPassword,proto3" json:"initLoginPassword,omitempty"`
	NetworkType            string                  `protobuf:"bytes,29,opt,name=networkType,proto3" json:"networkType,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                `json:"-" bson:"-"`
	XXX_unrecognized       []byte                  `json:"-" bson:"-"`
	XXX_sizecache          int32                   `json:"-" bson:"-"`
}

func (m *CreateClusterReq) Reset()         { *m = CreateClusterReq{} }
func (m *CreateClusterReq) String() string { return proto.CompactTextString(m) }
func (*CreateClusterReq) ProtoMessage()    {}
func (*CreateClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{28}
}

func (m *CreateClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClusterReq.Unmarshal(m, b)
}
func (m *CreateClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClusterReq.Marshal(b, m, deterministic)
}
func (m *CreateClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClusterReq.Merge(m, src)
}
func (m *CreateClusterReq) XXX_Size() int {
	return xxx_messageInfo_CreateClusterReq.Size(m)
}
func (m *CreateClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClusterReq proto.InternalMessageInfo

func (m *CreateClusterReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *CreateClusterReq) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *CreateClusterReq) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *CreateClusterReq) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *CreateClusterReq) GetVpcID() string {
	if m != nil {
		return m.VpcID
	}
	return ""
}

func (m *CreateClusterReq) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *CreateClusterReq) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *CreateClusterReq) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *CreateClusterReq) GetEngineType() string {
	if m != nil {
		return m.EngineType
	}
	return ""
}

func (m *CreateClusterReq) GetIsExclusive() bool {
	if m != nil {
		return m.IsExclusive
	}
	return false
}

func (m *CreateClusterReq) GetClusterType() string {
	if m != nil {
		return m.ClusterType
	}
	return ""
}

func (m *CreateClusterReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *CreateClusterReq) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateClusterReq) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CreateClusterReq) GetOnlyCreateInfo() bool {
	if m != nil {
		return m.OnlyCreateInfo
	}
	return false
}

func (m *CreateClusterReq) GetBcsAddons() map[string]*BKOpsPlugin {
	if m != nil {
		return m.BcsAddons
	}
	return nil
}

func (m *CreateClusterReq) GetExtraAddons() map[string]*BKOpsPlugin {
	if m != nil {
		return m.ExtraAddons
	}
	return nil
}

func (m *CreateClusterReq) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *CreateClusterReq) GetManageType() string {
	if m != nil {
		return m.ManageType
	}
	return ""
}

func (m *CreateClusterReq) GetMaster() []string {
	if m != nil {
		return m.Master
	}
	return nil
}

func (m *CreateClusterReq) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *CreateClusterReq) GetNetworkSettings() *NetworkSetting {
	if m != nil {
		return m.NetworkSettings
	}
	return nil
}

func (m *CreateClusterReq) GetClusterBasicSettings() *ClusterBasicSetting {
	if m != nil {
		return m.ClusterBasicSettings
	}
	return nil
}

func (m *CreateClusterReq) GetClusterAdvanceSettings() *ClusterAdvanceSetting {
	if m != nil {
		return m.ClusterAdvanceSettings
	}
	return nil
}

func (m *CreateClusterReq) GetNodeSettings() *NodeSetting {
	if m != nil {
		return m.NodeSettings
	}
	return nil
}

func (m *CreateClusterReq) GetSystemReinstall() bool {
	if m != nil {
		return m.SystemReinstall
	}
	return false
}

func (m *CreateClusterReq) GetInitLoginPassword() string {
	if m != nil {
		return m.InitLoginPassword
	}
	return ""
}

func (m *CreateClusterReq) GetNetworkType() string {
	if m != nil {
		return m.NetworkType
	}
	return ""
}

type CreateClusterResp struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Cluster `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Task                 *Task    `protobuf:"bytes,5,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CreateClusterResp) Reset()         { *m = CreateClusterResp{} }
func (m *CreateClusterResp) String() string { return proto.CompactTextString(m) }
func (*CreateClusterResp) ProtoMessage()    {}
func (*CreateClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{29}
}

func (m *CreateClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClusterResp.Unmarshal(m, b)
}
func (m *CreateClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClusterResp.Marshal(b, m, deterministic)
}
func (m *CreateClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClusterResp.Merge(m, src)
}
func (m *CreateClusterResp) XXX_Size() int {
	return xxx_messageInfo_CreateClusterResp.Size(m)
}
func (m *CreateClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClusterResp proto.InternalMessageInfo

func (m *CreateClusterResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateClusterResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateClusterResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *CreateClusterResp) GetData() *Cluster {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateClusterResp) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type DeleteClusterReq struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	IsForced             bool     `protobuf:"varint,2,opt,name=isForced,proto3" json:"isForced,omitempty"`
	ResourceClean        bool     `protobuf:"varint,3,opt,name=resourceClean,proto3" json:"resourceClean,omitempty"`
	OnlyDeleteInfo       bool     `protobuf:"varint,4,opt,name=onlyDeleteInfo,proto3" json:"onlyDeleteInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteClusterReq) Reset()         { *m = DeleteClusterReq{} }
func (m *DeleteClusterReq) String() string { return proto.CompactTextString(m) }
func (*DeleteClusterReq) ProtoMessage()    {}
func (*DeleteClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{30}
}

func (m *DeleteClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteClusterReq.Unmarshal(m, b)
}
func (m *DeleteClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteClusterReq.Marshal(b, m, deterministic)
}
func (m *DeleteClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteClusterReq.Merge(m, src)
}
func (m *DeleteClusterReq) XXX_Size() int {
	return xxx_messageInfo_DeleteClusterReq.Size(m)
}
func (m *DeleteClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteClusterReq proto.InternalMessageInfo

func (m *DeleteClusterReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *DeleteClusterReq) GetIsForced() bool {
	if m != nil {
		return m.IsForced
	}
	return false
}

func (m *DeleteClusterReq) GetResourceClean() bool {
	if m != nil {
		return m.ResourceClean
	}
	return false
}

func (m *DeleteClusterReq) GetOnlyDeleteInfo() bool {
	if m != nil {
		return m.OnlyDeleteInfo
	}
	return false
}

type DeleteClusterResp struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Cluster `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Tasks                []*Task  `protobuf:"bytes,5,rep,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteClusterResp) Reset()         { *m = DeleteClusterResp{} }
func (m *DeleteClusterResp) String() string { return proto.CompactTextString(m) }
func (*DeleteClusterResp) ProtoMessage()    {}
func (*DeleteClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{31}
}

func (m *DeleteClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteClusterResp.Unmarshal(m, b)
}
func (m *DeleteClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteClusterResp.Marshal(b, m, deterministic)
}
func (m *DeleteClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteClusterResp.Merge(m, src)
}
func (m *DeleteClusterResp) XXX_Size() int {
	return xxx_messageInfo_DeleteClusterResp.Size(m)
}
func (m *DeleteClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteClusterResp proto.InternalMessageInfo

func (m *DeleteClusterResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteClusterResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteClusterResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *DeleteClusterResp) GetData() *Cluster {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *DeleteClusterResp) GetTasks() []*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type UpdateClusterReq struct {
	ClusterID              string                  `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ClusterName            string                  `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Provider               string                  `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
	Region                 string                  `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	VpcID                  string                  `protobuf:"bytes,5,opt,name=vpcID,proto3" json:"vpcID,omitempty"`
	ProjectID              string                  `protobuf:"bytes,6,opt,name=projectID,proto3" json:"projectID,omitempty"`
	BusinessID             string                  `protobuf:"bytes,7,opt,name=businessID,proto3" json:"businessID,omitempty"`
	Environment            string                  `protobuf:"bytes,8,opt,name=environment,proto3" json:"environment,omitempty"`
	EngineType             string                  `protobuf:"bytes,9,opt,name=engineType,proto3" json:"engineType,omitempty"`
	IsExclusive            *wrappers.BoolValue     `protobuf:"bytes,10,opt,name=isExclusive,proto3" json:"isExclusive,omitempty"`
	ClusterType            string                  `protobuf:"bytes,11,opt,name=clusterType,proto3" json:"clusterType,omitempty"`
	FederationClusterID    string                  `protobuf:"bytes,12,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	Labels                 map[string]string       `protobuf:"bytes,13,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Updater                string                  `protobuf:"bytes,14,opt,name=updater,proto3" json:"updater,omitempty"`
	Status                 string                  `protobuf:"bytes,15,opt,name=status,proto3" json:"status,omitempty"`
	BcsAddons              map[string]*BKOpsPlugin `protobuf:"bytes,17,rep,name=bcsAddons,proto3" json:"bcsAddons,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ExtraAddons            map[string]*BKOpsPlugin `protobuf:"bytes,18,rep,name=extraAddons,proto3" json:"extraAddons,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SystemID               string                  `protobuf:"bytes,19,opt,name=systemID,proto3" json:"systemID,omitempty"`
	ManageType             string                  `protobuf:"bytes,20,opt,name=manageType,proto3" json:"manageType,omitempty"`
	Master                 []string                `protobuf:"bytes,21,rep,name=master,proto3" json:"master,omitempty"`
	NetworkSettings        *NetworkSetting         `protobuf:"bytes,22,opt,name=networkSettings,proto3" json:"networkSettings,omitempty"`
	ClusterBasicSettings   *ClusterBasicSetting    `protobuf:"bytes,23,opt,name=clusterBasicSettings,proto3" json:"clusterBasicSettings,omitempty"`
	ClusterAdvanceSettings *ClusterAdvanceSetting  `protobuf:"bytes,24,opt,name=clusterAdvanceSettings,proto3" json:"clusterAdvanceSettings,omitempty"`
	NodeSettings           *NodeSetting            `protobuf:"bytes,25,opt,name=nodeSettings,proto3" json:"nodeSettings,omitempty"`
	NetworkType            string                  `protobuf:"bytes,26,opt,name=networkType,proto3" json:"networkType,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                `json:"-" bson:"-"`
	XXX_unrecognized       []byte                  `json:"-" bson:"-"`
	XXX_sizecache          int32                   `json:"-" bson:"-"`
}

func (m *UpdateClusterReq) Reset()         { *m = UpdateClusterReq{} }
func (m *UpdateClusterReq) String() string { return proto.CompactTextString(m) }
func (*UpdateClusterReq) ProtoMessage()    {}
func (*UpdateClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{32}
}

func (m *UpdateClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateClusterReq.Unmarshal(m, b)
}
func (m *UpdateClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateClusterReq.Marshal(b, m, deterministic)
}
func (m *UpdateClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateClusterReq.Merge(m, src)
}
func (m *UpdateClusterReq) XXX_Size() int {
	return xxx_messageInfo_UpdateClusterReq.Size(m)
}
func (m *UpdateClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateClusterReq proto.InternalMessageInfo

func (m *UpdateClusterReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *UpdateClusterReq) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *UpdateClusterReq) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *UpdateClusterReq) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *UpdateClusterReq) GetVpcID() string {
	if m != nil {
		return m.VpcID
	}
	return ""
}

func (m *UpdateClusterReq) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *UpdateClusterReq) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *UpdateClusterReq) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *UpdateClusterReq) GetEngineType() string {
	if m != nil {
		return m.EngineType
	}
	return ""
}

func (m *UpdateClusterReq) GetIsExclusive() *wrappers.BoolValue {
	if m != nil {
		return m.IsExclusive
	}
	return nil
}

func (m *UpdateClusterReq) GetClusterType() string {
	if m != nil {
		return m.ClusterType
	}
	return ""
}

func (m *UpdateClusterReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *UpdateClusterReq) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *UpdateClusterReq) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *UpdateClusterReq) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *UpdateClusterReq) GetBcsAddons() map[string]*BKOpsPlugin {
	if m != nil {
		return m.BcsAddons
	}
	return nil
}

func (m *UpdateClusterReq) GetExtraAddons() map[string]*BKOpsPlugin {
	if m != nil {
		return m.ExtraAddons
	}
	return nil
}

func (m *UpdateClusterReq) GetSystemID() string {
	if m != nil {
		return m.SystemID
	}
	return ""
}

func (m *UpdateClusterReq) GetManageType() string {
	if m != nil {
		return m.ManageType
	}
	return ""
}

func (m *UpdateClusterReq) GetMaster() []string {
	if m != nil {
		return m.Master
	}
	return nil
}

func (m *UpdateClusterReq) GetNetworkSettings() *NetworkSetting {
	if m != nil {
		return m.NetworkSettings
	}
	return nil
}

func (m *UpdateClusterReq) GetClusterBasicSettings() *ClusterBasicSetting {
	if m != nil {
		return m.ClusterBasicSettings
	}
	return nil
}

func (m *UpdateClusterReq) GetClusterAdvanceSettings() *ClusterAdvanceSetting {
	if m != nil {
		return m.ClusterAdvanceSettings
	}
	return nil
}

func (m *UpdateClusterReq) GetNodeSettings() *NodeSetting {
	if m != nil {
		return m.NodeSettings
	}
	return nil
}

func (m *UpdateClusterReq) GetNetworkType() string {
	if m != nil {
		return m.NetworkType
	}
	return ""
}

type UpdateClusterResp struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Cluster `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateClusterResp) Reset()         { *m = UpdateClusterResp{} }
func (m *UpdateClusterResp) String() string { return proto.CompactTextString(m) }
func (*UpdateClusterResp) ProtoMessage()    {}
func (*UpdateClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{33}
}

func (m *UpdateClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateClusterResp.Unmarshal(m, b)
}
func (m *UpdateClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateClusterResp.Marshal(b, m, deterministic)
}
func (m *UpdateClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateClusterResp.Merge(m, src)
}
func (m *UpdateClusterResp) XXX_Size() int {
	return xxx_messageInfo_UpdateClusterResp.Size(m)
}
func (m *UpdateClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateClusterResp proto.InternalMessageInfo

func (m *UpdateClusterResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateClusterResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateClusterResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *UpdateClusterResp) GetData() *Cluster {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetClusterReq struct {
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetClusterReq) Reset()         { *m = GetClusterReq{} }
func (m *GetClusterReq) String() string { return proto.CompactTextString(m) }
func (*GetClusterReq) ProtoMessage()    {}
func (*GetClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{34}
}

func (m *GetClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterReq.Unmarshal(m, b)
}
func (m *GetClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterReq.Marshal(b, m, deterministic)
}
func (m *GetClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterReq.Merge(m, src)
}
func (m *GetClusterReq) XXX_Size() int {
	return xxx_messageInfo_GetClusterReq.Size(m)
}
func (m *GetClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterReq proto.InternalMessageInfo

func (m *GetClusterReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

type GetClusterResp struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Cluster `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetClusterResp) Reset()         { *m = GetClusterResp{} }
func (m *GetClusterResp) String() string { return proto.CompactTextString(m) }
func (*GetClusterResp) ProtoMessage()    {}
func (*GetClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{35}
}

func (m *GetClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterResp.Unmarshal(m, b)
}
func (m *GetClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterResp.Marshal(b, m, deterministic)
}
func (m *GetClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterResp.Merge(m, src)
}
func (m *GetClusterResp) XXX_Size() int {
	return xxx_messageInfo_GetClusterResp.Size(m)
}
func (m *GetClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterResp proto.InternalMessageInfo

func (m *GetClusterResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetClusterResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetClusterResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetClusterResp) GetData() *Cluster {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetNodeRequest struct {
	InnerIP              string   `protobuf:"bytes,1,opt,name=innerIP,proto3" json:"innerIP,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetNodeRequest) Reset()         { *m = GetNodeRequest{} }
func (m *GetNodeRequest) String() string { return proto.CompactTextString(m) }
func (*GetNodeRequest) ProtoMessage()    {}
func (*GetNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{36}
}

func (m *GetNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeRequest.Unmarshal(m, b)
}
func (m *GetNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeRequest.Marshal(b, m, deterministic)
}
func (m *GetNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeRequest.Merge(m, src)
}
func (m *GetNodeRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodeRequest.Size(m)
}
func (m *GetNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeRequest proto.InternalMessageInfo

func (m *GetNodeRequest) GetInnerIP() string {
	if m != nil {
		return m.InnerIP
	}
	return ""
}

type GetNodeResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*Node  `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetNodeResponse) Reset()         { *m = GetNodeResponse{} }
func (m *GetNodeResponse) String() string { return proto.CompactTextString(m) }
func (*GetNodeResponse) ProtoMessage()    {}
func (*GetNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{37}
}

func (m *GetNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeResponse.Unmarshal(m, b)
}
func (m *GetNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeResponse.Marshal(b, m, deterministic)
}
func (m *GetNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeResponse.Merge(m, src)
}
func (m *GetNodeResponse) XXX_Size() int {
	return xxx_messageInfo_GetNodeResponse.Size(m)
}
func (m *GetNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeResponse proto.InternalMessageInfo

func (m *GetNodeResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetNodeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetNodeResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetNodeResponse) GetData() []*Node {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListClusterReq struct {
	ClusterName          string   `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Provider             string   `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
	Region               string   `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	VpcID                string   `protobuf:"bytes,5,opt,name=vpcID,proto3" json:"vpcID,omitempty"`
	ProjectID            string   `protobuf:"bytes,6,opt,name=projectID,proto3" json:"projectID,omitempty"`
	BusinessID           string   `protobuf:"bytes,7,opt,name=businessID,proto3" json:"businessID,omitempty"`
	Environment          string   `protobuf:"bytes,8,opt,name=environment,proto3" json:"environment,omitempty"`
	EngineType           string   `protobuf:"bytes,9,opt,name=engineType,proto3" json:"engineType,omitempty"`
	IsExclusive          bool     `protobuf:"varint,10,opt,name=isExclusive,proto3" json:"isExclusive,omitempty"`
	ClusterType          string   `protobuf:"bytes,11,opt,name=clusterType,proto3" json:"clusterType,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,12,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	Status               string   `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	Offset               uint64   `protobuf:"varint,14,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                uint64   `protobuf:"varint,15,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListClusterReq) Reset()         { *m = ListClusterReq{} }
func (m *ListClusterReq) String() string { return proto.CompactTextString(m) }
func (*ListClusterReq) ProtoMessage()    {}
func (*ListClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{38}
}

func (m *ListClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClusterReq.Unmarshal(m, b)
}
func (m *ListClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClusterReq.Marshal(b, m, deterministic)
}
func (m *ListClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClusterReq.Merge(m, src)
}
func (m *ListClusterReq) XXX_Size() int {
	return xxx_messageInfo_ListClusterReq.Size(m)
}
func (m *ListClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListClusterReq proto.InternalMessageInfo

func (m *ListClusterReq) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *ListClusterReq) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *ListClusterReq) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *ListClusterReq) GetVpcID() string {
	if m != nil {
		return m.VpcID
	}
	return ""
}

func (m *ListClusterReq) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *ListClusterReq) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *ListClusterReq) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *ListClusterReq) GetEngineType() string {
	if m != nil {
		return m.EngineType
	}
	return ""
}

func (m *ListClusterReq) GetIsExclusive() bool {
	if m != nil {
		return m.IsExclusive
	}
	return false
}

func (m *ListClusterReq) GetClusterType() string {
	if m != nil {
		return m.ClusterType
	}
	return ""
}

func (m *ListClusterReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *ListClusterReq) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ListClusterReq) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListClusterReq) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ListClusterResp struct {
	Code                 uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool       `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*Cluster `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-" bson:"-"`
	XXX_unrecognized     []byte     `json:"-" bson:"-"`
	XXX_sizecache        int32      `json:"-" bson:"-"`
}

func (m *ListClusterResp) Reset()         { *m = ListClusterResp{} }
func (m *ListClusterResp) String() string { return proto.CompactTextString(m) }
func (*ListClusterResp) ProtoMessage()    {}
func (*ListClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{39}
}

func (m *ListClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClusterResp.Unmarshal(m, b)
}
func (m *ListClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClusterResp.Marshal(b, m, deterministic)
}
func (m *ListClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClusterResp.Merge(m, src)
}
func (m *ListClusterResp) XXX_Size() int {
	return xxx_messageInfo_ListClusterResp.Size(m)
}
func (m *ListClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListClusterResp proto.InternalMessageInfo

func (m *ListClusterResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListClusterResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListClusterResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListClusterResp) GetData() []*Cluster {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListNodesInClusterRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Region               string   `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	VpcID                string   `protobuf:"bytes,3,opt,name=vpcID,proto3" json:"vpcID,omitempty"`
	NodeGroupID          string   `protobuf:"bytes,4,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	InstanceType         string   `protobuf:"bytes,5,opt,name=instanceType,proto3" json:"instanceType,omitempty"`
	Status               string   `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Offset               uint64   `protobuf:"varint,14,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                uint64   `protobuf:"varint,15,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListNodesInClusterRequest) Reset()         { *m = ListNodesInClusterRequest{} }
func (m *ListNodesInClusterRequest) String() string { return proto.CompactTextString(m) }
func (*ListNodesInClusterRequest) ProtoMessage()    {}
func (*ListNodesInClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{40}
}

func (m *ListNodesInClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodesInClusterRequest.Unmarshal(m, b)
}
func (m *ListNodesInClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodesInClusterRequest.Marshal(b, m, deterministic)
}
func (m *ListNodesInClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodesInClusterRequest.Merge(m, src)
}
func (m *ListNodesInClusterRequest) XXX_Size() int {
	return xxx_messageInfo_ListNodesInClusterRequest.Size(m)
}
func (m *ListNodesInClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodesInClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodesInClusterRequest proto.InternalMessageInfo

func (m *ListNodesInClusterRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ListNodesInClusterRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *ListNodesInClusterRequest) GetVpcID() string {
	if m != nil {
		return m.VpcID
	}
	return ""
}

func (m *ListNodesInClusterRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *ListNodesInClusterRequest) GetInstanceType() string {
	if m != nil {
		return m.InstanceType
	}
	return ""
}

func (m *ListNodesInClusterRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ListNodesInClusterRequest) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListNodesInClusterRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ListNodesInClusterResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*Node  `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListNodesInClusterResponse) Reset()         { *m = ListNodesInClusterResponse{} }
func (m *ListNodesInClusterResponse) String() string { return proto.CompactTextString(m) }
func (*ListNodesInClusterResponse) ProtoMessage()    {}
func (*ListNodesInClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{41}
}

func (m *ListNodesInClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodesInClusterResponse.Unmarshal(m, b)
}
func (m *ListNodesInClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodesInClusterResponse.Marshal(b, m, deterministic)
}
func (m *ListNodesInClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodesInClusterResponse.Merge(m, src)
}
func (m *ListNodesInClusterResponse) XXX_Size() int {
	return xxx_messageInfo_ListNodesInClusterResponse.Size(m)
}
func (m *ListNodesInClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodesInClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodesInClusterResponse proto.InternalMessageInfo

func (m *ListNodesInClusterResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListNodesInClusterResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListNodesInClusterResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListNodesInClusterResponse) GetData() []*Node {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetClusterCredentialReq struct {
	ServerKey            string   `protobuf:"bytes,1,opt,name=serverKey,proto3" json:"serverKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetClusterCredentialReq) Reset()         { *m = GetClusterCredentialReq{} }
func (m *GetClusterCredentialReq) String() string { return proto.CompactTextString(m) }
func (*GetClusterCredentialReq) ProtoMessage()    {}
func (*GetClusterCredentialReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{42}
}

func (m *GetClusterCredentialReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterCredentialReq.Unmarshal(m, b)
}
func (m *GetClusterCredentialReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterCredentialReq.Marshal(b, m, deterministic)
}
func (m *GetClusterCredentialReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterCredentialReq.Merge(m, src)
}
func (m *GetClusterCredentialReq) XXX_Size() int {
	return xxx_messageInfo_GetClusterCredentialReq.Size(m)
}
func (m *GetClusterCredentialReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterCredentialReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterCredentialReq proto.InternalMessageInfo

func (m *GetClusterCredentialReq) GetServerKey() string {
	if m != nil {
		return m.ServerKey
	}
	return ""
}

type GetClusterCredentialResp struct {
	Code                 uint32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool               `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *ClusterCredential `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-" bson:"-"`
	XXX_unrecognized     []byte             `json:"-" bson:"-"`
	XXX_sizecache        int32              `json:"-" bson:"-"`
}

func (m *GetClusterCredentialResp) Reset()         { *m = GetClusterCredentialResp{} }
func (m *GetClusterCredentialResp) String() string { return proto.CompactTextString(m) }
func (*GetClusterCredentialResp) ProtoMessage()    {}
func (*GetClusterCredentialResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{43}
}

func (m *GetClusterCredentialResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterCredentialResp.Unmarshal(m, b)
}
func (m *GetClusterCredentialResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterCredentialResp.Marshal(b, m, deterministic)
}
func (m *GetClusterCredentialResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterCredentialResp.Merge(m, src)
}
func (m *GetClusterCredentialResp) XXX_Size() int {
	return xxx_messageInfo_GetClusterCredentialResp.Size(m)
}
func (m *GetClusterCredentialResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterCredentialResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterCredentialResp proto.InternalMessageInfo

func (m *GetClusterCredentialResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetClusterCredentialResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetClusterCredentialResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetClusterCredentialResp) GetData() *ClusterCredential {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateClusterCredentialReq struct {
	ServerKey            string   `protobuf:"bytes,1,opt,name=serverKey,proto3" json:"serverKey,omitempty"`
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ClientModule         string   `protobuf:"bytes,3,opt,name=clientModule,proto3" json:"clientModule,omitempty"`
	ServerAddress        string   `protobuf:"bytes,4,opt,name=serverAddress,proto3" json:"serverAddress,omitempty"`
	CaCertData           string   `protobuf:"bytes,5,opt,name=caCertData,proto3" json:"caCertData,omitempty"`
	UserToken            string   `protobuf:"bytes,6,opt,name=userToken,proto3" json:"userToken,omitempty"`
	ClusterDomain        string   `protobuf:"bytes,7,opt,name=clusterDomain,proto3" json:"clusterDomain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateClusterCredentialReq) Reset()         { *m = UpdateClusterCredentialReq{} }
func (m *UpdateClusterCredentialReq) String() string { return proto.CompactTextString(m) }
func (*UpdateClusterCredentialReq) ProtoMessage()    {}
func (*UpdateClusterCredentialReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{44}
}

func (m *UpdateClusterCredentialReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateClusterCredentialReq.Unmarshal(m, b)
}
func (m *UpdateClusterCredentialReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateClusterCredentialReq.Marshal(b, m, deterministic)
}
func (m *UpdateClusterCredentialReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateClusterCredentialReq.Merge(m, src)
}
func (m *UpdateClusterCredentialReq) XXX_Size() int {
	return xxx_messageInfo_UpdateClusterCredentialReq.Size(m)
}
func (m *UpdateClusterCredentialReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateClusterCredentialReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateClusterCredentialReq proto.InternalMessageInfo

func (m *UpdateClusterCredentialReq) GetServerKey() string {
	if m != nil {
		return m.ServerKey
	}
	return ""
}

func (m *UpdateClusterCredentialReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *UpdateClusterCredentialReq) GetClientModule() string {
	if m != nil {
		return m.ClientModule
	}
	return ""
}

func (m *UpdateClusterCredentialReq) GetServerAddress() string {
	if m != nil {
		return m.ServerAddress
	}
	return ""
}

func (m *UpdateClusterCredentialReq) GetCaCertData() string {
	if m != nil {
		return m.CaCertData
	}
	return ""
}

func (m *UpdateClusterCredentialReq) GetUserToken() string {
	if m != nil {
		return m.UserToken
	}
	return ""
}

func (m *UpdateClusterCredentialReq) GetClusterDomain() string {
	if m != nil {
		return m.ClusterDomain
	}
	return ""
}

type UpdateClusterCredentialResp struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateClusterCredentialResp) Reset()         { *m = UpdateClusterCredentialResp{} }
func (m *UpdateClusterCredentialResp) String() string { return proto.CompactTextString(m) }
func (*UpdateClusterCredentialResp) ProtoMessage()    {}
func (*UpdateClusterCredentialResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{45}
}

func (m *UpdateClusterCredentialResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateClusterCredentialResp.Unmarshal(m, b)
}
func (m *UpdateClusterCredentialResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateClusterCredentialResp.Marshal(b, m, deterministic)
}
func (m *UpdateClusterCredentialResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateClusterCredentialResp.Merge(m, src)
}
func (m *UpdateClusterCredentialResp) XXX_Size() int {
	return xxx_messageInfo_UpdateClusterCredentialResp.Size(m)
}
func (m *UpdateClusterCredentialResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateClusterCredentialResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateClusterCredentialResp proto.InternalMessageInfo

func (m *UpdateClusterCredentialResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateClusterCredentialResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateClusterCredentialResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type DeleteClusterCredentialReq struct {
	ServerKey            string   `protobuf:"bytes,1,opt,name=serverKey,proto3" json:"serverKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteClusterCredentialReq) Reset()         { *m = DeleteClusterCredentialReq{} }
func (m *DeleteClusterCredentialReq) String() string { return proto.CompactTextString(m) }
func (*DeleteClusterCredentialReq) ProtoMessage()    {}
func (*DeleteClusterCredentialReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{46}
}

func (m *DeleteClusterCredentialReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteClusterCredentialReq.Unmarshal(m, b)
}
func (m *DeleteClusterCredentialReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteClusterCredentialReq.Marshal(b, m, deterministic)
}
func (m *DeleteClusterCredentialReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteClusterCredentialReq.Merge(m, src)
}
func (m *DeleteClusterCredentialReq) XXX_Size() int {
	return xxx_messageInfo_DeleteClusterCredentialReq.Size(m)
}
func (m *DeleteClusterCredentialReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteClusterCredentialReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteClusterCredentialReq proto.InternalMessageInfo

func (m *DeleteClusterCredentialReq) GetServerKey() string {
	if m != nil {
		return m.ServerKey
	}
	return ""
}

type DeleteClusterCredentialResp struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteClusterCredentialResp) Reset()         { *m = DeleteClusterCredentialResp{} }
func (m *DeleteClusterCredentialResp) String() string { return proto.CompactTextString(m) }
func (*DeleteClusterCredentialResp) ProtoMessage()    {}
func (*DeleteClusterCredentialResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{47}
}

func (m *DeleteClusterCredentialResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteClusterCredentialResp.Unmarshal(m, b)
}
func (m *DeleteClusterCredentialResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteClusterCredentialResp.Marshal(b, m, deterministic)
}
func (m *DeleteClusterCredentialResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteClusterCredentialResp.Merge(m, src)
}
func (m *DeleteClusterCredentialResp) XXX_Size() int {
	return xxx_messageInfo_DeleteClusterCredentialResp.Size(m)
}
func (m *DeleteClusterCredentialResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteClusterCredentialResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteClusterCredentialResp proto.InternalMessageInfo

func (m *DeleteClusterCredentialResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteClusterCredentialResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteClusterCredentialResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type ListClusterCredentialReq struct {
	ServerKey            string   `protobuf:"bytes,1,opt,name=serverKey,proto3" json:"serverKey,omitempty"`
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ClientMode           string   `protobuf:"bytes,3,opt,name=clientMode,proto3" json:"clientMode,omitempty"`
	ConnectMode          string   `protobuf:"bytes,4,opt,name=connectMode,proto3" json:"connectMode,omitempty"`
	Offset               uint64   `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                uint64   `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListClusterCredentialReq) Reset()         { *m = ListClusterCredentialReq{} }
func (m *ListClusterCredentialReq) String() string { return proto.CompactTextString(m) }
func (*ListClusterCredentialReq) ProtoMessage()    {}
func (*ListClusterCredentialReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{48}
}

func (m *ListClusterCredentialReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClusterCredentialReq.Unmarshal(m, b)
}
func (m *ListClusterCredentialReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClusterCredentialReq.Marshal(b, m, deterministic)
}
func (m *ListClusterCredentialReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClusterCredentialReq.Merge(m, src)
}
func (m *ListClusterCredentialReq) XXX_Size() int {
	return xxx_messageInfo_ListClusterCredentialReq.Size(m)
}
func (m *ListClusterCredentialReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClusterCredentialReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListClusterCredentialReq proto.InternalMessageInfo

func (m *ListClusterCredentialReq) GetServerKey() string {
	if m != nil {
		return m.ServerKey
	}
	return ""
}

func (m *ListClusterCredentialReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ListClusterCredentialReq) GetClientMode() string {
	if m != nil {
		return m.ClientMode
	}
	return ""
}

func (m *ListClusterCredentialReq) GetConnectMode() string {
	if m != nil {
		return m.ConnectMode
	}
	return ""
}

func (m *ListClusterCredentialReq) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListClusterCredentialReq) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ListClusterCredentialResp struct {
	Code                 uint32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                 `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*ClusterCredential `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *ListClusterCredentialResp) Reset()         { *m = ListClusterCredentialResp{} }
func (m *ListClusterCredentialResp) String() string { return proto.CompactTextString(m) }
func (*ListClusterCredentialResp) ProtoMessage()    {}
func (*ListClusterCredentialResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{49}
}

func (m *ListClusterCredentialResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClusterCredentialResp.Unmarshal(m, b)
}
func (m *ListClusterCredentialResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClusterCredentialResp.Marshal(b, m, deterministic)
}
func (m *ListClusterCredentialResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClusterCredentialResp.Merge(m, src)
}
func (m *ListClusterCredentialResp) XXX_Size() int {
	return xxx_messageInfo_ListClusterCredentialResp.Size(m)
}
func (m *ListClusterCredentialResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClusterCredentialResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListClusterCredentialResp proto.InternalMessageInfo

func (m *ListClusterCredentialResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListClusterCredentialResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListClusterCredentialResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListClusterCredentialResp) GetData() []*ClusterCredential {
	if m != nil {
		return m.Data
	}
	return nil
}

type InitFederationClusterReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *InitFederationClusterReq) Reset()         { *m = InitFederationClusterReq{} }
func (m *InitFederationClusterReq) String() string { return proto.CompactTextString(m) }
func (*InitFederationClusterReq) ProtoMessage()    {}
func (*InitFederationClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{50}
}

func (m *InitFederationClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitFederationClusterReq.Unmarshal(m, b)
}
func (m *InitFederationClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitFederationClusterReq.Marshal(b, m, deterministic)
}
func (m *InitFederationClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitFederationClusterReq.Merge(m, src)
}
func (m *InitFederationClusterReq) XXX_Size() int {
	return xxx_messageInfo_InitFederationClusterReq.Size(m)
}
func (m *InitFederationClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InitFederationClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_InitFederationClusterReq proto.InternalMessageInfo

type InitFederationClusterResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *InitFederationClusterResp) Reset()         { *m = InitFederationClusterResp{} }
func (m *InitFederationClusterResp) String() string { return proto.CompactTextString(m) }
func (*InitFederationClusterResp) ProtoMessage()    {}
func (*InitFederationClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{51}
}

func (m *InitFederationClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitFederationClusterResp.Unmarshal(m, b)
}
func (m *InitFederationClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitFederationClusterResp.Marshal(b, m, deterministic)
}
func (m *InitFederationClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitFederationClusterResp.Merge(m, src)
}
func (m *InitFederationClusterResp) XXX_Size() int {
	return xxx_messageInfo_InitFederationClusterResp.Size(m)
}
func (m *InitFederationClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_InitFederationClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_InitFederationClusterResp proto.InternalMessageInfo

type AddFederatedClusterReq struct {
	FederationClusterID  string   `protobuf:"bytes,1,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *AddFederatedClusterReq) Reset()         { *m = AddFederatedClusterReq{} }
func (m *AddFederatedClusterReq) String() string { return proto.CompactTextString(m) }
func (*AddFederatedClusterReq) ProtoMessage()    {}
func (*AddFederatedClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{52}
}

func (m *AddFederatedClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFederatedClusterReq.Unmarshal(m, b)
}
func (m *AddFederatedClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFederatedClusterReq.Marshal(b, m, deterministic)
}
func (m *AddFederatedClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFederatedClusterReq.Merge(m, src)
}
func (m *AddFederatedClusterReq) XXX_Size() int {
	return xxx_messageInfo_AddFederatedClusterReq.Size(m)
}
func (m *AddFederatedClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFederatedClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddFederatedClusterReq proto.InternalMessageInfo

func (m *AddFederatedClusterReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *AddFederatedClusterReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

type AddFederatedClusterResp struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *AddFederatedClusterResp) Reset()         { *m = AddFederatedClusterResp{} }
func (m *AddFederatedClusterResp) String() string { return proto.CompactTextString(m) }
func (*AddFederatedClusterResp) ProtoMessage()    {}
func (*AddFederatedClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{53}
}

func (m *AddFederatedClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFederatedClusterResp.Unmarshal(m, b)
}
func (m *AddFederatedClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFederatedClusterResp.Marshal(b, m, deterministic)
}
func (m *AddFederatedClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFederatedClusterResp.Merge(m, src)
}
func (m *AddFederatedClusterResp) XXX_Size() int {
	return xxx_messageInfo_AddFederatedClusterResp.Size(m)
}
func (m *AddFederatedClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFederatedClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_AddFederatedClusterResp proto.InternalMessageInfo

func (m *AddFederatedClusterResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AddFederatedClusterResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AddFederatedClusterResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type CreateNamespaceReq struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FederationClusterID  string            `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ProjectID            string            `protobuf:"bytes,3,opt,name=projectID,proto3" json:"projectID,omitempty"`
	BusinessID           string            `protobuf:"bytes,4,opt,name=businessID,proto3" json:"businessID,omitempty"`
	Labels               map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MaxQuota             string            `protobuf:"bytes,6,opt,name=maxQuota,proto3" json:"maxQuota,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *CreateNamespaceReq) Reset()         { *m = CreateNamespaceReq{} }
func (m *CreateNamespaceReq) String() string { return proto.CompactTextString(m) }
func (*CreateNamespaceReq) ProtoMessage()    {}
func (*CreateNamespaceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{54}
}

func (m *CreateNamespaceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceReq.Unmarshal(m, b)
}
func (m *CreateNamespaceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceReq.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceReq.Merge(m, src)
}
func (m *CreateNamespaceReq) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceReq.Size(m)
}
func (m *CreateNamespaceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceReq proto.InternalMessageInfo

func (m *CreateNamespaceReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateNamespaceReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *CreateNamespaceReq) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *CreateNamespaceReq) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *CreateNamespaceReq) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateNamespaceReq) GetMaxQuota() string {
	if m != nil {
		return m.MaxQuota
	}
	return ""
}

type CreateNamespaceResp struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CreateNamespaceResp) Reset()         { *m = CreateNamespaceResp{} }
func (m *CreateNamespaceResp) String() string { return proto.CompactTextString(m) }
func (*CreateNamespaceResp) ProtoMessage()    {}
func (*CreateNamespaceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{55}
}

func (m *CreateNamespaceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceResp.Unmarshal(m, b)
}
func (m *CreateNamespaceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceResp.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceResp.Merge(m, src)
}
func (m *CreateNamespaceResp) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceResp.Size(m)
}
func (m *CreateNamespaceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceResp proto.InternalMessageInfo

func (m *CreateNamespaceResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateNamespaceResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateNamespaceResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type DeleteNamespaceReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	IsForced             bool     `protobuf:"varint,3,opt,name=isForced,proto3" json:"isForced,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteNamespaceReq) Reset()         { *m = DeleteNamespaceReq{} }
func (m *DeleteNamespaceReq) String() string { return proto.CompactTextString(m) }
func (*DeleteNamespaceReq) ProtoMessage()    {}
func (*DeleteNamespaceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{56}
}

func (m *DeleteNamespaceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNamespaceReq.Unmarshal(m, b)
}
func (m *DeleteNamespaceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNamespaceReq.Marshal(b, m, deterministic)
}
func (m *DeleteNamespaceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNamespaceReq.Merge(m, src)
}
func (m *DeleteNamespaceReq) XXX_Size() int {
	return xxx_messageInfo_DeleteNamespaceReq.Size(m)
}
func (m *DeleteNamespaceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNamespaceReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNamespaceReq proto.InternalMessageInfo

func (m *DeleteNamespaceReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteNamespaceReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *DeleteNamespaceReq) GetIsForced() bool {
	if m != nil {
		return m.IsForced
	}
	return false
}

type DeleteNamespaceResp struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteNamespaceResp) Reset()         { *m = DeleteNamespaceResp{} }
func (m *DeleteNamespaceResp) String() string { return proto.CompactTextString(m) }
func (*DeleteNamespaceResp) ProtoMessage()    {}
func (*DeleteNamespaceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{57}
}

func (m *DeleteNamespaceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNamespaceResp.Unmarshal(m, b)
}
func (m *DeleteNamespaceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNamespaceResp.Marshal(b, m, deterministic)
}
func (m *DeleteNamespaceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNamespaceResp.Merge(m, src)
}
func (m *DeleteNamespaceResp) XXX_Size() int {
	return xxx_messageInfo_DeleteNamespaceResp.Size(m)
}
func (m *DeleteNamespaceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNamespaceResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNamespaceResp proto.InternalMessageInfo

func (m *DeleteNamespaceResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteNamespaceResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteNamespaceResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type UpdateNamespaceReq struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FederationClusterID  string            `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	Labels               map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MaxQuota             string            `protobuf:"bytes,4,opt,name=maxQuota,proto3" json:"maxQuota,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *UpdateNamespaceReq) Reset()         { *m = UpdateNamespaceReq{} }
func (m *UpdateNamespaceReq) String() string { return proto.CompactTextString(m) }
func (*UpdateNamespaceReq) ProtoMessage()    {}
func (*UpdateNamespaceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{58}
}

func (m *UpdateNamespaceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNamespaceReq.Unmarshal(m, b)
}
func (m *UpdateNamespaceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNamespaceReq.Marshal(b, m, deterministic)
}
func (m *UpdateNamespaceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNamespaceReq.Merge(m, src)
}
func (m *UpdateNamespaceReq) XXX_Size() int {
	return xxx_messageInfo_UpdateNamespaceReq.Size(m)
}
func (m *UpdateNamespaceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNamespaceReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNamespaceReq proto.InternalMessageInfo

func (m *UpdateNamespaceReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateNamespaceReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *UpdateNamespaceReq) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *UpdateNamespaceReq) GetMaxQuota() string {
	if m != nil {
		return m.MaxQuota
	}
	return ""
}

type UpdateNamespaceResp struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateNamespaceResp) Reset()         { *m = UpdateNamespaceResp{} }
func (m *UpdateNamespaceResp) String() string { return proto.CompactTextString(m) }
func (*UpdateNamespaceResp) ProtoMessage()    {}
func (*UpdateNamespaceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{59}
}

func (m *UpdateNamespaceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNamespaceResp.Unmarshal(m, b)
}
func (m *UpdateNamespaceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNamespaceResp.Marshal(b, m, deterministic)
}
func (m *UpdateNamespaceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNamespaceResp.Merge(m, src)
}
func (m *UpdateNamespaceResp) XXX_Size() int {
	return xxx_messageInfo_UpdateNamespaceResp.Size(m)
}
func (m *UpdateNamespaceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNamespaceResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNamespaceResp proto.InternalMessageInfo

func (m *UpdateNamespaceResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateNamespaceResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateNamespaceResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type GetNamespaceReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetNamespaceReq) Reset()         { *m = GetNamespaceReq{} }
func (m *GetNamespaceReq) String() string { return proto.CompactTextString(m) }
func (*GetNamespaceReq) ProtoMessage()    {}
func (*GetNamespaceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{60}
}

func (m *GetNamespaceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNamespaceReq.Unmarshal(m, b)
}
func (m *GetNamespaceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNamespaceReq.Marshal(b, m, deterministic)
}
func (m *GetNamespaceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNamespaceReq.Merge(m, src)
}
func (m *GetNamespaceReq) XXX_Size() int {
	return xxx_messageInfo_GetNamespaceReq.Size(m)
}
func (m *GetNamespaceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNamespaceReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetNamespaceReq proto.InternalMessageInfo

func (m *GetNamespaceReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetNamespaceReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

type GetNamespaceResp struct {
	Code                 uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool       `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Namespace `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-" bson:"-"`
	XXX_unrecognized     []byte     `json:"-" bson:"-"`
	XXX_sizecache        int32      `json:"-" bson:"-"`
}

func (m *GetNamespaceResp) Reset()         { *m = GetNamespaceResp{} }
func (m *GetNamespaceResp) String() string { return proto.CompactTextString(m) }
func (*GetNamespaceResp) ProtoMessage()    {}
func (*GetNamespaceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{61}
}

func (m *GetNamespaceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNamespaceResp.Unmarshal(m, b)
}
func (m *GetNamespaceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNamespaceResp.Marshal(b, m, deterministic)
}
func (m *GetNamespaceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNamespaceResp.Merge(m, src)
}
func (m *GetNamespaceResp) XXX_Size() int {
	return xxx_messageInfo_GetNamespaceResp.Size(m)
}
func (m *GetNamespaceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNamespaceResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetNamespaceResp proto.InternalMessageInfo

func (m *GetNamespaceResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetNamespaceResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetNamespaceResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetNamespaceResp) GetData() *Namespace {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListNamespaceReq struct {
	FederationClusterID  string   `protobuf:"bytes,1,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ProjectID            string   `protobuf:"bytes,2,opt,name=projectID,proto3" json:"projectID,omitempty"`
	BusinessID           string   `protobuf:"bytes,3,opt,name=businessID,proto3" json:"businessID,omitempty"`
	Offset               uint64   `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                uint64   `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListNamespaceReq) Reset()         { *m = ListNamespaceReq{} }
func (m *ListNamespaceReq) String() string { return proto.CompactTextString(m) }
func (*ListNamespaceReq) ProtoMessage()    {}
func (*ListNamespaceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{62}
}

func (m *ListNamespaceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNamespaceReq.Unmarshal(m, b)
}
func (m *ListNamespaceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNamespaceReq.Marshal(b, m, deterministic)
}
func (m *ListNamespaceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNamespaceReq.Merge(m, src)
}
func (m *ListNamespaceReq) XXX_Size() int {
	return xxx_messageInfo_ListNamespaceReq.Size(m)
}
func (m *ListNamespaceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNamespaceReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListNamespaceReq proto.InternalMessageInfo

func (m *ListNamespaceReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *ListNamespaceReq) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *ListNamespaceReq) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *ListNamespaceReq) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListNamespaceReq) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ListNamespaceResp struct {
	Code                 uint32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool         `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*Namespace `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-" bson:"-"`
	XXX_unrecognized     []byte       `json:"-" bson:"-"`
	XXX_sizecache        int32        `json:"-" bson:"-"`
}

func (m *ListNamespaceResp) Reset()         { *m = ListNamespaceResp{} }
func (m *ListNamespaceResp) String() string { return proto.CompactTextString(m) }
func (*ListNamespaceResp) ProtoMessage()    {}
func (*ListNamespaceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{63}
}

func (m *ListNamespaceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNamespaceResp.Unmarshal(m, b)
}
func (m *ListNamespaceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNamespaceResp.Marshal(b, m, deterministic)
}
func (m *ListNamespaceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNamespaceResp.Merge(m, src)
}
func (m *ListNamespaceResp) XXX_Size() int {
	return xxx_messageInfo_ListNamespaceResp.Size(m)
}
func (m *ListNamespaceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNamespaceResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListNamespaceResp proto.InternalMessageInfo

func (m *ListNamespaceResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListNamespaceResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListNamespaceResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListNamespaceResp) GetData() []*Namespace {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateNamespaceQuotaReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ClusterID            string   `protobuf:"bytes,3,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Region               string   `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	ResourceQuota        string   `protobuf:"bytes,5,opt,name=resourceQuota,proto3" json:"resourceQuota,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CreateNamespaceQuotaReq) Reset()         { *m = CreateNamespaceQuotaReq{} }
func (m *CreateNamespaceQuotaReq) String() string { return proto.CompactTextString(m) }
func (*CreateNamespaceQuotaReq) ProtoMessage()    {}
func (*CreateNamespaceQuotaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{64}
}

func (m *CreateNamespaceQuotaReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceQuotaReq.Unmarshal(m, b)
}
func (m *CreateNamespaceQuotaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceQuotaReq.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceQuotaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceQuotaReq.Merge(m, src)
}
func (m *CreateNamespaceQuotaReq) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceQuotaReq.Size(m)
}
func (m *CreateNamespaceQuotaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceQuotaReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceQuotaReq proto.InternalMessageInfo

func (m *CreateNamespaceQuotaReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *CreateNamespaceQuotaReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *CreateNamespaceQuotaReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *CreateNamespaceQuotaReq) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *CreateNamespaceQuotaReq) GetResourceQuota() string {
	if m != nil {
		return m.ResourceQuota
	}
	return ""
}

type CreateNamespaceQuotaResp struct {
	Code                 uint32                                                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                                                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                                                   `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                               `json:"-" bson:"-"`
	XXX_unrecognized     []byte                                                 `json:"-" bson:"-"`
	XXX_sizecache        int32                                                  `json:"-" bson:"-"`
}

func (m *CreateNamespaceQuotaResp) Reset()         { *m = CreateNamespaceQuotaResp{} }
func (m *CreateNamespaceQuotaResp) String() string { return proto.CompactTextString(m) }
func (*CreateNamespaceQuotaResp) ProtoMessage()    {}
func (*CreateNamespaceQuotaResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{65}
}

func (m *CreateNamespaceQuotaResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceQuotaResp.Unmarshal(m, b)
}
func (m *CreateNamespaceQuotaResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceQuotaResp.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceQuotaResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceQuotaResp.Merge(m, src)
}
func (m *CreateNamespaceQuotaResp) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceQuotaResp.Size(m)
}
func (m *CreateNamespaceQuotaResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceQuotaResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceQuotaResp proto.InternalMessageInfo

func (m *CreateNamespaceQuotaResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateNamespaceQuotaResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateNamespaceQuotaResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *CreateNamespaceQuotaResp) GetData() *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) Reset() {
	*m = CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData{}
}
func (m *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) String() string {
	return proto.CompactTextString(m)
}
func (*CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) ProtoMessage() {}
func (*CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{65, 0}
}

func (m *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData.Unmarshal(m, b)
}
func (m *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData.Merge(m, src)
}
func (m *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData.Size(m)
}
func (m *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData proto.InternalMessageInfo

func (m *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

type DeleteNamespaceQuotaReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ClusterID            string   `protobuf:"bytes,3,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	IsForced             bool     `protobuf:"varint,5,opt,name=isForced,proto3" json:"isForced,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteNamespaceQuotaReq) Reset()         { *m = DeleteNamespaceQuotaReq{} }
func (m *DeleteNamespaceQuotaReq) String() string { return proto.CompactTextString(m) }
func (*DeleteNamespaceQuotaReq) ProtoMessage()    {}
func (*DeleteNamespaceQuotaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{66}
}

func (m *DeleteNamespaceQuotaReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNamespaceQuotaReq.Unmarshal(m, b)
}
func (m *DeleteNamespaceQuotaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNamespaceQuotaReq.Marshal(b, m, deterministic)
}
func (m *DeleteNamespaceQuotaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNamespaceQuotaReq.Merge(m, src)
}
func (m *DeleteNamespaceQuotaReq) XXX_Size() int {
	return xxx_messageInfo_DeleteNamespaceQuotaReq.Size(m)
}
func (m *DeleteNamespaceQuotaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNamespaceQuotaReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNamespaceQuotaReq proto.InternalMessageInfo

func (m *DeleteNamespaceQuotaReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *DeleteNamespaceQuotaReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *DeleteNamespaceQuotaReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *DeleteNamespaceQuotaReq) GetIsForced() bool {
	if m != nil {
		return m.IsForced
	}
	return false
}

type DeleteNamespaceQuotaResp struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteNamespaceQuotaResp) Reset()         { *m = DeleteNamespaceQuotaResp{} }
func (m *DeleteNamespaceQuotaResp) String() string { return proto.CompactTextString(m) }
func (*DeleteNamespaceQuotaResp) ProtoMessage()    {}
func (*DeleteNamespaceQuotaResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{67}
}

func (m *DeleteNamespaceQuotaResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNamespaceQuotaResp.Unmarshal(m, b)
}
func (m *DeleteNamespaceQuotaResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNamespaceQuotaResp.Marshal(b, m, deterministic)
}
func (m *DeleteNamespaceQuotaResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNamespaceQuotaResp.Merge(m, src)
}
func (m *DeleteNamespaceQuotaResp) XXX_Size() int {
	return xxx_messageInfo_DeleteNamespaceQuotaResp.Size(m)
}
func (m *DeleteNamespaceQuotaResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNamespaceQuotaResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNamespaceQuotaResp proto.InternalMessageInfo

func (m *DeleteNamespaceQuotaResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteNamespaceQuotaResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteNamespaceQuotaResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type UpdateNamespaceQuotaReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ClusterID            string   `protobuf:"bytes,3,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ResourceQuota        string   `protobuf:"bytes,4,opt,name=resourceQuota,proto3" json:"resourceQuota,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateNamespaceQuotaReq) Reset()         { *m = UpdateNamespaceQuotaReq{} }
func (m *UpdateNamespaceQuotaReq) String() string { return proto.CompactTextString(m) }
func (*UpdateNamespaceQuotaReq) ProtoMessage()    {}
func (*UpdateNamespaceQuotaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{68}
}

func (m *UpdateNamespaceQuotaReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNamespaceQuotaReq.Unmarshal(m, b)
}
func (m *UpdateNamespaceQuotaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNamespaceQuotaReq.Marshal(b, m, deterministic)
}
func (m *UpdateNamespaceQuotaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNamespaceQuotaReq.Merge(m, src)
}
func (m *UpdateNamespaceQuotaReq) XXX_Size() int {
	return xxx_messageInfo_UpdateNamespaceQuotaReq.Size(m)
}
func (m *UpdateNamespaceQuotaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNamespaceQuotaReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNamespaceQuotaReq proto.InternalMessageInfo

func (m *UpdateNamespaceQuotaReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *UpdateNamespaceQuotaReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *UpdateNamespaceQuotaReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *UpdateNamespaceQuotaReq) GetResourceQuota() string {
	if m != nil {
		return m.ResourceQuota
	}
	return ""
}

type UpdateNamespaceQuotaResp struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateNamespaceQuotaResp) Reset()         { *m = UpdateNamespaceQuotaResp{} }
func (m *UpdateNamespaceQuotaResp) String() string { return proto.CompactTextString(m) }
func (*UpdateNamespaceQuotaResp) ProtoMessage()    {}
func (*UpdateNamespaceQuotaResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{69}
}

func (m *UpdateNamespaceQuotaResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNamespaceQuotaResp.Unmarshal(m, b)
}
func (m *UpdateNamespaceQuotaResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNamespaceQuotaResp.Marshal(b, m, deterministic)
}
func (m *UpdateNamespaceQuotaResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNamespaceQuotaResp.Merge(m, src)
}
func (m *UpdateNamespaceQuotaResp) XXX_Size() int {
	return xxx_messageInfo_UpdateNamespaceQuotaResp.Size(m)
}
func (m *UpdateNamespaceQuotaResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNamespaceQuotaResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNamespaceQuotaResp proto.InternalMessageInfo

func (m *UpdateNamespaceQuotaResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateNamespaceQuotaResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateNamespaceQuotaResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type GetNamespaceQuotaReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ClusterID            string   `protobuf:"bytes,3,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetNamespaceQuotaReq) Reset()         { *m = GetNamespaceQuotaReq{} }
func (m *GetNamespaceQuotaReq) String() string { return proto.CompactTextString(m) }
func (*GetNamespaceQuotaReq) ProtoMessage()    {}
func (*GetNamespaceQuotaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{70}
}

func (m *GetNamespaceQuotaReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNamespaceQuotaReq.Unmarshal(m, b)
}
func (m *GetNamespaceQuotaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNamespaceQuotaReq.Marshal(b, m, deterministic)
}
func (m *GetNamespaceQuotaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNamespaceQuotaReq.Merge(m, src)
}
func (m *GetNamespaceQuotaReq) XXX_Size() int {
	return xxx_messageInfo_GetNamespaceQuotaReq.Size(m)
}
func (m *GetNamespaceQuotaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNamespaceQuotaReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetNamespaceQuotaReq proto.InternalMessageInfo

func (m *GetNamespaceQuotaReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GetNamespaceQuotaReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *GetNamespaceQuotaReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

type GetNamespaceQuotaResp struct {
	Code                 uint32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool           `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *ResourceQuota `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-" bson:"-"`
	XXX_unrecognized     []byte         `json:"-" bson:"-"`
	XXX_sizecache        int32          `json:"-" bson:"-"`
}

func (m *GetNamespaceQuotaResp) Reset()         { *m = GetNamespaceQuotaResp{} }
func (m *GetNamespaceQuotaResp) String() string { return proto.CompactTextString(m) }
func (*GetNamespaceQuotaResp) ProtoMessage()    {}
func (*GetNamespaceQuotaResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{71}
}

func (m *GetNamespaceQuotaResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNamespaceQuotaResp.Unmarshal(m, b)
}
func (m *GetNamespaceQuotaResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNamespaceQuotaResp.Marshal(b, m, deterministic)
}
func (m *GetNamespaceQuotaResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNamespaceQuotaResp.Merge(m, src)
}
func (m *GetNamespaceQuotaResp) XXX_Size() int {
	return xxx_messageInfo_GetNamespaceQuotaResp.Size(m)
}
func (m *GetNamespaceQuotaResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNamespaceQuotaResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetNamespaceQuotaResp proto.InternalMessageInfo

func (m *GetNamespaceQuotaResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetNamespaceQuotaResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetNamespaceQuotaResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetNamespaceQuotaResp) GetData() *ResourceQuota {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListNamespaceQuotaReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	Offset               uint64   `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                uint64   `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListNamespaceQuotaReq) Reset()         { *m = ListNamespaceQuotaReq{} }
func (m *ListNamespaceQuotaReq) String() string { return proto.CompactTextString(m) }
func (*ListNamespaceQuotaReq) ProtoMessage()    {}
func (*ListNamespaceQuotaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{72}
}

func (m *ListNamespaceQuotaReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNamespaceQuotaReq.Unmarshal(m, b)
}
func (m *ListNamespaceQuotaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNamespaceQuotaReq.Marshal(b, m, deterministic)
}
func (m *ListNamespaceQuotaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNamespaceQuotaReq.Merge(m, src)
}
func (m *ListNamespaceQuotaReq) XXX_Size() int {
	return xxx_messageInfo_ListNamespaceQuotaReq.Size(m)
}
func (m *ListNamespaceQuotaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNamespaceQuotaReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListNamespaceQuotaReq proto.InternalMessageInfo

func (m *ListNamespaceQuotaReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ListNamespaceQuotaReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *ListNamespaceQuotaReq) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListNamespaceQuotaReq) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ListNamespaceQuotaResp struct {
	Code                 uint32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool             `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*ResourceQuota `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-" bson:"-"`
	XXX_unrecognized     []byte           `json:"-" bson:"-"`
	XXX_sizecache        int32            `json:"-" bson:"-"`
}

func (m *ListNamespaceQuotaResp) Reset()         { *m = ListNamespaceQuotaResp{} }
func (m *ListNamespaceQuotaResp) String() string { return proto.CompactTextString(m) }
func (*ListNamespaceQuotaResp) ProtoMessage()    {}
func (*ListNamespaceQuotaResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{73}
}

func (m *ListNamespaceQuotaResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNamespaceQuotaResp.Unmarshal(m, b)
}
func (m *ListNamespaceQuotaResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNamespaceQuotaResp.Marshal(b, m, deterministic)
}
func (m *ListNamespaceQuotaResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNamespaceQuotaResp.Merge(m, src)
}
func (m *ListNamespaceQuotaResp) XXX_Size() int {
	return xxx_messageInfo_ListNamespaceQuotaResp.Size(m)
}
func (m *ListNamespaceQuotaResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNamespaceQuotaResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListNamespaceQuotaResp proto.InternalMessageInfo

func (m *ListNamespaceQuotaResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListNamespaceQuotaResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListNamespaceQuotaResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListNamespaceQuotaResp) GetData() []*ResourceQuota {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateNamespaceWithQuotaReq struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FederationClusterID  string            `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ProjectID            string            `protobuf:"bytes,3,opt,name=projectID,proto3" json:"projectID,omitempty"`
	BusinessID           string            `protobuf:"bytes,4,opt,name=businessID,proto3" json:"businessID,omitempty"`
	Labels               map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ClusterID            string            `protobuf:"bytes,6,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Region               string            `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"`
	MaxQuota             string            `protobuf:"bytes,8,opt,name=maxQuota,proto3" json:"maxQuota,omitempty"`
	ResourceQuota        string            `protobuf:"bytes,9,opt,name=resourceQuota,proto3" json:"resourceQuota,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *CreateNamespaceWithQuotaReq) Reset()         { *m = CreateNamespaceWithQuotaReq{} }
func (m *CreateNamespaceWithQuotaReq) String() string { return proto.CompactTextString(m) }
func (*CreateNamespaceWithQuotaReq) ProtoMessage()    {}
func (*CreateNamespaceWithQuotaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{74}
}

func (m *CreateNamespaceWithQuotaReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceWithQuotaReq.Unmarshal(m, b)
}
func (m *CreateNamespaceWithQuotaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceWithQuotaReq.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceWithQuotaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceWithQuotaReq.Merge(m, src)
}
func (m *CreateNamespaceWithQuotaReq) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceWithQuotaReq.Size(m)
}
func (m *CreateNamespaceWithQuotaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceWithQuotaReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceWithQuotaReq proto.InternalMessageInfo

func (m *CreateNamespaceWithQuotaReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateNamespaceWithQuotaReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *CreateNamespaceWithQuotaReq) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *CreateNamespaceWithQuotaReq) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *CreateNamespaceWithQuotaReq) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateNamespaceWithQuotaReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *CreateNamespaceWithQuotaReq) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *CreateNamespaceWithQuotaReq) GetMaxQuota() string {
	if m != nil {
		return m.MaxQuota
	}
	return ""
}

func (m *CreateNamespaceWithQuotaReq) GetResourceQuota() string {
	if m != nil {
		return m.ResourceQuota
	}
	return ""
}

type CreateNamespaceWithQuotaResp struct {
	Code                 uint32                                                         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                                                         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                                                           `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                       `json:"-" bson:"-"`
	XXX_unrecognized     []byte                                                         `json:"-" bson:"-"`
	XXX_sizecache        int32                                                          `json:"-" bson:"-"`
}

func (m *CreateNamespaceWithQuotaResp) Reset()         { *m = CreateNamespaceWithQuotaResp{} }
func (m *CreateNamespaceWithQuotaResp) String() string { return proto.CompactTextString(m) }
func (*CreateNamespaceWithQuotaResp) ProtoMessage()    {}
func (*CreateNamespaceWithQuotaResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{75}
}

func (m *CreateNamespaceWithQuotaResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceWithQuotaResp.Unmarshal(m, b)
}
func (m *CreateNamespaceWithQuotaResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceWithQuotaResp.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceWithQuotaResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceWithQuotaResp.Merge(m, src)
}
func (m *CreateNamespaceWithQuotaResp) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceWithQuotaResp.Size(m)
}
func (m *CreateNamespaceWithQuotaResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceWithQuotaResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceWithQuotaResp proto.InternalMessageInfo

func (m *CreateNamespaceWithQuotaResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateNamespaceWithQuotaResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateNamespaceWithQuotaResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *CreateNamespaceWithQuotaResp) GetData() *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) Reset() {
	*m = CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData{}
}
func (m *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) String() string {
	return proto.CompactTextString(m)
}
func (*CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) ProtoMessage() {}
func (*CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{75, 0}
}

func (m *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData.Unmarshal(m, b)
}
func (m *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData.Merge(m, src)
}
func (m *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData.Size(m)
}
func (m *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData proto.InternalMessageInfo

func (m *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

type CreateProjectRequest struct {
	ProjectID            string                 `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Name                 string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	EnglishName          string                 `protobuf:"bytes,3,opt,name=englishName,proto3" json:"englishName,omitempty"`
	Creator              string                 `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`
	ProjectType          uint32                 `protobuf:"varint,6,opt,name=projectType,proto3" json:"projectType,omitempty"`
	UseBKRes             bool                   `protobuf:"varint,7,opt,name=useBKRes,proto3" json:"useBKRes,omitempty"`
	Description          string                 `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	IsOffline            bool                   `protobuf:"varint,9,opt,name=isOffline,proto3" json:"isOffline,omitempty"`
	Kind                 string                 `protobuf:"bytes,10,opt,name=kind,proto3" json:"kind,omitempty"`
	BusinessID           string                 `protobuf:"bytes,11,opt,name=businessID,proto3" json:"businessID,omitempty"`
	DeployType           uint32                 `protobuf:"varint,12,opt,name=deployType,proto3" json:"deployType,omitempty"`
	BgID                 string                 `protobuf:"bytes,13,opt,name=bgID,proto3" json:"bgID,omitempty"`
	BgName               string                 `protobuf:"bytes,14,opt,name=bgName,proto3" json:"bgName,omitempty"`
	DeptID               string                 `protobuf:"bytes,15,opt,name=deptID,proto3" json:"deptID,omitempty"`
	DeptName             string                 `protobuf:"bytes,16,opt,name=deptName,proto3" json:"deptName,omitempty"`
	CenterID             string                 `protobuf:"bytes,17,opt,name=centerID,proto3" json:"centerID,omitempty"`
	CenterName           string                 `protobuf:"bytes,18,opt,name=centerName,proto3" json:"centerName,omitempty"`
	IsSecret             bool                   `protobuf:"varint,19,opt,name=isSecret,proto3" json:"isSecret,omitempty"`
	Credentials          map[string]*Credential `protobuf:"bytes,20,rep,name=credentials,proto3" json:"credentials,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-" bson:"-"`
	XXX_unrecognized     []byte                 `json:"-" bson:"-"`
	XXX_sizecache        int32                  `json:"-" bson:"-"`
}

func (m *CreateProjectRequest) Reset()         { *m = CreateProjectRequest{} }
func (m *CreateProjectRequest) String() string { return proto.CompactTextString(m) }
func (*CreateProjectRequest) ProtoMessage()    {}
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{76}
}

func (m *CreateProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProjectRequest.Unmarshal(m, b)
}
func (m *CreateProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProjectRequest.Marshal(b, m, deterministic)
}
func (m *CreateProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProjectRequest.Merge(m, src)
}
func (m *CreateProjectRequest) XXX_Size() int {
	return xxx_messageInfo_CreateProjectRequest.Size(m)
}
func (m *CreateProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProjectRequest proto.InternalMessageInfo

func (m *CreateProjectRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *CreateProjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateProjectRequest) GetEnglishName() string {
	if m != nil {
		return m.EnglishName
	}
	return ""
}

func (m *CreateProjectRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CreateProjectRequest) GetProjectType() uint32 {
	if m != nil {
		return m.ProjectType
	}
	return 0
}

func (m *CreateProjectRequest) GetUseBKRes() bool {
	if m != nil {
		return m.UseBKRes
	}
	return false
}

func (m *CreateProjectRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateProjectRequest) GetIsOffline() bool {
	if m != nil {
		return m.IsOffline
	}
	return false
}

func (m *CreateProjectRequest) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *CreateProjectRequest) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *CreateProjectRequest) GetDeployType() uint32 {
	if m != nil {
		return m.DeployType
	}
	return 0
}

func (m *CreateProjectRequest) GetBgID() string {
	if m != nil {
		return m.BgID
	}
	return ""
}

func (m *CreateProjectRequest) GetBgName() string {
	if m != nil {
		return m.BgName
	}
	return ""
}

func (m *CreateProjectRequest) GetDeptID() string {
	if m != nil {
		return m.DeptID
	}
	return ""
}

func (m *CreateProjectRequest) GetDeptName() string {
	if m != nil {
		return m.DeptName
	}
	return ""
}

func (m *CreateProjectRequest) GetCenterID() string {
	if m != nil {
		return m.CenterID
	}
	return ""
}

func (m *CreateProjectRequest) GetCenterName() string {
	if m != nil {
		return m.CenterName
	}
	return ""
}

func (m *CreateProjectRequest) GetIsSecret() bool {
	if m != nil {
		return m.IsSecret
	}
	return false
}

func (m *CreateProjectRequest) GetCredentials() map[string]*Credential {
	if m != nil {
		return m.Credentials
	}
	return nil
}

type CreateProjectResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CreateProjectResponse) Reset()         { *m = CreateProjectResponse{} }
func (m *CreateProjectResponse) String() string { return proto.CompactTextString(m) }
func (*CreateProjectResponse) ProtoMessage()    {}
func (*CreateProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{77}
}

func (m *CreateProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProjectResponse.Unmarshal(m, b)
}
func (m *CreateProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProjectResponse.Marshal(b, m, deterministic)
}
func (m *CreateProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProjectResponse.Merge(m, src)
}
func (m *CreateProjectResponse) XXX_Size() int {
	return xxx_messageInfo_CreateProjectResponse.Size(m)
}
func (m *CreateProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProjectResponse proto.InternalMessageInfo

func (m *CreateProjectResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateProjectResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateProjectResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type UpdateProjectRequest struct {
	ProjectID            string                 `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Name                 string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Updater              string                 `protobuf:"bytes,4,opt,name=updater,proto3" json:"updater,omitempty"`
	ProjectType          uint32                 `protobuf:"varint,6,opt,name=projectType,proto3" json:"projectType,omitempty"`
	UseBKRes             *wrappers.BoolValue    `protobuf:"bytes,7,opt,name=useBKRes,proto3" json:"useBKRes,omitempty"`
	Description          string                 `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	IsOffline            *wrappers.BoolValue    `protobuf:"bytes,9,opt,name=isOffline,proto3" json:"isOffline,omitempty"`
	Kind                 string                 `protobuf:"bytes,10,opt,name=kind,proto3" json:"kind,omitempty"`
	DeployType           uint32                 `protobuf:"varint,12,opt,name=deployType,proto3" json:"deployType,omitempty"`
	BgID                 string                 `protobuf:"bytes,13,opt,name=bgID,proto3" json:"bgID,omitempty"`
	BgName               string                 `protobuf:"bytes,14,opt,name=bgName,proto3" json:"bgName,omitempty"`
	DeptID               string                 `protobuf:"bytes,15,opt,name=deptID,proto3" json:"deptID,omitempty"`
	DeptName             string                 `protobuf:"bytes,16,opt,name=deptName,proto3" json:"deptName,omitempty"`
	CenterID             string                 `protobuf:"bytes,17,opt,name=centerID,proto3" json:"centerID,omitempty"`
	CenterName           string                 `protobuf:"bytes,18,opt,name=centerName,proto3" json:"centerName,omitempty"`
	IsSecret             *wrappers.BoolValue    `protobuf:"bytes,19,opt,name=isSecret,proto3" json:"isSecret,omitempty"`
	Credentials          map[string]*Credential `protobuf:"bytes,20,rep,name=credentials,proto3" json:"credentials,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	BusinessID           string                 `protobuf:"bytes,21,opt,name=businessID,proto3" json:"businessID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-" bson:"-"`
	XXX_unrecognized     []byte                 `json:"-" bson:"-"`
	XXX_sizecache        int32                  `json:"-" bson:"-"`
}

func (m *UpdateProjectRequest) Reset()         { *m = UpdateProjectRequest{} }
func (m *UpdateProjectRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateProjectRequest) ProtoMessage()    {}
func (*UpdateProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{78}
}

func (m *UpdateProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProjectRequest.Unmarshal(m, b)
}
func (m *UpdateProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProjectRequest.Marshal(b, m, deterministic)
}
func (m *UpdateProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProjectRequest.Merge(m, src)
}
func (m *UpdateProjectRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateProjectRequest.Size(m)
}
func (m *UpdateProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProjectRequest proto.InternalMessageInfo

func (m *UpdateProjectRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *UpdateProjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateProjectRequest) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *UpdateProjectRequest) GetProjectType() uint32 {
	if m != nil {
		return m.ProjectType
	}
	return 0
}

func (m *UpdateProjectRequest) GetUseBKRes() *wrappers.BoolValue {
	if m != nil {
		return m.UseBKRes
	}
	return nil
}

func (m *UpdateProjectRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdateProjectRequest) GetIsOffline() *wrappers.BoolValue {
	if m != nil {
		return m.IsOffline
	}
	return nil
}

func (m *UpdateProjectRequest) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *UpdateProjectRequest) GetDeployType() uint32 {
	if m != nil {
		return m.DeployType
	}
	return 0
}

func (m *UpdateProjectRequest) GetBgID() string {
	if m != nil {
		return m.BgID
	}
	return ""
}

func (m *UpdateProjectRequest) GetBgName() string {
	if m != nil {
		return m.BgName
	}
	return ""
}

func (m *UpdateProjectRequest) GetDeptID() string {
	if m != nil {
		return m.DeptID
	}
	return ""
}

func (m *UpdateProjectRequest) GetDeptName() string {
	if m != nil {
		return m.DeptName
	}
	return ""
}

func (m *UpdateProjectRequest) GetCenterID() string {
	if m != nil {
		return m.CenterID
	}
	return ""
}

func (m *UpdateProjectRequest) GetCenterName() string {
	if m != nil {
		return m.CenterName
	}
	return ""
}

func (m *UpdateProjectRequest) GetIsSecret() *wrappers.BoolValue {
	if m != nil {
		return m.IsSecret
	}
	return nil
}

func (m *UpdateProjectRequest) GetCredentials() map[string]*Credential {
	if m != nil {
		return m.Credentials
	}
	return nil
}

func (m *UpdateProjectRequest) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

type UpdateProjectResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Project `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateProjectResponse) Reset()         { *m = UpdateProjectResponse{} }
func (m *UpdateProjectResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateProjectResponse) ProtoMessage()    {}
func (*UpdateProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{79}
}

func (m *UpdateProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProjectResponse.Unmarshal(m, b)
}
func (m *UpdateProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProjectResponse.Marshal(b, m, deterministic)
}
func (m *UpdateProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProjectResponse.Merge(m, src)
}
func (m *UpdateProjectResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateProjectResponse.Size(m)
}
func (m *UpdateProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProjectResponse proto.InternalMessageInfo

func (m *UpdateProjectResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateProjectResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateProjectResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *UpdateProjectResponse) GetData() *Project {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteProjectRequest struct {
	ProjectID            string   `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	IsForce              bool     `protobuf:"varint,2,opt,name=isForce,proto3" json:"isForce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteProjectRequest) Reset()         { *m = DeleteProjectRequest{} }
func (m *DeleteProjectRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteProjectRequest) ProtoMessage()    {}
func (*DeleteProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{80}
}

func (m *DeleteProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteProjectRequest.Unmarshal(m, b)
}
func (m *DeleteProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteProjectRequest.Marshal(b, m, deterministic)
}
func (m *DeleteProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteProjectRequest.Merge(m, src)
}
func (m *DeleteProjectRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteProjectRequest.Size(m)
}
func (m *DeleteProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteProjectRequest proto.InternalMessageInfo

func (m *DeleteProjectRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *DeleteProjectRequest) GetIsForce() bool {
	if m != nil {
		return m.IsForce
	}
	return false
}

type DeleteProjectResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Project `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteProjectResponse) Reset()         { *m = DeleteProjectResponse{} }
func (m *DeleteProjectResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteProjectResponse) ProtoMessage()    {}
func (*DeleteProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{81}
}

func (m *DeleteProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteProjectResponse.Unmarshal(m, b)
}
func (m *DeleteProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteProjectResponse.Marshal(b, m, deterministic)
}
func (m *DeleteProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteProjectResponse.Merge(m, src)
}
func (m *DeleteProjectResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteProjectResponse.Size(m)
}
func (m *DeleteProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteProjectResponse proto.InternalMessageInfo

func (m *DeleteProjectResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteProjectResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteProjectResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *DeleteProjectResponse) GetData() *Project {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetProjectRequest struct {
	ProjectID            string   `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetProjectRequest) Reset()         { *m = GetProjectRequest{} }
func (m *GetProjectRequest) String() string { return proto.CompactTextString(m) }
func (*GetProjectRequest) ProtoMessage()    {}
func (*GetProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{82}
}

func (m *GetProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectRequest.Unmarshal(m, b)
}
func (m *GetProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectRequest.Marshal(b, m, deterministic)
}
func (m *GetProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectRequest.Merge(m, src)
}
func (m *GetProjectRequest) XXX_Size() int {
	return xxx_messageInfo_GetProjectRequest.Size(m)
}
func (m *GetProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectRequest proto.InternalMessageInfo

func (m *GetProjectRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

type GetProjectResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Project `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetProjectResponse) Reset()         { *m = GetProjectResponse{} }
func (m *GetProjectResponse) String() string { return proto.CompactTextString(m) }
func (*GetProjectResponse) ProtoMessage()    {}
func (*GetProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{83}
}

func (m *GetProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectResponse.Unmarshal(m, b)
}
func (m *GetProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectResponse.Marshal(b, m, deterministic)
}
func (m *GetProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectResponse.Merge(m, src)
}
func (m *GetProjectResponse) XXX_Size() int {
	return xxx_messageInfo_GetProjectResponse.Size(m)
}
func (m *GetProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectResponse proto.InternalMessageInfo

func (m *GetProjectResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetProjectResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetProjectResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetProjectResponse) GetData() *Project {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListProjectRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	EnglishName          string   `protobuf:"bytes,2,opt,name=englishName,proto3" json:"englishName,omitempty"`
	ProjectType          uint32   `protobuf:"varint,3,opt,name=projectType,proto3" json:"projectType,omitempty"`
	UseBKRes             bool     `protobuf:"varint,4,opt,name=useBKRes,proto3" json:"useBKRes,omitempty"`
	IsOffline            bool     `protobuf:"varint,5,opt,name=isOffline,proto3" json:"isOffline,omitempty"`
	Kind                 string   `protobuf:"bytes,6,opt,name=kind,proto3" json:"kind,omitempty"`
	BusinessID           string   `protobuf:"bytes,7,opt,name=businessID,proto3" json:"businessID,omitempty"`
	DeployType           string   `protobuf:"bytes,8,opt,name=deployType,proto3" json:"deployType,omitempty"`
	BgID                 string   `protobuf:"bytes,9,opt,name=bgID,proto3" json:"bgID,omitempty"`
	BgName               string   `protobuf:"bytes,10,opt,name=bgName,proto3" json:"bgName,omitempty"`
	DeptID               string   `protobuf:"bytes,11,opt,name=deptID,proto3" json:"deptID,omitempty"`
	DeptName             string   `protobuf:"bytes,12,opt,name=deptName,proto3" json:"deptName,omitempty"`
	CenterID             string   `protobuf:"bytes,13,opt,name=centerID,proto3" json:"centerID,omitempty"`
	CenterName           string   `protobuf:"bytes,14,opt,name=centerName,proto3" json:"centerName,omitempty"`
	IsSecret             bool     `protobuf:"varint,15,opt,name=isSecret,proto3" json:"isSecret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListProjectRequest) Reset()         { *m = ListProjectRequest{} }
func (m *ListProjectRequest) String() string { return proto.CompactTextString(m) }
func (*ListProjectRequest) ProtoMessage()    {}
func (*ListProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{84}
}

func (m *ListProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectRequest.Unmarshal(m, b)
}
func (m *ListProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectRequest.Marshal(b, m, deterministic)
}
func (m *ListProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectRequest.Merge(m, src)
}
func (m *ListProjectRequest) XXX_Size() int {
	return xxx_messageInfo_ListProjectRequest.Size(m)
}
func (m *ListProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectRequest proto.InternalMessageInfo

func (m *ListProjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListProjectRequest) GetEnglishName() string {
	if m != nil {
		return m.EnglishName
	}
	return ""
}

func (m *ListProjectRequest) GetProjectType() uint32 {
	if m != nil {
		return m.ProjectType
	}
	return 0
}

func (m *ListProjectRequest) GetUseBKRes() bool {
	if m != nil {
		return m.UseBKRes
	}
	return false
}

func (m *ListProjectRequest) GetIsOffline() bool {
	if m != nil {
		return m.IsOffline
	}
	return false
}

func (m *ListProjectRequest) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *ListProjectRequest) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *ListProjectRequest) GetDeployType() string {
	if m != nil {
		return m.DeployType
	}
	return ""
}

func (m *ListProjectRequest) GetBgID() string {
	if m != nil {
		return m.BgID
	}
	return ""
}

func (m *ListProjectRequest) GetBgName() string {
	if m != nil {
		return m.BgName
	}
	return ""
}

func (m *ListProjectRequest) GetDeptID() string {
	if m != nil {
		return m.DeptID
	}
	return ""
}

func (m *ListProjectRequest) GetDeptName() string {
	if m != nil {
		return m.DeptName
	}
	return ""
}

func (m *ListProjectRequest) GetCenterID() string {
	if m != nil {
		return m.CenterID
	}
	return ""
}

func (m *ListProjectRequest) GetCenterName() string {
	if m != nil {
		return m.CenterName
	}
	return ""
}

func (m *ListProjectRequest) GetIsSecret() bool {
	if m != nil {
		return m.IsSecret
	}
	return false
}

type ListProjectResponse struct {
	Code                 uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool       `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*Project `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-" bson:"-"`
	XXX_unrecognized     []byte     `json:"-" bson:"-"`
	XXX_sizecache        int32      `json:"-" bson:"-"`
}

func (m *ListProjectResponse) Reset()         { *m = ListProjectResponse{} }
func (m *ListProjectResponse) String() string { return proto.CompactTextString(m) }
func (*ListProjectResponse) ProtoMessage()    {}
func (*ListProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{85}
}

func (m *ListProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectResponse.Unmarshal(m, b)
}
func (m *ListProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectResponse.Marshal(b, m, deterministic)
}
func (m *ListProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectResponse.Merge(m, src)
}
func (m *ListProjectResponse) XXX_Size() int {
	return xxx_messageInfo_ListProjectResponse.Size(m)
}
func (m *ListProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectResponse proto.InternalMessageInfo

func (m *ListProjectResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListProjectResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListProjectResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListProjectResponse) GetData() []*Project {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateCloudRequest struct {
	CloudID              string                  `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	Name                 string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Editable             bool                    `protobuf:"varint,3,opt,name=editable,proto3" json:"editable,omitempty"`
	OpsPlugins           map[string]*BKOpsPlugin `protobuf:"bytes,4,rep,name=opsPlugins,proto3" json:"opsPlugins,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ExtraPlugins         map[string]*BKOpsPlugin `protobuf:"bytes,5,rep,name=extraPlugins,proto3" json:"extraPlugins,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CloudCredential      *Credential             `protobuf:"bytes,6,opt,name=cloudCredential,proto3" json:"cloudCredential,omitempty"`
	OsManagement         *OSInfo                 `protobuf:"bytes,7,opt,name=osManagement,proto3" json:"osManagement,omitempty"`
	ClusterManagement    *ClusterMgr             `protobuf:"bytes,8,opt,name=clusterManagement,proto3" json:"clusterManagement,omitempty"`
	NodeGroupManagement  *NodeGroupMgr           `protobuf:"bytes,10,opt,name=nodeGroupManagement,proto3" json:"nodeGroupManagement,omitempty"`
	Creator              string                  `protobuf:"bytes,11,opt,name=creator,proto3" json:"creator,omitempty"`
	CloudProvider        string                  `protobuf:"bytes,12,opt,name=cloudProvider,proto3" json:"cloudProvider,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-" bson:"-"`
	XXX_unrecognized     []byte                  `json:"-" bson:"-"`
	XXX_sizecache        int32                   `json:"-" bson:"-"`
}

func (m *CreateCloudRequest) Reset()         { *m = CreateCloudRequest{} }
func (m *CreateCloudRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCloudRequest) ProtoMessage()    {}
func (*CreateCloudRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{86}
}

func (m *CreateCloudRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCloudRequest.Unmarshal(m, b)
}
func (m *CreateCloudRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCloudRequest.Marshal(b, m, deterministic)
}
func (m *CreateCloudRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCloudRequest.Merge(m, src)
}
func (m *CreateCloudRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCloudRequest.Size(m)
}
func (m *CreateCloudRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCloudRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCloudRequest proto.InternalMessageInfo

func (m *CreateCloudRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *CreateCloudRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateCloudRequest) GetEditable() bool {
	if m != nil {
		return m.Editable
	}
	return false
}

func (m *CreateCloudRequest) GetOpsPlugins() map[string]*BKOpsPlugin {
	if m != nil {
		return m.OpsPlugins
	}
	return nil
}

func (m *CreateCloudRequest) GetExtraPlugins() map[string]*BKOpsPlugin {
	if m != nil {
		return m.ExtraPlugins
	}
	return nil
}

func (m *CreateCloudRequest) GetCloudCredential() *Credential {
	if m != nil {
		return m.CloudCredential
	}
	return nil
}

func (m *CreateCloudRequest) GetOsManagement() *OSInfo {
	if m != nil {
		return m.OsManagement
	}
	return nil
}

func (m *CreateCloudRequest) GetClusterManagement() *ClusterMgr {
	if m != nil {
		return m.ClusterManagement
	}
	return nil
}

func (m *CreateCloudRequest) GetNodeGroupManagement() *NodeGroupMgr {
	if m != nil {
		return m.NodeGroupManagement
	}
	return nil
}

func (m *CreateCloudRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CreateCloudRequest) GetCloudProvider() string {
	if m != nil {
		return m.CloudProvider
	}
	return ""
}

type CreateCloudResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CreateCloudResponse) Reset()         { *m = CreateCloudResponse{} }
func (m *CreateCloudResponse) String() string { return proto.CompactTextString(m) }
func (*CreateCloudResponse) ProtoMessage()    {}
func (*CreateCloudResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{87}
}

func (m *CreateCloudResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCloudResponse.Unmarshal(m, b)
}
func (m *CreateCloudResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCloudResponse.Marshal(b, m, deterministic)
}
func (m *CreateCloudResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCloudResponse.Merge(m, src)
}
func (m *CreateCloudResponse) XXX_Size() int {
	return xxx_messageInfo_CreateCloudResponse.Size(m)
}
func (m *CreateCloudResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCloudResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCloudResponse proto.InternalMessageInfo

func (m *CreateCloudResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateCloudResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateCloudResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type UpdateCloudRequest struct {
	CloudID              string                  `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	Name                 string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Editable             bool                    `protobuf:"varint,3,opt,name=editable,proto3" json:"editable,omitempty"`
	OpsPlugins           map[string]*BKOpsPlugin `protobuf:"bytes,4,rep,name=opsPlugins,proto3" json:"opsPlugins,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ExtraPlugins         map[string]*BKOpsPlugin `protobuf:"bytes,5,rep,name=extraPlugins,proto3" json:"extraPlugins,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CloudCredential      *Credential             `protobuf:"bytes,6,opt,name=cloudCredential,proto3" json:"cloudCredential,omitempty"`
	OsManagement         *OSInfo                 `protobuf:"bytes,7,opt,name=osManagement,proto3" json:"osManagement,omitempty"`
	ClusterManagement    *ClusterMgr             `protobuf:"bytes,8,opt,name=clusterManagement,proto3" json:"clusterManagement,omitempty"`
	NodeGroupManagement  *NodeGroupMgr           `protobuf:"bytes,10,opt,name=nodeGroupManagement,proto3" json:"nodeGroupManagement,omitempty"`
	Updater              string                  `protobuf:"bytes,11,opt,name=updater,proto3" json:"updater,omitempty"`
	CloudProvider        string                  `protobuf:"bytes,12,opt,name=cloudProvider,proto3" json:"cloudProvider,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-" bson:"-"`
	XXX_unrecognized     []byte                  `json:"-" bson:"-"`
	XXX_sizecache        int32                   `json:"-" bson:"-"`
}

func (m *UpdateCloudRequest) Reset()         { *m = UpdateCloudRequest{} }
func (m *UpdateCloudRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCloudRequest) ProtoMessage()    {}
func (*UpdateCloudRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{88}
}

func (m *UpdateCloudRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCloudRequest.Unmarshal(m, b)
}
func (m *UpdateCloudRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCloudRequest.Marshal(b, m, deterministic)
}
func (m *UpdateCloudRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCloudRequest.Merge(m, src)
}
func (m *UpdateCloudRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCloudRequest.Size(m)
}
func (m *UpdateCloudRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCloudRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCloudRequest proto.InternalMessageInfo

func (m *UpdateCloudRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *UpdateCloudRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateCloudRequest) GetEditable() bool {
	if m != nil {
		return m.Editable
	}
	return false
}

func (m *UpdateCloudRequest) GetOpsPlugins() map[string]*BKOpsPlugin {
	if m != nil {
		return m.OpsPlugins
	}
	return nil
}

func (m *UpdateCloudRequest) GetExtraPlugins() map[string]*BKOpsPlugin {
	if m != nil {
		return m.ExtraPlugins
	}
	return nil
}

func (m *UpdateCloudRequest) GetCloudCredential() *Credential {
	if m != nil {
		return m.CloudCredential
	}
	return nil
}

func (m *UpdateCloudRequest) GetOsManagement() *OSInfo {
	if m != nil {
		return m.OsManagement
	}
	return nil
}

func (m *UpdateCloudRequest) GetClusterManagement() *ClusterMgr {
	if m != nil {
		return m.ClusterManagement
	}
	return nil
}

func (m *UpdateCloudRequest) GetNodeGroupManagement() *NodeGroupMgr {
	if m != nil {
		return m.NodeGroupManagement
	}
	return nil
}

func (m *UpdateCloudRequest) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *UpdateCloudRequest) GetCloudProvider() string {
	if m != nil {
		return m.CloudProvider
	}
	return ""
}

type UpdateCloudResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Cloud   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateCloudResponse) Reset()         { *m = UpdateCloudResponse{} }
func (m *UpdateCloudResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateCloudResponse) ProtoMessage()    {}
func (*UpdateCloudResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{89}
}

func (m *UpdateCloudResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCloudResponse.Unmarshal(m, b)
}
func (m *UpdateCloudResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCloudResponse.Marshal(b, m, deterministic)
}
func (m *UpdateCloudResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCloudResponse.Merge(m, src)
}
func (m *UpdateCloudResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateCloudResponse.Size(m)
}
func (m *UpdateCloudResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCloudResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCloudResponse proto.InternalMessageInfo

func (m *UpdateCloudResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateCloudResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateCloudResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *UpdateCloudResponse) GetData() *Cloud {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteCloudRequest struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	IsForce              bool     `protobuf:"varint,2,opt,name=isForce,proto3" json:"isForce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteCloudRequest) Reset()         { *m = DeleteCloudRequest{} }
func (m *DeleteCloudRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCloudRequest) ProtoMessage()    {}
func (*DeleteCloudRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{90}
}

func (m *DeleteCloudRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCloudRequest.Unmarshal(m, b)
}
func (m *DeleteCloudRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCloudRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCloudRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCloudRequest.Merge(m, src)
}
func (m *DeleteCloudRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCloudRequest.Size(m)
}
func (m *DeleteCloudRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCloudRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCloudRequest proto.InternalMessageInfo

func (m *DeleteCloudRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *DeleteCloudRequest) GetIsForce() bool {
	if m != nil {
		return m.IsForce
	}
	return false
}

type DeleteCloudResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Cloud   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteCloudResponse) Reset()         { *m = DeleteCloudResponse{} }
func (m *DeleteCloudResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteCloudResponse) ProtoMessage()    {}
func (*DeleteCloudResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{91}
}

func (m *DeleteCloudResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCloudResponse.Unmarshal(m, b)
}
func (m *DeleteCloudResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCloudResponse.Marshal(b, m, deterministic)
}
func (m *DeleteCloudResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCloudResponse.Merge(m, src)
}
func (m *DeleteCloudResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteCloudResponse.Size(m)
}
func (m *DeleteCloudResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCloudResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCloudResponse proto.InternalMessageInfo

func (m *DeleteCloudResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteCloudResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteCloudResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *DeleteCloudResponse) GetData() *Cloud {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetCloudRequest struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetCloudRequest) Reset()         { *m = GetCloudRequest{} }
func (m *GetCloudRequest) String() string { return proto.CompactTextString(m) }
func (*GetCloudRequest) ProtoMessage()    {}
func (*GetCloudRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{92}
}

func (m *GetCloudRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCloudRequest.Unmarshal(m, b)
}
func (m *GetCloudRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCloudRequest.Marshal(b, m, deterministic)
}
func (m *GetCloudRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCloudRequest.Merge(m, src)
}
func (m *GetCloudRequest) XXX_Size() int {
	return xxx_messageInfo_GetCloudRequest.Size(m)
}
func (m *GetCloudRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCloudRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCloudRequest proto.InternalMessageInfo

func (m *GetCloudRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

type GetCloudResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Cloud   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetCloudResponse) Reset()         { *m = GetCloudResponse{} }
func (m *GetCloudResponse) String() string { return proto.CompactTextString(m) }
func (*GetCloudResponse) ProtoMessage()    {}
func (*GetCloudResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{93}
}

func (m *GetCloudResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCloudResponse.Unmarshal(m, b)
}
func (m *GetCloudResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCloudResponse.Marshal(b, m, deterministic)
}
func (m *GetCloudResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCloudResponse.Merge(m, src)
}
func (m *GetCloudResponse) XXX_Size() int {
	return xxx_messageInfo_GetCloudResponse.Size(m)
}
func (m *GetCloudResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCloudResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCloudResponse proto.InternalMessageInfo

func (m *GetCloudResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetCloudResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetCloudResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetCloudResponse) GetData() *Cloud {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListCloudRequest struct {
	CloudID              string   `protobuf:"bytes,1,opt,name=cloudID,proto3" json:"cloudID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Editable             bool     `protobuf:"varint,3,opt,name=editable,proto3" json:"editable,omitempty"`
	Creator              string   `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`
	Updater              string   `protobuf:"bytes,5,opt,name=updater,proto3" json:"updater,omitempty"`
	CloudProvider        string   `protobuf:"bytes,6,opt,name=cloudProvider,proto3" json:"cloudProvider,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListCloudRequest) Reset()         { *m = ListCloudRequest{} }
func (m *ListCloudRequest) String() string { return proto.CompactTextString(m) }
func (*ListCloudRequest) ProtoMessage()    {}
func (*ListCloudRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{94}
}

func (m *ListCloudRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCloudRequest.Unmarshal(m, b)
}
func (m *ListCloudRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCloudRequest.Marshal(b, m, deterministic)
}
func (m *ListCloudRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCloudRequest.Merge(m, src)
}
func (m *ListCloudRequest) XXX_Size() int {
	return xxx_messageInfo_ListCloudRequest.Size(m)
}
func (m *ListCloudRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCloudRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCloudRequest proto.InternalMessageInfo

func (m *ListCloudRequest) GetCloudID() string {
	if m != nil {
		return m.CloudID
	}
	return ""
}

func (m *ListCloudRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListCloudRequest) GetEditable() bool {
	if m != nil {
		return m.Editable
	}
	return false
}

func (m *ListCloudRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *ListCloudRequest) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *ListCloudRequest) GetCloudProvider() string {
	if m != nil {
		return m.CloudProvider
	}
	return ""
}

type ListCloudResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*Cloud `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListCloudResponse) Reset()         { *m = ListCloudResponse{} }
func (m *ListCloudResponse) String() string { return proto.CompactTextString(m) }
func (*ListCloudResponse) ProtoMessage()    {}
func (*ListCloudResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{95}
}

func (m *ListCloudResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCloudResponse.Unmarshal(m, b)
}
func (m *ListCloudResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCloudResponse.Marshal(b, m, deterministic)
}
func (m *ListCloudResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCloudResponse.Merge(m, src)
}
func (m *ListCloudResponse) XXX_Size() int {
	return xxx_messageInfo_ListCloudResponse.Size(m)
}
func (m *ListCloudResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCloudResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCloudResponse proto.InternalMessageInfo

func (m *ListCloudResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListCloudResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListCloudResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListCloudResponse) GetData() []*Cloud {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateNodeGroupRequest struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ClusterID            string               `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Region               string               `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	EnableAutoscale      bool                 `protobuf:"varint,4,opt,name=enableAutoscale,proto3" json:"enableAutoscale,omitempty"`
	AutoScaling          *AutoScalingGroup    `protobuf:"bytes,5,opt,name=autoScaling,proto3" json:"autoScaling,omitempty"`
	LaunchTemplate       *LaunchConfiguration `protobuf:"bytes,6,opt,name=launchTemplate,proto3" json:"launchTemplate,omitempty"`
	Labels               map[string]string    `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Taints               map[string]string    `protobuf:"bytes,8,rep,name=taints,proto3" json:"taints,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NodeOS               string               `protobuf:"bytes,9,opt,name=nodeOS,proto3" json:"nodeOS,omitempty"`
	Creator              string               `protobuf:"bytes,10,opt,name=creator,proto3" json:"creator,omitempty"`
	Provider             string               `protobuf:"bytes,11,opt,name=provider,proto3" json:"provider,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *CreateNodeGroupRequest) Reset()         { *m = CreateNodeGroupRequest{} }
func (m *CreateNodeGroupRequest) String() string { return proto.CompactTextString(m) }
func (*CreateNodeGroupRequest) ProtoMessage()    {}
func (*CreateNodeGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{96}
}

func (m *CreateNodeGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNodeGroupRequest.Unmarshal(m, b)
}
func (m *CreateNodeGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNodeGroupRequest.Marshal(b, m, deterministic)
}
func (m *CreateNodeGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNodeGroupRequest.Merge(m, src)
}
func (m *CreateNodeGroupRequest) XXX_Size() int {
	return xxx_messageInfo_CreateNodeGroupRequest.Size(m)
}
func (m *CreateNodeGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNodeGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNodeGroupRequest proto.InternalMessageInfo

func (m *CreateNodeGroupRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateNodeGroupRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *CreateNodeGroupRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *CreateNodeGroupRequest) GetEnableAutoscale() bool {
	if m != nil {
		return m.EnableAutoscale
	}
	return false
}

func (m *CreateNodeGroupRequest) GetAutoScaling() *AutoScalingGroup {
	if m != nil {
		return m.AutoScaling
	}
	return nil
}

func (m *CreateNodeGroupRequest) GetLaunchTemplate() *LaunchConfiguration {
	if m != nil {
		return m.LaunchTemplate
	}
	return nil
}

func (m *CreateNodeGroupRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateNodeGroupRequest) GetTaints() map[string]string {
	if m != nil {
		return m.Taints
	}
	return nil
}

func (m *CreateNodeGroupRequest) GetNodeOS() string {
	if m != nil {
		return m.NodeOS
	}
	return ""
}

func (m *CreateNodeGroupRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CreateNodeGroupRequest) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

type CreateNodeGroupResponse struct {
	Code                 uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool       `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *NodeGroup `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-" bson:"-"`
	XXX_unrecognized     []byte     `json:"-" bson:"-"`
	XXX_sizecache        int32      `json:"-" bson:"-"`
}

func (m *CreateNodeGroupResponse) Reset()         { *m = CreateNodeGroupResponse{} }
func (m *CreateNodeGroupResponse) String() string { return proto.CompactTextString(m) }
func (*CreateNodeGroupResponse) ProtoMessage()    {}
func (*CreateNodeGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{97}
}

func (m *CreateNodeGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNodeGroupResponse.Unmarshal(m, b)
}
func (m *CreateNodeGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNodeGroupResponse.Marshal(b, m, deterministic)
}
func (m *CreateNodeGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNodeGroupResponse.Merge(m, src)
}
func (m *CreateNodeGroupResponse) XXX_Size() int {
	return xxx_messageInfo_CreateNodeGroupResponse.Size(m)
}
func (m *CreateNodeGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNodeGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNodeGroupResponse proto.InternalMessageInfo

func (m *CreateNodeGroupResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateNodeGroupResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateNodeGroupResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *CreateNodeGroupResponse) GetData() *NodeGroup {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateNodeGroupRequest struct {
	NodeGroupID          string               `protobuf:"bytes,1,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ClusterID            string               `protobuf:"bytes,3,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Region               string               `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	EnableAutoscale      *wrappers.BoolValue  `protobuf:"bytes,5,opt,name=enableAutoscale,proto3" json:"enableAutoscale,omitempty"`
	AutoScaling          *AutoScalingGroup    `protobuf:"bytes,6,opt,name=autoScaling,proto3" json:"autoScaling,omitempty"`
	LaunchTemplate       *LaunchConfiguration `protobuf:"bytes,7,opt,name=launchTemplate,proto3" json:"launchTemplate,omitempty"`
	Labels               map[string]string    `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Taints               map[string]string    `protobuf:"bytes,9,rep,name=taints,proto3" json:"taints,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NodeOS               string               `protobuf:"bytes,10,opt,name=nodeOS,proto3" json:"nodeOS,omitempty"`
	Updater              string               `protobuf:"bytes,11,opt,name=updater,proto3" json:"updater,omitempty"`
	Provider             string               `protobuf:"bytes,12,opt,name=provider,proto3" json:"provider,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *UpdateNodeGroupRequest) Reset()         { *m = UpdateNodeGroupRequest{} }
func (m *UpdateNodeGroupRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateNodeGroupRequest) ProtoMessage()    {}
func (*UpdateNodeGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{98}
}

func (m *UpdateNodeGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNodeGroupRequest.Unmarshal(m, b)
}
func (m *UpdateNodeGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNodeGroupRequest.Marshal(b, m, deterministic)
}
func (m *UpdateNodeGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNodeGroupRequest.Merge(m, src)
}
func (m *UpdateNodeGroupRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateNodeGroupRequest.Size(m)
}
func (m *UpdateNodeGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNodeGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNodeGroupRequest proto.InternalMessageInfo

func (m *UpdateNodeGroupRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *UpdateNodeGroupRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateNodeGroupRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *UpdateNodeGroupRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *UpdateNodeGroupRequest) GetEnableAutoscale() *wrappers.BoolValue {
	if m != nil {
		return m.EnableAutoscale
	}
	return nil
}

func (m *UpdateNodeGroupRequest) GetAutoScaling() *AutoScalingGroup {
	if m != nil {
		return m.AutoScaling
	}
	return nil
}

func (m *UpdateNodeGroupRequest) GetLaunchTemplate() *LaunchConfiguration {
	if m != nil {
		return m.LaunchTemplate
	}
	return nil
}

func (m *UpdateNodeGroupRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *UpdateNodeGroupRequest) GetTaints() map[string]string {
	if m != nil {
		return m.Taints
	}
	return nil
}

func (m *UpdateNodeGroupRequest) GetNodeOS() string {
	if m != nil {
		return m.NodeOS
	}
	return ""
}

func (m *UpdateNodeGroupRequest) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *UpdateNodeGroupRequest) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

type UpdateNodeGroupResponse struct {
	Code                 uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool       `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *NodeGroup `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-" bson:"-"`
	XXX_unrecognized     []byte     `json:"-" bson:"-"`
	XXX_sizecache        int32      `json:"-" bson:"-"`
}

func (m *UpdateNodeGroupResponse) Reset()         { *m = UpdateNodeGroupResponse{} }
func (m *UpdateNodeGroupResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateNodeGroupResponse) ProtoMessage()    {}
func (*UpdateNodeGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{99}
}

func (m *UpdateNodeGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNodeGroupResponse.Unmarshal(m, b)
}
func (m *UpdateNodeGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNodeGroupResponse.Marshal(b, m, deterministic)
}
func (m *UpdateNodeGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNodeGroupResponse.Merge(m, src)
}
func (m *UpdateNodeGroupResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateNodeGroupResponse.Size(m)
}
func (m *UpdateNodeGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNodeGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNodeGroupResponse proto.InternalMessageInfo

func (m *UpdateNodeGroupResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateNodeGroupResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateNodeGroupResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *UpdateNodeGroupResponse) GetData() *NodeGroup {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteNodeGroupRequest struct {
	NodeGroupID           string   `protobuf:"bytes,1,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	IsForce               bool     `protobuf:"varint,2,opt,name=isForce,proto3" json:"isForce,omitempty"`
	ReserveNodesInCluster bool     `protobuf:"varint,3,opt,name=reserveNodesInCluster,proto3" json:"reserveNodesInCluster,omitempty"`
	KeepNodesInstance     bool     `protobuf:"varint,4,opt,name=keepNodesInstance,proto3" json:"keepNodesInstance,omitempty"`
	Operator              string   `protobuf:"bytes,5,opt,name=operator,proto3" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-" bson:"-"`
	XXX_unrecognized      []byte   `json:"-" bson:"-"`
	XXX_sizecache         int32    `json:"-" bson:"-"`
}

func (m *DeleteNodeGroupRequest) Reset()         { *m = DeleteNodeGroupRequest{} }
func (m *DeleteNodeGroupRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNodeGroupRequest) ProtoMessage()    {}
func (*DeleteNodeGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{100}
}

func (m *DeleteNodeGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNodeGroupRequest.Unmarshal(m, b)
}
func (m *DeleteNodeGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNodeGroupRequest.Marshal(b, m, deterministic)
}
func (m *DeleteNodeGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNodeGroupRequest.Merge(m, src)
}
func (m *DeleteNodeGroupRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNodeGroupRequest.Size(m)
}
func (m *DeleteNodeGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNodeGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNodeGroupRequest proto.InternalMessageInfo

func (m *DeleteNodeGroupRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *DeleteNodeGroupRequest) GetIsForce() bool {
	if m != nil {
		return m.IsForce
	}
	return false
}

func (m *DeleteNodeGroupRequest) GetReserveNodesInCluster() bool {
	if m != nil {
		return m.ReserveNodesInCluster
	}
	return false
}

func (m *DeleteNodeGroupRequest) GetKeepNodesInstance() bool {
	if m != nil {
		return m.KeepNodesInstance
	}
	return false
}

func (m *DeleteNodeGroupRequest) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type DeleteNodeGroupResponse struct {
	Code                 uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool       `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *NodeGroup `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Task                 *Task      `protobuf:"bytes,5,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-" bson:"-"`
	XXX_unrecognized     []byte     `json:"-" bson:"-"`
	XXX_sizecache        int32      `json:"-" bson:"-"`
}

func (m *DeleteNodeGroupResponse) Reset()         { *m = DeleteNodeGroupResponse{} }
func (m *DeleteNodeGroupResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteNodeGroupResponse) ProtoMessage()    {}
func (*DeleteNodeGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{101}
}

func (m *DeleteNodeGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNodeGroupResponse.Unmarshal(m, b)
}
func (m *DeleteNodeGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNodeGroupResponse.Marshal(b, m, deterministic)
}
func (m *DeleteNodeGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNodeGroupResponse.Merge(m, src)
}
func (m *DeleteNodeGroupResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteNodeGroupResponse.Size(m)
}
func (m *DeleteNodeGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNodeGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNodeGroupResponse proto.InternalMessageInfo

func (m *DeleteNodeGroupResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteNodeGroupResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteNodeGroupResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *DeleteNodeGroupResponse) GetData() *NodeGroup {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *DeleteNodeGroupResponse) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type GetNodeGroupRequest struct {
	NodeGroupID          string   `protobuf:"bytes,1,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetNodeGroupRequest) Reset()         { *m = GetNodeGroupRequest{} }
func (m *GetNodeGroupRequest) String() string { return proto.CompactTextString(m) }
func (*GetNodeGroupRequest) ProtoMessage()    {}
func (*GetNodeGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{102}
}

func (m *GetNodeGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeGroupRequest.Unmarshal(m, b)
}
func (m *GetNodeGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeGroupRequest.Marshal(b, m, deterministic)
}
func (m *GetNodeGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeGroupRequest.Merge(m, src)
}
func (m *GetNodeGroupRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodeGroupRequest.Size(m)
}
func (m *GetNodeGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeGroupRequest proto.InternalMessageInfo

func (m *GetNodeGroupRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

type GetNodeGroupResponse struct {
	Code                 uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool       `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *NodeGroup `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-" bson:"-"`
	XXX_unrecognized     []byte     `json:"-" bson:"-"`
	XXX_sizecache        int32      `json:"-" bson:"-"`
}

func (m *GetNodeGroupResponse) Reset()         { *m = GetNodeGroupResponse{} }
func (m *GetNodeGroupResponse) String() string { return proto.CompactTextString(m) }
func (*GetNodeGroupResponse) ProtoMessage()    {}
func (*GetNodeGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{103}
}

func (m *GetNodeGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeGroupResponse.Unmarshal(m, b)
}
func (m *GetNodeGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeGroupResponse.Marshal(b, m, deterministic)
}
func (m *GetNodeGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeGroupResponse.Merge(m, src)
}
func (m *GetNodeGroupResponse) XXX_Size() int {
	return xxx_messageInfo_GetNodeGroupResponse.Size(m)
}
func (m *GetNodeGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeGroupResponse proto.InternalMessageInfo

func (m *GetNodeGroupResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetNodeGroupResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetNodeGroupResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetNodeGroupResponse) GetData() *NodeGroup {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListNodeGroupRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Region               string   `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	ProjectID            string   `protobuf:"bytes,4,opt,name=projectID,proto3" json:"projectID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListNodeGroupRequest) Reset()         { *m = ListNodeGroupRequest{} }
func (m *ListNodeGroupRequest) String() string { return proto.CompactTextString(m) }
func (*ListNodeGroupRequest) ProtoMessage()    {}
func (*ListNodeGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{104}
}

func (m *ListNodeGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodeGroupRequest.Unmarshal(m, b)
}
func (m *ListNodeGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodeGroupRequest.Marshal(b, m, deterministic)
}
func (m *ListNodeGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodeGroupRequest.Merge(m, src)
}
func (m *ListNodeGroupRequest) XXX_Size() int {
	return xxx_messageInfo_ListNodeGroupRequest.Size(m)
}
func (m *ListNodeGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodeGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodeGroupRequest proto.InternalMessageInfo

func (m *ListNodeGroupRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListNodeGroupRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ListNodeGroupRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *ListNodeGroupRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

type ListNodeGroupResponse struct {
	Code                 uint32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool         `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*NodeGroup `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-" bson:"-"`
	XXX_unrecognized     []byte       `json:"-" bson:"-"`
	XXX_sizecache        int32        `json:"-" bson:"-"`
}

func (m *ListNodeGroupResponse) Reset()         { *m = ListNodeGroupResponse{} }
func (m *ListNodeGroupResponse) String() string { return proto.CompactTextString(m) }
func (*ListNodeGroupResponse) ProtoMessage()    {}
func (*ListNodeGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{105}
}

func (m *ListNodeGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodeGroupResponse.Unmarshal(m, b)
}
func (m *ListNodeGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodeGroupResponse.Marshal(b, m, deterministic)
}
func (m *ListNodeGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodeGroupResponse.Merge(m, src)
}
func (m *ListNodeGroupResponse) XXX_Size() int {
	return xxx_messageInfo_ListNodeGroupResponse.Size(m)
}
func (m *ListNodeGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodeGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodeGroupResponse proto.InternalMessageInfo

func (m *ListNodeGroupResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListNodeGroupResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListNodeGroupResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListNodeGroupResponse) GetData() []*NodeGroup {
	if m != nil {
		return m.Data
	}
	return nil
}

type AddNodesRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Nodes                []string `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	InitLoginPassword    string   `protobuf:"bytes,3,opt,name=initLoginPassword,proto3" json:"initLoginPassword,omitempty"`
	NodeGroupID          string   `protobuf:"bytes,4,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	OnlyCreateInfo       bool     `protobuf:"varint,5,opt,name=onlyCreateInfo,proto3" json:"onlyCreateInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *AddNodesRequest) Reset()         { *m = AddNodesRequest{} }
func (m *AddNodesRequest) String() string { return proto.CompactTextString(m) }
func (*AddNodesRequest) ProtoMessage()    {}
func (*AddNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{106}
}

func (m *AddNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddNodesRequest.Unmarshal(m, b)
}
func (m *AddNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddNodesRequest.Marshal(b, m, deterministic)
}
func (m *AddNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddNodesRequest.Merge(m, src)
}
func (m *AddNodesRequest) XXX_Size() int {
	return xxx_messageInfo_AddNodesRequest.Size(m)
}
func (m *AddNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddNodesRequest proto.InternalMessageInfo

func (m *AddNodesRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *AddNodesRequest) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *AddNodesRequest) GetInitLoginPassword() string {
	if m != nil {
		return m.InitLoginPassword
	}
	return ""
}

func (m *AddNodesRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *AddNodesRequest) GetOnlyCreateInfo() bool {
	if m != nil {
		return m.OnlyCreateInfo
	}
	return false
}

type AddNodesResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Task    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *AddNodesResponse) Reset()         { *m = AddNodesResponse{} }
func (m *AddNodesResponse) String() string { return proto.CompactTextString(m) }
func (*AddNodesResponse) ProtoMessage()    {}
func (*AddNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{107}
}

func (m *AddNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddNodesResponse.Unmarshal(m, b)
}
func (m *AddNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddNodesResponse.Marshal(b, m, deterministic)
}
func (m *AddNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddNodesResponse.Merge(m, src)
}
func (m *AddNodesResponse) XXX_Size() int {
	return xxx_messageInfo_AddNodesResponse.Size(m)
}
func (m *AddNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddNodesResponse proto.InternalMessageInfo

func (m *AddNodesResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AddNodesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AddNodesResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *AddNodesResponse) GetData() *Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteNodesRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Nodes                []string `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	DeleteMode           string   `protobuf:"bytes,3,opt,name=deleteMode,proto3" json:"deleteMode,omitempty"`
	IsForce              bool     `protobuf:"varint,4,opt,name=isForce,proto3" json:"isForce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteNodesRequest) Reset()         { *m = DeleteNodesRequest{} }
func (m *DeleteNodesRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNodesRequest) ProtoMessage()    {}
func (*DeleteNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{108}
}

func (m *DeleteNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNodesRequest.Unmarshal(m, b)
}
func (m *DeleteNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNodesRequest.Marshal(b, m, deterministic)
}
func (m *DeleteNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNodesRequest.Merge(m, src)
}
func (m *DeleteNodesRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNodesRequest.Size(m)
}
func (m *DeleteNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNodesRequest proto.InternalMessageInfo

func (m *DeleteNodesRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *DeleteNodesRequest) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *DeleteNodesRequest) GetDeleteMode() string {
	if m != nil {
		return m.DeleteMode
	}
	return ""
}

func (m *DeleteNodesRequest) GetIsForce() bool {
	if m != nil {
		return m.IsForce
	}
	return false
}

type DeleteNodesResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Task    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteNodesResponse) Reset()         { *m = DeleteNodesResponse{} }
func (m *DeleteNodesResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteNodesResponse) ProtoMessage()    {}
func (*DeleteNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{109}
}

func (m *DeleteNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNodesResponse.Unmarshal(m, b)
}
func (m *DeleteNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNodesResponse.Marshal(b, m, deterministic)
}
func (m *DeleteNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNodesResponse.Merge(m, src)
}
func (m *DeleteNodesResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteNodesResponse.Size(m)
}
func (m *DeleteNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNodesResponse proto.InternalMessageInfo

func (m *DeleteNodesResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteNodesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteNodesResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *DeleteNodesResponse) GetData() *Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type MoveNodesToGroupRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Nodes                []string `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	NodeGroupID          string   `protobuf:"bytes,3,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *MoveNodesToGroupRequest) Reset()         { *m = MoveNodesToGroupRequest{} }
func (m *MoveNodesToGroupRequest) String() string { return proto.CompactTextString(m) }
func (*MoveNodesToGroupRequest) ProtoMessage()    {}
func (*MoveNodesToGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{110}
}

func (m *MoveNodesToGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveNodesToGroupRequest.Unmarshal(m, b)
}
func (m *MoveNodesToGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveNodesToGroupRequest.Marshal(b, m, deterministic)
}
func (m *MoveNodesToGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveNodesToGroupRequest.Merge(m, src)
}
func (m *MoveNodesToGroupRequest) XXX_Size() int {
	return xxx_messageInfo_MoveNodesToGroupRequest.Size(m)
}
func (m *MoveNodesToGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveNodesToGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MoveNodesToGroupRequest proto.InternalMessageInfo

func (m *MoveNodesToGroupRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *MoveNodesToGroupRequest) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *MoveNodesToGroupRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

type MoveNodesToGroupResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *MoveNodesToGroupResponse) Reset()         { *m = MoveNodesToGroupResponse{} }
func (m *MoveNodesToGroupResponse) String() string { return proto.CompactTextString(m) }
func (*MoveNodesToGroupResponse) ProtoMessage()    {}
func (*MoveNodesToGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{111}
}

func (m *MoveNodesToGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveNodesToGroupResponse.Unmarshal(m, b)
}
func (m *MoveNodesToGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveNodesToGroupResponse.Marshal(b, m, deterministic)
}
func (m *MoveNodesToGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveNodesToGroupResponse.Merge(m, src)
}
func (m *MoveNodesToGroupResponse) XXX_Size() int {
	return xxx_messageInfo_MoveNodesToGroupResponse.Size(m)
}
func (m *MoveNodesToGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveNodesToGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MoveNodesToGroupResponse proto.InternalMessageInfo

func (m *MoveNodesToGroupResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *MoveNodesToGroupResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *MoveNodesToGroupResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type RemoveNodesFromGroupRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Nodes                []string `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	NodeGroupID          string   `protobuf:"bytes,3,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *RemoveNodesFromGroupRequest) Reset()         { *m = RemoveNodesFromGroupRequest{} }
func (m *RemoveNodesFromGroupRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveNodesFromGroupRequest) ProtoMessage()    {}
func (*RemoveNodesFromGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{112}
}

func (m *RemoveNodesFromGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveNodesFromGroupRequest.Unmarshal(m, b)
}
func (m *RemoveNodesFromGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveNodesFromGroupRequest.Marshal(b, m, deterministic)
}
func (m *RemoveNodesFromGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveNodesFromGroupRequest.Merge(m, src)
}
func (m *RemoveNodesFromGroupRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveNodesFromGroupRequest.Size(m)
}
func (m *RemoveNodesFromGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveNodesFromGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveNodesFromGroupRequest proto.InternalMessageInfo

func (m *RemoveNodesFromGroupRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *RemoveNodesFromGroupRequest) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *RemoveNodesFromGroupRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

type RemoveNodesFromGroupResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *RemoveNodesFromGroupResponse) Reset()         { *m = RemoveNodesFromGroupResponse{} }
func (m *RemoveNodesFromGroupResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveNodesFromGroupResponse) ProtoMessage()    {}
func (*RemoveNodesFromGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{113}
}

func (m *RemoveNodesFromGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveNodesFromGroupResponse.Unmarshal(m, b)
}
func (m *RemoveNodesFromGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveNodesFromGroupResponse.Marshal(b, m, deterministic)
}
func (m *RemoveNodesFromGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveNodesFromGroupResponse.Merge(m, src)
}
func (m *RemoveNodesFromGroupResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveNodesFromGroupResponse.Size(m)
}
func (m *RemoveNodesFromGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveNodesFromGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveNodesFromGroupResponse proto.InternalMessageInfo

func (m *RemoveNodesFromGroupResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RemoveNodesFromGroupResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *RemoveNodesFromGroupResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type CleanNodesInGroupRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Nodes                []string `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	NodeGroupID          string   `protobuf:"bytes,3,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	Operator             string   `protobuf:"bytes,4,opt,name=operator,proto3" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CleanNodesInGroupRequest) Reset()         { *m = CleanNodesInGroupRequest{} }
func (m *CleanNodesInGroupRequest) String() string { return proto.CompactTextString(m) }
func (*CleanNodesInGroupRequest) ProtoMessage()    {}
func (*CleanNodesInGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{114}
}

func (m *CleanNodesInGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanNodesInGroupRequest.Unmarshal(m, b)
}
func (m *CleanNodesInGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanNodesInGroupRequest.Marshal(b, m, deterministic)
}
func (m *CleanNodesInGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanNodesInGroupRequest.Merge(m, src)
}
func (m *CleanNodesInGroupRequest) XXX_Size() int {
	return xxx_messageInfo_CleanNodesInGroupRequest.Size(m)
}
func (m *CleanNodesInGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanNodesInGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CleanNodesInGroupRequest proto.InternalMessageInfo

func (m *CleanNodesInGroupRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *CleanNodesInGroupRequest) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *CleanNodesInGroupRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *CleanNodesInGroupRequest) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type CleanNodesInGroupResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Task    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CleanNodesInGroupResponse) Reset()         { *m = CleanNodesInGroupResponse{} }
func (m *CleanNodesInGroupResponse) String() string { return proto.CompactTextString(m) }
func (*CleanNodesInGroupResponse) ProtoMessage()    {}
func (*CleanNodesInGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{115}
}

func (m *CleanNodesInGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanNodesInGroupResponse.Unmarshal(m, b)
}
func (m *CleanNodesInGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanNodesInGroupResponse.Marshal(b, m, deterministic)
}
func (m *CleanNodesInGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanNodesInGroupResponse.Merge(m, src)
}
func (m *CleanNodesInGroupResponse) XXX_Size() int {
	return xxx_messageInfo_CleanNodesInGroupResponse.Size(m)
}
func (m *CleanNodesInGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanNodesInGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CleanNodesInGroupResponse proto.InternalMessageInfo

func (m *CleanNodesInGroupResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CleanNodesInGroupResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CleanNodesInGroupResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *CleanNodesInGroupResponse) GetData() *Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListNodesInGroupResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*Node  `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListNodesInGroupResponse) Reset()         { *m = ListNodesInGroupResponse{} }
func (m *ListNodesInGroupResponse) String() string { return proto.CompactTextString(m) }
func (*ListNodesInGroupResponse) ProtoMessage()    {}
func (*ListNodesInGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{116}
}

func (m *ListNodesInGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodesInGroupResponse.Unmarshal(m, b)
}
func (m *ListNodesInGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodesInGroupResponse.Marshal(b, m, deterministic)
}
func (m *ListNodesInGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodesInGroupResponse.Merge(m, src)
}
func (m *ListNodesInGroupResponse) XXX_Size() int {
	return xxx_messageInfo_ListNodesInGroupResponse.Size(m)
}
func (m *ListNodesInGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodesInGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodesInGroupResponse proto.InternalMessageInfo

func (m *ListNodesInGroupResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListNodesInGroupResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListNodesInGroupResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListNodesInGroupResponse) GetData() []*Node {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateGroupDesiredNodeRequest struct {
	NodeGroupID          string   `protobuf:"bytes,1,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	DesiredNode          uint32   `protobuf:"varint,2,opt,name=desiredNode,proto3" json:"desiredNode,omitempty"`
	Operator             string   `protobuf:"bytes,3,opt,name=operator,proto3" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateGroupDesiredNodeRequest) Reset()         { *m = UpdateGroupDesiredNodeRequest{} }
func (m *UpdateGroupDesiredNodeRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateGroupDesiredNodeRequest) ProtoMessage()    {}
func (*UpdateGroupDesiredNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{117}
}

func (m *UpdateGroupDesiredNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateGroupDesiredNodeRequest.Unmarshal(m, b)
}
func (m *UpdateGroupDesiredNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateGroupDesiredNodeRequest.Marshal(b, m, deterministic)
}
func (m *UpdateGroupDesiredNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateGroupDesiredNodeRequest.Merge(m, src)
}
func (m *UpdateGroupDesiredNodeRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateGroupDesiredNodeRequest.Size(m)
}
func (m *UpdateGroupDesiredNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateGroupDesiredNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateGroupDesiredNodeRequest proto.InternalMessageInfo

func (m *UpdateGroupDesiredNodeRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *UpdateGroupDesiredNodeRequest) GetDesiredNode() uint32 {
	if m != nil {
		return m.DesiredNode
	}
	return 0
}

func (m *UpdateGroupDesiredNodeRequest) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type UpdateGroupDesiredNodeResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateGroupDesiredNodeResponse) Reset()         { *m = UpdateGroupDesiredNodeResponse{} }
func (m *UpdateGroupDesiredNodeResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateGroupDesiredNodeResponse) ProtoMessage()    {}
func (*UpdateGroupDesiredNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{118}
}

func (m *UpdateGroupDesiredNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateGroupDesiredNodeResponse.Unmarshal(m, b)
}
func (m *UpdateGroupDesiredNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateGroupDesiredNodeResponse.Marshal(b, m, deterministic)
}
func (m *UpdateGroupDesiredNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateGroupDesiredNodeResponse.Merge(m, src)
}
func (m *UpdateGroupDesiredNodeResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateGroupDesiredNodeResponse.Size(m)
}
func (m *UpdateGroupDesiredNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateGroupDesiredNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateGroupDesiredNodeResponse proto.InternalMessageInfo

func (m *UpdateGroupDesiredNodeResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateGroupDesiredNodeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateGroupDesiredNodeResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type CreateTaskRequest struct {
	TaskType             string           `protobuf:"bytes,1,opt,name=taskType,proto3" json:"taskType,omitempty"`
	Status               string           `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message              string           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Start                string           `protobuf:"bytes,4,opt,name=start,proto3" json:"start,omitempty"`
	End                  string           `protobuf:"bytes,5,opt,name=end,proto3" json:"end,omitempty"`
	ExecutionTime        uint32           `protobuf:"varint,6,opt,name=executionTime,proto3" json:"executionTime,omitempty"`
	CurrentStep          string           `protobuf:"bytes,7,opt,name=currentStep,proto3" json:"currentStep,omitempty"`
	StepSequence         []string         `protobuf:"bytes,8,rep,name=stepSequence,proto3" json:"stepSequence,omitempty"`
	Steps                map[string]*Step `protobuf:"bytes,9,rep,name=steps,proto3" json:"steps,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ClusterID            string           `protobuf:"bytes,10,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ProjectID            string           `protobuf:"bytes,11,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Creator              string           `protobuf:"bytes,12,opt,name=creator,proto3" json:"creator,omitempty"`
	LastUpdate           string           `protobuf:"bytes,13,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-" bson:"-"`
	XXX_unrecognized     []byte           `json:"-" bson:"-"`
	XXX_sizecache        int32            `json:"-" bson:"-"`
}

func (m *CreateTaskRequest) Reset()         { *m = CreateTaskRequest{} }
func (m *CreateTaskRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTaskRequest) ProtoMessage()    {}
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{119}
}

func (m *CreateTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTaskRequest.Unmarshal(m, b)
}
func (m *CreateTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTaskRequest.Marshal(b, m, deterministic)
}
func (m *CreateTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTaskRequest.Merge(m, src)
}
func (m *CreateTaskRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTaskRequest.Size(m)
}
func (m *CreateTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTaskRequest proto.InternalMessageInfo

func (m *CreateTaskRequest) GetTaskType() string {
	if m != nil {
		return m.TaskType
	}
	return ""
}

func (m *CreateTaskRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *CreateTaskRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateTaskRequest) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *CreateTaskRequest) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

func (m *CreateTaskRequest) GetExecutionTime() uint32 {
	if m != nil {
		return m.ExecutionTime
	}
	return 0
}

func (m *CreateTaskRequest) GetCurrentStep() string {
	if m != nil {
		return m.CurrentStep
	}
	return ""
}

func (m *CreateTaskRequest) GetStepSequence() []string {
	if m != nil {
		return m.StepSequence
	}
	return nil
}

func (m *CreateTaskRequest) GetSteps() map[string]*Step {
	if m != nil {
		return m.Steps
	}
	return nil
}

func (m *CreateTaskRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *CreateTaskRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *CreateTaskRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CreateTaskRequest) GetLastUpdate() string {
	if m != nil {
		return m.LastUpdate
	}
	return ""
}

type CreateTaskResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Task    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CreateTaskResponse) Reset()         { *m = CreateTaskResponse{} }
func (m *CreateTaskResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTaskResponse) ProtoMessage()    {}
func (*CreateTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{120}
}

func (m *CreateTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTaskResponse.Unmarshal(m, b)
}
func (m *CreateTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTaskResponse.Marshal(b, m, deterministic)
}
func (m *CreateTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTaskResponse.Merge(m, src)
}
func (m *CreateTaskResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTaskResponse.Size(m)
}
func (m *CreateTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTaskResponse proto.InternalMessageInfo

func (m *CreateTaskResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateTaskResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateTaskResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *CreateTaskResponse) GetData() *Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateTaskRequest struct {
	TaskID               string           `protobuf:"bytes,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Status               string           `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message              string           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	End                  string           `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	ExecutionTime        uint32           `protobuf:"varint,5,opt,name=executionTime,proto3" json:"executionTime,omitempty"`
	CurrentStep          string           `protobuf:"bytes,6,opt,name=currentStep,proto3" json:"currentStep,omitempty"`
	Steps                map[string]*Step `protobuf:"bytes,7,rep,name=steps,proto3" json:"steps,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Updater              string           `protobuf:"bytes,8,opt,name=updater,proto3" json:"updater,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-" bson:"-"`
	XXX_unrecognized     []byte           `json:"-" bson:"-"`
	XXX_sizecache        int32            `json:"-" bson:"-"`
}

func (m *UpdateTaskRequest) Reset()         { *m = UpdateTaskRequest{} }
func (m *UpdateTaskRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTaskRequest) ProtoMessage()    {}
func (*UpdateTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{121}
}

func (m *UpdateTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTaskRequest.Unmarshal(m, b)
}
func (m *UpdateTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTaskRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTaskRequest.Merge(m, src)
}
func (m *UpdateTaskRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTaskRequest.Size(m)
}
func (m *UpdateTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTaskRequest proto.InternalMessageInfo

func (m *UpdateTaskRequest) GetTaskID() string {
	if m != nil {
		return m.TaskID
	}
	return ""
}

func (m *UpdateTaskRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *UpdateTaskRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateTaskRequest) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

func (m *UpdateTaskRequest) GetExecutionTime() uint32 {
	if m != nil {
		return m.ExecutionTime
	}
	return 0
}

func (m *UpdateTaskRequest) GetCurrentStep() string {
	if m != nil {
		return m.CurrentStep
	}
	return ""
}

func (m *UpdateTaskRequest) GetSteps() map[string]*Step {
	if m != nil {
		return m.Steps
	}
	return nil
}

func (m *UpdateTaskRequest) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

type UpdateTaskResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Task    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateTaskResponse) Reset()         { *m = UpdateTaskResponse{} }
func (m *UpdateTaskResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateTaskResponse) ProtoMessage()    {}
func (*UpdateTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{122}
}

func (m *UpdateTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTaskResponse.Unmarshal(m, b)
}
func (m *UpdateTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTaskResponse.Marshal(b, m, deterministic)
}
func (m *UpdateTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTaskResponse.Merge(m, src)
}
func (m *UpdateTaskResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateTaskResponse.Size(m)
}
func (m *UpdateTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTaskResponse proto.InternalMessageInfo

func (m *UpdateTaskResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateTaskResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateTaskResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *UpdateTaskResponse) GetData() *Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteTaskRequest struct {
	TaskID               string   `protobuf:"bytes,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	IsForce              bool     `protobuf:"varint,2,opt,name=isForce,proto3" json:"isForce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteTaskRequest) Reset()         { *m = DeleteTaskRequest{} }
func (m *DeleteTaskRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTaskRequest) ProtoMessage()    {}
func (*DeleteTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{123}
}

func (m *DeleteTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTaskRequest.Unmarshal(m, b)
}
func (m *DeleteTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTaskRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTaskRequest.Merge(m, src)
}
func (m *DeleteTaskRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTaskRequest.Size(m)
}
func (m *DeleteTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTaskRequest proto.InternalMessageInfo

func (m *DeleteTaskRequest) GetTaskID() string {
	if m != nil {
		return m.TaskID
	}
	return ""
}

func (m *DeleteTaskRequest) GetIsForce() bool {
	if m != nil {
		return m.IsForce
	}
	return false
}

type DeleteTaskResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Task    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteTaskResponse) Reset()         { *m = DeleteTaskResponse{} }
func (m *DeleteTaskResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteTaskResponse) ProtoMessage()    {}
func (*DeleteTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{124}
}

func (m *DeleteTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTaskResponse.Unmarshal(m, b)
}
func (m *DeleteTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTaskResponse.Marshal(b, m, deterministic)
}
func (m *DeleteTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTaskResponse.Merge(m, src)
}
func (m *DeleteTaskResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteTaskResponse.Size(m)
}
func (m *DeleteTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTaskResponse proto.InternalMessageInfo

func (m *DeleteTaskResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteTaskResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteTaskResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *DeleteTaskResponse) GetData() *Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetTaskRequest struct {
	TaskID               string   `protobuf:"bytes,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetTaskRequest) Reset()         { *m = GetTaskRequest{} }
func (m *GetTaskRequest) String() string { return proto.CompactTextString(m) }
func (*GetTaskRequest) ProtoMessage()    {}
func (*GetTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{125}
}

func (m *GetTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTaskRequest.Unmarshal(m, b)
}
func (m *GetTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTaskRequest.Marshal(b, m, deterministic)
}
func (m *GetTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTaskRequest.Merge(m, src)
}
func (m *GetTaskRequest) XXX_Size() int {
	return xxx_messageInfo_GetTaskRequest.Size(m)
}
func (m *GetTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTaskRequest proto.InternalMessageInfo

func (m *GetTaskRequest) GetTaskID() string {
	if m != nil {
		return m.TaskID
	}
	return ""
}

type GetTaskResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Task    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetTaskResponse) Reset()         { *m = GetTaskResponse{} }
func (m *GetTaskResponse) String() string { return proto.CompactTextString(m) }
func (*GetTaskResponse) ProtoMessage()    {}
func (*GetTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{126}
}

func (m *GetTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTaskResponse.Unmarshal(m, b)
}
func (m *GetTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTaskResponse.Marshal(b, m, deterministic)
}
func (m *GetTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTaskResponse.Merge(m, src)
}
func (m *GetTaskResponse) XXX_Size() int {
	return xxx_messageInfo_GetTaskResponse.Size(m)
}
func (m *GetTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTaskResponse proto.InternalMessageInfo

func (m *GetTaskResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetTaskResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetTaskResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetTaskResponse) GetData() *Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListTaskRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ProjectID            string   `protobuf:"bytes,2,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Creator              string   `protobuf:"bytes,3,opt,name=creator,proto3" json:"creator,omitempty"`
	Updater              string   `protobuf:"bytes,4,opt,name=updater,proto3" json:"updater,omitempty"`
	TaskType             string   `protobuf:"bytes,5,opt,name=taskType,proto3" json:"taskType,omitempty"`
	Status               string   `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListTaskRequest) Reset()         { *m = ListTaskRequest{} }
func (m *ListTaskRequest) String() string { return proto.CompactTextString(m) }
func (*ListTaskRequest) ProtoMessage()    {}
func (*ListTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{127}
}

func (m *ListTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTaskRequest.Unmarshal(m, b)
}
func (m *ListTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTaskRequest.Marshal(b, m, deterministic)
}
func (m *ListTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTaskRequest.Merge(m, src)
}
func (m *ListTaskRequest) XXX_Size() int {
	return xxx_messageInfo_ListTaskRequest.Size(m)
}
func (m *ListTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTaskRequest proto.InternalMessageInfo

func (m *ListTaskRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ListTaskRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *ListTaskRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *ListTaskRequest) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *ListTaskRequest) GetTaskType() string {
	if m != nil {
		return m.TaskType
	}
	return ""
}

func (m *ListTaskRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type ListTaskResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*Task  `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListTaskResponse) Reset()         { *m = ListTaskResponse{} }
func (m *ListTaskResponse) String() string { return proto.CompactTextString(m) }
func (*ListTaskResponse) ProtoMessage()    {}
func (*ListTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{128}
}

func (m *ListTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTaskResponse.Unmarshal(m, b)
}
func (m *ListTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTaskResponse.Marshal(b, m, deterministic)
}
func (m *ListTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTaskResponse.Merge(m, src)
}
func (m *ListTaskResponse) XXX_Size() int {
	return xxx_messageInfo_ListTaskResponse.Size(m)
}
func (m *ListTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTaskResponse proto.InternalMessageInfo

func (m *ListTaskResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListTaskResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListTaskResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListTaskResponse) GetData() []*Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateAutoScalingOptionRequest struct {
	IsScaleDwonEnable             bool     `protobuf:"varint,1,opt,name=isScaleDwonEnable,proto3" json:"isScaleDwonEnable,omitempty"`
	Expander                      string   `protobuf:"bytes,2,opt,name=expander,proto3" json:"expander,omitempty"`
	MaxEmptyBulkDelete            uint32   `protobuf:"varint,3,opt,name=maxEmptyBulkDelete,proto3" json:"maxEmptyBulkDelete,omitempty"`
	ScaleDownDelay                uint32   `protobuf:"varint,4,opt,name=scaleDownDelay,proto3" json:"scaleDownDelay,omitempty"`
	ScaleDownUnneededTime         uint32   `protobuf:"varint,5,opt,name=scaleDownUnneededTime,proto3" json:"scaleDownUnneededTime,omitempty"`
	ScaleDownUtilizationThreahold uint32   `protobuf:"varint,6,opt,name=scaleDownUtilizationThreahold,proto3" json:"scaleDownUtilizationThreahold,omitempty"`
	SkipNodesWithLocalStorage     bool     `protobuf:"varint,7,opt,name=skipNodesWithLocalStorage,proto3" json:"skipNodesWithLocalStorage,omitempty"`
	SkipNodesWithSystemPods       bool     `protobuf:"varint,8,opt,name=skipNodesWithSystemPods,proto3" json:"skipNodesWithSystemPods,omitempty"`
	IgnoreDaemonSetsUtilization   bool     `protobuf:"varint,9,opt,name=ignoreDaemonSetsUtilization,proto3" json:"ignoreDaemonSetsUtilization,omitempty"`
	OkTotalUnreadyCount           uint32   `protobuf:"varint,10,opt,name=okTotalUnreadyCount,proto3" json:"okTotalUnreadyCount,omitempty"`
	MaxTotalUnreadyPercentage     uint32   `protobuf:"varint,11,opt,name=maxTotalUnreadyPercentage,proto3" json:"maxTotalUnreadyPercentage,omitempty"`
	ScaleDownUnreadyTime          uint32   `protobuf:"varint,12,opt,name=scaleDownUnreadyTime,proto3" json:"scaleDownUnreadyTime,omitempty"`
	UnregisteredNodeRemovalTime   uint32   `protobuf:"varint,13,opt,name=unregisteredNodeRemovalTime,proto3" json:"unregisteredNodeRemovalTime,omitempty"`
	ClusterID                     string   `protobuf:"bytes,14,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Creator                       string   `protobuf:"bytes,15,opt,name=creator,proto3" json:"creator,omitempty"`
	Provider                      string   `protobuf:"bytes,16,opt,name=provider,proto3" json:"provider,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-" bson:"-"`
	XXX_unrecognized              []byte   `json:"-" bson:"-"`
	XXX_sizecache                 int32    `json:"-" bson:"-"`
}

func (m *CreateAutoScalingOptionRequest) Reset()         { *m = CreateAutoScalingOptionRequest{} }
func (m *CreateAutoScalingOptionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAutoScalingOptionRequest) ProtoMessage()    {}
func (*CreateAutoScalingOptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{129}
}

func (m *CreateAutoScalingOptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAutoScalingOptionRequest.Unmarshal(m, b)
}
func (m *CreateAutoScalingOptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAutoScalingOptionRequest.Marshal(b, m, deterministic)
}
func (m *CreateAutoScalingOptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAutoScalingOptionRequest.Merge(m, src)
}
func (m *CreateAutoScalingOptionRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAutoScalingOptionRequest.Size(m)
}
func (m *CreateAutoScalingOptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAutoScalingOptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAutoScalingOptionRequest proto.InternalMessageInfo

func (m *CreateAutoScalingOptionRequest) GetIsScaleDwonEnable() bool {
	if m != nil {
		return m.IsScaleDwonEnable
	}
	return false
}

func (m *CreateAutoScalingOptionRequest) GetExpander() string {
	if m != nil {
		return m.Expander
	}
	return ""
}

func (m *CreateAutoScalingOptionRequest) GetMaxEmptyBulkDelete() uint32 {
	if m != nil {
		return m.MaxEmptyBulkDelete
	}
	return 0
}

func (m *CreateAutoScalingOptionRequest) GetScaleDownDelay() uint32 {
	if m != nil {
		return m.ScaleDownDelay
	}
	return 0
}

func (m *CreateAutoScalingOptionRequest) GetScaleDownUnneededTime() uint32 {
	if m != nil {
		return m.ScaleDownUnneededTime
	}
	return 0
}

func (m *CreateAutoScalingOptionRequest) GetScaleDownUtilizationThreahold() uint32 {
	if m != nil {
		return m.ScaleDownUtilizationThreahold
	}
	return 0
}

func (m *CreateAutoScalingOptionRequest) GetSkipNodesWithLocalStorage() bool {
	if m != nil {
		return m.SkipNodesWithLocalStorage
	}
	return false
}

func (m *CreateAutoScalingOptionRequest) GetSkipNodesWithSystemPods() bool {
	if m != nil {
		return m.SkipNodesWithSystemPods
	}
	return false
}

func (m *CreateAutoScalingOptionRequest) GetIgnoreDaemonSetsUtilization() bool {
	if m != nil {
		return m.IgnoreDaemonSetsUtilization
	}
	return false
}

func (m *CreateAutoScalingOptionRequest) GetOkTotalUnreadyCount() uint32 {
	if m != nil {
		return m.OkTotalUnreadyCount
	}
	return 0
}

func (m *CreateAutoScalingOptionRequest) GetMaxTotalUnreadyPercentage() uint32 {
	if m != nil {
		return m.MaxTotalUnreadyPercentage
	}
	return 0
}

func (m *CreateAutoScalingOptionRequest) GetScaleDownUnreadyTime() uint32 {
	if m != nil {
		return m.ScaleDownUnreadyTime
	}
	return 0
}

func (m *CreateAutoScalingOptionRequest) GetUnregisteredNodeRemovalTime() uint32 {
	if m != nil {
		return m.UnregisteredNodeRemovalTime
	}
	return 0
}

func (m *CreateAutoScalingOptionRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *CreateAutoScalingOptionRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CreateAutoScalingOptionRequest) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

type CreateAutoScalingOptionResponse struct {
	Code                 uint32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                      `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *ClusterAutoScalingOption `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-" bson:"-"`
	XXX_unrecognized     []byte                    `json:"-" bson:"-"`
	XXX_sizecache        int32                     `json:"-" bson:"-"`
}

func (m *CreateAutoScalingOptionResponse) Reset()         { *m = CreateAutoScalingOptionResponse{} }
func (m *CreateAutoScalingOptionResponse) String() string { return proto.CompactTextString(m) }
func (*CreateAutoScalingOptionResponse) ProtoMessage()    {}
func (*CreateAutoScalingOptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{130}
}

func (m *CreateAutoScalingOptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAutoScalingOptionResponse.Unmarshal(m, b)
}
func (m *CreateAutoScalingOptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAutoScalingOptionResponse.Marshal(b, m, deterministic)
}
func (m *CreateAutoScalingOptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAutoScalingOptionResponse.Merge(m, src)
}
func (m *CreateAutoScalingOptionResponse) XXX_Size() int {
	return xxx_messageInfo_CreateAutoScalingOptionResponse.Size(m)
}
func (m *CreateAutoScalingOptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAutoScalingOptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAutoScalingOptionResponse proto.InternalMessageInfo

func (m *CreateAutoScalingOptionResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateAutoScalingOptionResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateAutoScalingOptionResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *CreateAutoScalingOptionResponse) GetData() *ClusterAutoScalingOption {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateAutoScalingOptionRequest struct {
	IsScaleDwonEnable             bool     `protobuf:"varint,1,opt,name=isScaleDwonEnable,proto3" json:"isScaleDwonEnable,omitempty"`
	Expander                      string   `protobuf:"bytes,2,opt,name=expander,proto3" json:"expander,omitempty"`
	MaxEmptyBulkDelete            uint32   `protobuf:"varint,3,opt,name=maxEmptyBulkDelete,proto3" json:"maxEmptyBulkDelete,omitempty"`
	ScaleDownDelay                uint32   `protobuf:"varint,4,opt,name=scaleDownDelay,proto3" json:"scaleDownDelay,omitempty"`
	ScaleDownUnneededTime         uint32   `protobuf:"varint,5,opt,name=scaleDownUnneededTime,proto3" json:"scaleDownUnneededTime,omitempty"`
	ScaleDownUtilizationThreahold uint32   `protobuf:"varint,6,opt,name=scaleDownUtilizationThreahold,proto3" json:"scaleDownUtilizationThreahold,omitempty"`
	SkipNodesWithLocalStorage     bool     `protobuf:"varint,7,opt,name=skipNodesWithLocalStorage,proto3" json:"skipNodesWithLocalStorage,omitempty"`
	SkipNodesWithSystemPods       bool     `protobuf:"varint,8,opt,name=skipNodesWithSystemPods,proto3" json:"skipNodesWithSystemPods,omitempty"`
	IgnoreDaemonSetsUtilization   bool     `protobuf:"varint,9,opt,name=ignoreDaemonSetsUtilization,proto3" json:"ignoreDaemonSetsUtilization,omitempty"`
	OkTotalUnreadyCount           uint32   `protobuf:"varint,10,opt,name=okTotalUnreadyCount,proto3" json:"okTotalUnreadyCount,omitempty"`
	MaxTotalUnreadyPercentage     uint32   `protobuf:"varint,11,opt,name=maxTotalUnreadyPercentage,proto3" json:"maxTotalUnreadyPercentage,omitempty"`
	ScaleDownUnreadyTime          uint32   `protobuf:"varint,12,opt,name=scaleDownUnreadyTime,proto3" json:"scaleDownUnreadyTime,omitempty"`
	UnregisteredNodeRemovalTime   uint32   `protobuf:"varint,13,opt,name=unregisteredNodeRemovalTime,proto3" json:"unregisteredNodeRemovalTime,omitempty"`
	ProjectID                     string   `protobuf:"bytes,14,opt,name=projectID,proto3" json:"projectID,omitempty"`
	ClusterID                     string   `protobuf:"bytes,15,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Updater                       string   `protobuf:"bytes,16,opt,name=updater,proto3" json:"updater,omitempty"`
	Provider                      string   `protobuf:"bytes,17,opt,name=provider,proto3" json:"provider,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-" bson:"-"`
	XXX_unrecognized              []byte   `json:"-" bson:"-"`
	XXX_sizecache                 int32    `json:"-" bson:"-"`
}

func (m *UpdateAutoScalingOptionRequest) Reset()         { *m = UpdateAutoScalingOptionRequest{} }
func (m *UpdateAutoScalingOptionRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateAutoScalingOptionRequest) ProtoMessage()    {}
func (*UpdateAutoScalingOptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{131}
}

func (m *UpdateAutoScalingOptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAutoScalingOptionRequest.Unmarshal(m, b)
}
func (m *UpdateAutoScalingOptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAutoScalingOptionRequest.Marshal(b, m, deterministic)
}
func (m *UpdateAutoScalingOptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAutoScalingOptionRequest.Merge(m, src)
}
func (m *UpdateAutoScalingOptionRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateAutoScalingOptionRequest.Size(m)
}
func (m *UpdateAutoScalingOptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAutoScalingOptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAutoScalingOptionRequest proto.InternalMessageInfo

func (m *UpdateAutoScalingOptionRequest) GetIsScaleDwonEnable() bool {
	if m != nil {
		return m.IsScaleDwonEnable
	}
	return false
}

func (m *UpdateAutoScalingOptionRequest) GetExpander() string {
	if m != nil {
		return m.Expander
	}
	return ""
}

func (m *UpdateAutoScalingOptionRequest) GetMaxEmptyBulkDelete() uint32 {
	if m != nil {
		return m.MaxEmptyBulkDelete
	}
	return 0
}

func (m *UpdateAutoScalingOptionRequest) GetScaleDownDelay() uint32 {
	if m != nil {
		return m.ScaleDownDelay
	}
	return 0
}

func (m *UpdateAutoScalingOptionRequest) GetScaleDownUnneededTime() uint32 {
	if m != nil {
		return m.ScaleDownUnneededTime
	}
	return 0
}

func (m *UpdateAutoScalingOptionRequest) GetScaleDownUtilizationThreahold() uint32 {
	if m != nil {
		return m.ScaleDownUtilizationThreahold
	}
	return 0
}

func (m *UpdateAutoScalingOptionRequest) GetSkipNodesWithLocalStorage() bool {
	if m != nil {
		return m.SkipNodesWithLocalStorage
	}
	return false
}

func (m *UpdateAutoScalingOptionRequest) GetSkipNodesWithSystemPods() bool {
	if m != nil {
		return m.SkipNodesWithSystemPods
	}
	return false
}

func (m *UpdateAutoScalingOptionRequest) GetIgnoreDaemonSetsUtilization() bool {
	if m != nil {
		return m.IgnoreDaemonSetsUtilization
	}
	return false
}

func (m *UpdateAutoScalingOptionRequest) GetOkTotalUnreadyCount() uint32 {
	if m != nil {
		return m.OkTotalUnreadyCount
	}
	return 0
}

func (m *UpdateAutoScalingOptionRequest) GetMaxTotalUnreadyPercentage() uint32 {
	if m != nil {
		return m.MaxTotalUnreadyPercentage
	}
	return 0
}

func (m *UpdateAutoScalingOptionRequest) GetScaleDownUnreadyTime() uint32 {
	if m != nil {
		return m.ScaleDownUnreadyTime
	}
	return 0
}

func (m *UpdateAutoScalingOptionRequest) GetUnregisteredNodeRemovalTime() uint32 {
	if m != nil {
		return m.UnregisteredNodeRemovalTime
	}
	return 0
}

func (m *UpdateAutoScalingOptionRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *UpdateAutoScalingOptionRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *UpdateAutoScalingOptionRequest) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *UpdateAutoScalingOptionRequest) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

type UpdateAutoScalingOptionResponse struct {
	Code                 uint32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                      `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *ClusterAutoScalingOption `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-" bson:"-"`
	XXX_unrecognized     []byte                    `json:"-" bson:"-"`
	XXX_sizecache        int32                     `json:"-" bson:"-"`
}

func (m *UpdateAutoScalingOptionResponse) Reset()         { *m = UpdateAutoScalingOptionResponse{} }
func (m *UpdateAutoScalingOptionResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateAutoScalingOptionResponse) ProtoMessage()    {}
func (*UpdateAutoScalingOptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{132}
}

func (m *UpdateAutoScalingOptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAutoScalingOptionResponse.Unmarshal(m, b)
}
func (m *UpdateAutoScalingOptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAutoScalingOptionResponse.Marshal(b, m, deterministic)
}
func (m *UpdateAutoScalingOptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAutoScalingOptionResponse.Merge(m, src)
}
func (m *UpdateAutoScalingOptionResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateAutoScalingOptionResponse.Size(m)
}
func (m *UpdateAutoScalingOptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAutoScalingOptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAutoScalingOptionResponse proto.InternalMessageInfo

func (m *UpdateAutoScalingOptionResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateAutoScalingOptionResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateAutoScalingOptionResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *UpdateAutoScalingOptionResponse) GetData() *ClusterAutoScalingOption {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteAutoScalingOptionRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	IsForce              bool     `protobuf:"varint,2,opt,name=isForce,proto3" json:"isForce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteAutoScalingOptionRequest) Reset()         { *m = DeleteAutoScalingOptionRequest{} }
func (m *DeleteAutoScalingOptionRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAutoScalingOptionRequest) ProtoMessage()    {}
func (*DeleteAutoScalingOptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{133}
}

func (m *DeleteAutoScalingOptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAutoScalingOptionRequest.Unmarshal(m, b)
}
func (m *DeleteAutoScalingOptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAutoScalingOptionRequest.Marshal(b, m, deterministic)
}
func (m *DeleteAutoScalingOptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAutoScalingOptionRequest.Merge(m, src)
}
func (m *DeleteAutoScalingOptionRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAutoScalingOptionRequest.Size(m)
}
func (m *DeleteAutoScalingOptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAutoScalingOptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAutoScalingOptionRequest proto.InternalMessageInfo

func (m *DeleteAutoScalingOptionRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *DeleteAutoScalingOptionRequest) GetIsForce() bool {
	if m != nil {
		return m.IsForce
	}
	return false
}

type DeleteAutoScalingOptionResponse struct {
	Code                 uint32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                      `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *ClusterAutoScalingOption `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-" bson:"-"`
	XXX_unrecognized     []byte                    `json:"-" bson:"-"`
	XXX_sizecache        int32                     `json:"-" bson:"-"`
}

func (m *DeleteAutoScalingOptionResponse) Reset()         { *m = DeleteAutoScalingOptionResponse{} }
func (m *DeleteAutoScalingOptionResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteAutoScalingOptionResponse) ProtoMessage()    {}
func (*DeleteAutoScalingOptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{134}
}

func (m *DeleteAutoScalingOptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAutoScalingOptionResponse.Unmarshal(m, b)
}
func (m *DeleteAutoScalingOptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAutoScalingOptionResponse.Marshal(b, m, deterministic)
}
func (m *DeleteAutoScalingOptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAutoScalingOptionResponse.Merge(m, src)
}
func (m *DeleteAutoScalingOptionResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteAutoScalingOptionResponse.Size(m)
}
func (m *DeleteAutoScalingOptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAutoScalingOptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAutoScalingOptionResponse proto.InternalMessageInfo

func (m *DeleteAutoScalingOptionResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteAutoScalingOptionResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteAutoScalingOptionResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *DeleteAutoScalingOptionResponse) GetData() *ClusterAutoScalingOption {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetAutoScalingOptionRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetAutoScalingOptionRequest) Reset()         { *m = GetAutoScalingOptionRequest{} }
func (m *GetAutoScalingOptionRequest) String() string { return proto.CompactTextString(m) }
func (*GetAutoScalingOptionRequest) ProtoMessage()    {}
func (*GetAutoScalingOptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{135}
}

func (m *GetAutoScalingOptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAutoScalingOptionRequest.Unmarshal(m, b)
}
func (m *GetAutoScalingOptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAutoScalingOptionRequest.Marshal(b, m, deterministic)
}
func (m *GetAutoScalingOptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAutoScalingOptionRequest.Merge(m, src)
}
func (m *GetAutoScalingOptionRequest) XXX_Size() int {
	return xxx_messageInfo_GetAutoScalingOptionRequest.Size(m)
}
func (m *GetAutoScalingOptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAutoScalingOptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAutoScalingOptionRequest proto.InternalMessageInfo

func (m *GetAutoScalingOptionRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

type GetAutoScalingOptionResponse struct {
	Code                 uint32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                      `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *ClusterAutoScalingOption `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-" bson:"-"`
	XXX_unrecognized     []byte                    `json:"-" bson:"-"`
	XXX_sizecache        int32                     `json:"-" bson:"-"`
}

func (m *GetAutoScalingOptionResponse) Reset()         { *m = GetAutoScalingOptionResponse{} }
func (m *GetAutoScalingOptionResponse) String() string { return proto.CompactTextString(m) }
func (*GetAutoScalingOptionResponse) ProtoMessage()    {}
func (*GetAutoScalingOptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{136}
}

func (m *GetAutoScalingOptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAutoScalingOptionResponse.Unmarshal(m, b)
}
func (m *GetAutoScalingOptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAutoScalingOptionResponse.Marshal(b, m, deterministic)
}
func (m *GetAutoScalingOptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAutoScalingOptionResponse.Merge(m, src)
}
func (m *GetAutoScalingOptionResponse) XXX_Size() int {
	return xxx_messageInfo_GetAutoScalingOptionResponse.Size(m)
}
func (m *GetAutoScalingOptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAutoScalingOptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAutoScalingOptionResponse proto.InternalMessageInfo

func (m *GetAutoScalingOptionResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetAutoScalingOptionResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetAutoScalingOptionResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetAutoScalingOptionResponse) GetData() *ClusterAutoScalingOption {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListAutoScalingOptionRequest struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ProjectID            string   `protobuf:"bytes,2,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Creator              string   `protobuf:"bytes,3,opt,name=creator,proto3" json:"creator,omitempty"`
	Updater              string   `protobuf:"bytes,4,opt,name=updater,proto3" json:"updater,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ListAutoScalingOptionRequest) Reset()         { *m = ListAutoScalingOptionRequest{} }
func (m *ListAutoScalingOptionRequest) String() string { return proto.CompactTextString(m) }
func (*ListAutoScalingOptionRequest) ProtoMessage()    {}
func (*ListAutoScalingOptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{137}
}

func (m *ListAutoScalingOptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAutoScalingOptionRequest.Unmarshal(m, b)
}
func (m *ListAutoScalingOptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAutoScalingOptionRequest.Marshal(b, m, deterministic)
}
func (m *ListAutoScalingOptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAutoScalingOptionRequest.Merge(m, src)
}
func (m *ListAutoScalingOptionRequest) XXX_Size() int {
	return xxx_messageInfo_ListAutoScalingOptionRequest.Size(m)
}
func (m *ListAutoScalingOptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAutoScalingOptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAutoScalingOptionRequest proto.InternalMessageInfo

func (m *ListAutoScalingOptionRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ListAutoScalingOptionRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *ListAutoScalingOptionRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *ListAutoScalingOptionRequest) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

type ListAutoScalingOptionResponse struct {
	Code                 uint32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                        `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*ClusterAutoScalingOption `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-" bson:"-"`
	XXX_unrecognized     []byte                      `json:"-" bson:"-"`
	XXX_sizecache        int32                       `json:"-" bson:"-"`
}

func (m *ListAutoScalingOptionResponse) Reset()         { *m = ListAutoScalingOptionResponse{} }
func (m *ListAutoScalingOptionResponse) String() string { return proto.CompactTextString(m) }
func (*ListAutoScalingOptionResponse) ProtoMessage()    {}
func (*ListAutoScalingOptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{138}
}

func (m *ListAutoScalingOptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAutoScalingOptionResponse.Unmarshal(m, b)
}
func (m *ListAutoScalingOptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAutoScalingOptionResponse.Marshal(b, m, deterministic)
}
func (m *ListAutoScalingOptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAutoScalingOptionResponse.Merge(m, src)
}
func (m *ListAutoScalingOptionResponse) XXX_Size() int {
	return xxx_messageInfo_ListAutoScalingOptionResponse.Size(m)
}
func (m *ListAutoScalingOptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAutoScalingOptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListAutoScalingOptionResponse proto.InternalMessageInfo

func (m *ListAutoScalingOptionResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListAutoScalingOptionResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListAutoScalingOptionResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListAutoScalingOptionResponse) GetData() []*ClusterAutoScalingOption {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Cluster)(nil), "clustermanager.Cluster")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.Cluster.BcsAddonsEntry")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.Cluster.ExtraAddonsEntry")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.Cluster.LabelsEntry")
	proto.RegisterMapType((map[string]*Node)(nil), "clustermanager.Cluster.MasterEntry")
	proto.RegisterType((*Node)(nil), "clustermanager.Node")
	proto.RegisterType((*NetworkSetting)(nil), "clustermanager.NetworkSetting")
	proto.RegisterType((*ClusterBasicSetting)(nil), "clustermanager.ClusterBasicSetting")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.ClusterBasicSetting.ClusterTagsEntry")
	proto.RegisterType((*ClusterAdvanceSetting)(nil), "clustermanager.ClusterAdvanceSetting")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.ClusterAdvanceSetting.ExtraArgsEntry")
	proto.RegisterType((*NodeSetting)(nil), "clustermanager.NodeSetting")
	proto.RegisterType((*ClusterCredential)(nil), "clustermanager.ClusterCredential")
	proto.RegisterType((*Namespace)(nil), "clustermanager.Namespace")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.Namespace.LabelsEntry")
	proto.RegisterType((*ResourceQuota)(nil), "clustermanager.ResourceQuota")
	proto.RegisterType((*Credential)(nil), "clustermanager.Credential")
	proto.RegisterType((*BKOpsPlugin)(nil), "clustermanager.BKOpsPlugin")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.BKOpsPlugin.ParamsEntry")
	proto.RegisterType((*Action)(nil), "clustermanager.Action")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.Action.PluginsEntry")
	proto.RegisterType((*ClusterMgr)(nil), "clustermanager.ClusterMgr")
	proto.RegisterType((*NodeGroupMgr)(nil), "clustermanager.NodeGroupMgr")
	proto.RegisterType((*OSInfo)(nil), "clustermanager.OSInfo")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.OSInfo.RegionsEntry")
	proto.RegisterType((*Cloud)(nil), "clustermanager.Cloud")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.Cloud.ExtraPluginsEntry")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.Cloud.OpsPluginsEntry")
	proto.RegisterType((*NodeGroup)(nil), "clustermanager.NodeGroup")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.NodeGroup.LabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.NodeGroup.TaintsEntry")
	proto.RegisterType((*AutoScalingGroup)(nil), "clustermanager.AutoScalingGroup")
	proto.RegisterType((*DataDisk)(nil), "clustermanager.DataDisk")
	proto.RegisterType((*InternetAccessible)(nil), "clustermanager.InternetAccessible")
	proto.RegisterType((*LaunchConfiguration)(nil), "clustermanager.LaunchConfiguration")
	proto.RegisterType((*ImageInfo)(nil), "clustermanager.ImageInfo")
	proto.RegisterType((*ClusterAutoScalingOption)(nil), "clustermanager.ClusterAutoScalingOption")
	proto.RegisterType((*Project)(nil), "clustermanager.Project")
	proto.RegisterMapType((map[string]*Credential)(nil), "clustermanager.Project.CredentialsEntry")
	proto.RegisterType((*Task)(nil), "clustermanager.Task")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.Task.CommonParamsEntry")
	proto.RegisterMapType((map[string]*Step)(nil), "clustermanager.Task.StepsEntry")
	proto.RegisterType((*Step)(nil), "clustermanager.Step")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.Step.ParamsEntry")
	proto.RegisterType((*TkeCidr)(nil), "clustermanager.TkeCidr")
	proto.RegisterType((*TkeCidrCount)(nil), "clustermanager.TkeCidrCount")
	proto.RegisterType((*CreateClusterReq)(nil), "clustermanager.CreateClusterReq")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.CreateClusterReq.BcsAddonsEntry")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.CreateClusterReq.ExtraAddonsEntry")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.CreateClusterReq.LabelsEntry")
	proto.RegisterType((*CreateClusterResp)(nil), "clustermanager.CreateClusterResp")
	proto.RegisterType((*DeleteClusterReq)(nil), "clustermanager.DeleteClusterReq")
	proto.RegisterType((*DeleteClusterResp)(nil), "clustermanager.DeleteClusterResp")
	proto.RegisterType((*UpdateClusterReq)(nil), "clustermanager.UpdateClusterReq")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.UpdateClusterReq.BcsAddonsEntry")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.UpdateClusterReq.ExtraAddonsEntry")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.UpdateClusterReq.LabelsEntry")
	proto.RegisterType((*UpdateClusterResp)(nil), "clustermanager.UpdateClusterResp")
	proto.RegisterType((*GetClusterReq)(nil), "clustermanager.GetClusterReq")
	proto.RegisterType((*GetClusterResp)(nil), "clustermanager.GetClusterResp")
	proto.RegisterType((*GetNodeRequest)(nil), "clustermanager.GetNodeRequest")
	proto.RegisterType((*GetNodeResponse)(nil), "clustermanager.GetNodeResponse")
	proto.RegisterType((*ListClusterReq)(nil), "clustermanager.ListClusterReq")
	proto.RegisterType((*ListClusterResp)(nil), "clustermanager.ListClusterResp")
	proto.RegisterType((*ListNodesInClusterRequest)(nil), "clustermanager.ListNodesInClusterRequest")
	proto.RegisterType((*ListNodesInClusterResponse)(nil), "clustermanager.ListNodesInClusterResponse")
	proto.RegisterType((*GetClusterCredentialReq)(nil), "clustermanager.GetClusterCredentialReq")
	proto.RegisterType((*GetClusterCredentialResp)(nil), "clustermanager.GetClusterCredentialResp")
	proto.RegisterType((*UpdateClusterCredentialReq)(nil), "clustermanager.UpdateClusterCredentialReq")
	proto.RegisterType((*UpdateClusterCredentialResp)(nil), "clustermanager.UpdateClusterCredentialResp")
	proto.RegisterType((*DeleteClusterCredentialReq)(nil), "clustermanager.DeleteClusterCredentialReq")
	proto.RegisterType((*DeleteClusterCredentialResp)(nil), "clustermanager.DeleteClusterCredentialResp")
	proto.RegisterType((*ListClusterCredentialReq)(nil), "clustermanager.ListClusterCredentialReq")
	proto.RegisterType((*ListClusterCredentialResp)(nil), "clustermanager.ListClusterCredentialResp")
	proto.RegisterType((*InitFederationClusterReq)(nil), "clustermanager.InitFederationClusterReq")
	proto.RegisterType((*InitFederationClusterResp)(nil), "clustermanager.InitFederationClusterResp")
	proto.RegisterType((*AddFederatedClusterReq)(nil), "clustermanager.AddFederatedClusterReq")
	proto.RegisterType((*AddFederatedClusterResp)(nil), "clustermanager.AddFederatedClusterResp")
	proto.RegisterType((*CreateNamespaceReq)(nil), "clustermanager.CreateNamespaceReq")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.CreateNamespaceReq.LabelsEntry")
	proto.RegisterType((*CreateNamespaceResp)(nil), "clustermanager.CreateNamespaceResp")
	proto.RegisterType((*DeleteNamespaceReq)(nil), "clustermanager.DeleteNamespaceReq")
	proto.RegisterType((*DeleteNamespaceResp)(nil), "clustermanager.DeleteNamespaceResp")
	proto.RegisterType((*UpdateNamespaceReq)(nil), "clustermanager.UpdateNamespaceReq")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.UpdateNamespaceReq.LabelsEntry")
	proto.RegisterType((*UpdateNamespaceResp)(nil), "clustermanager.UpdateNamespaceResp")
	proto.RegisterType((*GetNamespaceReq)(nil), "clustermanager.GetNamespaceReq")
	proto.RegisterType((*GetNamespaceResp)(nil), "clustermanager.GetNamespaceResp")
	proto.RegisterType((*ListNamespaceReq)(nil), "clustermanager.ListNamespaceReq")
	proto.RegisterType((*ListNamespaceResp)(nil), "clustermanager.ListNamespaceResp")
	proto.RegisterType((*CreateNamespaceQuotaReq)(nil), "clustermanager.CreateNamespaceQuotaReq")
	proto.RegisterType((*CreateNamespaceQuotaResp)(nil), "clustermanager.CreateNamespaceQuotaResp")
	proto.RegisterType((*CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData)(nil), "clustermanager.CreateNamespaceQuotaResp.CreateNamespaceQuotaRespData")
	proto.RegisterType((*DeleteNamespaceQuotaReq)(nil), "clustermanager.DeleteNamespaceQuotaReq")
	proto.RegisterType((*DeleteNamespaceQuotaResp)(nil), "clustermanager.DeleteNamespaceQuotaResp")
	proto.RegisterType((*UpdateNamespaceQuotaReq)(nil), "clustermanager.UpdateNamespaceQuotaReq")
	proto.RegisterType((*UpdateNamespaceQuotaResp)(nil), "clustermanager.UpdateNamespaceQuotaResp")
	proto.RegisterType((*GetNamespaceQuotaReq)(nil), "clustermanager.GetNamespaceQuotaReq")
	proto.RegisterType((*GetNamespaceQuotaResp)(nil), "clustermanager.GetNamespaceQuotaResp")
	proto.RegisterType((*ListNamespaceQuotaReq)(nil), "clustermanager.ListNamespaceQuotaReq")
	proto.RegisterType((*ListNamespaceQuotaResp)(nil), "clustermanager.ListNamespaceQuotaResp")
	proto.RegisterType((*CreateNamespaceWithQuotaReq)(nil), "clustermanager.CreateNamespaceWithQuotaReq")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.CreateNamespaceWithQuotaReq.LabelsEntry")
	proto.RegisterType((*CreateNamespaceWithQuotaResp)(nil), "clustermanager.CreateNamespaceWithQuotaResp")
	proto.RegisterType((*CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData)(nil), "clustermanager.CreateNamespaceWithQuotaResp.CreateNamespaceWithQuotaRespData")
	proto.RegisterType((*CreateProjectRequest)(nil), "clustermanager.CreateProjectRequest")
	proto.RegisterMapType((map[string]*Credential)(nil), "clustermanager.CreateProjectRequest.CredentialsEntry")
	proto.RegisterType((*CreateProjectResponse)(nil), "clustermanager.CreateProjectResponse")
	proto.RegisterType((*UpdateProjectRequest)(nil), "clustermanager.UpdateProjectRequest")
	proto.RegisterMapType((map[string]*Credential)(nil), "clustermanager.UpdateProjectRequest.CredentialsEntry")
	proto.RegisterType((*UpdateProjectResponse)(nil), "clustermanager.UpdateProjectResponse")
	proto.RegisterType((*DeleteProjectRequest)(nil), "clustermanager.DeleteProjectRequest")
	proto.RegisterType((*DeleteProjectResponse)(nil), "clustermanager.DeleteProjectResponse")
	proto.RegisterType((*GetProjectRequest)(nil), "clustermanager.GetProjectRequest")
	proto.RegisterType((*GetProjectResponse)(nil), "clustermanager.GetProjectResponse")
	proto.RegisterType((*ListProjectRequest)(nil), "clustermanager.ListProjectRequest")
	proto.RegisterType((*ListProjectResponse)(nil), "clustermanager.ListProjectResponse")
	proto.RegisterType((*CreateCloudRequest)(nil), "clustermanager.CreateCloudRequest")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.CreateCloudRequest.ExtraPluginsEntry")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.CreateCloudRequest.OpsPluginsEntry")
	proto.RegisterType((*CreateCloudResponse)(nil), "clustermanager.CreateCloudResponse")
	proto.RegisterType((*UpdateCloudRequest)(nil), "clustermanager.UpdateCloudRequest")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.UpdateCloudRequest.ExtraPluginsEntry")
	proto.RegisterMapType((map[string]*BKOpsPlugin)(nil), "clustermanager.UpdateCloudRequest.OpsPluginsEntry")
	proto.RegisterType((*UpdateCloudResponse)(nil), "clustermanager.UpdateCloudResponse")
	proto.RegisterType((*DeleteCloudRequest)(nil), "clustermanager.DeleteCloudRequest")
	proto.RegisterType((*DeleteCloudResponse)(nil), "clustermanager.DeleteCloudResponse")
	proto.RegisterType((*GetCloudRequest)(nil), "clustermanager.GetCloudRequest")
	proto.RegisterType((*GetCloudResponse)(nil), "clustermanager.GetCloudResponse")
	proto.RegisterType((*ListCloudRequest)(nil), "clustermanager.ListCloudRequest")
	proto.RegisterType((*ListCloudResponse)(nil), "clustermanager.ListCloudResponse")
	proto.RegisterType((*CreateNodeGroupRequest)(nil), "clustermanager.CreateNodeGroupRequest")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.CreateNodeGroupRequest.LabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.CreateNodeGroupRequest.TaintsEntry")
	proto.RegisterType((*CreateNodeGroupResponse)(nil), "clustermanager.CreateNodeGroupResponse")
	proto.RegisterType((*UpdateNodeGroupRequest)(nil), "clustermanager.UpdateNodeGroupRequest")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.UpdateNodeGroupRequest.LabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.UpdateNodeGroupRequest.TaintsEntry")
	proto.RegisterType((*UpdateNodeGroupResponse)(nil), "clustermanager.UpdateNodeGroupResponse")
	proto.RegisterType((*DeleteNodeGroupRequest)(nil), "clustermanager.DeleteNodeGroupRequest")
	proto.RegisterType((*DeleteNodeGroupResponse)(nil), "clustermanager.DeleteNodeGroupResponse")
	proto.RegisterType((*GetNodeGroupRequest)(nil), "clustermanager.GetNodeGroupRequest")
	proto.RegisterType((*GetNodeGroupResponse)(nil), "clustermanager.GetNodeGroupResponse")
	proto.RegisterType((*ListNodeGroupRequest)(nil), "clustermanager.ListNodeGroupRequest")
	proto.RegisterType((*ListNodeGroupResponse)(nil), "clustermanager.ListNodeGroupResponse")
	proto.RegisterType((*AddNodesRequest)(nil), "clustermanager.AddNodesRequest")
	proto.RegisterType((*AddNodesResponse)(nil), "clustermanager.AddNodesResponse")
	proto.RegisterType((*DeleteNodesRequest)(nil), "clustermanager.DeleteNodesRequest")
	proto.RegisterType((*DeleteNodesResponse)(nil), "clustermanager.DeleteNodesResponse")
	proto.RegisterType((*MoveNodesToGroupRequest)(nil), "clustermanager.MoveNodesToGroupRequest")
	proto.RegisterType((*MoveNodesToGroupResponse)(nil), "clustermanager.MoveNodesToGroupResponse")
	proto.RegisterType((*RemoveNodesFromGroupRequest)(nil), "clustermanager.RemoveNodesFromGroupRequest")
	proto.RegisterType((*RemoveNodesFromGroupResponse)(nil), "clustermanager.RemoveNodesFromGroupResponse")
	proto.RegisterType((*CleanNodesInGroupRequest)(nil), "clustermanager.CleanNodesInGroupRequest")
	proto.RegisterType((*CleanNodesInGroupResponse)(nil), "clustermanager.CleanNodesInGroupResponse")
	proto.RegisterType((*ListNodesInGroupResponse)(nil), "clustermanager.ListNodesInGroupResponse")
	proto.RegisterType((*UpdateGroupDesiredNodeRequest)(nil), "clustermanager.UpdateGroupDesiredNodeRequest")
	proto.RegisterType((*UpdateGroupDesiredNodeResponse)(nil), "clustermanager.UpdateGroupDesiredNodeResponse")
	proto.RegisterType((*CreateTaskRequest)(nil), "clustermanager.CreateTaskRequest")
	proto.RegisterMapType((map[string]*Step)(nil), "clustermanager.CreateTaskRequest.StepsEntry")
	proto.RegisterType((*CreateTaskResponse)(nil), "clustermanager.CreateTaskResponse")
	proto.RegisterType((*UpdateTaskRequest)(nil), "clustermanager.UpdateTaskRequest")
	proto.RegisterMapType((map[string]*Step)(nil), "clustermanager.UpdateTaskRequest.StepsEntry")
	proto.RegisterType((*UpdateTaskResponse)(nil), "clustermanager.UpdateTaskResponse")
	proto.RegisterType((*DeleteTaskRequest)(nil), "clustermanager.DeleteTaskRequest")
	proto.RegisterType((*DeleteTaskResponse)(nil), "clustermanager.DeleteTaskResponse")
	proto.RegisterType((*GetTaskRequest)(nil), "clustermanager.GetTaskRequest")
	proto.RegisterType((*GetTaskResponse)(nil), "clustermanager.GetTaskResponse")
	proto.RegisterType((*ListTaskRequest)(nil), "clustermanager.ListTaskRequest")
	proto.RegisterType((*ListTaskResponse)(nil), "clustermanager.ListTaskResponse")
	proto.RegisterType((*CreateAutoScalingOptionRequest)(nil), "clustermanager.CreateAutoScalingOptionRequest")
	proto.RegisterType((*CreateAutoScalingOptionResponse)(nil), "clustermanager.CreateAutoScalingOptionResponse")
	proto.RegisterType((*UpdateAutoScalingOptionRequest)(nil), "clustermanager.UpdateAutoScalingOptionRequest")
	proto.RegisterType((*UpdateAutoScalingOptionResponse)(nil), "clustermanager.UpdateAutoScalingOptionResponse")
	proto.RegisterType((*DeleteAutoScalingOptionRequest)(nil), "clustermanager.DeleteAutoScalingOptionRequest")
	proto.RegisterType((*DeleteAutoScalingOptionResponse)(nil), "clustermanager.DeleteAutoScalingOptionResponse")
	proto.RegisterType((*GetAutoScalingOptionRequest)(nil), "clustermanager.GetAutoScalingOptionRequest")
	proto.RegisterType((*GetAutoScalingOptionResponse)(nil), "clustermanager.GetAutoScalingOptionResponse")
	proto.RegisterType((*ListAutoScalingOptionRequest)(nil), "clustermanager.ListAutoScalingOptionRequest")
	proto.RegisterType((*ListAutoScalingOptionResponse)(nil), "clustermanager.ListAutoScalingOptionResponse")
}

func init() { proto.RegisterFile("clustermanager.proto", fileDescriptor_d789ea45d40d7a6b) }

var fileDescriptor_d789ea45d40d7a6b = []byte{
	// 27545 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0xfd, 0x79, 0x70, 0x14, 0x57,
	0xba, 0x20, 0x8a, 0x4f, 0x4a, 0x42, 0x88, 0x23, 0xd6, 0x34, 0xd8, 0x32, 0xd8, 0xb4, 0xac, 0xf6,
	0x82, 0xb3, 0x59, 0xd3, 0x76, 0x63, 0xcb, 0x6b, 0x96, 0x24, 0xb0, 0xcc, 0x26, 0xa7, 0x84, 0xbb,
	0x6d, 0xb7, 0xed, 0x2e, 0x54, 0x89, 0x5c, 0x2d, 0xa9, 0x4a, 0x5d, 0x55, 0xc2, 0xa6, 0xfb, 0xde,
	0xdb, 0x12, 0x48, 0x20, 0x81, 0x36, 0x12, 0xc4, 0x22, 0xc4, 0x22, 0xcc, 0x22, 0x63, 0x4b, 0x02,
	0x1b, 0x43, 0x51, 0x2a, 0xa1, 0x98, 0xf8, 0xcd, 0x9d, 0x99, 0x9e, 0x99, 0x88, 0x89, 0x1f, 0xf7,
	0xdd, 0x78, 0xef, 0x8f, 0xd9, 0xde, 0xa5, 0x32, 0xab, 0xf4, 0xde, 0x8d, 0xd1, 0xbc, 0x17, 0xf1,
	0xe2, 0x4d, 0xf0, 0xe2, 0x2d, 0x91, 0xe7, 0x3b, 0x79, 0xf2, 0x64, 0x56, 0x96, 0x10, 0x98, 0x76,
	0x83, 0x6f, 0xf3, 0x0f, 0xaa, 0x93, 0x67, 0x3f, 0xdf, 0xf9, 0xf6, 0xf3, 0x7d, 0x68, 0x61, 0x75,
	0x5d, 0x63, 0x38, 0xa2, 0x84, 0xea, 0xbd, 0x01, 0x6f, 0x8d, 0x12, 0x5a, 0xd9, 0x10, 0x0a, 0x46,
	0x82, 0xfc, 0x5c, 0x7b, 0xe9, 0xe2, 0x27, 0x6a, 0x82, 0xc1, 0x9a, 0x3a, 0x65, 0x95, 0xb7, 0xc1,
	0xbf, 0xca, 0x1b, 0x08, 0x04, 0x23, 0xde, 0x88, 0x3f, 0x18, 0x08, 0x43, 0xed, 0xc5, 0xcb, 0xf1,
	0x7f, 0xd5, 0x2b, 0x6a, 0x94, 0xc0, 0x8a, 0xf0, 0x67, 0xde, 0x9a, 0x1a, 0x25, 0xb4, 0x2a, 0xd8,
	0x80, 0x6b, 0xb8, 0xd4, 0x7e, 0x6c, 0x87, 0xb7, 0xce, 0xef, 0xf3, 0x46, 0x94, 0x55, 0xe6, 0x1f,
	0xe4, 0xc3, 0x52, 0x32, 0x08, 0xfe, 0xb5, 0xad, 0x71, 0xfb, 0xaa, 0xcf, 0x42, 0xde, 0x86, 0x06,
	0x25, 0x44, 0x1a, 0x16, 0x1d, 0x7f, 0x12, 0xcd, 0x2c, 0x81, 0x79, 0xf1, 0x1f, 0xa3, 0x59, 0x64,
	0x8a, 0xe5, 0xa5, 0x05, 0x5c, 0x21, 0xb7, 0x6c, 0x96, 0xe7, 0x2d, 0x55, 0x7a, 0x5d, 0xb0, 0x4a,
	0xc5, 0xd5, 0x9e, 0x92, 0x4a, 0x6d, 0x4f, 0xeb, 0xc4, 0xee, 0xc1, 0xc4, 0xd8, 0x78, 0xf2, 0xd0,
	0xe0, 0xc4, 0xf1, 0x3d, 0xc9, 0x1b, 0x67, 0xcb, 0x4b, 0x27, 0xe3, 0x1d, 0xfa, 0xe9, 0xb8, 0x16,
	0xef, 0x4e, 0x44, 0x63, 0x9e, 0x92, 0xca, 0x15, 0x1b, 0x5e, 0xae, 0x5c, 0xf1, 0x4b, 0xe3, 0x9f,
	0x6c, 0x35, 0xe6, 0xdf, 0x42, 0xf9, 0xe4, 0xc7, 0x66, 0x6f, 0xbd, 0x52, 0x90, 0x85, 0x47, 0x58,
	0xaa, 0x4a, 0x4b, 0x04, 0xb6, 0x5c, 0x9c, 0x0d, 0x9d, 0x6a, 0x3d, 0x9d, 0xc9, 0x0b, 0x97, 0x64,
	0xf6, 0x13, 0x7f, 0x84, 0x43, 0x8f, 0x6c, 0x57, 0x7c, 0x4a, 0x08, 0x2f, 0xbe, 0x84, 0x4e, 0x36,
	0x1b, 0x77, 0xa5, 0xa8, 0xd2, 0x36, 0xc1, 0xed, 0xbb, 0xb8, 0x41, 0x3b, 0xbf, 0x4b, 0x3f, 0xd9,
	0x9f, 0x1a, 0x39, 0x07, 0x7d, 0x27, 0xa2, 0xb1, 0x54, 0xf3, 0xa1, 0x89, 0x5d, 0xe7, 0xe1, 0x67,
	0xb2, 0xaf, 0x25, 0x11, 0x6d, 0x9a, 0xd8, 0x3d, 0xa8, 0xb5, 0xed, 0x99, 0x8c, 0x77, 0x24, 0x0f,
	0x0d, 0xa6, 0x46, 0xce, 0x95, 0x97, 0xa6, 0x86, 0x2f, 0x69, 0x63, 0xbd, 0x50, 0xf1, 0xed, 0x60,
	0x38, 0x92, 0x18, 0x1f, 0xd0, 0x9b, 0x47, 0x64, 0xb7, 0x11, 0xf8, 0x0d, 0x28, 0xaf, 0x21, 0x14,
	0xdc, 0xe1, 0xf7, 0x29, 0xa1, 0x82, 0x1c, 0x3c, 0x9b, 0x55, 0xaa, 0xb4, 0x5c, 0xa0, 0x85, 0x62,
	0x21, 0x19, 0x39, 0x76, 0x60, 0xa2, 0xb5, 0x33, 0x39, 0x36, 0x3c, 0x19, 0xef, 0x48, 0x44, 0x63,
	0x89, 0xd8, 0x81, 0xe4, 0xe5, 0x51, 0xed, 0xe4, 0xfe, 0xf2, 0x52, 0x99, 0xd6, 0xe5, 0xd7, 0xa2,
	0xdc, 0x90, 0x52, 0xe3, 0x0f, 0x06, 0x0a, 0x66, 0xe0, 0xae, 0x7e, 0xa2, 0x4a, 0x4f, 0x08, 0xa4,
	0x48, 0xe4, 0xc9, 0xf6, 0x74, 0xc4, 0xb4, 0x53, 0xa7, 0xc8, 0x94, 0xc8, 0x37, 0x7e, 0x23, 0x9a,
	0xb1, 0xa3, 0xa1, 0xba, 0xbc, 0xb4, 0x20, 0x17, 0xb7, 0xfb, 0xb9, 0x2a, 0xbd, 0x20, 0x40, 0x89,
	0x28, 0x40, 0x33, 0xbd, 0xbd, 0x49, 0xeb, 0x1f, 0xdc, 0xd1, 0x50, 0x3d, 0x19, 0xef, 0x80, 0x05,
	0x27, 0xbb, 0x46, 0xb4, 0x33, 0xbb, 0x13, 0xd1, 0xfd, 0x13, 0x27, 0x4e, 0x6a, 0xe3, 0xad, 0xda,
	0xc0, 0x57, 0x32, 0x34, 0xe1, 0xdf, 0x46, 0xb3, 0x1a, 0x42, 0xc1, 0xdf, 0x28, 0xd5, 0x91, 0xf2,
	0xd2, 0x82, 0x99, 0xb8, 0x47, 0x41, 0x95, 0x9e, 0x13, 0xac, 0x52, 0x71, 0xb1, 0xd5, 0x6b, 0xeb,
	0xb7, 0xa9, 0xe6, 0x43, 0xc9, 0xbe, 0x96, 0x89, 0x81, 0xeb, 0xc9, 0xe3, 0xc3, 0xe5, 0xa5, 0xb2,
	0x55, 0x8d, 0xff, 0x35, 0x42, 0xdb, 0x1a, 0xc3, 0xfe, 0x80, 0x12, 0x0e, 0x97, 0x97, 0x16, 0xe4,
	0x59, 0xa0, 0xc5, 0x14, 0x8b, 0xab, 0xd2, 0xfb, 0x4a, 0x44, 0xfb, 0xb4, 0x7d, 0x03, 0x18, 0xbc,
	0xf0, 0x89, 0xe8, 0x27, 0xce, 0xe9, 0xb1, 0x9e, 0x44, 0xac, 0xab, 0x64, 0x53, 0xa9, 0x47, 0x66,
	0x1a, 0xf3, 0xbf, 0x45, 0xf9, 0x4a, 0x60, 0x87, 0x3f, 0x14, 0x0c, 0xd4, 0x2b, 0x81, 0x48, 0xc1,
	0x2c, 0x3c, 0xc4, 0x16, 0x55, 0xda, 0x28, 0xb0, 0xe5, 0xe2, 0xeb, 0xd6, 0x18, 0x23, 0xd7, 0xb5,
	0x98, 0x31, 0x06, 0x59, 0x3f, 0xde, 0xc8, 0xc9, 0x78, 0x87, 0xd6, 0x3d, 0x32, 0xd1, 0xd4, 0xae,
	0x35, 0xc5, 0x23, 0x4a, 0x38, 0x32, 0x19, 0xef, 0xf0, 0x29, 0xdb, 0x1a, 0x6b, 0x26, 0xe3, 0x1d,
	0x0d, 0xa1, 0xa0, 0x4f, 0x66, 0xfb, 0xe2, 0xdf, 0x45, 0x48, 0x09, 0xd4, 0xf8, 0x03, 0x4a, 0xd5,
	0xce, 0x06, 0xa5, 0x00, 0xe1, 0x11, 0xd7, 0xa8, 0xd2, 0x4a, 0x81, 0x29, 0x36, 0x8f, 0x3d, 0x19,
	0x3f, 0xac, 0x77, 0xa9, 0x5a, 0xbc, 0x57, 0x3f, 0xd8, 0x35, 0x19, 0xef, 0xa8, 0x7d, 0x39, 0x7c,
	0xab, 0xa9, 0xb9, 0x5e, 0x09, 0x07, 0xc3, 0x32, 0x53, 0x9b, 0xff, 0x08, 0xe5, 0xfb, 0xc3, 0x65,
	0x9f, 0x1b, 0x20, 0xef, 0xdf, 0xa1, 0x14, 0xe4, 0x17, 0x72, 0xcb, 0xf2, 0x3c, 0xaf, 0xaa, 0xd2,
	0xcb, 0x02, 0x5b, 0x2e, 0x3e, 0xaf, 0x1f, 0x1d, 0xd1, 0x7a, 0xce, 0xc3, 0xee, 0x24, 0xf7, 0x7f,
	0xad, 0x75, 0x9e, 0x86, 0x61, 0x8c, 0x43, 0x1d, 0x3d, 0x9a, 0x1a, 0x36, 0x00, 0x7c, 0xbb, 0xb7,
	0x2e, 0xac, 0xc8, 0x6c, 0x3b, 0xfe, 0x3d, 0x7a, 0x01, 0xf1, 0x94, 0x67, 0xe3, 0x29, 0xbf, 0xa8,
	0x4a, 0x6b, 0x04, 0xb6, 0x5c, 0x2c, 0x22, 0x73, 0xc6, 0x80, 0x39, 0x19, 0xef, 0xb0, 0xe0, 0xfd,
	0x56, 0x53, 0x73, 0xd8, 0x1f, 0xa8, 0xa9, 0x53, 0x64, 0xb6, 0x01, 0xff, 0x1e, 0xca, 0xad, 0xf3,
	0x6e, 0x53, 0xea, 0xc2, 0x05, 0x73, 0x0a, 0xb3, 0x97, 0xe5, 0x8b, 0x3f, 0x5d, 0xe9, 0x40, 0x80,
	0xe4, 0x9e, 0xac, 0xdc, 0x88, 0x6b, 0x95, 0x05, 0x22, 0xa1, 0x9d, 0x9e, 0xc7, 0x55, 0xe9, 0x51,
	0x81, 0xb4, 0x33, 0xef, 0xbc, 0x7e, 0x7a, 0x6f, 0x72, 0xe8, 0x86, 0x4c, 0x4a, 0xf9, 0xd7, 0xd1,
	0xcc, 0xea, 0x90, 0xe2, 0x8d, 0x04, 0x43, 0x05, 0x73, 0xf1, 0x5c, 0x7f, 0xaa, 0x4a, 0x85, 0x82,
	0x59, 0x26, 0x2e, 0x22, 0x57, 0x0a, 0x1f, 0x9d, 0xd6, 0x76, 0x5c, 0x1b, 0x8d, 0xa5, 0x9a, 0x5a,
	0x65, 0xf3, 0x3b, 0xbf, 0x14, 0x21, 0xfc, 0xa7, 0x52, 0xe5, 0xaf, 0x57, 0x0a, 0xe6, 0x19, 0x3d,
	0xc8, 0x4c, 0x89, 0xf1, 0xbd, 0xb1, 0xc1, 0x67, 0x7e, 0x9f, 0x0f, 0xdf, 0xad, 0x12, 0xbe, 0x39,
	0x0b, 0xcd, 0xda, 0x56, 0x1d, 0x96, 0x7c, 0xbe, 0x60, 0x20, 0x5c, 0xb0, 0x00, 0x2f, 0xed, 0xd9,
	0x4c, 0x4b, 0xf3, 0x98, 0x15, 0x61, 0x75, 0x31, 0x4e, 0x95, 0xae, 0x72, 0x82, 0xd5, 0x5e, 0x1c,
	0xe4, 0x60, 0x8a, 0x64, 0xa5, 0x47, 0xae, 0xa6, 0xc6, 0x8f, 0xa7, 0x06, 0x3a, 0x00, 0xa1, 0x26,
	0xc7, 0x86, 0xf5, 0x6e, 0x35, 0x31, 0x7a, 0x55, 0x1b, 0x6e, 0x4f, 0x7d, 0xd1, 0x0a, 0xf0, 0x0e,
	0x0b, 0x4b, 0xc4, 0xfb, 0x92, 0x57, 0xce, 0x68, 0xf1, 0xde, 0x44, 0xec, 0x40, 0x22, 0xba, 0x0f,
	0xce, 0x17, 0x70, 0x08, 0x54, 0x80, 0x7e, 0xb4, 0x91, 0xeb, 0xfa, 0xc8, 0xa1, 0x44, 0xb4, 0x2b,
	0x35, 0x70, 0x4e, 0x6b, 0x35, 0x7a, 0x80, 0x71, 0xa1, 0xbe, 0xd6, 0x4f, 0x50, 0xb5, 0x3e, 0xf4,
	0x85, 0x16, 0x8d, 0x6a, 0x6d, 0x27, 0xb4, 0x0b, 0xfb, 0xb5, 0x8e, 0xc3, 0x89, 0xeb, 0xfb, 0xb5,
	0x9e, 0x2e, 0xe8, 0x21, 0x75, 0x69, 0x77, 0xf2, 0xd0, 0xe0, 0xad, 0xa6, 0x5d, 0xb2, 0x35, 0x6b,
	0xbe, 0x35, 0x0b, 0xe5, 0x2b, 0x9f, 0x47, 0x42, 0x5e, 0xb2, 0x0b, 0x3c, 0xde, 0x85, 0x65, 0x99,
	0x76, 0xa1, 0xcc, 0xaa, 0x0a, 0xfb, 0x10, 0xe5, 0x54, 0xe9, 0x0a, 0x27, 0xb0, 0x7d, 0x88, 0x67,
	0x9d, 0x3b, 0x31, 0x71, 0xe6, 0x84, 0x76, 0xf6, 0xb0, 0xde, 0xfe, 0xa5, 0x76, 0xb9, 0x37, 0x11,
	0x3f, 0x3d, 0xd1, 0xa4, 0x1a, 0x77, 0xdf, 0xbc, 0x91, 0x06, 0xd6, 0xc6, 0x98, 0x2a, 0x11, 0x8d,
	0x4d, 0x9c, 0x69, 0x49, 0xf6, 0x1e, 0x4b, 0xc4, 0x3a, 0xf4, 0xc3, 0xd7, 0x57, 0x25, 0xa2, 0xed,
	0xc6, 0x7f, 0x7a, 0x7f, 0xa7, 0xb6, 0x6f, 0x40, 0xeb, 0xdd, 0x43, 0x3a, 0xc0, 0x84, 0x29, 0xd3,
	0xfa, 0x93, 0xfb, 0xae, 0xea, 0x4d, 0xcd, 0xb0, 0x0b, 0xe9, 0x8b, 0x4f, 0x44, 0xbb, 0xe0, 0x00,
	0x8c, 0x5d, 0x60, 0xe7, 0xcc, 0x6f, 0x45, 0x79, 0xe1, 0x9d, 0xe1, 0x88, 0x52, 0x5f, 0x5e, 0x5a,
	0xf0, 0x08, 0x86, 0xc5, 0x57, 0x54, 0xe9, 0xe7, 0x02, 0x2d, 0x14, 0x85, 0xda, 0xc6, 0x6d, 0x4a,
	0x28, 0xa0, 0x44, 0x94, 0x30, 0x41, 0xd0, 0xfd, 0x83, 0x5a, 0x4f, 0x4b, 0x22, 0x76, 0x40, 0xbb,
	0xfe, 0xad, 0xd6, 0x7d, 0x29, 0x11, 0xdd, 0x97, 0xfa, 0xae, 0x45, 0x8f, 0xf5, 0x18, 0x98, 0xde,
	0x6c, 0xc5, 0x5f, 0xe1, 0x10, 0x82, 0x3d, 0xc4, 0x37, 0x72, 0x21, 0xee, 0xf9, 0x20, 0xa7, 0x4a,
	0xdd, 0x9c, 0xc0, 0x7c, 0x10, 0x9b, 0x38, 0x32, 0xfd, 0xe1, 0x81, 0x64, 0xcf, 0x1e, 0x7a, 0x33,
	0xb5, 0xd6, 0xaf, 0xf5, 0xfe, 0xf6, 0x44, 0xec, 0x80, 0x7e, 0xe4, 0x6a, 0xf2, 0xd0, 0x29, 0xbd,
	0xb7, 0x6d, 0x32, 0xde, 0xb1, 0x49, 0xda, 0x2c, 0xad, 0x2f, 0x2b, 0xfd, 0xa4, 0x64, 0xe3, 0xd6,
	0xca, 0xaa, 0x32, 0x79, 0x19, 0xc0, 0x8d, 0xde, 0x7e, 0x34, 0x39, 0x3c, 0x00, 0xbd, 0x3c, 0x3f,
	0x19, 0xef, 0x28, 0xdf, 0x5c, 0x5a, 0x56, 0x51, 0xb6, 0xb9, 0xb4, 0x6c, 0x73, 0x15, 0xad, 0x99,
	0xdc, 0xff, 0x75, 0xf2, 0xab, 0xfd, 0x14, 0x95, 0xa4, 0xf6, 0x5e, 0x4c, 0x0d, 0x74, 0x24, 0x47,
	0xaf, 0xe8, 0xfb, 0xce, 0x3e, 0x2f, 0x33, 0xd3, 0xe1, 0x3f, 0x41, 0xb9, 0xf5, 0x5e, 0xe3, 0xc0,
	0x0b, 0x16, 0x4d, 0x7d, 0xe1, 0x37, 0xe1, 0x5a, 0x00, 0x0a, 0x45, 0xaa, 0xf4, 0x13, 0x81, 0xb4,
	0x33, 0xef, 0x2e, 0xfc, 0x2a, 0x2c, 0xaf, 0xd0, 0xda, 0x8e, 0xa4, 0x06, 0x06, 0x65, 0xf2, 0x99,
	0xef, 0xe1, 0xd0, 0xbc, 0x80, 0x12, 0xf9, 0x2c, 0x18, 0xaa, 0xad, 0x54, 0x22, 0x11, 0x7f, 0xa0,
	0x26, 0x5c, 0xf0, 0x68, 0x21, 0xb7, 0x2c, 0x5f, 0x5c, 0xea, 0x1c, 0x6a, 0xb3, 0xad, 0x9a, 0x67,
	0x9d, 0x2a, 0x95, 0x08, 0xce, 0xb6, 0xe2, 0x6a, 0xb2, 0x7d, 0x63, 0x07, 0x92, 0xa3, 0xfd, 0xda,
	0xa9, 0x58, 0x72, 0xa0, 0x29, 0x35, 0x7c, 0x03, 0xc8, 0xf0, 0x44, 0x7f, 0x53, 0xea, 0x7c, 0x33,
	0x00, 0x80, 0x7e, 0xf8, 0x3a, 0x94, 0xcb, 0xce, 0x2e, 0xf8, 0x7f, 0xcb, 0x51, 0xbe, 0xce, 0xe3,
	0x0d, 0xfb, 0xab, 0xe9, 0xbc, 0x1e, 0xc3, 0xf3, 0xca, 0xb4, 0x05, 0x6c, 0x5d, 0x4f, 0x48, 0x95,
	0x82, 0x82, 0x6b, 0x2f, 0xe2, 0x2f, 0x08, 0xd4, 0xe0, 0xb9, 0x91, 0x8b, 0x6d, 0xce, 0x30, 0x71,
	0x63, 0xbf, 0x76, 0x7e, 0x17, 0x00, 0x76, 0xb2, 0xbd, 0x4d, 0xef, 0xff, 0x1a, 0x9f, 0x3d, 0x21,
	0x92, 0x3b, 0x1a, 0xaa, 0x93, 0x43, 0xed, 0xc6, 0x79, 0x99, 0x4b, 0x20, 0x2b, 0x82, 0x85, 0xb8,
	0x0e, 0xc7, 0xff, 0x27, 0x0e, 0x3d, 0x4a, 0x3e, 0x48, 0xbe, 0x1d, 0xde, 0x40, 0xb5, 0x42, 0xd7,
	0x53, 0x80, 0xd7, 0xf3, 0x4c, 0x86, 0xf5, 0xd8, 0x6b, 0x7b, 0xfe, 0xa0, 0x4a, 0x7f, 0x25, 0x3c,
	0x66, 0x54, 0x55, 0xd2, 0xbb, 0x12, 0xbd, 0xb0, 0xa8, 0xd4, 0xf8, 0xf1, 0x89, 0xa3, 0x57, 0x93,
	0xed, 0xd7, 0xf5, 0xa6, 0x0b, 0x8e, 0x45, 0x69, 0x3d, 0x23, 0xc9, 0x43, 0x83, 0xfe, 0x86, 0x1d,
	0x61, 0xf8, 0x6c, 0x2c, 0x6c, 0xf8, 0xba, 0x76, 0x6c, 0x30, 0x35, 0xde, 0x93, 0x1a, 0xe8, 0x30,
	0xd0, 0x24, 0x6e, 0x90, 0x1c, 0x6a, 0xbf, 0xd5, 0xb4, 0xcb, 0x60, 0xe3, 0x8e, 0x9c, 0x4e, 0xb6,
	0x5f, 0xd7, 0xda, 0xbe, 0x9a, 0xe8, 0x6f, 0xd2, 0x2f, 0xef, 0x92, 0x33, 0xac, 0x82, 0xff, 0x1f,
	0x38, 0x34, 0x3b, 0x10, 0xf4, 0x59, 0xcb, 0x7a, 0x1c, 0x2f, 0x6b, 0x49, 0x1a, 0xf8, 0x58, 0x75,
	0x3c, 0x2a, 0xa7, 0x4a, 0x5d, 0x9c, 0x60, 0x6b, 0x27, 0xfe, 0x0d, 0x59, 0xc3, 0xbe, 0x5d, 0xc9,
	0x5d, 0xd7, 0x1d, 0xb3, 0xd7, 0x3b, 0x76, 0xa5, 0xc6, 0xc6, 0x92, 0xc7, 0x87, 0xb5, 0xb1, 0x5e,
	0x83, 0x57, 0x08, 0x56, 0xd7, 0x2a, 0x21, 0xbd, 0xf7, 0x92, 0xde, 0x39, 0x0c, 0x85, 0x70, 0x30,
	0xe9, 0xd3, 0x06, 0x46, 0x23, 0x31, 0x7a, 0x2e, 0x11, 0xed, 0xa4, 0x7d, 0x7a, 0x4a, 0x2a, 0xf5,
	0xee, 0x9e, 0xc4, 0x8d, 0xe3, 0x04, 0x67, 0x75, 0xef, 0xd2, 0x7b, 0x2f, 0xc9, 0xb6, 0xd9, 0xf0,
	0xdf, 0x70, 0x28, 0x37, 0x1c, 0xf1, 0x46, 0x1a, 0xc3, 0x05, 0x8b, 0x31, 0xb2, 0x38, 0xc6, 0xa9,
	0xd2, 0xaf, 0x04, 0x52, 0x26, 0xca, 0x2c, 0x96, 0x83, 0x41, 0x52, 0xbb, 0xc7, 0xe0, 0x67, 0x89,
	0x5c, 0x26, 0x55, 0x95, 0x6f, 0x5e, 0x3f, 0x19, 0xef, 0x90, 0xb7, 0x6e, 0xde, 0x0c, 0x7f, 0x95,
	0x96, 0x6d, 0x2c, 0x23, 0x85, 0xeb, 0xa4, 0x8d, 0x5b, 0xe5, 0x32, 0x8c, 0x1a, 0xca, 0xab, 0xca,
	0xa5, 0x8d, 0xe5, 0x1f, 0x48, 0x55, 0xe5, 0x5b, 0x36, 0xdf, 0xf6, 0xac, 0x0d, 0xbd, 0x24, 0xe7,
	0x99, 0xad, 0xe5, 0x99, 0xa4, 0xb1, 0x9c, 0x67, 0xb6, 0x95, 0x73, 0xa1, 0xa9, 0x3c, 0xd7, 0xde,
	0x52, 0x26, 0xb3, 0x32, 0xe8, 0x38, 0x90, 0xd5, 0x50, 0xc1, 0x12, 0x86, 0x8e, 0x93, 0x32, 0x3b,
	0x1d, 0xd7, 0x8f, 0x5f, 0xd1, 0x0f, 0x5f, 0xc2, 0x74, 0x9c, 0x7c, 0xe7, 0x1b, 0x51, 0x3e, 0xb9,
	0x8c, 0x18, 0x49, 0x3e, 0x81, 0xbb, 0xa8, 0x34, 0xd0, 0x2f, 0x5b, 0x2e, 0x3e, 0xc7, 0xde, 0x71,
	0x8a, 0x22, 0x97, 0x35, 0x06, 0x7c, 0x4a, 0xa8, 0xce, 0xbb, 0x73, 0x55, 0x70, 0x07, 0xfe, 0xff,
	0xf9, 0xdb, 0x9e, 0xc7, 0x42, 0x8b, 0xe4, 0x3c, 0xb3, 0x5c, 0x9e, 0x49, 0x3e, 0xc8, 0xff, 0x4c,
	0x66, 0xfb, 0x5b, 0xfc, 0x0a, 0xca, 0x67, 0xf8, 0x15, 0x7e, 0x3e, 0xca, 0xae, 0x55, 0x76, 0x82,
	0x5c, 0x24, 0x1b, 0x7f, 0xf2, 0x0b, 0xd1, 0x8c, 0x1d, 0xde, 0xba, 0x46, 0x22, 0xc9, 0xc8, 0xf0,
	0xa3, 0x38, 0xeb, 0x65, 0x6e, 0xf1, 0xfb, 0x68, 0xae, 0x9d, 0x1f, 0x70, 0x69, 0xbd, 0x86, 0x6d,
	0xed, 0x02, 0x98, 0x9e, 0x0d, 0x5b, 0x1a, 0xc2, 0x15, 0x75, 0x8d, 0x35, 0xfe, 0x00, 0xdb, 0xf5,
	0x87, 0x68, 0xbe, 0x93, 0xc8, 0xde, 0xbf, 0xce, 0xb7, 0xa0, 0x7c, 0x06, 0x63, 0xbb, 0xf4, 0x2b,
	0xd8, 0xfb, 0x5d, 0xe8, 0x76, 0x9b, 0x98, 0x0e, 0x8b, 0x5f, 0x57, 0xa5, 0x62, 0xf4, 0xb2, 0x60,
	0x8a, 0x98, 0xe2, 0x0a, 0x90, 0xa9, 0xd8, 0x03, 0x07, 0x81, 0x2b, 0x11, 0xeb, 0x02, 0x42, 0xc3,
	0x02, 0x70, 0xd1, 0x64, 0x1e, 0xca, 0x31, 0xba, 0xe4, 0x57, 0xa3, 0x5c, 0xe3, 0x1a, 0x50, 0xb9,
	0xb4, 0x40, 0x95, 0x16, 0x09, 0xa4, 0x48, 0xcc, 0x87, 0xbb, 0x99, 0x88, 0x1d, 0x28, 0x2f, 0x95,
	0x49, 0x21, 0xff, 0x0a, 0x9a, 0xe9, 0x0f, 0x04, 0x94, 0x50, 0x79, 0x05, 0x11, 0x34, 0xb1, 0x10,
	0x65, 0x96, 0x89, 0x0b, 0xa0, 0x0d, 0x66, 0xbd, 0x0e, 0x24, 0xa2, 0xa3, 0xe5, 0x15, 0xb2, 0xf9,
	0x8d, 0xff, 0x10, 0xcd, 0xf6, 0x07, 0xc2, 0x11, 0x03, 0x9d, 0x60, 0x80, 0x03, 0xe9, 0x72, 0xad,
	0x2a, 0xbd, 0x28, 0xd8, 0x3e, 0x88, 0x4f, 0xeb, 0xfd, 0x31, 0xed, 0xe4, 0x7e, 0xc2, 0x80, 0x0e,
	0x1d, 0x49, 0x7e, 0x7d, 0x3e, 0x11, 0xfd, 0x86, 0x5e, 0xbb, 0x44, 0x34, 0x96, 0xfc, 0x32, 0x26,
	0xdb, 0xda, 0xf0, 0x3f, 0x43, 0xd9, 0x25, 0x15, 0x5b, 0xb1, 0x8c, 0x38, 0x07, 0x78, 0x60, 0xe3,
	0xb7, 0x38, 0x0f, 0xe6, 0x53, 0x52, 0xb1, 0x95, 0x88, 0x74, 0x46, 0x29, 0xbf, 0x12, 0x65, 0xd7,
	0x2b, 0xf5, 0x58, 0x0a, 0x9c, 0xe3, 0x79, 0x42, 0x95, 0x1e, 0x17, 0x8c, 0xdf, 0x22, 0x4f, 0x27,
	0xaf, 0x0d, 0x1d, 0x35, 0xeb, 0xd7, 0x2b, 0xf5, 0xfc, 0xcb, 0x28, 0x7b, 0x7d, 0xc5, 0x56, 0x2c,
	0xfd, 0xcd, 0xf1, 0x3c, 0xab, 0x4a, 0x3f, 0x15, 0x8c, 0xdf, 0xe2, 0x13, 0x50, 0x7f, 0xbd, 0xd9,
	0x39, 0x3b, 0xc3, 0xd5, 0xb2, 0x51, 0x85, 0xef, 0xb6, 0xf0, 0x0a, 0x48, 0x7a, 0x9f, 0xa9, 0x52,
	0x84, 0xa2, 0x95, 0xdf, 0x40, 0x07, 0x70, 0x2a, 0x66, 0x1f, 0x6d, 0xfa, 0xe9, 0xeb, 0x7a, 0xe7,
	0xb0, 0x16, 0x37, 0xf0, 0x76, 0x22, 0x1e, 0x4d, 0xc6, 0xbf, 0xd4, 0x86, 0xfb, 0x12, 0xd7, 0xdb,
	0x93, 0x7d, 0x2d, 0x93, 0xf1, 0x76, 0x0b, 0xcd, 0x2c, 0x2f, 0xc4, 0x98, 0xa2, 0x0c, 0xff, 0x69,
	0xe2, 0x91, 0xe5, 0x85, 0xeb, 0xa4, 0xf2, 0x8d, 0x65, 0xa5, 0xcb, 0x0b, 0x33, 0x20, 0x0d, 0x09,
	0xe5, 0xfe, 0x2e, 0x18, 0x50, 0xa8, 0xbc, 0xf8, 0xbc, 0x2a, 0x3d, 0x2b, 0xe4, 0x18, 0x45, 0xe2,
	0x52, 0xb2, 0xfe, 0x6e, 0x83, 0x76, 0x68, 0x1d, 0x31, 0xe7, 0x8e, 0x93, 0x86, 0xfc, 0x16, 0x94,
	0x6f, 0x40, 0xc3, 0xfa, 0x50, 0xb0, 0xb1, 0xa1, 0xbc, 0x94, 0x08, 0x85, 0x2b, 0x54, 0x49, 0x10,
	0xd8, 0x72, 0x71, 0x09, 0x74, 0x67, 0x08, 0x85, 0x97, 0x4f, 0x26, 0xfb, 0x5a, 0x36, 0x9b, 0xdf,
	0x0a, 0xcb, 0x4b, 0x65, 0xb6, 0x26, 0xbf, 0x8e, 0xd5, 0x90, 0x80, 0xc4, 0xb7, 0x4c, 0x95, 0x9e,
	0x61, 0x35, 0x24, 0x05, 0x8e, 0xce, 0xa8, 0x8a, 0x80, 0xd5, 0x84, 0xac, 0x41, 0xd9, 0xef, 0x55,
	0x94, 0x60, 0xf9, 0x8e, 0x00, 0xa6, 0xf1, 0x5b, 0x5c, 0xe4, 0x68, 0xfb, 0x5e, 0x45, 0x89, 0x31,
	0x05, 0xe3, 0x1b, 0xff, 0x21, 0xd5, 0x09, 0x80, 0xd8, 0x56, 0xa2, 0x4a, 0x6f, 0x51, 0x9d, 0xc0,
	0xcf, 0xd9, 0x86, 0xa0, 0x19, 0xb0, 0x28, 0xec, 0xf5, 0x71, 0xed, 0xda, 0xc9, 0xc9, 0x78, 0x87,
	0x7e, 0xed, 0xb2, 0xd6, 0xff, 0xad, 0xb1, 0x57, 0xfb, 0x4e, 0x6b, 0xd7, 0x4e, 0x26, 0x87, 0xda,
	0xa9, 0xde, 0x60, 0x33, 0xca, 0x6d, 0xf0, 0x86, 0xc3, 0x9f, 0xf9, 0x0a, 0xe6, 0x58, 0x8a, 0x03,
	0x52, 0x24, 0x3e, 0xaf, 0x0d, 0x9f, 0x34, 0xba, 0x32, 0x65, 0x06, 0x6d, 0x64, 0x4f, 0xf2, 0x74,
	0xf3, 0xf2, 0x42, 0xc2, 0x65, 0x00, 0xfb, 0x7c, 0xe1, 0x0b, 0x6d, 0x64, 0x8f, 0x4c, 0x9a, 0xf0,
	0x1f, 0x21, 0x7c, 0x50, 0x58, 0x6a, 0x9b, 0xe3, 0x29, 0x57, 0xa5, 0x75, 0x02, 0x39, 0x13, 0xf1,
	0x35, 0xc7, 0xd9, 0x61, 0xe1, 0x9e, 0x3d, 0xbd, 0x57, 0x0b, 0x2d, 0xd1, 0x27, 0x3a, 0x9a, 0x3a,
	0xdf, 0x0c, 0x7c, 0x8f, 0x21, 0xf4, 0x4b, 0x32, 0xee, 0xb6, 0xf8, 0x7d, 0x55, 0x7a, 0x0f, 0x55,
	0x09, 0x18, 0x35, 0x88, 0x1b, 0x89, 0x9a, 0x06, 0x70, 0x80, 0x1b, 0x4a, 0x61, 0x81, 0xd7, 0x60,
	0x93, 0xce, 0x7c, 0x45, 0x4e, 0x22, 0x11, 0xed, 0x32, 0x4e, 0xb7, 0xc6, 0x38, 0x5d, 0x18, 0xa5,
	0xe8, 0x76, 0x16, 0x9a, 0x6b, 0xe7, 0x28, 0xf9, 0xf7, 0xd0, 0x3c, 0xf3, 0xe4, 0x2a, 0x76, 0xbc,
	0x58, 0x52, 0x5e, 0x2a, 0x13, 0x24, 0xb4, 0x5c, 0x95, 0x9e, 0x17, 0x9c, 0xdf, 0xc4, 0x47, 0x89,
	0x58, 0xd3, 0x34, 0x6a, 0x14, 0x69, 0xfd, 0x97, 0xb4, 0x13, 0x4d, 0xfa, 0xe5, 0xd3, 0xb2, 0xb3,
	0x22, 0xef, 0x43, 0xf3, 0xc2, 0x4a, 0x68, 0x87, 0xbf, 0x5a, 0xa1, 0xfd, 0x02, 0xa6, 0x2a, 0x56,
	0xa5, 0xb5, 0x82, 0xf3, 0x9b, 0xf8, 0x34, 0xf4, 0x4b, 0x8a, 0x09, 0x33, 0xd8, 0xd7, 0x52, 0x5e,
	0xa1, 0x1d, 0x3f, 0xce, 0x8c, 0xe2, 0x68, 0xc6, 0xcb, 0x68, 0x4e, 0xbd, 0xf7, 0x73, 0x63, 0xa7,
	0x2a, 0x82, 0xbe, 0xcd, 0x8d, 0xf5, 0x04, 0x9b, 0xe1, 0xb9, 0xdb, 0xbf, 0x98, 0xa0, 0x6b, 0x08,
	0x0b, 0xfd, 0x4d, 0xda, 0xd9, 0x0b, 0x15, 0x41, 0x9f, 0xde, 0x7b, 0x69, 0x62, 0x6f, 0xb7, 0x6c,
	0xaf, 0xc8, 0xbf, 0x87, 0xfb, 0xac, 0x84, 0x91, 0x8c, 0x3e, 0x41, 0xe3, 0xb5, 0x5a, 0x95, 0x56,
	0x08, 0xf6, 0x2f, 0xe2, 0x13, 0x64, 0x37, 0x70, 0x87, 0xc9, 0xbe, 0x16, 0xf2, 0x89, 0xe9, 0xd7,
	0xaa, 0x5c, 0xd4, 0x95, 0x8d, 0x1e, 0x71, 0x61, 0x9b, 0xf9, 0x15, 0x28, 0x6b, 0x4b, 0x25, 0xd9,
	0xf4, 0x27, 0x55, 0x69, 0xb1, 0x90, 0xb5, 0xa5, 0x52, 0x5c, 0x48, 0x88, 0x08, 0xde, 0x88, 0x2d,
	0x95, 0x04, 0x0d, 0x66, 0x6d, 0xa9, 0xe4, 0x25, 0x34, 0x73, 0x87, 0x12, 0x0a, 0x1b, 0x77, 0x05,
	0x36, 0xf4, 0x39, 0x55, 0x7a, 0x5a, 0x30, 0xcb, 0xc4, 0xc7, 0x2d, 0x49, 0x8d, 0xee, 0x22, 0x70,
	0xd5, 0xb2, 0x59, 0x87, 0xff, 0x17, 0x9c, 0xa5, 0x2a, 0xf1, 0xd6, 0x84, 0x0b, 0xb2, 0xb1, 0x98,
	0xf3, 0xe2, 0x34, 0x78, 0x7c, 0xb3, 0xcc, 0x68, 0x06, 0x72, 0x4f, 0x9d, 0x2a, 0xf9, 0x05, 0xb6,
	0x37, 0xf1, 0x03, 0x42, 0xe4, 0x8e, 0x47, 0xb5, 0xd6, 0x6f, 0x23, 0xde, 0x1a, 0x07, 0xd4, 0xb2,
	0xa2, 0x1e, 0x68, 0x44, 0x08, 0x6b, 0xf4, 0xed, 0xa0, 0xd6, 0x7a, 0xce, 0x60, 0x83, 0x7b, 0xba,
	0x92, 0xa3, 0x43, 0xa9, 0xa6, 0xdd, 0xa9, 0x63, 0x07, 0x12, 0xd1, 0x2e, 0xd0, 0x96, 0x68, 0x3d,
	0x6d, 0xda, 0xf5, 0xab, 0x32, 0x3b, 0xd0, 0xe2, 0x37, 0xd0, 0x7c, 0xe7, 0x74, 0xee, 0x86, 0x8f,
	0x29, 0x1a, 0x9d, 0x81, 0x16, 0xb9, 0xf2, 0xfd, 0xfc, 0x3b, 0x28, 0xa7, 0xbc, 0xe2, 0x3d, 0x38,
	0x94, 0x3c, 0xc0, 0x17, 0xb8, 0x40, 0xfc, 0xd9, 0x06, 0x87, 0x1c, 0x6c, 0x94, 0x52, 0xde, 0xde,
	0xa1, 0x9d, 0xc2, 0x4d, 0xf8, 0xdf, 0xa1, 0xf9, 0xd5, 0xc1, 0x40, 0xc4, 0xeb, 0x0f, 0x28, 0x21,
	0xb9, 0x31, 0x10, 0xf1, 0x53, 0xe5, 0xf0, 0x66, 0x55, 0xda, 0x20, 0xa4, 0x7d, 0x14, 0xd7, 0x12,
	0x59, 0xc9, 0x2e, 0x28, 0x68, 0xc3, 0x27, 0x93, 0x5d, 0x97, 0xa8, 0x0a, 0xaf, 0x14, 0x33, 0xe3,
	0xb7, 0x9a, 0x9a, 0x4b, 0xcc, 0xe6, 0x3e, 0x39, 0xad, 0x2b, 0x5e, 0x46, 0x73, 0x43, 0xf0, 0xe7,
	0x7b, 0x04, 0x64, 0xb2, 0x2d, 0x45, 0xa7, 0xe3, 0x93, 0xb8, 0xc8, 0x31, 0x22, 0x81, 0x1a, 0x47,
	0x35, 0xfe, 0x5f, 0x65, 0xa1, 0x59, 0xa0, 0x3b, 0x08, 0xd5, 0x84, 0x0b, 0x72, 0xa6, 0x04, 0x1d,
	0xfb, 0xb6, 0x12, 0xfd, 0x49, 0xc8, 0x04, 0x9d, 0xff, 0x9d, 0x53, 0xa5, 0xff, 0xca, 0x09, 0x56,
	0x6f, 0xe2, 0x7f, 0xe1, 0x40, 0xf5, 0xa3, 0xf5, 0xb4, 0xe8, 0x83, 0x03, 0xda, 0x89, 0x23, 0xa9,
	0xbd, 0x17, 0x81, 0xea, 0x82, 0xb8, 0x60, 0xec, 0xf1, 0x99, 0x16, 0x4a, 0x87, 0x6b, 0x95, 0x9d,
	0x89, 0x68, 0xcc, 0x38, 0x12, 0xa9, 0xa2, 0xdc, 0xb8, 0x69, 0x4a, 0x68, 0x32, 0xde, 0x61, 0xfc,
	0x36, 0x76, 0x25, 0x14, 0xac, 0xab, 0xc3, 0x05, 0x65, 0x91, 0x6a, 0x1f, 0x29, 0xaf, 0xac, 0xfe,
	0x54, 0xf1, 0x35, 0xd6, 0x19, 0x3b, 0xb7, 0x0b, 0x03, 0x42, 0x22, 0x1a, 0xb3, 0x06, 0x1b, 0x3f,
	0x9e, 0x1c, 0xdc, 0xaf, 0xf5, 0x8c, 0x68, 0xfb, 0x06, 0xe9, 0x78, 0xda, 0xd9, 0xbe, 0x44, 0xf4,
	0x22, 0xfc, 0x4c, 0x5c, 0xdf, 0x3f, 0x71, 0xe4, 0x0a, 0x5c, 0xab, 0x57, 0x27, 0x8e, 0x5c, 0x99,
	0xe8, 0x3b, 0x44, 0x09, 0x91, 0x31, 0x48, 0x71, 0xa1, 0x81, 0x70, 0x57, 0xf8, 0xbc, 0x11, 0xef,
	0x0a, 0x9f, 0x3f, 0xf4, 0xfa, 0x2a, 0xe3, 0xaf, 0x55, 0xdb, 0xaa, 0xc3, 0xab, 0xea, 0xfc, 0xdb,
	0x56, 0x29, 0x91, 0x6a, 0xdf, 0xab, 0xb2, 0xb5, 0xda, 0xc5, 0xaf, 0xa1, 0xb9, 0xf6, 0x1d, 0xb9,
	0x2b, 0xe8, 0xed, 0xc8, 0x42, 0xf9, 0x8c, 0x78, 0xc7, 0x9f, 0xe0, 0xd0, 0x3c, 0x10, 0xd1, 0xd6,
	0x87, 0xbc, 0x0d, 0x9f, 0x56, 0x78, 0x23, 0x9f, 0x12, 0xa4, 0x12, 0x56, 0xa5, 0x06, 0xc1, 0xf9,
	0x4d, 0xfc, 0x88, 0xc8, 0x7c, 0xe6, 0x71, 0x27, 0xa2, 0x31, 0x22, 0xe1, 0x99, 0x52, 0x29, 0xb9,
	0x97, 0x8c, 0xc0, 0x07, 0x62, 0x1c, 0x80, 0x39, 0xd4, 0xb1, 0x96, 0x48, 0x50, 0xf3, 0x2a, 0xe8,
	0x44, 0x76, 0x8e, 0xc7, 0x7f, 0x84, 0xf2, 0xeb, 0x83, 0x8d, 0x81, 0x48, 0x95, 0x37, 0x54, 0xa3,
	0x44, 0xc8, 0x15, 0x00, 0xed, 0x2f, 0x53, 0x2e, 0x3e, 0x4f, 0xe8, 0x19, 0x08, 0x98, 0xc7, 0x8f,
	0x12, 0x21, 0x74, 0xd7, 0x75, 0x76, 0x6c, 0x3c, 0xaa, 0xcc, 0xb6, 0x2b, 0x3a, 0x99, 0x8d, 0x16,
	0x10, 0xa8, 0x2b, 0x09, 0x29, 0x3e, 0x25, 0x10, 0xf1, 0x7b, 0xeb, 0xf8, 0x27, 0xd0, 0xac, 0x30,
	0x86, 0x8b, 0x0d, 0x74, 0x5b, 0xad, 0x02, 0xe3, 0xab, 0xc5, 0xf0, 0xc0, 0x06, 0x33, 0x6c, 0x4c,
	0x11, 0x9a, 0x5d, 0x5d, 0xe7, 0x57, 0x02, 0x91, 0x4d, 0x41, 0x03, 0x64, 0xe0, 0xea, 0xc8, 0xb6,
	0x32, 0xfe, 0x69, 0x34, 0x07, 0xba, 0x93, 0x7c, 0xbe, 0x90, 0x12, 0x0e, 0x03, 0xad, 0x90, 0xed,
	0x85, 0x58, 0x55, 0xeb, 0x2d, 0x51, 0x42, 0x91, 0x52, 0x6f, 0xc4, 0x0b, 0x56, 0x0f, 0x99, 0x29,
	0x31, 0xe6, 0xd1, 0x18, 0x56, 0x42, 0x55, 0xc1, 0x5a, 0x25, 0x00, 0xc6, 0x0d, 0xd9, 0x2a, 0x30,
	0xc6, 0x20, 0x93, 0x2a, 0x0d, 0xd6, 0x7b, 0xfd, 0x01, 0x60, 0x61, 0x65, 0x7b, 0x21, 0x5f, 0x88,
	0xf2, 0xab, 0x83, 0x81, 0x80, 0x52, 0x6d, 0x4c, 0x4d, 0x01, 0xae, 0x52, 0x66, 0x8b, 0x1c, 0x0a,
	0xe3, 0x59, 0x77, 0x50, 0x18, 0x23, 0xa7, 0xc2, 0xd8, 0x94, 0x76, 0xd2, 0x77, 0x59, 0xfc, 0xe9,
	0xb6, 0xea, 0xf0, 0x0a, 0x83, 0xee, 0xac, 0xf0, 0xd6, 0x28, 0x81, 0x88, 0x41, 0x62, 0xf7, 0x9d,
	0x4b, 0xf6, 0xb5, 0xb0, 0x82, 0x50, 0xd1, 0xbf, 0xc9, 0x46, 0xb3, 0x36, 0x7b, 0xeb, 0x95, 0x70,
	0x83, 0xb7, 0x5a, 0xe1, 0x79, 0x94, 0x13, 0xf0, 0xd6, 0x2b, 0xe4, 0x4c, 0xf0, 0xdf, 0xfc, 0x6a,
	0x77, 0xf3, 0x17, 0x1c, 0x8c, 0xab, 0x5d, 0xea, 0x09, 0xd6, 0x86, 0x03, 0xe7, 0xc3, 0xd8, 0x65,
	0x96, 0xda, 0xec, 0x32, 0x70, 0x32, 0xac, 0x55, 0xe5, 0x75, 0xaa, 0xd8, 0x9f, 0x81, 0xb1, 0x58,
	0x9a, 0x52, 0x88, 0x4e, 0x97, 0x55, 0xed, 0x53, 0xfd, 0xfd, 0x62, 0x94, 0x57, 0xef, 0xfd, 0xfc,
	0xdd, 0xc6, 0x60, 0xc4, 0x4b, 0x0e, 0x8d, 0xfe, 0x76, 0xec, 0xf5, 0xcc, 0x3b, 0xec, 0x75, 0x5e,
	0x9a, 0x72, 0xfe, 0x55, 0x34, 0xeb, 0xb7, 0x46, 0x47, 0x1b, 0xfd, 0xe1, 0x48, 0xc1, 0x2c, 0x3c,
	0xbb, 0x27, 0x9d, 0xb3, 0x93, 0x95, 0x70, 0xb0, 0x31, 0x54, 0xad, 0xe0, 0x11, 0x65, 0xab, 0xfe,
	0xf7, 0x10, 0xed, 0x8b, 0x0d, 0xa9, 0x0a, 0x3d, 0x25, 0x58, 0x07, 0x25, 0x2e, 0x64, 0xed, 0x84,
	0x81, 0x30, 0x39, 0xcc, 0xff, 0x98, 0x85, 0xe6, 0xd8, 0xc6, 0x37, 0x8e, 0x22, 0x60, 0x36, 0x32,
	0x6f, 0x1a, 0x2d, 0xb8, 0xb7, 0xa3, 0xad, 0xb6, 0x5b, 0x40, 0xd9, 0xbb, 0xf9, 0x34, 0x9a, 0x13,
	0x62, 0x87, 0x37, 0xef, 0x9d, 0xad, 0x90, 0x7f, 0xd4, 0x6e, 0x69, 0xa4, 0x02, 0x81, 0xfd, 0x74,
	0x72, 0xef, 0x70, 0x3a, 0x33, 0xd3, 0x4e, 0xe7, 0x51, 0x2a, 0x4d, 0xc2, 0xc9, 0x99, 0x42, 0x5d,
	0x01, 0x9a, 0x59, 0xaf, 0x84, 0xc3, 0xde, 0x1a, 0xf3, 0x7a, 0x99, 0x3f, 0x8b, 0x57, 0xaa, 0xd2,
	0xcf, 0xd0, 0xf3, 0x82, 0x7d, 0xcf, 0xc4, 0x02, 0x76, 0x6f, 0x41, 0x7f, 0x3e, 0xd1, 0xda, 0x39,
	0x71, 0xe6, 0x44, 0x51, 0x35, 0x42, 0x0c, 0x16, 0x4b, 0x3f, 0x41, 0x63, 0x06, 0x4a, 0x75, 0xc8,
	0xc4, 0xa3, 0x32, 0xf9, 0x55, 0xfc, 0x33, 0x55, 0x5a, 0x86, 0x9e, 0x15, 0x98, 0xc6, 0x62, 0x01,
	0xb0, 0x5d, 0x64, 0xa8, 0x2b, 0xe7, 0xf5, 0xb6, 0x6b, 0xe4, 0x10, 0xff, 0x5d, 0x36, 0xca, 0x67,
	0x54, 0x25, 0xfc, 0x3a, 0x94, 0x0b, 0xaa, 0x7b, 0x42, 0x37, 0x8c, 0x49, 0x0b, 0xa4, 0x48, 0x7c,
	0x0a, 0x2c, 0x38, 0xc9, 0x6f, 0x47, 0x93, 0xa3, 0x86, 0xf8, 0xa5, 0xf7, 0x7f, 0x0d, 0x25, 0x89,
	0x68, 0x6c, 0x5b, 0x6d, 0x38, 0xd8, 0x10, 0x96, 0x49, 0x55, 0xfe, 0x63, 0x94, 0x53, 0xe7, 0x0f,
	0xd4, 0x12, 0x14, 0xff, 0x8e, 0x2a, 0xad, 0x17, 0x70, 0x81, 0xf8, 0x26, 0x54, 0xd4, 0x07, 0x07,
	0xf4, 0x13, 0xe3, 0x13, 0x07, 0x6f, 0xe8, 0x5d, 0xe7, 0x28, 0x5b, 0xa8, 0x75, 0x1f, 0x48, 0x7d,
	0x77, 0x4d, 0x3f, 0xbd, 0x57, 0xdb, 0xbb, 0x27, 0x35, 0xde, 0x93, 0x1c, 0xbd, 0x92, 0x88, 0xed,
	0xd7, 0xf6, 0x0d, 0xa4, 0xc6, 0xfb, 0x93, 0x83, 0xfb, 0x41, 0xf9, 0x2b, 0xe3, 0x6e, 0xf8, 0x66,
	0xce, 0x10, 0xe8, 0x42, 0xde, 0x7a, 0x93, 0x73, 0x7d, 0x6e, 0x0a, 0x05, 0xd0, 0xca, 0x0a, 0x5c,
	0x13, 0x38, 0x0e, 0x6c, 0x95, 0x25, 0x6d, 0xc5, 0x17, 0x6c, 0xb3, 0x61, 0x94, 0x92, 0x58, 0x4b,
	0x7b, 0x72, 0xe2, 0x58, 0x2b, 0x51, 0x39, 0x1f, 0xb9, 0x6a, 0x48, 0x70, 0xe7, 0xf7, 0x24, 0x8f,
	0x1f, 0x96, 0x49, 0x63, 0xe3, 0x8e, 0x31, 0x1d, 0xdf, 0xd5, 0x1d, 0x7b, 0x4f, 0x95, 0x2a, 0xd1,
	0xbb, 0x02, 0xbb, 0xf5, 0xa2, 0x87, 0x5d, 0x38, 0xcc, 0xc8, 0xd4, 0x92, 0x5f, 0x02, 0xba, 0x4b,
	0x4e, 0x71, 0xef, 0x45, 0x83, 0x39, 0xe9, 0x38, 0xac, 0x5d, 0x3b, 0x97, 0x18, 0xeb, 0xd7, 0xbf,
	0x6b, 0x36, 0x36, 0x07, 0xd7, 0x29, 0xfa, 0x9f, 0x73, 0x50, 0xae, 0x54, 0x6d, 0xdc, 0x22, 0x7e,
	0x90, 0x43, 0xa8, 0x21, 0xa4, 0xc0, 0xaf, 0x70, 0x01, 0x57, 0x98, 0xbd, 0x6c, 0x96, 0x67, 0x2f,
	0xa7, 0x4a, 0xbb, 0x39, 0x81, 0xf9, 0x20, 0x36, 0xa6, 0x06, 0x3a, 0x0c, 0x0e, 0xa8, 0xdd, 0x60,
	0xba, 0x68, 0xdf, 0x30, 0x3e, 0xd8, 0x2c, 0x88, 0x7e, 0xf7, 0x64, 0xbf, 0x7e, 0x94, 0x18, 0x21,
	0xb5, 0x7d, 0x83, 0x89, 0xb1, 0x7e, 0xa3, 0xbc, 0xed, 0x98, 0xd6, 0x3f, 0x98, 0x1a, 0x39, 0x07,
	0x25, 0x7a, 0xfb, 0x85, 0xd4, 0x40, 0x87, 0xd6, 0xde, 0x09, 0x92, 0xb3, 0x36, 0xdc, 0xa1, 0xf7,
	0x5e, 0x81, 0xc2, 0xd4, 0xc8, 0xb9, 0xe4, 0xb7, 0xa3, 0x5a, 0xdb, 0x11, 0xa8, 0x29, 0x33, 0x53,
	0xe0, 0x2f, 0x72, 0x28, 0xbf, 0x21, 0x18, 0x8e, 0x98, 0x73, 0xcd, 0xfa, 0x01, 0xe7, 0xda, 0xd3,
	0x75, 0xe7, 0xb9, 0xb2, 0x93, 0xe3, 0x6b, 0xd1, 0xcc, 0x06, 0x7c, 0x60, 0x26, 0xe4, 0xa5, 0xd9,
	0x45, 0xa0, 0xe6, 0x4a, 0x38, 0x56, 0x02, 0x75, 0x58, 0x1a, 0x35, 0x1b, 0x8a, 0x4b, 0xb5, 0xd6,
	0x6b, 0x89, 0xb1, 0x83, 0xb0, 0x1a, 0x38, 0x40, 0x18, 0x0a, 0xd8, 0x5a, 0xd9, 0xac, 0xb8, 0xf8,
	0x17, 0x68, 0x36, 0xdb, 0xcd, 0x7d, 0xd3, 0x83, 0x16, 0xbf, 0xa2, 0x4a, 0x3f, 0x47, 0x2f, 0x0a,
	0x04, 0x58, 0x44, 0x01, 0xe0, 0x87, 0xb2, 0xc1, 0xda, 0xbe, 0x53, 0xa9, 0xdd, 0x63, 0x74, 0x87,
	0xc9, 0x44, 0xf1, 0x3e, 0x17, 0x35, 0xe7, 0x22, 0x44, 0x70, 0xf4, 0xa6, 0x9a, 0x10, 0xbf, 0x1d,
	0xcd, 0xf7, 0xee, 0xf0, 0xfa, 0xeb, 0xbc, 0xdb, 0xea, 0xa8, 0x84, 0x01, 0xc0, 0x86, 0xa5, 0xfc,
	0xb4, 0x8f, 0xe2, 0x4f, 0xb5, 0x6b, 0xdf, 0xe8, 0x87, 0x46, 0xf4, 0x8e, 0x66, 0x83, 0x7d, 0xa7,
	0xb2, 0x54, 0x21, 0xc8, 0x1a, 0xc4, 0x4c, 0x96, 0xd6, 0x8c, 0xff, 0x2b, 0x34, 0x07, 0xd0, 0x33,
	0x19, 0x9b, 0x2c, 0xf8, 0x51, 0xf7, 0xdd, 0xf7, 0xbc, 0xa1, 0x4a, 0xaf, 0x0a, 0xf6, 0x16, 0xa6,
	0x87, 0x08, 0xc0, 0x85, 0x21, 0xdd, 0x60, 0xf1, 0xd4, 0x82, 0x23, 0x38, 0x08, 0x38, 0x02, 0x7b,
	0x53, 0x63, 0x74, 0x9f, 0x52, 0xa7, 0x58, 0xa3, 0x67, 0x4f, 0x63, 0x74, 0x5b, 0x0b, 0x6b, 0xf4,
	0xd3, 0x13, 0xc7, 0xce, 0xde, 0x69, 0x74, 0x5b, 0x53, 0x7e, 0x3f, 0x87, 0x16, 0x78, 0x7d, 0x3e,
	0x83, 0xd5, 0x0f, 0x57, 0x05, 0xcd, 0x29, 0xe4, 0x4c, 0x39, 0x85, 0x32, 0x55, 0xf2, 0x08, 0xe9,
	0xad, 0xc4, 0x15, 0xfa, 0xb5, 0x51, 0x6d, 0xdf, 0x69, 0xa2, 0xa4, 0x6a, 0xbb, 0x64, 0xfa, 0x0b,
	0x0d, 0xb9, 0xcf, 0x24, 0xbd, 0x07, 0xfe, 0x34, 0x87, 0x1e, 0x85, 0xf9, 0xe1, 0x0f, 0xeb, 0x42,
	0xc1, 0x7a, 0x73, 0x4a, 0x33, 0xa6, 0x9c, 0x52, 0x85, 0x2a, 0x6d, 0x12, 0x32, 0x34, 0x15, 0x5f,
	0x48, 0x8c, 0x76, 0xb1, 0x3b, 0x44, 0x14, 0x7e, 0x53, 0xef, 0x53, 0x86, 0xce, 0x8a, 0x3f, 0x56,
	0xa5, 0x0f, 0xd1, 0xfb, 0x02, 0x03, 0xa7, 0xe2, 0x06, 0x96, 0x06, 0x92, 0x81, 0x2e, 0xef, 0x9a,
	0x38, 0x71, 0x46, 0x3b, 0x1e, 0xd3, 0x86, 0xfb, 0x6e, 0x35, 0x35, 0xb3, 0x38, 0xd7, 0xc0, 0x17,
	0xd1, 0x61, 0x6d, 0xdf, 0x97, 0x2c, 0xc8, 0x24, 0xa2, 0x44, 0xdf, 0x56, 0x94, 0x98, 0x89, 0x66,
	0x53, 0x25, 0xaa, 0x71, 0x0b, 0x5a, 0x39, 0x34, 0x0f, 0x20, 0x86, 0x16, 0xdf, 0x01, 0x40, 0xb1,
	0x7a, 0xd3, 0xd9, 0x46, 0x5c, 0x41, 0x44, 0x9f, 0xd1, 0x96, 0x69, 0x41, 0xa9, 0xb3, 0x3d, 0x9e,
	0x87, 0xb5, 0x27, 0x30, 0x8f, 0xec, 0x69, 0xcc, 0xc3, 0xd1, 0xc6, 0x36, 0x8f, 0x69, 0xc0, 0xab,
	0xb3, 0x3d, 0xdf, 0xc1, 0xa1, 0xf9, 0xf5, 0xc1, 0x1d, 0x0a, 0x01, 0x1d, 0x98, 0xc8, 0xd4, 0x00,
	0xfb, 0xb6, 0x2a, 0x95, 0x09, 0x0b, 0x99, 0x46, 0xf7, 0x3c, 0x9b, 0xb4, 0x91, 0xf9, 0xa3, 0x1c,
	0x5a, 0x18, 0x52, 0x68, 0xb1, 0x01, 0x2a, 0x30, 0xa5, 0xa9, 0x01, 0x76, 0xa3, 0x2a, 0x95, 0x0b,
	0x05, 0x8e, 0x86, 0xf7, 0x3c, 0x2d, 0xd7, 0x19, 0xf0, 0x07, 0x38, 0xb4, 0xa0, 0xba, 0x4e, 0xf1,
	0x06, 0x70, 0x79, 0x79, 0x00, 0xe6, 0x95, 0x3b, 0xe5, 0xbc, 0x36, 0xa8, 0xd2, 0xdb, 0x42, 0x7a,
	0x2b, 0xf1, 0x05, 0x3a, 0x21, 0x6c, 0xaa, 0xb8, 0x3e, 0xad, 0x3b, 0x94, 0xde, 0x8f, 0x31, 0x27,
	0x1e, 0x78, 0xdd, 0x52, 0x25, 0xec, 0x0f, 0x29, 0x80, 0x01, 0x30, 0x17, 0x9c, 0x79, 0x52, 0x58,
	0x09, 0xee, 0xd2, 0x4c, 0x5c, 0x4d, 0x67, 0xa5, 0xb7, 0x5b, 0xb3, 0x9a, 0x6a, 0x4a, 0x2e, 0xbd,
	0x14, 0x87, 0x54, 0x29, 0x88, 0xea, 0x05, 0xdb, 0xb5, 0x13, 0x3f, 0x72, 0xb9, 0xd4, 0xac, 0xb5,
	0x66, 0x1a, 0x17, 0xdc, 0x56, 0xdf, 0x71, 0xcd, 0xff, 0xd7, 0x19, 0x28, 0x77, 0x4b, 0x65, 0x79,
	0x60, 0x7b, 0x90, 0xff, 0xab, 0x8c, 0x64, 0x0e, 0x63, 0xb5, 0x74, 0x32, 0xf7, 0x0a, 0x18, 0x00,
	0x80, 0x59, 0xa6, 0xc6, 0x5a, 0xe0, 0x31, 0xc1, 0x08, 0x9e, 0x88, 0x36, 0x25, 0x62, 0xc7, 0xc1,
	0x1f, 0x82, 0xad, 0xec, 0x42, 0xfc, 0x4e, 0x72, 0x0e, 0x8b, 0x1d, 0xb0, 0x48, 0xbf, 0x53, 0xa5,
	0xcf, 0x1c, 0x16, 0xbb, 0x1a, 0xe8, 0x49, 0xef, 0x8f, 0x69, 0xc7, 0x06, 0xa7, 0x1a, 0x16, 0xcc,
	0x13, 0x78, 0x70, 0xa8, 0x06, 0x4d, 0x0c, 0xb6, 0xfe, 0xf0, 0xf5, 0xc4, 0x8d, 0x71, 0xa3, 0x93,
	0xb6, 0x6b, 0x5a, 0xff, 0x60, 0x75, 0x9d, 0xff, 0x56, 0x53, 0x73, 0xa5, 0xd7, 0x5b, 0x09, 0x96,
	0x90, 0x89, 0xa6, 0x76, 0x7d, 0xff, 0x97, 0x0e, 0xa3, 0x5f, 0x37, 0x87, 0x16, 0xf9, 0x94, 0xed,
	0xde, 0xc6, 0xba, 0x48, 0xa5, 0x52, 0xdd, 0x18, 0xf2, 0x47, 0x76, 0xe2, 0x43, 0x02, 0x26, 0x69,
	0x96, 0xe7, 0x7d, 0x55, 0x7a, 0x4f, 0x70, 0xaf, 0x21, 0xbe, 0x4e, 0x74, 0xa6, 0xd8, 0x8b, 0x47,
	0x1b, 0x6e, 0xd7, 0x5a, 0x07, 0x93, 0xa3, 0x2d, 0xd3, 0x9e, 0x88, 0x7b, 0xaf, 0xc6, 0x95, 0x9f,
	0x09, 0xb2, 0x9e, 0xa9, 0xa1, 0x4c, 0x63, 0xd4, 0xe0, 0x68, 0x57, 0xca, 0x50, 0x0b, 0x18, 0x35,
	0x3c, 0x51, 0xb3, 0xa1, 0xb8, 0x81, 0x75, 0x49, 0x4b, 0x8e, 0x0d, 0x6b, 0xad, 0xe7, 0x92, 0x7d,
	0x2d, 0xac, 0x67, 0xea, 0x64, 0xbc, 0xa3, 0x56, 0xd9, 0x69, 0x70, 0x9b, 0x8c, 0x75, 0x14, 0xf3,
	0x59, 0x61, 0xfd, 0xe8, 0x48, 0x22, 0x3a, 0xa4, 0x1f, 0xde, 0x9b, 0x1a, 0xb9, 0xa2, 0x1f, 0xed,
	0x92, 0xcd, 0x5e, 0x17, 0x17, 0xa3, 0xd9, 0xec, 0x98, 0x77, 0x25, 0x39, 0x10, 0xcb, 0x10, 0x01,
	0x4b, 0xf1, 0x1d, 0xf6, 0x02, 0x90, 0x93, 0xc5, 0xe0, 0x9e, 0xec, 0x6b, 0x01, 0x68, 0x72, 0xa8,
	0xde, 0x01, 0xe8, 0xb7, 0x54, 0xc2, 0xd5, 0x20, 0x86, 0xdd, 0xcb, 0xbd, 0xc9, 0xb3, 0xb1, 0xa2,
	0x0b, 0xf3, 0xd0, 0x8c, 0x92, 0xba, 0x60, 0xa3, 0x8f, 0x2f, 0x43, 0x33, 0xab, 0x8d, 0x3f, 0xa8,
	0x35, 0xda, 0x90, 0x29, 0x85, 0x59, 0xb8, 0x0c, 0x43, 0xd9, 0x12, 0xea, 0xd6, 0x3b, 0x19, 0xef,
	0x48, 0xed, 0xbf, 0xac, 0x1f, 0xde, 0x4b, 0xd7, 0x2f, 0x9b, 0x6d, 0xf9, 0x17, 0x89, 0x82, 0x07,
	0x84, 0xc0, 0x42, 0x55, 0x7a, 0x52, 0xc0, 0x05, 0xe2, 0x22, 0xda, 0x1c, 0x36, 0x88, 0x78, 0x42,
	0x83, 0x0a, 0x68, 0x37, 0x87, 0xf2, 0x14, 0x9f, 0x3f, 0x62, 0xc0, 0x3f, 0xa6, 0x5d, 0x79, 0x9e,
	0x1a, 0x55, 0xf2, 0x09, 0xb4, 0x50, 0xfc, 0xa5, 0x36, 0x72, 0x3d, 0x11, 0xeb, 0x32, 0x20, 0x01,
	0x96, 0x41, 0xed, 0x69, 0xe0, 0x36, 0x6a, 0xc0, 0x76, 0xfc, 0x70, 0xea, 0xc6, 0x01, 0x56, 0x5f,
	0x08, 0xc0, 0x9f, 0xec, 0x6b, 0xa1, 0xda, 0x63, 0xd3, 0x04, 0xd7, 0x49, 0xea, 0x8f, 0x1c, 0x90,
	0xe9, 0x18, 0x06, 0xcb, 0x85, 0x82, 0x26, 0xe7, 0x6c, 0x42, 0x90, 0x8b, 0xcb, 0x50, 0xb0, 0xd1,
	0xb7, 0x92, 0x72, 0xd8, 0x04, 0x86, 0x4a, 0x55, 0x49, 0x12, 0x98, 0xd6, 0xe2, 0x0b, 0x13, 0x4d,
	0x7d, 0xa9, 0xf1, 0xbd, 0xac, 0x80, 0x07, 0xba, 0xfc, 0x64, 0x5f, 0x0b, 0xf8, 0xf4, 0x01, 0xfa,
	0xd3, 0xdb, 0x0e, 0xa7, 0x9a, 0x5a, 0x41, 0xa6, 0x96, 0x99, 0x0e, 0x0c, 0x61, 0x6e, 0x36, 0x56,
	0x1a, 0x9b, 0xf3, 0x99, 0xe1, 0x2e, 0xf4, 0xc2, 0x7c, 0xca, 0x98, 0x9a, 0x30, 0xa3, 0x0f, 0x55,
	0xe9, 0x97, 0x82, 0xad, 0x07, 0xf1, 0x6d, 0xd6, 0x27, 0x11, 0x86, 0xb7, 0x89, 0x98, 0x78, 0x8b,
	0xe0, 0x2b, 0xeb, 0xa2, 0xa8, 0xb5, 0x36, 0xa7, 0x86, 0xa3, 0x70, 0x27, 0x61, 0x93, 0x65, 0x5b,
	0xbf, 0xfc, 0x3f, 0x18, 0x9c, 0x90, 0x31, 0x0d, 0x4b, 0xff, 0x40, 0xa8, 0xd9, 0xe2, 0xb4, 0xd9,
	0xd2, 0x1a, 0x9e, 0xe3, 0x9c, 0x2a, 0x1d, 0xe1, 0x04, 0x67, 0x4b, 0x71, 0x37, 0x67, 0x9c, 0xad,
	0x71, 0x09, 0xf7, 0x1b, 0xb0, 0x1c, 0x6d, 0xa2, 0x8a, 0x7f, 0x56, 0x8d, 0xc1, 0x38, 0x1b, 0xc5,
	0x92, 0x5f, 0xc6, 0x2c, 0x21, 0xb0, 0xbf, 0x9d, 0xfa, 0xa2, 0x1b, 0xe2, 0xdf, 0xd8, 0x41, 0xc2,
	0x10, 0xde, 0x6a, 0x6a, 0xae, 0x00, 0x1d, 0x61, 0x22, 0xba, 0x5f, 0xff, 0x66, 0x40, 0xef, 0x6f,
	0x07, 0x5d, 0xb6, 0x7e, 0xe4, 0x6a, 0x22, 0xde, 0x07, 0xea, 0x7d, 0x63, 0xcd, 0xb8, 0xb5, 0xec,
	0x9c, 0x16, 0xff, 0x7b, 0x34, 0x3b, 0x18, 0xde, 0x84, 0x97, 0x81, 0xbd, 0xb1, 0x33, 0x50, 0x46,
	0xb8, 0xa4, 0x9e, 0x37, 0x55, 0xe9, 0x35, 0xc1, 0xd6, 0x40, 0x5c, 0x4e, 0x97, 0x65, 0x5e, 0x45,
	0xba, 0x30, 0x58, 0x27, 0x18, 0xc7, 0x88, 0xcd, 0xcf, 0xd6, 0x96, 0x57, 0x31, 0xc7, 0x00, 0x8c,
	0xad, 0x35, 0x85, 0xbc, 0x0c, 0x7b, 0x4c, 0x39, 0x60, 0x60, 0xb0, 0xd2, 0x5b, 0x8a, 0xab, 0xe9,
	0x5c, 0x58, 0xbb, 0x1c, 0xcc, 0xca, 0x00, 0x50, 0x0c, 0x1b, 0xb6, 0xf9, 0xa4, 0x77, 0x62, 0xdc,
	0x97, 0x47, 0xa8, 0x23, 0x01, 0x33, 0x2d, 0x84, 0xa7, 0xf5, 0x84, 0x9b, 0x1b, 0x8d, 0x49, 0xc5,
	0xc1, 0x02, 0xe0, 0xd6, 0x5a, 0x7c, 0x8a, 0x4e, 0x8d, 0x25, 0xd3, 0xb6, 0xb9, 0xb8, 0xb5, 0xe3,
	0xd7, 0x5a, 0x7e, 0xd5, 0xf9, 0x96, 0x51, 0x95, 0xfa, 0x55, 0xcf, 0xcb, 0xe8, 0x51, 0xbd, 0xd6,
	0x72, 0xe4, 0x9a, 0xcd, 0x34, 0x34, 0x1d, 0xb9, 0xe6, 0x65, 0x74, 0xe1, 0x2a, 0x46, 0xb3, 0x70,
	0x1f, 0x58, 0x5d, 0x08, 0x3e, 0x06, 0xd8, 0x9d, 0xc5, 0x2a, 0x15, 0x67, 0x53, 0x96, 0x7e, 0xe2,
	0xc8, 0x15, 0xd9, 0xfa, 0xc0, 0xbf, 0x6e, 0xd3, 0x35, 0xce, 0xb5, 0xc6, 0x65, 0x8a, 0xc5, 0xd9,
	0x30, 0x28, 0x69, 0xcd, 0xaa, 0x22, 0x87, 0x39, 0x34, 0x07, 0x03, 0x68, 0x85, 0xf9, 0x3e, 0x03,
	0x7b, 0x82, 0x9b, 0x0a, 0x14, 0xfb, 0x37, 0x31, 0x04, 0xb2, 0x3d, 0x68, 0x20, 0x2c, 0x8b, 0xe2,
	0xd8, 0x41, 0xad, 0xbd, 0x13, 0x7e, 0xea, 0x83, 0x03, 0x5a, 0xbc, 0x5b, 0xef, 0x6f, 0xff, 0x2d,
	0x6e, 0xb9, 0x6a, 0x5b, 0x5d, 0xa3, 0x52, 0xeb, 0x0f, 0xd4, 0xac, 0x02, 0x65, 0xd9, 0x2a, 0xef,
	0x67, 0x61, 0x50, 0x8f, 0x25, 0xbb, 0x2e, 0x69, 0xdd, 0xbb, 0x52, 0x4d, 0xbb, 0xc9, 0xe1, 0xae,
	0x20, 0xa7, 0x9b, 0x88, 0xee, 0xc7, 0x2d, 0xcd, 0xe7, 0x1e, 0xb2, 0x7d, 0x0a, 0x8b, 0x3f, 0x40,
	0xf3, 0x1c, 0x28, 0xf3, 0xfe, 0x39, 0x78, 0xfd, 0x0a, 0x2d, 0x48, 0x43, 0x7f, 0xf7, 0x4f, 0x6d,
	0xd2, 0xc2, 0xa9, 0x52, 0x13, 0x87, 0xfe, 0x46, 0x00, 0x42, 0x29, 0x36, 0x1a, 0xc0, 0x49, 0x51,
	0xd0, 0xd9, 0x3e, 0x83, 0xae, 0x01, 0x70, 0x46, 0xf7, 0x13, 0x7a, 0x0b, 0xa6, 0xcb, 0xd6, 0xcb,
	0x89, 0xd8, 0x57, 0xb4, 0x26, 0x25, 0x4a, 0x5a, 0xff, 0x25, 0xa0, 0x4b, 0xa9, 0x83, 0x27, 0x26,
	0xbe, 0x89, 0x26, 0x62, 0x07, 0x28, 0x75, 0x32, 0x90, 0x6e, 0xeb, 0x8d, 0xd4, 0xf0, 0x08, 0x5b,
	0x48, 0xb4, 0xb6, 0x7f, 0x3f, 0x17, 0xcd, 0xb2, 0x64, 0xad, 0x37, 0xed, 0x4e, 0x40, 0x8c, 0x17,
	0x81, 0xcd, 0x09, 0x28, 0x9f, 0xb2, 0xe1, 0x4e, 0xa7, 0x9f, 0x95, 0x36, 0x3a, 0xbd, 0x58, 0x95,
	0x1e, 0x23, 0x74, 0x7a, 0x9e, 0x25, 0xe0, 0xb0, 0x14, 0xfa, 0x0f, 0x69, 0x7a, 0x79, 0x8f, 0x57,
	0x95, 0xde, 0x60, 0x9d, 0x84, 0xd6, 0x30, 0x3c, 0x3f, 0xf3, 0x72, 0x86, 0x3a, 0x5e, 0x8f, 0x9c,
	0x2b, 0x2f, 0x85, 0x97, 0x54, 0xe6, 0x03, 0xab, 0xdb, 0x9e, 0x27, 0x43, 0x4b, 0xe6, 0x67, 0x15,
	0xf8, 0xc4, 0x79, 0x1f, 0x7f, 0xb8, 0x7a, 0xc5, 0x2b, 0xde, 0x15, 0xbf, 0x93, 0x56, 0x7c, 0xb0,
	0xe2, 0xa3, 0x9f, 0x3d, 0x5d, 0x9c, 0xe3, 0x29, 0xa9, 0x5c, 0xc1, 0xaa, 0xfe, 0x4b, 0xa8, 0x52,
	0x3f, 0xc7, 0x62, 0x4f, 0x4c, 0x57, 0xa1, 0xa5, 0xe9, 0x43, 0xbb, 0x3e, 0x25, 0xda, 0x8e, 0xe6,
	0x29, 0x01, 0x83, 0xd6, 0x4b, 0x8d, 0x91, 0x60, 0xb8, 0xda, 0x5b, 0xa7, 0x60, 0x69, 0x30, 0xcf,
	0xf3, 0x9a, 0x2a, 0xbd, 0x22, 0x38, 0xbf, 0x89, 0xcf, 0x12, 0xde, 0x22, 0xde, 0xa4, 0xf5, 0x8c,
	0xb0, 0xd8, 0x88, 0xb2, 0xd7, 0x60, 0xf1, 0x77, 0x36, 0xe4, 0x03, 0x28, 0xdf, 0xdb, 0x18, 0x09,
	0x56, 0x56, 0x7b, 0xeb, 0xfc, 0x81, 0x1a, 0x42, 0x0b, 0x0b, 0xd3, 0x84, 0x28, 0xab, 0x0a, 0x3e,
	0x16, 0xb0, 0xcf, 0xb3, 0x2d, 0xc5, 0x02, 0x9b, 0xa8, 0x82, 0xef, 0x2f, 0xa1, 0x4f, 0x6c, 0x35,
	0x43, 0xf4, 0x9e, 0x5b, 0xe7, 0x6d, 0x0c, 0x54, 0x7f, 0x5a, 0xa5, 0xd4, 0x37, 0xd4, 0x79, 0x23,
	0x0a, 0x21, 0x4f, 0x69, 0xfc, 0xef, 0x46, 0x5c, 0xab, 0x24, 0x18, 0xd8, 0xee, 0xaf, 0x69, 0x04,
	0xe3, 0x0b, 0xd0, 0x2a, 0x47, 0x7b, 0x51, 0x80, 0x31, 0xf5, 0x23, 0x57, 0x89, 0x4e, 0xd5, 0x44,
	0x1e, 0x89, 0x1b, 0xfb, 0x8d, 0x63, 0xc5, 0xb3, 0x00, 0xe9, 0x4a, 0x76, 0xb4, 0xe5, 0xfd, 0xd4,
	0xc2, 0x96, 0x97, 0xc1, 0xc2, 0x66, 0x42, 0xa2, 0xed, 0xf1, 0x0c, 0x5e, 0xbe, 0xf9, 0x78, 0xe6,
	0x49, 0xfd, 0xf0, 0x25, 0x87, 0x8f, 0x16, 0xfe, 0x62, 0x9e, 0x28, 0xb1, 0xc6, 0xd5, 0xa3, 0xdc,
	0x88, 0xd7, 0x1f, 0x88, 0x84, 0x89, 0xb9, 0x6c, 0x8a, 0xa1, 0xaa, 0x70, 0x3d, 0x18, 0x0a, 0x6c,
	0x1c, 0xd0, 0x52, 0x7c, 0x2a, 0x7d, 0x28, 0x83, 0x06, 0x5e, 0x1e, 0xa0, 0xbe, 0x57, 0x32, 0xa9,
	0xca, 0x6f, 0x07, 0x97, 0xcd, 0x2d, 0x95, 0xc4, 0x51, 0x0e, 0xfb, 0x72, 0x90, 0x22, 0x51, 0xa2,
	0xfd, 0x4c, 0x34, 0xb5, 0x13, 0x17, 0x1c, 0xcc, 0x8f, 0x6f, 0xa9, 0xc4, 0xdc, 0xca, 0xae, 0x64,
	0xeb, 0x05, 0x8a, 0x3c, 0x12, 0xd1, 0x21, 0xd8, 0x43, 0x63, 0x33, 0x01, 0x31, 0x34, 0xc5, 0x65,
	0xd2, 0x15, 0x5f, 0xe0, 0x20, 0x66, 0x16, 0xb5, 0x2a, 0x70, 0x50, 0x2b, 0x8b, 0x1c, 0xd9, 0xcd,
	0x5b, 0x73, 0xee, 0x60, 0xde, 0x9a, 0x9b, 0x66, 0xde, 0x6a, 0xe7, 0x58, 0xb3, 0x2a, 0xd0, 0x93,
	0x5a, 0x55, 0xfa, 0x94, 0x7d, 0x1a, 0xf7, 0x21, 0xdd, 0x4e, 0xea, 0xcf, 0x07, 0x4f, 0xe3, 0x28,
	0x9e, 0x4b, 0xdc, 0x18, 0x4f, 0xc4, 0xba, 0xf4, 0x53, 0xe7, 0x52, 0x23, 0x67, 0x34, 0xb5, 0xc3,
	0x60, 0x81, 0x47, 0xcf, 0xd2, 0x07, 0x09, 0x89, 0x68, 0x17, 0x39, 0x1f, 0x68, 0x9f, 0x18, 0x3f,
	0xa1, 0x77, 0x34, 0x27, 0xa2, 0x4d, 0xa9, 0xbd, 0x57, 0x58, 0x1b, 0xee, 0xdf, 0x71, 0xcc, 0xd3,
	0x43, 0xfc, 0x88, 0xc9, 0x73, 0x95, 0x53, 0xa5, 0x6f, 0x38, 0xe6, 0xf1, 0xe1, 0x39, 0x8e, 0x4e,
	0xc6, 0x41, 0xd9, 0x08, 0x47, 0x8b, 0x4d, 0x37, 0x30, 0x0e, 0xf5, 0x8d, 0x1b, 0xa2, 0x3c, 0x97,
	0xd9, 0x0f, 0x31, 0xb8, 0x5c, 0xda, 0xad, 0xf7, 0x5a, 0x1c, 0x7a, 0x72, 0x74, 0x4f, 0x6a, 0xdf,
	0xae, 0x5b, 0x4d, 0xbb, 0x60, 0x39, 0x5a, 0xff, 0xa0, 0x21, 0x68, 0x45, 0x2f, 0x1a, 0xc8, 0x9e,
	0x3c, 0x2d, 0x1c, 0x02, 0x46, 0x99, 0xf2, 0xcd, 0x06, 0xc8, 0xe0, 0xeb, 0x60, 0x6c, 0x02, 0x78,
	0xf7, 0x45, 0x3b, 0xb5, 0x9e, 0x0e, 0xe6, 0x09, 0xe4, 0xbf, 0xb6, 0xfc, 0x51, 0x17, 0xe0, 0x35,
	0x8d, 0x70, 0xaa, 0xe4, 0xa7, 0x0e, 0xa9, 0x9f, 0x58, 0xaa, 0x9c, 0xfb, 0xe8, 0xea, 0x6e, 0x56,
	0x2a, 0x2b, 0xbd, 0xed, 0x79, 0x2b, 0xf4, 0xc6, 0xbd, 0x39, 0xbd, 0xcf, 0x24, 0x5d, 0x98, 0x36,
	0xcf, 0xef, 0xe3, 0x47, 0xfe, 0x0a, 0xca, 0x67, 0xae, 0xe2, 0x5d, 0x49, 0xc2, 0xef, 0xaa, 0xd2,
	0x66, 0xb4, 0x51, 0xb0, 0x08, 0xa1, 0xf8, 0x26, 0xdd, 0x33, 0x63, 0xb7, 0x46, 0xae, 0x03, 0x51,
	0xbd, 0xd5, 0xd4, 0x4c, 0x09, 0xe9, 0xad, 0xa6, 0x66, 0xe9, 0x17, 0x95, 0x2c, 0x1e, 0x35, 0x58,
	0xa1, 0x7d, 0xc7, 0xb5, 0x4b, 0xcd, 0xa9, 0x2f, 0x5a, 0x8b, 0xba, 0xe6, 0xa1, 0xf9, 0x4e, 0x44,
	0xcc, 0xef, 0xe5, 0xd0, 0x1c, 0x06, 0xbf, 0x52, 0x0a, 0xeb, 0x55, 0xa5, 0x8f, 0x05, 0xfb, 0x17,
	0x71, 0x93, 0x8d, 0x4d, 0x35, 0x28, 0xad, 0x01, 0x00, 0x0c, 0xb3, 0x69, 0xa0, 0xd0, 0xf1, 0xb1,
	0x64, 0xef, 0x39, 0x86, 0x08, 0x1a, 0x50, 0x33, 0x1a, 0x2b, 0x2f, 0x05, 0xe9, 0x2f, 0x11, 0x3b,
	0x90, 0x1a, 0xbe, 0xa1, 0x1f, 0x1e, 0x2b, 0x2f, 0x95, 0xed, 0xbd, 0xf3, 0x5b, 0xd1, 0x3c, 0xa6,
	0x80, 0x79, 0x62, 0x8c, 0xe9, 0x9f, 0xf3, 0x9b, 0xb8, 0xc8, 0x31, 0x19, 0x42, 0xc3, 0x9d, 0xf5,
	0xf8, 0xb7, 0xd0, 0xcc, 0x7a, 0x7f, 0xa0, 0xd2, 0xff, 0x3b, 0x10, 0xb7, 0x89, 0x5f, 0xb5, 0x59,
	0x26, 0x16, 0xd0, 0x0e, 0xf4, 0xfe, 0x26, 0xed, 0x52, 0x37, 0x60, 0x35, 0xbd, 0xf7, 0x92, 0x6c,
	0x56, 0xe1, 0xd7, 0xa1, 0x99, 0xf5, 0xde, 0xcf, 0x71, 0x0f, 0xe0, 0xf6, 0x0d, 0xe6, 0x2e, 0x52,
	0x26, 0x2e, 0x75, 0x4c, 0x04, 0x7c, 0x25, 0xd9, 0x7e, 0xa0, 0x22, 0xbf, 0x05, 0xe5, 0xfb, 0x40,
	0xe7, 0x87, 0xfb, 0x02, 0xaf, 0x70, 0x70, 0x67, 0x66, 0xca, 0xc5, 0x25, 0x6c, 0x7f, 0x7a, 0xff,
	0x29, 0xbd, 0xff, 0xb8, 0xd5, 0x19, 0x5b, 0x93, 0x7f, 0xdd, 0xfe, 0x5c, 0x18, 0xbb, 0x49, 0x92,
	0xe7, 0xc2, 0x4b, 0x9c, 0x93, 0xc2, 0xb8, 0x81, 0x38, 0x24, 0x93, 0xf7, 0xc1, 0x3b, 0xd1, 0x3c,
	0xa2, 0x5c, 0x2a, 0x09, 0x06, 0xeb, 0x7c, 0xc1, 0xcf, 0xc0, 0xf1, 0x66, 0x0e, 0xbc, 0xbb, 0x75,
	0x7e, 0x13, 0x5f, 0x71, 0x74, 0x49, 0x14, 0x0f, 0xed, 0x5f, 0x82, 0x36, 0x56, 0xdb, 0x73, 0x4d,
	0xeb, 0xbc, 0xa2, 0x1d, 0x18, 0xd4, 0xfb, 0x4f, 0x51, 0xa6, 0xe1, 0x85, 0xd5, 0xab, 0x93, 0x17,
	0x54, 0xd9, 0xd9, 0x17, 0x7f, 0x9e, 0x43, 0xb3, 0xc2, 0x8d, 0xdb, 0x02, 0x4a, 0xa4, 0xbc, 0x14,
	0x48, 0x27, 0x65, 0xe8, 0xad, 0x72, 0x71, 0x47, 0xda, 0x22, 0xf0, 0x40, 0x40, 0x77, 0xce, 0x1f,
	0x36, 0x48, 0x4f, 0x5f, 0x4b, 0xb2, 0xaf, 0x45, 0x1b, 0xea, 0x49, 0x8e, 0x1d, 0x00, 0x4f, 0x64,
	0x70, 0x66, 0x23, 0x05, 0x7a, 0x47, 0x7b, 0xb2, 0xf5, 0x82, 0xd6, 0xda, 0xa6, 0xf5, 0x74, 0x4d,
	0x0c, 0xc4, 0xb4, 0x58, 0x77, 0x72, 0x60, 0x38, 0x35, 0x7c, 0x36, 0x11, 0x3f, 0xaa, 0xb5, 0xb6,
	0x25, 0x63, 0xd8, 0xa5, 0xf1, 0xc4, 0x69, 0xad, 0xbd, 0x93, 0x96, 0x4c, 0x7c, 0x75, 0x54, 0xb6,
	0xa6, 0xc0, 0x1f, 0xe7, 0xd0, 0x8c, 0xdf, 0x05, 0x03, 0x0a, 0x10, 0xdd, 0x59, 0x1e, 0x60, 0x91,
	0x05, 0x28, 0x13, 0x3f, 0x9b, 0xce, 0x04, 0x1d, 0xae, 0xd2, 0xc4, 0xdb, 0x8e, 0x94, 0xdd, 0xe3,
	0x0c, 0x61, 0x7c, 0xfe, 0x6a, 0x16, 0xca, 0x0f, 0x29, 0x91, 0xd0, 0xce, 0x8a, 0x60, 0x9d, 0xbf,
	0x7a, 0x27, 0xa1, 0xd4, 0x07, 0xb3, 0x54, 0xa9, 0x3b, 0x4b, 0x60, 0xbf, 0x88, 0xff, 0x2f, 0x79,
	0xb3, 0x49, 0x88, 0xff, 0xd9, 0xcb, 0xa9, 0x2b, 0xe7, 0xf4, 0x23, 0x57, 0x0d, 0xa2, 0xb6, 0xb7,
	0x33, 0x35, 0xd2, 0x9b, 0x1c, 0x3a, 0x8c, 0xaf, 0x6d, 0x5f, 0xf9, 0xa6, 0x4d, 0x65, 0xa5, 0xe5,
	0x52, 0x55, 0xd9, 0x27, 0x72, 0x59, 0x95, 0xfc, 0xfe, 0x32, 0x80, 0xe6, 0x97, 0xf4, 0xaf, 0x07,
	0xe0, 0xd5, 0x61, 0x89, 0x5c, 0xb6, 0xa9, 0x6c, 0x73, 0x95, 0xb4, 0xf1, 0x93, 0xf2, 0xcd, 0x55,
	0x65, 0xf2, 0x7b, 0xd2, 0x46, 0x83, 0xe2, 0x6f, 0xde, 0x02, 0xd5, 0x6f, 0x35, 0xed, 0xa2, 0x14,
	0x3e, 0x11, 0x8d, 0x39, 0x3a, 0xbb, 0xd5, 0xb4, 0x0b, 0x76, 0xc8, 0x10, 0xf3, 0x40, 0x2b, 0x1a,
	0xef, 0xc3, 0x57, 0xb7, 0x0d, 0x76, 0x5c, 0x53, 0x3b, 0x8c, 0x85, 0x01, 0x4a, 0x99, 0x68, 0xea,
	0x49, 0x44, 0x9b, 0xb4, 0x4b, 0x27, 0x52, 0x23, 0xbd, 0x26, 0xcf, 0x62, 0x2c, 0x21, 0x79, 0xfc,
	0x8a, 0xd6, 0x76, 0x89, 0xdc, 0x32, 0x58, 0xc8, 0xd7, 0x03, 0x7a, 0xef, 0x25, 0xa2, 0x5e, 0x6a,
	0x6f, 0xd2, 0xfb, 0xdb, 0xa1, 0x53, 0xad, 0x75, 0x10, 0x2a, 0xe0, 0xe7, 0xa0, 0xcc, 0x76, 0xf0,
	0xff, 0x0b, 0x87, 0x16, 0xd5, 0x37, 0xd6, 0x45, 0xfc, 0x1f, 0x04, 0x03, 0x4a, 0x25, 0x1e, 0x9b,
	0x6c, 0x21, 0x08, 0xd4, 0xdf, 0x72, 0xaa, 0x34, 0xc2, 0x09, 0xee, 0x75, 0xc4, 0x5e, 0x8e, 0xbe,
	0x32, 0x9f, 0x8c, 0xf7, 0x55, 0xc8, 0xe5, 0x5b, 0xe4, 0xf2, 0xaa, 0xf7, 0x27, 0xe3, 0x1d, 0x65,
	0xef, 0x6e, 0x95, 0x36, 0x96, 0x57, 0x19, 0x0b, 0xb5, 0x4a, 0xfb, 0xac, 0x27, 0xac, 0x5f, 0x1d,
	0xa5, 0xa7, 0x48, 0xc1, 0x36, 0x11, 0xed, 0xa2, 0xd0, 0xc0, 0x9e, 0xd1, 0xad, 0xa6, 0x5d, 0x66,
	0x77, 0x93, 0xf1, 0x3e, 0x58, 0x16, 0xad, 0x78, 0xab, 0xa9, 0x19, 0x5a, 0xeb, 0xfd, 0xb1, 0x44,
	0xbc, 0x4f, 0x3b, 0xb1, 0x37, 0x35, 0x30, 0x20, 0xbb, 0x4f, 0x97, 0xbf, 0xc0, 0xa1, 0xf9, 0x21,
	0xa5, 0xa1, 0xce, 0x5b, 0xad, 0x6c, 0x0d, 0x7c, 0xaa, 0x78, 0xeb, 0x22, 0x9f, 0xee, 0xc4, 0x1c,
	0x55, 0x9e, 0xe7, 0xf7, 0xaa, 0xf4, 0xb9, 0x90, 0xf6, 0x51, 0xf4, 0x81, 0x1c, 0x90, 0x3c, 0x7e,
	0x40, 0xef, 0xba, 0x60, 0xd0, 0xf6, 0xe6, 0x73, 0x5a, 0xec, 0x1a, 0xb1, 0xb7, 0x1c, 0x1f, 0xd7,
	0x3b, 0xcf, 0xc0, 0xa3, 0x5d, 0xbb, 0x70, 0x70, 0xab, 0x69, 0x57, 0x6a, 0xfc, 0x64, 0x72, 0x74,
	0x68, 0x8d, 0xd6, 0xb6, 0x67, 0x42, 0x3d, 0xd5, 0xe0, 0x0f, 0xd4, 0x24, 0xa2, 0x9d, 0x13, 0x4d,
	0x7d, 0x5a, 0xdb, 0xb1, 0xd4, 0x85, 0x3d, 0x89, 0x68, 0x8c, 0xf6, 0x35, 0x19, 0x6f, 0x96, 0xd3,
	0xc6, 0xe5, 0xff, 0x91, 0x43, 0xf9, 0x61, 0xc0, 0xdd, 0xd8, 0xc7, 0x0f, 0x34, 0x0d, 0x7f, 0xe4,
	0x54, 0xe9, 0x6f, 0x39, 0x81, 0xfd, 0x22, 0x7e, 0xc7, 0x11, 0x48, 0xc2, 0xd2, 0xfc, 0x64, 0xbc,
	0xa3, 0x64, 0xa3, 0x54, 0x59, 0x59, 0x5e, 0xf2, 0x49, 0x65, 0x89, 0xb4, 0xb1, 0x7c, 0xf3, 0xfa,
	0x65, 0x30, 0xaf, 0xe7, 0xf1, 0xd6, 0x11, 0x90, 0x23, 0x34, 0xca, 0xe4, 0x5c, 0x0d, 0xee, 0x29,
	0x6e, 0x42, 0xe3, 0xa1, 0x26, 0x7d, 0xa4, 0xd9, 0x2c, 0x3f, 0xfe, 0x0b, 0x69, 0x43, 0xd9, 0x27,
	0x5b, 0x2b, 0x3e, 0xa9, 0xac, 0xda, 0x52, 0x51, 0x51, 0x56, 0x6a, 0x76, 0x3a, 0x19, 0xef, 0xa3,
	0x2d, 0xb4, 0xd6, 0x6f, 0x8d, 0xbd, 0x8f, 0x76, 0x42, 0xd3, 0xc9, 0x78, 0x07, 0x1d, 0x07, 0xce,
	0x58, 0x3b, 0x74, 0x76, 0x62, 0x8f, 0x0a, 0xd5, 0xe8, 0x89, 0xca, 0xec, 0x22, 0x8a, 0xf6, 0x65,
	0xa1, 0xbc, 0x52, 0x6f, 0xc4, 0x5b, 0xea, 0x0f, 0xd7, 0xf2, 0xbd, 0x1c, 0xca, 0xf3, 0xf9, 0xc3,
	0xf0, 0x46, 0x0e, 0x68, 0xf0, 0x4e, 0x55, 0xda, 0x21, 0xd0, 0x42, 0xf1, 0x37, 0xa6, 0xa3, 0xea,
	0x51, 0xaa, 0x9c, 0xde, 0xb8, 0xa5, 0x44, 0xda, 0xf8, 0x89, 0x47, 0xaa, 0x2c, 0x2f, 0x99, 0x8c,
	0xb7, 0xc1, 0x9a, 0x27, 0xe3, 0xed, 0xcb, 0xa1, 0xbc, 0xb2, 0xb2, 0x74, 0x79, 0xc9, 0xc6, 0x2d,
	0x5b, 0x4b, 0x8d, 0x1a, 0x65, 0xe4, 0x4f, 0xab, 0xb0, 0x42, 0x2e, 0xdb, 0x54, 0xbe, 0x75, 0xd3,
	0xb2, 0x89, 0xaf, 0x8e, 0xea, 0x4d, 0x17, 0x52, 0xbb, 0xc7, 0x0c, 0x96, 0x6f, 0xe0, 0xeb, 0xe4,
	0xf1, 0xa3, 0xcf, 0xcb, 0x74, 0x54, 0x7e, 0x3b, 0x4c, 0x0b, 0x93, 0x2c, 0xc6, 0xdf, 0x89, 0x16,
	0x8a, 0xaf, 0xd2, 0x69, 0x19, 0x17, 0xf2, 0x92, 0x71, 0x18, 0x6b, 0x56, 0xaf, 0x4f, 0x7d, 0x77,
	0x2d, 0x75, 0xed, 0x5b, 0xd6, 0x65, 0x7c, 0x35, 0x84, 0xcc, 0x58, 0x8d, 0x3d, 0x71, 0x3b, 0x53,
	0x57, 0x86, 0x12, 0xd7, 0x2f, 0xc9, 0xb4, 0x9b, 0xa2, 0x6f, 0x73, 0x10, 0x5f, 0x1e, 0x88, 0x60,
	0x7f, 0x09, 0xa9, 0xba, 0x5a, 0x09, 0x87, 0xfd, 0xdb, 0xea, 0x14, 0x7e, 0x20, 0x0b, 0xf1, 0x7e,
	0x52, 0x5c, 0xf2, 0xa9, 0x37, 0x44, 0x5e, 0x5a, 0xc3, 0x06, 0xfd, 0x37, 0x4e, 0x95, 0xfe, 0x91,
	0x13, 0x5c, 0x2a, 0x88, 0x7f, 0xcf, 0xc1, 0x43, 0xc2, 0xd4, 0xf0, 0x40, 0xea, 0xca, 0x75, 0xd8,
	0xb0, 0x5b, 0x4d, 0xbb, 0x3c, 0xd2, 0xe6, 0xd2, 0x5f, 0x94, 0x97, 0x56, 0xbd, 0x6d, 0xac, 0xbe,
	0x42, 0x32, 0x50, 0x72, 0xdf, 0xc4, 0x99, 0x96, 0xc4, 0xe8, 0xd1, 0xd4, 0x95, 0xeb, 0x7a, 0x47,
	0xbb, 0x16, 0x3d, 0xaf, 0x0d, 0x8f, 0x25, 0x47, 0x0f, 0x26, 0x87, 0x8f, 0x4c, 0xc6, 0x3b, 0xaa,
	0x64, 0x69, 0xdd, 0xba, 0xf2, 0x92, 0x4f, 0x2a, 0xb6, 0x54, 0x56, 0x19, 0xb5, 0x3f, 0xf1, 0xbc,
	0xff, 0xc9, 0xdb, 0x5b, 0xb6, 0xca, 0x06, 0x58, 0x7d, 0xd7, 0x3c, 0xb1, 0xb7, 0xdb, 0x68, 0x72,
	0xa9, 0xdb, 0x80, 0x87, 0x9e, 0x2e, 0xe8, 0x64, 0x32, 0xde, 0xc1, 0x0c, 0x92, 0xde, 0x0e, 0x46,
	0xb8, 0x53, 0x3b, 0xa9, 0x64, 0x83, 0xb4, 0xbe, 0x8c, 0x56, 0xd7, 0x3a, 0x5a, 0x41, 0x29, 0x2d,
	0xbb, 0xac, 0x95, 0xdf, 0xcf, 0xa1, 0x85, 0x66, 0xf1, 0x26, 0xef, 0xe7, 0x1e, 0x6f, 0xc0, 0xf7,
	0x99, 0xdf, 0x17, 0xf9, 0x94, 0x9c, 0xd7, 0x2f, 0x54, 0xa9, 0x4a, 0x70, 0xad, 0x20, 0xbe, 0xa6,
	0xb5, 0x7e, 0x9d, 0x1c, 0x3b, 0xa0, 0xed, 0x8d, 0xc1, 0x38, 0x89, 0xe8, 0xbe, 0x89, 0x63, 0x3d,
	0x06, 0x99, 0xea, 0xec, 0x4d, 0x8c, 0x75, 0x4e, 0xc6, 0xfb, 0x36, 0x6d, 0x6b, 0x08, 0xb3, 0x58,
	0x7d, 0x32, 0xde, 0xb7, 0x9a, 0x94, 0xc9, 0xae, 0x7d, 0xf2, 0xb5, 0x68, 0x7e, 0x43, 0xe3, 0xb6,
	0x3a, 0x7f, 0x75, 0x79, 0x85, 0x14, 0x0e, 0xfb, 0x6b, 0x02, 0x8a, 0x8f, 0x18, 0x3a, 0xb0, 0xf4,
	0x9d, 0xf6, 0x51, 0x5c, 0x46, 0x74, 0x0f, 0x6d, 0x7b, 0x26, 0x5a, 0x3b, 0x61, 0x42, 0xe5, 0x15,
	0x74, 0x4c, 0xf3, 0xb1, 0x81, 0x31, 0x60, 0x5a, 0xdb, 0xa2, 0xef, 0x16, 0xa0, 0x47, 0x5c, 0x04,
	0x7d, 0xfe, 0x0f, 0x68, 0x51, 0x5d, 0x7a, 0x31, 0xe5, 0x6e, 0xb1, 0x35, 0xd7, 0xbd, 0x86, 0x69,
	0xf7, 0x66, 0xc5, 0x7e, 0x88, 0x60, 0xe2, 0x64, 0x64, 0x13, 0xd1, 0x7d, 0xe5, 0xa5, 0xb2, 0x7b,
	0x2f, 0xfc, 0xc7, 0xe8, 0x11, 0xfb, 0x07, 0x85, 0xe1, 0x68, 0x31, 0x03, 0xe9, 0xf6, 0x5d, 0xe4,
	0xd9, 0x61, 0x09, 0x4b, 0xeb, 0x56, 0xd1, 0x38, 0x73, 0xa7, 0x67, 0xb0, 0xa7, 0x5e, 0x95, 0x7e,
	0xc3, 0x8a, 0xb0, 0xa6, 0xfd, 0x78, 0x60, 0x50, 0x3f, 0xda, 0x45, 0xf5, 0xfd, 0x86, 0x2c, 0x1a,
	0xeb, 0xd2, 0x0e, 0x5e, 0x4c, 0x44, 0x2f, 0x82, 0x44, 0x4b, 0x65, 0x59, 0xf8, 0xa9, 0x9d, 0xed,
	0x84, 0x08, 0x0c, 0x46, 0x13, 0x10, 0x79, 0xa3, 0x9d, 0xfa, 0xd1, 0x11, 0x4f, 0x49, 0x25, 0x2b,
	0x01, 0xb3, 0x42, 0x6c, 0x0d, 0xfb, 0x2a, 0x72, 0xab, 0x2a, 0xc9, 0xf0, 0x2a, 0x72, 0x03, 0x3c,
	0xb0, 0x2c, 0x61, 0x1e, 0x2e, 0x26, 0xa2, 0x5d, 0x50, 0xc8, 0x1a, 0x58, 0x13, 0x31, 0x55, 0x3f,
	0x6c, 0x08, 0x0d, 0xfa, 0xc8, 0x21, 0x5b, 0x39, 0xcb, 0xf3, 0xe0, 0x17, 0x95, 0x35, 0x28, 0x7b,
	0x13, 0x7d, 0x51, 0x09, 0x03, 0x6d, 0x52, 0xea, 0xcd, 0x81, 0x36, 0x29, 0xf5, 0xf7, 0x63, 0xa0,
	0x4d, 0x4a, 0x3d, 0xff, 0x19, 0xfb, 0x14, 0x13, 0x47, 0x26, 0xc2, 0x4f, 0x31, 0x3f, 0x84, 0x3e,
	0xd7, 0xdf, 0x8f, 0x15, 0x59, 0x76, 0x9d, 0x78, 0x9f, 0xf5, 0x92, 0xf3, 0x0b, 0xa7, 0x31, 0x1c,
	0xde, 0x73, 0xe2, 0x87, 0xfa, 0x76, 0x63, 0x78, 0x5d, 0xa6, 0xe7, 0xab, 0xa9, 0xfd, 0xe4, 0xa8,
	0x4b, 0x2a, 0xb6, 0x6a, 0x6a, 0x07, 0xbc, 0x33, 0x85, 0xf3, 0xc4, 0x7c, 0x59, 0xa7, 0x16, 0x8f,
	0x69, 0x6d, 0x57, 0x29, 0x72, 0x86, 0x40, 0x11, 0x5a, 0x0f, 0xb6, 0x50, 0x5f, 0xba, 0x9c, 0x1a,
	0x3f, 0xa0, 0x75, 0x18, 0xf0, 0xcf, 0xf6, 0xef, 0xb0, 0x88, 0x1f, 0xc6, 0x68, 0x19, 0x0a, 0x18,
	0xb4, 0x0c, 0x4f, 0x3d, 0x35, 0x4e, 0x95, 0xae, 0x61, 0xb4, 0xec, 0xac, 0x20, 0x9e, 0xe6, 0xa0,
	0x53, 0x40, 0xcb, 0x06, 0xf5, 0xc6, 0x74, 0xcc, 0x89, 0x27, 0x5d, 0xd1, 0x63, 0x65, 0xc5, 0x16,
	0x5c, 0x29, 0xf9, 0xd5, 0xc9, 0xc4, 0xe8, 0x35, 0x5a, 0x4c, 0x10, 0xb9, 0xd6, 0xd1, 0xaa, 0x5d,
	0xbf, 0xa2, 0x75, 0xb4, 0xea, 0xfd, 0x6d, 0x10, 0x6a, 0xc0, 0xf9, 0x36, 0xbf, 0x6f, 0x17, 0xe5,
	0x3b, 0x41, 0x2d, 0xcd, 0x36, 0x31, 0x24, 0x09, 0x4c, 0x24, 0x6e, 0x7b, 0x9e, 0x0b, 0x3d, 0x23,
	0xcf, 0x24, 0xbd, 0xca, 0xf3, 0x9d, 0x53, 0x93, 0xf3, 0xcc, 0x79, 0xc8, 0x2e, 0x0b, 0xe4, 0x3b,
	0x39, 0x84, 0xc0, 0x4b, 0xd8, 0xa0, 0xea, 0xd8, 0x4b, 0x3a, 0x5f, 0x2c, 0x70, 0xaa, 0xea, 0x4c,
	0xaa, 0xef, 0xa9, 0x54, 0xa5, 0x0a, 0x81, 0x69, 0x20, 0x7a, 0x88, 0x4b, 0xc5, 0xf1, 0xa3, 0xe9,
	0xfa, 0x74, 0xf2, 0x68, 0x25, 0x1a, 0xb3, 0x51, 0xec, 0xe3, 0x18, 0x90, 0x30, 0xe9, 0x4d, 0x44,
	0x63, 0x2f, 0xad, 0x5e, 0x2f, 0x33, 0xfd, 0xf1, 0x8d, 0x68, 0x96, 0x8f, 0x0c, 0x16, 0x2e, 0x40,
	0x58, 0x71, 0x98, 0x79, 0x36, 0xaf, 0xab, 0x52, 0xb1, 0x60, 0xd5, 0x17, 0x57, 0x50, 0xd2, 0x4e,
	0x27, 0xa3, 0x1f, 0x39, 0xcd, 0x4e, 0x46, 0x6b, 0x3b, 0x66, 0x11, 0x73, 0xab, 0x25, 0xbf, 0x8b,
	0x43, 0x73, 0xfd, 0x36, 0x6a, 0x8e, 0x39, 0xeb, 0x7c, 0xb1, 0xc8, 0x39, 0x78, 0x3a, 0xcd, 0x87,
	0xe7, 0x68, 0x8e, 0xe6, 0xe2, 0x53, 0x40, 0x19, 0x1c, 0xa1, 0x35, 0xb4, 0xd1, 0x58, 0x6a, 0x78,
	0x98, 0x84, 0xca, 0x70, 0x34, 0xe1, 0xab, 0xd1, 0x02, 0x7f, 0xc0, 0x1f, 0xd9, 0x18, 0xac, 0xf1,
	0x07, 0x2a, 0xbc, 0xe1, 0xf0, 0x67, 0xc1, 0x90, 0x8f, 0x18, 0xbe, 0x5e, 0x52, 0x25, 0x51, 0x48,
	0xff, 0x9a, 0xa6, 0x8b, 0x85, 0x9e, 0x1b, 0xc8, 0x67, 0x39, 0xbd, 0x05, 0x3f, 0xc2, 0xa1, 0xf9,
	0x61, 0xd6, 0x39, 0xc3, 0x90, 0x68, 0xe7, 0x60, 0x61, 0x71, 0x17, 0xa7, 0x4a, 0x7f, 0x10, 0xd2,
	0xbe, 0x8a, 0xb5, 0xd6, 0x20, 0xa6, 0x3f, 0x08, 0x35, 0x22, 0x94, 0x97, 0x3a, 0x5c, 0x7d, 0x8d,
	0xeb, 0x3a, 0xf0, 0x95, 0xb6, 0xe7, 0x18, 0x0b, 0x09, 0xa0, 0x75, 0x83, 0xf8, 0x34, 0x44, 0x5a,
	0x82, 0x88, 0x42, 0xd1, 0x21, 0x08, 0xb1, 0x43, 0x03, 0xf0, 0xc8, 0x69, 0xc3, 0xf3, 0x0d, 0x68,
	0x96, 0xbf, 0xde, 0x5b, 0xa3, 0x94, 0x07, 0xb6, 0x07, 0xb1, 0x72, 0x34, 0x5f, 0x7c, 0x3c, 0xed,
	0x54, 0xcc, 0x0a, 0xf0, 0x6e, 0xde, 0x6a, 0x20, 0x3e, 0x67, 0x4d, 0x1e, 0xbf, 0x23, 0x23, 0x52,
	0x24, 0x1e, 0x7e, 0xa2, 0xb7, 0x5f, 0xdb, 0xdd, 0x6d, 0x92, 0x07, 0xda, 0x86, 0xdf, 0xc7, 0xa1,
	0x05, 0xfe, 0xb0, 0xe9, 0xc2, 0x42, 0x5e, 0x8c, 0x62, 0xbd, 0x6b, 0x9e, 0xe7, 0x57, 0xaa, 0xf4,
	0xbe, 0x90, 0xfe, 0x55, 0x2c, 0x75, 0x1d, 0x87, 0x35, 0x53, 0x24, 0x62, 0x07, 0x60, 0xff, 0x96,
	0x17, 0x1a, 0xc2, 0xd8, 0xc0, 0x57, 0x85, 0x3b, 0x1b, 0x03, 0x11, 0x3f, 0x61, 0x55, 0x5a, 0xbf,
	0x9d, 0x38, 0x32, 0x24, 0xa7, 0x77, 0x6c, 0x80, 0xe6, 0x7c, 0x7f, 0x78, 0x53, 0x30, 0xe0, 0x8f,
	0x04, 0x43, 0xe6, 0x5c, 0xe6, 0xe3, 0xb9, 0xbc, 0xa7, 0x4a, 0x95, 0x42, 0xda, 0x47, 0xf1, 0xcd,
	0xe9, 0x4c, 0x05, 0x84, 0x25, 0x3a, 0x15, 0x32, 0x0b, 0xfc, 0x55, 0x4e, 0xeb, 0xb2, 0xa8, 0x95,
	0x43, 0xb3, 0xe8, 0x1e, 0xf3, 0x6f, 0xa2, 0x99, 0xb0, 0x59, 0x26, 0x7f, 0xf2, 0x8c, 0x2a, 0x15,
	0x09, 0x66, 0x99, 0xf8, 0x18, 0xec, 0x2b, 0xe8, 0x0f, 0x70, 0x88, 0x37, 0x6d, 0xe8, 0x88, 0x3e,
	0xfc, 0x9d, 0x6c, 0xd6, 0xe0, 0xd7, 0x92, 0x23, 0x65, 0x78, 0x0c, 0x1c, 0x9b, 0xc0, 0x2a, 0x15,
	0x67, 0x41, 0x27, 0x5a, 0x4f, 0xa7, 0x6c, 0x95, 0x16, 0xdd, 0x5a, 0x88, 0x0a, 0xcc, 0xa7, 0x8c,
	0x96, 0xe2, 0x6c, 0x0b, 0x0e, 0x54, 0xc8, 0xfb, 0xf1, 0xa9, 0x55, 0x7b, 0xeb, 0x94, 0xd2, 0xcf,
	0x82, 0x81, 0x32, 0x6c, 0xf9, 0x21, 0x2f, 0x46, 0xb1, 0x51, 0x3b, 0xfd, 0xab, 0xf8, 0x53, 0x76,
	0x57, 0x40, 0x58, 0x4a, 0x7f, 0x36, 0x9a, 0xde, 0xce, 0x80, 0x90, 0x3c, 0xe5, 0xf3, 0x06, 0x6f,
	0xc0, 0x47, 0x7c, 0x9f, 0x67, 0x79, 0x02, 0xaa, 0x54, 0x2b, 0xd0, 0x42, 0xf1, 0x13, 0xd0, 0x9c,
	0x50, 0x5d, 0x4b, 0x22, 0xba, 0x1f, 0x24, 0xae, 0xe4, 0xf0, 0x11, 0xfd, 0xdb, 0xde, 0xc9, 0x78,
	0x07, 0x2b, 0x01, 0x85, 0xbc, 0x01, 0x5f, 0xb0, 0x7e, 0x32, 0xde, 0x51, 0x1f, 0x0c, 0x47, 0x56,
	0x34, 0x04, 0x7d, 0xe1, 0xc9, 0x78, 0x47, 0x9d, 0xe2, 0x0d, 0x47, 0x56, 0x7c, 0xe6, 0x0d, 0x47,
	0x94, 0xc9, 0x78, 0x1b, 0xd6, 0xf7, 0x1d, 0xd0, 0xbf, 0xbb, 0x88, 0xc9, 0x48, 0xbb, 0x4c, 0x87,
	0xe2, 0x83, 0x88, 0xaf, 0xf7, 0x7e, 0x5e, 0x56, 0xdf, 0x10, 0xd9, 0xe9, 0x69, 0xac, 0xab, 0x2d,
	0xc5, 0xde, 0x9f, 0x44, 0x7b, 0x88, 0x79, 0x58, 0x97, 0xcf, 0xe2, 0xb3, 0xda, 0xf5, 0xab, 0x5a,
	0xf7, 0x01, 0x22, 0x05, 0xe2, 0x37, 0x16, 0x94, 0x00, 0xd1, 0xf5, 0xaf, 0x59, 0x2d, 0xbb, 0xb4,
	0xe5, 0x7f, 0x8f, 0xe6, 0x62, 0x6b, 0x5a, 0x69, 0xf0, 0xb3, 0x40, 0xa9, 0x52, 0xe7, 0xdd, 0x49,
	0x38, 0x29, 0x4c, 0x1d, 0x1c, 0x9f, 0xc4, 0x37, 0xcc, 0x18, 0x78, 0x58, 0xd7, 0xd4, 0xd3, 0xa5,
	0x9d, 0xed, 0x9b, 0xe8, 0x1d, 0x07, 0xcb, 0xb9, 0xb1, 0xef, 0x17, 0xf6, 0x6b, 0x6d, 0x67, 0xb5,
	0xe1, 0x3e, 0xc7, 0xee, 0xaf, 0x59, 0x0d, 0x52, 0xb9, 0xec, 0xe8, 0xcf, 0xa0, 0x58, 0x8b, 0x68,
	0xd1, 0xd6, 0x40, 0x40, 0x51, 0x7c, 0x8a, 0x0f, 0x1b, 0x4e, 0x80, 0xcb, 0xc2, 0xe2, 0x83, 0x7b,
	0x0d, 0xf1, 0x55, 0xf3, 0x89, 0xa5, 0x21, 0xf6, 0x27, 0xbf, 0x8c, 0x4d, 0x1c, 0xf9, 0x46, 0x3b,
	0xdb, 0xa7, 0x5d, 0x3a, 0x00, 0x63, 0x69, 0x3d, 0x5d, 0xa9, 0x33, 0x5f, 0x65, 0x9a, 0x88, 0x7b,
	0x9f, 0xfc, 0x65, 0x0e, 0x3d, 0x69, 0x7d, 0x89, 0xf8, 0xeb, 0xfc, 0xbf, 0xc3, 0x4c, 0x75, 0xd5,
	0xa7, 0x21, 0xc5, 0xfb, 0x69, 0xb0, 0xce, 0x47, 0x98, 0x32, 0x6c, 0xb0, 0x99, 0xba, 0xa6, 0xb8,
	0x9e, 0xcc, 0x0f, 0xbf, 0x3c, 0x22, 0x21, 0x2f, 0xf7, 0x76, 0x27, 0xc6, 0xba, 0x0c, 0x0e, 0x18,
	0x4f, 0x34, 0x79, 0xec, 0x86, 0xd6, 0xb6, 0x47, 0x1f, 0x39, 0x04, 0x9b, 0x06, 0x2e, 0x36, 0x13,
	0x47, 0xbe, 0x61, 0xa1, 0xf6, 0xa5, 0xd5, 0xf2, 0xd4, 0xe3, 0x18, 0x7b, 0xf8, 0x78, 0xb8, 0xd6,
	0xdf, 0x80, 0x9d, 0x39, 0x7f, 0xe1, 0x8f, 0x7c, 0xba, 0x31, 0x58, 0xed, 0xad, 0xab, 0x8c, 0x04,
	0x43, 0xde, 0x1a, 0xe0, 0xe0, 0xf2, 0x40, 0xab, 0x9a, 0xb9, 0x96, 0xb8, 0x0a, 0x54, 0xe7, 0x7a,
	0x7f, 0xbb, 0xde, 0xff, 0xb5, 0xd6, 0x7f, 0x49, 0x1b, 0x3a, 0xaa, 0xed, 0x1a, 0x4c, 0xf6, 0xb5,
	0xc0, 0x1a, 0xd2, 0xaf, 0x51, 0xe6, 0xbe, 0xf8, 0x93, 0x1c, 0x7a, 0xcc, 0xf6, 0xb5, 0x12, 0x73,
	0x04, 0x15, 0x41, 0x1f, 0xbc, 0xe8, 0xca, 0xf3, 0xf8, 0x54, 0xc9, 0x2b, 0x64, 0xaa, 0x23, 0xae,
	0x83, 0xb9, 0xe0, 0x17, 0x8f, 0xc0, 0x4c, 0x14, 0x6e, 0xae, 0x84, 0x18, 0x93, 0xa5, 0x5e, 0xa5,
	0x3e, 0x18, 0xa8, 0x54, 0x22, 0x24, 0x96, 0x59, 0x5f, 0x4b, 0x45, 0xd0, 0x97, 0x3e, 0x4b, 0x98,
	0x62, 0xa6, 0x01, 0x0c, 0x24, 0xbc, 0xc4, 0x5f, 0x13, 0x08, 0x86, 0x14, 0xda, 0x5f, 0x98, 0xd9,
	0x59, 0xcc, 0x37, 0xe5, 0xc1, 0x6b, 0xa6, 0xa9, 0xea, 0x89, 0x4b, 0x61, 0xa2, 0xd6, 0xa4, 0xfa,
	0x5a, 0xe0, 0xb0, 0x53, 0xc3, 0x03, 0xc9, 0xe1, 0x23, 0xf2, 0x54, 0x8d, 0xf9, 0x0b, 0x1c, 0x7a,
	0x24, 0x58, 0x5b, 0x15, 0x8c, 0x78, 0xeb, 0xb6, 0x06, 0x42, 0x8a, 0xd7, 0xb7, 0xb3, 0x24, 0xd8,
	0x48, 0xbc, 0x7a, 0xe6, 0x78, 0x1a, 0x55, 0x29, 0x24, 0xb8, 0x7d, 0x17, 0x3f, 0x34, 0x3d, 0x42,
	0xbc, 0xa6, 0x19, 0x3c, 0xa4, 0xf5, 0x0f, 0xa6, 0xae, 0xb6, 0xa6, 0xc6, 0xf7, 0x1a, 0x3c, 0x36,
	0xd6, 0x81, 0x83, 0x52, 0x52, 0xeb, 0xe9, 0x32, 0x10, 0x41, 0xbc, 0x4f, 0x1b, 0xb9, 0x6e, 0xde,
	0x15, 0x1c, 0xee, 0x0f, 0x6b, 0xc1, 0xb4, 0xb6, 0xb3, 0xfa, 0xe1, 0x21, 0x4b, 0x5b, 0xae, 0x7f,
	0x3d, 0x20, 0xbb, 0x8d, 0xc8, 0xff, 0x91, 0x43, 0x8f, 0xd7, 0x7b, 0x3f, 0x67, 0x3f, 0x54, 0x28,
	0xa1, 0x6a, 0x25, 0x10, 0x31, 0xe0, 0x2b, 0x1f, 0xcf, 0x77, 0x1f, 0xa7, 0x4a, 0x7b, 0x38, 0x21,
	0x73, 0x3d, 0xd1, 0x0f, 0x4a, 0x53, 0xbd, 0xff, 0xa2, 0x76, 0xe9, 0x72, 0x72, 0xf4, 0x22, 0x51,
	0xe8, 0x8d, 0x1c, 0x02, 0x6d, 0x18, 0x5d, 0x00, 0x94, 0x40, 0x78, 0xbd, 0xc9, 0x78, 0x47, 0xfa,
	0x6a, 0x8d, 0xf5, 0x34, 0xf7, 0xeb, 0x43, 0x67, 0xb4, 0xd6, 0xc1, 0x89, 0xdd, 0x83, 0xfa, 0xc1,
	0x4e, 0x78, 0x84, 0x04, 0xcb, 0x78, 0xf1, 0xa5, 0x67, 0xe4, 0xcc, 0xb3, 0xe0, 0x87, 0x39, 0xb4,
	0x90, 0xb9, 0xf9, 0xf8, 0x33, 0x46, 0x37, 0xb3, 0xf1, 0x32, 0xb0, 0xd7, 0xaf, 0x6b, 0x05, 0xf1,
	0x13, 0xc7, 0xcc, 0xb5, 0xe6, 0xfe, 0x64, 0xef, 0x31, 0x16, 0xff, 0xd1, 0x39, 0x6b, 0x97, 0xf6,
	0xb0, 0xb8, 0x10, 0xe4, 0x2c, 0x12, 0xeb, 0xe4, 0x8b, 0x66, 0xad, 0xfd, 0x22, 0x7b, 0x9d, 0x44,
	0x13, 0x23, 0xb9, 0x0e, 0xcb, 0xff, 0x2d, 0x87, 0x96, 0x34, 0x06, 0x42, 0x4a, 0x8d, 0xdf, 0xd8,
	0x06, 0xf0, 0xd8, 0x96, 0x95, 0xfa, 0xe0, 0x0e, 0x6f, 0x1d, 0xb5, 0x3f, 0xcf, 0x21, 0xcc, 0xde,
	0x54, 0x15, 0xc5, 0x5f, 0xa7, 0xef, 0x64, 0x72, 0xa8, 0x5d, 0xbb, 0xd1, 0x6a, 0x43, 0xe1, 0x97,
	0xf6, 0x10, 0x7f, 0xfb, 0xfe, 0x8b, 0x5a, 0xff, 0x20, 0x13, 0xec, 0x22, 0x3a, 0xa4, 0x7f, 0x3b,
	0xa8, 0xed, 0xe9, 0x48, 0xbf, 0x6c, 0x2f, 0x98, 0x0b, 0x98, 0x6a, 0x78, 0x7e, 0x33, 0xab, 0x31,
	0x98, 0x6b, 0x85, 0xfc, 0x60, 0x34, 0x06, 0x85, 0x66, 0xf4, 0x57, 0x36, 0x40, 0x5d, 0x26, 0xa1,
	0x7f, 0x13, 0xeb, 0x28, 0x33, 0xcf, 0x0a, 0x9a, 0xcb, 0x38, 0xca, 0xfc, 0x84, 0x71, 0x81, 0xb1,
	0x75, 0x49, 0xca, 0x58, 0xb7, 0x17, 0xc6, 0xab, 0x6d, 0xfe, 0x5d, 0x79, 0xb5, 0x95, 0xd8, 0xbc,
	0x01, 0x16, 0x58, 0x11, 0xca, 0x98, 0x62, 0x91, 0x77, 0xd8, 0x29, 0xb1, 0x9b, 0x19, 0xe3, 0x32,
	0xc0, 0xb8, 0xc6, 0xf1, 0x77, 0xe5, 0x1a, 0x57, 0x62, 0xf3, 0x35, 0x78, 0x84, 0x19, 0x9d, 0x71,
	0x6f, 0xe3, 0xd9, 0xe6, 0x2e, 0x4e, 0x6e, 0xff, 0x81, 0x75, 0x02, 0x80, 0x28, 0x92, 0xe3, 0x9c,
	0x2a, 0x8d, 0xb2, 0x4e, 0x00, 0xc3, 0x5c, 0x3a, 0xa3, 0xf6, 0x70, 0x78, 0x03, 0x14, 0xfd, 0x71,
	0x3e, 0x9a, 0x49, 0x3c, 0x52, 0xf9, 0x0a, 0x16, 0x0a, 0x81, 0xdb, 0x15, 0x55, 0x69, 0x15, 0x0b,
	0x85, 0x45, 0x0c, 0x14, 0x4e, 0xf4, 0x8e, 0x6b, 0xb1, 0xf3, 0x89, 0x68, 0xec, 0x05, 0x31, 0x31,
	0xd6, 0x69, 0xb9, 0x61, 0x33, 0x70, 0xb8, 0xd9, 0xe6, 0xe0, 0x85, 0xdf, 0xe5, 0x81, 0x83, 0xd7,
	0x2a, 0x53, 0x7b, 0x65, 0x79, 0x61, 0x33, 0x3d, 0x76, 0xa6, 0x76, 0x8f, 0x01, 0xca, 0xfb, 0xf9,
	0x8b, 0xd0, 0x2f, 0x71, 0x00, 0x0b, 0xa1, 0x7c, 0x25, 0x50, 0x53, 0xe7, 0x0f, 0x7f, 0x8a, 0xd9,
	0x69, 0xd0, 0xad, 0xe1, 0x77, 0x10, 0x6c, 0xb9, 0xf8, 0x06, 0xf4, 0x0e, 0xfe, 0xe1, 0x06, 0x8f,
	0xb3, 0xe7, 0x18, 0x1d, 0x43, 0x3b, 0x34, 0x92, 0x88, 0x36, 0xb9, 0x0e, 0xf6, 0x82, 0x48, 0x06,
	0x63, 0x3b, 0x63, 0x81, 0x3f, 0xc7, 0x0d, 0xf8, 0x89, 0x66, 0x2e, 0x1d, 0xf8, 0x99, 0xd8, 0x7c,
	0x33, 0x5c, 0x63, 0xf3, 0x31, 0x97, 0xd7, 0x05, 0x7a, 0xdf, 0x47, 0xf9, 0x64, 0x23, 0xb1, 0xfe,
	0x06, 0x38, 0x2b, 0x2c, 0xf2, 0xe5, 0x44, 0x76, 0x36, 0x28, 0xe2, 0x72, 0x68, 0x6f, 0x45, 0x2c,
	0xc5, 0x86, 0xaf, 0x35, 0xc5, 0x0d, 0x75, 0xde, 0xc8, 0xf6, 0x60, 0xc8, 0xe0, 0xb0, 0xc5, 0x62,
	0x33, 0xe2, 0x80, 0xcc, 0xf6, 0xc5, 0x7f, 0x8e, 0xf2, 0x1a, 0xc3, 0x8a, 0x67, 0x83, 0x4c, 0xde,
	0xd6, 0x10, 0x51, 0x8f, 0x16, 0x8a, 0x9b, 0x48, 0x18, 0x64, 0x70, 0x47, 0xc6, 0xde, 0x0c, 0xd4,
	0x8d, 0x1d, 0x88, 0xb8, 0x7e, 0xf9, 0x34, 0x66, 0xa3, 0x47, 0x53, 0xe7, 0x9b, 0x09, 0x6c, 0x9b,
	0xc4, 0x1d, 0x74, 0x3f, 0x2c, 0xaf, 0x41, 0x3b, 0xe6, 0xd7, 0x61, 0x43, 0x7b, 0x75, 0xc8, 0x8f,
	0xc5, 0x18, 0xa2, 0x94, 0x7a, 0x5a, 0x95, 0x9e, 0x12, 0xd8, 0x72, 0x91, 0x27, 0x6b, 0x1b, 0x6e,
	0x4a, 0x9d, 0x6f, 0xd6, 0xbb, 0xbb, 0x53, 0xe3, 0x60, 0x5f, 0x37, 0x2b, 0xf0, 0x55, 0x68, 0x96,
	0x3f, 0xbc, 0x65, 0xfb, 0xf6, 0x3a, 0x7f, 0x40, 0x21, 0x1c, 0x09, 0x56, 0x4d, 0x58, 0xa5, 0xe2,
	0xb3, 0xd0, 0x07, 0x91, 0x7a, 0xae, 0x7d, 0x93, 0x1c, 0xed, 0x4e, 0x9e, 0x1f, 0x4d, 0xc6, 0xc6,
	0x1d, 0x93, 0xb3, 0x9a, 0xf0, 0x3e, 0x94, 0x53, 0xeb, 0x0f, 0xf8, 0x88, 0xb1, 0x16, 0xc3, 0x15,
	0x2e, 0x10, 0xcb, 0x28, 0xb8, 0x3a, 0x02, 0x38, 0xc3, 0xa6, 0xd7, 0xbe, 0x1c, 0x5e, 0x85, 0x43,
	0x4e, 0xe3, 0xb7, 0xe9, 0x17, 0xf5, 0x13, 0xe7, 0x0c, 0x5e, 0x03, 0x0b, 0x82, 0xe0, 0x3b, 0xa3,
	0xc5, 0x4e, 0x69, 0xf1, 0xdd, 0x32, 0xee, 0x8c, 0xdf, 0x68, 0x0b, 0x0d, 0x91, 0x6f, 0xa9, 0x9d,
	0xd9, 0x90, 0xdd, 0x4b, 0x60, 0xd7, 0x4b, 0x36, 0x95, 0x7a, 0x12, 0xd1, 0x21, 0x33, 0x5a, 0x37,
	0xc1, 0xf4, 0x6c, 0x20, 0x89, 0x26, 0x0e, 0x21, 0x9f, 0xd2, 0x50, 0x17, 0xdc, 0x49, 0x23, 0x4f,
	0xcf, 0xf1, 0xfc, 0x5a, 0x95, 0x3e, 0x12, 0x98, 0x62, 0x71, 0x0b, 0xf4, 0x30, 0xb1, 0x7b, 0x30,
	0x39, 0xf6, 0x8d, 0x35, 0xfb, 0xce, 0xde, 0xe4, 0xfe, 0xaf, 0x13, 0xd1, 0x58, 0xea, 0xe0, 0x89,
	0xe4, 0xf1, 0x1b, 0x89, 0xf1, 0x13, 0xc9, 0xde, 0x63, 0x93, 0xf1, 0x8e, 0x35, 0xc5, 0xc9, 0xf6,
	0x2f, 0x93, 0x3d, 0x7b, 0xf4, 0xfe, 0x18, 0xb4, 0xc0, 0xb0, 0x04, 0x21, 0x7a, 0xa0, 0x40, 0x66,
	0x3a, 0xe7, 0xdf, 0x42, 0x39, 0xdb, 0x6a, 0xca, 0x4b, 0x89, 0x4d, 0x10, 0x2f, 0x05, 0x17, 0x88,
	0x4f, 0x25, 0x62, 0xfb, 0x13, 0xd1, 0x3e, 0x1a, 0xc7, 0xde, 0x8c, 0x31, 0x6e, 0xad, 0x4d, 0xc6,
	0x15, 0xf9, 0x77, 0x50, 0xee, 0x36, 0xf0, 0x2b, 0x99, 0x6b, 0xa1, 0x1d, 0x52, 0x24, 0x3e, 0x43,
	0x7b, 0xa1, 0x97, 0xd8, 0xad, 0x27, 0x52, 0x9d, 0x2f, 0x41, 0xb9, 0x3e, 0xa5, 0xc1, 0xf2, 0x1e,
	0x03, 0x1f, 0x4d, 0x28, 0x12, 0x97, 0x4e, 0xec, 0x1e, 0x9c, 0x38, 0x32, 0x98, 0x71, 0x3a, 0xa4,
	0x1e, 0xbf, 0x09, 0xe5, 0x19, 0x7f, 0xe1, 0x29, 0xcd, 0xb7, 0xe2, 0x8f, 0xd3, 0x42, 0xb1, 0x08,
	0x3a, 0x9a, 0x72, 0x46, 0xb4, 0x36, 0x5f, 0x8e, 0xf2, 0x0c, 0x1e, 0x0b, 0x93, 0xe3, 0x05, 0x56,
	0xac, 0x3c, 0x5a, 0x28, 0x2e, 0x35, 0xc8, 0xc0, 0xf8, 0xee, 0x8c, 0xf3, 0xa2, 0x35, 0xf9, 0x4a,
	0x84, 0xe0, 0x6f, 0x3c, 0x37, 0x20, 0x88, 0x2f, 0xa8, 0xd2, 0x6a, 0x81, 0x29, 0x16, 0x8b, 0xa0,
	0xbb, 0x29, 0x67, 0xc7, 0xd4, 0xe7, 0xdf, 0x45, 0x79, 0x58, 0x1b, 0x13, 0x52, 0x22, 0x98, 0x4e,
	0xe6, 0x81, 0x16, 0x8e, 0x16, 0x9a, 0x4e, 0xa8, 0x89, 0x68, 0x2c, 0x31, 0x7e, 0x42, 0x1b, 0xd9,
	0x43, 0xad, 0x13, 0x0e, 0xc1, 0x87, 0xb6, 0xc0, 0x6f, 0xeb, 0xab, 0xe9, 0xc3, 0x85, 0x70, 0xc1,
	0x42, 0xf7, 0xf0, 0xd6, 0x84, 0xf6, 0x30, 0x4f, 0x32, 0x88, 0x73, 0xe4, 0xc7, 0xaa, 0xf4, 0xa1,
	0xc0, 0xf6, 0x20, 0x6e, 0x34, 0x2f, 0xe1, 0x7e, 0x83, 0xb5, 0x1c, 0x3a, 0x9a, 0xec, 0x6b, 0x01,
	0x35, 0x1b, 0x8d, 0xb3, 0x4f, 0x83, 0x8e, 0x59, 0xcd, 0xd8, 0xc7, 0x52, 0x6c, 0x56, 0x00, 0x99,
	0xed, 0xda, 0xee, 0x44, 0xbf, 0xe8, 0xfb, 0x38, 0xd1, 0x3f, 0x7a, 0x97, 0x4e, 0xf4, 0x8b, 0x3f,
	0x40, 0xf3, 0x9d, 0x6b, 0x77, 0xf1, 0x46, 0x5b, 0x6d, 0x77, 0x1b, 0x9f, 0xe2, 0x45, 0x0b, 0xeb,
	0xa9, 0x56, 0xaf, 0x4a, 0xbf, 0x41, 0x9f, 0x0a, 0x26, 0x81, 0x17, 0x3f, 0x72, 0xb8, 0x49, 0xea,
	0xbd, 0x57, 0x0c, 0x1e, 0x65, 0xe4, 0xfa, 0xc4, 0x58, 0x8f, 0x4f, 0xd9, 0x11, 0x6c, 0x20, 0x21,
	0x56, 0x6e, 0x35, 0xed, 0xd2, 0x47, 0xba, 0x0d, 0xde, 0x02, 0x63, 0x0d, 0x60, 0xd1, 0xf5, 0xfe,
	0x76, 0xd0, 0xf3, 0x10, 0xe2, 0x8a, 0x39, 0x76, 0xfd, 0xc4, 0xee, 0x89, 0x63, 0x3d, 0x13, 0x7d,
	0x87, 0x92, 0xe7, 0x47, 0x8b, 0xfe, 0x71, 0x0e, 0xca, 0xa9, 0xf2, 0x86, 0x6b, 0xf9, 0x77, 0x51,
	0x6e, 0xc4, 0x1b, 0xae, 0xa5, 0x5c, 0x04, 0x0e, 0xe8, 0x4d, 0x8a, 0xc4, 0xe5, 0x89, 0xd1, 0x51,
	0x33, 0xf5, 0x00, 0xa1, 0x1c, 0xe3, 0x63, 0x7a, 0x6c, 0x24, 0x11, 0xed, 0x22, 0x0e, 0x36, 0xf8,
	0x3b, 0xb8, 0x1b, 0xca, 0xa4, 0x15, 0xff, 0xd7, 0x28, 0xcf, 0xf8, 0x8b, 0xbc, 0x41, 0xa4, 0x6e,
	0x70, 0xb4, 0x50, 0x94, 0x49, 0x33, 0x13, 0xb7, 0x41, 0x64, 0xac, 0x12, 0xf6, 0x31, 0x3d, 0x44,
	0x2e, 0xb7, 0x3f, 0x2a, 0x9f, 0x8c, 0x77, 0x94, 0xba, 0x3e, 0xe5, 0x4e, 0x0e, 0xb5, 0xcb, 0xb4,
	0x77, 0xfe, 0x73, 0xea, 0x33, 0x09, 0x3c, 0xc7, 0xaf, 0x71, 0x88, 0x7d, 0xe2, 0x32, 0x39, 0x9b,
	0x9d, 0xf1, 0x6d, 0x4f, 0x69, 0xc8, 0x23, 0xcf, 0xa6, 0xae, 0x8b, 0x36, 0x1f, 0xc7, 0x99, 0x95,
	0x5b, 0x4b, 0x4a, 0xca, 0x2a, 0x2b, 0xe5, 0x99, 0xeb, 0xa4, 0x72, 0xec, 0xe3, 0x38, 0xb3, 0xaa,
	0x7c, 0x53, 0xd9, 0x96, 0xad, 0x55, 0xf2, 0xdc, 0x75, 0x5b, 0xe4, 0x92, 0xb2, 0xaa, 0x32, 0x79,
	0x53, 0xf9, 0x66, 0xa9, 0xaa, 0x8c, 0xc6, 0x75, 0xf9, 0xd8, 0x8a, 0xeb, 0x02, 0xec, 0x07, 0x7e,
	0xe4, 0x65, 0x96, 0x89, 0x3f, 0x87, 0xb1, 0x21, 0x7e, 0x84, 0x75, 0xb0, 0xfb, 0xce, 0x4d, 0x1c,
	0x3a, 0x06, 0x81, 0xb5, 0x26, 0x0e, 0x1d, 0x4b, 0x8d, 0x8c, 0xe8, 0xdd, 0x3d, 0xc9, 0xb3, 0x31,
	0x7a, 0xbc, 0x34, 0x3a, 0x0c, 0xff, 0x22, 0x9a, 0x11, 0x8e, 0x78, 0x43, 0x11, 0xc2, 0xa3, 0xe0,
	0xa4, 0x21, 0x50, 0x22, 0xf2, 0xd0, 0x37, 0xd5, 0xac, 0x1a, 0xa0, 0x0b, 0x9f, 0xf8, 0x95, 0x28,
	0x5b, 0x09, 0xf8, 0x88, 0x77, 0x1b, 0x84, 0x4f, 0x55, 0x02, 0x3e, 0xb3, 0x45, 0x72, 0xf4, 0xa0,
	0x7e, 0xe2, 0x14, 0x69, 0x61, 0x7c, 0xe0, 0x37, 0xa2, 0x39, 0xca, 0xe7, 0x4a, 0x75, 0x23, 0xd6,
	0xcd, 0x98, 0x81, 0x6d, 0x88, 0xc3, 0x9f, 0xfd, 0x8b, 0xd9, 0x07, 0xac, 0x88, 0xf4, 0x61, 0xaf,
	0xc2, 0x6f, 0x45, 0xf9, 0xd5, 0x8d, 0xa1, 0x90, 0x12, 0x88, 0x54, 0x46, 0x94, 0x06, 0xc2, 0x45,
	0x60, 0x24, 0xc8, 0x96, 0x8b, 0x4f, 0x91, 0x9e, 0x86, 0xbe, 0xd0, 0xfa, 0x07, 0xa1, 0x3f, 0x83,
	0x23, 0x1e, 0x3a, 0x37, 0x71, 0xd1, 0xca, 0x81, 0x62, 0xd5, 0xe7, 0xcb, 0xd1, 0xec, 0x70, 0x44,
	0x69, 0xa8, 0x54, 0x7e, 0xdb, 0xa8, 0x04, 0xaa, 0x15, 0xe2, 0x57, 0x86, 0x15, 0xbe, 0xb6, 0x0f,
	0x8e, 0x29, 0xe2, 0xfe, 0x64, 0x5b, 0x0d, 0x7e, 0x17, 0x67, 0x6c, 0xab, 0xd2, 0x60, 0x1a, 0x76,
	0x7e, 0xe2, 0xbc, 0xb0, 0xc6, 0x3d, 0x59, 0x69, 0x8c, 0x4a, 0xd0, 0x1d, 0x7e, 0x59, 0x0d, 0x4d,
	0xc4, 0x37, 0xa1, 0xfb, 0xd4, 0xc8, 0xf9, 0xe4, 0xe8, 0x1e, 0xe8, 0x9e, 0x31, 0x69, 0x5a, 0x1c,
	0x17, 0x14, 0xc2, 0xa5, 0x31, 0xa8, 0x79, 0x7c, 0x97, 0x16, 0x8d, 0xea, 0x47, 0xae, 0xca, 0xd0,
	0x0f, 0xff, 0x16, 0x2b, 0x05, 0x02, 0x9f, 0x81, 0x23, 0xc5, 0x33, 0x52, 0x20, 0x5d, 0x89, 0x21,
	0x91, 0x00, 0x6f, 0x63, 0xcf, 0x2b, 0xc3, 0x48, 0x04, 0xb3, 0x99, 0x1e, 0x2c, 0x89, 0xc0, 0xde,
	0x03, 0x46, 0x0d, 0xac, 0x04, 0xc0, 0x70, 0xcf, 0x73, 0x5c, 0x45, 0x47, 0x00, 0x31, 0x78, 0xff,
	0x1c, 0x8b, 0xd9, 0x44, 0xc7, 0x3a, 0x6f, 0x38, 0xb2, 0x15, 0x63, 0x4a, 0x36, 0x49, 0x05, 0x53,
	0x2c, 0xf2, 0x89, 0xe8, 0x3e, 0xfd, 0xeb, 0x01, 0x3b, 0x72, 0xb5, 0xbe, 0xb3, 0xa2, 0xe3, 0x3c,
	0x57, 0xd1, 0x11, 0xe6, 0x8e, 0x9b, 0xe3, 0xd1, 0x4d, 0xe6, 0xbb, 0x1e, 0xcd, 0xdd, 0x1e, 0x0c,
	0x55, 0x2b, 0x55, 0x4a, 0xa8, 0xde, 0x1f, 0x30, 0x66, 0x00, 0x66, 0x08, 0x1c, 0xdc, 0xc2, 0xf1,
	0x49, 0x5c, 0x4d, 0xce, 0xcb, 0xb4, 0x01, 0x82, 0x0d, 0x37, 0x39, 0xda, 0xa6, 0x0f, 0x9d, 0xa1,
	0x48, 0x8e, 0x3c, 0xb4, 0xec, 0xba, 0xa0, 0xb5, 0x5d, 0x95, 0x1d, 0x3d, 0xf0, 0x9d, 0x1c, 0x9a,
	0x5d, 0x1d, 0xac, 0xaf, 0x0f, 0x06, 0x20, 0xb0, 0x4f, 0xa6, 0x94, 0x18, 0x18, 0x6a, 0x4a, 0x98,
	0x8a, 0x00, 0x3c, 0x92, 0x2a, 0xbd, 0x21, 0xd8, 0x3a, 0x10, 0x57, 0x6a, 0xad, 0x5f, 0x6b, 0xad,
	0x97, 0x69, 0x50, 0x21, 0x10, 0x1a, 0x53, 0xd7, 0x06, 0x0d, 0x98, 0xd3, 0x86, 0x3b, 0xf4, 0xb6,
	0x1e, 0x33, 0x09, 0xc6, 0xe9, 0x89, 0x26, 0x55, 0xb6, 0xb5, 0x5e, 0xbc, 0x19, 0x21, 0x0b, 0x36,
	0xef, 0x21, 0x58, 0xb5, 0xd1, 0x98, 0xf5, 0xb6, 0x7e, 0x13, 0x2d, 0x48, 0x9b, 0xf5, 0x5d, 0xf9,
	0x5c, 0x1f, 0xe0, 0x54, 0xa9, 0x93, 0x43, 0xfb, 0x38, 0x01, 0x53, 0x18, 0xb1, 0xd9, 0x96, 0xb5,
	0x61, 0x32, 0xde, 0x41, 0x3c, 0xb0, 0xf1, 0xcf, 0xd4, 0xee, 0x0e, 0xad, 0xa7, 0x4b, 0x6f, 0x6f,
	0xd2, 0x8f, 0x9e, 0xd6, 0x2e, 0xb5, 0xc0, 0xe9, 0x38, 0x6e, 0x90, 0xc1, 0xcf, 0x98, 0x2a, 0x0f,
	0x2b, 0x16, 0x00, 0xbe, 0x6b, 0x93, 0xf1, 0x36, 0x43, 0xee, 0xee, 0x69, 0x4b, 0xc4, 0x0e, 0x78,
	0x1b, 0xfc, 0x89, 0x28, 0xe1, 0x9a, 0xd8, 0x57, 0xb4, 0x93, 0xf1, 0xf6, 0xa2, 0xbf, 0xcb, 0x43,
	0x39, 0x18, 0x6f, 0xfc, 0x8c, 0x8d, 0x27, 0xe7, 0x79, 0x4c, 0x95, 0x16, 0x12, 0x29, 0x77, 0xb6,
	0x0d, 0xd7, 0x80, 0x08, 0xfb, 0x0e, 0x0d, 0x74, 0x95, 0xc5, 0xb0, 0xba, 0x24, 0xd0, 0xd5, 0x33,
	0xec, 0xa3, 0x25, 0x1a, 0xee, 0x0a, 0x48, 0x99, 0xf9, 0x08, 0xae, 0xc1, 0x4f, 0x83, 0x5d, 0xad,
	0x25, 0xc1, 0xae, 0xb2, 0xad, 0xdb, 0x01, 0xc1, 0xae, 0x0a, 0x20, 0x55, 0x09, 0x54, 0x23, 0x12,
	0x66, 0x7b, 0x93, 0x15, 0xc5, 0xaa, 0x9e, 0x06, 0xb1, 0x82, 0xf7, 0xc5, 0x85, 0x6e, 0x07, 0x68,
	0x8b, 0x5e, 0x85, 0xb1, 0xab, 0x19, 0xbd, 0xea, 0x59, 0xb2, 0x2e, 0x53, 0xc9, 0x40, 0xa1, 0xac,
	0x56, 0xd9, 0x79, 0xab, 0xa9, 0x19, 0x1f, 0x9b, 0x36, 0x72, 0xdd, 0x0c, 0x58, 0xc5, 0xaf, 0x45,
	0x33, 0xb0, 0x8b, 0x27, 0x31, 0x5b, 0x3c, 0xa5, 0x4a, 0x4b, 0x05, 0x28, 0x11, 0x17, 0xa5, 0x46,
	0xce, 0x41, 0x6f, 0xe0, 0xed, 0x0a, 0xba, 0x59, 0x19, 0xbe, 0xf2, 0x2b, 0x4d, 0xe2, 0x94, 0x6b,
	0xc5, 0x26, 0x27, 0xc4, 0x69, 0xb6, 0x1b, 0x59, 0x5a, 0x06, 0x64, 0x09, 0xfc, 0x32, 0x1e, 0x55,
	0xa5, 0x47, 0x80, 0x2c, 0xcd, 0x4e, 0x27, 0x48, 0xeb, 0x9c, 0x04, 0x29, 0x0f, 0x4f, 0x0d, 0xbf,
	0x15, 0x77, 0x10, 0xa4, 0xd9, 0x53, 0x91, 0x22, 0xd5, 0x7a, 0x4d, 0x01, 0x41, 0xb0, 0x7f, 0x67,
	0x30, 0xce, 0x26, 0x67, 0xb0, 0x0c, 0x96, 0x66, 0xbd, 0xa4, 0xc0, 0x96, 0x6b, 0xca, 0x33, 0x6f,
	0xde, 0x52, 0x55, 0x59, 0x25, 0xc9, 0xf8, 0x55, 0x84, 0x27, 0xf4, 0x96, 0x8c, 0xac, 0x82, 0xef,
	0xc5, 0x33, 0x7c, 0x68, 0xf1, 0x0c, 0x20, 0xca, 0x62, 0x04, 0x41, 0x79, 0x86, 0x17, 0x60, 0x56,
	0x0e, 0x9e, 0x81, 0xa5, 0x2c, 0xc0, 0x2d, 0xc0, 0xdb, 0x4c, 0xe0, 0x1f, 0x2c, 0x86, 0xa1, 0xdc,
	0x86, 0x98, 0xf3, 0xad, 0x08, 0xe2, 0x2c, 0x62, 0x2e, 0x20, 0x97, 0x6e, 0x6a, 0xf4, 0xfc, 0x0e,
	0x42, 0x06, 0x87, 0xb5, 0x49, 0x89, 0x7c, 0x1a, 0x34, 0xcd, 0xff, 0xf8, 0xfd, 0x15, 0x53, 0x2c,
	0x3e, 0x6e, 0xfc, 0x4d, 0x73, 0x4a, 0x25, 0x46, 0xbf, 0x48, 0x9e, 0x6e, 0xd6, 0xf6, 0x8e, 0x19,
	0x50, 0xc2, 0x54, 0xfb, 0x3e, 0x41, 0xd1, 0x40, 0x3d, 0x8f, 0x76, 0x73, 0x02, 0xbe, 0xcf, 0xe2,
	0xef, 0x59, 0xf2, 0x6e, 0x80, 0x37, 0xc4, 0xed, 0x22, 0xc8, 0xa1, 0x83, 0x7d, 0x5f, 0x49, 0x75,
	0xc3, 0x10, 0xca, 0xd4, 0xa8, 0x1c, 0xdf, 0xa5, 0x0f, 0x9d, 0xa3, 0xc1, 0xbf, 0x48, 0x36, 0x0b,
	0x1c, 0xe2, 0x62, 0x62, 0x6f, 0xa7, 0x7e, 0xf8, 0x12, 0x7d, 0xde, 0x65, 0xf0, 0x69, 0x4c, 0x66,
	0x22, 0xc8, 0xc3, 0x51, 0x34, 0x90, 0x8d, 0x66, 0x56, 0xd5, 0x2a, 0x25, 0x7e, 0x5f, 0x88, 0x7f,
	0x11, 0x82, 0x99, 0x73, 0x16, 0xe1, 0xc5, 0xc1, 0xcc, 0x0b, 0x92, 0x63, 0x07, 0xf4, 0xe1, 0xef,
	0xd8, 0x60, 0xe6, 0x66, 0xa8, 0xfa, 0xf7, 0x2a, 0x4a, 0x0c, 0x74, 0xc4, 0x84, 0xbc, 0x06, 0x74,
	0x84, 0xe3, 0x5c, 0xcf, 0x06, 0x9d, 0x24, 0xb4, 0x96, 0x71, 0x19, 0x5f, 0x86, 0xf2, 0xca, 0x2b,
	0x36, 0x37, 0xd6, 0x6f, 0x23, 0xa1, 0xa5, 0xe6, 0xc0, 0x59, 0xd2, 0x42, 0x71, 0x31, 0x54, 0xd7,
	0x3a, 0x5a, 0xb5, 0x9e, 0xaf, 0xc0, 0xcb, 0xb9, 0xbc, 0x02, 0xa2, 0x62, 0xcb, 0xb4, 0x16, 0xbf,
	0x96, 0xde, 0x82, 0x1c, 0x26, 0xaf, 0x1a, 0xb9, 0x05, 0x3c, 0xe9, 0x02, 0x83, 0x93, 0xc9, 0xd7,
	0x13, 0x50, 0x2d, 0x46, 0x33, 0xab, 0x99, 0x18, 0x4e, 0x24, 0x5a, 0x83, 0x59, 0x66, 0x35, 0x55,
	0x2d, 0xfe, 0xc4, 0xfc, 0xf8, 0x7d, 0x43, 0x29, 0x16, 0xaf, 0x55, 0xa5, 0x17, 0x91, 0x28, 0x98,
	0xdb, 0x2d, 0x3e, 0x47, 0x42, 0x9b, 0x63, 0x22, 0x52, 0xb5, 0xa1, 0x8c, 0x66, 0xbd, 0x30, 0x66,
	0xd0, 0xa6, 0x6a, 0x6d, 0xe4, 0xe9, 0x77, 0x51, 0x2f, 0x87, 0x66, 0x93, 0x46, 0x60, 0x04, 0x5a,
	0x88, 0x66, 0x54, 0x63, 0xfb, 0x94, 0x71, 0x54, 0x73, 0x64, 0xf8, 0x61, 0xc0, 0xa0, 0x71, 0x7c,
	0x00, 0x6f, 0xf8, 0x68, 0x16, 0x3b, 0x77, 0x9b, 0xd9, 0xc2, 0x47, 0xed, 0x5b, 0x68, 0xee, 0x50,
	0xb1, 0x71, 0x1e, 0xe8, 0x69, 0xc1, 0x36, 0xa0, 0xb8, 0xb0, 0x6a, 0x43, 0x59, 0xa1, 0x71, 0x80,
	0xec, 0x93, 0xf4, 0xa2, 0xa1, 0xa7, 0xb0, 0x30, 0x69, 0x49, 0x3c, 0xb2, 0xf2, 0x5b, 0xbe, 0x3e,
	0x3d, 0xf7, 0xe0, 0x16, 0xa7, 0x2d, 0x80, 0x31, 0x04, 0x00, 0xc0, 0x9a, 0x99, 0x06, 0x57, 0xe3,
	0x7f, 0xf0, 0x44, 0x36, 0x77, 0x5a, 0x4f, 0x64, 0xcb, 0xdd, 0x52, 0x11, 0x3e, 0x37, 0x75, 0x2a,
	0xc2, 0xdb, 0x9e, 0xdc, 0x50, 0xce, 0xfc, 0xac, 0x02, 0x9f, 0x3d, 0x27, 0x61, 0x98, 0xd1, 0xbc,
	0x67, 0x9b, 0xfe, 0xb2, 0x9b, 0x18, 0xbd, 0xbb, 0x44, 0xec, 0xed, 0xf0, 0x92, 0xb9, 0xa9, 0xd5,
	0x98, 0x7e, 0xec, 0x00, 0xe3, 0x18, 0xaa, 0x8d, 0x5d, 0xd6, 0x0e, 0x76, 0x02, 0xd8, 0xd3, 0xf7,
	0x4d, 0x24, 0xfc, 0x37, 0xe6, 0xc7, 0x6e, 0x7b, 0x72, 0x42, 0x59, 0x05, 0x85, 0xcc, 0xf3, 0xb8,
	0x77, 0x1d, 0x4f, 0x7c, 0x5f, 0x71, 0xc9, 0x10, 0x08, 0xa9, 0xfe, 0x8c, 0x4b, 0x70, 0xea, 0x14,
	0xce, 0x79, 0xe2, 0xfa, 0x7c, 0x98, 0x3e, 0xf8, 0x95, 0xcd, 0xc7, 0x40, 0x00, 0xe1, 0xaf, 0x19,
	0x14, 0x82, 0x3c, 0x06, 0x7a, 0x9e, 0xc0, 0xd8, 0x85, 0x66, 0xbd, 0xbf, 0x1d, 0xdc, 0xa2, 0xfd,
	0x3e, 0x58, 0x46, 0x22, 0xba, 0x8f, 0xec, 0x11, 0xf6, 0x31, 0x32, 0x67, 0x4a, 0x5e, 0x08, 0xd9,
	0x2c, 0x46, 0xb9, 0xa6, 0xc5, 0x68, 0x11, 0xcb, 0x99, 0xe7, 0x99, 0xba, 0xfa, 0xdb, 0x9e, 0x45,
	0xa1, 0x47, 0xdc, 0x26, 0xc8, 0xf0, 0xe9, 0x5b, 0x6d, 0x4a, 0xc9, 0x99, 0xa6, 0x27, 0xd6, 0x62,
	0x9b, 0x52, 0x72, 0x36, 0xa8, 0x23, 0x41, 0x17, 0x99, 0xb1, 0x57, 0x56, 0x3b, 0x19, 0xb6, 0x27,
	0x0f, 0x04, 0x49, 0xed, 0x5d, 0x9c, 0x60, 0x86, 0x4d, 0x1e, 0x68, 0x26, 0x98, 0xc1, 0x8a, 0x9c,
	0xe5, 0x85, 0x00, 0x83, 0x1f, 0x36, 0x84, 0x82, 0xbe, 0xe5, 0x85, 0x38, 0x4d, 0xe0, 0xf2, 0xc2,
	0x88, 0x12, 0x8e, 0x7c, 0x84, 0xc7, 0x94, 0x73, 0x8c, 0xbf, 0xe5, 0x19, 0xf8, 0x83, 0x9c, 0x93,
	0x9e, 0x3e, 0xd0, 0x6f, 0x4b, 0x1f, 0x38, 0xcb, 0x74, 0x2b, 0x7e, 0xc9, 0x96, 0x3e, 0xf0, 0x39,
	0x48, 0x19, 0x48, 0xf5, 0x05, 0x1f, 0xd6, 0xbe, 0x1c, 0x5e, 0x5e, 0x88, 0xb5, 0xb8, 0x1f, 0x51,
	0xbd, 0x56, 0xed, 0xcb, 0xe1, 0xdb, 0x9e, 0xb9, 0xa1, 0xd9, 0x72, 0x76, 0xed, 0xcb, 0x61, 0x79,
	0x46, 0x7a, 0x5a, 0xc1, 0x2d, 0xf6, 0xb4, 0x82, 0x08, 0x0b, 0x09, 0xf0, 0x70, 0x8c, 0x4d, 0x2b,
	0xb8, 0xc4, 0x52, 0x9f, 0xa5, 0x65, 0x16, 0xb4, 0x27, 0x12, 0xfc, 0x5b, 0xce, 0x9e, 0x49, 0x10,
	0xe8, 0xeb, 0x19, 0x4e, 0x95, 0x5a, 0x39, 0x7b, 0x2e, 0xc1, 0x1d, 0xac, 0x2a, 0x9a, 0xee, 0x99,
	0x15, 0xce, 0x76, 0x79, 0x21, 0x24, 0x14, 0xfc, 0x68, 0x79, 0xa1, 0x55, 0x98, 0x1a, 0x18, 0x4c,
	0x9e, 0x8d, 0x39, 0x92, 0x74, 0x4e, 0xc6, 0x3b, 0xa0, 0x2a, 0x7c, 0x75, 0xe4, 0x2a, 0xa3, 0xdc,
	0x0a, 0xd4, 0xb9, 0xed, 0x79, 0x34, 0xb4, 0x50, 0x46, 0x56, 0x97, 0x72, 0xae, 0x5b, 0xe2, 0xc2,
	0x4c, 0xf9, 0x44, 0x67, 0xff, 0xd9, 0xf3, 0x89, 0x9e, 0xe1, 0x1c, 0x39, 0x15, 0x97, 0xbb, 0x28,
	0xd3, 0x6c, 0x28, 0xd4, 0xf6, 0x3e, 0xfc, 0x57, 0xaa, 0xf4, 0x2e, 0x7d, 0x1f, 0xbe, 0x9e, 0xce,
	0x0a, 0x0a, 0x2c, 0x69, 0xaf, 0x27, 0xa6, 0x45, 0xcf, 0x43, 0xa4, 0x1b, 0x36, 0xe3, 0x1e, 0x98,
	0xf9, 0x13, 0xd1, 0x4e, 0xed, 0xc6, 0x11, 0x30, 0x3a, 0x89, 0xab, 0x13, 0xd1, 0x8b, 0xb7, 0x3d,
	0x33, 0xfa, 0xb8, 0xac, 0xf9, 0x0b, 0xe9, 0x8b, 0xf2, 0x62, 0x67, 0x7e, 0xc6, 0x42, 0x83, 0x8c,
	0x53, 0xb1, 0x79, 0x16, 0x15, 0x98, 0x4d, 0xd4, 0xb9, 0xd0, 0x92, 0x9c, 0x9b, 0x39, 0x34, 0x37,
	0x18, 0xa8, 0xdb, 0x09, 0xcb, 0xc0, 0xae, 0x84, 0xe0, 0xcf, 0x87, 0x43, 0x4c, 0x39, 0x3e, 0x89,
	0xa5, 0x89, 0xd1, 0x56, 0x36, 0x69, 0x20, 0xc3, 0x0f, 0x76, 0x82, 0x8e, 0x2f, 0xd9, 0x7f, 0x4a,
	0x1b, 0x3e, 0xc9, 0xc6, 0x23, 0x4c, 0xd7, 0xfb, 0x3a, 0x7a, 0xe5, 0x27, 0xb9, 0xf4, 0x04, 0x8f,
	0xab, 0xee, 0xb8, 0xcf, 0x8e, 0x4c, 0x8f, 0xa7, 0x38, 0x55, 0x3a, 0x6e, 0xcb, 0xf4, 0xd8, 0xf9,
	0x43, 0x67, 0x7a, 0x04, 0x68, 0x04, 0x0c, 0x0c, 0x8c, 0x70, 0xf2, 0xf8, 0x15, 0xbd, 0xeb, 0x1c,
	0x28, 0xd8, 0xd8, 0x74, 0x8e, 0x3a, 0xe7, 0x96, 0xce, 0x71, 0xcd, 0x1d, 0xd7, 0x9c, 0x96, 0xd7,
	0xb1, 0x87, 0x53, 0xa5, 0x0e, 0x47, 0x5e, 0xc7, 0xbf, 0xfe, 0x41, 0xd2, 0x3a, 0xd2, 0xc5, 0x4e,
	0x1c, 0x3a, 0x66, 0x5b, 0xa6, 0x2d, 0x5f, 0x63, 0x89, 0x15, 0xa3, 0xeb, 0x11, 0x8b, 0xf9, 0x37,
	0xcb, 0xc4, 0x25, 0xce, 0x6c, 0x8d, 0x6c, 0x7a, 0x46, 0x1a, 0xa1, 0xeb, 0x3f, 0xbb, 0x65, 0x67,
	0xbc, 0xf1, 0x20, 0x66, 0x67, 0xbc, 0xed, 0x59, 0x16, 0x7a, 0x56, 0x9e, 0xe7, 0xe8, 0x5c, 0x7e,
	0xc4, 0xa5, 0x1f, 0x5b, 0x22, 0xc7, 0x52, 0x5b, 0x22, 0x47, 0x6c, 0x16, 0xbb, 0x53, 0x8e, 0xc6,
	0xdb, 0x9e, 0x99, 0x2a, 0x97, 0x93, 0xc7, 0xcd, 0x9f, 0x47, 0xb3, 0x35, 0xbe, 0x84, 0x66, 0x04,
	0x70, 0x08, 0xc4, 0x47, 0x71, 0x27, 0x98, 0xad, 0x86, 0x12, 0xf1, 0x11, 0xe8, 0xc3, 0xf8, 0x61,
	0x65, 0x79, 0x84, 0x6f, 0xfc, 0x51, 0x97, 0x24, 0x8f, 0x8f, 0x4d, 0x2b, 0xc9, 0xe3, 0xe6, 0xfb,
	0x93, 0xe4, 0xf1, 0xb6, 0x67, 0xc6, 0x19, 0x2e, 0x2b, 0x8f, 0x4b, 0x4f, 0xf6, 0xf8, 0x77, 0x99,
	0x92, 0x3d, 0x16, 0x4c, 0x3f, 0xd9, 0xe3, 0xef, 0x7e, 0xf8, 0x64, 0x8f, 0x74, 0x41, 0xee, 0x49,
	0x1f, 0xff, 0x21, 0x73, 0xd2, 0xc7, 0xc7, 0xef, 0x26, 0xe9, 0x23, 0xb8, 0x2a, 0x65, 0xcc, 0xfa,
	0xe8, 0xbb, 0xcf, 0x59, 0x1f, 0xdd, 0x13, 0x74, 0x4e, 0x3b, 0xf1, 0xe3, 0xe2, 0x1f, 0x45, 0xe2,
	0xc7, 0x5d, 0x1c, 0x9a, 0x07, 0x9a, 0x32, 0x59, 0xc1, 0xcf, 0x46, 0xea, 0xea, 0x70, 0x32, 0xc5,
	0x3c, 0xcf, 0x2f, 0x55, 0x69, 0xab, 0xe0, 0xfc, 0x26, 0x7a, 0x80, 0x99, 0x9b, 0xd8, 0xdb, 0x99,
	0xfa, 0xa2, 0x15, 0xee, 0x29, 0xd1, 0x3e, 0x32, 0x3a, 0x3b, 0x90, 0xf8, 0x53, 0x67, 0xbe, 0x02,
	0xfc, 0xa3, 0xef, 0x6e, 0xd5, 0xf6, 0x7c, 0x97, 0x88, 0xee, 0xd7, 0xfb, 0xdb, 0xf5, 0xde, 0x36,
	0xd9, 0xd9, 0x29, 0x7f, 0x8c, 0x73, 0x7b, 0x11, 0xf1, 0x84, 0x15, 0xff, 0xc4, 0xe5, 0x45, 0x44,
	0xe5, 0x14, 0x53, 0xd0, 0x8f, 0x5c, 0xa5, 0xfa, 0x26, 0xad, 0xe3, 0xb0, 0xf9, 0x4c, 0xe2, 0xce,
	0x33, 0x73, 0x79, 0x47, 0xf1, 0x4b, 0x7b, 0x96, 0xc8, 0x27, 0xad, 0x44, 0x66, 0xb6, 0x2c, 0x91,
	0x4f, 0xa7, 0x67, 0x89, 0x4c, 0x4f, 0x11, 0xf9, 0x4f, 0x3d, 0x11, 0x64, 0x71, 0x7b, 0x96, 0x2a,
	0xb5, 0x66, 0xa1, 0x5d, 0x59, 0x42, 0x9a, 0xa8, 0x2e, 0x6e, 0x67, 0xc9, 0x7c, 0x6a, 0xe4, 0x1a,
	0x81, 0x6a, 0x4c, 0x96, 0x09, 0x5e, 0xc3, 0x7e, 0x2c, 0xda, 0xd0, 0x51, 0xad, 0xdf, 0xa0, 0xd8,
	0x2c, 0x95, 0xbe, 0xd5, 0xb4, 0x0b, 0x14, 0x6d, 0x2c, 0x1f, 0x97, 0x1a, 0xb9, 0x06, 0xf8, 0x0e,
	0x34, 0x6e, 0x7a, 0xd7, 0x39, 0xad, 0xfb, 0x8b, 0x9b, 0x9c, 0x25, 0xaf, 0xdf, 0xe4, 0x58, 0x91,
	0xfb, 0x26, 0x47, 0x05, 0xe1, 0x9b, 0x1c, 0x11, 0x5f, 0x6f, 0x72, 0x96, 0x98, 0x78, 0x93, 0x63,
	0x84, 0xbb, 0x9b, 0x1c, 0x2b, 0x75, 0xdd, 0xe4, 0x18, 0xb9, 0xe8, 0x26, 0xc7, 0x0a, 0x35, 0xd6,
	0x18, 0xf0, 0xcd, 0xe4, 0x54, 0x8b, 0xfe, 0x5d, 0x36, 0x5a, 0xe0, 0xd8, 0x84, 0x70, 0x03, 0xbf,
	0x12, 0xe5, 0x54, 0x07, 0x7d, 0xa0, 0x4e, 0x9f, 0x43, 0xa2, 0x82, 0x19, 0x05, 0xe2, 0xbc, 0xd4,
	0xf8, 0x21, 0xed, 0xf8, 0x49, 0xc2, 0x87, 0x9d, 0x6e, 0x96, 0x71, 0xb1, 0xc1, 0x2b, 0x9b, 0xda,
	0x4e, 0x26, 0xe0, 0x27, 0xd5, 0x76, 0xf2, 0x6c, 0x2b, 0x22, 0x18, 0x50, 0x65, 0xe6, 0x1a, 0x43,
	0xda, 0x0f, 0x37, 0xd6, 0x45, 0xc8, 0x3b, 0x58, 0x48, 0x9d, 0x0e, 0x45, 0xe2, 0x6c, 0x68, 0x99,
	0x1c, 0x3d, 0xa8, 0x9f, 0xec, 0x97, 0x49, 0x29, 0x5f, 0x81, 0x72, 0x7c, 0x5e, 0x92, 0xf5, 0x23,
	0x5f, 0x7c, 0x2c, 0x13, 0xbd, 0x02, 0x6d, 0xbc, 0x51, 0x53, 0x2c, 0x48, 0x9d, 0xf9, 0x8a, 0x04,
	0x48, 0xb0, 0xe7, 0xa5, 0x91, 0xf1, 0x77, 0xfe, 0xaf, 0x51, 0x4e, 0xc4, 0x1b, 0xae, 0x25, 0x31,
	0xa1, 0x17, 0xba, 0x19, 0x7d, 0xe0, 0xbd, 0x01, 0xae, 0x26, 0xbe, 0x6d, 0x0b, 0x0d, 0x8e, 0x55,
	0x95, 0x93, 0xf1, 0x36, 0x1a, 0x78, 0x12, 0x12, 0x44, 0x82, 0xa6, 0x8e, 0x06, 0x41, 0xa2, 0x26,
	0x0e, 0xcb, 0x40, 0x7b, 0xb2, 0x5f, 0xc6, 0xfd, 0x15, 0xaf, 0x57, 0xa5, 0x52, 0xe4, 0x11, 0xd2,
	0x4f, 0x42, 0x5c, 0xc4, 0xc2, 0x63, 0xb2, 0xaf, 0x05, 0xf6, 0xe3, 0x26, 0x87, 0xf7, 0xfd, 0x26,
	0x67, 0xee, 0xe2, 0x4d, 0x0e, 0xaf, 0xa3, 0xe8, 0x6c, 0x1e, 0x9a, 0x5f, 0xca, 0xc6, 0x8f, 0x97,
	0x95, 0xdf, 0xf2, 0xef, 0xa5, 0xab, 0x9f, 0x5e, 0xc6, 0x8a, 0x0a, 0x4b, 0xfd, 0x94, 0x77, 0x2f,
	0xa1, 0xd8, 0x2e, 0x67, 0xa1, 0x3c, 0x7f, 0x78, 0x5d, 0x30, 0x54, 0xad, 0xf8, 0xf0, 0xb9, 0xe7,
	0x79, 0x0e, 0x65, 0xa9, 0x52, 0x4f, 0x96, 0x40, 0x8b, 0xc5, 0xdd, 0x59, 0xe6, 0x9b, 0x97, 0x98,
	0xd6, 0x76, 0x15, 0x7c, 0x77, 0xd3, 0x02, 0x23, 0xb0, 0x1f, 0xf1, 0x73, 0xcf, 0x26, 0xed, 0x3a,
	0xf9, 0x69, 0x3f, 0x08, 0xea, 0x55, 0x0f, 0xec, 0x2c, 0xa5, 0x58, 0xd4, 0xe3, 0x97, 0x38, 0x6d,
	0x5f, 0x3e, 0x4d, 0x52, 0x2a, 0x33, 0x1d, 0x83, 0xe3, 0x79, 0xea, 0xc6, 0xee, 0x89, 0xde, 0x71,
	0x03, 0x07, 0x47, 0x5b, 0x93, 0x3d, 0x7b, 0x20, 0x8f, 0x46, 0x22, 0xde, 0x97, 0x1a, 0x3f, 0xae,
	0xb5, 0x9e, 0x9b, 0xe8, 0x1d, 0xd7, 0x7a, 0xba, 0xb4, 0xee, 0x4b, 0xc4, 0x9c, 0x88, 0x09, 0xb6,
	0x31, 0x5d, 0x06, 0x62, 0x12, 0xd1, 0x4e, 0x43, 0x96, 0xf9, 0x6a, 0xbf, 0xd6, 0x36, 0x6a, 0xa0,
	0xf0, 0x68, 0x2b, 0x84, 0x1d, 0x4d, 0x35, 0x75, 0x18, 0x4b, 0x3d, 0xdb, 0x92, 0x88, 0x75, 0xc1,
	0x88, 0xa0, 0x67, 0xbd, 0xd5, 0xb4, 0x4b, 0xa6, 0xfb, 0xc1, 0xdf, 0xca, 0xb2, 0x52, 0xd7, 0x94,
	0xd4, 0x29, 0xde, 0x00, 0x81, 0xfa, 0x78, 0x96, 0x2a, 0x45, 0xb3, 0x04, 0xfb, 0x37, 0xf1, 0x7c,
	0x16, 0xbb, 0x02, 0x20, 0x0f, 0x40, 0x56, 0x60, 0x57, 0x61, 0x11, 0x40, 0x4e, 0x30, 0xa3, 0xdd,
	0x44, 0xdc, 0xcb, 0x98, 0x1d, 0x02, 0xa8, 0x24, 0x51, 0x5b, 0xb1, 0xa1, 0x9a, 0x90, 0x1f, 0xcc,
	0x62, 0x03, 0xfd, 0xd2, 0xce, 0xb6, 0x80, 0x0d, 0x8f, 0xb8, 0x82, 0x9b, 0x66, 0x54, 0xf3, 0x80,
	0xf4, 0x6f, 0x07, 0xf5, 0x96, 0x6e, 0x63, 0x23, 0x70, 0x75, 0x1a, 0x55, 0xdc, 0xf1, 0x02, 0x52,
	0xbb, 0x7e, 0x15, 0x76, 0x07, 0xe6, 0x45, 0x07, 0x4f, 0x8d, 0x9c, 0x23, 0xea, 0x77, 0x60, 0x76,
	0xce, 0x7c, 0xa5, 0xb5, 0x5e, 0x4d, 0x8c, 0x1e, 0xa6, 0xaa, 0x3c, 0x4b, 0xfe, 0x61, 0x5e, 0x2c,
	0x26, 0xa2, 0xb1, 0x48, 0xa8, 0x51, 0xc1, 0x02, 0xfd, 0x65, 0x4f, 0x09, 0x89, 0xfc, 0x0c, 0xc9,
	0x3a, 0xc8, 0x86, 0x60, 0x05, 0xa2, 0xb1, 0xc1, 0xf6, 0x7d, 0xe3, 0x13, 0x44, 0xfe, 0x86, 0xab,
	0x80, 0xe5, 0xef, 0x1c, 0xbc, 0xcd, 0xa3, 0xf0, 0xf8, 0xd6, 0xf1, 0x51, 0x3c, 0xcb, 0xa5, 0x3d,
	0xa7, 0xb7, 0xcd, 0x01, 0xf6, 0x1c, 0x8b, 0xe9, 0x0c, 0x50, 0x9a, 0x31, 0x2f, 0xf5, 0xf6, 0x26,
	0xd0, 0x7e, 0xb0, 0x12, 0x20, 0x6c, 0x44, 0xea, 0xc2, 0x79, 0xad, 0xfb, 0x40, 0x62, 0x74, 0x34,
	0x31, 0xd6, 0xeb, 0x88, 0x77, 0x6e, 0x8c, 0x31, 0x72, 0x0e, 0xd8, 0x21, 0x93, 0x6b, 0xea, 0x32,
	0xe1, 0x44, 0xeb, 0xc1, 0x49, 0xff, 0x3a, 0xbb, 0xb5, 0x9e, 0x0e, 0x80, 0x51, 0x63, 0x95, 0x8e,
	0x69, 0x9b, 0xda, 0xf3, 0xb4, 0x1b, 0x2f, 0xf2, 0x30, 0x4f, 0x96, 0x8a, 0xb1, 0x14, 0xa7, 0xe8,
	0x52, 0x36, 0x5a, 0xe0, 0x68, 0xf4, 0xe0, 0x63, 0xfd, 0xf7, 0xa6, 0x87, 0xf5, 0x21, 0x95, 0x2e,
	0xc6, 0xfa, 0x4b, 0xa1, 0x1f, 0xed, 0xda, 0x37, 0xe4, 0x42, 0xba, 0xe2, 0xfe, 0x6d, 0x68, 0x86,
	0x81, 0x84, 0xcd, 0xc0, 0xca, 0xee, 0xc8, 0x1f, 0xf3, 0x5a, 0x50, 0x4f, 0x14, 0xd8, 0xdd, 0x65,
	0x8d, 0xd7, 0x26, 0x25, 0xb0, 0x42, 0x10, 0xcb, 0xd0, 0xa4, 0xf8, 0x2d, 0x55, 0x7a, 0x1d, 0xbd,
	0x2a, 0xa4, 0x6f, 0xba, 0x81, 0xe0, 0xed, 0x9d, 0xb9, 0x23, 0xf8, 0xa2, 0x7f, 0xf5, 0x24, 0x9a,
	0x0f, 0x1c, 0x04, 0x83, 0xd9, 0xab, 0xd2, 0x31, 0xfb, 0xcf, 0xef, 0xda, 0xb0, 0x90, 0x13, 0xca,
	0x2a, 0xf0, 0xb1, 0x78, 0x7d, 0xbd, 0x9b, 0xfd, 0xe0, 0x99, 0x3b, 0xd9, 0x0f, 0xa0, 0x9b, 0x3f,
	0xbf, 0xf5, 0x60, 0xad, 0xc3, 0x7a, 0xf0, 0x93, 0x3b, 0x58, 0x0f, 0xfe, 0xa4, 0x36, 0x82, 0xd7,
	0xd3, 0x6d, 0x04, 0x3f, 0xc9, 0x6c, 0x23, 0x20, 0x27, 0x61, 0x99, 0x04, 0x4a, 0x5d, 0x4c, 0x02,
	0x4f, 0xdf, 0xc1, 0x24, 0x00, 0x9d, 0xb0, 0x16, 0x80, 0x0f, 0xdd, 0x2c, 0x00, 0xaf, 0xdc, 0xb3,
	0x05, 0xc0, 0xae, 0xe9, 0xff, 0xa5, 0x8b, 0xa6, 0xff, 0xe5, 0x7b, 0xd5, 0xf4, 0xdb, 0x14, 0xfb,
	0xb5, 0xe9, 0x8a, 0xfd, 0x7c, 0x71, 0xf1, 0xca, 0x9a, 0x60, 0xb0, 0xa6, 0x4e, 0x59, 0xd9, 0x10,
	0x0a, 0x46, 0x82, 0xdb, 0x1a, 0xb7, 0xaf, 0xf4, 0x04, 0x83, 0x75, 0xef, 0x19, 0xbc, 0xfd, 0xf7,
	0x52, 0xfa, 0x7f, 0xed, 0xaa, 0xf4, 0x6f, 0x7f, 0x70, 0x94, 0xfe, 0x3f, 0x1e, 0xdd, 0xbe, 0x13,
	0x8b, 0xfd, 0x19, 0x74, 0xfb, 0x25, 0x96, 0x53, 0xda, 0x5c, 0x53, 0x81, 0xfa, 0xa4, 0xe5, 0x94,
	0xc6, 0xc3, 0x9b, 0xbd, 0x44, 0x2c, 0xa6, 0x1d, 0x38, 0x6a, 0xb7, 0x8f, 0x2e, 0xb4, 0x1c, 0xd4,
	0xfe, 0x95, 0xe5, 0x77, 0x02, 0x9e, 0x6d, 0xc3, 0x9c, 0x2a, 0x6d, 0xa7, 0x26, 0xf7, 0x5f, 0xb1,
	0xc9, 0xfe, 0xef, 0x7f, 0x08, 0x4f, 0x4f, 0xe8, 0xad, 0xef, 0x19, 0xc2, 0xf3, 0x9f, 0x51, 0x0f,
	0x80, 0x69, 0x99, 0x0a, 0xd2, 0x8e, 0xed, 0x9f, 0x80, 0xa9, 0x20, 0x6d, 0xcd, 0x0f, 0x9d, 0xa9,
	0x60, 0x2b, 0xca, 0x03, 0x3d, 0x17, 0xb5, 0x15, 0x60, 0xc4, 0x4f, 0x0b, 0x45, 0xc1, 0x69, 0x2c,
	0x30, 0x08, 0x23, 0xf6, 0xe9, 0xd7, 0xae, 0x7f, 0x6b, 0x48, 0x42, 0x8c, 0xed, 0x80, 0xb6, 0xe2,
	0xaf, 0xb8, 0x19, 0x0f, 0x0e, 0x3e, 0x88, 0xc6, 0x03, 0x9b, 0x45, 0xa0, 0xd8, 0x61, 0x11, 0x28,
	0xba, 0xb3, 0x45, 0x80, 0xda, 0x01, 0x7a, 0x5c, 0x14, 0xfa, 0x8f, 0x4e, 0x4b, 0xa1, 0xbf, 0xee,
	0xfe, 0x28, 0xf4, 0xd3, 0x15, 0xf9, 0xff, 0x36, 0x93, 0x22, 0xff, 0xb1, 0xe9, 0x2b, 0xf2, 0x43,
	0x3f, 0xbc, 0x22, 0xff, 0xee, 0x15, 0xf8, 0x05, 0x3f, 0x5e, 0x05, 0xfe, 0xe3, 0x3f, 0x0a, 0x05,
	0xbe, 0x43, 0x3f, 0xbd, 0xf8, 0x2f, 0xfa, 0xe9, 0xef, 0xa1, 0x9f, 0xfe, 0x0f, 0x9c, 0x2a, 0xfd,
	0x4f, 0x1c, 0xfa, 0x7b, 0x4e, 0x48, 0x93, 0xf8, 0xc4, 0x2b, 0x9c, 0xab, 0x86, 0x19, 0xce, 0x2e,
	0x35, 0x72, 0x0e, 0xd4, 0xcb, 0x89, 0xd1, 0x56, 0xf6, 0x7d, 0x02, 0x34, 0xd1, 0xd4, 0x8e, 0xc4,
	0xf8, 0xb0, 0x3e, 0xf4, 0x85, 0xbb, 0x76, 0x02, 0xd2, 0xab, 0x62, 0xa7, 0x49, 0x88, 0x10, 0xa6,
	0x9f, 0xec, 0x07, 0xd8, 0x26, 0x99, 0x51, 0x4d, 0x29, 0x97, 0xa8, 0x7e, 0xcc, 0xb4, 0x41, 0xc6,
	0xe8, 0xa7, 0xaf, 0xeb, 0x9d, 0xc3, 0x24, 0xb2, 0x3b, 0x04, 0x5f, 0x32, 0x9d, 0x45, 0xd3, 0xd5,
	0xdd, 0x45, 0xff, 0x2e, 0x0b, 0x2d, 0x70, 0xac, 0xeb, 0xc1, 0x57, 0x3e, 0x54, 0x4e, 0x4f, 0xf9,
	0x80, 0x5f, 0xd3, 0x80, 0xf2, 0x61, 0x09, 0xf4, 0x43, 0xf6, 0xbe, 0xa7, 0x2b, 0x5d, 0xf3, 0x50,
	0x5c, 0xa2, 0x4a, 0x6f, 0xa1, 0x37, 0x84, 0xf4, 0xdd, 0x10, 0x0b, 0x5c, 0x4e, 0x39, 0x83, 0x62,
	0xe0, 0x04, 0x87, 0xe6, 0xac, 0x57, 0x22, 0x99, 0xf4, 0xbd, 0x59, 0xf7, 0x4d, 0xdf, 0x5b, 0xfc,
	0xa2, 0x2a, 0xad, 0x41, 0xab, 0x04, 0xfb, 0x68, 0x22, 0x0f, 0xea, 0xed, 0x8c, 0xba, 0xa6, 0x7f,
	0x9e, 0x85, 0xe6, 0xb2, 0x2d, 0x1e, 0xfc, 0xb3, 0xde, 0x34, 0xbd, 0xb3, 0x86, 0xa4, 0x66, 0xf8,
	0xac, 0x17, 0xa5, 0xba, 0xae, 0x69, 0xdd, 0x87, 0x5d, 0xf5, 0x4b, 0xc5, 0x92, 0x2a, 0xbd, 0x81,
	0x5e, 0x13, 0x1c, 0x9b, 0xe0, 0xd8, 0xb7, 0xa9, 0xd5, 0xfa, 0x2a, 0x87, 0xf7, 0x10, 0x62, 0x56,
	0xfc, 0xb6, 0x51, 0x09, 0x47, 0xf8, 0xd7, 0xd1, 0x4c, 0x7f, 0x20, 0xa0, 0x84, 0xca, 0x2b, 0x88,
	0xe2, 0xe7, 0xa7, 0xaa, 0xf4, 0xb8, 0x60, 0x96, 0x89, 0x73, 0x49, 0x10, 0x10, 0x83, 0xd1, 0x3e,
	0x50, 0x5e, 0x81, 0xd5, 0x02, 0x9f, 0x73, 0xb2, 0xf9, 0x9d, 0x9d, 0x14, 0xd3, 0xab, 0x58, 0x08,
	0xd9, 0xca, 0xcc, 0x66, 0xc4, 0x72, 0x01, 0x34, 0x86, 0x1c, 0xad, 0xd9, 0x45, 0xd1, 0xbf, 0xcf,
	0x42, 0xf3, 0x68, 0xf3, 0x70, 0x43, 0x30, 0x10, 0x56, 0x1e, 0xf4, 0x93, 0x7d, 0x87, 0x9e, 0xac,
	0xab, 0xa6, 0xcf, 0x58, 0x8a, 0xfb, 0xb1, 0xc2, 0x16, 0xd8, 0x8e, 0x95, 0xe4, 0x20, 0x70, 0x6e,
	0x81, 0xf8, 0x94, 0x6d, 0xd3, 0xf0, 0x2c, 0x2c, 0x6e, 0x1d, 0x5b, 0x0d, 0x33, 0x1e, 0xf3, 0xc0,
	0x6c, 0x34, 0x77, 0xa3, 0x3f, 0xcc, 0xde, 0xe5, 0x87, 0x5b, 0x17, 0xf7, 0x86, 0x43, 0x17, 0xf7,
	0xec, 0x1d, 0x3d, 0x79, 0x61, 0xe6, 0x7f, 0x51, 0xc9, 0x3d, 0x98, 0x2a, 0xb9, 0xfb, 0xee, 0x6b,
	0xfb, 0x17, 0xb5, 0xdb, 0x7d, 0x52, 0xbb, 0x31, 0xca, 0xa8, 0x39, 0x0f, 0xb7, 0x32, 0xea, 0x55,
	0x94, 0x1b, 0xdc, 0xbe, 0x3d, 0xac, 0x44, 0xb0, 0x6a, 0x2e, 0x07, 0xe8, 0x1a, 0x29, 0x12, 0xe7,
	0x91, 0x84, 0x42, 0xcd, 0xdd, 0xc9, 0x0b, 0xa3, 0x13, 0x7b, 0xbb, 0x6f, 0x7b, 0x72, 0xc4, 0xac,
	0x65, 0xff, 0x4c, 0x26, 0xdf, 0xf9, 0xd7, 0xd0, 0x8c, 0x3a, 0x7f, 0xbd, 0x3f, 0x82, 0x35, 0x72,
	0x39, 0x06, 0xbe, 0x59, 0x22, 0x40, 0x09, 0xa5, 0xb7, 0xc7, 0x7a, 0xb4, 0xb6, 0xab, 0x7a, 0xef,
	0x25, 0xdc, 0x7a, 0x86, 0x98, 0x5d, 0x90, 0x9a, 0x29, 0x43, 0x95, 0xe2, 0x01, 0x4e, 0x95, 0x4e,
	0x70, 0xa8, 0x8f, 0x13, 0x1c, 0x68, 0x58, 0xdc, 0xcb, 0x69, 0x6d, 0x5f, 0x1a, 0x02, 0xde, 0x89,
	0x81, 0xc4, 0xe8, 0x55, 0x48, 0x66, 0x64, 0xfa, 0x00, 0x1c, 0x49, 0x0d, 0x0c, 0x52, 0x16, 0x1c,
	0x06, 0x81, 0x6a, 0x89, 0x68, 0x4c, 0x0a, 0xf8, 0xb4, 0xd6, 0x6f, 0x93, 0xdf, 0x8e, 0x5a, 0x46,
	0xa1, 0x53, 0x3d, 0x13, 0x03, 0xd7, 0xd9, 0x6a, 0x90, 0x0d, 0x82, 0xe4, 0xae, 0x6c, 0x3b, 0x06,
	0x31, 0xdb, 0x88, 0x95, 0xf9, 0xd0, 0xa0, 0x3e, 0x74, 0x96, 0x1d, 0xb4, 0xe8, 0x5f, 0x66, 0xa1,
	0x79, 0xb6, 0xc9, 0x3d, 0xf8, 0xfc, 0x94, 0x9d, 0xea, 0x66, 0xe4, 0xa7, 0xf0, 0xc3, 0x60, 0x20,
	0xbc, 0x3c, 0xcb, 0x46, 0x11, 0x3d, 0x0c, 0x50, 0xdd, 0xb7, 0x55, 0xa9, 0x0c, 0x95, 0x08, 0xce,
	0x2d, 0x10, 0x0b, 0x58, 0x6e, 0x8a, 0x9c, 0xc9, 0xd4, 0x3c, 0x55, 0x2c, 0x17, 0x3d, 0x6e, 0xf4,
	0x42, 0xb2, 0x5f, 0x5b, 0x87, 0x8d, 0xd9, 0xab, 0x37, 0xd3, 0x2d, 0x6b, 0x4f, 0x65, 0xe6, 0xa1,
	0xcd, 0xb7, 0x33, 0x8c, 0x11, 0xcd, 0x22, 0x7d, 0x59, 0xdf, 0x8f, 0xf4, 0x65, 0xdf, 0x3f, 0xd2,
	0xb7, 0xd1, 0x9e, 0x2d, 0x30, 0xc7, 0x7c, 0xed, 0x57, 0x68, 0xcf, 0x16, 0xb8, 0x00, 0x9e, 0xb5,
	0x6d, 0xb6, 0x8a, 0x28, 0x47, 0xc1, 0xa6, 0x0e, 0x5c, 0xe7, 0x08, 0xc5, 0x3d, 0xc3, 0x7a, 0x23,
	0x67, 0x0f, 0xc5, 0x3d, 0x0f, 0xa2, 0x5a, 0x5b, 0xe1, 0xa9, 0xec, 0xd1, 0xb2, 0x9b, 0x2d, 0xd4,
	0x05, 0xe4, 0xd8, 0x6f, 0xc3, 0x5c, 0xc4, 0xab, 0xee, 0x4f, 0x82, 0xb9, 0x1e, 0x04, 0xa4, 0xf3,
	0x0d, 0xa7, 0x4a, 0xc3, 0x1c, 0xfa, 0x8a, 0x13, 0x32, 0x83, 0x23, 0x56, 0xa5, 0xbb, 0xe3, 0x1f,
	0xc2, 0xe7, 0xff, 0xc0, 0x58, 0xe8, 0x3f, 0x67, 0xa1, 0xc5, 0x6e, 0xb3, 0x7d, 0x38, 0xc4, 0x80,
	0xf5, 0xd3, 0x10, 0x03, 0xd2, 0xb1, 0x11, 0xbb, 0xd3, 0x04, 0x1b, 0x91, 0x8c, 0xdc, 0x53, 0x6c,
	0x85, 0xb8, 0xd4, 0x26, 0xe6, 0xb1, 0x87, 0x35, 0x35, 0x7a, 0xea, 0xce, 0x42, 0x8f, 0x59, 0x12,
	0x23, 0x13, 0x5c, 0x46, 0xf9, 0x2d, 0xff, 0x25, 0x87, 0x66, 0x85, 0x95, 0xd0, 0x0e, 0x25, 0xb4,
	0xc1, 0x54, 0x38, 0xe1, 0x00, 0x97, 0x7f, 0x23, 0x58, 0xc5, 0xe2, 0x6f, 0x13, 0xd1, 0x7d, 0xfa,
	0x3e, 0x62, 0x52, 0xc1, 0xc1, 0xeb, 0x5a, 0x12, 0xa3, 0x57, 0x93, 0x7d, 0x2d, 0xb5, 0xca, 0x4e,
	0xc8, 0x91, 0x96, 0x88, 0x75, 0xe1, 0x18, 0xa6, 0xde, 0x1a, 0x25, 0x10, 0x01, 0x9f, 0x22, 0x8a,
	0xbf, 0x68, 0x0d, 0xcc, 0x11, 0xae, 0xf0, 0x85, 0xfc, 0x3b, 0x94, 0x90, 0xa6, 0x76, 0xe0, 0x06,
	0xf0, 0x0b, 0x5a, 0xe8, 0xfd, 0xed, 0xe5, 0x15, 0x30, 0x08, 0x83, 0x07, 0xe9, 0x34, 0x4c, 0x84,
	0x9d, 0x69, 0x2d, 0xe2, 0x13, 0xec, 0xfe, 0x58, 0x9f, 0xa8, 0x22, 0x81, 0xf6, 0x54, 0x34, 0x99,
	0x85, 0x0a, 0xdc, 0x7b, 0x79, 0xf0, 0x49, 0xe0, 0x47, 0x36, 0x95, 0xc2, 0x53, 0x19, 0x48, 0x20,
	0x93, 0x14, 0x9b, 0x55, 0x24, 0x11, 0x62, 0x41, 0xc3, 0x5b, 0x8e, 0x34, 0x27, 0xae, 0x9f, 0xb7,
	0xc9, 0xa2, 0x5b, 0x55, 0x49, 0x46, 0x15, 0x42, 0xc6, 0xed, 0xc9, 0xb8, 0xcb, 0x53, 0xc3, 0xe0,
	0x68, 0x2e, 0x5a, 0x6c, 0xd3, 0x4d, 0x3d, 0xb4, 0x60, 0x68, 0xa7, 0xe7, 0x59, 0xf7, 0x40, 0xcf,
	0xb7, 0xa2, 0xd9, 0xd5, 0x75, 0x7e, 0x25, 0x10, 0xd9, 0x14, 0xf4, 0x35, 0xd6, 0x99, 0x81, 0x0f,
	0xd7, 0xa8, 0xd2, 0x33, 0x82, 0xed, 0x83, 0xb8, 0x08, 0x16, 0x0c, 0x81, 0x1f, 0xb5, 0x13, 0x47,
	0xb4, 0x9e, 0x4e, 0x6d, 0xe8, 0x88, 0xd5, 0xa7, 0xad, 0x36, 0xff, 0x1e, 0x9a, 0x03, 0x93, 0x94,
	0x7c, 0xbe, 0x90, 0x12, 0x36, 0x1f, 0x6f, 0xaf, 0xc6, 0x51, 0x79, 0x6c, 0x5f, 0x28, 0xd3, 0x00,
	0xf6, 0x40, 0xfc, 0xfc, 0xfb, 0xb6, 0x67, 0x66, 0x68, 0xc6, 0xfc, 0xac, 0x82, 0xa6, 0xf9, 0xb2,
	0xbd, 0x32, 0xbf, 0x1e, 0xa1, 0x6a, 0x6f, 0x89, 0x12, 0x8a, 0x94, 0x1a, 0x60, 0x37, 0xc3, 0x7c,
	0x02, 0xfc, 0x84, 0xc0, 0x14, 0x8b, 0x73, 0x09, 0x3c, 0x48, 0x60, 0x1b, 0xb8, 0xed, 0x99, 0x11,
	0xca, 0x2e, 0x68, 0x2a, 0x94, 0x99, 0x3a, 0x7c, 0x05, 0x9a, 0xd5, 0x18, 0x56, 0x42, 0x55, 0xc1,
	0x5a, 0x25, 0x40, 0xe8, 0xb3, 0xa8, 0x4a, 0xcf, 0x09, 0x56, 0xa9, 0xb8, 0x38, 0x35, 0x3c, 0x3e,
	0x71, 0x64, 0x98, 0xca, 0x32, 0x11, 0xa3, 0xd4, 0x3c, 0x0b, 0xdc, 0xe5, 0x7c, 0xd9, 0xaa, 0xce,
	0x6f, 0x46, 0x73, 0xc8, 0xb6, 0x96, 0x06, 0xeb, 0xbd, 0xfe, 0x00, 0x11, 0xa2, 0x97, 0xe1, 0xb8,
	0x0f, 0xb6, 0x2f, 0x54, 0xad, 0x71, 0xea, 0x94, 0xd6, 0xd3, 0x49, 0xfb, 0xb2, 0x57, 0x2a, 0xee,
	0xe5, 0x54, 0xe9, 0x00, 0x87, 0xba, 0x38, 0x61, 0x0a, 0x60, 0x15, 0x9f, 0x60, 0x35, 0xaa, 0x2e,
	0x78, 0x86, 0x71, 0xc7, 0xb6, 0x9d, 0xd0, 0x4d, 0xce, 0xbe, 0xb3, 0x37, 0x39, 0x66, 0x77, 0x6e,
	0x72, 0xd6, 0xba, 0x6e, 0x72, 0xf6, 0x79, 0x15, 0x1d, 0xce, 0x42, 0x4b, 0x32, 0x4e, 0xe8, 0x81,
	0x47, 0x59, 0xc5, 0xbf, 0x54, 0xa5, 0xad, 0xa8, 0x52, 0x98, 0x6a, 0x09, 0x19, 0x37, 0x75, 0x6a,
	0xb4, 0xd2, 0x97, 0x85, 0x16, 0xdb, 0x1c, 0xe1, 0x1e, 0x5e, 0xea, 0x56, 0xa1, 0x4a, 0x9b, 0xd0,
	0x06, 0x61, 0x8a, 0xe5, 0x88, 0x4f, 0xb1, 0x0e, 0x7e, 0xae, 0x48, 0xdc, 0x46, 0xe5, 0xfa, 0xb3,
	0xd0, 0x92, 0x8c, 0xbd, 0x3d, 0xf8, 0x50, 0xf3, 0xb1, 0x2a, 0x7d, 0x88, 0xde, 0x17, 0xa6, 0x5a,
	0x82, 0x58, 0xc4, 0xee, 0x88, 0xf3, 0x2a, 0xde, 0x01, 0x76, 0xf6, 0xcd, 0x40, 0x05, 0x8c, 0xec,
	0x67, 0x87, 0x9c, 0xe3, 0x2e, 0x90, 0xf3, 0xd7, 0xaa, 0x14, 0x66, 0x01, 0x67, 0x3b, 0x7b, 0x10,
	0x14, 0x7c, 0x9c, 0x50, 0x83, 0x81, 0x26, 0x33, 0xc4, 0xd8, 0x00, 0x06, 0x7e, 0xb0, 0x95, 0x7f,
	0xe6, 0x6f, 0xa0, 0x9a, 0x43, 0x8b, 0x04, 0xbd, 0x9e, 0x4e, 0x82, 0x7e, 0x92, 0x99, 0x04, 0xa5,
	0x79, 0x65, 0x06, 0x10, 0xa2, 0x78, 0xc9, 0x24, 0x3f, 0x9b, 0x55, 0xa9, 0x54, 0x60, 0x8a, 0xc5,
	0x9f, 0x6b, 0xc3, 0x67, 0xf4, 0xb6, 0x6b, 0xc9, 0xaf, 0x46, 0x68, 0xee, 0x3f, 0xba, 0x9c, 0x5b,
	0x4d, 0xcd, 0xd6, 0x74, 0x6f, 0x35, 0x35, 0x33, 0x2b, 0xa1, 0x2a, 0x4a, 0xab, 0x2b, 0xfe, 0x57,
	0x28, 0xbf, 0x3a, 0x18, 0x08, 0x28, 0xd5, 0x30, 0x60, 0x8e, 0x19, 0x3f, 0x78, 0xb5, 0xc0, 0x96,
	0x8b, 0x4f, 0x4d, 0x1c, 0xbc, 0xa1, 0x77, 0x9d, 0xa3, 0xc3, 0x25, 0x8f, 0x5f, 0x49, 0x35, 0x1f,
	0x82, 0x34, 0x60, 0x13, 0x7d, 0x17, 0x26, 0x9a, 0x0f, 0x5a, 0xea, 0x68, 0xab, 0x19, 0x23, 0x70,
	0xcd, 0xf8, 0x1e, 0x02, 0x57, 0xee, 0xbd, 0x08, 0x5c, 0x84, 0x23, 0xcd, 0x08, 0x46, 0xe2, 0x73,
	0x2c, 0xb3, 0xe4, 0x7a, 0x63, 0x81, 0x83, 0x2f, 0xda, 0x95, 0x0d, 0x2a, 0x84, 0x87, 0x92, 0x25,
	0xad, 0xb6, 0x09, 0x41, 0xd3, 0x60, 0x49, 0x21, 0xaa, 0x2c, 0x66, 0x49, 0x9f, 0xba, 0xe3, 0xde,
	0x10, 0xc6, 0xd4, 0xab, 0x4a, 0x1f, 0xa3, 0x5f, 0x09, 0x99, 0x77, 0x69, 0xda, 0x9b, 0x9d, 0x11,
	0x23, 0x2c, 0x46, 0x05, 0xe5, 0x01, 0x7f, 0x64, 0x9d, 0x53, 0x29, 0x2a, 0x2b, 0xbf, 0x2d, 0x5a,
	0x82, 0x1e, 0xcf, 0xf0, 0x2d, 0xdc, 0x50, 0x74, 0x2c, 0x0b, 0x3d, 0x2a, 0xf9, 0x7c, 0xe4, 0xa3,
	0xe2, 0x63, 0xac, 0x2e, 0x1f, 0xb8, 0xab, 0x79, 0x39, 0x93, 0x51, 0x79, 0xc6, 0x5d, 0xcd, 0x3b,
	0x97, 0x55, 0xea, 0x96, 0x97, 0xba, 0x6b, 0x6a, 0x5f, 0x4b, 0x47, 0x03, 0x38, 0xe2, 0x23, 0x83,
	0x06, 0xe6, 0x6a, 0xb1, 0x5e, 0xed, 0xf2, 0x2e, 0x97, 0x38, 0xf0, 0xc5, 0x8a, 0x2a, 0x6d, 0x43,
	0xbf, 0x16, 0x32, 0x4c, 0x5c, 0x7c, 0x5a, 0xbb, 0xb4, 0x87, 0xf0, 0x4c, 0xfb, 0x4e, 0x6b, 0xad,
	0xe7, 0x1c, 0x5a, 0x66, 0x93, 0xdb, 0x71, 0x9b, 0x98, 0xcd, 0x68, 0xdb, 0x9f, 0x85, 0x1e, 0x73,
	0x1d, 0xe2, 0xc1, 0xa7, 0x40, 0xdb, 0x54, 0xe9, 0x13, 0xf4, 0x91, 0x90, 0x69, 0xfa, 0xa2, 0x30,
	0x9d, 0x2d, 0xba, 0x03, 0x15, 0xfa, 0xc7, 0x19, 0x88, 0x87, 0xb7, 0x5a, 0x9b, 0xbd, 0xf5, 0x4a,
	0xb8, 0xc1, 0x5b, 0xad, 0x18, 0x60, 0x53, 0x6c, 0x8b, 0x42, 0xf7, 0x2c, 0xd6, 0x20, 0xe0, 0x28,
	0x74, 0xbc, 0x76, 0x60, 0x4c, 0xeb, 0xe9, 0xc4, 0xc9, 0x53, 0xae, 0x38, 0x05, 0x02, 0x08, 0x4a,
	0x17, 0x76, 0x07, 0xb9, 0x2c, 0x33, 0x78, 0xd8, 0x5a, 0x77, 0x90, 0x2b, 0x64, 0x7b, 0x06, 0x7d,
	0x22, 0xbb, 0x20, 0xbf, 0xcf, 0xc4, 0xbe, 0xae, 0xb0, 0xf8, 0x7a, 0x7a, 0x9a, 0xc4, 0x0c, 0xb6,
	0x30, 0xab, 0x23, 0xc6, 0x16, 0xf6, 0x96, 0xcd, 0x16, 0x96, 0x63, 0x1e, 0xee, 0xa3, 0x36, 0x5b,
	0x58, 0x1e, 0xd8, 0x80, 0xac, 0x0e, 0xec, 0x76, 0x30, 0xd3, 0x59, 0x18, 0x1e, 0x5f, 0xac, 0x74,
	0x0f, 0xd6, 0xc0, 0xee, 0xb2, 0xcd, 0x5d, 0xf8, 0x11, 0x55, 0x9a, 0x4f, 0xdd, 0x85, 0x73, 0xf5,
	0xd3, 0x7b, 0x93, 0x43, 0x37, 0xa8, 0x97, 0xef, 0x11, 0x0e, 0xe5, 0xd5, 0x7b, 0x3f, 0x7f, 0xb7,
	0x31, 0x18, 0xf1, 0x12, 0xd1, 0x05, 0xa7, 0xf4, 0xa5, 0x85, 0x62, 0x1d, 0x4e, 0x48, 0xc2, 0x6c,
	0x20, 0xf6, 0x1f, 0xa6, 0x69, 0xa9, 0x21, 0x75, 0xd7, 0xc4, 0x99, 0x13, 0x06, 0xf5, 0xef, 0x1f,
	0x24, 0x69, 0x86, 0xfb, 0x2f, 0x69, 0x1d, 0x31, 0xfa, 0x49, 0xeb, 0xbe, 0xa8, 0xa9, 0x1d, 0x6c,
	0x0c, 0x7b, 0xc8, 0x25, 0x39, 0x71, 0xe6, 0x84, 0x41, 0x84, 0x86, 0xfb, 0x0c, 0x41, 0x10, 0xd3,
	0x21, 0x99, 0x8e, 0xfb, 0x3d, 0x9c, 0x9a, 0x8a, 0x43, 0xaa, 0x14, 0x44, 0xf5, 0x82, 0x0b, 0xf8,
	0x89, 0x05, 0x24, 0x43, 0x32, 0xb3, 0x20, 0xf3, 0xc2, 0x63, 0x18, 0xcb, 0x78, 0xef, 0x33, 0x3d,
	0x2e, 0x25, 0x1b, 0x59, 0xf4, 0x7f, 0x71, 0xe8, 0x91, 0xb4, 0xf1, 0x1e, 0x7c, 0x4c, 0x50, 0xa6,
	0x4a, 0x1e, 0xf4, 0x96, 0xe0, 0x36, 0x75, 0xd7, 0xbd, 0xca, 0xe0, 0x60, 0xa3, 0x67, 0x21, 0x9e,
	0x04, 0x28, 0xbe, 0xa7, 0xcb, 0x6e, 0x8b, 0xae, 0xf5, 0x67, 0xbd, 0xec, 0xd6, 0x6b, 0x4d, 0xd8,
	0x43, 0x1c, 0x05, 0xd2, 0x7a, 0xab, 0xc9, 0xa7, 0x3f, 0xd5, 0xb4, 0x5e, 0x2e, 0x16, 0xff, 0x5a,
	0x95, 0x3e, 0x42, 0x1f, 0x0a, 0x2e, 0x5b, 0x61, 0x6c, 0x26, 0xbc, 0xb0, 0x4c, 0x07, 0xbc, 0x59,
	0x01, 0xb3, 0x62, 0x26, 0xe8, 0xa3, 0x23, 0x60, 0x30, 0x4b, 0xeb, 0xfd, 0xe1, 0x01, 0x33, 0x97,
	0xa9, 0xbb, 0xee, 0x4c, 0x06, 0x30, 0xfb, 0x4f, 0x39, 0x88, 0x07, 0x59, 0xfb, 0xe1, 0x06, 0xb3,
	0x1a, 0x8a, 0xd2, 0xb3, 0xdd, 0x51, 0x7a, 0xfa, 0x22, 0x6d, 0x28, 0x1d, 0xde, 0x6b, 0x11, 0x94,
	0x6e, 0x5b, 0xe4, 0x54, 0xe8, 0x3d, 0xe7, 0x47, 0x82, 0xde, 0x89, 0x45, 0xc1, 0x05, 0x12, 0x4c,
	0x9f, 0xc0, 0xbb, 0x46, 0xef, 0x26, 0x16, 0x6f, 0xce, 0x42, 0x8f, 0xa4, 0x75, 0xfb, 0xe0, 0x5f,
	0xaf, 0x0d, 0xaa, 0xf4, 0x36, 0x5a, 0x27, 0xb8, 0x4d, 0x5d, 0x5c, 0x9a, 0xbe, 0x25, 0x53, 0x3b,
	0x4b, 0x1e, 0x20, 0x3e, 0x6b, 0x0f, 0xf3, 0x0d, 0x2b, 0xde, 0xa4, 0x4a, 0xef, 0xa0, 0xb7, 0x05,
	0xe7, 0x42, 0x4c, 0x1b, 0xf8, 0x5d, 0x02, 0x48, 0xd1, 0x1f, 0xb3, 0xd0, 0x7c, 0x7b, 0x57, 0x0f,
	0xbe, 0xf0, 0xba, 0xd1, 0x66, 0x4f, 0x49, 0x4b, 0xd0, 0x4a, 0xd7, 0x62, 0x33, 0xe3, 0xa5, 0x83,
	0x89, 0xc3, 0xa9, 0xe0, 0x6e, 0x36, 0xd4, 0x5d, 0x30, 0xf8, 0x3f, 0xb2, 0xd1, 0x7c, 0x6c, 0x0c,
	0x64, 0x01, 0xac, 0x66, 0x2a, 0x69, 0xf2, 0x25, 0x55, 0xfa, 0x99, 0x3b, 0x90, 0x2c, 0x24, 0x8e,
	0x84, 0xf7, 0xc8, 0xce, 0x67, 0x7d, 0x4f, 0x76, 0x3e, 0xfb, 0x1e, 0xd8, 0xf9, 0x17, 0xa9, 0x56,
	0x27, 0x07, 0x6b, 0x66, 0x9e, 0x98, 0x4a, 0xab, 0x43, 0xd5, 0x39, 0xc5, 0xa6, 0x3a, 0x07, 0x54,
	0x41, 0x38, 0x17, 0x11, 0x51, 0xe7, 0x90, 0x13, 0x00, 0xc4, 0x4d, 0x1c, 0xaa, 0x01, 0xdb, 0x12,
	0x65, 0x4e, 0x0b, 0xa7, 0x4a, 0x4d, 0x1c, 0xfa, 0x1b, 0x21, 0x6d, 0xdb, 0x45, 0x01, 0xdc, 0xd2,
	0xc1, 0x6e, 0x9d, 0x7e, 0x92, 0xac, 0xc9, 0xfc, 0xee, 0x39, 0x63, 0x98, 0xfa, 0x4d, 0x0e, 0xa6,
	0x51, 0xf4, 0x5f, 0xb2, 0xd0, 0x02, 0xc7, 0x04, 0x1e, 0xfc, 0x4b, 0xf4, 0x81, 0x4d, 0x03, 0x34,
	0xc5, 0x25, 0x82, 0xfc, 0x3d, 0x81, 0xb0, 0xb1, 0x42, 0xd3, 0xa0, 0x9d, 0x7e, 0x99, 0x6c, 0x8a,
	0x1f, 0xa2, 0x18, 0x4f, 0xdf, 0x14, 0xb7, 0xf6, 0xe4, 0x99, 0xfe, 0xd4, 0x7a, 0x9e, 0xe4, 0x0c,
	0xf4, 0x98, 0x83, 0x93, 0xc7, 0xd4, 0xd6, 0xb8, 0x61, 0xe5, 0xc8, 0xe2, 0x33, 0xc9, 0xbd, 0xfa,
	0x19, 0x4e, 0x92, 0x40, 0x4b, 0x45, 0x9e, 0x38, 0xdb, 0x30, 0xc3, 0x32, 0x1a, 0x7d, 0x5a, 0xef,
	0xcf, 0xc3, 0x33, 0xad, 0x63, 0x75, 0x42, 0xd9, 0xa6, 0x96, 0x69, 0x29, 0xab, 0x13, 0x5a, 0xa0,
	0x77, 0xec, 0xd5, 0x86, 0xfb, 0xb4, 0xa1, 0x1e, 0x67, 0x8f, 0x8c, 0x8e, 0xf8, 0x65, 0x87, 0xbf,
	0x6d, 0x21, 0x01, 0x02, 0xec, 0x74, 0x34, 0x9b, 0xf4, 0xd0, 0x11, 0x73, 0x71, 0x37, 0xfa, 0xc4,
	0x0a, 0x4b, 0x02, 0x0c, 0xd5, 0x0c, 0xcb, 0x25, 0xd5, 0xfe, 0x45, 0x7c, 0xa6, 0xf6, 0xe5, 0xb0,
	0xd6, 0x75, 0x2a, 0x79, 0xe8, 0x14, 0x3c, 0x0c, 0xa4, 0x3c, 0xd4, 0x6f, 0xc2, 0xc1, 0x80, 0xe5,
	0xe4, 0x63, 0x6f, 0x55, 0x3c, 0x98, 0xa5, 0x4a, 0x67, 0xb3, 0xd0, 0x40, 0x96, 0x90, 0xe9, 0x14,
	0xc5, 0xbf, 0xe3, 0x5c, 0x84, 0x32, 0x66, 0x08, 0x47, 0x38, 0x26, 0xc7, 0x86, 0xd8, 0x54, 0xf5,
	0x6d, 0xc7, 0x0c, 0x86, 0xce, 0x5e, 0x01, 0x3a, 0x97, 0xd9, 0x59, 0x31, 0xa1, 0x1a, 0x2e, 0x4e,
	0xdd, 0x1d, 0xc1, 0x25, 0xb8, 0x4e, 0xb2, 0xaf, 0x05, 0x76, 0x0d, 0xe2, 0x7c, 0x91, 0x87, 0x31,
	0x6d, 0x7b, 0x26, 0x5a, 0x3b, 0xd3, 0x9b, 0x4f, 0x47, 0x04, 0xb2, 0x6f, 0x55, 0xd1, 0x7f, 0xc9,
	0x46, 0x05, 0xee, 0x7b, 0xf4, 0xe0, 0xe3, 0x94, 0xf7, 0x6d, 0x84, 0xb9, 0xec, 0x0e, 0xea, 0x1c,
	0xba, 0xac, 0x8c, 0x1f, 0x4a, 0xbd, 0x11, 0x2f, 0xa0, 0x94, 0xc5, 0xb5, 0xe8, 0x89, 0xa9, 0x6a,
	0xf1, 0x1b, 0xd2, 0x5d, 0xf6, 0xb0, 0x6b, 0x32, 0x73, 0x89, 0x9e, 0xb4, 0x13, 0x00, 0xe3, 0xc4,
	0xe8, 0x9b, 0x0d, 0x3f, 0x7b, 0x93, 0x8a, 0x3f, 0x52, 0xa5, 0x0f, 0xd0, 0x2f, 0x85, 0x8c, 0xe7,
	0x20, 0x3e, 0x7d, 0x07, 0x58, 0x9d, 0x5a, 0x81, 0xd8, 0x9f, 0x83, 0x1e, 0x73, 0xc8, 0x8b, 0x77,
	0x85, 0xcc, 0xa6, 0xd2, 0x27, 0xfe, 0xb9, 0x91, 0xd9, 0x2f, 0xd3, 0x91, 0x19, 0x36, 0x1b, 0x31,
	0xe7, 0xf0, 0x53, 0x76, 0x00, 0xd8, 0x30, 0x82, 0x9e, 0xa7, 0x44, 0x6f, 0x61, 0x46, 0x83, 0x31,
	0x03, 0x43, 0x24, 0x4e, 0xbf, 0x6d, 0x69, 0x30, 0xde, 0x76, 0x0d, 0x36, 0xe5, 0x08, 0x2f, 0x05,
	0xae, 0x6d, 0x36, 0xfa, 0x15, 0x1d, 0x82, 0x86, 0xa9, 0xf1, 0xa3, 0x7a, 0x7f, 0x7b, 0x43, 0xd0,
	0xc7, 0xe8, 0x3d, 0x88, 0xc2, 0x2d, 0xd3, 0x71, 0x19, 0x80, 0x90, 0x26, 0xe2, 0xa7, 0x21, 0xad,
	0xe9, 0x60, 0x01, 0x46, 0xfd, 0x7e, 0x20, 0x0b, 0x15, 0xb8, 0x8f, 0xf7, 0xe0, 0xcb, 0x6b, 0xef,
	0xa9, 0x52, 0x25, 0x7a, 0x57, 0xc8, 0x38, 0xff, 0x3b, 0x6e, 0x58, 0x06, 0xd1, 0xed, 0xbf, 0x66,
	0xa3, 0xc7, 0x1c, 0x32, 0xe0, 0xf7, 0xb9, 0x32, 0x36, 0x61, 0x8e, 0xb9, 0x32, 0xf5, 0x53, 0x5d,
	0x99, 0x57, 0x55, 0x69, 0x8d, 0xfb, 0x95, 0x59, 0x9c, 0xe9, 0xca, 0xdc, 0xe1, 0xb2, 0x6c, 0x4c,
	0xbf, 0x2c, 0x2b, 0x55, 0xe9, 0x69, 0xf6, 0xb2, 0x3c, 0x36, 0xfd, 0x0b, 0xb2, 0xce, 0x49, 0xc5,
	0x73, 0xac, 0x03, 0x77, 0x50, 0xf1, 0xd9, 0x26, 0x78, 0x9e, 0xd7, 0x77, 0xb7, 0x3a, 0x89, 0x35,
	0x7e, 0x42, 0x8d, 0xfe, 0x5a, 0xc8, 0xb4, 0xe1, 0xe2, 0xd3, 0x2e, 0xba, 0x88, 0xef, 0x09, 0xf4,
	0x69, 0x64, 0xd0, 0xb8, 0x04, 0xee, 0xe3, 0x3f, 0x3c, 0x97, 0x20, 0xd3, 0xfc, 0xef, 0xb8, 0x81,
	0x19, 0x2e, 0x41, 0x77, 0x36, 0x5a, 0xc8, 0x4a, 0xa9, 0x7f, 0xb9, 0x01, 0xf6, 0x1b, 0x50, 0x1c,
	0x54, 0xa5, 0x3a, 0xf4, 0x1b, 0xc1, 0x75, 0x93, 0xc4, 0xa7, 0xe1, 0x3d, 0xdf, 0x7d, 0x45, 0xd5,
	0xff, 0x2d, 0x0b, 0x2d, 0x72, 0x19, 0xec, 0xc1, 0xe7, 0xd4, 0x7e, 0x65, 0xe3, 0xd4, 0x9e, 0x74,
	0x72, 0x6a, 0x36, 0x3e, 0xd9, 0x16, 0x54, 0x8d, 0xc8, 0x6f, 0x6d, 0x97, 0x68, 0x94, 0x41, 0x1b,
	0x2a, 0x01, 0xf9, 0xef, 0x03, 0x55, 0xfa, 0x05, 0xda, 0x2a, 0xb8, 0x6f, 0xcd, 0x1d, 0x0f, 0x62,
	0x6a, 0xe6, 0x69, 0x28, 0x1b, 0x2d, 0xb2, 0xc9, 0x95, 0xf4, 0x16, 0xac, 0x4f, 0xbf, 0x05, 0xcf,
	0x4f, 0xe7, 0x16, 0x10, 0x30, 0xfa, 0xb3, 0xdd, 0x01, 0x4b, 0x6f, 0x92, 0x7d, 0x2f, 0x7a, 0x93,
	0x9c, 0xbb, 0xd7, 0x9b, 0xfc, 0x46, 0x95, 0x6a, 0x90, 0x22, 0xb8, 0xef, 0xa3, 0x28, 0xb8, 0xc8,
	0xe8, 0xcc, 0xf9, 0xd8, 0x55, 0x27, 0x77, 0xba, 0x2e, 0x45, 0xff, 0x3d, 0x0b, 0x3d, 0xea, 0x36,
	0xce, 0xc3, 0x74, 0x47, 0xb2, 0xef, 0xcf, 0x1d, 0x71, 0x73, 0x8e, 0xc9, 0xb0, 0x37, 0xd3, 0x3c,
	0x84, 0x3b, 0xbc, 0x22, 0xc8, 0x43, 0x4b, 0x1c, 0x22, 0xcc, 0x2f, 0xfc, 0x91, 0x4f, 0xe9, 0x85,
	0x59, 0x63, 0xd3, 0x7d, 0x3f, 0x39, 0xa5, 0xee, 0x9b, 0xa8, 0xbc, 0xb7, 0x4f, 0x75, 0x35, 0x5e,
	0xbc, 0x97, 0xab, 0xe1, 0x7e, 0x27, 0x7e, 0x9e, 0xee, 0x9b, 0x50, 0x90, 0x49, 0x99, 0xc9, 0x6a,
	0x31, 0x5f, 0x71, 0x71, 0x4a, 0x78, 0x3c, 0xa3, 0x16, 0xd3, 0xa6, 0xbe, 0x6c, 0x70, 0x78, 0x23,
	0xac, 0xbd, 0x83, 0xf8, 0xca, 0x6e, 0xe5, 0x34, 0x6d, 0x58, 0x50, 0x46, 0x6d, 0x58, 0x7e, 0x96,
	0xf8, 0x81, 0x8b, 0x02, 0x4e, 0x43, 0xca, 0x10, 0xbf, 0x57, 0x89, 0x62, 0x82, 0x95, 0x98, 0x08,
	0xfd, 0x03, 0xf5, 0x05, 0xfb, 0x6c, 0x27, 0x79, 0xe8, 0x32, 0x28, 0x25, 0x40, 0xb8, 0x65, 0x79,
	0xc3, 0xd7, 0xa9, 0x6e, 0x68, 0xa6, 0xf9, 0x88, 0xbc, 0x88, 0xea, 0x86, 0x0a, 0xd2, 0x4f, 0x07,
	0xf4, 0x44, 0x54, 0x41, 0x64, 0xb3, 0xb6, 0xe5, 0x3d, 0x40, 0xd6, 0xb6, 0x74, 0xa6, 0x77, 0x56,
	0x66, 0xa6, 0x97, 0xbd, 0x40, 0x0e, 0xa6, 0xf7, 0xfb, 0x58, 0xed, 0x06, 0x39, 0x55, 0x3a, 0xcb,
	0xa1, 0x01, 0x4e, 0x98, 0xea, 0xb6, 0x89, 0x42, 0xba, 0xce, 0x40, 0xeb, 0xde, 0xa7, 0xb5, 0x5e,
	0x75, 0xe3, 0x42, 0xbe, 0x97, 0xcb, 0x06, 0x13, 0x3a, 0xdc, 0xc1, 0x55, 0x37, 0xe7, 0xa4, 0xa9,
	0x51, 0x98, 0x39, 0x3e, 0xf8, 0x28, 0xd9, 0x6b, 0x63, 0x5b, 0x36, 0x4d, 0xff, 0x86, 0xa6, 0x2b,
	0x99, 0x6c, 0x1f, 0x19, 0x45, 0x53, 0x10, 0x15, 0xde, 0xa9, 0xe6, 0xfd, 0x55, 0x36, 0x05, 0x54,
	0xa9, 0x16, 0xf9, 0x85, 0x29, 0xcf, 0x65, 0x9a, 0xc0, 0x43, 0xc8, 0xc1, 0x4c, 0x25, 0x14, 0x2a,
	0xc1, 0x14, 0x21, 0x57, 0x09, 0x85, 0x36, 0x85, 0x6b, 0x6c, 0x3c, 0x6b, 0xdf, 0x7c, 0xb4, 0x10,
	0xc6, 0x22, 0x69, 0xc9, 0xcd, 0x57, 0xaf, 0xef, 0xb3, 0x38, 0x97, 0x33, 0x99, 0x9d, 0x55, 0x2c,
	0xce, 0x2d, 0x32, 0x63, 0x23, 0x4c, 0xc6, 0x3b, 0x26, 0x7a, 0xc7, 0xb5, 0xd8, 0xf9, 0x44, 0x34,
	0xf6, 0x82, 0x98, 0x18, 0xeb, 0xa4, 0xaa, 0x5f, 0x53, 0xaa, 0x28, 0x64, 0xd1, 0xf2, 0x2f, 0x08,
	0xa5, 0x01, 0x18, 0x29, 0x51, 0xa5, 0xb5, 0x84, 0xd2, 0xac, 0x32, 0x73, 0xca, 0x0f, 0xe9, 0x87,
	0xf7, 0xd2, 0x74, 0xf9, 0x66, 0xd7, 0x16, 0x26, 0xf8, 0xf9, 0x8b, 0x30, 0x80, 0xd9, 0xfb, 0x5b,
	0x84, 0x1e, 0xfd, 0x1e, 0xe5, 0x2b, 0x81, 0x9a, 0x3a, 0x7f, 0xf8, 0x53, 0x1c, 0x21, 0x03, 0x28,
	0xc5, 0xfb, 0xaa, 0xb4, 0x49, 0x60, 0xcb, 0xc5, 0x37, 0x48, 0xce, 0xf4, 0xfd, 0x97, 0xf5, 0xc3,
	0x7b, 0x93, 0xf1, 0x2f, 0xb5, 0x3d, 0xc7, 0xe8, 0x60, 0xda, 0xa1, 0x91, 0x44, 0xb4, 0xc9, 0x75,
	0xd4, 0x17, 0x44, 0xfb, 0xa8, 0x85, 0x32, 0xdb, 0x2b, 0xff, 0x96, 0x95, 0x24, 0x2a, 0xc7, 0x32,
	0x1f, 0x5b, 0xb9, 0x95, 0x61, 0x50, 0x38, 0xb9, 0x54, 0x53, 0xab, 0x4b, 0xaa, 0xa8, 0x6d, 0x28,
	0x9f, 0x6c, 0x12, 0x7e, 0x44, 0x9b, 0x8b, 0x6f, 0xdd, 0x5b, 0xaa, 0xf4, 0xa2, 0x90, 0x13, 0xd9,
	0xd9, 0xa0, 0x88, 0xcb, 0xa1, 0x0b, 0x2b, 0x74, 0x5e, 0xf7, 0xc8, 0x44, 0x53, 0xfb, 0x9a, 0xe2,
	0x86, 0x3a, 0x6f, 0x64, 0x7b, 0x30, 0x54, 0x3f, 0x19, 0xef, 0x10, 0x8b, 0x4d, 0x0c, 0x70, 0xdb,
	0x93, 0x2b, 0xe4, 0xac, 0xe6, 0x56, 0x67, 0xc9, 0x6c, 0xa7, 0xfc, 0xe7, 0x28, 0xaf, 0x31, 0xac,
	0x78, 0x36, 0xc8, 0x4a, 0x18, 0x23, 0xff, 0x3c, 0xcf, 0xaf, 0x54, 0xe9, 0x7d, 0x81, 0x16, 0x8a,
	0x9b, 0x48, 0xc0, 0x06, 0x1c, 0xbb, 0x89, 0xa4, 0xda, 0xc5, 0x71, 0x40, 0x28, 0xfb, 0xa2, 0x5f,
	0x3e, 0xed, 0x48, 0x50, 0x0a, 0xe5, 0xa9, 0xe1, 0x81, 0xd4, 0x95, 0xeb, 0xf6, 0x88, 0xee, 0x32,
	0xed, 0x98, 0x5f, 0x87, 0xf2, 0x7d, 0x4a, 0xb8, 0x3a, 0xe4, 0x6f, 0x30, 0x10, 0x18, 0xa1, 0x1b,
	0x98, 0x51, 0x65, 0xcb, 0x45, 0x9e, 0x2c, 0x72, 0x18, 0x87, 0x9b, 0xea, 0xee, 0x4e, 0x8d, 0x5f,
	0x92, 0xd9, 0x0a, 0x7c, 0x15, 0x9a, 0xe5, 0x0f, 0x6f, 0xd9, 0xbe, 0xbd, 0xce, 0x1f, 0x80, 0x88,
	0x16, 0x79, 0x10, 0x5d, 0xcc, 0x2a, 0x15, 0x9f, 0x85, 0x3e, 0x88, 0x06, 0x10, 0x27, 0x69, 0x48,
	0x9e, 0x1f, 0x4d, 0xc6, 0xc6, 0x1d, 0x93, 0xb3, 0x9a, 0xf0, 0x8d, 0x28, 0xa7, 0xd6, 0x1f, 0xf0,
	0x91, 0x0c, 0xad, 0x5e, 0x03, 0x66, 0x70, 0x81, 0x58, 0x46, 0x61, 0x92, 0x8d, 0x3a, 0x41, 0x77,
	0xbf, 0xf6, 0xe5, 0xf0, 0x2a, 0xec, 0x3d, 0x8f, 0x43, 0x8e, 0x5e, 0xd4, 0x4f, 0x9c, 0x33, 0x48,
	0xdf, 0xd0, 0x11, 0x7d, 0xf8, 0x3b, 0x78, 0x9e, 0xac, 0xc5, 0x4e, 0x69, 0xf1, 0xdd, 0xe9, 0x79,
	0xeb, 0x70, 0xef, 0xfc, 0x46, 0x1b, 0x87, 0x02, 0x21, 0x2f, 0xb0, 0x73, 0x35, 0xcb, 0xa1, 0x2c,
	0x81, 0x63, 0x80, 0x40, 0x22, 0x43, 0x66, 0x2c, 0x11, 0x82, 0x40, 0x59, 0xa6, 0xa5, 0x9d, 0x43,
	0xc8, 0xa7, 0x34, 0xd4, 0x05, 0x77, 0x62, 0x00, 0x9a, 0x8d, 0x01, 0xc8, 0xaf, 0x4a, 0x1f, 0x09,
	0x4c, 0xb1, 0xb8, 0x05, 0x7a, 0x20, 0xe1, 0xe1, 0xe9, 0x72, 0x3a, 0x7b, 0x93, 0xfb, 0xbf, 0x4e,
	0x44, 0x63, 0xa9, 0x83, 0x27, 0x92, 0xc7, 0x6f, 0x24, 0xc6, 0x4f, 0x24, 0x7b, 0x8f, 0x4d, 0xc6,
	0x3b, 0xd6, 0x14, 0x27, 0xdb, 0xbf, 0x84, 0xc8, 0xf2, 0xd0, 0x02, 0x43, 0x19, 0x04, 0xc1, 0x83,
	0x02, 0x0b, 0xd2, 0x98, 0x51, 0xf8, 0xb7, 0x50, 0xce, 0xb6, 0x9a, 0xf2, 0x52, 0x12, 0x82, 0x02,
	0x1c, 0xc6, 0x8d, 0x02, 0xf1, 0xa9, 0x44, 0x6c, 0x7f, 0x22, 0xda, 0x67, 0x06, 0xa2, 0xd6, 0x4f,
	0x9c, 0xd3, 0x63, 0x3d, 0x06, 0x10, 0xd1, 0x45, 0xca, 0xb8, 0x22, 0xff, 0x0e, 0xca, 0xdd, 0x56,
	0x83, 0x2f, 0xf2, 0x5c, 0x26, 0x37, 0x33, 0x14, 0x89, 0xcf, 0xd0, 0x5e, 0xe8, 0xd5, 0x75, 0xeb,
	0x89, 0x54, 0xe7, 0x4b, 0x50, 0xae, 0x4f, 0x69, 0x30, 0x50, 0xd9, 0x3c, 0x53, 0x21, 0xb2, 0x4c,
	0x20, 0x45, 0xe2, 0xd2, 0x89, 0xdd, 0x83, 0x13, 0x47, 0x06, 0x33, 0x4e, 0x87, 0xd4, 0xe3, 0x37,
	0xa1, 0x3c, 0xe3, 0x2f, 0x3c, 0xa5, 0xf9, 0xe6, 0x9b, 0xbf, 0x95, 0x02, 0x2d, 0x14, 0x8b, 0xa0,
	0xa3, 0x29, 0x67, 0x44, 0x6b, 0xf3, 0xe5, 0x28, 0xaf, 0x5a, 0x09, 0x00, 0xd9, 0x58, 0x60, 0x91,
	0x0d, 0x5a, 0x28, 0x2e, 0x4d, 0x44, 0x87, 0xb4, 0xf1, 0xdd, 0x19, 0xe7, 0x45, 0x6b, 0xf2, 0x95,
	0x08, 0xc1, 0xdf, 0x78, 0x6e, 0xbc, 0x95, 0x81, 0x9f, 0x29, 0x16, 0x8b, 0xa0, 0xbb, 0x29, 0x67,
	0xc7, 0xd4, 0xe7, 0xdf, 0x45, 0x79, 0xfe, 0x70, 0xa5, 0x52, 0x1d, 0x52, 0x22, 0x38, 0x5e, 0x68,
	0x9e, 0xe7, 0x25, 0x55, 0x12, 0x05, 0x5a, 0x28, 0x3e, 0x6b, 0xc5, 0x76, 0x19, 0x3f, 0xa1, 0x8d,
	0xec, 0x81, 0x9b, 0x92, 0x9e, 0x8e, 0x8e, 0xb6, 0xe0, 0xaf, 0x71, 0x28, 0xbf, 0x9a, 0x3a, 0xfd,
	0x87, 0x0b, 0x16, 0x62, 0xde, 0xfa, 0x25, 0x77, 0xca, 0x6d, 0x27, 0x48, 0x2b, 0xad, 0xc7, 0x02,
	0x84, 0xb3, 0xfe, 0x58, 0x95, 0x3e, 0x14, 0xd8, 0xee, 0xc4, 0x8d, 0xe6, 0x5d, 0xdd, 0x9f, 0xec,
	0x3d, 0xa6, 0x0d, 0x1d, 0x35, 0x18, 0x4e, 0x1c, 0xbf, 0x14, 0xa2, 0xe6, 0x24, 0xa2, 0xfb, 0x49,
	0x94, 0xca, 0xbe, 0x16, 0xab, 0x19, 0x8d, 0xbe, 0x5a, 0xab, 0xec, 0x34, 0x96, 0x12, 0x3b, 0x00,
	0x77, 0x42, 0x66, 0xbb, 0x5e, 0xfc, 0x01, 0xce, 0xe5, 0x6a, 0x9b, 0x80, 0x0b, 0x5b, 0xb8, 0xda,
	0x1e, 0xe5, 0x6f, 0xb1, 0xcb, 0xc2, 0xcc, 0x07, 0x0f, 0x0c, 0xcb, 0x78, 0x98, 0x53, 0x25, 0x95,
	0x43, 0xdd, 0x9c, 0xe0, 0x4a, 0x8a, 0x45, 0x9e, 0x04, 0x91, 0x05, 0xaa, 0x65, 0x8a, 0xda, 0x0c,
	0xdb, 0x47, 0xf8, 0x43, 0x96, 0x1c, 0x59, 0x79, 0x5d, 0x6e, 0x72, 0x2c, 0x01, 0xb8, 0xc9, 0x51,
	0x8c, 0xec, 0x60, 0x17, 0x31, 0x42, 0xba, 0xc9, 0x31, 0x77, 0xb8, 0xe8, 0x2a, 0x87, 0x16, 0x39,
	0x66, 0xf4, 0x50, 0xbc, 0xea, 0x2f, 0xfa, 0xfb, 0xb9, 0x68, 0x21, 0xe8, 0x5b, 0x1d, 0x5c, 0xcd,
	0x7b, 0xe9, 0x5c, 0xcd, 0xcb, 0x38, 0x4a, 0xbe, 0xc5, 0xd5, 0xfc, 0xc4, 0x85, 0xab, 0x61, 0x99,
	0x00, 0x57, 0x96, 0x66, 0xb3, 0x8d, 0xa5, 0x29, 0xbe, 0x77, 0x96, 0x86, 0x70, 0x32, 0xc5, 0x56,
	0x54, 0xea, 0x1c, 0x26, 0xe3, 0xa4, 0x19, 0x95, 0x7a, 0x16, 0xa8, 0x8c, 0xed, 0x6c, 0x84, 0x19,
	0x8c, 0xfa, 0x7d, 0x37, 0x36, 0x62, 0xed, 0x3d, 0xb2, 0x11, 0x76, 0xee, 0xe1, 0x10, 0xe7, 0x60,
	0x1f, 0xa6, 0x8e, 0xc2, 0xfe, 0xb0, 0xb1, 0x16, 0x0d, 0x4e, 0xd6, 0x62, 0xea, 0xe5, 0xdd, 0x07,
	0xb6, 0xc3, 0x67, 0x63, 0x3b, 0x2a, 0xee, 0x37, 0xdb, 0x41, 0xb8, 0x8c, 0x26, 0x37, 0xbe, 0xe0,
	0xd7, 0x7f, 0x6a, 0xbe, 0xe0, 0x2f, 0xec, 0xc0, 0x8f, 0x8a, 0x1d, 0xa8, 0x77, 0xb0, 0x03, 0x53,
	0xdf, 0x8d, 0x1f, 0x8a, 0x55, 0x70, 0xc3, 0xf2, 0x7f, 0x5e, 0x56, 0xc1, 0xc1, 0xd3, 0x2f, 0xfa,
	0x7e, 0x3c, 0xfd, 0x9f, 0x94, 0xf1, 0x58, 0xa5, 0x4a, 0xcb, 0x91, 0x20, 0xb8, 0x92, 0x4a, 0x91,
	0x27, 0x0f, 0xfa, 0x19, 0xae, 0xa3, 0xa8, 0x2d, 0x0b, 0x2d, 0x72, 0x54, 0x7e, 0x38, 0xc2, 0xfc,
	0xdc, 0x21, 0x4d, 0x1c, 0x59, 0x8d, 0x2d, 0x4d, 0x1c, 0x8d, 0xd6, 0x9b, 0xec, 0x6b, 0x21, 0xc0,
	0xc2, 0x38, 0x0a, 0x17, 0xed, 0xe7, 0xd0, 0x42, 0xf0, 0x6b, 0x70, 0xb0, 0x18, 0x4f, 0xa4, 0xb1,
	0x18, 0x2c, 0xa3, 0x50, 0x80, 0x66, 0x12, 0x77, 0x12, 0x48, 0x93, 0x26, 0x9b, 0x3f, 0x8b, 0x5f,
	0x55, 0xa5, 0x97, 0xd1, 0xcf, 0x05, 0xd7, 0x4e, 0x69, 0x16, 0xa7, 0x0c, 0x2c, 0x20, 0x3e, 0x18,
	0x47, 0xc3, 0x1f, 0xed, 0xc1, 0xd8, 0x72, 0x38, 0xa5, 0x1f, 0xcc, 0x39, 0x0e, 0x2d, 0x58, 0xaf,
	0x44, 0x1c, 0xa7, 0x52, 0x91, 0xce, 0xf8, 0x89, 0x99, 0x43, 0x7d, 0x3e, 0x16, 0x5a, 0x34, 0x3f,
	0xab, 0xe0, 0xa9, 0xa9, 0x72, 0xf4, 0x17, 0xbf, 0xa1, 0x4a, 0xaf, 0xa2, 0x57, 0x84, 0xf4, 0xb1,
	0xa8, 0xaf, 0x38, 0x0e, 0x8f, 0x9a, 0xf1, 0xc8, 0xfe, 0x98, 0x85, 0x78, 0xb6, 0xed, 0xc3, 0x71,
	0x5e, 0x9b, 0xa6, 0x77, 0x5e, 0xd3, 0x0d, 0x88, 0x4c, 0x1e, 0x4c, 0xb9, 0x6c, 0x04, 0x7d, 0xbe,
	0x0f, 0xfb, 0x37, 0xb5, 0x6d, 0x2b, 0x99, 0x8f, 0xf8, 0x8d, 0xfe, 0xb0, 0xf3, 0xd0, 0x37, 0xdb,
	0x4c, 0x5a, 0xdf, 0x9f, 0x2b, 0x0f, 0xd9, 0xf5, 0x8b, 0x59, 0x16, 0xd3, 0x76, 0x3f, 0xf5, 0x8b,
	0x76, 0xb5, 0xa2, 0x83, 0x9b, 0xcf, 0xbe, 0x8f, 0xdc, 0x3c, 0xab, 0x0b, 0xcc, 0xf9, 0x41, 0x75,
	0x81, 0x36, 0x1d, 0xde, 0x8c, 0xfb, 0xa5, 0xc3, 0x33, 0x99, 0xe9, 0xdc, 0x3f, 0x29, 0x33, 0xbd,
	0xd1, 0x25, 0xea, 0xef, 0xbd, 0xab, 0xec, 0x1c, 0xac, 0x39, 0x88, 0x2e, 0x7f, 0x1e, 0xd6, 0x7c,
	0xd6, 0x7d, 0x60, 0xcd, 0xd1, 0x7d, 0x64, 0xcd, 0xf3, 0xef, 0x0f, 0x6b, 0x3e, 0xfb, 0xfe, 0xb2,
	0xe6, 0x73, 0xee, 0x27, 0x6b, 0x3e, 0xf7, 0xfe, 0x6b, 0xea, 0xe6, 0xdd, 0x17, 0x4d, 0x1d, 0x13,
	0x49, 0xcb, 0x05, 0xb1, 0x8a, 0x9f, 0xdb, 0x70, 0xb3, 0xdd, 0x17, 0x1f, 0xc2, 0x8d, 0x26, 0x62,
	0x7b, 0x8c, 0xdb, 0x7b, 0x7a, 0x2f, 0xdc, 0x23, 0x62, 0x92, 0x1e, 0x6d, 0xd1, 0x7a, 0xda, 0xa0,
	0x9c, 0xa4, 0xa3, 0xc0, 0xfd, 0x58, 0x6d, 0x5b, 0x07, 0xc1, 0x84, 0xad, 0xb5, 0x1d, 0x4b, 0x44,
	0x63, 0x26, 0x1d, 0x1d, 0x9c, 0xd8, 0xdb, 0x0d, 0xf5, 0x8b, 0xfe, 0x7f, 0x59, 0xe8, 0x11, 0xdb,
	0x84, 0x1e, 0x36, 0xb2, 0x99, 0x7d, 0xf7, 0x64, 0x33, 0x8d, 0xc7, 0x31, 0x79, 0x8f, 0x7b, 0x25,
	0x9b, 0x45, 0xff, 0xdb, 0x1c, 0x33, 0x68, 0x45, 0x49, 0x5d, 0xb0, 0xd1, 0x67, 0xd2, 0xcb, 0x4f,
	0xd0, 0xcc, 0x6a, 0xe3, 0x37, 0x65, 0x91, 0xca, 0x8c, 0xcb, 0x37, 0x0b, 0x97, 0x61, 0x3c, 0xb4,
	0x84, 0x8a, 0x3c, 0x93, 0xf1, 0x0e, 0xa0, 0x6f, 0x8c, 0xa9, 0x0f, 0xb8, 0xa6, 0x85, 0xe9, 0x5c,
	0x93, 0xd9, 0x2b, 0xff, 0xba, 0x4d, 0x4d, 0x86, 0x33, 0xad, 0x01, 0x41, 0x5e, 0x44, 0x3b, 0x66,
	0x69, 0xb2, 0xd3, 0xbe, 0xb7, 0x9b, 0x43, 0x79, 0x8a, 0xcf, 0x1f, 0xf1, 0x6e, 0x23, 0x51, 0xf7,
	0xf2, 0x3c, 0x35, 0xaa, 0xe4, 0x13, 0x68, 0xa1, 0xf8, 0x4b, 0x88, 0xcc, 0x54, 0xe9, 0xf5, 0x56,
	0x6a, 0x97, 0x77, 0x4d, 0x9c, 0x38, 0x43, 0x33, 0x89, 0x11, 0x42, 0xd2, 0x3d, 0x92, 0x8c, 0x1f,
	0x4e, 0xdd, 0x38, 0x00, 0xc9, 0x6c, 0x00, 0xfc, 0x29, 0x4d, 0x9b, 0x38, 0xd3, 0xa2, 0x0d, 0xf7,
	0x25, 0xae, 0xb7, 0xd3, 0xf4, 0xbe, 0xa4, 0xfe, 0xc8, 0x01, 0x99, 0x8e, 0xc1, 0x1f, 0xe5, 0x10,
	0x0a, 0x9a, 0xc9, 0x5a, 0xc2, 0xe4, 0x48, 0x45, 0x77, 0x1d, 0x36, 0xbb, 0xbd, 0x2b, 0x69, 0x86,
	0x17, 0x22, 0x95, 0x96, 0xaa, 0x92, 0x24, 0x30, 0x5d, 0x89, 0x2f, 0x40, 0xca, 0x05, 0xe3, 0xd6,
	0xec, 0xdd, 0x93, 0x1a, 0xef, 0x49, 0x8e, 0x5e, 0xd1, 0x86, 0x4f, 0x26, 0xbb, 0x2e, 0x25, 0xfb,
	0x5a, 0x20, 0xe5, 0x17, 0x44, 0xd7, 0x87, 0x90, 0x4a, 0x90, 0x33, 0x4d, 0x66, 0x3a, 0xe0, 0xbf,
	0xe3, 0xd0, 0x6c, 0x9c, 0xf2, 0xcb, 0x9c, 0x1c, 0x38, 0xaf, 0xbc, 0x38, 0x8d, 0xc9, 0x95, 0x31,
	0xcd, 0x60, 0x7a, 0x1f, 0xaa, 0xd2, 0x2f, 0x05, 0x5b, 0x77, 0xe2, 0xdb, 0x6c, 0xfe, 0x32, 0x9a,
	0xf6, 0x85, 0x10, 0xfe, 0xbd, 0x17, 0x61, 0xf3, 0xe0, 0x2b, 0x9b, 0xce, 0x4c, 0x6b, 0x6d, 0x4e,
	0x0d, 0x47, 0x49, 0xde, 0x61, 0xbc, 0xfd, 0xb2, 0xad, 0x5f, 0xfe, 0x1f, 0x38, 0x34, 0x0f, 0xc3,
	0x88, 0x25, 0xa7, 0x62, 0x2a, 0x3e, 0xa5, 0x24, 0xeb, 0x39, 0xce, 0xa9, 0xd2, 0x11, 0x4e, 0x70,
	0xb6, 0x14, 0x77, 0x73, 0xc6, 0xa9, 0xc7, 0x0e, 0x18, 0xc2, 0xfd, 0xe8, 0xa9, 0x44, 0xb4, 0x09,
	0xe6, 0x65, 0x30, 0x2d, 0x57, 0xce, 0xeb, 0x6d, 0xd7, 0xa8, 0x18, 0x6f, 0x26, 0x38, 0x32, 0x9d,
	0x66, 0xcc, 0x54, 0xad, 0x90, 0x60, 0x8e, 0x3c, 0x1e, 0x1a, 0x3b, 0x48, 0x9c, 0x2d, 0x6e, 0x35,
	0x35, 0x93, 0xcb, 0x96, 0x88, 0xee, 0xd7, 0xbf, 0x19, 0xd0, 0xfb, 0xdb, 0x21, 0x31, 0x92, 0x7e,
	0xe4, 0x6a, 0x22, 0xde, 0x47, 0xb8, 0x24, 0xec, 0xa4, 0x82, 0x53, 0x74, 0x39, 0xa6, 0xc5, 0xff,
	0x1e, 0xcd, 0x0e, 0x86, 0x37, 0xe1, 0x65, 0xe0, 0x48, 0xff, 0xa0, 0x3f, 0x7d, 0xd4, 0xb9, 0xc0,
	0x2d, 0x95, 0xe5, 0x81, 0xed, 0x41, 0xcf, 0x9b, 0xaa, 0xf4, 0x9a, 0x60, 0x6b, 0x20, 0x2e, 0xa7,
	0xcb, 0xda, 0x42, 0xa0, 0x9b, 0x2e, 0x0c, 0xd6, 0x09, 0x19, 0x18, 0x08, 0xa6, 0xb0, 0xb5, 0xe5,
	0x55, 0x0e, 0x2d, 0x20, 0x03, 0x31, 0x53, 0xc8, 0xcb, 0xb0, 0xc7, 0xa4, 0x62, 0x4d, 0xc8, 0xf3,
	0xb6, 0x2a, 0x95, 0x09, 0xe9, 0x2d, 0xc5, 0xd5, 0x74, 0x2e, 0x6c, 0x56, 0x37, 0x98, 0x95, 0x01,
	0xad, 0x18, 0x36, 0x6c, 0xf3, 0x49, 0xef, 0x84, 0xdf, 0xcf, 0xa1, 0x47, 0x68, 0x18, 0x69, 0x66,
	0x5a, 0x90, 0xdf, 0xf3, 0x09, 0xb7, 0x60, 0xbc, 0x50, 0xb5, 0x26, 0xe4, 0x31, 0xc4, 0x65, 0xc1,
	0xad, 0xb5, 0xf8, 0x14, 0x9d, 0x9a, 0x16, 0xbf, 0xae, 0x37, 0x5d, 0x48, 0xc4, 0xa3, 0xc9, 0xf8,
	0x97, 0xb6, 0xb9, 0xb8, 0xb5, 0xe3, 0xdf, 0xb5, 0x0c, 0xf8, 0xc0, 0x7a, 0xac, 0xb5, 0x1b, 0xf0,
	0xcd, 0xa7, 0x8d, 0xd4, 0x80, 0x3f, 0x05, 0xbe, 0x23, 0x16, 0xfd, 0xcf, 0xd0, 0x1c, 0x0c, 0x05,
	0x15, 0x66, 0xba, 0x0d, 0x60, 0x46, 0xde, 0xc5, 0x21, 0x3d, 0x6d, 0x5f, 0x44, 0x1e, 0x12, 0x8c,
	0xc1, 0x7d, 0x87, 0x10, 0x6a, 0xb7, 0x3d, 0xcb, 0x42, 0xcf, 0xca, 0xd9, 0xde, 0xcf, 0xc2, 0x72,
	0xee, 0x6f, 0x71, 0x6d, 0x39, 0x6f, 0x5b, 0x5d, 0xa3, 0x52, 0xeb, 0x0f, 0xd4, 0xc8, 0xb9, 0xdb,
	0x6a, 0xc3, 0xc1, 0x86, 0xb0, 0x3c, 0x63, 0x67, 0x63, 0x20, 0xe2, 0x97, 0xed, 0xbd, 0x2d, 0xfe,
	0x00, 0xcd, 0x73, 0x60, 0x9b, 0xfb, 0x97, 0xf0, 0xea, 0x57, 0x68, 0x41, 0x1a, 0xb2, 0xb8, 0x7f,
	0x19, 0xaf, 0x7e, 0xa1, 0x4a, 0x55, 0x48, 0x16, 0x5c, 0xc8, 0x93, 0xbb, 0x1d, 0xcc, 0xa4, 0x2d,
	0xd4, 0x0a, 0x66, 0x83, 0x7b, 0xcb, 0x0c, 0x56, 0x74, 0x85, 0x46, 0xae, 0x21, 0x9d, 0x3e, 0x1c,
	0xa6, 0xac, 0x43, 0x73, 0xcc, 0x58, 0x20, 0x36, 0x52, 0xfd, 0x8e, 0x93, 0x54, 0xaf, 0x56, 0xa5,
	0x67, 0x05, 0xb3, 0xec, 0x0e, 0x84, 0x3a, 0x27, 0x04, 0x7e, 0x27, 0x84, 0x2a, 0xbf, 0x6a, 0xa3,
	0xca, 0xcf, 0xdd, 0x99, 0x2a, 0x1b, 0xed, 0x1f, 0x46, 0x9a, 0x9c, 0xbe, 0x8f, 0x0f, 0x10, 0x4d,
	0x76, 0x99, 0xdc, 0x5f, 0x68, 0xf2, 0x5f, 0x68, 0xf2, 0x3f, 0x6d, 0x9a, 0xfc, 0x8e, 0x65, 0x07,
	0xcf, 0x37, 0xd1, 0x5c, 0x06, 0x3b, 0xf8, 0xa3, 0xa1, 0x85, 0x98, 0x1a, 0xcf, 0x65, 0xa8, 0x31,
	0x26, 0xc6, 0xa6, 0x5d, 0x7c, 0xa3, 0x3b, 0x31, 0x7e, 0x76, 0x7a, 0xc4, 0xf8, 0xc7, 0x43, 0x61,
	0x49, 0xaa, 0xc1, 0x0c, 0x56, 0x9f, 0xa9, 0x69, 0xac, 0xb9, 0x99, 0x45, 0x7b, 0x69, 0x04, 0xa1,
	0x87, 0x89, 0x9a, 0xf2, 0xef, 0xda, 0xd4, 0xd7, 0x8b, 0xd2, 0x2f, 0x59, 0xb0, 0xd1, 0x67, 0x0b,
	0xb8, 0xcf, 0x5a, 0x81, 0x68, 0x0e, 0x34, 0x9b, 0xbd, 0xe1, 0x8f, 0x9c, 0x19, 0x13, 0xce, 0x46,
	0xa0, 0x3f, 0x72, 0x12, 0xe8, 0x92, 0xbb, 0x20, 0xd0, 0x77, 0x96, 0xa4, 0x33, 0xdb, 0x91, 0x8a,
	0x55, 0x69, 0x2d, 0x7a, 0x49, 0x70, 0x99, 0x93, 0xb8, 0x88, 0x3c, 0x7c, 0x36, 0xd7, 0xe1, 0x3c,
	0x5f, 0x7c, 0xaa, 0xb6, 0x76, 0x3f, 0xd2, 0x53, 0x65, 0x4d, 0x48, 0xee, 0xa7, 0xda, 0xcf, 0xe1,
	0xe8, 0x50, 0xb6, 0x23, 0xdd, 0xe4, 0x3c, 0xd2, 0x17, 0x8c, 0xa9, 0xd1, 0x23, 0xcd, 0x67, 0x72,
	0xe4, 0x4d, 0xe3, 0x08, 0xcd, 0x83, 0x72, 0x0e, 0x33, 0x95, 0xf9, 0x88, 0x1e, 0xd4, 0xbf, 0x84,
	0x40, 0x4d, 0x0f, 0xd5, 0x29, 0x6d, 0x98, 0xce, 0x29, 0x4d, 0xd7, 0x70, 0xb4, 0x4e, 0x95, 0x4a,
	0x90, 0x24, 0xa4, 0x6d, 0x82, 0xb8, 0x08, 0x76, 0xcf, 0x82, 0xf1, 0x3b, 0x58, 0x8e, 0x72, 0x20,
	0x4a, 0xd3, 0x9f, 0x8c, 0xb9, 0x7e, 0xd1, 0xc6, 0x5c, 0x17, 0xde, 0x89, 0xb9, 0x7e, 0xa0, 0xb8,
	0xea, 0x35, 0x4e, 0x97, 0xf6, 0xc7, 0x30, 0xf5, 0x35, 0x25, 0xe2, 0x59, 0x54, 0x16, 0xb6, 0x24,
	0xde, 0x35, 0x16, 0xc1, 0x9e, 0xc1, 0x34, 0x49, 0x27, 0xd8, 0x53, 0xd0, 0xe5, 0xdc, 0xef, 0x41,
	0x97, 0x19, 0x67, 0xca, 0xb4, 0x73, 0x15, 0x7f, 0xef, 0x84, 0x8d, 0x1f, 0x52, 0x73, 0x7d, 0x83,
	0xc4, 0x85, 0x7a, 0xa8, 0xee, 0xec, 0xdb, 0x36, 0xbd, 0x75, 0x86, 0x3b, 0xcb, 0x06, 0x56, 0x23,
	0xaf, 0x79, 0xf1, 0x6b, 0x47, 0xdb, 0x85, 0x7d, 0x4b, 0x95, 0x5e, 0x47, 0xaf, 0x0a, 0xe9, 0x5b,
	0x30, 0xdd, 0x1b, 0x5b, 0xf4, 0x7f, 0xe6, 0xa3, 0x47, 0xc9, 0xb3, 0x18, 0x93, 0x53, 0x34, 0x2f,
	0xec, 0x5a, 0x9b, 0xa1, 0xf7, 0xa7, 0x78, 0x17, 0xf1, 0x25, 0x9b, 0x47, 0x52, 0x86, 0x19, 0xc7,
	0xe7, 0xa6, 0x51, 0xfe, 0x43, 0x7a, 0x04, 0x6e, 0xaf, 0x2a, 0xbd, 0xc1, 0xbe, 0xdd, 0x59, 0x43,
	0xbb, 0xd0, 0xdb, 0x9b, 0x68, 0x5a, 0x7b, 0x9a, 0x24, 0x12, 0xa7, 0x67, 0x4c, 0x44, 0x63, 0xc6,
	0x1d, 0xbb, 0xfb, 0x44, 0xca, 0xfc, 0x47, 0xf4, 0x29, 0x5e, 0xb6, 0xa5, 0x71, 0x37, 0x9f, 0xe2,
	0x2d, 0x4d, 0x1f, 0x1a, 0x9e, 0xe2, 0x99, 0x69, 0x28, 0x80, 0xc8, 0x14, 0xa6, 0x13, 0x19, 0xf3,
	0xa9, 0xde, 0x76, 0x34, 0x4f, 0x09, 0x18, 0x77, 0x59, 0x6a, 0x8c, 0x04, 0xc3, 0xd5, 0xde, 0x3a,
	0x85, 0x58, 0x7a, 0x5f, 0x53, 0xa5, 0x57, 0x04, 0xe7, 0x37, 0xd3, 0x4e, 0xa4, 0xc5, 0x9b, 0xb4,
	0x9e, 0x11, 0x96, 0x53, 0x77, 0x18, 0x5d, 0x9d, 0x0d, 0xf9, 0x1d, 0x28, 0xdf, 0xdb, 0x18, 0x09,
	0x56, 0x56, 0x7b, 0xeb, 0xfc, 0x81, 0x1a, 0x7c, 0xf5, 0xf3, 0xc5, 0x42, 0x27, 0xb8, 0x48, 0x56,
	0x15, 0x7c, 0x7c, 0x90, 0x3e, 0x86, 0x6d, 0x29, 0x16, 0xb0, 0xa3, 0x12, 0x12, 0x88, 0x65, 0xb7,
	0xdb, 0x9e, 0x19, 0xfb, 0xb8, 0xac, 0xf9, 0x9c, 0xcc, 0x56, 0xe7, 0x0f, 0x71, 0x68, 0x6e, 0x9d,
	0xb7, 0x31, 0x50, 0xfd, 0x69, 0x95, 0x52, 0xdf, 0x50, 0xe7, 0x8d, 0x28, 0x44, 0x46, 0xfd, 0xa9,
	0x73, 0xec, 0x8d, 0xb8, 0x56, 0x49, 0x30, 0xb0, 0xdd, 0x5f, 0xd3, 0x08, 0x8f, 0xe8, 0x3c, 0xeb,
	0x0d, 0x79, 0xce, 0xd1, 0x5e, 0x14, 0x60, 0x6c, 0xfd, 0xc8, 0x55, 0xf2, 0xca, 0x0a, 0x4f, 0x42,
	0x1b, 0x3e, 0x99, 0xb8, 0xb1, 0x1f, 0x5e, 0x27, 0x1a, 0xe2, 0x25, 0x86, 0x54, 0x3a, 0x27, 0x47,
	0x1f, 0xfc, 0x0e, 0xfa, 0x7a, 0x74, 0xe6, 0x54, 0xd6, 0x01, 0x27, 0x1c, 0xdb, 0x1e, 0x8e, 0x0a,
	0xc6, 0xde, 0x98, 0x0f, 0x47, 0x9f, 0x34, 0x98, 0x50, 0x3c, 0x05, 0xad, 0xed, 0x84, 0x76, 0x61,
	0xbf, 0xd6, 0x71, 0x18, 0x7f, 0x21, 0x57, 0xcc, 0x7c, 0x43, 0xfa, 0x3b, 0x94, 0x1b, 0xf1, 0xfa,
	0x03, 0x91, 0x70, 0x41, 0xde, 0x5d, 0x8d, 0x5b, 0x85, 0x1b, 0xc1, 0xb8, 0x2b, 0x55, 0xe9, 0x67,
	0x02, 0xe9, 0x46, 0x7c, 0x2a, 0x7d, 0x5c, 0x43, 0x92, 0xbc, 0x3c, 0x60, 0xa5, 0x40, 0x26, 0x55,
	0xf9, 0xed, 0x28, 0xd7, 0x90, 0xe0, 0xb6, 0x54, 0x12, 0x43, 0xf2, 0x66, 0x55, 0xda, 0x20, 0x90,
	0x22, 0x51, 0xa2, 0xfd, 0x4c, 0x34, 0xb5, 0x83, 0x5b, 0x1d, 0x3c, 0x4e, 0xdd, 0x52, 0x89, 0x65,
	0xfe, 0x5d, 0xc9, 0xd6, 0x0b, 0x86, 0x7c, 0x48, 0xa8, 0xd1, 0x10, 0xec, 0xb2, 0xb1, 0xdd, 0x18,
	0xea, 0xb4, 0xa6, 0xb8, 0x4c, 0xba, 0x62, 0xd5, 0xb4, 0xe8, 0x3e, 0xa9, 0x69, 0xcf, 0x73, 0x4c,
	0x46, 0x64, 0x5b, 0xde, 0x59, 0x2b, 0x27, 0xf2, 0x4e, 0xba, 0x69, 0x24, 0xed, 0xf1, 0x8d, 0x13,
	0xa9, 0xef, 0x0e, 0x03, 0xff, 0x48, 0xe8, 0xd1, 0xe1, 0xeb, 0xfa, 0x40, 0x1b, 0xd5, 0xbd, 0xc0,
	0x4f, 0x20, 0x1c, 0x89, 0x68, 0x17, 0x68, 0x60, 0x6e, 0x35, 0xed, 0xa2, 0x26, 0x57, 0x56, 0xc1,
	0x91, 0x3a, 0xdf, 0x0c, 0x7a, 0x0b, 0xa3, 0x64, 0xbc, 0x75, 0x62, 0x60, 0x54, 0x3f, 0x3a, 0x52,
	0x02, 0x2c, 0x84, 0x95, 0x44, 0xf9, 0x7b, 0xbc, 0x4b, 0x35, 0x9a, 0x32, 0xa7, 0x7c, 0x57, 0x4f,
	0x5a, 0xff, 0xa0, 0x4a, 0x7f, 0x85, 0x7e, 0x27, 0x64, 0x40, 0xbe, 0xee, 0x22, 0x23, 0x51, 0xc6,
	0xb2, 0x31, 0x5d, 0xe8, 0x33, 0x54, 0xf6, 0x06, 0xdf, 0xe4, 0x1c, 0x77, 0x87, 0x7d, 0xb8, 0x40,
	0x8e, 0xbc, 0x28, 0xc9, 0xd1, 0x78, 0x7f, 0xd6, 0xe0, 0x0f, 0x07, 0x01, 0x5d, 0x71, 0x87, 0xe8,
	0xa4, 0x74, 0x3d, 0xc0, 0x8e, 0xfe, 0x6d, 0x3e, 0x7a, 0x94, 0x04, 0x8a, 0x71, 0xd2, 0xb8, 0x75,
	0xf6, 0x8c, 0x9d, 0x9c, 0x95, 0x6e, 0xda, 0x96, 0xb1, 0x33, 0x9f, 0xd2, 0x0c, 0x33, 0x75, 0xcc,
	0x42, 0x7b, 0xae, 0xce, 0x95, 0x36, 0x86, 0x74, 0x71, 0x66, 0x5a, 0x49, 0x1f, 0xf9, 0xa7, 0x05,
	0x65, 0x79, 0xfb, 0x3e, 0x90, 0xc8, 0xb4, 0x80, 0x45, 0x25, 0x8e, 0x80, 0x85, 0x3f, 0xbb, 0x0b,
	0x4a, 0x48, 0xe9, 0xdd, 0x2e, 0x2e, 0x9d, 0xe0, 0xcd, 0xb8, 0xa3, 0xb3, 0xf2, 0x7d, 0x26, 0x86,
	0x01, 0x3b, 0x31, 0xcc, 0x9d, 0x26, 0x31, 0x14, 0xa6, 0x4f, 0x0c, 0xed, 0x44, 0xb0, 0x23, 0x9d,
	0x08, 0xce, 0x9c, 0x3e, 0x11, 0x7c, 0xf3, 0x7b, 0x12, 0xc1, 0x29, 0x88, 0x5f, 0xde, 0x54, 0x6a,
	0xf8, 0x3f, 0x21, 0xf1, 0x9b, 0x75, 0x57, 0xe3, 0xde, 0x5f, 0xe2, 0x87, 0xfe, 0xd4, 0xc4, 0xcf,
	0xae, 0x0f, 0x05, 0xe2, 0x67, 0x8a, 0x57, 0x84, 0xf8, 0x31, 0x5a, 0xd1, 0xcc, 0xc4, 0xcf, 0x14,
	0xbf, 0x6c, 0xc4, 0x6f, 0xf6, 0x5f, 0x88, 0x9f, 0x83, 0xf8, 0xbd, 0xa8, 0x4a, 0x6b, 0xd0, 0x2a,
	0x21, 0x03, 0x56, 0x16, 0x17, 0xc1, 0x5e, 0xd3, 0x72, 0xe2, 0x28, 0xdf, 0x91, 0x45, 0x23, 0xd4,
	0x3d, 0x6c, 0x14, 0x4b, 0x9e, 0x26, 0xc5, 0x72, 0x77, 0x96, 0x37, 0xe0, 0xb4, 0xc6, 0xf8, 0x6c,
	0xd3, 0xa6, 0x1d, 0x9d, 0x89, 0x1e, 0x25, 0x41, 0x00, 0x9d, 0x64, 0xed, 0x7d, 0x37, 0xb2, 0xb6,
	0xf6, 0x0e, 0x64, 0x2d, 0x23, 0x54, 0xdb, 0x28, 0xdd, 0xdf, 0x72, 0x0e, 0x25, 0xa9, 0xe7, 0x22,
	0xa7, 0x4a, 0xe7, 0x39, 0xc1, 0x2c, 0x15, 0xfb, 0x38, 0x67, 0x7c, 0xc8, 0x8e, 0x56, 0x7d, 0xff,
	0xd7, 0x7a, 0xb4, 0x35, 0xd9, 0xb3, 0x07, 0x46, 0xd4, 0x2f, 0x9f, 0x06, 0x33, 0x85, 0x71, 0xf5,
	0xfb, 0x63, 0xda, 0xb1, 0xc1, 0x5b, 0x4d, 0xbb, 0xb4, 0xb3, 0x87, 0x27, 0x76, 0x0f, 0x82, 0xab,
	0x2b, 0xb4, 0x4d, 0x8d, 0x7d, 0xad, 0xb5, 0x9e, 0xd3, 0x7a, 0xba, 0xb4, 0xee, 0x4b, 0xc4, 0x57,
	0xbf, 0x77, 0x3c, 0x31, 0x3a, 0xaa, 0xed, 0x1b, 0xd0, 0x46, 0xae, 0x6b, 0x6d, 0x47, 0x2c, 0x67,
	0xbb, 0x78, 0x1f, 0xec, 0x7b, 0x95, 0x37, 0x5c, 0x4b, 0xee, 0xeb, 0xe1, 0xeb, 0x89, 0x1b, 0xe3,
	0xc9, 0x81, 0xe1, 0xd4, 0xf0, 0xd9, 0xd4, 0xf8, 0x71, 0x2d, 0x76, 0xfe, 0x56, 0xd3, 0x2e, 0xaa,
	0xd1, 0xe5, 0xff, 0xc8, 0xa1, 0x45, 0x21, 0x05, 0x67, 0x8f, 0xb3, 0x67, 0x16, 0x26, 0x87, 0xaa,
	0x72, 0xaa, 0xd4, 0xc5, 0x09, 0xee, 0x75, 0xc4, 0x46, 0xf0, 0x0b, 0x25, 0xf9, 0x86, 0xfb, 0x07,
	0x89, 0x32, 0x2d, 0x3a, 0x34, 0x19, 0xef, 0x48, 0x8c, 0xb6, 0x92, 0xe9, 0x9b, 0x6b, 0x35, 0xc8,
	0xf5, 0x85, 0x2f, 0x68, 0x49, 0x22, 0xda, 0x45, 0x3f, 0x01, 0xd9, 0x35, 0x56, 0x3f, 0x76, 0x30,
	0x11, 0x3d, 0x64, 0xb4, 0x1d, 0x3b, 0xc8, 0xee, 0x9f, 0x7e, 0xe4, 0x6a, 0xf2, 0xd0, 0x29, 0xbd,
	0xb7, 0xcd, 0x98, 0xbd, 0xfb, 0x6c, 0xf8, 0x31, 0x0e, 0x2d, 0xa8, 0x55, 0x94, 0x06, 0x52, 0x0c,
	0xb9, 0xbf, 0x89, 0x4c, 0xda, 0xc5, 0xa9, 0xd2, 0x3e, 0x4e, 0x48, 0xff, 0x2e, 0x36, 0x92, 0xd9,
	0x8c, 0x76, 0x99, 0xf9, 0xce, 0x47, 0xe1, 0xbc, 0xc8, 0x49, 0xe1, 0x83, 0x30, 0xd6, 0x33, 0xb6,
	0x27, 0x11, 0xed, 0x9c, 0x38, 0xd4, 0xa4, 0x8f, 0x34, 0xc3, 0x61, 0x19, 0x85, 0x78, 0xfd, 0xf0,
	0x33, 0x35, 0xde, 0x93, 0x1a, 0xe8, 0x98, 0xee, 0x1a, 0xd2, 0x67, 0xc2, 0xbf, 0x8e, 0xf2, 0x82,
	0x0d, 0x4a, 0x08, 0x8b, 0x1f, 0x33, 0xac, 0xdc, 0xb1, 0xb4, 0x50, 0x9c, 0xa5, 0x1f, 0xec, 0x4c,
	0x8c, 0xf5, 0x33, 0x4f, 0x33, 0x7d, 0x32, 0xfd, 0x5a, 0xdc, 0xcd, 0xa9, 0xd2, 0x7e, 0x0e, 0xb5,
	0x71, 0x42, 0x86, 0xfb, 0x20, 0x6e, 0x85, 0x79, 0xd0, 0xf2, 0xe4, 0xf1, 0xa8, 0xd6, 0xfa, 0xad,
	0x65, 0x1e, 0x1d, 0x3b, 0x68, 0xe1, 0x1a, 0x1c, 0xa2, 0x54, 0xeb, 0x1e, 0xa1, 0x00, 0x6a, 0x7c,
	0xd2, 0x8f, 0x5c, 0xc5, 0x3a, 0x2b, 0x1c, 0x58, 0xf3, 0xec, 0xe5, 0xd4, 0x95, 0x73, 0xb7, 0x9a,
	0x76, 0xdd, 0xe4, 0xd8, 0x9b, 0x71, 0x93, 0xa3, 0x33, 0x2a, 0xba, 0x98, 0x4d, 0xc3, 0xcf, 0x3e,
	0x6c, 0x98, 0x6a, 0xeb, 0x74, 0x31, 0x55, 0x26, 0xd5, 0x3f, 0xad, 0xc1, 0x22, 0x2b, 0xfe, 0x28,
	0x87, 0x72, 0x22, 0xde, 0x70, 0x2d, 0x61, 0x1c, 0xd3, 0x72, 0x82, 0x1b, 0xf7, 0xd6, 0x13, 0x50,
	0xa5, 0x5a, 0x01, 0x57, 0x13, 0xab, 0x9d, 0x27, 0xd6, 0xd7, 0x02, 0x78, 0x00, 0xae, 0x3f, 0xf4,
	0x7d, 0xab, 0x69, 0x97, 0xc1, 0x47, 0x9c, 0xdf, 0xe5, 0x84, 0x37, 0x1c, 0xfb, 0x88, 0xdc, 0x31,
	0xb0, 0x59, 0xc7, 0x2e, 0x24, 0x0f, 0x9d, 0x72, 0xb4, 0x95, 0xf1, 0x50, 0x45, 0xff, 0x92, 0x43,
	0x8f, 0xac, 0x57, 0x22, 0x69, 0x48, 0x74, 0x87, 0x1b, 0x12, 0xad, 0x52, 0xa5, 0xb5, 0x76, 0x24,
	0xba, 0x8c, 0x36, 0x2c, 0xc4, 0xae, 0xca, 0xa9, 0xbd, 0x17, 0xb5, 0xd1, 0x58, 0x79, 0x29, 0xf8,
	0x2e, 0x24, 0x62, 0x07, 0x52, 0xc3, 0x37, 0xf4, 0xc3, 0x63, 0xd3, 0xc6, 0xb0, 0xc5, 0x6b, 0x55,
	0xe9, 0x45, 0x24, 0x0a, 0x6e, 0x73, 0x12, 0x97, 0x80, 0x5a, 0xcf, 0xb1, 0xc7, 0x84, 0x3e, 0xfe,
	0x7d, 0x16, 0x04, 0xaf, 0xfc, 0x27, 0x41, 0x1c, 0xa9, 0x1d, 0xc3, 0x15, 0xde, 0x8a, 0xdf, 0x51,
	0xa5, 0xf5, 0xa8, 0x4c, 0x70, 0xdd, 0x8f, 0xbb, 0x35, 0x67, 0xfc, 0xff, 0xb3, 0xd1, 0x42, 0x33,
	0x03, 0xbd, 0x0d, 0x42, 0x56, 0xda, 0x34, 0xa4, 0x77, 0x96, 0xfa, 0x3e, 0x49, 0x57, 0x8c, 0x4a,
	0xdf, 0x5b, 0xea, 0x73, 0x17, 0xf7, 0xb2, 0xef, 0x5d, 0xdc, 0xdb, 0xc8, 0xbe, 0xea, 0xca, 0x31,
	0x03, 0x86, 0xfe, 0x8c, 0x7d, 0xd5, 0xe5, 0xd2, 0x95, 0xcd, 0xa1, 0x9a, 0x79, 0xd1, 0x75, 0x88,
	0x53, 0xa5, 0x1e, 0x0e, 0x75, 0x72, 0x82, 0xeb, 0x1e, 0x8a, 0x8d, 0x70, 0x16, 0x94, 0xc5, 0xf9,
	0x81, 0x0c, 0x07, 0xff, 0x26, 0x8b, 0xc4, 0xb8, 0x7c, 0xd8, 0x2e, 0xcb, 0xc6, 0x3b, 0x24, 0x95,
	0xa0, 0x97, 0x65, 0x5a, 0x06, 0x84, 0x52, 0x55, 0x92, 0xd0, 0x9b, 0x82, 0xfb, 0x56, 0x98, 0xf7,
	0x84, 0xa1, 0x8d, 0xee, 0x46, 0x84, 0xc1, 0x5c, 0x34, 0x4f, 0xf2, 0xf9, 0x30, 0x51, 0xb7, 0xdc,
	0xde, 0xd3, 0x02, 0x78, 0x49, 0x69, 0x29, 0x17, 0xda, 0xbf, 0xd4, 0x86, 0xaf, 0x53, 0xf8, 0x36,
	0x95, 0xfc, 0x33, 0xa6, 0xa5, 0xe4, 0x2f, 0x47, 0x33, 0x0c, 0xa0, 0x09, 0x17, 0x64, 0x15, 0x66,
	0x83, 0xd9, 0xf8, 0x59, 0x01, 0x4a, 0xc4, 0x27, 0x1d, 0x1d, 0x03, 0xb4, 0x96, 0x57, 0xd0, 0xa4,
	0xee, 0x2a, 0x97, 0x93, 0xc7, 0x15, 0x70, 0x32, 0xd4, 0xe7, 0x3f, 0x46, 0x0b, 0xfc, 0x01, 0x7f,
	0x64, 0x63, 0xb0, 0xc6, 0x1f, 0xa8, 0xf0, 0x86, 0xc3, 0x9f, 0x05, 0x43, 0x3e, 0x72, 0x83, 0x56,
	0xab, 0xd2, 0x0a, 0x21, 0xfd, 0xab, 0x58, 0x30, 0xb1, 0xb7, 0x33, 0xf5, 0x45, 0xab, 0xc1, 0xd9,
	0xf4, 0xb5, 0x10, 0x49, 0x76, 0x64, 0x8f, 0x01, 0x15, 0xe9, 0x95, 0xf9, 0x90, 0x9d, 0x92, 0xe4,
	0x30, 0x4f, 0xdc, 0x58, 0x4a, 0xf2, 0x06, 0x4c, 0x9b, 0x30, 0x95, 0x18, 0x90, 0x27, 0xfa, 0x9b,
	0x52, 0xe7, 0x9b, 0x21, 0x91, 0x26, 0x3d, 0x06, 0x83, 0xeb, 0x85, 0x72, 0x7c, 0x45, 0xe0, 0xfe,
	0x95, 0x97, 0xda, 0xf9, 0xf4, 0x9b, 0x1c, 0x9a, 0x1b, 0x0c, 0xd4, 0xed, 0x04, 0x15, 0x5f, 0x79,
	0x60, 0x7b, 0x90, 0xbc, 0x09, 0xfb, 0x92, 0x53, 0xa5, 0x73, 0x9c, 0xe0, 0xf8, 0x28, 0xaa, 0x9c,
	0xc1, 0xb7, 0x19, 0xbd, 0x9d, 0x23, 0x7c, 0xa1, 0xc9, 0x1d, 0x11, 0x2b, 0xe7, 0xd1, 0x11, 0xac,
	0x99, 0x31, 0x68, 0xae, 0x5b, 0x45, 0xe0, 0x90, 0x12, 0xf1, 0x3e, 0x70, 0xed, 0x23, 0xe7, 0x64,
	0xa0, 0x87, 0xcb, 0x27, 0xb1, 0x31, 0xd1, 0x14, 0x39, 0x49, 0xd6, 0x1d, 0xfb, 0x18, 0xda, 0xf5,
	0xab, 0x20, 0xad, 0x26, 0xa2, 0x31, 0x79, 0xeb, 0xe6, 0xcd, 0xe5, 0x9b, 0xd7, 0x1b, 0x04, 0xda,
	0x31, 0xc9, 0xe2, 0x71, 0x4e, 0x95, 0x46, 0x39, 0x14, 0xe5, 0x04, 0x27, 0xbc, 0x89, 0x3d, 0x5c,
	0x72, 0xf4, 0x18, 0xcd, 0x1f, 0x41, 0xce, 0x7d, 0xfc, 0x78, 0x6a, 0xa0, 0x03, 0x76, 0x75, 0x32,
	0xde, 0x31, 0x19, 0x6f, 0xd6, 0xbf, 0x1d, 0xd4, 0x5b, 0xba, 0x8d, 0x3f, 0x4c, 0x08, 0x01, 0x16,
	0x96, 0x78, 0xc4, 0x1d, 0x1d, 0x49, 0xb5, 0xde, 0x48, 0x0d, 0x8f, 0x24, 0x62, 0x07, 0xaa, 0x77,
	0xd4, 0x53, 0xd1, 0x02, 0xce, 0x1a, 0xd4, 0x0b, 0xf8, 0x65, 0x5e, 0x67, 0x6a, 0xf7, 0x18, 0x79,
	0xca, 0xfe, 0xd5, 0xc9, 0xc4, 0xe8, 0x35, 0x78, 0x99, 0x07, 0x86, 0x67, 0xda, 0xa7, 0x5d, 0x51,
	0x0b, 0xa0, 0x56, 0xd4, 0x9d, 0x8d, 0xe6, 0x5b, 0x53, 0x7f, 0x18, 0x9f, 0xa7, 0xba, 0xb3, 0x6e,
	0x36, 0xd2, 0x0c, 0x8c, 0xd7, 0xb5, 0x51, 0x6d, 0xdf, 0x69, 0x96, 0xe5, 0x22, 0x38, 0xa7, 0x83,
	0x53, 0xa5, 0x36, 0x0e, 0xb5, 0x72, 0x42, 0xda, 0x4e, 0x88, 0xd5, 0xda, 0x99, 0x93, 0xda, 0xbe,
	0xd3, 0xec, 0xb5, 0x85, 0x29, 0xd1, 0x07, 0x91, 0xfa, 0xd1, 0x11, 0xad, 0xbb, 0x73, 0xe2, 0x7c,
	0x1b, 0xf0, 0xf0, 0x24, 0x39, 0x48, 0xc7, 0xe1, 0xd4, 0xf8, 0xde, 0xe4, 0xa0, 0xb1, 0xf9, 0xec,
	0x88, 0x46, 0xab, 0x1b, 0xe3, 0x89, 0x58, 0x97, 0x7e, 0xea, 0xdc, 0xc4, 0xd1, 0xd6, 0xe4, 0xbe,
	0xab, 0x7a, 0x53, 0x33, 0xc5, 0x5f, 0x40, 0xdd, 0xff, 0x45, 0x0e, 0x4d, 0x3f, 0xc9, 0xe2, 0xaf,
	0x5f, 0xa5, 0xe3, 0xaf, 0x37, 0x9c, 0x69, 0x84, 0x93, 0x71, 0x03, 0x88, 0xee, 0x05, 0x79, 0x95,
	0xd8, 0x91, 0xd7, 0x0a, 0x63, 0xf7, 0x08, 0xf2, 0x7a, 0x0c, 0xee, 0x36, 0xf4, 0x9d, 0xec, 0x6b,
	0x29, 0xaf, 0x80, 0x48, 0xb4, 0xe9, 0x68, 0xab, 0x17, 0x3f, 0x73, 0x34, 0x66, 0xce, 0xa4, 0x2c,
	0x6f, 0x54, 0xa5, 0x90, 0xc0, 0x14, 0x8b, 0x3e, 0xc2, 0x13, 0x9b, 0x09, 0xc4, 0xe5, 0xb2, 0x2a,
	0xa9, 0x7c, 0xf3, 0x32, 0x90, 0xf6, 0x28, 0x63, 0x91, 0x18, 0xdb, 0xa3, 0x1f, 0x1d, 0x01, 0xa9,
	0x2e, 0x11, 0x1d, 0xd5, 0xfb, 0x63, 0xcf, 0x4f, 0xc6, 0x3b, 0xaa, 0xca, 0xe4, 0x4d, 0xe5, 0x9b,
	0xa5, 0xaa, 0xb2, 0x65, 0x5a, 0xf7, 0x45, 0xfd, 0xd0, 0x88, 0xde, 0xd1, 0xac, 0x77, 0xb4, 0x4f,
	0xec, 0xed, 0x26, 0x00, 0x6f, 0x82, 0xfa, 0xf3, 0x32, 0x33, 0x22, 0xff, 0x37, 0x96, 0x86, 0x00,
	0x64, 0x50, 0x9f, 0x2a, 0x79, 0x2d, 0xfd, 0xc0, 0x7b, 0x89, 0x68, 0x67, 0x72, 0x78, 0x80, 0xa0,
	0xb9, 0xb3, 0x2d, 0x89, 0x58, 0x57, 0x62, 0x74, 0x34, 0x31, 0xd6, 0x0b, 0xc7, 0x33, 0xb1, 0x7b,
	0xcc, 0xa1, 0x3f, 0x20, 0x3c, 0x3e, 0xbc, 0x1a, 0x6d, 0xeb, 0xa3, 0x7a, 0xc3, 0xc9, 0x78, 0xc7,
	0xe6, 0x60, 0x44, 0x56, 0xbc, 0xbe, 0x9d, 0xc9, 0xa1, 0x76, 0xcb, 0x59, 0x2b, 0xac, 0x4a, 0x0d,
	0x28, 0x20, 0xb8, 0x9c, 0xaa, 0x58, 0x4a, 0x44, 0x5d, 0xbc, 0xb9, 0x20, 0x54, 0x62, 0x89, 0xbd,
	0x0b, 0x30, 0x07, 0x15, 0xe3, 0x13, 0xd1, 0xfd, 0xfa, 0xc9, 0xab, 0x50, 0x68, 0xd2, 0x8d, 0x64,
	0x5f, 0x0b, 0xcc, 0xd9, 0xf5, 0x62, 0xef, 0xcf, 0xa6, 0xc9, 0x35, 0x7f, 0xfc, 0x77, 0x1b, 0xb6,
	0xc7, 0xe5, 0x6e, 0xb7, 0x72, 0xaa, 0xd4, 0xcc, 0xa1, 0x3f, 0x08, 0x6e, 0x7b, 0x21, 0x7e, 0x00,
	0xed, 0x32, 0xdd, 0x6b, 0x28, 0x61, 0xeb, 0xd0, 0xeb, 0x3c, 0x19, 0xef, 0x20, 0x9a, 0x1c, 0x66,
	0x7c, 0x30, 0x25, 0xe8, 0x6d, 0x3d, 0xda, 0xbe, 0x53, 0x8e, 0x4b, 0xbd, 0x2f, 0x1b, 0x3d, 0xb6,
	0x29, 0x48, 0x14, 0x25, 0x55, 0x41, 0x1b, 0xd7, 0xfe, 0x5e, 0xfa, 0xcd, 0x7e, 0x19, 0x47, 0x2d,
	0xb0, 0x6e, 0x76, 0xde, 0xbd, 0xdc, 0xe9, 0x4a, 0xfb, 0x9d, 0x7e, 0x5d, 0x95, 0x56, 0x9a, 0x77,
	0xfa, 0x19, 0xe3, 0xbf, 0x42, 0xf3, 0x26, 0xe3, 0x17, 0xd1, 0x4d, 0xda, 0xd9, 0x0b, 0xec, 0x43,
	0xf5, 0x35, 0xab, 0x57, 0xdf, 0xf6, 0xcc, 0x52, 0xb9, 0xdc, 0x3c, 0x6e, 0xbe, 0xcf, 0xba, 0xe3,
	0xdb, 0xec, 0xac, 0x03, 0xdc, 0xf1, 0xb7, 0x0c, 0xd1, 0xdb, 0xc6, 0x3a, 0x2c, 0xa4, 0xa2, 0xc2,
	0x66, 0xab, 0x74, 0xba, 0x02, 0xe7, 0xc7, 0xaa, 0xf4, 0x21, 0x7a, 0x5f, 0xc8, 0xb4, 0x61, 0x4c,
	0x46, 0xef, 0x44, 0x74, 0x88, 0x1c, 0xcc, 0x85, 0x51, 0x4a, 0xff, 0xf5, 0xcb, 0xa7, 0x99, 0xd4,
	0xe7, 0x2e, 0x57, 0xe3, 0x50, 0x16, 0x2a, 0x48, 0xef, 0xfb, 0xa1, 0xb8, 0x1f, 0x66, 0xbe, 0xd0,
	0x8c, 0xf3, 0x17, 0x9f, 0xd3, 0x2e, 0xed, 0xc9, 0xb8, 0x27, 0x4c, 0x8f, 0xe9, 0x5c, 0xf3, 0x7f,
	0xcf, 0x42, 0x4b, 0x64, 0xa5, 0xde, 0xec, 0x78, 0x5d, 0x28, 0x58, 0xff, 0x83, 0xc0, 0x69, 0x99,
	0x1d, 0x4e, 0x57, 0xb9, 0xd0, 0x1e, 0x4c, 0x1b, 0x6c, 0xb4, 0xe7, 0xcf, 0x03, 0x99, 0x24, 0xcd,
	0xc7, 0x54, 0xdb, 0x24, 0x2e, 0xa5, 0xd8, 0xdb, 0xda, 0x7a, 0x3c, 0xff, 0x29, 0x90, 0xf5, 0xe9,
	0x2c, 0xf4, 0x84, 0x7b, 0x9f, 0x0f, 0x07, 0x54, 0x92, 0xc8, 0xf6, 0x53, 0xae, 0x41, 0x7c, 0x8d,
	0x0a, 0xe9, 0xec, 0x7e, 0x50, 0xb4, 0xcb, 0xe2, 0x53, 0xa8, 0xc0, 0xe2, 0xd3, 0xa2, 0x7f, 0xcc,
	0x46, 0x05, 0x25, 0x75, 0x8a, 0x37, 0x40, 0x54, 0xb5, 0x3f, 0x08, 0x68, 0x6e, 0xb0, 0x83, 0xe6,
	0x4b, 0xac, 0x4c, 0x07, 0xa0, 0x09, 0xba, 0x69, 0xed, 0xf8, 0x49, 0xfd, 0xd0, 0xd5, 0x3f, 0x3f,
	0x80, 0xf2, 0x9b, 0x19, 0xcd, 0x75, 0x8e, 0x15, 0x00, 0xc7, 0x5d, 0x73, 0x9d, 0xb1, 0x4b, 0x4b,
	0x95, 0xfd, 0x99, 0x2a, 0x45, 0x50, 0x48, 0xc8, 0xb8, 0xf3, 0xe2, 0xf3, 0x89, 0x51, 0xcb, 0x78,
	0x90, 0x88, 0x0e, 0xb1, 0xfb, 0x61, 0xb2, 0x2b, 0x6e, 0x80, 0x6f, 0xd7, 0x54, 0xc3, 0x0e, 0xb1,
	0x1a, 0xeb, 0xc3, 0xd9, 0xe8, 0x71, 0x97, 0x41, 0x1f, 0x0e, 0x26, 0xe6, 0x9d, 0x69, 0x30, 0x31,
	0x36, 0x1f, 0x68, 0xe8, 0xa4, 0xaf, 0x05, 0x76, 0x0f, 0x58, 0x0c, 0xc2, 0xc1, 0x74, 0x72, 0xaa,
	0xd4, 0xce, 0xa1, 0x3d, 0x9c, 0x90, 0x79, 0x3f, 0x44, 0x3f, 0x6b, 0xcc, 0xb2, 0x6e, 0xd4, 0xa1,
	0xcb, 0x89, 0x58, 0x57, 0x6a, 0xe4, 0x1c, 0xd0, 0xc2, 0x44, 0x34, 0xa6, 0xc5, 0x77, 0xe9, 0x43,
	0xe7, 0xa8, 0x47, 0xac, 0xf1, 0x09, 0x78, 0x9c, 0xd1, 0xd6, 0xd4, 0xee, 0x31, 0xb8, 0x81, 0xec,
	0x1c, 0xc8, 0x0d, 0x1c, 0xfa, 0x42, 0x8b, 0x46, 0xc1, 0x47, 0xa0, 0xe8, 0x7f, 0xcc, 0x42, 0x05,
	0xa6, 0x76, 0xe6, 0x61, 0x3b, 0x97, 0x75, 0x36, 0x5d, 0xd5, 0x42, 0x37, 0x5d, 0x15, 0xa4, 0x62,
	0x81, 0x73, 0x59, 0x80, 0xa1, 0xd2, 0x25, 0xd9, 0x69, 0x95, 0x2a, 0xbd, 0x8b, 0xb6, 0x08, 0x19,
	0xf7, 0x41, 0x7c, 0x06, 0x86, 0x4f, 0x9d, 0xf9, 0xca, 0xc2, 0x79, 0xa6, 0xf9, 0xc6, 0xe8, 0xd4,
	0x91, 0xfa, 0x14, 0x78, 0xc4, 0xff, 0x27, 0x0b, 0x3d, 0x09, 0xe6, 0x64, 0xdc, 0x59, 0xa9, 0x12,
	0xf6, 0x87, 0x14, 0x2c, 0x8f, 0xde, 0xad, 0x19, 0x35, 0x0d, 0x71, 0xb8, 0x61, 0x3b, 0x3b, 0xe2,
	0xd8, 0x88, 0xa3, 0x6b, 0x9a, 0x03, 0xe2, 0xd3, 0x98, 0x43, 0x9c, 0x55, 0x98, 0x72, 0xb1, 0x40,
	0xef, 0x3f, 0xa5, 0xf7, 0x1f, 0xb7, 0x34, 0x70, 0x70, 0xf5, 0x7b, 0x21, 0xc6, 0xa6, 0x59, 0x8d,
	0x2f, 0x65, 0xd0, 0x10, 0x93, 0xde, 0xd4, 0x42, 0x43, 0x3c, 0xe8, 0x3b, 0x00, 0x19, 0x25, 0x62,
	0x31, 0xed, 0xc0, 0x51, 0xd3, 0x5b, 0xc8, 0x42, 0x3e, 0x24, 0x4c, 0xfe, 0xd4, 0x9b, 0x22, 0x3e,
	0xe5, 0x30, 0xce, 0xc3, 0x0c, 0xa9, 0x70, 0xa4, 0xf7, 0x5e, 0x72, 0x62, 0x1b, 0x76, 0xaa, 0x2c,
	0xce, 0xe9, 0xcd, 0x42, 0x4b, 0x33, 0x8d, 0xf5, 0x70, 0xd0, 0x61, 0x02, 0x98, 0x77, 0x58, 0x85,
	0xb8, 0xc2, 0x75, 0xcb, 0xe8, 0x7e, 0x51, 0xee, 0x19, 0x7a, 0x2f, 0xfa, 0x07, 0x84, 0x16, 0x80,
	0xd2, 0xcb, 0xc0, 0x5c, 0x26, 0x30, 0xfe, 0x35, 0xca, 0x8b, 0x78, 0xc3, 0xb5, 0x38, 0xa2, 0x11,
	0x67, 0x3a, 0x55, 0x7f, 0x2c, 0xd0, 0x42, 0x51, 0x06, 0x1c, 0x42, 0x1f, 0x51, 0x80, 0xd8, 0x6c,
	0xbe, 0xce, 0xc6, 0x37, 0x6f, 0x32, 0xde, 0x61, 0xaa, 0x5c, 0xaa, 0x82, 0x56, 0x19, 0x23, 0xab,
	0x19, 0x6c, 0x04, 0xf9, 0x60, 0xc8, 0xd4, 0xb4, 0x77, 0xbe, 0x06, 0xe5, 0x86, 0x23, 0xde, 0x48,
	0x63, 0x98, 0x6c, 0xec, 0x16, 0xbc, 0x3b, 0x50, 0x24, 0xce, 0x26, 0x43, 0x63, 0x01, 0xfe, 0xb6,
	0xe7, 0x85, 0xd0, 0x1a, 0x79, 0x76, 0xf9, 0xe6, 0xf2, 0xaa, 0x72, 0x69, 0x63, 0xf9, 0x07, 0xe5,
	0x9b, 0xd7, 0xcb, 0x33, 0x89, 0x52, 0x4f, 0x9e, 0x59, 0xb9, 0xb5, 0xa4, 0xa4, 0xac, 0xb2, 0x52,
	0xce, 0x5d, 0x27, 0x95, 0x6f, 0x2c, 0x2b, 0x95, 0x67, 0x56, 0x95, 0x6f, 0x2a, 0xdb, 0xb2, 0xb5,
	0x4a, 0x26, 0x7d, 0xf1, 0x1f, 0x5b, 0x47, 0x08, 0xa0, 0x8c, 0x5f, 0x0f, 0xd3, 0x23, 0xfc, 0x39,
	0xc1, 0x94, 0xed, 0x17, 0x52, 0x03, 0x1d, 0x54, 0xcb, 0xa3, 0xef, 0x3b, 0x37, 0x71, 0xe8, 0x98,
	0x7e, 0xe4, 0x6a, 0x22, 0x1a, 0x83, 0xd3, 0xd5, 0xbb, 0x7b, 0x92, 0x67, 0x63, 0x96, 0xad, 0x8f,
	0x1e, 0xf3, 0x8b, 0x68, 0x46, 0x38, 0xe2, 0x0d, 0x45, 0x08, 0xbd, 0x5e, 0xaa, 0x4a, 0x4b, 0x04,
	0x28, 0x11, 0x79, 0xe2, 0x5b, 0xd0, 0x33, 0xa2, 0xed, 0x1b, 0xd4, 0x8f, 0x5c, 0x9d, 0x38, 0x72,
	0x45, 0x86, 0x4f, 0xfc, 0x4a, 0x94, 0xad, 0x04, 0x7c, 0xc4, 0x3a, 0x8d, 0x71, 0x96, 0xf1, 0xdb,
	0x6c, 0x61, 0x1c, 0xdc, 0x89, 0x53, 0xa4, 0x85, 0xf1, 0x81, 0xdf, 0x88, 0xe6, 0x28, 0x9f, 0x2b,
	0xd5, 0x8d, 0x11, 0x7f, 0x30, 0x50, 0xe5, 0xaf, 0x37, 0x23, 0x06, 0xc3, 0xfb, 0x0b, 0xdb, 0x17,
	0xb3, 0x0f, 0x58, 0x11, 0xe9, 0xc3, 0x5e, 0x85, 0xdf, 0x8a, 0xf2, 0xab, 0x1b, 0x43, 0x21, 0x25,
	0x10, 0xa9, 0x8c, 0x28, 0x0d, 0x24, 0x3e, 0x16, 0x8e, 0x70, 0xc4, 0x96, 0x8b, 0x4f, 0x91, 0x9e,
	0x86, 0xbe, 0xc0, 0x09, 0x60, 0x8c, 0xfe, 0x0c, 0x22, 0x37, 0x74, 0x6e, 0xe2, 0x22, 0x89, 0x13,
	0x25, 0xb3, 0xf5, 0xf9, 0x77, 0xd1, 0xec, 0x70, 0x44, 0x69, 0xa8, 0x34, 0x20, 0x2c, 0x50, 0xad,
	0x60, 0xd7, 0x32, 0xac, 0x8c, 0x2a, 0x12, 0x6c, 0x1f, 0x1c, 0x53, 0xc4, 0xfd, 0xdd, 0xf6, 0xcc,
	0x50, 0xb9, 0xac, 0x3c, 0x4e, 0xb6, 0xd5, 0xe4, 0x8f, 0x71, 0xc6, 0xf6, 0x2a, 0x0d, 0xa6, 0xbf,
	0xd8, 0x72, 0x77, 0x67, 0x69, 0x06, 0xb0, 0x57, 0x1a, 0x53, 0x21, 0x9e, 0x62, 0x5b, 0x55, 0xe9,
	0x6d, 0x01, 0xda, 0x8b, 0x6f, 0xc2, 0x98, 0xa9, 0x91, 0xf3, 0xc9, 0xd1, 0x3d, 0x30, 0xa6, 0xa5,
	0xd4, 0x63, 0x62, 0xa3, 0x41, 0x21, 0xd0, 0x52, 0x9c, 0x8c, 0x74, 0x97, 0x16, 0x8d, 0xea, 0x47,
	0xae, 0xde, 0xf6, 0xcc, 0xec, 0xe3, 0x72, 0xf2, 0xb8, 0xf9, 0x0b, 0x65, 0xe8, 0x91, 0xff, 0x35,
	0xcb, 0xb5, 0x82, 0x4b, 0x99, 0x07, 0x67, 0x2f, 0xb3, 0xb8, 0x56, 0xba, 0xd0, 0x26, 0xed, 0xf2,
	0x49, 0xe0, 0x60, 0xef, 0xe6, 0xe1, 0xc1, 0x07, 0xac, 0xe9, 0x0c, 0x7c, 0xc9, 0x5e, 0xc3, 0x23,
	0x58, 0xa6, 0x33, 0xfb, 0x08, 0xd8, 0x68, 0x36, 0xc5, 0x93, 0x03, 0x5b, 0xf6, 0x78, 0xea, 0xa2,
	0x3d, 0xdb, 0x2d, 0x15, 0x06, 0x81, 0x5d, 0xcc, 0x35, 0x24, 0x62, 0x31, 0x97, 0x54, 0x18, 0xe5,
	0x08, 0xd5, 0x79, 0xc3, 0x11, 0x40, 0x56, 0x24, 0xe6, 0x16, 0x4e, 0xaa, 0xc5, 0x14, 0x8b, 0x05,
	0x44, 0xab, 0x13, 0xdd, 0xa7, 0x7f, 0x3d, 0x00, 0x78, 0x8b, 0xc0, 0x24, 0x53, 0x6b, 0xf1, 0x66,
	0x84, 0xac, 0x63, 0x73, 0x71, 0xfd, 0x12, 0xec, 0xaf, 0x68, 0xd3, 0x48, 0xbf, 0xd1, 0x98, 0x75,
	0x08, 0x6b, 0x50, 0xa5, 0x7a, 0x54, 0x2b, 0xa4, 0xa3, 0x3d, 0xd3, 0x11, 0xda, 0x04, 0x06, 0x50,
	0x32, 0x50, 0xb4, 0x74, 0x93, 0xb3, 0x81, 0xdf, 0x4d, 0x0e, 0x8e, 0xda, 0xce, 0xfb, 0xb2, 0x51,
	0xdd, 0x69, 0xe4, 0x8a, 0xff, 0xc8, 0x99, 0xd1, 0x9a, 0x60, 0xb4, 0x87, 0x83, 0xa3, 0x5a, 0x76,
	0x67, 0x4e, 0x97, 0x78, 0x87, 0x4d, 0xe6, 0xa2, 0x05, 0x70, 0x58, 0x2c, 0x11, 0xd9, 0x82, 0x72,
	0x8d, 0xad, 0xbb, 0x4b, 0x9f, 0xb0, 0xa7, 0x5d, 0xde, 0xc2, 0x40, 0x37, 0x3f, 0x1e, 0xb2, 0x40,
	0x10, 0x7c, 0xce, 0x3d, 0x23, 0xf8, 0x19, 0xf7, 0x11, 0xc1, 0xe7, 0xde, 0x27, 0x04, 0x6f, 0x61,
	0xe3, 0x99, 0xee, 0xd8, 0x38, 0x0d, 0x42, 0x7e, 0x38, 0x6c, 0xfc, 0x96, 0xe5, 0x75, 0x9b, 0xc7,
	0xe0, 0x33, 0xcb, 0xeb, 0x16, 0x96, 0x8a, 0x31, 0x90, 0x1d, 0x9f, 0x91, 0x2a, 0xf7, 0x1d, 0x09,
	0xbd, 0xae, 0x4a, 0xc5, 0xe8, 0x65, 0x21, 0xfd, 0xda, 0x88, 0xf3, 0x61, 0x1a, 0x46, 0x91, 0x89,
	0x82, 0xc8, 0x05, 0x60, 0x5e, 0xef, 0xff, 0xdf, 0x9c, 0x19, 0x54, 0xe6, 0x61, 0xc2, 0x28, 0x6f,
	0x4f, 0x43, 0x76, 0xc6, 0x3c, 0x12, 0xc8, 0x68, 0x8f, 0x50, 0xa7, 0x54, 0xcb, 0xd3, 0x92, 0x60,
	0x9c, 0xdd, 0x59, 0x68, 0x01, 0x70, 0x92, 0x2c, 0xc6, 0x59, 0xef, 0xc0, 0x38, 0xab, 0x54, 0x89,
	0x17, 0x48, 0x91, 0x98, 0x07, 0x87, 0x3c, 0x2d, 0x4c, 0x13, 0x71, 0xfa, 0x9d, 0x7e, 0xa0, 0x4a,
	0xbf, 0xb0, 0xac, 0x4a, 0x1b, 0x59, 0xa3, 0x91, 0x35, 0x37, 0x1c, 0xd1, 0xf3, 0xdb, 0xc4, 0xd8,
	0xb8, 0xde, 0x7f, 0x11, 0xe4, 0x6a, 0xb8, 0x36, 0xda, 0x70, 0x87, 0xde, 0x86, 0xbd, 0x1b, 0xaf,
	0x9f, 0xc2, 0xce, 0xa3, 0xc7, 0xb5, 0xd6, 0x73, 0xc9, 0xd1, 0x36, 0x7d, 0xe8, 0x0c, 0xeb, 0x26,
	0x6a, 0x46, 0xf3, 0x4e, 0x5f, 0x98, 0x38, 0x9b, 0xbc, 0xfb, 0xc7, 0x2b, 0xa0, 0xf0, 0x50, 0xd4,
	0x94, 0x65, 0x9a, 0x13, 0x1f, 0x26, 0x28, 0xd8, 0x30, 0x0d, 0x28, 0x78, 0xca, 0x10, 0x29, 0x01,
	0x0a, 0x1e, 0x65, 0x1d, 0xfe, 0xd2, 0x00, 0x61, 0x2f, 0x87, 0xe6, 0xae, 0x57, 0x22, 0x2c, 0x14,
	0xac, 0x73, 0x40, 0xc1, 0x4a, 0x55, 0x5a, 0x40, 0xa1, 0x60, 0xa6, 0x51, 0xb3, 0x70, 0x3a, 0x40,
	0x50, 0xbc, 0x42, 0x95, 0x04, 0xb4, 0x4c, 0x70, 0x74, 0x2f, 0x3e, 0x0a, 0x4e, 0x05, 0xd6, 0x4c,
	0x88, 0x47, 0xdc, 0x3f, 0xcf, 0xc2, 0x01, 0x07, 0x7e, 0xcc, 0xf7, 0x91, 0xfa, 0xc1, 0x39, 0x8f,
	0xc1, 0x0c, 0x03, 0xed, 0xdc, 0x80, 0xbb, 0xf5, 0x7e, 0xfb, 0xd7, 0x33, 0xd0, 0xbc, 0x8d, 0xfe,
	0xb0, 0xed, 0x38, 0xab, 0xd3, 0xf5, 0xbf, 0x65, 0xaa, 0xf4, 0x2a, 0xcb, 0x49, 0xaf, 0xb4, 0xf8,
	0xdc, 0x7b, 0x7c, 0xbb, 0x64, 0x8b, 0x2e, 0x9e, 0x65, 0x2a, 0x57, 0x97, 0xb1, 0xcc, 0xf4, 0x12,
	0xc7, 0x20, 0xac, 0x13, 0x1a, 0xf4, 0x68, 0x4b, 0x28, 0xf3, 0x86, 0xc5, 0x42, 0x67, 0x5b, 0x2f,
	0xbd, 0xdc, 0x59, 0x68, 0xac, 0xb1, 0x35, 0xc3, 0x0e, 0x10, 0x06, 0xfa, 0x0d, 0x67, 0x02, 0x99,
	0xa7, 0x33, 0x93, 0x2c, 0xb6, 0xbd, 0xf9, 0x2a, 0x84, 0x15, 0xe1, 0x67, 0xfc, 0xf0, 0x22, 0x7c,
	0x88, 0xf2, 0x6a, 0xc0, 0x5f, 0x60, 0x04, 0x6a, 0xf2, 0x6a, 0x9b, 0x58, 0x5e, 0x6d, 0x19, 0xcb,
	0xa5, 0x2d, 0x2f, 0x24, 0x5c, 0xda, 0xf2, 0x42, 0xc2, 0xa5, 0x2d, 0x2f, 0x04, 0x2e, 0x6d, 0x79,
	0x21, 0xe1, 0xd2, 0x96, 0x17, 0xae, 0xdb, 0x22, 0x97, 0x94, 0x51, 0x77, 0x81, 0xe7, 0x4d, 0xb6,
	0xad, 0x78, 0x1f, 0xa7, 0x4a, 0x7b, 0x38, 0xb4, 0x9b, 0x13, 0x9c, 0x40, 0x24, 0x36, 0x00, 0x1c,
	0x1a, 0xd3, 0xfb, 0x81, 0x9c, 0xfe, 0xa2, 0x59, 0x10, 0x97, 0xe2, 0x61, 0xc2, 0x07, 0xeb, 0xa7,
	0xd6, 0xa1, 0x62, 0x7c, 0x30, 0x2d, 0x57, 0xbf, 0xd7, 0x54, 0xe9, 0x15, 0xb4, 0x56, 0x48, 0xdb,
	0x00, 0x33, 0xb8, 0x2d, 0x61, 0xf0, 0x32, 0xb8, 0xf8, 0xfd, 0x7b, 0x1e, 0x2d, 0x05, 0x38, 0x64,
	0x9e, 0xd8, 0x6d, 0xc1, 0x19, 0x7e, 0x4c, 0xa4, 0xe0, 0x47, 0x0b, 0xfc, 0x61, 0xe3, 0x8b, 0x52,
	0xfa, 0x59, 0x30, 0x50, 0x86, 0xdf, 0xef, 0xe1, 0x5d, 0xcd, 0x83, 0x18, 0x56, 0xe9, 0x5f, 0xc5,
	0x9f, 0xb2, 0xaf, 0x01, 0xc1, 0x29, 0x23, 0x3d, 0x7e, 0x72, 0x7a, 0x3b, 0x7e, 0x1f, 0x87, 0xf2,
	0x94, 0xcf, 0x1b, 0xbc, 0x01, 0x9f, 0x12, 0x22, 0xa7, 0x80, 0x7d, 0xc7, 0x69, 0xa1, 0xf8, 0x89,
	0x76, 0xb6, 0x2f, 0x11, 0xbd, 0x48, 0x42, 0x62, 0x8d, 0xb6, 0x24, 0xa2, 0xfb, 0x89, 0xcb, 0xd7,
	0xf0, 0x11, 0xfd, 0xdb, 0x5e, 0xec, 0x0d, 0xd6, 0x06, 0x03, 0x4d, 0xc6, 0xdb, 0x43, 0xde, 0x80,
	0x2f, 0x58, 0x3f, 0x19, 0xef, 0xa8, 0x0f, 0x86, 0x23, 0x2b, 0x1a, 0x82, 0xbe, 0xf0, 0x64, 0xbc,
	0xa3, 0x4e, 0xf1, 0x86, 0x23, 0x2b, 0x3e, 0xf3, 0x86, 0x23, 0xca, 0x64, 0xbc, 0x4d, 0xef, 0x6f,
	0xd2, 0x2e, 0x1d, 0xd0, 0xbf, 0xbb, 0x88, 0x43, 0xb0, 0xb7, 0xcb, 0x74, 0x28, 0x3e, 0x88, 0xf8,
	0x7a, 0xef, 0xe7, 0x65, 0xf5, 0x0d, 0x91, 0x9d, 0x9e, 0xc6, 0xba, 0x5a, 0xb8, 0x89, 0x24, 0xa6,
	0x3c, 0x7e, 0x07, 0xe8, 0xf2, 0x59, 0x7c, 0x56, 0xbb, 0x7e, 0x55, 0xeb, 0x3e, 0x40, 0xd4, 0xb2,
	0xbd, 0x97, 0x88, 0x5b, 0x19, 0xf6, 0x81, 0xa3, 0xeb, 0x5f, 0xb3, 0x5a, 0x76, 0x69, 0xcb, 0xff,
	0x1e, 0xcd, 0xc5, 0x6f, 0x22, 0x4b, 0x83, 0x9f, 0x05, 0x4a, 0x95, 0x3a, 0xef, 0x4e, 0x8c, 0x8d,
	0xe6, 0x78, 0x2a, 0x55, 0xa9, 0x42, 0x70, 0x7c, 0x12, 0xdf, 0x00, 0x0c, 0x0b, 0x03, 0x69, 0x3d,
	0xff, 0x1f, 0x7b, 0x57, 0x1b, 0x1c, 0x55, 0xf5, 0xde, 0xe7, 0x2c, 0x7d, 0xb1, 0x17, 0x23, 0x70,
	0x08, 0x82, 0x17, 0xf2, 0x76, 0x93, 0x00, 0x2e, 0x84, 0x0d, 0x2b, 0x30, 0x05, 0xab, 0xf5, 0x8a,
	0x95, 0xa6, 0x32, 0x1a, 0x79, 0x11, 0x1d, 0x3a, 0xd5, 0x35, 0xbb, 0xc8, 0x4a, 0xd8, 0x5d, 0x77,
	0x37, 0x5a, 0x4d, 0x19, 0x79, 0x4b, 0x20, 0x84, 0x10, 0xb8, 0x12, 0x95, 0x18, 0xc0, 0x48, 0x80,
	0x34, 0x90, 0x17, 0x5e, 0x0a, 0x09, 0x09, 0x52, 0x5b, 0xfd, 0x60, 0x47, 0x9d, 0x4e, 0x3b, 0xd3,
	0xe9, 0x74, 0x9c, 0xa9, 0x1d, 0xf7, 0xee, 0x6e, 0x3e, 0x74, 0x6c, 0x67, 0xda, 0x2f, 0x9d, 0xd1,
	0x76, 0xee, 0x79, 0xb9, 0x7b, 0xee, 0xbd, 0xe7, 0xdc, 0xdd, 0xa0, 0x23, 0x65, 0xfe, 0x7c, 0xdc,
	0x73, 0x9e, 0xbd, 0xf7, 0xf7, 0x3c, 0xe7, 0x9c, 0xe7, 0x3e, 0xe7, 0x39, 0xcf, 0x79, 0x9e, 0x23,
	0x7a, 0x5f, 0xf7, 0x64, 0xd7, 0x2d, 0xbc, 0x0b, 0x31, 0xe4, 0x7e, 0xbe, 0x5d, 0x3f, 0xd8, 0xa7,
	0x0f, 0x75, 0xdb, 0xa4, 0xbf, 0xbc, 0x56, 0x3f, 0xd8, 0x3a, 0xa9, 0x9d, 0xde, 0x60, 0x7b, 0x1e,
	0xec, 0x00, 0xd2, 0x1c, 0xb3, 0x69, 0x73, 0x24, 0x12, 0x0a, 0x05, 0x43, 0x41, 0x66, 0x03, 0xb4,
	0x45, 0x53, 0x37, 0x79, 0xf9, 0x14, 0xfe, 0x47, 0xe9, 0x81, 0xc9, 0xa9, 0xcc, 0xf8, 0x20, 0x2a,
	0xb1, 0x7a, 0x59, 0xef, 0xeb, 0xd6, 0x47, 0x8e, 0xe1, 0x77, 0xe9, 0x47, 0x8f, 0x64, 0x3f, 0xb9,
	0x20, 0x02, 0xc2, 0x7f, 0x26, 0xbc, 0x04, 0xa4, 0x92, 0x5c, 0x4f, 0x32, 0xdc, 0x18, 0x7e, 0x07,
	0x5d, 0xc1, 0xdc, 0xb4, 0x3d, 0x1e, 0x0a, 0x6c, 0x8f, 0x36, 0x06, 0x89, 0xe7, 0x6d, 0x87, 0xa6,
	0x6e, 0xf7, 0xba, 0x53, 0xfa, 0xd7, 0x11, 0x7c, 0xe8, 0xe6, 0x0b, 0x8e, 0xef, 0x33, 0x94, 0xc7,
	0xcd, 0x23, 0xa9, 0x1b, 0x47, 0x30, 0xd0, 0xcc, 0x89, 0x4f, 0xf5, 0x83, 0xad, 0xe9, 0xe1, 0xe3,
	0x58, 0x68, 0x58, 0xdf, 0x4c, 0x7e, 0x70, 0x99, 0x9d, 0xb5, 0x2b, 0x6b, 0x37, 0xb8, 0xbf, 0xc7,
	0x90, 0xe1, 0x43, 0x89, 0x1d, 0x61, 0x7c, 0x0b, 0x66, 0x4b, 0x38, 0xb9, 0x7d, 0x7d, 0xb4, 0x21,
	0xd0, 0xb8, 0x31, 0x19, 0x8d, 0x1b, 0x5a, 0x05, 0x57, 0x10, 0x7d, 0x4e, 0x53, 0xd7, 0x7b, 0xc5,
	0x54, 0x7e, 0x9f, 0x7e, 0xeb, 0x66, 0xa6, 0xeb, 0x6c, 0xba, 0xa7, 0x2d, 0xdd, 0x73, 0x51, 0xef,
	0x19, 0xd1, 0x07, 0x3f, 0xd4, 0xf7, 0xf6, 0x9b, 0x6e, 0x78, 0xe7, 0x32, 0x12, 0x3f, 0x0b, 0x9e,
	0x02, 0xd2, 0x5c, 0x4b, 0xef, 0xc6, 0xb7, 0x13, 0xc9, 0xd0, 0xce, 0xfa, 0x68, 0x30, 0x81, 0xf6,
	0x66, 0x24, 0x82, 0x4b, 0x44, 0xe3, 0x7f, 0x1a, 0x63, 0xd9, 0xd1, 0xf4, 0x6a, 0xa8, 0x26, 0x81,
	0x9a, 0xcb, 0x9f, 0xdd, 0x98, 0x1a, 0x6d, 0x9f, 0x3c, 0x79, 0xea, 0xa9, 0x40, 0x68, 0x67, 0x34,
	0xb2, 0x31, 0x94, 0x34, 0xcf, 0x63, 0xea, 0xa3, 0x41, 0x27, 0x4a, 0x0c, 0x51, 0xf4, 0x02, 0x78,
	0x14, 0x48, 0xf3, 0xc3, 0xaf, 0x45, 0xa2, 0xf1, 0x90, 0xf9, 0xbc, 0x04, 0x23, 0x59, 0x52, 0xb1,
	0x14, 0xdd, 0x0f, 0x75, 0xa3, 0xf3, 0x2f, 0xc5, 0x40, 0x73, 0xa0, 0x68, 0xc9, 0x85, 0xec, 0x50,
	0x6f, 0x66, 0xe8, 0x03, 0x1b, 0x1c, 0xb7, 0x47, 0xc1, 0xf3, 0x40, 0x9a, 0x1d, 0xdd, 0xb1, 0x29,
	0x9a, 0x0c, 0x34, 0x6e, 0x8e, 0xc4, 0x43, 0x81, 0xe0, 0xdb, 0x6b, 0xa3, 0x4d, 0x24, 0xa5, 0x5f,
	0x11, 0x8e, 0xc2, 0xe3, 0xf5, 0xfb, 0xb7, 0x12, 0x05, 0x5e, 0x13, 0xa0, 0x57, 0x9b, 0xe3, 0x7a,
	0x4f, 0xbf, 0x59, 0x8c, 0x5b, 0x3f, 0xd6, 0x9f, 0xee, 0x39, 0x9d, 0xbe, 0xd8, 0x9b, 0xee, 0x32,
	0x36, 0x59, 0x38, 0xa4, 0x56, 0x1f, 0x1e, 0xa3, 0x2b, 0xe7, 0x23, 0x63, 0xef, 0xb2, 0xe7, 0xac,
	0x7e, 0xe3, 0xba, 0x7e, 0xb0, 0x2f, 0xfd, 0xfe, 0xa0, 0x09, 0xf9, 0x91, 0xf4, 0xc5, 0xde, 0x0d,
	0xbc, 0x37, 0xc2, 0x2f, 0x81, 0xf4, 0xd0, 0xce, 0xc0, 0x9f, 0xb3, 0x1d, 0xf5, 0xa1, 0x78, 0x43,
	0x28, 0x92, 0x34, 0x66, 0xdb, 0x74, 0x84, 0x17, 0x7f, 0xa6, 0xbd, 0x62, 0x3a, 0x7f, 0x18, 0x87,
	0x2c, 0xa5, 0x7b, 0x06, 0xf4, 0x91, 0x4b, 0x99, 0xf1, 0x01, 0x72, 0x7a, 0x31, 0x7c, 0x3c, 0xf5,
	0x29, 0xca, 0xd8, 0x44, 0x19, 0xc0, 0x2d, 0xa9, 0xb1, 0x76, 0x8c, 0xde, 0xc9, 0xad, 0xc1, 0xcf,
	0x9e, 0x9e, 0xf4, 0x20, 0xfa, 0x34, 0xef, 0xeb, 0x37, 0x83, 0xf0, 0x30, 0x1b, 0x2b, 0x56, 0x56,
	0x6f, 0x10, 0xa3, 0x80, 0x43, 0x40, 0x2a, 0x66, 0xf4, 0x00, 0xea, 0x46, 0xca, 0x07, 0x97, 0x5f,
	0x7b, 0x47, 0x53, 0xdf, 0xf2, 0x72, 0x09, 0xfc, 0x2f, 0xdb, 0x90, 0xeb, 0x7b, 0x7a, 0x32, 0x5d,
	0x27, 0x58, 0x6d, 0x68, 0x62, 0xd6, 0x47, 0x5a, 0x59, 0xcd, 0x88, 0x93, 0x67, 0x62, 0xd1, 0x67,
	0xcf, 0xec, 0xd1, 0xdb, 0x06, 0xd8, 0xc5, 0xe5, 0xa7, 0xfa, 0x89, 0xfb, 0x5a, 0xf8, 0x05, 0x90,
	0xe6, 0x37, 0x45, 0xe2, 0xa1, 0xd7, 0xc2, 0x86, 0x18, 0xe8, 0xb9, 0xd0, 0xce, 0xe8, 0x9b, 0x81,
	0x46, 0x84, 0xbb, 0x08, 0xe1, 0xde, 0x0b, 0x34, 0xf5, 0x5d, 0xaf, 0x1b, 0xa1, 0xff, 0x15, 0xa7,
	0x24, 0x33, 0x83, 0x6d, 0xfa, 0xa7, 0x2d, 0x16, 0x85, 0x3e, 0xd2, 0x4a, 0xa2, 0x3d, 0x7b, 0x06,
	0xf4, 0x9e, 0x7e, 0x63, 0x41, 0xc6, 0x23, 0xa1, 0x64, 0x28, 0x91, 0x1a, 0x1d, 0x4c, 0x5f, 0xe9,
	0xd7, 0x5b, 0x0f, 0x3b, 0x97, 0xde, 0x23, 0x94, 0x01, 0xb7, 0xd7, 0xc3, 0x9d, 0xac, 0xc5, 0xff,
	0x00, 0x75, 0xf5, 0x2d, 0x65, 0x2d, 0xfe, 0x32, 0xc6, 0x9c, 0x37, 0xa4, 0x68, 0x35, 0xfb, 0xa7,
	0x96, 0xc1, 0x67, 0x4d, 0xce, 0x52, 0x9f, 0xc1, 0x94, 0x6a, 0x74, 0x26, 0xc9, 0xe2, 0xb8, 0xb9,
	0x1f, 0x63, 0xae, 0x5e, 0xcf, 0xa4, 0xb7, 0x09, 0x4b, 0x99, 0x8b, 0xd7, 0xbc, 0x84, 0x57, 0x66,
	0xef, 0x9a, 0x6d, 0x9a, 0xda, 0x20, 0x05, 0xbc, 0x79, 0xac, 0x1d, 0x7f, 0x09, 0x86, 0xe0, 0xe8,
	0xe7, 0xc5, 0xc1, 0x71, 0x1d, 0xd0, 0x3f, 0x01, 0xa9, 0x4c, 0xf8, 0x8e, 0xbb, 0xc3, 0x36, 0xfd,
	0x03, 0xcb, 0x5e, 0x75, 0xb1, 0x20, 0xbb, 0xaa, 0x93, 0x3d, 0xbc, 0xb1, 0xfc, 0x5f, 0x48, 0x8f,
	0x7f, 0xef, 0x99, 0x94, 0xf7, 0x4c, 0xca, 0x7b, 0x26, 0xe5, 0x3d, 0x93, 0xf2, 0xd7, 0x34, 0x29,
	0xf7, 0x16, 0x64, 0x52, 0x3e, 0xa1, 0xa9, 0x8f, 0xb9, 0x9b, 0x94, 0xa5, 0xee, 0x26, 0xe5, 0x3d,
	0x23, 0xf2, 0x9e, 0x11, 0x79, 0xcf, 0x88, 0x24, 0x46, 0xe4, 0x66, 0xd6, 0xa3, 0xfb, 0x00, 0x3d,
	0x80, 0xae, 0x61, 0x3d, 0xba, 0xe5, 0x4c, 0xa1, 0xf0, 0x9c, 0x05, 0xe9, 0xee, 0xd6, 0xdd, 0xc4,
	0xda, 0xa6, 0xd8, 0x5c, 0x5c, 0x35, 0x65, 0xdb, 0xd4, 0xe1, 0x7e, 0x66, 0xaa, 0x85, 0xcf, 0x14,
	0x57, 0x0b, 0xe7, 0x9e, 0x4c, 0x5a, 0x4c, 0xd0, 0x59, 0xb7, 0x6f, 0x82, 0xba, 0x5b, 0x47, 0xfe,
	0x12, 0x0c, 0x61, 0xea, 0x26, 0x28, 0x3d, 0xb1, 0xbc, 0xe0, 0x91, 0xca, 0x84, 0xef, 0xb8, 0x3b,
	0x4c, 0xd0, 0xf0, 0xed, 0x99, 0xa0, 0xf8, 0x66, 0x3c, 0x76, 0x99, 0x96, 0x9b, 0x47, 0x9a, 0x0e,
	0x32, 0xcb, 0xb1, 0xd6, 0xc0, 0x34, 0xa9, 0x14, 0x9b, 0x4b, 0x42, 0x7b, 0xf5, 0x25, 0xe7, 0xb9,
	0xc8, 0xa3, 0x9a, 0x3a, 0x8f, 0x9d, 0x89, 0xd3, 0x6f, 0x33, 0xa7, 0xe9, 0x77, 0x8e, 0xbc, 0x3b,
	0x5f, 0x00, 0x4d, 0xfd, 0x8c, 0xc9, 0xbb, 0xf3, 0x57, 0x96, 0xbc, 0x3b, 0x02, 0x5e, 0x6e, 0xef,
	0x3c, 0x14, 0xa7, 0x45, 0x36, 0x0b, 0x5f, 0x70, 0xbe, 0x3e, 0x43, 0x6d, 0xd9, 0x33, 0x2d, 0x99,
	0xee, 0xfd, 0x7a, 0xcf, 0x8d, 0xf4, 0x89, 0xe1, 0xd4, 0xa8, 0xa1, 0xce, 0xd3, 0x1f, 0x0e, 0x5b,
	0x82, 0xf6, 0xaf, 0x5f, 0x26, 0xb5, 0x16, 0xbb, 0xf7, 0xaf, 0x55, 0x8d, 0x49, 0x7f, 0xf2, 0x03,
	0xcb, 0x59, 0x2b, 0xc9, 0xd9, 0x90, 0x47, 0xc8, 0xfe, 0xb9, 0x02, 0x06, 0xd9, 0x09, 0xaf, 0x0c,
	0x79, 0xa4, 0x32, 0xe1, 0x73, 0xee, 0x8e, 0xa9, 0xdd, 0x78, 0x9b, 0x53, 0x1b, 0x25, 0x6b, 0xc0,
	0x53, 0xbb, 0x92, 0x3d, 0xa7, 0x75, 0x9f, 0xdd, 0x9f, 0x01, 0x69, 0xfe, 0xba, 0x50, 0xf2, 0x0e,
	0x4c, 0xed, 0x35, 0xeb, 0x34, 0xf5, 0x29, 0xe9, 0x49, 0xaf, 0xdb, 0xeb, 0xfd, 0x95, 0xf8, 0x90,
	0x42, 0xc0, 0x03, 0x39, 0xee, 0xfd, 0xd1, 0x23, 0x2d, 0xe0, 0x3f, 0xe4, 0x37, 0x47, 0x99, 0x99,
	0xe7, 0xc1, 0xae, 0xc3, 0xbd, 0xc6, 0xd8, 0xd8, 0x49, 0xcf, 0x7a, 0x5d, 0xc5, 0xe5, 0x2f, 0x11,
	0x08, 0x5d, 0x98, 0x07, 0xe2, 0xb7, 0xa4, 0x05, 0xeb, 0xc3, 0x09, 0xf1, 0x24, 0x8a, 0x38, 0x27,
	0x51, 0xbd, 0xa6, 0x3e, 0xcd, 0x4e, 0xa2, 0xd5, 0x8e, 0x3f, 0xff, 0x8c, 0x23, 0xe4, 0xad, 0xce,
	0x23, 0xe4, 0xc7, 0x50, 0x49, 0xdc, 0x9c, 0xc1, 0xb1, 0x50, 0xfc, 0xbe, 0x3c, 0x66, 0x47, 0x9d,
	0xfd, 0x34, 0xd9, 0xa7, 0xa9, 0xd5, 0x39, 0x1f, 0x95, 0xec, 0x78, 0xb0, 0xf8, 0x60, 0xb9, 0xce,
	0x7e, 0xb0, 0x8c, 0x1f, 0x45, 0x6d, 0x0d, 0xe7, 0xa3, 0x84, 0x67, 0xcc, 0x6b, 0xfa, 0x80, 0xa6,
	0x7e, 0x0c, 0xa4, 0x93, 0xc0, 0xeb, 0x3a, 0x14, 0xfe, 0x5d, 0x82, 0xb1, 0xfd, 0x95, 0x8e, 0x62,
	0xff, 0xd3, 0x23, 0x95, 0x08, 0xf0, 0xdd, 0x1d, 0x6b, 0x75, 0xab, 0xe5, 0x5c, 0xb6, 0xf0, 0xb5,
	0x5a, 0xd0, 0x59, 0x2d, 0xb9, 0x57, 0xe0, 0x2e, 0xa1, 0xa9, 0x2e, 0x4f, 0xbf, 0x16, 0x96, 0x1e,
	0x58, 0xcb, 0xd6, 0x26, 0x8a, 0xc3, 0x6f, 0x81, 0x54, 0x64, 0x09, 0x2f, 0x80, 0xe5, 0xa2, 0xb2,
	0x96, 0xa8, 0x71, 0x43, 0xe8, 0x0d, 0xb9, 0x22, 0x0f, 0x45, 0x22, 0xa6, 0xb4, 0x00, 0x4d, 0x7d,
	0x1e, 0x16, 0xe1, 0x09, 0x4f, 0x3a, 0xe4, 0x27, 0x2c, 0x3f, 0x8d, 0xad, 0x03, 0x53, 0x37, 0x5a,
	0x6f, 0x99, 0xd0, 0x87, 0xc6, 0x8c, 0x45, 0xb7, 0xf7, 0x1c, 0x6e, 0xd7, 0xb5, 0xc3, 0x99, 0xf6,
	0x8b, 0x99, 0x0b, 0xed, 0xe6, 0x9a, 0xdf, 0xfb, 0x8f, 0xa9, 0xf7, 0x3c, 0x4b, 0x94, 0x85, 0x3e,
	0xeb, 0xfb, 0x7d, 0x6f, 0x2e, 0xa7, 0x2d, 0xbe, 0x66, 0x73, 0xed, 0xef, 0x5a, 0x03, 0xbc, 0xb0,
	0xd5, 0x23, 0x15, 0xd1, 0x82, 0x3a, 0x02, 0xf6, 0x2c, 0xdd, 0x5c, 0xf6, 0x6c, 0x14, 0x89, 0x98,
	0x32, 0x0c, 0x34, 0xb5, 0x19, 0x16, 0xe1, 0x45, 0x48, 0xd9, 0x7b, 0xdd, 0xf2, 0xd3, 0xb4, 0xb6,
	0x8c, 0xdd, 0xec, 0x91, 0xb3, 0x7a, 0xe7, 0x99, 0xd4, 0x78, 0x0b, 0x49, 0xe3, 0x89, 0x37, 0x0e,
	0xb9, 0xe8, 0xc9, 0x0e, 0xc3, 0xe0, 0x3a, 0x7f, 0x4e, 0xef, 0x3c, 0x86, 0xf3, 0x20, 0xb0, 0x85,
	0xa6, 0x8c, 0xad, 0x16, 0x4d, 0x71, 0xa1, 0x1f, 0xea, 0x4f, 0xdd, 0xec, 0xf9, 0x7e, 0xf7, 0x5e,
	0x2c, 0x08, 0x79, 0x0a, 0x82, 0x98, 0x04, 0xd2, 0x2c, 0x47, 0xd8, 0x08, 0x2c, 0x73, 0xa4, 0xcf,
	0xb5, 0x26, 0x55, 0x91, 0xcb, 0xc5, 0x04, 0x78, 0x0e, 0x2a, 0x47, 0x81, 0xa6, 0x6e, 0x81, 0x30,
	0x35, 0x7a, 0x28, 0x7d, 0xea, 0x1a, 0x9b, 0xb6, 0x43, 0x56, 0xe9, 0x75, 0xc4, 0x1f, 0x26, 0x0e,
	0x67, 0xc6, 0x4f, 0x90, 0x41, 0x45, 0xe9, 0x3d, 0xcc, 0xcd, 0xa3, 0xc9, 0xb8, 0x2d, 0x99, 0x07,
	0xae, 0xaa, 0x85, 0xd8, 0xac, 0x55, 0x96, 0x14, 0xc6, 0xa6, 0x2f, 0x12, 0x0d, 0x86, 0x0c, 0x5e,
	0xff, 0x1e, 0xb0, 0x79, 0x31, 0xd9, 0x70, 0x18, 0xa8, 0xd8, 0xf9, 0x71, 0xa6, 0x88, 0x90, 0x2b,
	0x5d, 0x69, 0x08, 0xdb, 0x3b, 0x35, 0x75, 0x85, 0xc1, 0x75, 0xbb, 0x9d, 0xeb, 0x52, 0x5b, 0xce,
	0x08, 0x26, 0x43, 0x88, 0x81, 0x0f, 0xb3, 0xe4, 0x9d, 0x2a, 0x4b, 0x5d, 0x1e, 0x5c, 0x8a, 0xdf,
	0x96, 0xf7, 0xf1, 0x61, 0x47, 0x2a, 0x62, 0x07, 0x0d, 0xe5, 0xca, 0x5b, 0x08, 0x29, 0x61, 0xee,
	0x3c, 0xd0, 0xd4, 0x37, 0xa0, 0x82, 0xb5, 0x0b, 0x9d, 0xcf, 0xa3, 0xed, 0x6c, 0x56, 0x3d, 0x7c,
	0xa1, 0x4e, 0x7e, 0x86, 0xd4, 0x45, 0x26, 0xc9, 0x01, 0x38, 0x24, 0xb9, 0x6a, 0x73, 0xa7, 0x8f,
	0xa6, 0x4f, 0xf6, 0xa6, 0xc6, 0xaf, 0xe5, 0xf2, 0xd4, 0x1e, 0x3c, 0x81, 0x7d, 0x67, 0xd9, 0xe1,
	0xb3, 0xfa, 0xee, 0x09, 0x24, 0x9a, 0x1a, 0x38, 0x15, 0xd1, 0xc0, 0x0b, 0x40, 0x2a, 0xa2, 0xa5,
	0x95, 0x04, 0xeb, 0xdb, 0xd2, 0xcd, 0x5d, 0xdf, 0x36, 0x8a, 0x44, 0x4c, 0xd9, 0xac, 0xa9, 0x55,
	0x86, 0xf6, 0x32, 0x0c, 0x67, 0xba, 0xbc, 0x67, 0x13, 0x3b, 0xba, 0x6d, 0x4c, 0x1f, 0xea, 0x26,
	0x8d, 0x08, 0xf2, 0x62, 0x6f, 0x81, 0xeb, 0x10, 0x5e, 0x01, 0x92, 0x84, 0x4a, 0xeb, 0x60, 0xa8,
	0x25, 0x76, 0x20, 0xb9, 0x3e, 0x03, 0x67, 0xa9, 0x5b, 0x77, 0x22, 0xa6, 0x6c, 0xd3, 0xd4, 0x95,
	0xb0, 0xc8, 0x32, 0x48, 0x72, 0x15, 0xfe, 0x89, 0xe7, 0xe0, 0x5a, 0xfa, 0x66, 0x5b, 0xb1, 0x1f,
	0x8c, 0x1a, 0x16, 0x8a, 0xfa, 0x8c, 0x47, 0x9a, 0x8e, 0xeb, 0x8b, 0x60, 0xd8, 0xa5, 0xbc, 0x99,
	0xc4, 0xe0, 0x2e, 0x73, 0xed, 0x4f, 0xc4, 0x94, 0x7f, 0x00, 0x9a, 0x7a, 0x11, 0xc0, 0xd9, 0x16,
	0xe8, 0x64, 0x42, 0x1d, 0x07, 0xe9, 0x8f, 0xc7, 0xd2, 0x1d, 0x43, 0x84, 0x0f, 0x34, 0x61, 0xb2,
	0xb7, 0x0e, 0xa4, 0xc7, 0xfb, 0x2c, 0x74, 0xec, 0xac, 0x9a, 0xec, 0x1d, 0xc3, 0x74, 0xfa, 0xee,
	0x09, 0xe7, 0xdc, 0x4a, 0x0f, 0xf6, 0xe1, 0x5e, 0x63, 0x17, 0x8b, 0xff, 0x82, 0xe6, 0x28, 0x6e,
	0x9c, 0xdc, 0x77, 0x93, 0xfd, 0x0b, 0xc9, 0x74, 0x85, 0xdf, 0x8d, 0xc8, 0xb0, 0xdc, 0x90, 0xc4,
	0x16, 0x40, 0x59, 0x2c, 0x31, 0xd8, 0x0f, 0xa4, 0xdf, 0x25, 0xb9, 0x06, 0x21, 0x6f, 0xe4, 0x98,
	0x1b, 0x94, 0x4e, 0x09, 0x99, 0xfd, 0x64, 0x01, 0xfe, 0xa9, 0xa6, 0xd6, 0x42, 0x29, 0x97, 0x7c,
	0x4d, 0x56, 0xd8, 0x71, 0xad, 0x8b, 0x44, 0x42, 0xf1, 0xba, 0x7a, 0xd3, 0x09, 0xc7, 0x8c, 0x6a,
	0x25, 0xac, 0xe0, 0x60, 0x34, 0x96, 0x8a, 0xaf, 0x39, 0x8c, 0xff, 0xb6, 0x0b, 0xfe, 0x08, 0x50,
	0x9a, 0x48, 0x22, 0x50, 0xa6, 0x6e, 0xe3, 0x22, 0xf1, 0x8c, 0xcb, 0x51, 0x19, 0x43, 0xbc, 0xb8,
	0x30, 0xc2, 0x44, 0x4c, 0x39, 0x06, 0x34, 0xf5, 0x05, 0x58, 0x62, 0x19, 0xea, 0x1c, 0x49, 0x76,
	0xf8, 0x5c, 0x7a, 0x5f, 0x8b, 0xbc, 0x92, 0x8c, 0x39, 0xad, 0xa3, 0xb4, 0x31, 0x14, 0x7f, 0x33,
	0x14, 0x7f, 0x26, 0xf4, 0xb6, 0xeb, 0xdf, 0x10, 0xc3, 0x7e, 0x58, 0x2b, 0x1e, 0x94, 0x06, 0xf3,
	0x1f, 0xbe, 0xe6, 0x04, 0x7d, 0xe6, 0x2e, 0xf8, 0x1f, 0x80, 0xa6, 0x91, 0x76, 0x8a, 0xc0, 0xeb,
	0xfa, 0xf1, 0xb7, 0x4a, 0x61, 0x49, 0xc1, 0xb4, 0x89, 0x98, 0xf2, 0x17, 0x9a, 0xfa, 0x38, 0x2c,
	0xb1, 0x98, 0x08, 0x0e, 0x39, 0x94, 0xe0, 0xf1, 0x15, 0x10, 0x21, 0x7e, 0x57, 0xca, 0x53, 0xe6,
	0xd7, 0xf8, 0x7e, 0xfc, 0x1b, 0xa0, 0xf9, 0x68, 0x0b, 0x60, 0x59, 0x40, 0xc8, 0x65, 0x59, 0x48,
	0x9b, 0x88, 0x19, 0xdf, 0x48, 0x3f, 0x9c, 0x6b, 0xd1, 0xa2, 0x39, 0x0a, 0x59, 0xd4, 0x81, 0x87,
	0xd5, 0x3b, 0xf5, 0x61, 0xfd, 0x77, 0x80, 0x33, 0x3a, 0x3a, 0x39, 0x5c, 0xec, 0xa2, 0x91, 0xac,
	0xfc, 0x3d, 0x5c, 0x20, 0x65, 0x22, 0xa6, 0xbc, 0xab, 0xa9, 0xf5, 0xc2, 0x89, 0x4d, 0xb4, 0x99,
	0xcf, 0xa9, 0xcc, 0x5c, 0xff, 0x80, 0x78, 0x5f, 0x08, 0xab, 0x0a, 0xe1, 0x1d, 0x7e, 0x0d, 0xa4,
	0x39, 0x75, 0x91, 0x70, 0xf2, 0xe9, 0x50, 0x30, 0x84, 0xab, 0x0e, 0x50, 0x0d, 0xed, 0xe0, 0x97,
	0x4b, 0xc6, 0xe5, 0x57, 0x40, 0x99, 0x88, 0x29, 0x2f, 0x1b, 0x3a, 0xe9, 0x41, 0x33, 0xf7, 0x16,
	0xb6, 0xd4, 0xe9, 0x77, 0x47, 0xd0, 0x8e, 0xf9, 0x51, 0x78, 0x3a, 0x29, 0x1c, 0x09, 0x27, 0xb7,
	0x85, 0x82, 0xa4, 0xc3, 0x98, 0xa3, 0xff, 0x02, 0xa4, 0xd9, 0x6a, 0x30, 0x48, 0xde, 0x1e, 0x0a,
	0x52, 0x6e, 0x16, 0x72, 0x6c, 0x50, 0x3b, 0x91, 0xc1, 0xcb, 0xa2, 0x82, 0xe8, 0x12, 0x31, 0x25,
	0x8e, 0x96, 0xa2, 0x3e, 0xd2, 0x4a, 0x3f, 0x29, 0x28, 0xbb, 0xa2, 0x95, 0x21, 0xf7, 0x6e, 0x97,
	0x8d, 0x48, 0x20, 0x18, 0xdc, 0x46, 0x5f, 0xca, 0x30, 0xf7, 0x05, 0x90, 0x66, 0x90, 0x62, 0x2b,
	0x81, 0x9d, 0xa1, 0x44, 0x2c, 0xd0, 0x10, 0x72, 0x1a, 0xa3, 0x36, 0x02, 0x83, 0xa9, 0xca, 0xbc,
	0x34, 0x89, 0x98, 0x12, 0xd6, 0x54, 0x05, 0xce, 0xc0, 0xbb, 0xab, 0x08, 0xed, 0x91, 0xed, 0x0d,
	0x08, 0xf4, 0xe3, 0xca, 0x6a, 0xde, 0x07, 0x82, 0xd2, 0xf8, 0x9a, 0xb7, 0xd9, 0x07, 0xdf, 0xb0,
	0xb5, 0x9a, 0x0d, 0x82, 0x5d, 0x94, 0x0f, 0x92, 0x82, 0x5f, 0xcc, 0x87, 0x8d, 0x80, 0xcb, 0x87,
	0x83, 0xc6, 0xe4, 0x03, 0xab, 0x3f, 0x86, 0x0f, 0x5b, 0x03, 0xe6, 0x43, 0xfe, 0x79, 0x7c, 0xfc,
	0x0d, 0x90, 0x66, 0x10, 0xbb, 0x5e, 0xcc, 0x87, 0x8d, 0x80, 0xcb, 0x87, 0x83, 0x06, 0x5b, 0x66,
	0x68, 0x3c, 0x0c, 0xfd, 0x66, 0x19, 0x0f, 0x4b, 0x03, 0xe2, 0xe3, 0x51, 0xef, 0xed, 0xf3, 0x01,
	0xc7, 0x80, 0x74, 0xbf, 0x61, 0x3a, 0x98, 0x1c, 0x70, 0x0d, 0x0b, 0x16, 0x7e, 0xb9, 0x3b, 0x81,
	0x89, 0x9d, 0xe4, 0xe4, 0x65, 0xc6, 0xc0, 0xda, 0x80, 0xb1, 0xc3, 0x9f, 0x81, 0xdd, 0xb0, 0xdc,
	0xd1, 0x16, 0xc4, 0x04, 0x5f, 0xce, 0xdd, 0xa1, 0xb0, 0xe8, 0x2b, 0xf2, 0x50, 0x60, 0xcb, 0x7d,
	0x19, 0x9c, 0x63, 0x43, 0x4b, 0xb4, 0x31, 0xbf, 0x19, 0xb1, 0x52, 0x0a, 0x17, 0xb8, 0xb1, 0x02,
	0xbb, 0xa7, 0x49, 0xc5, 0xb6, 0x95, 0xf7, 0x7c, 0x53, 0x34, 0x19, 0x70, 0x9a, 0x4c, 0x3c, 0x2a,
	0xae, 0xc9, 0xc4, 0x27, 0x4c, 0xc4, 0x94, 0x21, 0x8f, 0xa6, 0x7e, 0x0b, 0x60, 0xb1, 0x6d, 0xf9,
	0xbe, 0x61, 0x10, 0xc8, 0x7f, 0x0b, 0x78, 0xcd, 0x39, 0x73, 0x18, 0x19, 0x10, 0xfa, 0xe0, 0x51,
	0x6c, 0xb7, 0x9a, 0x56, 0x3c, 0xb1, 0x88, 0x7b, 0xfa, 0x6d, 0x04, 0xf8, 0x61, 0x1b, 0x42, 0x89,
	0x68, 0x53, 0x9c, 0x60, 0x60, 0xca, 0x83, 0x0f, 0xb8, 0x3f, 0x8e, 0x7c, 0xdc, 0x68, 0xca, 0x55,
	0x9c, 0x3d, 0x1a, 0x27, 0x49, 0x25, 0x1b, 0xf9, 0x83, 0xad, 0x93, 0x2d, 0x1d, 0xce, 0xbf, 0x23,
	0x91, 0xff, 0xb1, 0xb2, 0xd6, 0x4d, 0xe4, 0x88, 0x2f, 0xb7, 0x29, 0x84, 0xa8, 0xd0, 0x5a, 0xce,
	0x02, 0xa9, 0xd8, 0xa6, 0x4e, 0x04, 0x83, 0xc3, 0xa3, 0xe2, 0x0e, 0x0e, 0x9f, 0x30, 0x11, 0x53,
	0x76, 0x69, 0xea, 0x52, 0x58, 0x6c, 0xd3, 0x48, 0x78, 0x68, 0xb8, 0xad, 0x98, 0x55, 0xf9, 0x97,
	0x62, 0x55, 0x07, 0x52, 0xb1, 0x4d, 0xe3, 0x08, 0x58, 0xe5, 0x51, 0x71, 0x59, 0xe5, 0x13, 0x26,
	0x62, 0xca, 0x3b, 0x88, 0x55, 0x9b, 0xd2, 0x22, 0xac, 0xf2, 0x5a, 0x11, 0xab, 0x7f, 0xe4, 0xfd,
	0x25, 0x58, 0x85, 0xdf, 0x02, 0x69, 0x16, 0xab, 0x9a, 0x30, 0x93, 0x55, 0x6e, 0xda, 0xcb, 0xe4,
	0xb0, 0xba, 0x00, 0x2a, 0x93, 0x3d, 0x9b, 0x4a, 0xa0, 0x23, 0xc9, 0x69, 0xc5, 0xec, 0xc1, 0x5f,
	0x84, 0xbd, 0x2f, 0x01, 0x71, 0xe7, 0x58, 0xf9, 0xab, 0x76, 0xd5, 0x6f, 0x26, 0x83, 0x0b, 0x0b,
	0x21, 0x4b, 0xc4, 0x94, 0xa0, 0xa6, 0xfe, 0x3e, 0x94, 0x79, 0xbc, 0x10, 0x85, 0xe8, 0xd2, 0xe7,
	0xb6, 0x9b, 0xb4, 0x90, 0xc3, 0xff, 0x02, 0xd2, 0x3c, 0x9b, 0x2e, 0xdb, 0x12, 0x4e, 0x6e, 0xc7,
	0x1c, 0x2d, 0xc9, 0xa3, 0xf5, 0x4c, 0x4a, 0x83, 0xaf, 0xa5, 0x85, 0x13, 0xe3, 0x95, 0xf8, 0x27,
	0xb0, 0xd2, 0xa6, 0x0d, 0xf5, 0xce, 0x43, 0x7a, 0xcb, 0xb5, 0x38, 0xd1, 0x67, 0xe5, 0x78, 0x38,
	0x0b, 0x21, 0x42, 0xfc, 0x7a, 0x95, 0x6a, 0x37, 0x7e, 0xdf, 0x0a, 0x27, 0xb7, 0x23, 0x62, 0x63,
	0x25, 0xde, 0x30, 0x1d, 0xe7, 0xa4, 0xd6, 0xbb, 0x73, 0x76, 0x5a, 0xba, 0xe9, 0xde, 0xbf, 0x3a,
	0x0f, 0x55, 0xce, 0x03, 0xb0, 0x18, 0xde, 0xcf, 0xd6, 0x00, 0x94, 0xe7, 0xb1, 0xbf, 0xd8, 0x22,
	0xff, 0x2e, 0xd6, 0x28, 0x39, 0xac, 0xf2, 0x35, 0x9b, 0xa7, 0x56, 0x48, 0x8d, 0x5c, 0x05, 0xd4,
	0x2d, 0x2e, 0x04, 0xcf, 0xab, 0x63, 0xef, 0x04, 0x6f, 0xa3, 0x22, 0xe0, 0x5f, 0x30, 0x6c, 0x88,
	0xfb, 0xb1, 0x3a, 0x24, 0xe0, 0x21, 0xfb, 0x8b, 0x85, 0x2d, 0x4f, 0x01, 0xf6, 0x15, 0xd3, 0xdb,
	0x27, 0x84, 0x6d, 0xe9, 0x16, 0xc2, 0xb6, 0x51, 0x11, 0xd8, 0xac, 0xd7, 0x8f, 0xf4, 0x59, 0xbd,
	0x7e, 0xa4, 0xd1, 0xc5, 0xeb, 0xc7, 0x01, 0x0e, 0xc7, 0xb1, 0xd7, 0x8f, 0x42, 0xae, 0xe0, 0xa8,
	0x27, 0x1b, 0x5e, 0xc5, 0x8d, 0x84, 0x80, 0x65, 0xbd, 0x7f, 0x14, 0xac, 0xc5, 0xfb, 0x57, 0x4f,
	0x11, 0x14, 0xee, 0xfd, 0xe3, 0xa1, 0xbf, 0x40, 0xbc, 0x7f, 0x14, 0xbe, 0xc2, 0x53, 0x3e, 0x36,
	0xfc, 0x95, 0xae, 0x34, 0x84, 0x01, 0xab, 0x17, 0x90, 0xf4, 0xe6, 0xf5, 0x02, 0x5a, 0xe8, 0xfe,
	0xff, 0x78, 0x01, 0x89, 0xc0, 0xe0, 0x35, 0x20, 0x4d, 0xa7, 0xa7, 0x61, 0xd1, 0xa6, 0xa0, 0x68,
	0x8b, 0xc7, 0xd6, 0xcf, 0x16, 0x6d, 0xf1, 0x2c, 0xe5, 0x9c, 0x95, 0x3f, 0x33, 0xec, 0xda, 0x19,
	0x34, 0xb9, 0x0f, 0xb9, 0xb8, 0x2d, 0xcf, 0xb7, 0x35, 0x38, 0xb4, 0xc2, 0x22, 0x45, 0xe1, 0xfa,
	0x12, 0xa2, 0x4d, 0x41, 0x5f, 0x33, 0x29, 0xa6, 0x8e, 0x96, 0xd6, 0x08, 0x90, 0xa6, 0x53, 0xf7,
	0x15, 0x17, 0x38, 0xd3, 0x29, 0x04, 0x6e, 0xa1, 0x21, 0xc0, 0x5f, 0x34, 0x14, 0xd9, 0x0c, 0x1a,
	0x2b, 0x47, 0x81, 0xcf, 0xb1, 0x35, 0xb0, 0x90, 0xe5, 0x02, 0x21, 0x5f, 0x07, 0xd2, 0x74, 0xea,
	0x7e, 0xe2, 0x42, 0x66, 0x3a, 0xf3, 0x9c, 0xed, 0x58, 0x21, 0xbf, 0xac, 0xa9, 0x7e, 0x38, 0x8b,
	0xba, 0xa7, 0xa2, 0x4d, 0x41, 0x02, 0xba, 0x84, 0xd5, 0x05, 0x0d, 0xb9, 0x0e, 0x06, 0x7c, 0x95,
	0xb7, 0x00, 0xf0, 0x70, 0x00, 0x48, 0xf7, 0xd1, 0x12, 0xfb, 0xdc, 0x3d, 0x9b, 0x05, 0x73, 0xb9,
	0x98, 0x80, 0x00, 0xde, 0x6a, 0x4c, 0x8e, 0xe9, 0xd4, 0xb3, 0x14, 0x6d, 0x0a, 0xca, 0x65, 0xac,
	0x26, 0x20, 0xef, 0x75, 0x82, 0x85, 0x85, 0x80, 0x3d, 0xed, 0x91, 0x7e, 0xcf, 0x2c, 0x2f, 0xce,
	0xdf, 0xa4, 0x59, 0xe0, 0x56, 0xb8, 0x50, 0x10, 0xbc, 0x5f, 0x01, 0x4d, 0xed, 0x07, 0x70, 0x16,
	0x83, 0x98, 0x2c, 0x7c, 0xcd, 0xc5, 0xfd, 0x6f, 0x52, 0xdd, 0x89, 0x65, 0x2f, 0xc3, 0x79, 0x22,
	0x59, 0xc1, 0x6f, 0x72, 0xbe, 0x1d, 0x9a, 0x47, 0xc9, 0xe9, 0xb4, 0xe2, 0x97, 0xf9, 0x95, 0x17,
	0xe5, 0xa5, 0x23, 0x32, 0x7b, 0x5d, 0x53, 0x9f, 0xa0, 0x0a, 0xc0, 0xcc, 0xd0, 0x24, 0xd7, 0xd8,
	0x1a, 0xcc, 0x9a, 0x6d, 0xf8, 0xa4, 0x99, 0xad, 0x74, 0x4a, 0x8f, 0x8d, 0x2b, 0x94, 0x05, 0x82,
	0x23, 0x02, 0x54, 0x7e, 0xc7, 0x58, 0x59, 0x9f, 0xe7, 0x9c, 0x3c, 0x62, 0x86, 0xf8, 0xa5, 0x1b,
	0xe5, 0x45, 0x79, 0xe9, 0x08, 0x43, 0xaf, 0x30, 0x8a, 0xc1, 0xec, 0x95, 0xed, 0x95, 0x1f, 0x99,
	0xe9, 0xea, 0x93, 0xbd, 0x6e, 0xc0, 0x7d, 0xcd, 0x4c, 0x16, 0x2b, 0xa4, 0x20, 0x3e, 0xf7, 0x98,
	0x3e, 0x1e, 0x31, 0x1b, 0xfc, 0x82, 0x71, 0xf2, 0xa2, 0xbc, 0x74, 0x84, 0x8d, 0x7f, 0x05, 0x9a,
	0xfa, 0x97, 0x80, 0x7a, 0x7b, 0x72, 0x8c, 0x74, 0x01, 0x56, 0x5b, 0x98, 0xed, 0xb8, 0x48, 0x1e,
	0x93, 0x08, 0xb2, 0x2d, 0xd3, 0x75, 0x42, 0x1f, 0xfc, 0xd0, 0x52, 0x66, 0x2e, 0x35, 0xda, 0xa1,
	0xb7, 0xec, 0xc9, 0x0e, 0x8d, 0x66, 0x3e, 0xba, 0x9a, 0x3e, 0x72, 0x16, 0x3f, 0xc8, 0x9c, 0xc2,
	0xd9, 0x73, 0x7b, 0x68, 0x78, 0x76, 0x9b, 0xf1, 0x1f, 0xf3, 0x1c, 0x28, 0x33, 0xbe, 0x1f, 0xc5,
	0x1b, 0x5c, 0xc7, 0x57, 0x7e, 0x2c, 0x05, 0xd1, 0xe8, 0x2a, 0x40, 0x92, 0x5c, 0xea, 0x9d, 0x82,
	0x24, 0xe1, 0x5f, 0x13, 0x2f, 0x93, 0x29, 0xc3, 0x4a, 0xc1, 0xf1, 0x95, 0x45, 0x80, 0x55, 0xee,
	0x44, 0x44, 0x7a, 0x21, 0x4d, 0xad, 0xa5, 0xde, 0xa6, 0x9c, 0xec, 0x4a, 0x58, 0xed, 0xc5, 0xe4,
	0x56, 0x65, 0x26, 0xc3, 0x52, 0x38, 0x15, 0x16, 0xae, 0x7b, 0x88, 0xb3, 0xc9, 0xe4, 0xa1, 0x4a,
	0x74, 0x1c, 0x6e, 0x61, 0xa2, 0x3a, 0x0f, 0x15, 0xe1, 0xe2, 0x9f, 0x81, 0xa6, 0x8e, 0x00, 0x68,
	0xaf, 0x96, 0x44, 0x74, 0xda, 0xfb, 0x42, 0x9d, 0x66, 0xa3, 0xbc, 0x13, 0x7a, 0x4d, 0xe0, 0xf8,
	0xa2, 0x72, 0x34, 0x76, 0x77, 0x33, 0xed, 0xa9, 0xef, 0x9d, 0xce, 0x06, 0x41, 0xe1, 0x00, 0xa7,
	0xb3, 0x41, 0x94, 0x45, 0x5f, 0x39, 0x0c, 0x34, 0xf5, 0x39, 0x38, 0x87, 0x9b, 0x48, 0x5f, 0x5e,
	0x65, 0xd6, 0x1f, 0xd0, 0xaf, 0x5f, 0x36, 0x96, 0x8c, 0x39, 0xe3, 0x19, 0x42, 0x43, 0xfb, 0xa1,
	0xdb, 0x15, 0x99, 0x1b, 0x57, 0x32, 0x43, 0xbd, 0x74, 0xae, 0xaf, 0x50, 0x7c, 0x85, 0x4f, 0x14,
	0x33, 0xde, 0xe2, 0x98, 0x47, 0x2a, 0xe6, 0xe5, 0x56, 0x77, 0x6e, 0x68, 0x5d, 0x32, 0xd3, 0x3b,
	0x37, 0xb4, 0x6e, 0xe9, 0xda, 0x95, 0x93, 0x40, 0x53, 0x5f, 0x31, 0x45, 0x60, 0x4d, 0xda, 0x2e,
	0xaf, 0xb3, 0x86, 0x95, 0x98, 0x49, 0xc0, 0xd1, 0x35, 0xc4, 0x41, 0xb3, 0x72, 0x27, 0xae, 0xe2,
	0x92, 0x1d, 0xa6, 0x95, 0x99, 0xc6, 0x3b, 0x32, 0xfb, 0xaf, 0xb1, 0xe5, 0x49, 0xb1, 0x4c, 0xbc,
	0xb7, 0x23, 0x93, 0xff, 0x99, 0x26, 0xcd, 0x72, 0x64, 0xc4, 0x86, 0x9c, 0xc0, 0x37, 0x7e, 0xe6,
	0x72, 0xe7, 0x59, 0x93, 0x30, 0xbd, 0xb6, 0xd2, 0x39, 0x4d, 0x53, 0xbf, 0xf2, 0xc0, 0xf9, 0x38,
	0xad, 0xb9, 0x85, 0x53, 0x3a, 0xf4, 0xf2, 0x45, 0x4f, 0x81, 0x22, 0x19, 0x3b, 0x6d, 0x56, 0x38,
	0x65, 0xdb, 0xf5, 0xb1, 0x6b, 0x6c, 0x9d, 0x53, 0xf6, 0x55, 0xdf, 0xef, 0xde, 0x9b, 0x8b, 0xda,
	0xa2, 0x49, 0xbc, 0xf1, 0x4f, 0x5c, 0x2c, 0xd4, 0xec, 0xc5, 0x11, 0xf4, 0x38, 0xde, 0x8e, 0xe8,
	0x6e, 0x51, 0x66, 0x6f, 0x26, 0xa7, 0x77, 0xae, 0x84, 0xd4, 0xad, 0x93, 0xd9, 0xe1, 0x3d, 0x64,
	0xa2, 0xd3, 0x18, 0xf9, 0xcc, 0x78, 0xa7, 0x19, 0x8c, 0xcf, 0x16, 0x01, 0x63, 0x2b, 0xd9, 0x9a,
	0x15, 0xc0, 0x70, 0xb1, 0x2d, 0x33, 0x9f, 0x39, 0x4a, 0x50, 0x87, 0xef, 0x18, 0xe1, 0x44, 0x7d,
	0x68, 0xd5, 0xd3, 0xb5, 0xb0, 0xda, 0xbb, 0x62, 0x0a, 0xe3, 0x8e, 0xda, 0xe8, 0xe0, 0xff, 0x13,
	0xc0, 0x99, 0x73, 0x2c, 0x63, 0x5f, 0xd0, 0x87, 0x60, 0xb1, 0x4b, 0xe0, 0x91, 0x75, 0xd4, 0x13,
	0x9a, 0xba, 0x1a, 0xce, 0xcc, 0x95, 0x03, 0x24, 0xfa, 0xb3, 0x9a, 0x44, 0x8f, 0x5e, 0x3a, 0x45,
	0x92, 0xab, 0x9b, 0x0b, 0x04, 0x7f, 0x33, 0x19, 0x87, 0xd5, 0x72, 0x38, 0xd5, 0x89, 0x0d, 0xbf,
	0x9b, 0x26, 0x3d, 0xc8, 0xcf, 0xde, 0x0c, 0x6b, 0xf8, 0xa6, 0x8c, 0x20, 0x2f, 0xb6, 0xbc, 0xac,
	0x50, 0x72, 0xc2, 0x6e, 0xda, 0xa3, 0xa9, 0xbd, 0x1e, 0x38, 0x17, 0x5b, 0x3c, 0x0c, 0x05, 0xfe,
	0xcc, 0xc9, 0x2d, 0x1e, 0xbb, 0x2d, 0x34, 0x3a, 0xe8, 0xa0, 0x22, 0x01, 0x86, 0x78, 0x37, 0x35,
	0xd1, 0xad, 0x0f, 0x4f, 0x64, 0x0f, 0x5c, 0x35, 0xff, 0x41, 0x66, 0x07, 0x9a, 0xe0, 0xe9, 0x4b,
	0x1f, 0xeb, 0x13, 0x5d, 0x7a, 0xcb, 0x59, 0x5a, 0xb3, 0x17, 0x5d, 0x02, 0xa4, 0xc7, 0xb6, 0xfa,
	0xd8, 0x35, 0x7c, 0xce, 0x89, 0x17, 0x0a, 0xbb, 0x02, 0xb0, 0x35, 0x91, 0xe9, 0xde, 0xcf, 0x64,
	0xf1, 0xd6, 0x3b, 0x07, 0xb2, 0xfb, 0x6e, 0xa6, 0x87, 0x8f, 0xeb, 0x37, 0xdf, 0xd3, 0xdb, 0x3a,
	0xb2, 0xe7, 0xf7, 0xa7, 0xfb, 0x7b, 0xf5, 0xbe, 0xf3, 0xe6, 0xcc, 0x4e, 0x0f, 0x1f, 0x4f, 0x8d,
	0xb5, 0xeb, 0x6d, 0x1d, 0xfa, 0x48, 0xe7, 0x0f, 0x13, 0x1f, 0xe5, 0x2c, 0x97, 0x03, 0x9d, 0xfa,
	0x48, 0x27, 0x3b, 0x84, 0xf8, 0xbf, 0xd9, 0xe1, 0xeb, 0xf8, 0x72, 0xac, 0x43, 0x29, 0xe0, 0xa3,
	0x26, 0x65, 0xd5, 0x14, 0x06, 0x96, 0x00, 0xa5, 0x73, 0x77, 0x08, 0x48, 0x52, 0x2e, 0xd3, 0x2b,
	0xac, 0xc8, 0x9b, 0x91, 0x58, 0x56, 0xdc, 0x48, 0xc8, 0xf0, 0xbd, 0xa4, 0xa9, 0x2b, 0xa8, 0x87,
	0x0e, 0x2f, 0x71, 0xb9, 0x8a, 0x78, 0xe8, 0xe8, 0x45, 0x3a, 0x5c, 0x17, 0xd9, 0x56, 0xb9, 0x16,
	0x7b, 0x11, 0x94, 0xb9, 0x1c, 0x7e, 0x92, 0x81, 0xc4, 0x0e, 0x03, 0x70, 0x2f, 0x90, 0xa4, 0x5c,
	0x22, 0x49, 0x58, 0x91, 0x37, 0x69, 0xa7, 0xac, 0xb8, 0x91, 0x10, 0xc0, 0xeb, 0x35, 0xb5, 0x14,
	0x4a, 0xb9, 0x44, 0x96, 0x32, 0x93, 0xd4, 0x92, 0xb1, 0xac, 0xaa, 0xe5, 0x72, 0x01, 0x34, 0x5f,
	0x33, 0x4e, 0xc2, 0x87, 0x8c, 0xeb, 0x53, 0x40, 0x92, 0x72, 0x69, 0x0e, 0xa1, 0x20, 0xa8, 0xce,
	0x15, 0xa3, 0x33, 0x4b, 0xa2, 0x52, 0x87, 0x30, 0xe6, 0x72, 0x38, 0xca, 0x33, 0x59, 0x2b, 0xda,
	0x68, 0x41, 0x18, 0x15, 0x6f, 0x5e, 0x8c, 0xf0, 0x24, 0x0e, 0xc8, 0x42, 0xe8, 0x78, 0x01, 0x59,
	0x2c, 0xb4, 0x32, 0x61, 0x3f, 0xc1, 0xf5, 0xbc, 0xa6, 0x2e, 0xa4, 0x01, 0x59, 0x08, 0xd7, 0x3c,
	0xd6, 0x44, 0xdd, 0x84, 0x5e, 0xc9, 0xc8, 0x50, 0x81, 0xf9, 0xf1, 0x9d, 0xf0, 0x48, 0xf7, 0xd1,
	0x54, 0x5c, 0x90, 0x1b, 0x33, 0xc7, 0x22, 0x2c, 0x17, 0x13, 0x10, 0x88, 0x5f, 0xa2, 0x2a, 0xec,
	0x54, 0x7f, 0x1a, 0x5d, 0x44, 0x7f, 0x1e, 0x13, 0xda, 0x9f, 0x39, 0xa2, 0x3b, 0x61, 0x7a, 0x3e,
	0x04, 0x45, 0x6b, 0x00, 0x1e, 0xf5, 0x48, 0x73, 0x05, 0xa9, 0x31, 0xe0, 0x32, 0xfe, 0xda, 0x14,
	0xdd, 0x73, 0x90, 0x7d, 0x05, 0xd3, 0x13, 0x41, 0xbe, 0x07, 0x34, 0x35, 0x00, 0x4b, 0x2d, 0xc1,
	0xea, 0x0e, 0x6a, 0xf9, 0x0f, 0xdd, 0xfb, 0xcd, 0x2d, 0xb8, 0xf3, 0xaa, 0xdc, 0x64, 0x4b, 0x47,
	0xe6, 0xe6, 0x10, 0x12, 0xc1, 0xc3, 0x0a, 0x2f, 0xd4, 0x87, 0x92, 0x86, 0x23, 0xaf, 0x45, 0xd1,
	0xc3, 0x8c, 0xf5, 0xf6, 0x77, 0x1e, 0x1a, 0xb4, 0x56, 0x80, 0x48, 0xdc, 0xef, 0x8d, 0x3a, 0x45,
	0x92, 0xe7, 0x0e, 0xa8, 0xf2, 0x35, 0xaa, 0x85, 0x0f, 0x4b, 0x2d, 0x91, 0x69, 0x4e, 0x99, 0x34,
	0x3a, 0xfa, 0x13, 0x36, 0x99, 0xa4, 0x46, 0x77, 0xa7, 0x46, 0x07, 0x44, 0x0f, 0xd0, 0x87, 0xc7,
	0xf4, 0x1b, 0xc7, 0x31, 0x8d, 0x19, 0xf4, 0x9f, 0xb9, 0xfa, 0x89, 0x3e, 0xd1, 0x85, 0x17, 0x57,
	0x6a, 0xf4, 0x86, 0xf5, 0x10, 0x99, 0x1f, 0x0e, 0xe7, 0x10, 0xa0, 0x3d, 0x1a, 0xfe, 0x80, 0x87,
	0x86, 0xc3, 0x15, 0x20, 0x4c, 0xf7, 0xdb, 0x88, 0x4e, 0x61, 0xe6, 0xb9, 0x75, 0xa8, 0x1c, 0x42,
	0x5b, 0x9d, 0x52, 0x4b, 0xf8, 0x9b, 0x53, 0x96, 0x35, 0x64, 0xe3, 0xce, 0x94, 0x25, 0xcc, 0x74,
	0xef, 0x17, 0x91, 0xbb, 0x04, 0xcd, 0xb9, 0x0a, 0xc3, 0x90, 0x44, 0x31, 0xef, 0x0a, 0x98, 0x73,
	0xa3, 0xe3, 0x72, 0x39, 0xcf, 0xb9, 0xd1, 0x71, 0xbb, 0x55, 0x86, 0x16, 0xd8, 0x8b, 0xb0, 0xd4,
	0x12, 0x09, 0xe7, 0x14, 0xc0, 0x2a, 0x56, 0xc3, 0x9a, 0x02, 0x70, 0x91, 0x01, 0xa3, 0x7f, 0xf9,
	0x51, 0xa1, 0xee, 0x92, 0xf8, 0x6f, 0x52, 0x10, 0xda, 0x29, 0x8a, 0xa5, 0x3c, 0xdd, 0x2b, 0x94,
	0x45, 0x4d, 0x81, 0xd4, 0x44, 0x18, 0x3f, 0x01, 0x4d, 0xfd, 0x06, 0xc0, 0x2a, 0x77, 0x69, 0x10,
	0x55, 0x7e, 0x36, 0x5f, 0x74, 0xb4, 0xe0, 0x8f, 0x77, 0x42, 0xbd, 0xf3, 0xc3, 0x18, 0x1d, 0x63,
	0xf0, 0xe4, 0x7a, 0x4d, 0xad, 0x83, 0xe5, 0xd2, 0x5c, 0xc2, 0x41, 0x39, 0xb9, 0x99, 0x54, 0xae,
	0xd6, 0xd7, 0x95, 0x3f, 0x15, 0x6d, 0xf0, 0xff, 0x76, 0xed, 0xb2, 0xe5, 0xcb, 0x6a, 0xbd, 0x00,
	0xf8, 0x67, 0x06, 0x62, 0xb1, 0xc6, 0x70, 0x03, 0x3a, 0x58, 0xf7, 0xbd, 0x9e, 0x88, 0x46, 0xd6,
	0x38, 0x5a, 0x5e, 0xfd, 0x9d, 0x58, 0x3c, 0x9a, 0x8c, 0x3e, 0xf2, 0x7f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xcb, 0xbe, 0x8e, 0xcf, 0x45, 0xa5, 0x01, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ClusterManagerClient is the client API for ClusterManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClusterManagerClient interface {
	//* cluster management
	CreateCluster(ctx context.Context, in *CreateClusterReq, opts ...grpc.CallOption) (*CreateClusterResp, error)
	UpdateCluster(ctx context.Context, in *UpdateClusterReq, opts ...grpc.CallOption) (*UpdateClusterResp, error)
	AddNodesToCluster(ctx context.Context, in *AddNodesRequest, opts ...grpc.CallOption) (*AddNodesResponse, error)
	DeleteNodesFromCluster(ctx context.Context, in *DeleteNodesRequest, opts ...grpc.CallOption) (*DeleteNodesResponse, error)
	ListNodesInCluster(ctx context.Context, in *ListNodesInClusterRequest, opts ...grpc.CallOption) (*ListNodesInClusterResponse, error)
	DeleteCluster(ctx context.Context, in *DeleteClusterReq, opts ...grpc.CallOption) (*DeleteClusterResp, error)
	GetCluster(ctx context.Context, in *GetClusterReq, opts ...grpc.CallOption) (*GetClusterResp, error)
	ListCluster(ctx context.Context, in *ListClusterReq, opts ...grpc.CallOption) (*ListClusterResp, error)
	//* node management
	GetNode(ctx context.Context, in *GetNodeRequest, opts ...grpc.CallOption) (*GetNodeResponse, error)
	//* cluster credential management
	GetClusterCredential(ctx context.Context, in *GetClusterCredentialReq, opts ...grpc.CallOption) (*GetClusterCredentialResp, error)
	UpdateClusterCredential(ctx context.Context, in *UpdateClusterCredentialReq, opts ...grpc.CallOption) (*UpdateClusterCredentialResp, error)
	DeleteClusterCredential(ctx context.Context, in *DeleteClusterCredentialReq, opts ...grpc.CallOption) (*DeleteClusterCredentialResp, error)
	ListClusterCredential(ctx context.Context, in *ListClusterCredentialReq, opts ...grpc.CallOption) (*ListClusterCredentialResp, error)
	//* federation cluster management
	InitFederationCluster(ctx context.Context, in *InitFederationClusterReq, opts ...grpc.CallOption) (*InitFederationClusterResp, error)
	AddFederatedCluster(ctx context.Context, in *AddFederatedClusterReq, opts ...grpc.CallOption) (*AddFederatedClusterResp, error)
	//* namespace management *
	CreateNamespace(ctx context.Context, in *CreateNamespaceReq, opts ...grpc.CallOption) (*CreateNamespaceResp, error)
	UpdateNamespace(ctx context.Context, in *UpdateNamespaceReq, opts ...grpc.CallOption) (*UpdateNamespaceResp, error)
	DeleteNamespace(ctx context.Context, in *DeleteNamespaceReq, opts ...grpc.CallOption) (*DeleteNamespaceResp, error)
	GetNamespace(ctx context.Context, in *GetNamespaceReq, opts ...grpc.CallOption) (*GetNamespaceResp, error)
	ListNamespace(ctx context.Context, in *ListNamespaceReq, opts ...grpc.CallOption) (*ListNamespaceResp, error)
	//* NamespaceQuota management *
	CreateNamespaceQuota(ctx context.Context, in *CreateNamespaceQuotaReq, opts ...grpc.CallOption) (*CreateNamespaceQuotaResp, error)
	UpdateNamespaceQuota(ctx context.Context, in *UpdateNamespaceQuotaReq, opts ...grpc.CallOption) (*UpdateNamespaceQuotaResp, error)
	DeleteNamespaceQuota(ctx context.Context, in *DeleteNamespaceQuotaReq, opts ...grpc.CallOption) (*DeleteNamespaceQuotaResp, error)
	GetNamespaceQuota(ctx context.Context, in *GetNamespaceQuotaReq, opts ...grpc.CallOption) (*GetNamespaceQuotaResp, error)
	ListNamespaceQuota(ctx context.Context, in *ListNamespaceQuotaReq, opts ...grpc.CallOption) (*ListNamespaceQuotaResp, error)
	CreateNamespaceWithQuota(ctx context.Context, in *CreateNamespaceWithQuotaReq, opts ...grpc.CallOption) (*CreateNamespaceWithQuotaResp, error)
	//* project information management *
	CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*CreateProjectResponse, error)
	UpdateProject(ctx context.Context, in *UpdateProjectRequest, opts ...grpc.CallOption) (*UpdateProjectResponse, error)
	DeleteProject(ctx context.Context, in *DeleteProjectRequest, opts ...grpc.CallOption) (*DeleteProjectResponse, error)
	GetProject(ctx context.Context, in *GetProjectRequest, opts ...grpc.CallOption) (*GetProjectResponse, error)
	ListProject(ctx context.Context, in *ListProjectRequest, opts ...grpc.CallOption) (*ListProjectResponse, error)
	//* Cloud information management *
	CreateCloud(ctx context.Context, in *CreateCloudRequest, opts ...grpc.CallOption) (*CreateCloudResponse, error)
	UpdateCloud(ctx context.Context, in *UpdateCloudRequest, opts ...grpc.CallOption) (*UpdateCloudResponse, error)
	DeleteCloud(ctx context.Context, in *DeleteCloudRequest, opts ...grpc.CallOption) (*DeleteCloudResponse, error)
	GetCloud(ctx context.Context, in *GetCloudRequest, opts ...grpc.CallOption) (*GetCloudResponse, error)
	ListCloud(ctx context.Context, in *ListCloudRequest, opts ...grpc.CallOption) (*ListCloudResponse, error)
	//* NodeGroup information management *
	CreateNodeGroup(ctx context.Context, in *CreateNodeGroupRequest, opts ...grpc.CallOption) (*CreateNodeGroupResponse, error)
	UpdateNodeGroup(ctx context.Context, in *UpdateNodeGroupRequest, opts ...grpc.CallOption) (*UpdateNodeGroupResponse, error)
	DeleteNodeGroup(ctx context.Context, in *DeleteNodeGroupRequest, opts ...grpc.CallOption) (*DeleteNodeGroupResponse, error)
	GetNodeGroup(ctx context.Context, in *GetNodeGroupRequest, opts ...grpc.CallOption) (*GetNodeGroupResponse, error)
	ListNodeGroup(ctx context.Context, in *ListNodeGroupRequest, opts ...grpc.CallOption) (*ListNodeGroupResponse, error)
	MoveNodesToGroup(ctx context.Context, in *MoveNodesToGroupRequest, opts ...grpc.CallOption) (*MoveNodesToGroupResponse, error)
	RemoveNodesFromGroup(ctx context.Context, in *RemoveNodesFromGroupRequest, opts ...grpc.CallOption) (*RemoveNodesFromGroupResponse, error)
	CleanNodesInGroup(ctx context.Context, in *CleanNodesInGroupRequest, opts ...grpc.CallOption) (*CleanNodesInGroupResponse, error)
	ListNodesInGroup(ctx context.Context, in *GetNodeGroupRequest, opts ...grpc.CallOption) (*ListNodesInGroupResponse, error)
	UpdateGroupDesiredNode(ctx context.Context, in *UpdateGroupDesiredNodeRequest, opts ...grpc.CallOption) (*UpdateGroupDesiredNodeResponse, error)
	//* Task information management *
	CreateTask(ctx context.Context, in *CreateTaskRequest, opts ...grpc.CallOption) (*CreateTaskResponse, error)
	UpdateTask(ctx context.Context, in *UpdateTaskRequest, opts ...grpc.CallOption) (*UpdateTaskResponse, error)
	DeleteTask(ctx context.Context, in *DeleteTaskRequest, opts ...grpc.CallOption) (*DeleteTaskResponse, error)
	GetTask(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*GetTaskResponse, error)
	ListTask(ctx context.Context, in *ListTaskRequest, opts ...grpc.CallOption) (*ListTaskResponse, error)
	//* ClusterAutoScalingOption information management *
	CreateAutoScalingOption(ctx context.Context, in *CreateAutoScalingOptionRequest, opts ...grpc.CallOption) (*CreateAutoScalingOptionResponse, error)
	UpdateAutoScalingOption(ctx context.Context, in *UpdateAutoScalingOptionRequest, opts ...grpc.CallOption) (*UpdateAutoScalingOptionResponse, error)
	DeleteAutoScalingOption(ctx context.Context, in *DeleteAutoScalingOptionRequest, opts ...grpc.CallOption) (*DeleteAutoScalingOptionResponse, error)
	GetAutoScalingOption(ctx context.Context, in *GetAutoScalingOptionRequest, opts ...grpc.CallOption) (*GetAutoScalingOptionResponse, error)
	ListAutoScalingOption(ctx context.Context, in *ListAutoScalingOptionRequest, opts ...grpc.CallOption) (*ListAutoScalingOptionResponse, error)
}

type clusterManagerClient struct {
	cc *grpc.ClientConn
}

func NewClusterManagerClient(cc *grpc.ClientConn) ClusterManagerClient {
	return &clusterManagerClient{cc}
}

func (c *clusterManagerClient) CreateCluster(ctx context.Context, in *CreateClusterReq, opts ...grpc.CallOption) (*CreateClusterResp, error) {
	out := new(CreateClusterResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CreateCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateCluster(ctx context.Context, in *UpdateClusterReq, opts ...grpc.CallOption) (*UpdateClusterResp, error) {
	out := new(UpdateClusterResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) AddNodesToCluster(ctx context.Context, in *AddNodesRequest, opts ...grpc.CallOption) (*AddNodesResponse, error) {
	out := new(AddNodesResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/AddNodesToCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteNodesFromCluster(ctx context.Context, in *DeleteNodesRequest, opts ...grpc.CallOption) (*DeleteNodesResponse, error) {
	out := new(DeleteNodesResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteNodesFromCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListNodesInCluster(ctx context.Context, in *ListNodesInClusterRequest, opts ...grpc.CallOption) (*ListNodesInClusterResponse, error) {
	out := new(ListNodesInClusterResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListNodesInCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteCluster(ctx context.Context, in *DeleteClusterReq, opts ...grpc.CallOption) (*DeleteClusterResp, error) {
	out := new(DeleteClusterResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetCluster(ctx context.Context, in *GetClusterReq, opts ...grpc.CallOption) (*GetClusterResp, error) {
	out := new(GetClusterResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListCluster(ctx context.Context, in *ListClusterReq, opts ...grpc.CallOption) (*ListClusterResp, error) {
	out := new(ListClusterResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetNode(ctx context.Context, in *GetNodeRequest, opts ...grpc.CallOption) (*GetNodeResponse, error) {
	out := new(GetNodeResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetClusterCredential(ctx context.Context, in *GetClusterCredentialReq, opts ...grpc.CallOption) (*GetClusterCredentialResp, error) {
	out := new(GetClusterCredentialResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetClusterCredential", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateClusterCredential(ctx context.Context, in *UpdateClusterCredentialReq, opts ...grpc.CallOption) (*UpdateClusterCredentialResp, error) {
	out := new(UpdateClusterCredentialResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateClusterCredential", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteClusterCredential(ctx context.Context, in *DeleteClusterCredentialReq, opts ...grpc.CallOption) (*DeleteClusterCredentialResp, error) {
	out := new(DeleteClusterCredentialResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteClusterCredential", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListClusterCredential(ctx context.Context, in *ListClusterCredentialReq, opts ...grpc.CallOption) (*ListClusterCredentialResp, error) {
	out := new(ListClusterCredentialResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListClusterCredential", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) InitFederationCluster(ctx context.Context, in *InitFederationClusterReq, opts ...grpc.CallOption) (*InitFederationClusterResp, error) {
	out := new(InitFederationClusterResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/InitFederationCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) AddFederatedCluster(ctx context.Context, in *AddFederatedClusterReq, opts ...grpc.CallOption) (*AddFederatedClusterResp, error) {
	out := new(AddFederatedClusterResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/AddFederatedCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CreateNamespace(ctx context.Context, in *CreateNamespaceReq, opts ...grpc.CallOption) (*CreateNamespaceResp, error) {
	out := new(CreateNamespaceResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CreateNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateNamespace(ctx context.Context, in *UpdateNamespaceReq, opts ...grpc.CallOption) (*UpdateNamespaceResp, error) {
	out := new(UpdateNamespaceResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteNamespace(ctx context.Context, in *DeleteNamespaceReq, opts ...grpc.CallOption) (*DeleteNamespaceResp, error) {
	out := new(DeleteNamespaceResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetNamespace(ctx context.Context, in *GetNamespaceReq, opts ...grpc.CallOption) (*GetNamespaceResp, error) {
	out := new(GetNamespaceResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListNamespace(ctx context.Context, in *ListNamespaceReq, opts ...grpc.CallOption) (*ListNamespaceResp, error) {
	out := new(ListNamespaceResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CreateNamespaceQuota(ctx context.Context, in *CreateNamespaceQuotaReq, opts ...grpc.CallOption) (*CreateNamespaceQuotaResp, error) {
	out := new(CreateNamespaceQuotaResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CreateNamespaceQuota", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateNamespaceQuota(ctx context.Context, in *UpdateNamespaceQuotaReq, opts ...grpc.CallOption) (*UpdateNamespaceQuotaResp, error) {
	out := new(UpdateNamespaceQuotaResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateNamespaceQuota", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteNamespaceQuota(ctx context.Context, in *DeleteNamespaceQuotaReq, opts ...grpc.CallOption) (*DeleteNamespaceQuotaResp, error) {
	out := new(DeleteNamespaceQuotaResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteNamespaceQuota", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetNamespaceQuota(ctx context.Context, in *GetNamespaceQuotaReq, opts ...grpc.CallOption) (*GetNamespaceQuotaResp, error) {
	out := new(GetNamespaceQuotaResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetNamespaceQuota", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListNamespaceQuota(ctx context.Context, in *ListNamespaceQuotaReq, opts ...grpc.CallOption) (*ListNamespaceQuotaResp, error) {
	out := new(ListNamespaceQuotaResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListNamespaceQuota", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CreateNamespaceWithQuota(ctx context.Context, in *CreateNamespaceWithQuotaReq, opts ...grpc.CallOption) (*CreateNamespaceWithQuotaResp, error) {
	out := new(CreateNamespaceWithQuotaResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CreateNamespaceWithQuota", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*CreateProjectResponse, error) {
	out := new(CreateProjectResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CreateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateProject(ctx context.Context, in *UpdateProjectRequest, opts ...grpc.CallOption) (*UpdateProjectResponse, error) {
	out := new(UpdateProjectResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteProject(ctx context.Context, in *DeleteProjectRequest, opts ...grpc.CallOption) (*DeleteProjectResponse, error) {
	out := new(DeleteProjectResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetProject(ctx context.Context, in *GetProjectRequest, opts ...grpc.CallOption) (*GetProjectResponse, error) {
	out := new(GetProjectResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListProject(ctx context.Context, in *ListProjectRequest, opts ...grpc.CallOption) (*ListProjectResponse, error) {
	out := new(ListProjectResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CreateCloud(ctx context.Context, in *CreateCloudRequest, opts ...grpc.CallOption) (*CreateCloudResponse, error) {
	out := new(CreateCloudResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CreateCloud", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateCloud(ctx context.Context, in *UpdateCloudRequest, opts ...grpc.CallOption) (*UpdateCloudResponse, error) {
	out := new(UpdateCloudResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateCloud", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteCloud(ctx context.Context, in *DeleteCloudRequest, opts ...grpc.CallOption) (*DeleteCloudResponse, error) {
	out := new(DeleteCloudResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteCloud", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetCloud(ctx context.Context, in *GetCloudRequest, opts ...grpc.CallOption) (*GetCloudResponse, error) {
	out := new(GetCloudResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetCloud", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListCloud(ctx context.Context, in *ListCloudRequest, opts ...grpc.CallOption) (*ListCloudResponse, error) {
	out := new(ListCloudResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListCloud", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CreateNodeGroup(ctx context.Context, in *CreateNodeGroupRequest, opts ...grpc.CallOption) (*CreateNodeGroupResponse, error) {
	out := new(CreateNodeGroupResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CreateNodeGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateNodeGroup(ctx context.Context, in *UpdateNodeGroupRequest, opts ...grpc.CallOption) (*UpdateNodeGroupResponse, error) {
	out := new(UpdateNodeGroupResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateNodeGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteNodeGroup(ctx context.Context, in *DeleteNodeGroupRequest, opts ...grpc.CallOption) (*DeleteNodeGroupResponse, error) {
	out := new(DeleteNodeGroupResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteNodeGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetNodeGroup(ctx context.Context, in *GetNodeGroupRequest, opts ...grpc.CallOption) (*GetNodeGroupResponse, error) {
	out := new(GetNodeGroupResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetNodeGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListNodeGroup(ctx context.Context, in *ListNodeGroupRequest, opts ...grpc.CallOption) (*ListNodeGroupResponse, error) {
	out := new(ListNodeGroupResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListNodeGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) MoveNodesToGroup(ctx context.Context, in *MoveNodesToGroupRequest, opts ...grpc.CallOption) (*MoveNodesToGroupResponse, error) {
	out := new(MoveNodesToGroupResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/MoveNodesToGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) RemoveNodesFromGroup(ctx context.Context, in *RemoveNodesFromGroupRequest, opts ...grpc.CallOption) (*RemoveNodesFromGroupResponse, error) {
	out := new(RemoveNodesFromGroupResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/RemoveNodesFromGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CleanNodesInGroup(ctx context.Context, in *CleanNodesInGroupRequest, opts ...grpc.CallOption) (*CleanNodesInGroupResponse, error) {
	out := new(CleanNodesInGroupResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CleanNodesInGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListNodesInGroup(ctx context.Context, in *GetNodeGroupRequest, opts ...grpc.CallOption) (*ListNodesInGroupResponse, error) {
	out := new(ListNodesInGroupResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListNodesInGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateGroupDesiredNode(ctx context.Context, in *UpdateGroupDesiredNodeRequest, opts ...grpc.CallOption) (*UpdateGroupDesiredNodeResponse, error) {
	out := new(UpdateGroupDesiredNodeResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateGroupDesiredNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CreateTask(ctx context.Context, in *CreateTaskRequest, opts ...grpc.CallOption) (*CreateTaskResponse, error) {
	out := new(CreateTaskResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CreateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateTask(ctx context.Context, in *UpdateTaskRequest, opts ...grpc.CallOption) (*UpdateTaskResponse, error) {
	out := new(UpdateTaskResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteTask(ctx context.Context, in *DeleteTaskRequest, opts ...grpc.CallOption) (*DeleteTaskResponse, error) {
	out := new(DeleteTaskResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetTask(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*GetTaskResponse, error) {
	out := new(GetTaskResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListTask(ctx context.Context, in *ListTaskRequest, opts ...grpc.CallOption) (*ListTaskResponse, error) {
	out := new(ListTaskResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CreateAutoScalingOption(ctx context.Context, in *CreateAutoScalingOptionRequest, opts ...grpc.CallOption) (*CreateAutoScalingOptionResponse, error) {
	out := new(CreateAutoScalingOptionResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CreateAutoScalingOption", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateAutoScalingOption(ctx context.Context, in *UpdateAutoScalingOptionRequest, opts ...grpc.CallOption) (*UpdateAutoScalingOptionResponse, error) {
	out := new(UpdateAutoScalingOptionResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateAutoScalingOption", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteAutoScalingOption(ctx context.Context, in *DeleteAutoScalingOptionRequest, opts ...grpc.CallOption) (*DeleteAutoScalingOptionResponse, error) {
	out := new(DeleteAutoScalingOptionResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteAutoScalingOption", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetAutoScalingOption(ctx context.Context, in *GetAutoScalingOptionRequest, opts ...grpc.CallOption) (*GetAutoScalingOptionResponse, error) {
	out := new(GetAutoScalingOptionResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetAutoScalingOption", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListAutoScalingOption(ctx context.Context, in *ListAutoScalingOptionRequest, opts ...grpc.CallOption) (*ListAutoScalingOptionResponse, error) {
	out := new(ListAutoScalingOptionResponse)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListAutoScalingOption", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClusterManagerServer is the server API for ClusterManager service.
type ClusterManagerServer interface {
	//* cluster management
	CreateCluster(context.Context, *CreateClusterReq) (*CreateClusterResp, error)
	UpdateCluster(context.Context, *UpdateClusterReq) (*UpdateClusterResp, error)
	AddNodesToCluster(context.Context, *AddNodesRequest) (*AddNodesResponse, error)
	DeleteNodesFromCluster(context.Context, *DeleteNodesRequest) (*DeleteNodesResponse, error)
	ListNodesInCluster(context.Context, *ListNodesInClusterRequest) (*ListNodesInClusterResponse, error)
	DeleteCluster(context.Context, *DeleteClusterReq) (*DeleteClusterResp, error)
	GetCluster(context.Context, *GetClusterReq) (*GetClusterResp, error)
	ListCluster(context.Context, *ListClusterReq) (*ListClusterResp, error)
	//* node management
	GetNode(context.Context, *GetNodeRequest) (*GetNodeResponse, error)
	//* cluster credential management
	GetClusterCredential(context.Context, *GetClusterCredentialReq) (*GetClusterCredentialResp, error)
	UpdateClusterCredential(context.Context, *UpdateClusterCredentialReq) (*UpdateClusterCredentialResp, error)
	DeleteClusterCredential(context.Context, *DeleteClusterCredentialReq) (*DeleteClusterCredentialResp, error)
	ListClusterCredential(context.Context, *ListClusterCredentialReq) (*ListClusterCredentialResp, error)
	//* federation cluster management
	InitFederationCluster(context.Context, *InitFederationClusterReq) (*InitFederationClusterResp, error)
	AddFederatedCluster(context.Context, *AddFederatedClusterReq) (*AddFederatedClusterResp, error)
	//* namespace management *
	CreateNamespace(context.Context, *CreateNamespaceReq) (*CreateNamespaceResp, error)
	UpdateNamespace(context.Context, *UpdateNamespaceReq) (*UpdateNamespaceResp, error)
	DeleteNamespace(context.Context, *DeleteNamespaceReq) (*DeleteNamespaceResp, error)
	GetNamespace(context.Context, *GetNamespaceReq) (*GetNamespaceResp, error)
	ListNamespace(context.Context, *ListNamespaceReq) (*ListNamespaceResp, error)
	//* NamespaceQuota management *
	CreateNamespaceQuota(context.Context, *CreateNamespaceQuotaReq) (*CreateNamespaceQuotaResp, error)
	UpdateNamespaceQuota(context.Context, *UpdateNamespaceQuotaReq) (*UpdateNamespaceQuotaResp, error)
	DeleteNamespaceQuota(context.Context, *DeleteNamespaceQuotaReq) (*DeleteNamespaceQuotaResp, error)
	GetNamespaceQuota(context.Context, *GetNamespaceQuotaReq) (*GetNamespaceQuotaResp, error)
	ListNamespaceQuota(context.Context, *ListNamespaceQuotaReq) (*ListNamespaceQuotaResp, error)
	CreateNamespaceWithQuota(context.Context, *CreateNamespaceWithQuotaReq) (*CreateNamespaceWithQuotaResp, error)
	//* project information management *
	CreateProject(context.Context, *CreateProjectRequest) (*CreateProjectResponse, error)
	UpdateProject(context.Context, *UpdateProjectRequest) (*UpdateProjectResponse, error)
	DeleteProject(context.Context, *DeleteProjectRequest) (*DeleteProjectResponse, error)
	GetProject(context.Context, *GetProjectRequest) (*GetProjectResponse, error)
	ListProject(context.Context, *ListProjectRequest) (*ListProjectResponse, error)
	//* Cloud information management *
	CreateCloud(context.Context, *CreateCloudRequest) (*CreateCloudResponse, error)
	UpdateCloud(context.Context, *UpdateCloudRequest) (*UpdateCloudResponse, error)
	DeleteCloud(context.Context, *DeleteCloudRequest) (*DeleteCloudResponse, error)
	GetCloud(context.Context, *GetCloudRequest) (*GetCloudResponse, error)
	ListCloud(context.Context, *ListCloudRequest) (*ListCloudResponse, error)
	//* NodeGroup information management *
	CreateNodeGroup(context.Context, *CreateNodeGroupRequest) (*CreateNodeGroupResponse, error)
	UpdateNodeGroup(context.Context, *UpdateNodeGroupRequest) (*UpdateNodeGroupResponse, error)
	DeleteNodeGroup(context.Context, *DeleteNodeGroupRequest) (*DeleteNodeGroupResponse, error)
	GetNodeGroup(context.Context, *GetNodeGroupRequest) (*GetNodeGroupResponse, error)
	ListNodeGroup(context.Context, *ListNodeGroupRequest) (*ListNodeGroupResponse, error)
	MoveNodesToGroup(context.Context, *MoveNodesToGroupRequest) (*MoveNodesToGroupResponse, error)
	RemoveNodesFromGroup(context.Context, *RemoveNodesFromGroupRequest) (*RemoveNodesFromGroupResponse, error)
	CleanNodesInGroup(context.Context, *CleanNodesInGroupRequest) (*CleanNodesInGroupResponse, error)
	ListNodesInGroup(context.Context, *GetNodeGroupRequest) (*ListNodesInGroupResponse, error)
	UpdateGroupDesiredNode(context.Context, *UpdateGroupDesiredNodeRequest) (*UpdateGroupDesiredNodeResponse, error)
	//* Task information management *
	CreateTask(context.Context, *CreateTaskRequest) (*CreateTaskResponse, error)
	UpdateTask(context.Context, *UpdateTaskRequest) (*UpdateTaskResponse, error)
	DeleteTask(context.Context, *DeleteTaskRequest) (*DeleteTaskResponse, error)
	GetTask(context.Context, *GetTaskRequest) (*GetTaskResponse, error)
	ListTask(context.Context, *ListTaskRequest) (*ListTaskResponse, error)
	//* ClusterAutoScalingOption information management *
	CreateAutoScalingOption(context.Context, *CreateAutoScalingOptionRequest) (*CreateAutoScalingOptionResponse, error)
	UpdateAutoScalingOption(context.Context, *UpdateAutoScalingOptionRequest) (*UpdateAutoScalingOptionResponse, error)
	DeleteAutoScalingOption(context.Context, *DeleteAutoScalingOptionRequest) (*DeleteAutoScalingOptionResponse, error)
	GetAutoScalingOption(context.Context, *GetAutoScalingOptionRequest) (*GetAutoScalingOptionResponse, error)
	ListAutoScalingOption(context.Context, *ListAutoScalingOptionRequest) (*ListAutoScalingOptionResponse, error)
}

// UnimplementedClusterManagerServer can be embedded to have forward compatible implementations.
type UnimplementedClusterManagerServer struct {
}

func (*UnimplementedClusterManagerServer) CreateCluster(ctx context.Context, req *CreateClusterReq) (*CreateClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCluster not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateCluster(ctx context.Context, req *UpdateClusterReq) (*UpdateClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCluster not implemented")
}
func (*UnimplementedClusterManagerServer) AddNodesToCluster(ctx context.Context, req *AddNodesRequest) (*AddNodesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddNodesToCluster not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteNodesFromCluster(ctx context.Context, req *DeleteNodesRequest) (*DeleteNodesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNodesFromCluster not implemented")
}
func (*UnimplementedClusterManagerServer) ListNodesInCluster(ctx context.Context, req *ListNodesInClusterRequest) (*ListNodesInClusterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNodesInCluster not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteCluster(ctx context.Context, req *DeleteClusterReq) (*DeleteClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCluster not implemented")
}
func (*UnimplementedClusterManagerServer) GetCluster(ctx context.Context, req *GetClusterReq) (*GetClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCluster not implemented")
}
func (*UnimplementedClusterManagerServer) ListCluster(ctx context.Context, req *ListClusterReq) (*ListClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCluster not implemented")
}
func (*UnimplementedClusterManagerServer) GetNode(ctx context.Context, req *GetNodeRequest) (*GetNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNode not implemented")
}
func (*UnimplementedClusterManagerServer) GetClusterCredential(ctx context.Context, req *GetClusterCredentialReq) (*GetClusterCredentialResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetClusterCredential not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateClusterCredential(ctx context.Context, req *UpdateClusterCredentialReq) (*UpdateClusterCredentialResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateClusterCredential not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteClusterCredential(ctx context.Context, req *DeleteClusterCredentialReq) (*DeleteClusterCredentialResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteClusterCredential not implemented")
}
func (*UnimplementedClusterManagerServer) ListClusterCredential(ctx context.Context, req *ListClusterCredentialReq) (*ListClusterCredentialResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListClusterCredential not implemented")
}
func (*UnimplementedClusterManagerServer) InitFederationCluster(ctx context.Context, req *InitFederationClusterReq) (*InitFederationClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitFederationCluster not implemented")
}
func (*UnimplementedClusterManagerServer) AddFederatedCluster(ctx context.Context, req *AddFederatedClusterReq) (*AddFederatedClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFederatedCluster not implemented")
}
func (*UnimplementedClusterManagerServer) CreateNamespace(ctx context.Context, req *CreateNamespaceReq) (*CreateNamespaceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNamespace not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateNamespace(ctx context.Context, req *UpdateNamespaceReq) (*UpdateNamespaceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNamespace not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteNamespace(ctx context.Context, req *DeleteNamespaceReq) (*DeleteNamespaceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNamespace not implemented")
}
func (*UnimplementedClusterManagerServer) GetNamespace(ctx context.Context, req *GetNamespaceReq) (*GetNamespaceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNamespace not implemented")
}
func (*UnimplementedClusterManagerServer) ListNamespace(ctx context.Context, req *ListNamespaceReq) (*ListNamespaceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNamespace not implemented")
}
func (*UnimplementedClusterManagerServer) CreateNamespaceQuota(ctx context.Context, req *CreateNamespaceQuotaReq) (*CreateNamespaceQuotaResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNamespaceQuota not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateNamespaceQuota(ctx context.Context, req *UpdateNamespaceQuotaReq) (*UpdateNamespaceQuotaResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNamespaceQuota not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteNamespaceQuota(ctx context.Context, req *DeleteNamespaceQuotaReq) (*DeleteNamespaceQuotaResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNamespaceQuota not implemented")
}
func (*UnimplementedClusterManagerServer) GetNamespaceQuota(ctx context.Context, req *GetNamespaceQuotaReq) (*GetNamespaceQuotaResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNamespaceQuota not implemented")
}
func (*UnimplementedClusterManagerServer) ListNamespaceQuota(ctx context.Context, req *ListNamespaceQuotaReq) (*ListNamespaceQuotaResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNamespaceQuota not implemented")
}
func (*UnimplementedClusterManagerServer) CreateNamespaceWithQuota(ctx context.Context, req *CreateNamespaceWithQuotaReq) (*CreateNamespaceWithQuotaResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNamespaceWithQuota not implemented")
}
func (*UnimplementedClusterManagerServer) CreateProject(ctx context.Context, req *CreateProjectRequest) (*CreateProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProject not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateProject(ctx context.Context, req *UpdateProjectRequest) (*UpdateProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProject not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteProject(ctx context.Context, req *DeleteProjectRequest) (*DeleteProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProject not implemented")
}
func (*UnimplementedClusterManagerServer) GetProject(ctx context.Context, req *GetProjectRequest) (*GetProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProject not implemented")
}
func (*UnimplementedClusterManagerServer) ListProject(ctx context.Context, req *ListProjectRequest) (*ListProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProject not implemented")
}
func (*UnimplementedClusterManagerServer) CreateCloud(ctx context.Context, req *CreateCloudRequest) (*CreateCloudResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCloud not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateCloud(ctx context.Context, req *UpdateCloudRequest) (*UpdateCloudResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCloud not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteCloud(ctx context.Context, req *DeleteCloudRequest) (*DeleteCloudResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCloud not implemented")
}
func (*UnimplementedClusterManagerServer) GetCloud(ctx context.Context, req *GetCloudRequest) (*GetCloudResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCloud not implemented")
}
func (*UnimplementedClusterManagerServer) ListCloud(ctx context.Context, req *ListCloudRequest) (*ListCloudResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCloud not implemented")
}
func (*UnimplementedClusterManagerServer) CreateNodeGroup(ctx context.Context, req *CreateNodeGroupRequest) (*CreateNodeGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNodeGroup not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateNodeGroup(ctx context.Context, req *UpdateNodeGroupRequest) (*UpdateNodeGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNodeGroup not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteNodeGroup(ctx context.Context, req *DeleteNodeGroupRequest) (*DeleteNodeGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNodeGroup not implemented")
}
func (*UnimplementedClusterManagerServer) GetNodeGroup(ctx context.Context, req *GetNodeGroupRequest) (*GetNodeGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNodeGroup not implemented")
}
func (*UnimplementedClusterManagerServer) ListNodeGroup(ctx context.Context, req *ListNodeGroupRequest) (*ListNodeGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNodeGroup not implemented")
}
func (*UnimplementedClusterManagerServer) MoveNodesToGroup(ctx context.Context, req *MoveNodesToGroupRequest) (*MoveNodesToGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MoveNodesToGroup not implemented")
}
func (*UnimplementedClusterManagerServer) RemoveNodesFromGroup(ctx context.Context, req *RemoveNodesFromGroupRequest) (*RemoveNodesFromGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveNodesFromGroup not implemented")
}
func (*UnimplementedClusterManagerServer) CleanNodesInGroup(ctx context.Context, req *CleanNodesInGroupRequest) (*CleanNodesInGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CleanNodesInGroup not implemented")
}
func (*UnimplementedClusterManagerServer) ListNodesInGroup(ctx context.Context, req *GetNodeGroupRequest) (*ListNodesInGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNodesInGroup not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateGroupDesiredNode(ctx context.Context, req *UpdateGroupDesiredNodeRequest) (*UpdateGroupDesiredNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGroupDesiredNode not implemented")
}
func (*UnimplementedClusterManagerServer) CreateTask(ctx context.Context, req *CreateTaskRequest) (*CreateTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTask not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateTask(ctx context.Context, req *UpdateTaskRequest) (*UpdateTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTask not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteTask(ctx context.Context, req *DeleteTaskRequest) (*DeleteTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTask not implemented")
}
func (*UnimplementedClusterManagerServer) GetTask(ctx context.Context, req *GetTaskRequest) (*GetTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTask not implemented")
}
func (*UnimplementedClusterManagerServer) ListTask(ctx context.Context, req *ListTaskRequest) (*ListTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTask not implemented")
}
func (*UnimplementedClusterManagerServer) CreateAutoScalingOption(ctx context.Context, req *CreateAutoScalingOptionRequest) (*CreateAutoScalingOptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAutoScalingOption not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateAutoScalingOption(ctx context.Context, req *UpdateAutoScalingOptionRequest) (*UpdateAutoScalingOptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAutoScalingOption not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteAutoScalingOption(ctx context.Context, req *DeleteAutoScalingOptionRequest) (*DeleteAutoScalingOptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAutoScalingOption not implemented")
}
func (*UnimplementedClusterManagerServer) GetAutoScalingOption(ctx context.Context, req *GetAutoScalingOptionRequest) (*GetAutoScalingOptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAutoScalingOption not implemented")
}
func (*UnimplementedClusterManagerServer) ListAutoScalingOption(ctx context.Context, req *ListAutoScalingOptionRequest) (*ListAutoScalingOptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAutoScalingOption not implemented")
}

func RegisterClusterManagerServer(s *grpc.Server, srv ClusterManagerServer) {
	s.RegisterService(&_ClusterManager_serviceDesc, srv)
}

func _ClusterManager_CreateCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CreateCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateCluster(ctx, req.(*CreateClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateCluster(ctx, req.(*UpdateClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_AddNodesToCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).AddNodesToCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/AddNodesToCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).AddNodesToCluster(ctx, req.(*AddNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteNodesFromCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteNodesFromCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteNodesFromCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteNodesFromCluster(ctx, req.(*DeleteNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListNodesInCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNodesInClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListNodesInCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListNodesInCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListNodesInCluster(ctx, req.(*ListNodesInClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteCluster(ctx, req.(*DeleteClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetCluster(ctx, req.(*GetClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListCluster(ctx, req.(*ListClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetNode(ctx, req.(*GetNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetClusterCredential_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetClusterCredentialReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetClusterCredential(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetClusterCredential",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetClusterCredential(ctx, req.(*GetClusterCredentialReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateClusterCredential_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateClusterCredentialReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateClusterCredential(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateClusterCredential",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateClusterCredential(ctx, req.(*UpdateClusterCredentialReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteClusterCredential_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteClusterCredentialReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteClusterCredential(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteClusterCredential",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteClusterCredential(ctx, req.(*DeleteClusterCredentialReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListClusterCredential_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListClusterCredentialReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListClusterCredential(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListClusterCredential",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListClusterCredential(ctx, req.(*ListClusterCredentialReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_InitFederationCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitFederationClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).InitFederationCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/InitFederationCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).InitFederationCluster(ctx, req.(*InitFederationClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_AddFederatedCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFederatedClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).AddFederatedCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/AddFederatedCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).AddFederatedCluster(ctx, req.(*AddFederatedClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CreateNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNamespaceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CreateNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateNamespace(ctx, req.(*CreateNamespaceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNamespaceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateNamespace(ctx, req.(*UpdateNamespaceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNamespaceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteNamespace(ctx, req.(*DeleteNamespaceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNamespaceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetNamespace(ctx, req.(*GetNamespaceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNamespaceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListNamespace(ctx, req.(*ListNamespaceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CreateNamespaceQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNamespaceQuotaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateNamespaceQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CreateNamespaceQuota",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateNamespaceQuota(ctx, req.(*CreateNamespaceQuotaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateNamespaceQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNamespaceQuotaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateNamespaceQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateNamespaceQuota",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateNamespaceQuota(ctx, req.(*UpdateNamespaceQuotaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteNamespaceQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNamespaceQuotaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteNamespaceQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteNamespaceQuota",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteNamespaceQuota(ctx, req.(*DeleteNamespaceQuotaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetNamespaceQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNamespaceQuotaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetNamespaceQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetNamespaceQuota",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetNamespaceQuota(ctx, req.(*GetNamespaceQuotaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListNamespaceQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNamespaceQuotaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListNamespaceQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListNamespaceQuota",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListNamespaceQuota(ctx, req.(*ListNamespaceQuotaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CreateNamespaceWithQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNamespaceWithQuotaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateNamespaceWithQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CreateNamespaceWithQuota",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateNamespaceWithQuota(ctx, req.(*CreateNamespaceWithQuotaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CreateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CreateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateProject(ctx, req.(*CreateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateProject(ctx, req.(*UpdateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteProject(ctx, req.(*DeleteProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetProject(ctx, req.(*GetProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListProject(ctx, req.(*ListProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CreateCloud_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCloudRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateCloud(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CreateCloud",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateCloud(ctx, req.(*CreateCloudRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateCloud_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCloudRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateCloud(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateCloud",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateCloud(ctx, req.(*UpdateCloudRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteCloud_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCloudRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteCloud(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteCloud",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteCloud(ctx, req.(*DeleteCloudRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetCloud_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCloudRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetCloud(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetCloud",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetCloud(ctx, req.(*GetCloudRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListCloud_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCloudRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListCloud(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListCloud",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListCloud(ctx, req.(*ListCloudRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CreateNodeGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNodeGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateNodeGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CreateNodeGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateNodeGroup(ctx, req.(*CreateNodeGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateNodeGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNodeGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateNodeGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateNodeGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateNodeGroup(ctx, req.(*UpdateNodeGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteNodeGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNodeGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteNodeGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteNodeGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteNodeGroup(ctx, req.(*DeleteNodeGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetNodeGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetNodeGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetNodeGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetNodeGroup(ctx, req.(*GetNodeGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListNodeGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNodeGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListNodeGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListNodeGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListNodeGroup(ctx, req.(*ListNodeGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_MoveNodesToGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveNodesToGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).MoveNodesToGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/MoveNodesToGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).MoveNodesToGroup(ctx, req.(*MoveNodesToGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_RemoveNodesFromGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveNodesFromGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).RemoveNodesFromGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/RemoveNodesFromGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).RemoveNodesFromGroup(ctx, req.(*RemoveNodesFromGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CleanNodesInGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CleanNodesInGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CleanNodesInGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CleanNodesInGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CleanNodesInGroup(ctx, req.(*CleanNodesInGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListNodesInGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListNodesInGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListNodesInGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListNodesInGroup(ctx, req.(*GetNodeGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateGroupDesiredNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateGroupDesiredNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateGroupDesiredNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateGroupDesiredNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateGroupDesiredNode(ctx, req.(*UpdateGroupDesiredNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CreateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateTask(ctx, req.(*CreateTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateTask(ctx, req.(*UpdateTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteTask(ctx, req.(*DeleteTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetTask(ctx, req.(*GetTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListTask(ctx, req.(*ListTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CreateAutoScalingOption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAutoScalingOptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateAutoScalingOption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CreateAutoScalingOption",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateAutoScalingOption(ctx, req.(*CreateAutoScalingOptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateAutoScalingOption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAutoScalingOptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateAutoScalingOption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateAutoScalingOption",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateAutoScalingOption(ctx, req.(*UpdateAutoScalingOptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteAutoScalingOption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAutoScalingOptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteAutoScalingOption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteAutoScalingOption",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteAutoScalingOption(ctx, req.(*DeleteAutoScalingOptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetAutoScalingOption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAutoScalingOptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetAutoScalingOption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetAutoScalingOption",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetAutoScalingOption(ctx, req.(*GetAutoScalingOptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListAutoScalingOption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAutoScalingOptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListAutoScalingOption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListAutoScalingOption",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListAutoScalingOption(ctx, req.(*ListAutoScalingOptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClusterManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clustermanager.ClusterManager",
	HandlerType: (*ClusterManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCluster",
			Handler:    _ClusterManager_CreateCluster_Handler,
		},
		{
			MethodName: "UpdateCluster",
			Handler:    _ClusterManager_UpdateCluster_Handler,
		},
		{
			MethodName: "AddNodesToCluster",
			Handler:    _ClusterManager_AddNodesToCluster_Handler,
		},
		{
			MethodName: "DeleteNodesFromCluster",
			Handler:    _ClusterManager_DeleteNodesFromCluster_Handler,
		},
		{
			MethodName: "ListNodesInCluster",
			Handler:    _ClusterManager_ListNodesInCluster_Handler,
		},
		{
			MethodName: "DeleteCluster",
			Handler:    _ClusterManager_DeleteCluster_Handler,
		},
		{
			MethodName: "GetCluster",
			Handler:    _ClusterManager_GetCluster_Handler,
		},
		{
			MethodName: "ListCluster",
			Handler:    _ClusterManager_ListCluster_Handler,
		},
		{
			MethodName: "GetNode",
			Handler:    _ClusterManager_GetNode_Handler,
		},
		{
			MethodName: "GetClusterCredential",
			Handler:    _ClusterManager_GetClusterCredential_Handler,
		},
		{
			MethodName: "UpdateClusterCredential",
			Handler:    _ClusterManager_UpdateClusterCredential_Handler,
		},
		{
			MethodName: "DeleteClusterCredential",
			Handler:    _ClusterManager_DeleteClusterCredential_Handler,
		},
		{
			MethodName: "ListClusterCredential",
			Handler:    _ClusterManager_ListClusterCredential_Handler,
		},
		{
			MethodName: "InitFederationCluster",
			Handler:    _ClusterManager_InitFederationCluster_Handler,
		},
		{
			MethodName: "AddFederatedCluster",
			Handler:    _ClusterManager_AddFederatedCluster_Handler,
		},
		{
			MethodName: "CreateNamespace",
			Handler:    _ClusterManager_CreateNamespace_Handler,
		},
		{
			MethodName: "UpdateNamespace",
			Handler:    _ClusterManager_UpdateNamespace_Handler,
		},
		{
			MethodName: "DeleteNamespace",
			Handler:    _ClusterManager_DeleteNamespace_Handler,
		},
		{
			MethodName: "GetNamespace",
			Handler:    _ClusterManager_GetNamespace_Handler,
		},
		{
			MethodName: "ListNamespace",
			Handler:    _ClusterManager_ListNamespace_Handler,
		},
		{
			MethodName: "CreateNamespaceQuota",
			Handler:    _ClusterManager_CreateNamespaceQuota_Handler,
		},
		{
			MethodName: "UpdateNamespaceQuota",
			Handler:    _ClusterManager_UpdateNamespaceQuota_Handler,
		},
		{
			MethodName: "DeleteNamespaceQuota",
			Handler:    _ClusterManager_DeleteNamespaceQuota_Handler,
		},
		{
			MethodName: "GetNamespaceQuota",
			Handler:    _ClusterManager_GetNamespaceQuota_Handler,
		},
		{
			MethodName: "ListNamespaceQuota",
			Handler:    _ClusterManager_ListNamespaceQuota_Handler,
		},
		{
			MethodName: "CreateNamespaceWithQuota",
			Handler:    _ClusterManager_CreateNamespaceWithQuota_Handler,
		},
		{
			MethodName: "CreateProject",
			Handler:    _ClusterManager_CreateProject_Handler,
		},
		{
			MethodName: "UpdateProject",
			Handler:    _ClusterManager_UpdateProject_Handler,
		},
		{
			MethodName: "DeleteProject",
			Handler:    _ClusterManager_DeleteProject_Handler,
		},
		{
			MethodName: "GetProject",
			Handler:    _ClusterManager_GetProject_Handler,
		},
		{
			MethodName: "ListProject",
			Handler:    _ClusterManager_ListProject_Handler,
		},
		{
			MethodName: "CreateCloud",
			Handler:    _ClusterManager_CreateCloud_Handler,
		},
		{
			MethodName: "UpdateCloud",
			Handler:    _ClusterManager_UpdateCloud_Handler,
		},
		{
			MethodName: "DeleteCloud",
			Handler:    _ClusterManager_DeleteCloud_Handler,
		},
		{
			MethodName: "GetCloud",
			Handler:    _ClusterManager_GetCloud_Handler,
		},
		{
			MethodName: "ListCloud",
			Handler:    _ClusterManager_ListCloud_Handler,
		},
		{
			MethodName: "CreateNodeGroup",
			Handler:    _ClusterManager_CreateNodeGroup_Handler,
		},
		{
			MethodName: "UpdateNodeGroup",
			Handler:    _ClusterManager_UpdateNodeGroup_Handler,
		},
		{
			MethodName: "DeleteNodeGroup",
			Handler:    _ClusterManager_DeleteNodeGroup_Handler,
		},
		{
			MethodName: "GetNodeGroup",
			Handler:    _ClusterManager_GetNodeGroup_Handler,
		},
		{
			MethodName: "ListNodeGroup",
			Handler:    _ClusterManager_ListNodeGroup_Handler,
		},
		{
			MethodName: "MoveNodesToGroup",
			Handler:    _ClusterManager_MoveNodesToGroup_Handler,
		},
		{
			MethodName: "RemoveNodesFromGroup",
			Handler:    _ClusterManager_RemoveNodesFromGroup_Handler,
		},
		{
			MethodName: "CleanNodesInGroup",
			Handler:    _ClusterManager_CleanNodesInGroup_Handler,
		},
		{
			MethodName: "ListNodesInGroup",
			Handler:    _ClusterManager_ListNodesInGroup_Handler,
		},
		{
			MethodName: "UpdateGroupDesiredNode",
			Handler:    _ClusterManager_UpdateGroupDesiredNode_Handler,
		},
		{
			MethodName: "CreateTask",
			Handler:    _ClusterManager_CreateTask_Handler,
		},
		{
			MethodName: "UpdateTask",
			Handler:    _ClusterManager_UpdateTask_Handler,
		},
		{
			MethodName: "DeleteTask",
			Handler:    _ClusterManager_DeleteTask_Handler,
		},
		{
			MethodName: "GetTask",
			Handler:    _ClusterManager_GetTask_Handler,
		},
		{
			MethodName: "ListTask",
			Handler:    _ClusterManager_ListTask_Handler,
		},
		{
			MethodName: "CreateAutoScalingOption",
			Handler:    _ClusterManager_CreateAutoScalingOption_Handler,
		},
		{
			MethodName: "UpdateAutoScalingOption",
			Handler:    _ClusterManager_UpdateAutoScalingOption_Handler,
		},
		{
			MethodName: "DeleteAutoScalingOption",
			Handler:    _ClusterManager_DeleteAutoScalingOption_Handler,
		},
		{
			MethodName: "GetAutoScalingOption",
			Handler:    _ClusterManager_GetAutoScalingOption_Handler,
		},
		{
			MethodName: "ListAutoScalingOption",
			Handler:    _ClusterManager_ListAutoScalingOption_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "clustermanager.proto",
}
