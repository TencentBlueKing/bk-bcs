---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: bcs-cc-agent
rules:
  - apiGroups: [""]
    resources: ["nodes", "pods"]
    verbs: ["get", "list", "update"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: bcs-cc-agent
subjects:
  - kind: ServiceAccount
    name: bcs-cc-agent
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: bcs-cc-agent
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bcs-cc-agent
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: bcs-cc-agent
  namespace: kube-system
  labels:
    app: bcs-cc-agent
spec:
  selector:
    matchLabels:
      app: bcs-cc-agent
  template:
    metadata:
      labels:
        app: bcs-cc-agent
    spec:
      serviceAccountName: bcs-cc-agent
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
      containers:
        - name: bcs-cc-agent
          image: 
          imagePullPolicy: IfNotPresent
          args:
            - --log_dir=./logs
            - --log_max_size=500
            - --log_max_num=10
            - --logtostderr=true
            - --alsologtostderr=true
            - --v=3
            - --stderrthreshold=2
            - --engine_type=
            - --esb_url=
            - --app_code=
            - --app_secret=
            - --bk_username=
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: node-info-file
              mountPath: /data/bcs/nodeinfo
      volumes:
        - name: node-info-file
          hostPath:
            path: /data/bcs/nodeinfo
            type: DirectoryOrCreate