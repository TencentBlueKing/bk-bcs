global:
  imageRegistry: ""
  # etcd 依赖配置
  storage:
    etcd:
      endpoints: []
  secret:
    autoGenerate: true
    #bcs server cert
    bcsServerCerts: bcs-server-certs
    #bcs client cert
    bcsClientCerts: bcs-client-certs
    #bcs client cert without encrypted
    bcsClientCertsWithoutEncrypted: bcs-client-certs-without-encrypted
    #etcd registry cert
    etcdCerts: bcs-etcd-certs
    #gateway https cert
    bcsGatewayCerts: bcs-gateway-certs

# etcd 依赖配置
storage:
  etcd:
    endpoints: []

replicaCount: 1

image:
  registry:
  repository:
  tag:
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "bcs-ui"



serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

config:
  base_conf:
    time_zone: "Asia/Shanghai"
    language_code: en
    run_env: dev

  #bcs_conf:
  #  host: "http://localhost"
  #
  bcs_conf:
    host: ""
    token: ""
    jwt_public_key: ""
    verify: false
  bcs_env_conf:

  web:
    route_prefix: "/bcsapi/v4/ui"
    host:
    preferred_domains: ""

  etcd:
    endpoints: "127.0.0.1:2379"
    ca: ""
    cert: ""
    key: ""

  frontend_conf:
    hosts:
      BKSRE_HOST: ""
      SRC_IED_HOST: ""
      DEVOPS_HOST: ""
      devops_bcs_api_url: "http://localhost"
      DEVOPS_ARTIFACTORY_HOST: ""
      BK_IAM_APP_URL: ""
      PAAS_HOST: ""
      BK_CC_HOST: ""
      BKMONITOR_HOST: ""
      BCS_API_HOST: ""
    docs: { }




service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
