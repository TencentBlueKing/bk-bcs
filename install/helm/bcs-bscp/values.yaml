global:
  imageRegistry: ""
  # etcd 依赖配置
  storage:
    etcd:
      endpoints: []
  secret:
    autoGenerate: true
    #bcs server cert
    bcsServerCerts: bcs-server-certs
    #bcs client cert
    bcsClientCerts: bcs-client-certs
    #bcs client cert without encrypted
    bcsClientCertsWithoutEncrypted: bcs-client-certs-without-encrypted
    #etcd registry cert
    etcdCerts: bcs-etcd-certs
    #gateway https cert
    bcsGatewayCerts: bcs-gateway-certs

# etcd 依赖配置
storage:
  etcd:
    endpoints: []

replicaCount: 1

image:
  registry:
  repository:
  tag:
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "bcs-bscp"

ui:
  replicaCount: 1

apiserver:
  replicaCount: 1

authserver:
  replicaCount: 1

cacheservice:
  replicaCount: 1

configserver:
  replicaCount: 1

dataservice:
  replicaCount: 1

feedserver:
  replicaCount: 1

sidecar:
  replicaCount: 1

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

config:
  service:
    etcd:
      endpoints:
        - bcs-etcd:2379
      tls:
        certFile:
        keyFile:
        caFile:

  sharding:
    adminDatabase:
      endpoints: 127.0.0.1:3306
      database:
      user:
      password:
    maxSlowLogLatencyMS: 200
    limiter:
      qps: 500
      burst: 500

  redisCluster:
    endpoints:
      - bcs-services-stack-redis-master:6379
    password:
    db: 1

ui_config:
  base_conf:
    app_code: ""
    app_secret: ""
    time_zone: Asia/Shanghai
    language_code: en
    run_env: prod

  bcs_conf:
    host: ""
    token: ""
    jwt_public_key: ""

  web:
    route_prefix: /bscp/ui
    host: ""
    preferred_domains: ""

  etcd:
    endpoints: bcs-etcd.bcs-system.svc.cluster.local:2379
    ca: ""
    cert: ""
    key: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
